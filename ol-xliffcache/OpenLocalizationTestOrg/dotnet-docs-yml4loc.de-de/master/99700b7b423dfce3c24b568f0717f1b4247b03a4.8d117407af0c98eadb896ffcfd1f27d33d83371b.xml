{"nodes":[{"content":"Directs tracing or debugging output to a text writer, such as a stream writer, or to a stream, such as a file stream.","nodes":[{"pos":[0,117],"content":"Directs tracing or debugging output to a text writer, such as a stream writer, or to a stream, such as a file stream.","nodes":[{"content":"Directs tracing or debugging output to a text writer, such as a stream writer, or to a stream, such as a file stream.","pos":[0,117]}]}],"pos":[1821,1939],"yaml":true},{"content":"The trace output is in a delimited text format that uses the delimiter specified by the <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> property. The delimiter is used to terminate each field in a line of output. For example, to display the trace output in a Microsoft Excel spreadsheet, you might specify a comma (\",\") as a delimiter and create a comma-separated value (CSV) file.  \n  \n> [!IMPORTANT]\n>  <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a`try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic.  \n  \n You can enable or disable a <xref:System.Diagnostics.DelimitedListTraceListener> through the application configuration file and then use the configured <xref:System.Diagnostics.DelimitedListTraceListener> in your application. Alternately, you can create a <xref:System.Diagnostics.DelimitedListTraceListener> in your code.  \n  \n> [!NOTE]\n>  The <xref:System.Diagnostics.DelimitedListTraceListener> delimits only text that is emitted by using the methods that have names starting with the word `Trace`, such as <xref:System.Diagnostics.DelimitedListTraceListener.TraceEvent%2A?displayProperty=fullName> or <xref:System.Diagnostics.Trace.TraceWarning%2A?displayProperty=fullName>. Trace data that is emitted by using the <xref:System.Diagnostics.Debug.Write%2A?displayProperty=fullName> and <xref:System.Diagnostics.TextWriterTraceListener.WriteLine%2A?displayProperty=fullName> methods is not delimited.  \n  \n To configure a <xref:System.Diagnostics.DelimitedListTraceListener>, edit the configuration file that corresponds to the name of your application. In this file, you can add a listener, set the properties for a listener, or remove a listener. The configuration file should be formatted as shown in the following example:  \n  \n```  \n<configuration>  \n  <system.diagnostics>  \n    <trace autoflush=\"false\" indentsize=\"4\">  \n      <listeners>  \n        <add name=\"delimitedListener\"   \n          type=\"System.Diagnostics.DelimitedListTraceListener\"   \n          delimiter=\",\"   \n          initializeData=\"delimitedOutput.csv\"   \n          traceOutputOptions=\"ProcessId, DateTime\" />  \n      </listeners>  \n    </trace>  \n  </system.diagnostics>  \n</configuration>  \n```  \n  \n> [!NOTE]\n>  If you try to write to a file that is in use or unavailable, the file name is automatically prefixed by a GUID.  \n  \n> [!NOTE]\n>  Listeners are intended to be used by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace information. Listener methods, except for constructors, should not be called directly from application code.","nodes":[{"pos":[0,399],"content":"The trace output is in a delimited text format that uses the delimiter specified by the <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> property. The delimiter is used to terminate each field in a line of output. For example, to display the trace output in a Microsoft Excel spreadsheet, you might specify a comma (\",\") as a delimiter and create a comma-separated value (CSV) file.","nodes":[{"content":"The trace output is in a delimited text format that uses the delimiter specified by the <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> property. The delimiter is used to terminate each field in a line of output. For example, to display the trace output in a Microsoft Excel spreadsheet, you might specify a comma (\",\") as a delimiter and create a comma-separated value (CSV) file.","pos":[0,399],"nodes":[{"content":"The trace output is in a delimited text format that uses the delimiter specified by the <ph id=\"ph1\">&lt;xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A&gt;</ph> property.","pos":[0,163],"source":"The trace output is in a delimited text format that uses the delimiter specified by the <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> property."},{"content":"The delimiter is used to terminate each field in a line of output.","pos":[164,230]},{"content":"For example, to display the trace output in a Microsoft Excel spreadsheet, you might specify a comma (\",\") as a delimiter and create a comma-separated value (CSV) file.","pos":[231,399]}]}]},{"pos":[407,907],"content":"[!IMPORTANT]\n <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a`try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic.","leadings":["","> "],"nodes":[{"content":" <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a`try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic.","pos":[13,498],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.IDisposable&gt;</ph> interface.","pos":[1,37],"source":" <xref:System.IDisposable> interface."},{"content":"When you have finished using the type, you should dispose of it either directly or indirectly.","pos":[38,132]},{"content":"To dispose of the type directly, call its <ph id=\"ph1\">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method in a<ph id=\"ph2\">`try`</ph><ph id=\"ph3\">/</ph><ph id=\"ph4\">`catch`</ph> block.","pos":[133,243],"source":" To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a`try`/`catch` block."},{"content":"To dispose of it indirectly, use a language construct such as <ph id=\"ph1\">`using`</ph> (in C#) or <ph id=\"ph2\">`Using`</ph> (in Visual Basic).","pos":[244,351],"source":" To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic)."},{"content":"For more information, see the \"Using an Object that Implements IDisposable\" section in the <ph id=\"ph1\">&lt;xref:System.IDisposable&gt;</ph> interface topic.","pos":[352,485],"source":" For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic."}]}]},{"pos":[914,1236],"content":"You can enable or disable a <xref:System.Diagnostics.DelimitedListTraceListener> through the application configuration file and then use the configured <xref:System.Diagnostics.DelimitedListTraceListener> in your application. Alternately, you can create a <xref:System.Diagnostics.DelimitedListTraceListener> in your code.","nodes":[{"content":"You can enable or disable a <xref:System.Diagnostics.DelimitedListTraceListener> through the application configuration file and then use the configured <xref:System.Diagnostics.DelimitedListTraceListener> in your application. Alternately, you can create a <xref:System.Diagnostics.DelimitedListTraceListener> in your code.","pos":[0,322],"nodes":[{"content":"You can enable or disable a <ph id=\"ph1\">&lt;xref:System.Diagnostics.DelimitedListTraceListener&gt;</ph> through the application configuration file and then use the configured <ph id=\"ph2\">&lt;xref:System.Diagnostics.DelimitedListTraceListener&gt;</ph> in your application.","pos":[0,225],"source":"You can enable or disable a <xref:System.Diagnostics.DelimitedListTraceListener> through the application configuration file and then use the configured <xref:System.Diagnostics.DelimitedListTraceListener> in your application."},{"content":"Alternately, you can create a <ph id=\"ph1\">&lt;xref:System.Diagnostics.DelimitedListTraceListener&gt;</ph> in your code.","pos":[226,322],"source":" Alternately, you can create a <xref:System.Diagnostics.DelimitedListTraceListener> in your code."}]}]},{"pos":[1244,1816],"content":"[!NOTE]\n The <xref:System.Diagnostics.DelimitedListTraceListener> delimits only text that is emitted by using the methods that have names starting with the word `Trace`, such as <xref:System.Diagnostics.DelimitedListTraceListener.TraceEvent%2A?displayProperty=fullName> or <xref:System.Diagnostics.Trace.TraceWarning%2A?displayProperty=fullName>. Trace data that is emitted by using the <xref:System.Diagnostics.Debug.Write%2A?displayProperty=fullName> and <xref:System.Diagnostics.TextWriterTraceListener.WriteLine%2A?displayProperty=fullName> methods is not delimited.","leadings":["","> "],"nodes":[{"content":" The <xref:System.Diagnostics.DelimitedListTraceListener> delimits only text that is emitted by using the methods that have names starting with the word `Trace`, such as <xref:System.Diagnostics.DelimitedListTraceListener.TraceEvent%2A?displayProperty=fullName> or <xref:System.Diagnostics.Trace.TraceWarning%2A?displayProperty=fullName>. Trace data that is emitted by using the <xref:System.Diagnostics.Debug.Write%2A?displayProperty=fullName> and <xref:System.Diagnostics.TextWriterTraceListener.WriteLine%2A?displayProperty=fullName> methods is not delimited.","pos":[8,570],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Diagnostics.DelimitedListTraceListener&gt;</ph> delimits only text that is emitted by using the methods that have names starting with the word <ph id=\"ph2\">`Trace`</ph>, such as <ph id=\"ph3\">&lt;xref:System.Diagnostics.DelimitedListTraceListener.TraceEvent%2A?displayProperty=fullName&gt;</ph> or <ph id=\"ph4\">&lt;xref:System.Diagnostics.Trace.TraceWarning%2A?displayProperty=fullName&gt;</ph>.","pos":[1,338],"source":" The <xref:System.Diagnostics.DelimitedListTraceListener> delimits only text that is emitted by using the methods that have names starting with the word `Trace`, such as <xref:System.Diagnostics.DelimitedListTraceListener.TraceEvent%2A?displayProperty=fullName> or <xref:System.Diagnostics.Trace.TraceWarning%2A?displayProperty=fullName>."},{"content":"Trace data that is emitted by using the <ph id=\"ph1\">&lt;xref:System.Diagnostics.Debug.Write%2A?displayProperty=fullName&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Diagnostics.TextWriterTraceListener.WriteLine%2A?displayProperty=fullName&gt;</ph> methods is not delimited.","pos":[339,562],"source":" Trace data that is emitted by using the <xref:System.Diagnostics.Debug.Write%2A?displayProperty=fullName> and <xref:System.Diagnostics.TextWriterTraceListener.WriteLine%2A?displayProperty=fullName> methods is not delimited."}]}]},{"pos":[1823,2142],"content":"To configure a <xref:System.Diagnostics.DelimitedListTraceListener>, edit the configuration file that corresponds to the name of your application. In this file, you can add a listener, set the properties for a listener, or remove a listener. The configuration file should be formatted as shown in the following example:","nodes":[{"content":"To configure a <xref:System.Diagnostics.DelimitedListTraceListener>, edit the configuration file that corresponds to the name of your application. In this file, you can add a listener, set the properties for a listener, or remove a listener. The configuration file should be formatted as shown in the following example:","pos":[0,319],"nodes":[{"content":"To configure a <ph id=\"ph1\">&lt;xref:System.Diagnostics.DelimitedListTraceListener&gt;</ph>, edit the configuration file that corresponds to the name of your application.","pos":[0,146],"source":"To configure a <xref:System.Diagnostics.DelimitedListTraceListener>, edit the configuration file that corresponds to the name of your application."},{"content":"In this file, you can add a listener, set the properties for a listener, or remove a listener.","pos":[147,241]},{"content":"The configuration file should be formatted as shown in the following example:","pos":[242,319]}]}]},{"pos":[2596,2718],"content":"[!NOTE]\n If you try to write to a file that is in use or unavailable, the file name is automatically prefixed by a GUID.","leadings":["","> "],"nodes":[{"content":"If you try to write to a file that is in use or unavailable, the file name is automatically prefixed by a GUID.","pos":[9,120]}]},{"pos":[2726,3028],"content":"[!NOTE]\n Listeners are intended to be used by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace information. Listener methods, except for constructors, should not be called directly from application code.","leadings":["","> "],"nodes":[{"content":" Listeners are intended to be used by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace information. Listener methods, except for constructors, should not be called directly from application code.","pos":[8,300],"nodes":[{"content":"Listeners are intended to be used by methods of the <ph id=\"ph1\">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Diagnostics.Trace&gt;</ph>, and <ph id=\"ph3\">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes to write trace information.","pos":[1,196],"source":" Listeners are intended to be used by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace information."},{"content":"Listener methods, except for constructors, should not be called directly from application code.","pos":[197,292]}]}]}],"pos":[1950,5031],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Diagnostics.DelimitedListTraceListener\"></xref> class that writes to the specified output stream.","nodes":[{"pos":[0,150],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.DelimitedListTraceListener\"&gt;&lt;/xref&gt;</ph> class that writes to the specified output stream.","source":"Initializes a new instance of the <xref href=\"System.Diagnostics.DelimitedListTraceListener\"></xref> class that writes to the specified output stream."}],"pos":[8667,8818],"yaml":true},{"content":"This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to an empty string (\"\").","nodes":[{"pos":[0,114],"content":"This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to an empty string (\"\").","nodes":[{"content":"This constructor initializes the <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;</ph> property to an empty string (\"\").","pos":[0,114],"source":"This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to an empty string (\"\")."}]}],"pos":[8829,8944],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.IO.Stream\"></xref> to receive the output.","nodes":[{"pos":[0,64],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> to receive the output.","source":"The <xref href=\"System.IO.Stream\"></xref> to receive the output."}],"pos":[9109,9174],"yaml":true},{"content":"<code>stream</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;stream&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>stream</code> is `null`."}],"pos":[9355,9386],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Diagnostics.DelimitedListTraceListener\"></xref> class that writes to the specified text writer.","nodes":[{"pos":[0,148],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.DelimitedListTraceListener\"&gt;&lt;/xref&gt;</ph> class that writes to the specified text writer.","source":"Initializes a new instance of the <xref href=\"System.Diagnostics.DelimitedListTraceListener\"></xref> class that writes to the specified text writer."}],"pos":[10829,10978],"yaml":true},{"content":"This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to an empty string (\"\").","nodes":[{"pos":[0,114],"content":"This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to an empty string (\"\").","nodes":[{"content":"This constructor initializes the <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;</ph> property to an empty string (\"\").","pos":[0,114],"source":"This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to an empty string (\"\")."}]}],"pos":[10989,11104],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.IO.TextWriter\"></xref> to receive the output.","nodes":[{"pos":[0,68],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IO.TextWriter\"&gt;&lt;/xref&gt;</ph> to receive the output.","source":"The <xref href=\"System.IO.TextWriter\"></xref> to receive the output."}],"pos":[11277,11346],"yaml":true},{"content":"<code>writer</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;writer&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>writer</code> is `null`."}],"pos":[11527,11558],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Diagnostics.DelimitedListTraceListener\"></xref> class that writes to the specified file.","nodes":[{"pos":[0,141],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.DelimitedListTraceListener\"&gt;&lt;/xref&gt;</ph> class that writes to the specified file.","source":"Initializes a new instance of the <xref href=\"System.Diagnostics.DelimitedListTraceListener\"></xref> class that writes to the specified file."}],"pos":[12968,13110],"yaml":true},{"content":"This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to an empty string (\"\").","nodes":[{"pos":[0,114],"content":"This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to an empty string (\"\").","nodes":[{"content":"This constructor initializes the <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;</ph> property to an empty string (\"\").","pos":[0,114],"source":"This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to an empty string (\"\")."}]}],"pos":[13121,13236],"yaml":true,"extradata":"MT"},{"content":"The name of the file to receive the output.","nodes":[{"pos":[0,43],"content":"The name of the file to receive the output.","nodes":[{"content":"The name of the file to receive the output.","pos":[0,43]}]}],"pos":[13392,13436],"yaml":true},{"content":"<code>fileName</code> is `null`.","nodes":[{"pos":[0,32],"content":"<ph id=\"ph1\">&lt;code&gt;fileName&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>fileName</code> is `null`."}],"pos":[13617,13650],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Diagnostics.DelimitedListTraceListener\"></xref> class that writes to the specified output stream and has the specified name.","nodes":[{"pos":[0,177],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.DelimitedListTraceListener\"&gt;&lt;/xref&gt;</ph> class that writes to the specified output stream and has the specified name.","source":"Initializes a new instance of the <xref href=\"System.Diagnostics.DelimitedListTraceListener\"></xref> class that writes to the specified output stream and has the specified name."}],"pos":[15071,15249],"yaml":true},{"content":"This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to the value of the `name` parameter, or to an empty string (\"\") if the `name` parameter is `null`.  The <xref:System.Diagnostics.TraceListener.Name%2A> property can be used as an index into the `Listeners` collection to programmatically change the properties for the listener. For example, the following code sets the <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> property for the instance of <xref:System.Diagnostics.DelimitedListTraceListener> that has the name \"delimListener\":  \n  \n```  \n((DelimitedListTraceListener)Trace.Listeners[\"delimListener\"]).Delimiter = \":\"  \n```","nodes":[{"pos":[0,591],"content":"This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to the value of the `name` parameter, or to an empty string (\"\") if the `name` parameter is `null`.  The <xref:System.Diagnostics.TraceListener.Name%2A> property can be used as an index into the `Listeners` collection to programmatically change the properties for the listener. For example, the following code sets the <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> property for the instance of <xref:System.Diagnostics.DelimitedListTraceListener> that has the name \"delimListener\":","nodes":[{"content":"This constructor initializes the <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;</ph> property to the value of the <ph id=\"ph2\">`name`</ph> parameter, or to an empty string (\"\") if the <ph id=\"ph3\">`name`</ph> parameter is <ph id=\"ph4\">`null`</ph>.","pos":[0,189],"source":"This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to the value of the `name` parameter, or to an empty string (\"\") if the `name` parameter is `null`."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;</ph> property can be used as an index into the <ph id=\"ph2\">`Listeners`</ph> collection to programmatically change the properties for the listener.","pos":[191,367],"source":"  The <xref:System.Diagnostics.TraceListener.Name%2A> property can be used as an index into the `Listeners` collection to programmatically change the properties for the listener."},{"content":"For example, the following code sets the <ph id=\"ph1\">&lt;xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A&gt;</ph> property for the instance of <ph id=\"ph2\">&lt;xref:System.Diagnostics.DelimitedListTraceListener&gt;</ph> that has the name \"delimListener\":","pos":[368,591],"source":" For example, the following code sets the <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> property for the instance of <xref:System.Diagnostics.DelimitedListTraceListener> that has the name \"delimListener\":"}]}],"pos":[15260,15962],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.IO.Stream\"></xref> to receive the output.","nodes":[{"pos":[0,64],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> to receive the output.","source":"The <xref href=\"System.IO.Stream\"></xref> to receive the output."}],"pos":[16140,16205],"yaml":true},{"content":"The name of the new instance of the trace listener.","nodes":[{"pos":[0,51],"content":"The name of the new instance of the trace listener.","nodes":[{"content":"The name of the new instance of the trace listener.","pos":[0,51]}]}],"pos":[16265,16317],"yaml":true},{"content":"<code>stream</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;stream&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>stream</code> is `null`."}],"pos":[16498,16529],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Diagnostics.DelimitedListTraceListener\"></xref> class that writes to the specified text writer and has the specified name.","nodes":[{"pos":[0,175],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.DelimitedListTraceListener\"&gt;&lt;/xref&gt;</ph> class that writes to the specified text writer and has the specified name.","source":"Initializes a new instance of the <xref href=\"System.Diagnostics.DelimitedListTraceListener\"></xref> class that writes to the specified text writer and has the specified name."}],"pos":[18038,18214],"yaml":true},{"content":"This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to the value of the `name` parameter, or to an empty string (\"\") if the `name` parameter is `null`. The <xref:System.Diagnostics.TraceListener.Name%2A> property can be used as an index into the `Listeners` collection to programmatically change the properties for the listener. For example the following code sets the <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> property for the instance of <xref:System.Diagnostics.DelimitedListTraceListener> that has the name \"delimListener\":  \n  \n```  \n((DelimitedListTraceListener)Trace.Listeners[\"delimListener\"]).Delimiter = \":\"  \n```","nodes":[{"pos":[0,589],"content":"This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to the value of the `name` parameter, or to an empty string (\"\") if the `name` parameter is `null`. The <xref:System.Diagnostics.TraceListener.Name%2A> property can be used as an index into the `Listeners` collection to programmatically change the properties for the listener. For example the following code sets the <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> property for the instance of <xref:System.Diagnostics.DelimitedListTraceListener> that has the name \"delimListener\":","nodes":[{"content":"This constructor initializes the <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;</ph> property to the value of the <ph id=\"ph2\">`name`</ph> parameter, or to an empty string (\"\") if the <ph id=\"ph3\">`name`</ph> parameter is <ph id=\"ph4\">`null`</ph>.","pos":[0,189],"source":"This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to the value of the `name` parameter, or to an empty string (\"\") if the `name` parameter is `null`."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;</ph> property can be used as an index into the <ph id=\"ph2\">`Listeners`</ph> collection to programmatically change the properties for the listener.","pos":[190,366],"source":" The <xref:System.Diagnostics.TraceListener.Name%2A> property can be used as an index into the `Listeners` collection to programmatically change the properties for the listener."},{"content":"For example the following code sets the <ph id=\"ph1\">&lt;xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A&gt;</ph> property for the instance of <ph id=\"ph2\">&lt;xref:System.Diagnostics.DelimitedListTraceListener&gt;</ph> that has the name \"delimListener\":","pos":[367,589],"source":" For example the following code sets the <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> property for the instance of <xref:System.Diagnostics.DelimitedListTraceListener> that has the name \"delimListener\":"}]}],"pos":[18225,18925],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.IO.TextWriter\"></xref> to receive the output.","nodes":[{"pos":[0,68],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IO.TextWriter\"&gt;&lt;/xref&gt;</ph> to receive the output.","source":"The <xref href=\"System.IO.TextWriter\"></xref> to receive the output."}],"pos":[19111,19180],"yaml":true},{"content":"The name of the new instance of the trace listener.","nodes":[{"pos":[0,51],"content":"The name of the new instance of the trace listener.","nodes":[{"content":"The name of the new instance of the trace listener.","pos":[0,51]}]}],"pos":[19240,19292],"yaml":true},{"content":"<code>writer</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;writer&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>writer</code> is `null`."}],"pos":[19473,19504],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Diagnostics.DelimitedListTraceListener\"></xref> class that writes to the specified file and has the specified name.","nodes":[{"pos":[0,168],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.DelimitedListTraceListener\"&gt;&lt;/xref&gt;</ph> class that writes to the specified file and has the specified name.","source":"Initializes a new instance of the <xref href=\"System.Diagnostics.DelimitedListTraceListener\"></xref> class that writes to the specified file and has the specified name."}],"pos":[20980,21149],"yaml":true},{"content":"This constructor initializes a new instance of the <xref:System.IO.StreamWriter> class for the specified file on the specified path, using <xref:System.Text.Encoding.UTF8%2A> encoding. If the file exists, it is appended to. If the file does not exist, a new file is created.  \n  \n> [!NOTE]\n>  To reduce the chance of an exception, any character that might invalidate the output is replaced with a \"?\" character.  \n  \n The <xref:System.Diagnostics.TraceListener.Name%2A> property is set to the value of the `name` parameter, or to an empty string (\"\") if the `name` parameter is `null`. The <xref:System.Diagnostics.TraceListener.Name%2A> property can be used as an index into the `Listeners` collection to programmatically change the properties for the listener. For example, the following code sets the <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> property for the instance of <xref:System.Diagnostics.DelimitedListTraceListener> that has the name \"delimListener\":  \n  \n```  \n((DelimitedListTraceListener)Trace.Listeners[\"delimListener\"]).Delimiter = \":\"  \n```","nodes":[{"pos":[0,274],"content":"This constructor initializes a new instance of the <xref:System.IO.StreamWriter> class for the specified file on the specified path, using <xref:System.Text.Encoding.UTF8%2A> encoding. If the file exists, it is appended to. If the file does not exist, a new file is created.","nodes":[{"content":"This constructor initializes a new instance of the <xref:System.IO.StreamWriter> class for the specified file on the specified path, using <xref:System.Text.Encoding.UTF8%2A> encoding. If the file exists, it is appended to. If the file does not exist, a new file is created.","pos":[0,274],"nodes":[{"content":"This constructor initializes a new instance of the <ph id=\"ph1\">&lt;xref:System.IO.StreamWriter&gt;</ph> class for the specified file on the specified path, using <ph id=\"ph2\">&lt;xref:System.Text.Encoding.UTF8%2A&gt;</ph> encoding.","pos":[0,184],"source":"This constructor initializes a new instance of the <xref:System.IO.StreamWriter> class for the specified file on the specified path, using <xref:System.Text.Encoding.UTF8%2A> encoding."},{"content":"If the file exists, it is appended to.","pos":[185,223]},{"content":"If the file does not exist, a new file is created.","pos":[224,274]}]}]},{"pos":[282,411],"content":"[!NOTE]\n To reduce the chance of an exception, any character that might invalidate the output is replaced with a \"?\" character.","leadings":["","> "],"nodes":[{"content":"To reduce the chance of an exception, any character that might invalidate the output is replaced with a \"?\" character.","pos":[9,127]}]},{"pos":[418,986],"content":"The <xref:System.Diagnostics.TraceListener.Name%2A> property is set to the value of the `name` parameter, or to an empty string (\"\") if the `name` parameter is `null`. The <xref:System.Diagnostics.TraceListener.Name%2A> property can be used as an index into the `Listeners` collection to programmatically change the properties for the listener. For example, the following code sets the <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> property for the instance of <xref:System.Diagnostics.DelimitedListTraceListener> that has the name \"delimListener\":","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;</ph> property is set to the value of the <ph id=\"ph2\">`name`</ph> parameter, or to an empty string (\"\") if the <ph id=\"ph3\">`name`</ph> parameter is <ph id=\"ph4\">`null`</ph>.","pos":[0,167],"source":"The <xref:System.Diagnostics.TraceListener.Name%2A> property is set to the value of the `name` parameter, or to an empty string (\"\") if the `name` parameter is `null`."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;</ph> property can be used as an index into the <ph id=\"ph2\">`Listeners`</ph> collection to programmatically change the properties for the listener.","pos":[168,344],"source":" The <xref:System.Diagnostics.TraceListener.Name%2A> property can be used as an index into the `Listeners` collection to programmatically change the properties for the listener."},{"content":"For example, the following code sets the <ph id=\"ph1\">&lt;xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A&gt;</ph> property for the instance of <ph id=\"ph2\">&lt;xref:System.Diagnostics.DelimitedListTraceListener&gt;</ph> that has the name \"delimListener\":","pos":[345,568],"source":" For example, the following code sets the <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> property for the instance of <xref:System.Diagnostics.DelimitedListTraceListener> that has the name \"delimListener\":"}]}],"pos":[21160,22264],"yaml":true,"extradata":"MT"},{"content":"The name of the file to receive the output.","nodes":[{"pos":[0,43],"content":"The name of the file to receive the output.","nodes":[{"content":"The name of the file to receive the output.","pos":[0,43]}]}],"pos":[22433,22477],"yaml":true},{"content":"The name of the new instance of the trace listener.","nodes":[{"pos":[0,51],"content":"The name of the new instance of the trace listener.","nodes":[{"content":"The name of the new instance of the trace listener.","pos":[0,51]}]}],"pos":[22537,22589],"yaml":true},{"content":"<code>fileName</code> is `null`.","nodes":[{"pos":[0,32],"content":"<ph id=\"ph1\">&lt;code&gt;fileName&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>fileName</code> is `null`."}],"pos":[22770,22803],"yaml":true},{"content":"Gets or sets the delimiter for the delimited list.","nodes":[{"pos":[0,50],"content":"Gets or sets the delimiter for the delimited list.","nodes":[{"content":"Gets or sets the delimiter for the delimited list.","pos":[0,50]}]}],"pos":[24036,24087],"yaml":true},{"content":"The default delimiter is \";\" (semicolon). The following configuration file example shows the setting of the <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> property using the `delimiter` attribute in a configuration file:  \n  \n```  \n<configuration>  \n  <system.diagnostics>  \n    <trace autoflush=\"false\" indentsize=\"4\">  \n      <listeners>  \n        <add name=\"delimitedListener\"   \n          type=\"System.Diagnostics.DelimitedListTraceListener\"   \n          delimiter=\":\"   \n          initializeData=\"delimitedOutput.txt\"   \n          traceOutputOptions=\"ProcessId, DateTime\" />  \n        <remove name=\"Default\" />  \n      </listeners>  \n    </trace>  \n  </system.diagnostics>  \n</configuration>  \n  \n```","nodes":[{"pos":[0,239],"content":"The default delimiter is \";\" (semicolon). The following configuration file example shows the setting of the <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> property using the `delimiter` attribute in a configuration file:","nodes":[{"content":"The default delimiter is \";\" (semicolon).","pos":[0,41]},{"content":"The following configuration file example shows the setting of the <ph id=\"ph1\">&lt;xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A&gt;</ph> property using the <ph id=\"ph2\">`delimiter`</ph> attribute in a configuration file:","pos":[42,239],"source":" The following configuration file example shows the setting of the <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> property using the `delimiter` attribute in a configuration file:"}]}],"pos":[24098,24861],"yaml":true,"extradata":"MT"},{"content":"The delimiter for the delimited list.","nodes":[{"pos":[0,37],"content":"The delimiter for the delimited list.","nodes":[{"content":"The delimiter for the delimited list.","pos":[0,37]}]}],"pos":[24979,25017],"yaml":true},{"content":"<xref href=\"System.Diagnostics.DelimitedListTraceListener.Delimiter\"></xref> is set to `null`.","nodes":[{"pos":[0,94],"content":"<ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.DelimitedListTraceListener.Delimiter\"&gt;&lt;/xref&gt;</ph> is set to <ph id=\"ph2\">`null`</ph>.","source":"<xref href=\"System.Diagnostics.DelimitedListTraceListener.Delimiter\"></xref> is set to `null`."}],"pos":[25202,25297],"yaml":true},{"content":"<xref href=\"System.Diagnostics.DelimitedListTraceListener.Delimiter\"></xref> is set to an empty string (\"\").","nodes":[{"pos":[0,108],"content":"<ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.DelimitedListTraceListener.Delimiter\"&gt;&lt;/xref&gt;</ph> is set to an empty string (\"\").","source":"<xref href=\"System.Diagnostics.DelimitedListTraceListener.Delimiter\"></xref> is set to an empty string (\"\")."}],"pos":[25391,25500],"yaml":true},{"content":"Returns the custom configuration file attribute supported by the delimited trace listener.","nodes":[{"pos":[0,90],"content":"Returns the custom configuration file attribute supported by the delimited trace listener.","nodes":[{"content":"Returns the custom configuration file attribute supported by the delimited trace listener.","pos":[0,90]}]}],"pos":[26879,26970],"yaml":true},{"content":"A custom attribute is an attribute that is not inherited from the base class that can be used to set a property for the class. The custom attribute for <xref:System.Diagnostics.DelimitedListTraceListener> is used to set the <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> property. The following configuration file example shows the use of the `delimiter` attribute to set the <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> property:  \n  \n```  \n<configuration>  \n  <system.diagnostics>  \n    <trace autoflush=\"false\" indentsize=\"4\">  \n      <listeners>  \n        <add name=\"delimitedListener\"   \n          type=\"System.Diagnostics.DelimitedListTraceListener\"   \n          delimiter=\":\"   \n          initializeData=\"delimitedOutput.txt\"   \n          traceOutputOptions=\"ProcessId, DateTime\" />  \n        <remove name=\"Default\" />  \n      </listeners>  \n    </trace>  \n  </system.diagnostics>  \n</configuration>  \n```","nodes":[{"pos":[0,470],"content":"A custom attribute is an attribute that is not inherited from the base class that can be used to set a property for the class. The custom attribute for <xref:System.Diagnostics.DelimitedListTraceListener> is used to set the <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> property. The following configuration file example shows the use of the `delimiter` attribute to set the <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> property:","nodes":[{"content":"A custom attribute is an attribute that is not inherited from the base class that can be used to set a property for the class.","pos":[0,126]},{"content":"The custom attribute for <ph id=\"ph1\">&lt;xref:System.Diagnostics.DelimitedListTraceListener&gt;</ph> is used to set the <ph id=\"ph2\">&lt;xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A&gt;</ph> property.","pos":[127,299],"source":" The custom attribute for <xref:System.Diagnostics.DelimitedListTraceListener> is used to set the <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> property."},{"content":"The following configuration file example shows the use of the <ph id=\"ph1\">`delimiter`</ph> attribute to set the <ph id=\"ph2\">&lt;xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A&gt;</ph> property:","pos":[300,470],"source":" The following configuration file example shows the use of the `delimiter` attribute to set the <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> property:"}]}],"pos":[26981,27969],"yaml":true,"extradata":"MT"},{"content":"A string array that contains the single value \"delimiter\".","nodes":[{"pos":[0,58],"content":"A string array that contains the single value \"delimiter\".","nodes":[{"content":"A string array that contains the single value \"delimiter\".","pos":[0,58]}]}],"pos":[28125,28184],"yaml":true},{"content":"Writes trace information, a data object, and event information to the output file or stream.","nodes":[{"pos":[0,92],"content":"Writes trace information, a data object, and event information to the output file or stream.","nodes":[{"content":"Writes trace information, a data object, and event information to the output file or stream.","pos":[0,92]}]}],"pos":[30015,30108],"yaml":true},{"content":"The values of the `source`, `eventType`, and `id` parameters are written as a header. The data object is converted to a string using the `ToString` method of the object. The `eventCache` data is written as a footer whose content depends on the value of the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.  \n  \n> [!IMPORTANT]\n>  The <xref:System.Diagnostics.DelimitedListTraceListener.TraceData%2A> method is not intended to be called by application code. It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.","nodes":[{"pos":[0,328],"content":"The values of the `source`, `eventType`, and `id` parameters are written as a header. The data object is converted to a string using the `ToString` method of the object. The `eventCache` data is written as a footer whose content depends on the value of the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.","nodes":[{"content":"The values of the <ph id=\"ph1\">`source`</ph>, <ph id=\"ph2\">`eventType`</ph>, and <ph id=\"ph3\">`id`</ph> parameters are written as a header.","pos":[0,85],"source":"The values of the `source`, `eventType`, and `id` parameters are written as a header."},{"content":"The data object is converted to a string using the <ph id=\"ph1\">`ToString`</ph> method of the object.","pos":[86,169],"source":" The data object is converted to a string using the `ToString` method of the object."},{"content":"The <ph id=\"ph1\">`eventCache`</ph> data is written as a footer whose content depends on the value of the <ph id=\"ph2\">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.","pos":[170,328],"source":" The `eventCache` data is written as a footer whose content depends on the value of the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property."}]},{"pos":[336,646],"content":"[!IMPORTANT]\n The <xref:System.Diagnostics.DelimitedListTraceListener.TraceData%2A> method is not intended to be called by application code. It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.","leadings":["","> "],"nodes":[{"content":" The <xref:System.Diagnostics.DelimitedListTraceListener.TraceData%2A> method is not intended to be called by application code. It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.","pos":[13,308],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Diagnostics.DelimitedListTraceListener.TraceData%2A&gt;</ph> method is not intended to be called by application code.","pos":[1,127],"source":" The <xref:System.Diagnostics.DelimitedListTraceListener.TraceData%2A> method is not intended to be called by application code."},{"content":"It is called by methods of the <ph id=\"ph1\">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Diagnostics.Trace&gt;</ph>, and <ph id=\"ph3\">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes to write trace data.","pos":[128,295],"source":" It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data."}]}]}],"pos":[30119,30771],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Diagnostics.TraceEventCache\"></xref> object that contains the current process ID, thread ID, and stack trace information.","nodes":[{"pos":[0,142],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TraceEventCache\"&gt;&lt;/xref&gt;</ph> object that contains the current process ID, thread ID, and stack trace information.","source":"A <xref href=\"System.Diagnostics.TraceEventCache\"></xref> object that contains the current process ID, thread ID, and stack trace information."}],"pos":[31058,31201],"yaml":true},{"content":"A name used to identify the output, typically the name of the application that generated the trace event.","nodes":[{"pos":[0,105],"content":"A name used to identify the output, typically the name of the application that generated the trace event.","nodes":[{"content":"A name used to identify the output, typically the name of the application that generated the trace event.","pos":[0,105]}]}],"pos":[31263,31369],"yaml":true},{"content":"One of the <xref href=\"System.Diagnostics.TraceEventType\"></xref> values specifying the type of event that has caused the trace.","nodes":[{"pos":[0,128],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TraceEventType\"&gt;&lt;/xref&gt;</ph> values specifying the type of event that has caused the trace.","source":"One of the <xref href=\"System.Diagnostics.TraceEventType\"></xref> values specifying the type of event that has caused the trace."}],"pos":[31454,31583],"yaml":true},{"content":"A numeric identifier for the event.","nodes":[{"pos":[0,35],"content":"A numeric identifier for the event.","nodes":[{"content":"A numeric identifier for the event.","pos":[0,35]}]}],"pos":[31640,31676],"yaml":true},{"content":"A data object to write to the output file or stream.","nodes":[{"pos":[0,52],"content":"A data object to write to the output file or stream.","nodes":[{"content":"A data object to write to the output file or stream.","pos":[0,52]}]}],"pos":[31736,31789],"yaml":true},{"content":"Writes trace information, an array of data objects, and event information to the output file or stream.","nodes":[{"pos":[0,103],"content":"Writes trace information, an array of data objects, and event information to the output file or stream.","nodes":[{"content":"Writes trace information, an array of data objects, and event information to the output file or stream.","pos":[0,103]}]}],"pos":[33683,33787],"yaml":true},{"content":"The values of the `source`, `eventType`, and `id` parameters are written as a header. The data objects are converted to strings using the `ToString` method of each object. The `eventCache` data is written as a footer whose content depends on the value of the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.  \n  \n> [!IMPORTANT]\n>  The <xref:System.Diagnostics.DelimitedListTraceListener.TraceData%2A> method is not intended to be called by application code. It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.","nodes":[{"pos":[0,330],"content":"The values of the `source`, `eventType`, and `id` parameters are written as a header. The data objects are converted to strings using the `ToString` method of each object. The `eventCache` data is written as a footer whose content depends on the value of the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.","nodes":[{"content":"The values of the <ph id=\"ph1\">`source`</ph>, <ph id=\"ph2\">`eventType`</ph>, and <ph id=\"ph3\">`id`</ph> parameters are written as a header.","pos":[0,85],"source":"The values of the `source`, `eventType`, and `id` parameters are written as a header."},{"content":"The data objects are converted to strings using the <ph id=\"ph1\">`ToString`</ph> method of each object.","pos":[86,171],"source":" The data objects are converted to strings using the `ToString` method of each object."},{"content":"The <ph id=\"ph1\">`eventCache`</ph> data is written as a footer whose content depends on the value of the <ph id=\"ph2\">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.","pos":[172,330],"source":" The `eventCache` data is written as a footer whose content depends on the value of the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property."}]},{"pos":[338,648],"content":"[!IMPORTANT]\n The <xref:System.Diagnostics.DelimitedListTraceListener.TraceData%2A> method is not intended to be called by application code. It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.","leadings":["","> "],"nodes":[{"content":" The <xref:System.Diagnostics.DelimitedListTraceListener.TraceData%2A> method is not intended to be called by application code. It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.","pos":[13,308],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Diagnostics.DelimitedListTraceListener.TraceData%2A&gt;</ph> method is not intended to be called by application code.","pos":[1,127],"source":" The <xref:System.Diagnostics.DelimitedListTraceListener.TraceData%2A> method is not intended to be called by application code."},{"content":"It is called by methods of the <ph id=\"ph1\">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Diagnostics.Trace&gt;</ph>, and <ph id=\"ph3\">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes to write trace data.","pos":[128,295],"source":" It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data."}]}]}],"pos":[33798,34452],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Diagnostics.TraceEventCache\"></xref> object that contains the current process ID, thread ID, and stack trace information.","nodes":[{"pos":[0,142],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TraceEventCache\"&gt;&lt;/xref&gt;</ph> object that contains the current process ID, thread ID, and stack trace information.","source":"A <xref href=\"System.Diagnostics.TraceEventCache\"></xref> object that contains the current process ID, thread ID, and stack trace information."}],"pos":[34741,34884],"yaml":true},{"content":"A name used to identify the output, typically the name of the application that generated the trace event.","nodes":[{"pos":[0,105],"content":"A name used to identify the output, typically the name of the application that generated the trace event.","nodes":[{"content":"A name used to identify the output, typically the name of the application that generated the trace event.","pos":[0,105]}]}],"pos":[34946,35052],"yaml":true},{"content":"One of the <xref href=\"System.Diagnostics.TraceEventType\"></xref> values specifying the type of event that has caused the trace.","nodes":[{"pos":[0,128],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TraceEventType\"&gt;&lt;/xref&gt;</ph> values specifying the type of event that has caused the trace.","source":"One of the <xref href=\"System.Diagnostics.TraceEventType\"></xref> values specifying the type of event that has caused the trace."}],"pos":[35137,35266],"yaml":true},{"content":"A numeric identifier for the event.","nodes":[{"pos":[0,35],"content":"A numeric identifier for the event.","nodes":[{"content":"A numeric identifier for the event.","pos":[0,35]}]}],"pos":[35323,35359],"yaml":true},{"content":"An array of data objects to write to the output file or stream.","nodes":[{"pos":[0,63],"content":"An array of data objects to write to the output file or stream.","nodes":[{"content":"An array of data objects to write to the output file or stream.","pos":[0,63]}]}],"pos":[35421,35485],"yaml":true},{"content":"Writes trace information, a message, and event information to the output file or stream.","nodes":[{"pos":[0,88],"content":"Writes trace information, a message, and event information to the output file or stream.","nodes":[{"content":"Writes trace information, a message, and event information to the output file or stream.","pos":[0,88]}]}],"pos":[37373,37462],"yaml":true},{"content":"The values of the `source`, `eventType`, and `id` parameters are written as a header, followed by the `message` data. The `eventCache` data is written as a footer whose content depends on the value of the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.  \n  \n> [!IMPORTANT]\n>  The <xref:System.Diagnostics.DelimitedListTraceListener.TraceEvent%2A> method is not intended to be called by application code. It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.","nodes":[{"pos":[0,276],"content":"The values of the `source`, `eventType`, and `id` parameters are written as a header, followed by the `message` data. The `eventCache` data is written as a footer whose content depends on the value of the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.","nodes":[{"content":"The values of the <ph id=\"ph1\">`source`</ph>, <ph id=\"ph2\">`eventType`</ph>, and <ph id=\"ph3\">`id`</ph> parameters are written as a header, followed by the <ph id=\"ph4\">`message`</ph> data.","pos":[0,117],"source":"The values of the `source`, `eventType`, and `id` parameters are written as a header, followed by the `message` data."},{"content":"The <ph id=\"ph1\">`eventCache`</ph> data is written as a footer whose content depends on the value of the <ph id=\"ph2\">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.","pos":[118,276],"source":" The `eventCache` data is written as a footer whose content depends on the value of the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property."}]},{"pos":[284,595],"content":"[!IMPORTANT]\n The <xref:System.Diagnostics.DelimitedListTraceListener.TraceEvent%2A> method is not intended to be called by application code. It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.","leadings":["","> "],"nodes":[{"content":" The <xref:System.Diagnostics.DelimitedListTraceListener.TraceEvent%2A> method is not intended to be called by application code. It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.","pos":[13,309],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Diagnostics.DelimitedListTraceListener.TraceEvent%2A&gt;</ph> method is not intended to be called by application code.","pos":[1,128],"source":" The <xref:System.Diagnostics.DelimitedListTraceListener.TraceEvent%2A> method is not intended to be called by application code."},{"content":"It is called by methods of the <ph id=\"ph1\">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Diagnostics.Trace&gt;</ph>, and <ph id=\"ph3\">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes to write trace data.","pos":[129,296],"source":" It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data."}]}]}],"pos":[37473,38074],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Diagnostics.TraceEventCache\"></xref> object that contains the current process ID, thread ID, and stack trace information.","nodes":[{"pos":[0,142],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TraceEventCache\"&gt;&lt;/xref&gt;</ph> object that contains the current process ID, thread ID, and stack trace information.","source":"A <xref href=\"System.Diagnostics.TraceEventCache\"></xref> object that contains the current process ID, thread ID, and stack trace information."}],"pos":[38365,38508],"yaml":true},{"content":"A name used to identify the output, typically the name of the application that generated the trace event.","nodes":[{"pos":[0,105],"content":"A name used to identify the output, typically the name of the application that generated the trace event.","nodes":[{"content":"A name used to identify the output, typically the name of the application that generated the trace event.","pos":[0,105]}]}],"pos":[38570,38676],"yaml":true},{"content":"One of the <xref href=\"System.Diagnostics.TraceEventType\"></xref> values specifying the type of event that has caused the trace.","nodes":[{"pos":[0,128],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TraceEventType\"&gt;&lt;/xref&gt;</ph> values specifying the type of event that has caused the trace.","source":"One of the <xref href=\"System.Diagnostics.TraceEventType\"></xref> values specifying the type of event that has caused the trace."}],"pos":[38761,38890],"yaml":true},{"content":"A numeric identifier for the event.","nodes":[{"pos":[0,35],"content":"A numeric identifier for the event.","nodes":[{"content":"A numeric identifier for the event.","pos":[0,35]}]}],"pos":[38947,38983],"yaml":true},{"content":"The trace message to write to the output file or stream.","nodes":[{"pos":[0,56],"content":"The trace message to write to the output file or stream.","nodes":[{"content":"The trace message to write to the output file or stream.","pos":[0,56]}]}],"pos":[39046,39103],"yaml":true},{"content":"Writes trace information, a formatted array of objects, and event information to the output file or stream.","nodes":[{"pos":[0,107],"content":"Writes trace information, a formatted array of objects, and event information to the output file or stream.","nodes":[{"content":"Writes trace information, a formatted array of objects, and event information to the output file or stream.","pos":[0,107]}]}],"pos":[41070,41178],"yaml":true},{"content":"The values of the `source`, `eventType`, and `id` parameters are written as a header. The `args` object array is converted to a string using the <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=fullName> method, passing the `format` string and `args` array to format the string as the message portion of the trace. The `eventCache` data is written as a footer whose content depends on the value of the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.  \n  \n> [!IMPORTANT]\n>  The <xref:System.Diagnostics.DelimitedListTraceListener.TraceEvent%2A> method is not intended to be called by application code. It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.","nodes":[{"pos":[0,508],"content":"The values of the `source`, `eventType`, and `id` parameters are written as a header. The `args` object array is converted to a string using the <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=fullName> method, passing the `format` string and `args` array to format the string as the message portion of the trace. The `eventCache` data is written as a footer whose content depends on the value of the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.","nodes":[{"content":"The values of the <ph id=\"ph1\">`source`</ph>, <ph id=\"ph2\">`eventType`</ph>, and <ph id=\"ph3\">`id`</ph> parameters are written as a header.","pos":[0,85],"source":"The values of the `source`, `eventType`, and `id` parameters are written as a header."},{"content":"The <ph id=\"ph1\">`args`</ph> object array is converted to a string using the <ph id=\"ph2\">&lt;xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=fullName&gt;</ph> method, passing the <ph id=\"ph3\">`format`</ph> string and <ph id=\"ph4\">`args`</ph> array to format the string as the message portion of the trace.","pos":[86,349],"source":" The `args` object array is converted to a string using the <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=fullName> method, passing the `format` string and `args` array to format the string as the message portion of the trace."},{"content":"The <ph id=\"ph1\">`eventCache`</ph> data is written as a footer whose content depends on the value of the <ph id=\"ph2\">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.","pos":[350,508],"source":" The `eventCache` data is written as a footer whose content depends on the value of the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property."}]},{"pos":[516,827],"content":"[!IMPORTANT]\n The <xref:System.Diagnostics.DelimitedListTraceListener.TraceEvent%2A> method is not intended to be called by application code. It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.","leadings":["","> "],"nodes":[{"content":" The <xref:System.Diagnostics.DelimitedListTraceListener.TraceEvent%2A> method is not intended to be called by application code. It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.","pos":[13,309],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Diagnostics.DelimitedListTraceListener.TraceEvent%2A&gt;</ph> method is not intended to be called by application code.","pos":[1,128],"source":" The <xref:System.Diagnostics.DelimitedListTraceListener.TraceEvent%2A> method is not intended to be called by application code."},{"content":"It is called by methods of the <ph id=\"ph1\">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Diagnostics.Trace&gt;</ph>, and <ph id=\"ph3\">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes to write trace data.","pos":[129,296],"source":" It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data."}]}]}],"pos":[41189,42022],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Diagnostics.TraceEventCache\"></xref> object that contains the current process ID, thread ID, and stack trace information.","nodes":[{"pos":[0,142],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TraceEventCache\"&gt;&lt;/xref&gt;</ph> object that contains the current process ID, thread ID, and stack trace information.","source":"A <xref href=\"System.Diagnostics.TraceEventCache\"></xref> object that contains the current process ID, thread ID, and stack trace information."}],"pos":[42327,42470],"yaml":true},{"content":"A name used to identify the output, typically the name of the application that generated the trace event.","nodes":[{"pos":[0,105],"content":"A name used to identify the output, typically the name of the application that generated the trace event.","nodes":[{"content":"A name used to identify the output, typically the name of the application that generated the trace event.","pos":[0,105]}]}],"pos":[42532,42638],"yaml":true},{"content":"One of the <xref href=\"System.Diagnostics.TraceEventType\"></xref> values specifying the type of event that has caused the trace.","nodes":[{"pos":[0,128],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TraceEventType\"&gt;&lt;/xref&gt;</ph> values specifying the type of event that has caused the trace.","source":"One of the <xref href=\"System.Diagnostics.TraceEventType\"></xref> values specifying the type of event that has caused the trace."}],"pos":[42723,42852],"yaml":true},{"content":"A numeric identifier for the event.","nodes":[{"pos":[0,35],"content":"A numeric identifier for the event.","nodes":[{"content":"A numeric identifier for the event.","pos":[0,35]}]}],"pos":[42909,42945],"yaml":true},{"content":"A format string that contains zero or more format items that correspond to objects in the <code>args</code> array.","nodes":[{"pos":[0,114],"content":"A format string that contains zero or more format items that correspond to objects in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">args</ph><ept id=\"p1\">&lt;/code&gt;</ept> array.","source":"A format string that contains zero or more format items that correspond to objects in the <code>args</code> array."}],"pos":[43007,43122],"yaml":true},{"content":"An array containing zero or more objects to format.","nodes":[{"pos":[0,51],"content":"An array containing zero or more objects to format.","nodes":[{"content":"An array containing zero or more objects to format.","pos":[0,51]}]}],"pos":[43184,43236],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.DelimitedListTraceListener\n  commentId: T:System.Diagnostics.DelimitedListTraceListener\n  id: DelimitedListTraceListener\n  children:\n  - System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.Stream)\n  - System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.TextWriter)\n  - System.Diagnostics.DelimitedListTraceListener.#ctor(System.String)\n  - System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.Stream,System.String)\n  - System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.TextWriter,System.String)\n  - System.Diagnostics.DelimitedListTraceListener.#ctor(System.String,System.String)\n  - System.Diagnostics.DelimitedListTraceListener.Delimiter\n  - System.Diagnostics.DelimitedListTraceListener.GetSupportedAttributes\n  - System.Diagnostics.DelimitedListTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)\n  - System.Diagnostics.DelimitedListTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])\n  - System.Diagnostics.DelimitedListTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)\n  - System.Diagnostics.DelimitedListTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])\n  langs:\n  - csharp\n  name: DelimitedListTraceListener\n  nameWithType: DelimitedListTraceListener\n  fullName: System.Diagnostics.DelimitedListTraceListener\n  type: Class\n  assemblies:\n  - System.Diagnostics.TextWriterTraceListener\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Directs tracing or debugging output to a text writer, such as a stream writer, or to a stream, such as a file stream.\n  remarks: \"The trace output is in a delimited text format that uses the delimiter specified by the <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> property. The delimiter is used to terminate each field in a line of output. For example, to display the trace output in a Microsoft Excel spreadsheet, you might specify a comma (\\\",\\\") as a delimiter and create a comma-separated value (CSV) file.  \\n  \\n> [!IMPORTANT]\\n>  <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a`try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \\\"Using an Object that Implements IDisposable\\\" section in the <xref:System.IDisposable> interface topic.  \\n  \\n You can enable or disable a <xref:System.Diagnostics.DelimitedListTraceListener> through the application configuration file and then use the configured <xref:System.Diagnostics.DelimitedListTraceListener> in your application. Alternately, you can create a <xref:System.Diagnostics.DelimitedListTraceListener> in your code.  \\n  \\n> [!NOTE]\\n>  The <xref:System.Diagnostics.DelimitedListTraceListener> delimits only text that is emitted by using the methods that have names starting with the word `Trace`, such as <xref:System.Diagnostics.DelimitedListTraceListener.TraceEvent%2A?displayProperty=fullName> or <xref:System.Diagnostics.Trace.TraceWarning%2A?displayProperty=fullName>. Trace data that is emitted by using the <xref:System.Diagnostics.Debug.Write%2A?displayProperty=fullName> and <xref:System.Diagnostics.TextWriterTraceListener.WriteLine%2A?displayProperty=fullName> methods is not delimited.  \\n  \\n To configure a <xref:System.Diagnostics.DelimitedListTraceListener>, edit the configuration file that corresponds to the name of your application. In this file, you can add a listener, set the properties for a listener, or remove a listener. The configuration file should be formatted as shown in the following example:  \\n  \\n```  \\n<configuration>  \\n  <system.diagnostics>  \\n    <trace autoflush=\\\"false\\\" indentsize=\\\"4\\\">  \\n      <listeners>  \\n        <add name=\\\"delimitedListener\\\"   \\n          type=\\\"System.Diagnostics.DelimitedListTraceListener\\\"   \\n          delimiter=\\\",\\\"   \\n          initializeData=\\\"delimitedOutput.csv\\\"   \\n          traceOutputOptions=\\\"ProcessId, DateTime\\\" />  \\n      </listeners>  \\n    </trace>  \\n  </system.diagnostics>  \\n</configuration>  \\n```  \\n  \\n> [!NOTE]\\n>  If you try to write to a file that is in use or unavailable, the file name is automatically prefixed by a GUID.  \\n  \\n> [!NOTE]\\n>  Listeners are intended to be used by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace information. Listener methods, except for constructors, should not be called directly from application code.\"\n  syntax:\n    content: 'public class DelimitedListTraceListener : System.Diagnostics.TextWriterTraceListener'\n  inheritance:\n  - System.Object\n  - System.Diagnostics.TraceListener\n  - System.Diagnostics.TextWriterTraceListener\n  implements: []\n  inheritedMembers:\n  - System.Diagnostics.TextWriterTraceListener.Close\n  - System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)\n  - System.Diagnostics.TextWriterTraceListener.Flush\n  - System.Diagnostics.TextWriterTraceListener.Write(System.String)\n  - System.Diagnostics.TextWriterTraceListener.WriteLine(System.String)\n  - System.Diagnostics.TextWriterTraceListener.Writer\n  - System.Diagnostics.TraceListener.Attributes\n  - System.Diagnostics.TraceListener.Dispose\n  - System.Diagnostics.TraceListener.Fail(System.String)\n  - System.Diagnostics.TraceListener.Fail(System.String,System.String)\n  - System.Diagnostics.TraceListener.Filter\n  - System.Diagnostics.TraceListener.IndentLevel\n  - System.Diagnostics.TraceListener.IndentSize\n  - System.Diagnostics.TraceListener.IsThreadSafe\n  - System.Diagnostics.TraceListener.Name\n  - System.Diagnostics.TraceListener.NeedIndent\n  - System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)\n  - System.Diagnostics.TraceListener.TraceOutputOptions\n  - System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)\n  - System.Diagnostics.TraceListener.Write(System.Object)\n  - System.Diagnostics.TraceListener.Write(System.Object,System.String)\n  - System.Diagnostics.TraceListener.Write(System.String,System.String)\n  - System.Diagnostics.TraceListener.WriteIndent\n  - System.Diagnostics.TraceListener.WriteLine(System.Object)\n  - System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)\n  - System.Diagnostics.TraceListener.WriteLine(System.String,System.String)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/DelimitedListTraceListener.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.Stream)\n  commentId: M:System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.Stream)\n  id: '#ctor(System.IO.Stream)'\n  parent: System.Diagnostics.DelimitedListTraceListener\n  langs:\n  - csharp\n  name: DelimitedListTraceListener(Stream)\n  nameWithType: DelimitedListTraceListener.DelimitedListTraceListener(Stream)\n  fullName: DelimitedListTraceListener.DelimitedListTraceListener(Stream)\n  type: Constructor\n  assemblies:\n  - System.Diagnostics.TextWriterTraceListener\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Initializes a new instance of the <xref href=\"System.Diagnostics.DelimitedListTraceListener\"></xref> class that writes to the specified output stream.\n  remarks: This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to an empty string (\"\").\n  syntax:\n    content: public DelimitedListTraceListener (System.IO.Stream stream);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: The <xref href=\"System.IO.Stream\"></xref> to receive the output.\n  overload: System.Diagnostics.DelimitedListTraceListener.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>stream</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/DelimitedListTraceListener.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.TextWriter)\n  commentId: M:System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.TextWriter)\n  id: '#ctor(System.IO.TextWriter)'\n  parent: System.Diagnostics.DelimitedListTraceListener\n  langs:\n  - csharp\n  name: DelimitedListTraceListener(TextWriter)\n  nameWithType: DelimitedListTraceListener.DelimitedListTraceListener(TextWriter)\n  fullName: DelimitedListTraceListener.DelimitedListTraceListener(TextWriter)\n  type: Constructor\n  assemblies:\n  - System.Diagnostics.TextWriterTraceListener\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Initializes a new instance of the <xref href=\"System.Diagnostics.DelimitedListTraceListener\"></xref> class that writes to the specified text writer.\n  remarks: This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to an empty string (\"\").\n  syntax:\n    content: public DelimitedListTraceListener (System.IO.TextWriter writer);\n    parameters:\n    - id: writer\n      type: System.IO.TextWriter\n      description: The <xref href=\"System.IO.TextWriter\"></xref> to receive the output.\n  overload: System.Diagnostics.DelimitedListTraceListener.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>writer</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/DelimitedListTraceListener.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.DelimitedListTraceListener.#ctor(System.String)\n  commentId: M:System.Diagnostics.DelimitedListTraceListener.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Diagnostics.DelimitedListTraceListener\n  langs:\n  - csharp\n  name: DelimitedListTraceListener(String)\n  nameWithType: DelimitedListTraceListener.DelimitedListTraceListener(String)\n  fullName: DelimitedListTraceListener.DelimitedListTraceListener(String)\n  type: Constructor\n  assemblies:\n  - System\n  - netstandard\n  - System.Diagnostics.TextWriterTraceListener\n  namespace: System.Diagnostics\n  summary: Initializes a new instance of the <xref href=\"System.Diagnostics.DelimitedListTraceListener\"></xref> class that writes to the specified file.\n  remarks: This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to an empty string (\"\").\n  syntax:\n    content: public DelimitedListTraceListener (string fileName);\n    parameters:\n    - id: fileName\n      type: System.String\n      description: The name of the file to receive the output.\n  overload: System.Diagnostics.DelimitedListTraceListener.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>fileName</code> is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/DelimitedListTraceListener.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.Stream,System.String)\n  commentId: M:System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.Stream,System.String)\n  id: '#ctor(System.IO.Stream,System.String)'\n  parent: System.Diagnostics.DelimitedListTraceListener\n  langs:\n  - csharp\n  name: DelimitedListTraceListener(Stream, String)\n  nameWithType: DelimitedListTraceListener.DelimitedListTraceListener(Stream, String)\n  fullName: DelimitedListTraceListener.DelimitedListTraceListener(Stream, String)\n  type: Constructor\n  assemblies:\n  - System.Diagnostics.TextWriterTraceListener\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Initializes a new instance of the <xref href=\"System.Diagnostics.DelimitedListTraceListener\"></xref> class that writes to the specified output stream and has the specified name.\n  remarks: \"This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to the value of the `name` parameter, or to an empty string (\\\"\\\") if the `name` parameter is `null`.  The <xref:System.Diagnostics.TraceListener.Name%2A> property can be used as an index into the `Listeners` collection to programmatically change the properties for the listener. For example, the following code sets the <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> property for the instance of <xref:System.Diagnostics.DelimitedListTraceListener> that has the name \\\"delimListener\\\":  \\n  \\n```  \\n((DelimitedListTraceListener)Trace.Listeners[\\\"delimListener\\\"]).Delimiter = \\\":\\\"  \\n```\"\n  syntax:\n    content: public DelimitedListTraceListener (System.IO.Stream stream, string name);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: The <xref href=\"System.IO.Stream\"></xref> to receive the output.\n    - id: name\n      type: System.String\n      description: The name of the new instance of the trace listener.\n  overload: System.Diagnostics.DelimitedListTraceListener.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>stream</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/DelimitedListTraceListener.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.TextWriter,System.String)\n  commentId: M:System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.TextWriter,System.String)\n  id: '#ctor(System.IO.TextWriter,System.String)'\n  parent: System.Diagnostics.DelimitedListTraceListener\n  langs:\n  - csharp\n  name: DelimitedListTraceListener(TextWriter, String)\n  nameWithType: DelimitedListTraceListener.DelimitedListTraceListener(TextWriter, String)\n  fullName: DelimitedListTraceListener.DelimitedListTraceListener(TextWriter, String)\n  type: Constructor\n  assemblies:\n  - System.Diagnostics.TextWriterTraceListener\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Initializes a new instance of the <xref href=\"System.Diagnostics.DelimitedListTraceListener\"></xref> class that writes to the specified text writer and has the specified name.\n  remarks: \"This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to the value of the `name` parameter, or to an empty string (\\\"\\\") if the `name` parameter is `null`. The <xref:System.Diagnostics.TraceListener.Name%2A> property can be used as an index into the `Listeners` collection to programmatically change the properties for the listener. For example the following code sets the <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> property for the instance of <xref:System.Diagnostics.DelimitedListTraceListener> that has the name \\\"delimListener\\\":  \\n  \\n```  \\n((DelimitedListTraceListener)Trace.Listeners[\\\"delimListener\\\"]).Delimiter = \\\":\\\"  \\n```\"\n  syntax:\n    content: public DelimitedListTraceListener (System.IO.TextWriter writer, string name);\n    parameters:\n    - id: writer\n      type: System.IO.TextWriter\n      description: The <xref href=\"System.IO.TextWriter\"></xref> to receive the output.\n    - id: name\n      type: System.String\n      description: The name of the new instance of the trace listener.\n  overload: System.Diagnostics.DelimitedListTraceListener.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>writer</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/DelimitedListTraceListener.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.DelimitedListTraceListener.#ctor(System.String,System.String)\n  commentId: M:System.Diagnostics.DelimitedListTraceListener.#ctor(System.String,System.String)\n  id: '#ctor(System.String,System.String)'\n  parent: System.Diagnostics.DelimitedListTraceListener\n  langs:\n  - csharp\n  name: DelimitedListTraceListener(String, String)\n  nameWithType: DelimitedListTraceListener.DelimitedListTraceListener(String, String)\n  fullName: DelimitedListTraceListener.DelimitedListTraceListener(String, String)\n  type: Constructor\n  assemblies:\n  - System\n  - netstandard\n  - System.Diagnostics.TextWriterTraceListener\n  namespace: System.Diagnostics\n  summary: Initializes a new instance of the <xref href=\"System.Diagnostics.DelimitedListTraceListener\"></xref> class that writes to the specified file and has the specified name.\n  remarks: \"This constructor initializes a new instance of the <xref:System.IO.StreamWriter> class for the specified file on the specified path, using <xref:System.Text.Encoding.UTF8%2A> encoding. If the file exists, it is appended to. If the file does not exist, a new file is created.  \\n  \\n> [!NOTE]\\n>  To reduce the chance of an exception, any character that might invalidate the output is replaced with a \\\"?\\\" character.  \\n  \\n The <xref:System.Diagnostics.TraceListener.Name%2A> property is set to the value of the `name` parameter, or to an empty string (\\\"\\\") if the `name` parameter is `null`. The <xref:System.Diagnostics.TraceListener.Name%2A> property can be used as an index into the `Listeners` collection to programmatically change the properties for the listener. For example, the following code sets the <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> property for the instance of <xref:System.Diagnostics.DelimitedListTraceListener> that has the name \\\"delimListener\\\":  \\n  \\n```  \\n((DelimitedListTraceListener)Trace.Listeners[\\\"delimListener\\\"]).Delimiter = \\\":\\\"  \\n```\"\n  syntax:\n    content: public DelimitedListTraceListener (string fileName, string name);\n    parameters:\n    - id: fileName\n      type: System.String\n      description: The name of the file to receive the output.\n    - id: name\n      type: System.String\n      description: The name of the new instance of the trace listener.\n  overload: System.Diagnostics.DelimitedListTraceListener.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>fileName</code> is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/DelimitedListTraceListener.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.DelimitedListTraceListener.Delimiter\n  commentId: P:System.Diagnostics.DelimitedListTraceListener.Delimiter\n  id: Delimiter\n  parent: System.Diagnostics.DelimitedListTraceListener\n  langs:\n  - csharp\n  name: Delimiter\n  nameWithType: DelimitedListTraceListener.Delimiter\n  fullName: DelimitedListTraceListener.Delimiter\n  type: Property\n  assemblies:\n  - System.Diagnostics.TextWriterTraceListener\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Gets or sets the delimiter for the delimited list.\n  remarks: \"The default delimiter is \\\";\\\" (semicolon). The following configuration file example shows the setting of the <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> property using the `delimiter` attribute in a configuration file:  \\n  \\n```  \\n<configuration>  \\n  <system.diagnostics>  \\n    <trace autoflush=\\\"false\\\" indentsize=\\\"4\\\">  \\n      <listeners>  \\n        <add name=\\\"delimitedListener\\\"   \\n          type=\\\"System.Diagnostics.DelimitedListTraceListener\\\"   \\n          delimiter=\\\":\\\"   \\n          initializeData=\\\"delimitedOutput.txt\\\"   \\n          traceOutputOptions=\\\"ProcessId, DateTime\\\" />  \\n        <remove name=\\\"Default\\\" />  \\n      </listeners>  \\n    </trace>  \\n  </system.diagnostics>  \\n</configuration>  \\n  \\n```\"\n  syntax:\n    content: public string Delimiter { get; set; }\n    return:\n      type: System.String\n      description: The delimiter for the delimited list.\n  overload: System.Diagnostics.DelimitedListTraceListener.Delimiter*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <xref href=\"System.Diagnostics.DelimitedListTraceListener.Delimiter\"></xref> is set to `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <xref href=\"System.Diagnostics.DelimitedListTraceListener.Delimiter\"></xref> is set to an empty string (\"\").\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/DelimitedListTraceListener.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.DelimitedListTraceListener.GetSupportedAttributes\n  commentId: M:System.Diagnostics.DelimitedListTraceListener.GetSupportedAttributes\n  id: GetSupportedAttributes\n  parent: System.Diagnostics.DelimitedListTraceListener\n  langs:\n  - csharp\n  name: GetSupportedAttributes()\n  nameWithType: DelimitedListTraceListener.GetSupportedAttributes()\n  fullName: DelimitedListTraceListener.GetSupportedAttributes()\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Diagnostics.TextWriterTraceListener\n  namespace: System.Diagnostics\n  summary: Returns the custom configuration file attribute supported by the delimited trace listener.\n  remarks: \"A custom attribute is an attribute that is not inherited from the base class that can be used to set a property for the class. The custom attribute for <xref:System.Diagnostics.DelimitedListTraceListener> is used to set the <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> property. The following configuration file example shows the use of the `delimiter` attribute to set the <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> property:  \\n  \\n```  \\n<configuration>  \\n  <system.diagnostics>  \\n    <trace autoflush=\\\"false\\\" indentsize=\\\"4\\\">  \\n      <listeners>  \\n        <add name=\\\"delimitedListener\\\"   \\n          type=\\\"System.Diagnostics.DelimitedListTraceListener\\\"   \\n          delimiter=\\\":\\\"   \\n          initializeData=\\\"delimitedOutput.txt\\\"   \\n          traceOutputOptions=\\\"ProcessId, DateTime\\\" />  \\n        <remove name=\\\"Default\\\" />  \\n      </listeners>  \\n    </trace>  \\n  </system.diagnostics>  \\n</configuration>  \\n```\"\n  syntax:\n    content: protected override string[] GetSupportedAttributes ();\n    parameters: []\n    return:\n      type: System.String[]\n      description: A string array that contains the single value \"delimiter\".\n  overload: System.Diagnostics.DelimitedListTraceListener.GetSupportedAttributes*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/DelimitedListTraceListener.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.DelimitedListTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)\n  commentId: M:System.Diagnostics.DelimitedListTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)\n  id: TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)\n  parent: System.Diagnostics.DelimitedListTraceListener\n  langs:\n  - csharp\n  name: TraceData(TraceEventCache, String, TraceEventType, Int32, Object)\n  nameWithType: DelimitedListTraceListener.TraceData(TraceEventCache, String, TraceEventType, Int32, Object)\n  fullName: DelimitedListTraceListener.TraceData(TraceEventCache, String, TraceEventType, Int32, Object)\n  type: Method\n  assemblies:\n  - System.Diagnostics.TextWriterTraceListener\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Writes trace information, a data object, and event information to the output file or stream.\n  remarks: \"The values of the `source`, `eventType`, and `id` parameters are written as a header. The data object is converted to a string using the `ToString` method of the object. The `eventCache` data is written as a footer whose content depends on the value of the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.  \\n  \\n> [!IMPORTANT]\\n>  The <xref:System.Diagnostics.DelimitedListTraceListener.TraceData%2A> method is not intended to be called by application code. It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.\"\n  syntax:\n    content: public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object data);\n    parameters:\n    - id: eventCache\n      type: System.Diagnostics.TraceEventCache\n      description: A <xref href=\"System.Diagnostics.TraceEventCache\"></xref> object that contains the current process ID, thread ID, and stack trace information.\n    - id: source\n      type: System.String\n      description: A name used to identify the output, typically the name of the application that generated the trace event.\n    - id: eventType\n      type: System.Diagnostics.TraceEventType\n      description: One of the <xref href=\"System.Diagnostics.TraceEventType\"></xref> values specifying the type of event that has caused the trace.\n    - id: id\n      type: System.Int32\n      description: A numeric identifier for the event.\n    - id: data\n      type: System.Object\n      description: A data object to write to the output file or stream.\n  overload: System.Diagnostics.DelimitedListTraceListener.TraceData*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/DelimitedListTraceListener.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.DelimitedListTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])\n  commentId: M:System.Diagnostics.DelimitedListTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])\n  id: TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])\n  parent: System.Diagnostics.DelimitedListTraceListener\n  langs:\n  - csharp\n  name: TraceData(TraceEventCache, String, TraceEventType, Int32, Object[])\n  nameWithType: DelimitedListTraceListener.TraceData(TraceEventCache, String, TraceEventType, Int32, Object[])\n  fullName: DelimitedListTraceListener.TraceData(TraceEventCache, String, TraceEventType, Int32, Object[])\n  type: Method\n  assemblies:\n  - System.Diagnostics.TextWriterTraceListener\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Writes trace information, an array of data objects, and event information to the output file or stream.\n  remarks: \"The values of the `source`, `eventType`, and `id` parameters are written as a header. The data objects are converted to strings using the `ToString` method of each object. The `eventCache` data is written as a footer whose content depends on the value of the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.  \\n  \\n> [!IMPORTANT]\\n>  The <xref:System.Diagnostics.DelimitedListTraceListener.TraceData%2A> method is not intended to be called by application code. It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.\"\n  syntax:\n    content: public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object[] data);\n    parameters:\n    - id: eventCache\n      type: System.Diagnostics.TraceEventCache\n      description: A <xref href=\"System.Diagnostics.TraceEventCache\"></xref> object that contains the current process ID, thread ID, and stack trace information.\n    - id: source\n      type: System.String\n      description: A name used to identify the output, typically the name of the application that generated the trace event.\n    - id: eventType\n      type: System.Diagnostics.TraceEventType\n      description: One of the <xref href=\"System.Diagnostics.TraceEventType\"></xref> values specifying the type of event that has caused the trace.\n    - id: id\n      type: System.Int32\n      description: A numeric identifier for the event.\n    - id: data\n      type: System.Object[]\n      description: An array of data objects to write to the output file or stream.\n  overload: System.Diagnostics.DelimitedListTraceListener.TraceData*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/DelimitedListTraceListener.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.DelimitedListTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)\n  commentId: M:System.Diagnostics.DelimitedListTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)\n  id: TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)\n  parent: System.Diagnostics.DelimitedListTraceListener\n  langs:\n  - csharp\n  name: TraceEvent(TraceEventCache, String, TraceEventType, Int32, String)\n  nameWithType: DelimitedListTraceListener.TraceEvent(TraceEventCache, String, TraceEventType, Int32, String)\n  fullName: DelimitedListTraceListener.TraceEvent(TraceEventCache, String, TraceEventType, Int32, String)\n  type: Method\n  assemblies:\n  - System.Diagnostics.TextWriterTraceListener\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Writes trace information, a message, and event information to the output file or stream.\n  remarks: \"The values of the `source`, `eventType`, and `id` parameters are written as a header, followed by the `message` data. The `eventCache` data is written as a footer whose content depends on the value of the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.  \\n  \\n> [!IMPORTANT]\\n>  The <xref:System.Diagnostics.DelimitedListTraceListener.TraceEvent%2A> method is not intended to be called by application code. It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.\"\n  syntax:\n    content: public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string message);\n    parameters:\n    - id: eventCache\n      type: System.Diagnostics.TraceEventCache\n      description: A <xref href=\"System.Diagnostics.TraceEventCache\"></xref> object that contains the current process ID, thread ID, and stack trace information.\n    - id: source\n      type: System.String\n      description: A name used to identify the output, typically the name of the application that generated the trace event.\n    - id: eventType\n      type: System.Diagnostics.TraceEventType\n      description: One of the <xref href=\"System.Diagnostics.TraceEventType\"></xref> values specifying the type of event that has caused the trace.\n    - id: id\n      type: System.Int32\n      description: A numeric identifier for the event.\n    - id: message\n      type: System.String\n      description: The trace message to write to the output file or stream.\n  overload: System.Diagnostics.DelimitedListTraceListener.TraceEvent*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/DelimitedListTraceListener.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.DelimitedListTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])\n  commentId: M:System.Diagnostics.DelimitedListTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])\n  id: TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])\n  parent: System.Diagnostics.DelimitedListTraceListener\n  langs:\n  - csharp\n  name: TraceEvent(TraceEventCache, String, TraceEventType, Int32, String, Object[])\n  nameWithType: DelimitedListTraceListener.TraceEvent(TraceEventCache, String, TraceEventType, Int32, String, Object[])\n  fullName: DelimitedListTraceListener.TraceEvent(TraceEventCache, String, TraceEventType, Int32, String, Object[])\n  type: Method\n  assemblies:\n  - System.Diagnostics.TextWriterTraceListener\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Writes trace information, a formatted array of objects, and event information to the output file or stream.\n  remarks: \"The values of the `source`, `eventType`, and `id` parameters are written as a header. The `args` object array is converted to a string using the <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=fullName> method, passing the `format` string and `args` array to format the string as the message portion of the trace. The `eventCache` data is written as a footer whose content depends on the value of the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.  \\n  \\n> [!IMPORTANT]\\n>  The <xref:System.Diagnostics.DelimitedListTraceListener.TraceEvent%2A> method is not intended to be called by application code. It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.\"\n  syntax:\n    content: public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, object[] args);\n    parameters:\n    - id: eventCache\n      type: System.Diagnostics.TraceEventCache\n      description: A <xref href=\"System.Diagnostics.TraceEventCache\"></xref> object that contains the current process ID, thread ID, and stack trace information.\n    - id: source\n      type: System.String\n      description: A name used to identify the output, typically the name of the application that generated the trace event.\n    - id: eventType\n      type: System.Diagnostics.TraceEventType\n      description: One of the <xref href=\"System.Diagnostics.TraceEventType\"></xref> values specifying the type of event that has caused the trace.\n    - id: id\n      type: System.Int32\n      description: A numeric identifier for the event.\n    - id: format\n      type: System.String\n      description: A format string that contains zero or more format items that correspond to objects in the <code>args</code> array.\n    - id: args\n      type: System.Object[]\n      description: An array containing zero or more objects to format.\n  overload: System.Diagnostics.DelimitedListTraceListener.TraceEvent*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/DelimitedListTraceListener.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Diagnostics.TextWriterTraceListener\n  parent: System.Diagnostics\n  isExternal: false\n  name: TextWriterTraceListener\n  nameWithType: TextWriterTraceListener\n  fullName: System.Diagnostics.TextWriterTraceListener\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.Stream)\n  parent: System.Diagnostics.DelimitedListTraceListener\n  isExternal: false\n  name: DelimitedListTraceListener(Stream)\n  nameWithType: DelimitedListTraceListener.DelimitedListTraceListener(Stream)\n  fullName: DelimitedListTraceListener.DelimitedListTraceListener(Stream)\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.TextWriter)\n  parent: System.Diagnostics.DelimitedListTraceListener\n  isExternal: false\n  name: DelimitedListTraceListener(TextWriter)\n  nameWithType: DelimitedListTraceListener.DelimitedListTraceListener(TextWriter)\n  fullName: DelimitedListTraceListener.DelimitedListTraceListener(TextWriter)\n- uid: System.IO.TextWriter\n  parent: System.IO\n  isExternal: false\n  name: TextWriter\n  nameWithType: TextWriter\n  fullName: System.IO.TextWriter\n- uid: System.Diagnostics.DelimitedListTraceListener.#ctor(System.String)\n  parent: System.Diagnostics.DelimitedListTraceListener\n  isExternal: false\n  name: DelimitedListTraceListener(String)\n  nameWithType: DelimitedListTraceListener.DelimitedListTraceListener(String)\n  fullName: DelimitedListTraceListener.DelimitedListTraceListener(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.Stream,System.String)\n  parent: System.Diagnostics.DelimitedListTraceListener\n  isExternal: false\n  name: DelimitedListTraceListener(Stream, String)\n  nameWithType: DelimitedListTraceListener.DelimitedListTraceListener(Stream, String)\n  fullName: DelimitedListTraceListener.DelimitedListTraceListener(Stream, String)\n- uid: System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.TextWriter,System.String)\n  parent: System.Diagnostics.DelimitedListTraceListener\n  isExternal: false\n  name: DelimitedListTraceListener(TextWriter, String)\n  nameWithType: DelimitedListTraceListener.DelimitedListTraceListener(TextWriter, String)\n  fullName: DelimitedListTraceListener.DelimitedListTraceListener(TextWriter, String)\n- uid: System.Diagnostics.DelimitedListTraceListener.#ctor(System.String,System.String)\n  parent: System.Diagnostics.DelimitedListTraceListener\n  isExternal: false\n  name: DelimitedListTraceListener(String, String)\n  nameWithType: DelimitedListTraceListener.DelimitedListTraceListener(String, String)\n  fullName: DelimitedListTraceListener.DelimitedListTraceListener(String, String)\n- uid: System.Diagnostics.DelimitedListTraceListener.Delimiter\n  parent: System.Diagnostics.DelimitedListTraceListener\n  isExternal: false\n  name: Delimiter\n  nameWithType: DelimitedListTraceListener.Delimiter\n  fullName: DelimitedListTraceListener.Delimiter\n- uid: System.Diagnostics.DelimitedListTraceListener.GetSupportedAttributes\n  parent: System.Diagnostics.DelimitedListTraceListener\n  isExternal: false\n  name: GetSupportedAttributes()\n  nameWithType: DelimitedListTraceListener.GetSupportedAttributes()\n  fullName: DelimitedListTraceListener.GetSupportedAttributes()\n- uid: System.String[]\n  parent: System\n  isExternal: false\n  name: String[]\n  nameWithType: String[]\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Diagnostics.DelimitedListTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)\n  parent: System.Diagnostics.DelimitedListTraceListener\n  isExternal: false\n  name: TraceData(TraceEventCache, String, TraceEventType, Int32, Object)\n  nameWithType: DelimitedListTraceListener.TraceData(TraceEventCache, String, TraceEventType, Int32, Object)\n  fullName: DelimitedListTraceListener.TraceData(TraceEventCache, String, TraceEventType, Int32, Object)\n- uid: System.Diagnostics.TraceEventCache\n  parent: System.Diagnostics\n  isExternal: false\n  name: TraceEventCache\n  nameWithType: TraceEventCache\n  fullName: System.Diagnostics.TraceEventCache\n- uid: System.Diagnostics.TraceEventType\n  parent: System.Diagnostics\n  isExternal: false\n  name: TraceEventType\n  nameWithType: TraceEventType\n  fullName: System.Diagnostics.TraceEventType\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Diagnostics.DelimitedListTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])\n  parent: System.Diagnostics.DelimitedListTraceListener\n  isExternal: false\n  name: TraceData(TraceEventCache, String, TraceEventType, Int32, Object[])\n  nameWithType: DelimitedListTraceListener.TraceData(TraceEventCache, String, TraceEventType, Int32, Object[])\n  fullName: DelimitedListTraceListener.TraceData(TraceEventCache, String, TraceEventType, Int32, Object[])\n- uid: System.Object[]\n  parent: System\n  isExternal: false\n  name: Object[]\n  nameWithType: Object[]\n  fullName: System.Object[]\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Diagnostics.DelimitedListTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)\n  parent: System.Diagnostics.DelimitedListTraceListener\n  isExternal: false\n  name: TraceEvent(TraceEventCache, String, TraceEventType, Int32, String)\n  nameWithType: DelimitedListTraceListener.TraceEvent(TraceEventCache, String, TraceEventType, Int32, String)\n  fullName: DelimitedListTraceListener.TraceEvent(TraceEventCache, String, TraceEventType, Int32, String)\n- uid: System.Diagnostics.DelimitedListTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])\n  parent: System.Diagnostics.DelimitedListTraceListener\n  isExternal: false\n  name: TraceEvent(TraceEventCache, String, TraceEventType, Int32, String, Object[])\n  nameWithType: DelimitedListTraceListener.TraceEvent(TraceEventCache, String, TraceEventType, Int32, String, Object[])\n  fullName: DelimitedListTraceListener.TraceEvent(TraceEventCache, String, TraceEventType, Int32, String, Object[])\n- uid: System.Diagnostics.DelimitedListTraceListener.#ctor*\n  parent: System.Diagnostics.DelimitedListTraceListener\n  isExternal: false\n  name: DelimitedListTraceListener\n  nameWithType: DelimitedListTraceListener.DelimitedListTraceListener\n  fullName: DelimitedListTraceListener.DelimitedListTraceListener\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/DelimitedListTraceListener.xml\n- uid: System.Diagnostics.DelimitedListTraceListener.Delimiter*\n  parent: System.Diagnostics.DelimitedListTraceListener\n  isExternal: false\n  name: Delimiter\n  nameWithType: DelimitedListTraceListener.Delimiter\n  fullName: DelimitedListTraceListener.Delimiter\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/DelimitedListTraceListener.xml\n- uid: System.Diagnostics.DelimitedListTraceListener.GetSupportedAttributes*\n  parent: System.Diagnostics.DelimitedListTraceListener\n  isExternal: false\n  name: GetSupportedAttributes\n  nameWithType: DelimitedListTraceListener.GetSupportedAttributes\n  fullName: DelimitedListTraceListener.GetSupportedAttributes\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/DelimitedListTraceListener.xml\n- uid: System.Diagnostics.DelimitedListTraceListener.TraceData*\n  parent: System.Diagnostics.DelimitedListTraceListener\n  isExternal: false\n  name: TraceData\n  nameWithType: DelimitedListTraceListener.TraceData\n  fullName: DelimitedListTraceListener.TraceData\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/DelimitedListTraceListener.xml\n- uid: System.Diagnostics.DelimitedListTraceListener.TraceEvent*\n  parent: System.Diagnostics.DelimitedListTraceListener\n  isExternal: false\n  name: TraceEvent\n  nameWithType: DelimitedListTraceListener.TraceEvent\n  fullName: DelimitedListTraceListener.TraceEvent\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/DelimitedListTraceListener.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Diagnostics.TraceListener.Attributes\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: Attributes\n  nameWithType: TraceListener.Attributes\n  fullName: TraceListener.Attributes\n- uid: System.Diagnostics.TextWriterTraceListener.Close\n  parent: System.Diagnostics.TextWriterTraceListener\n  isExternal: false\n  name: Close()\n  nameWithType: TextWriterTraceListener.Close()\n  fullName: TextWriterTraceListener.Close()\n- uid: System.Diagnostics.TraceListener.Dispose\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: Dispose()\n  nameWithType: TraceListener.Dispose()\n  fullName: TraceListener.Dispose()\n- uid: System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)\n  parent: System.Diagnostics.TextWriterTraceListener\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: TextWriterTraceListener.Dispose(Boolean)\n  fullName: TextWriterTraceListener.Dispose(Boolean)\n- uid: System.Diagnostics.TraceListener.Fail(System.String)\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: Fail(String)\n  nameWithType: TraceListener.Fail(String)\n  fullName: TraceListener.Fail(String)\n- uid: System.Diagnostics.TraceListener.Fail(System.String,System.String)\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: Fail(String, String)\n  nameWithType: TraceListener.Fail(String, String)\n  fullName: TraceListener.Fail(String, String)\n- uid: System.Diagnostics.TraceListener.Filter\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: Filter\n  nameWithType: TraceListener.Filter\n  fullName: TraceListener.Filter\n- uid: System.Diagnostics.TextWriterTraceListener.Flush\n  parent: System.Diagnostics.TextWriterTraceListener\n  isExternal: false\n  name: Flush()\n  nameWithType: TextWriterTraceListener.Flush()\n  fullName: TextWriterTraceListener.Flush()\n- uid: System.Diagnostics.TraceListener.IndentLevel\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: IndentLevel\n  nameWithType: TraceListener.IndentLevel\n  fullName: TraceListener.IndentLevel\n- uid: System.Diagnostics.TraceListener.IndentSize\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: IndentSize\n  nameWithType: TraceListener.IndentSize\n  fullName: TraceListener.IndentSize\n- uid: System.Diagnostics.TraceListener.IsThreadSafe\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: IsThreadSafe\n  nameWithType: TraceListener.IsThreadSafe\n  fullName: TraceListener.IsThreadSafe\n- uid: System.Diagnostics.TraceListener.Name\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: Name\n  nameWithType: TraceListener.Name\n  fullName: TraceListener.Name\n- uid: System.Diagnostics.TraceListener.NeedIndent\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: NeedIndent\n  nameWithType: TraceListener.NeedIndent\n  fullName: TraceListener.NeedIndent\n- uid: System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: TraceEvent(TraceEventCache, String, TraceEventType, Int32)\n  nameWithType: TraceListener.TraceEvent(TraceEventCache, String, TraceEventType, Int32)\n  fullName: TraceListener.TraceEvent(TraceEventCache, String, TraceEventType, Int32)\n- uid: System.Diagnostics.TraceListener.TraceOutputOptions\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: TraceOutputOptions\n  nameWithType: TraceListener.TraceOutputOptions\n  fullName: TraceListener.TraceOutputOptions\n- uid: System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: TraceTransfer(TraceEventCache, String, Int32, String, Guid)\n  nameWithType: TraceListener.TraceTransfer(TraceEventCache, String, Int32, String, Guid)\n  fullName: TraceListener.TraceTransfer(TraceEventCache, String, Int32, String, Guid)\n- uid: System.Diagnostics.TraceListener.Write(System.Object)\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: Write(Object)\n  nameWithType: TraceListener.Write(Object)\n  fullName: TraceListener.Write(Object)\n- uid: System.Diagnostics.TextWriterTraceListener.Write(System.String)\n  parent: System.Diagnostics.TextWriterTraceListener\n  isExternal: false\n  name: Write(String)\n  nameWithType: TextWriterTraceListener.Write(String)\n  fullName: TextWriterTraceListener.Write(String)\n- uid: System.Diagnostics.TraceListener.Write(System.Object,System.String)\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: Write(Object, String)\n  nameWithType: TraceListener.Write(Object, String)\n  fullName: TraceListener.Write(Object, String)\n- uid: System.Diagnostics.TraceListener.Write(System.String,System.String)\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: Write(String, String)\n  nameWithType: TraceListener.Write(String, String)\n  fullName: TraceListener.Write(String, String)\n- uid: System.Diagnostics.TraceListener.WriteIndent\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: WriteIndent()\n  nameWithType: TraceListener.WriteIndent()\n  fullName: TraceListener.WriteIndent()\n- uid: System.Diagnostics.TraceListener.WriteLine(System.Object)\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: WriteLine(Object)\n  nameWithType: TraceListener.WriteLine(Object)\n  fullName: TraceListener.WriteLine(Object)\n- uid: System.Diagnostics.TextWriterTraceListener.WriteLine(System.String)\n  parent: System.Diagnostics.TextWriterTraceListener\n  isExternal: false\n  name: WriteLine(String)\n  nameWithType: TextWriterTraceListener.WriteLine(String)\n  fullName: TextWriterTraceListener.WriteLine(String)\n- uid: System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: WriteLine(Object, String)\n  nameWithType: TraceListener.WriteLine(Object, String)\n  fullName: TraceListener.WriteLine(Object, String)\n- uid: System.Diagnostics.TraceListener.WriteLine(System.String,System.String)\n  parent: System.Diagnostics.TraceListener\n  isExternal: false\n  name: WriteLine(String, String)\n  nameWithType: TraceListener.WriteLine(String, String)\n  fullName: TraceListener.WriteLine(String, String)\n- uid: System.Diagnostics.TextWriterTraceListener.Writer\n  parent: System.Diagnostics.TextWriterTraceListener\n  isExternal: false\n  name: Writer\n  nameWithType: TextWriterTraceListener.Writer\n  fullName: TextWriterTraceListener.Writer\n"}