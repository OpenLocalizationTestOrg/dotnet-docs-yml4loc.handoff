### YamlMime:ManagedReference
items:
- uid: System.Runtime.Remoting.SoapServices
  commentId: T:System.Runtime.Remoting.SoapServices
  id: SoapServices
  children:
  - System.Runtime.Remoting.SoapServices.CodeXmlNamespaceForClrTypeNamespace(System.String,System.String)
  - System.Runtime.Remoting.SoapServices.DecodeXmlNamespaceForClrTypeNamespace(System.String,System.String@,System.String@)
  - System.Runtime.Remoting.SoapServices.GetInteropFieldTypeAndNameFromXmlAttribute(System.Type,System.String,System.String,System.Type@,System.String@)
  - System.Runtime.Remoting.SoapServices.GetInteropFieldTypeAndNameFromXmlElement(System.Type,System.String,System.String,System.Type@,System.String@)
  - System.Runtime.Remoting.SoapServices.GetInteropTypeFromXmlElement(System.String,System.String)
  - System.Runtime.Remoting.SoapServices.GetInteropTypeFromXmlType(System.String,System.String)
  - System.Runtime.Remoting.SoapServices.GetSoapActionFromMethodBase(System.Reflection.MethodBase)
  - System.Runtime.Remoting.SoapServices.GetTypeAndMethodNameFromSoapAction(System.String,System.String@,System.String@)
  - System.Runtime.Remoting.SoapServices.GetXmlElementForInteropType(System.Type,System.String@,System.String@)
  - System.Runtime.Remoting.SoapServices.GetXmlNamespaceForMethodCall(System.Reflection.MethodBase)
  - System.Runtime.Remoting.SoapServices.GetXmlNamespaceForMethodResponse(System.Reflection.MethodBase)
  - System.Runtime.Remoting.SoapServices.GetXmlTypeForInteropType(System.Type,System.String@,System.String@)
  - System.Runtime.Remoting.SoapServices.IsClrTypeNamespace(System.String)
  - System.Runtime.Remoting.SoapServices.IsSoapActionValidForMethodBase(System.String,System.Reflection.MethodBase)
  - System.Runtime.Remoting.SoapServices.PreLoad(System.Reflection.Assembly)
  - System.Runtime.Remoting.SoapServices.PreLoad(System.Type)
  - System.Runtime.Remoting.SoapServices.RegisterInteropXmlElement(System.String,System.String,System.Type)
  - System.Runtime.Remoting.SoapServices.RegisterInteropXmlType(System.String,System.String,System.Type)
  - System.Runtime.Remoting.SoapServices.RegisterSoapActionForMethodBase(System.Reflection.MethodBase)
  - System.Runtime.Remoting.SoapServices.RegisterSoapActionForMethodBase(System.Reflection.MethodBase,System.String)
  - System.Runtime.Remoting.SoapServices.XmlNsForClrType
  - System.Runtime.Remoting.SoapServices.XmlNsForClrTypeWithAssembly
  - System.Runtime.Remoting.SoapServices.XmlNsForClrTypeWithNs
  - System.Runtime.Remoting.SoapServices.XmlNsForClrTypeWithNsAndAssembly
  langs:
  - csharp
  name: SoapServices
  nameWithType: SoapServices
  fullName: System.Runtime.Remoting.SoapServices
  type: Class
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: Provides several methods for using and publishing remoted objects in SOAP format.
  remarks: This class makes a link demand. A security exception is thrown if the immediate caller does not have infrastructure permission. See [Link Demands](~/docs/framework/misc/link-demands.md) for more information.
  example:
  - "The following code example shows how to use the members in the <xref:System.Runtime.Remoting.SoapServices> class to convert between a <xref:System.Type> object and an XML type.  \n  \n [!code-cpp[System.Runtime.Remoting.SoapServices#100](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#100)]\n [!code-csharp[System.Runtime.Remoting.SoapServices#100](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#100)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class SoapServices
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/SoapServices.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Remoting.SoapServices.CodeXmlNamespaceForClrTypeNamespace(System.String,System.String)
  commentId: M:System.Runtime.Remoting.SoapServices.CodeXmlNamespaceForClrTypeNamespace(System.String,System.String)
  id: CodeXmlNamespaceForClrTypeNamespace(System.String,System.String)
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: CodeXmlNamespaceForClrTypeNamespace(String, String)
  nameWithType: SoapServices.CodeXmlNamespaceForClrTypeNamespace(String, String)
  fullName: SoapServices.CodeXmlNamespaceForClrTypeNamespace(String, String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: Returns the common language runtime type namespace name from the provided namespace and assembly names.
  remarks: "The current method is used by the .NET Framework and the SoapSuds tool to create an XML namespace name for a common language runtime object type.  \n  \n For more information about SoapSuds, see [Soapsuds Tool (Soapsuds.exe)](http://msdn.microsoft.com/en-us/40f6f8c8-b80c-4e9f-a920-31bcd0cf45c5)."
  example:
  - "The following code example shows how to use this method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!code-cpp[System.Runtime.Remoting.SoapServices#101](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#101)]\n [!code-csharp[System.Runtime.Remoting.SoapServices#101](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#101)]"
  syntax:
    content: public static string CodeXmlNamespaceForClrTypeNamespace (string typeNamespace, string assemblyName);
    parameters:
    - id: typeNamespace
      type: System.String
      description: The namespace that is to be coded.
    - id: assemblyName
      type: System.String
      description: The name of the assembly that is to be coded.
    return:
      type: System.String
      description: The common language runtime type namespace name from the provided namespace and assembly names.
  overload: System.Runtime.Remoting.SoapServices.CodeXmlNamespaceForClrTypeNamespace*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>assemblyName</code> and <code>typeNamespace</code> parameters are both either `null` or empty.
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The immediate caller does not have infrastructure permission.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/SoapServices.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Remoting.SoapServices.DecodeXmlNamespaceForClrTypeNamespace(System.String,System.String@,System.String@)
  commentId: M:System.Runtime.Remoting.SoapServices.DecodeXmlNamespaceForClrTypeNamespace(System.String,System.String@,System.String@)
  id: DecodeXmlNamespaceForClrTypeNamespace(System.String,System.String@,System.String@)
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: DecodeXmlNamespaceForClrTypeNamespace(String, String, String)
  nameWithType: SoapServices.DecodeXmlNamespaceForClrTypeNamespace(String, String, String)
  fullName: SoapServices.DecodeXmlNamespaceForClrTypeNamespace(String, String, String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: Decodes the XML namespace and assembly names from the provided common language runtime namespace.
  remarks: 'When the .NET Framework is parsing an XML stream, it needs to know how to convert the XML read from the stream into common language runtime types. The information that specifies how the .NET Framework should generate and parse an XML stream is stored in custom attributes that are located in the <xref:System.Runtime.Remoting.Metadata> namespace. There are two ways to specify this information in a configuration file: either by explicitly specifying the mappings, or by specifying which object types to preload. The current method supports the retrieval of such mappings.'
  example:
  - "The following code example shows how to use this method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!code-cpp[System.Runtime.Remoting.SoapServices#102](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#102)]\n [!code-csharp[System.Runtime.Remoting.SoapServices#102](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#102)]"
  syntax:
    content: public static bool DecodeXmlNamespaceForClrTypeNamespace (string inNamespace, out string typeNamespace, out string assemblyName);
    parameters:
    - id: inNamespace
      type: System.String
      description: The common language runtime namespace.
    - id: typeNamespace
      type: System.String
      description: When this method returns, contains a <xref href="System.String"></xref> that holds the decoded namespace name. This parameter is passed uninitialized.
    - id: assemblyName
      type: System.String
      description: When this method returns, contains a <xref href="System.String"></xref> that holds the decoded assembly name. This parameter is passed uninitialized.
    return:
      type: System.Boolean
      description: '`true` if the namespace and assembly names were successfully decoded; otherwise, `false`.'
  overload: System.Runtime.Remoting.SoapServices.DecodeXmlNamespaceForClrTypeNamespace*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>inNamespace</code> parameter is `null` or empty.
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The immediate caller does not have infrastructure permission.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/SoapServices.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Remoting.SoapServices.GetInteropFieldTypeAndNameFromXmlAttribute(System.Type,System.String,System.String,System.Type@,System.String@)
  commentId: M:System.Runtime.Remoting.SoapServices.GetInteropFieldTypeAndNameFromXmlAttribute(System.Type,System.String,System.String,System.Type@,System.String@)
  id: GetInteropFieldTypeAndNameFromXmlAttribute(System.Type,System.String,System.String,System.Type@,System.String@)
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: GetInteropFieldTypeAndNameFromXmlAttribute(Type, String, String, Type, String)
  nameWithType: SoapServices.GetInteropFieldTypeAndNameFromXmlAttribute(Type, String, String, Type, String)
  fullName: SoapServices.GetInteropFieldTypeAndNameFromXmlAttribute(Type, String, String, Type, String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: Retrieves field type from XML attribute name, namespace, and the <xref href="System.Type"></xref> of the containing object.
  remarks: Given the type of the containing object and the XML attribute and XML namespace that is read in by the .NET Framework, the current method returns the actual common language runtime field name and type of the field. The .NET Framework then uses this information to populate that field with the data read in from the XML stream.
  example:
  - "The following code example shows how to use this method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!code-cpp[System.Runtime.Remoting.SoapServices#150](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#150)]\n [!code-csharp[System.Runtime.Remoting.SoapServices#150](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#150)]"
  syntax:
    content: public static void GetInteropFieldTypeAndNameFromXmlAttribute (Type containingType, string xmlAttribute, string xmlNamespace, out Type type, out string name);
    parameters:
    - id: containingType
      type: System.Type
      description: The <xref href="System.Type"></xref> of the object that contains the field.
    - id: xmlAttribute
      type: System.String
      description: The XML attribute name of the field type.
    - id: xmlNamespace
      type: System.String
      description: The XML namespace of the field type.
    - id: type
      type: System.Type
      description: When this method returns, contains a <xref href="System.Type"></xref> of the field. This parameter is passed uninitialized.
    - id: name
      type: System.String
      description: When this method returns, contains a <xref href="System.String"></xref> that holds the name of the field. This parameter is passed uninitialized.
  overload: System.Runtime.Remoting.SoapServices.GetInteropFieldTypeAndNameFromXmlAttribute*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The immediate caller does not have infrastructure permission.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/SoapServices.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Remoting.SoapServices.GetInteropFieldTypeAndNameFromXmlElement(System.Type,System.String,System.String,System.Type@,System.String@)
  commentId: M:System.Runtime.Remoting.SoapServices.GetInteropFieldTypeAndNameFromXmlElement(System.Type,System.String,System.String,System.Type@,System.String@)
  id: GetInteropFieldTypeAndNameFromXmlElement(System.Type,System.String,System.String,System.Type@,System.String@)
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: GetInteropFieldTypeAndNameFromXmlElement(Type, String, String, Type, String)
  nameWithType: SoapServices.GetInteropFieldTypeAndNameFromXmlElement(Type, String, String, Type, String)
  fullName: SoapServices.GetInteropFieldTypeAndNameFromXmlElement(Type, String, String, Type, String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: Retrieves the <xref href="System.Type"></xref> and name of a field from the provided XML element name, namespace, and the containing type.
  remarks: Given the type of the containing object and the XML element and XML namespace that is read in by the .NET Framework, this method returns the actual common language runtime field name and type of the field. The .NET Framework then uses this information to populate that field with the data read in from the XML stream.
  example:
  - "The following code example shows how to use this method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!code-cpp[System.Runtime.Remoting.SoapServices#150](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#150)]\n [!code-csharp[System.Runtime.Remoting.SoapServices#150](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#150)]"
  syntax:
    content: public static void GetInteropFieldTypeAndNameFromXmlElement (Type containingType, string xmlElement, string xmlNamespace, out Type type, out string name);
    parameters:
    - id: containingType
      type: System.Type
      description: The <xref href="System.Type"></xref> of the object that contains the field.
    - id: xmlElement
      type: System.String
      description: The XML element name of field.
    - id: xmlNamespace
      type: System.String
      description: The XML namespace of the field type.
    - id: type
      type: System.Type
      description: When this method returns, contains a <xref href="System.Type"></xref> of the field. This parameter is passed uninitialized.
    - id: name
      type: System.String
      description: When this method returns, contains a <xref href="System.String"></xref> that holds the name of the field. This parameter is passed uninitialized.
  overload: System.Runtime.Remoting.SoapServices.GetInteropFieldTypeAndNameFromXmlElement*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The immediate caller does not have infrastructure permission.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/SoapServices.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Remoting.SoapServices.GetInteropTypeFromXmlElement(System.String,System.String)
  commentId: M:System.Runtime.Remoting.SoapServices.GetInteropTypeFromXmlElement(System.String,System.String)
  id: GetInteropTypeFromXmlElement(System.String,System.String)
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: GetInteropTypeFromXmlElement(String, String)
  nameWithType: SoapServices.GetInteropTypeFromXmlElement(String, String)
  fullName: SoapServices.GetInteropTypeFromXmlElement(String, String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: Retrieves the <xref href="System.Type"></xref> that should be used during deserialization of an unrecognized object type with the given XML element name and namespace.
  remarks: The current method returns values set up through <xref:System.Runtime.Remoting.SoapServices.RegisterInteropXmlElement%2A> and <xref:System.Runtime.Remoting.SoapServices.PreLoad%2A>.
  example:
  - "The following code example shows how to use this method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!code-cpp[System.Runtime.Remoting.SoapServices#160](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#160)]\n [!code-csharp[System.Runtime.Remoting.SoapServices#160](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#160)]"
  syntax:
    content: public static Type GetInteropTypeFromXmlElement (string xmlElement, string xmlNamespace);
    parameters:
    - id: xmlElement
      type: System.String
      description: The XML element name of the unknown object type.
    - id: xmlNamespace
      type: System.String
      description: The XML namespace of the unknown object type.
    return:
      type: System.Type
      description: The <xref href="System.Type"></xref> of object associated with the specified XML element name and namespace.
  overload: System.Runtime.Remoting.SoapServices.GetInteropTypeFromXmlElement*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The immediate caller does not have infrastructure permission.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/SoapServices.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Remoting.SoapServices.GetInteropTypeFromXmlType(System.String,System.String)
  commentId: M:System.Runtime.Remoting.SoapServices.GetInteropTypeFromXmlType(System.String,System.String)
  id: GetInteropTypeFromXmlType(System.String,System.String)
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: GetInteropTypeFromXmlType(String, String)
  nameWithType: SoapServices.GetInteropTypeFromXmlType(String, String)
  fullName: SoapServices.GetInteropTypeFromXmlType(String, String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: Retrieves the object <xref href="System.Type"></xref> that should be used during deserialization of an unrecognized object type with the given XML type name and namespace.
  remarks: The current method returns values set up through <xref:System.Runtime.Remoting.SoapServices.RegisterInteropXmlType%2A> and <xref:System.Runtime.Remoting.SoapServices.PreLoad%2A>.
  example:
  - "The following code example shows how to use this method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!code-cpp[System.Runtime.Remoting.SoapServices#160](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#160)]\n [!code-csharp[System.Runtime.Remoting.SoapServices#160](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#160)]"
  syntax:
    content: public static Type GetInteropTypeFromXmlType (string xmlType, string xmlTypeNamespace);
    parameters:
    - id: xmlType
      type: System.String
      description: The XML type of the unknown object type.
    - id: xmlTypeNamespace
      type: System.String
      description: The XML type namespace of the unknown object type.
    return:
      type: System.Type
      description: The <xref href="System.Type"></xref> of object associated with the specified XML type name and namespace.
  overload: System.Runtime.Remoting.SoapServices.GetInteropTypeFromXmlType*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The immediate caller does not have infrastructure permission.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/SoapServices.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Remoting.SoapServices.GetSoapActionFromMethodBase(System.Reflection.MethodBase)
  commentId: M:System.Runtime.Remoting.SoapServices.GetSoapActionFromMethodBase(System.Reflection.MethodBase)
  id: GetSoapActionFromMethodBase(System.Reflection.MethodBase)
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: GetSoapActionFromMethodBase(MethodBase)
  nameWithType: SoapServices.GetSoapActionFromMethodBase(MethodBase)
  fullName: SoapServices.GetSoapActionFromMethodBase(MethodBase)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: Returns the SOAPAction value associated with the method specified in the given <xref href="System.Reflection.MethodBase"></xref>.
  remarks: If the given <xref:System.Reflection.MethodBase> has not been registered with any SOAPAction value, the <xref:System.Runtime.Remoting.SoapServices.GetSoapActionFromMethodBase%2A> method returns the SOAPAction automatically cached with the <xref:System.Reflection.MethodBase>.
  example:
  - "The following code example shows how to use this method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!code-cpp[System.Runtime.Remoting.SoapServices#140](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#140)]\n [!code-csharp[System.Runtime.Remoting.SoapServices#140](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#140)]"
  syntax:
    content: public static string GetSoapActionFromMethodBase (System.Reflection.MethodBase mb);
    parameters:
    - id: mb
      type: System.Reflection.MethodBase
      description: The <xref href="System.Reflection.MethodBase"></xref> that contains the method for which a SOAPAction is requested.
    return:
      type: System.String
      description: The SOAPAction value associated with the method specified in the given <xref href="System.Reflection.MethodBase"></xref>.
  overload: System.Runtime.Remoting.SoapServices.GetSoapActionFromMethodBase*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The immediate caller does not have infrastructure permission.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/SoapServices.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Remoting.SoapServices.GetTypeAndMethodNameFromSoapAction(System.String,System.String@,System.String@)
  commentId: M:System.Runtime.Remoting.SoapServices.GetTypeAndMethodNameFromSoapAction(System.String,System.String@,System.String@)
  id: GetTypeAndMethodNameFromSoapAction(System.String,System.String@,System.String@)
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: GetTypeAndMethodNameFromSoapAction(String, String, String)
  nameWithType: SoapServices.GetTypeAndMethodNameFromSoapAction(String, String, String)
  fullName: SoapServices.GetTypeAndMethodNameFromSoapAction(String, String, String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: Determines the type and method name of the method associated with the specified SOAPAction value.
  remarks: '`true` if the type and method name lookups were successful; otherwise, `false`.'
  example:
  - "The following code example shows how to use this method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!code-cpp[System.Runtime.Remoting.SoapServices#140](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#140)]\n [!code-csharp[System.Runtime.Remoting.SoapServices#140](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#140)]"
  syntax:
    content: public static bool GetTypeAndMethodNameFromSoapAction (string soapAction, out string typeName, out string methodName);
    parameters:
    - id: soapAction
      type: System.String
      description: The SOAPAction of the method for which the type and method names were requested.
    - id: typeName
      type: System.String
      description: When this method returns, contains a <xref href="System.String"></xref> that holds the type name of the method in question. This parameter is passed uninitialized.
    - id: methodName
      type: System.String
      description: When this method returns, contains a <xref href="System.String"></xref> that holds the method name of the method in question. This parameter is passed uninitialized.
    return:
      type: System.Boolean
      description: '`true` if the type and method name were successfully recovered; otherwise, `false`.'
  overload: System.Runtime.Remoting.SoapServices.GetTypeAndMethodNameFromSoapAction*
  exceptions:
  - type: System.Runtime.Remoting.RemotingException
    commentId: T:System.Runtime.Remoting.RemotingException
    description: The SOAPAction value does not start and end with quotes.
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The immediate caller does not have infrastructure permission.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/SoapServices.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Remoting.SoapServices.GetXmlElementForInteropType(System.Type,System.String@,System.String@)
  commentId: M:System.Runtime.Remoting.SoapServices.GetXmlElementForInteropType(System.Type,System.String@,System.String@)
  id: GetXmlElementForInteropType(System.Type,System.String@,System.String@)
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: GetXmlElementForInteropType(Type, String, String)
  nameWithType: SoapServices.GetXmlElementForInteropType(Type, String, String)
  fullName: SoapServices.GetXmlElementForInteropType(Type, String, String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: Returns XML element information that should be used when serializing the given type.
  remarks: ''
  example:
  - "The following code example shows how to use this method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!code-cpp[System.Runtime.Remoting.SoapServices#103](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#103)]\n [!code-csharp[System.Runtime.Remoting.SoapServices#103](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#103)]"
  syntax:
    content: public static bool GetXmlElementForInteropType (Type type, out string xmlElement, out string xmlNamespace);
    parameters:
    - id: type
      type: System.Type
      description: The object <xref href="System.Type"></xref> for which the XML element and namespace names were requested.
    - id: xmlElement
      type: System.String
      description: When this method returns, contains a <xref href="System.String"></xref> that holds the XML element name of the specified object type. This parameter is passed uninitialized.
    - id: xmlNamespace
      type: System.String
      description: When this method returns, contains a <xref href="System.String"></xref> that holds the XML namespace name of the specified object type. This parameter is passed uninitialized.
    return:
      type: System.Boolean
      description: '`true` if the requested values have been set flagged with <xref href="System.Runtime.Remoting.Metadata.SoapTypeAttribute"></xref>; otherwise, `false`.'
  overload: System.Runtime.Remoting.SoapServices.GetXmlElementForInteropType*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The immediate caller does not have infrastructure permission.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/SoapServices.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Remoting.SoapServices.GetXmlNamespaceForMethodCall(System.Reflection.MethodBase)
  commentId: M:System.Runtime.Remoting.SoapServices.GetXmlNamespaceForMethodCall(System.Reflection.MethodBase)
  id: GetXmlNamespaceForMethodCall(System.Reflection.MethodBase)
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: GetXmlNamespaceForMethodCall(MethodBase)
  nameWithType: SoapServices.GetXmlNamespaceForMethodCall(MethodBase)
  fullName: SoapServices.GetXmlNamespaceForMethodCall(MethodBase)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: Retrieves the XML namespace used during remote calls of the method specified in the given <xref href="System.Reflection.MethodBase"></xref>.
  remarks: ''
  example:
  - "The following code example shows how to use this method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!code-cpp[System.Runtime.Remoting.SoapServices#105](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#105)]\n [!code-csharp[System.Runtime.Remoting.SoapServices#105](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#105)]"
  syntax:
    content: public static string GetXmlNamespaceForMethodCall (System.Reflection.MethodBase mb);
    parameters:
    - id: mb
      type: System.Reflection.MethodBase
      description: The <xref href="System.Reflection.MethodBase"></xref> of the method for which the XML namespace was requested.
    return:
      type: System.String
      description: The XML namespace used during remote calls of the specified method.
  overload: System.Runtime.Remoting.SoapServices.GetXmlNamespaceForMethodCall*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The immediate caller does not have infrastructure permission.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/SoapServices.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Remoting.SoapServices.GetXmlNamespaceForMethodResponse(System.Reflection.MethodBase)
  commentId: M:System.Runtime.Remoting.SoapServices.GetXmlNamespaceForMethodResponse(System.Reflection.MethodBase)
  id: GetXmlNamespaceForMethodResponse(System.Reflection.MethodBase)
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: GetXmlNamespaceForMethodResponse(MethodBase)
  nameWithType: SoapServices.GetXmlNamespaceForMethodResponse(MethodBase)
  fullName: SoapServices.GetXmlNamespaceForMethodResponse(MethodBase)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: Retrieves the XML namespace used during the generation of responses to the remote call to the method specified in the given <xref href="System.Reflection.MethodBase"></xref>.
  remarks: ''
  example:
  - "The following code example shows how to use this method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!code-cpp[System.Runtime.Remoting.SoapServices#105](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#105)]\n [!code-csharp[System.Runtime.Remoting.SoapServices#105](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#105)]"
  syntax:
    content: public static string GetXmlNamespaceForMethodResponse (System.Reflection.MethodBase mb);
    parameters:
    - id: mb
      type: System.Reflection.MethodBase
      description: The <xref href="System.Reflection.MethodBase"></xref> of the method for which the XML namespace was requested.
    return:
      type: System.String
      description: The XML namespace used during the generation of responses to a remote method call.
  overload: System.Runtime.Remoting.SoapServices.GetXmlNamespaceForMethodResponse*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The immediate caller does not have infrastructure permission.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/SoapServices.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Remoting.SoapServices.GetXmlTypeForInteropType(System.Type,System.String@,System.String@)
  commentId: M:System.Runtime.Remoting.SoapServices.GetXmlTypeForInteropType(System.Type,System.String@,System.String@)
  id: GetXmlTypeForInteropType(System.Type,System.String@,System.String@)
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: GetXmlTypeForInteropType(Type, String, String)
  nameWithType: SoapServices.GetXmlTypeForInteropType(Type, String, String)
  fullName: SoapServices.GetXmlTypeForInteropType(Type, String, String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: Returns XML type information that should be used when serializing the given <xref href="System.Type"></xref>.
  remarks: ''
  example:
  - "The following code example shows how to use this method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!code-cpp[System.Runtime.Remoting.SoapServices#104](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#104)]\n [!code-csharp[System.Runtime.Remoting.SoapServices#104](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#104)]"
  syntax:
    content: public static bool GetXmlTypeForInteropType (Type type, out string xmlType, out string xmlTypeNamespace);
    parameters:
    - id: type
      type: System.Type
      description: The object <xref href="System.Type"></xref> for which the XML element and namespace names were requested.
    - id: xmlType
      type: System.String
      description: The XML type of the specified object <xref href="System.Type"></xref>.
    - id: xmlTypeNamespace
      type: System.String
      description: The XML type namespace of the specified object <xref href="System.Type"></xref>.
    return:
      type: System.Boolean
      description: '`true` if the requested values have been set flagged with <xref href="System.Runtime.Remoting.Metadata.SoapTypeAttribute"></xref>; otherwise, `false`.'
  overload: System.Runtime.Remoting.SoapServices.GetXmlTypeForInteropType*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The immediate caller does not have infrastructure permission.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/SoapServices.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Remoting.SoapServices.IsClrTypeNamespace(System.String)
  commentId: M:System.Runtime.Remoting.SoapServices.IsClrTypeNamespace(System.String)
  id: IsClrTypeNamespace(System.String)
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: IsClrTypeNamespace(String)
  nameWithType: SoapServices.IsClrTypeNamespace(String)
  fullName: SoapServices.IsClrTypeNamespace(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: Returns a Boolean value that indicates whether the specified namespace is native to the common language runtime.
  remarks: "The current method is used by the SoapSuds tool to determine whether an XML namespace represents a common language runtime type or a type from a non-common language runtime system.  \n  \n For more information about SoapSuds, see [Soapsuds Tool (Soapsuds.exe)](http://msdn.microsoft.com/en-us/40f6f8c8-b80c-4e9f-a920-31bcd0cf45c5)."
  example:
  - "The following code example shows how to use this method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!code-cpp[System.Runtime.Remoting.SoapServices#106](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#106)]\n [!code-csharp[System.Runtime.Remoting.SoapServices#106](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#106)]"
  syntax:
    content: public static bool IsClrTypeNamespace (string namespaceString);
    parameters:
    - id: namespaceString
      type: System.String
      description: The namespace to check in the common language runtime.
    return:
      type: System.Boolean
      description: '`true` if the given namespace is native to the common language runtime; otherwise, `false`.'
  overload: System.Runtime.Remoting.SoapServices.IsClrTypeNamespace*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The immediate caller does not have infrastructure permission.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/SoapServices.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Remoting.SoapServices.IsSoapActionValidForMethodBase(System.String,System.Reflection.MethodBase)
  commentId: M:System.Runtime.Remoting.SoapServices.IsSoapActionValidForMethodBase(System.String,System.Reflection.MethodBase)
  id: IsSoapActionValidForMethodBase(System.String,System.Reflection.MethodBase)
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: IsSoapActionValidForMethodBase(String, MethodBase)
  nameWithType: SoapServices.IsSoapActionValidForMethodBase(String, MethodBase)
  fullName: SoapServices.IsSoapActionValidForMethodBase(String, MethodBase)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: Determines if the specified SOAPAction is acceptable for a given <xref href="System.Reflection.MethodBase"></xref>.
  remarks: ''
  example:
  - "The following code example shows how to use this method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!code-cpp[System.Runtime.Remoting.SoapServices#140](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#140)]\n [!code-csharp[System.Runtime.Remoting.SoapServices#140](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#140)]"
  syntax:
    content: public static bool IsSoapActionValidForMethodBase (string soapAction, System.Reflection.MethodBase mb);
    parameters:
    - id: soapAction
      type: System.String
      description: The SOAPAction to check against the given <xref href="System.Reflection.MethodBase"></xref>.
    - id: mb
      type: System.Reflection.MethodBase
      description: The <xref href="System.Reflection.MethodBase"></xref> the specified SOAPAction is checked against.
    return:
      type: System.Boolean
      description: '`true` if the specified SOAPAction is acceptable for a given <xref href="System.Reflection.MethodBase"></xref>; otherwise, `false`.'
  overload: System.Runtime.Remoting.SoapServices.IsSoapActionValidForMethodBase*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The immediate caller does not have infrastructure permission.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/SoapServices.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Remoting.SoapServices.PreLoad(System.Reflection.Assembly)
  commentId: M:System.Runtime.Remoting.SoapServices.PreLoad(System.Reflection.Assembly)
  id: PreLoad(System.Reflection.Assembly)
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: PreLoad(Assembly)
  nameWithType: SoapServices.PreLoad(Assembly)
  fullName: SoapServices.PreLoad(Assembly)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: Preloads every <xref href="System.Type"></xref> found in the specified <xref href="System.Reflection.Assembly"></xref> from the information found in the <xref href="System.Runtime.Remoting.Metadata.SoapTypeAttribute"></xref> associated with each type.
  remarks: 'When the .NET Framework is parsing an XML stream, it needs to know how to convert the XML read from the stream into common language runtime types. The information that specifies how the .NET Framework should generate and parse an XML stream is stored in custom attributes that are located in the <xref:System.Runtime.Remoting.Metadata> namespace. There are two ways to specify this information in a configuration file: either by explicitly specifying the mappings, or by specifying which object types to preload. The custom attributes are read during the preloading process and the information in them is made available to the SOAP parser.'
  example:
  - "The following code example shows how to use this method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!code-cpp[System.Runtime.Remoting.SoapServices#120](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#120)]\n [!code-csharp[System.Runtime.Remoting.SoapServices#120](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#120)]"
  syntax:
    content: public static void PreLoad (System.Reflection.Assembly assembly);
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: The <xref href="System.Reflection.Assembly"></xref> for each type of which to call <xref href="System.Runtime.Remoting.SoapServices.PreLoad(System.Type)"></xref>.
  overload: System.Runtime.Remoting.SoapServices.PreLoad*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The immediate caller does not have infrastructure permission.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/SoapServices.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Remoting.SoapServices.PreLoad(System.Type)
  commentId: M:System.Runtime.Remoting.SoapServices.PreLoad(System.Type)
  id: PreLoad(System.Type)
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: PreLoad(Type)
  nameWithType: SoapServices.PreLoad(Type)
  fullName: SoapServices.PreLoad(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: Preloads the given <xref href="System.Type"></xref> based on values set in a <xref href="System.Runtime.Remoting.Metadata.SoapTypeAttribute"></xref> on the type.
  remarks: 'When the .NET Framework is parsing an XML stream, it needs to know how to convert the XML read from the stream into common language runtime types. The information that specifies how the .NET Framework should generate and parse an XML stream is stored in custom attributes that are located in the <xref:System.Runtime.Remoting.Metadata> namespace. There are two ways to specify this information in a configuration file: either by explicitly specifying the mappings, or by specifying which object types to preload. The custom attributes are read during the preloading process and the information in them is made available to the SOAP parser.'
  example:
  - "The following code example shows how to use this method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!code-cpp[System.Runtime.Remoting.SoapServices#121](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#121)]\n [!code-csharp[System.Runtime.Remoting.SoapServices#121](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#121)]"
  syntax:
    content: public static void PreLoad (Type type);
    parameters:
    - id: type
      type: System.Type
      description: The <xref href="System.Type"></xref> to preload.
  overload: System.Runtime.Remoting.SoapServices.PreLoad*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The immediate caller does not have infrastructure permission.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/SoapServices.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Remoting.SoapServices.RegisterInteropXmlElement(System.String,System.String,System.Type)
  commentId: M:System.Runtime.Remoting.SoapServices.RegisterInteropXmlElement(System.String,System.String,System.Type)
  id: RegisterInteropXmlElement(System.String,System.String,System.Type)
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: RegisterInteropXmlElement(String, String, Type)
  nameWithType: SoapServices.RegisterInteropXmlElement(String, String, Type)
  fullName: SoapServices.RegisterInteropXmlElement(String, String, Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: Associates the given XML element name and namespace with a run-time type that should be used for deserialization.
  remarks: ''
  example:
  - "The following code example shows how to use this method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!code-cpp[System.Runtime.Remoting.SoapServices#180](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#180)]\n [!code-csharp[System.Runtime.Remoting.SoapServices#180](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#180)]"
  syntax:
    content: public static void RegisterInteropXmlElement (string xmlElement, string xmlNamespace, Type type);
    parameters:
    - id: xmlElement
      type: System.String
      description: The XML element name to use in deserialization.
    - id: xmlNamespace
      type: System.String
      description: The XML namespace to use in deserialization.
    - id: type
      type: System.Type
      description: The run-time <xref href="System.Type"></xref> to use in deserialization.
  overload: System.Runtime.Remoting.SoapServices.RegisterInteropXmlElement*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The immediate caller does not have infrastructure permission.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/SoapServices.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Remoting.SoapServices.RegisterInteropXmlType(System.String,System.String,System.Type)
  commentId: M:System.Runtime.Remoting.SoapServices.RegisterInteropXmlType(System.String,System.String,System.Type)
  id: RegisterInteropXmlType(System.String,System.String,System.Type)
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: RegisterInteropXmlType(String, String, Type)
  nameWithType: SoapServices.RegisterInteropXmlType(String, String, Type)
  fullName: SoapServices.RegisterInteropXmlType(String, String, Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: Associates the given XML type name and namespace with the run-time type that should be used for deserialization.
  remarks: ''
  example:
  - "The following code example shows how to use this method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!code-cpp[System.Runtime.Remoting.SoapServices#190](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#190)]\n [!code-csharp[System.Runtime.Remoting.SoapServices#190](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#190)]"
  syntax:
    content: public static void RegisterInteropXmlType (string xmlType, string xmlTypeNamespace, Type type);
    parameters:
    - id: xmlType
      type: System.String
      description: The XML type to use in deserialization.
    - id: xmlTypeNamespace
      type: System.String
      description: The XML namespace to use in deserialization.
    - id: type
      type: System.Type
      description: The run-time <xref href="System.Type"></xref> to use in deserialization.
  overload: System.Runtime.Remoting.SoapServices.RegisterInteropXmlType*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The immediate caller does not have infrastructure permission.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/SoapServices.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Remoting.SoapServices.RegisterSoapActionForMethodBase(System.Reflection.MethodBase)
  commentId: M:System.Runtime.Remoting.SoapServices.RegisterSoapActionForMethodBase(System.Reflection.MethodBase)
  id: RegisterSoapActionForMethodBase(System.Reflection.MethodBase)
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: RegisterSoapActionForMethodBase(MethodBase)
  nameWithType: SoapServices.RegisterSoapActionForMethodBase(MethodBase)
  fullName: SoapServices.RegisterSoapActionForMethodBase(MethodBase)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: Associates the specified <xref href="System.Reflection.MethodBase"></xref> with the SOAPAction cached with it.
  remarks: "The SOAPAction of the specified method is contained in the <xref:System.Runtime.Remoting.Metadata.SoapMethodAttribute.SoapAction%2A?displayProperty=fullName> property, or is read off the wire. The current method associates the SOAPAction with the <xref:System.Reflection.MethodBase> for use in channel sinks.  \n  \n The SOAPAction HTTP request header field indicates the intent of the SOAP HTTP request. The value is a URI identifying the intent. SOAP places no restrictions on the format or specificity of the URI or that it is resolvable. An HTTP client must use this header field when issuing a SOAP HTTP request."
  example:
  - "The following code example shows how to use this method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!code-cpp[System.Runtime.Remoting.SoapServices#170](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#170)]\n [!code-csharp[System.Runtime.Remoting.SoapServices#170](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#170)]"
  syntax:
    content: public static void RegisterSoapActionForMethodBase (System.Reflection.MethodBase mb);
    parameters:
    - id: mb
      type: System.Reflection.MethodBase
      description: The <xref href="System.Reflection.MethodBase"></xref> of the method to associate with the SOAPAction cached with it.
  overload: System.Runtime.Remoting.SoapServices.RegisterSoapActionForMethodBase*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The immediate caller does not have infrastructure permission.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/SoapServices.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Remoting.SoapServices.RegisterSoapActionForMethodBase(System.Reflection.MethodBase,System.String)
  commentId: M:System.Runtime.Remoting.SoapServices.RegisterSoapActionForMethodBase(System.Reflection.MethodBase,System.String)
  id: RegisterSoapActionForMethodBase(System.Reflection.MethodBase,System.String)
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: RegisterSoapActionForMethodBase(MethodBase, String)
  nameWithType: SoapServices.RegisterSoapActionForMethodBase(MethodBase, String)
  fullName: SoapServices.RegisterSoapActionForMethodBase(MethodBase, String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: Associates the provided SOAPAction value with the given <xref href="System.Reflection.MethodBase"></xref> for use in channel sinks.
  remarks: The SOAPAction HTTP request header field indicates the intent of the SOAP HTTP request. The value is a URI identifying the intent. SOAP places no restrictions on the format or specificity of the URI or that it is resolvable. An HTTP client must use this header field when issuing a SOAP HTTP request.
  example:
  - "The following code example shows how to use this method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!code-cpp[System.Runtime.Remoting.SoapServices#170](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#170)]\n [!code-csharp[System.Runtime.Remoting.SoapServices#170](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#170)]"
  syntax:
    content: public static void RegisterSoapActionForMethodBase (System.Reflection.MethodBase mb, string soapAction);
    parameters:
    - id: mb
      type: System.Reflection.MethodBase
      description: The <xref href="System.Reflection.MethodBase"></xref> to associate with the provided SOAPAction.
    - id: soapAction
      type: System.String
      description: The SOAPAction value to associate with the given <xref href="System.Reflection.MethodBase"></xref>.
  overload: System.Runtime.Remoting.SoapServices.RegisterSoapActionForMethodBase*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The immediate caller does not have infrastructure permission.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/SoapServices.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Remoting.SoapServices.XmlNsForClrType
  commentId: P:System.Runtime.Remoting.SoapServices.XmlNsForClrType
  id: XmlNsForClrType
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: XmlNsForClrType
  nameWithType: SoapServices.XmlNsForClrType
  fullName: SoapServices.XmlNsForClrType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: Gets the XML namespace prefix for common language runtime types.
  remarks: WSDL and SOAP protocols encode common language runtime classes into XML namespaces. The current property specifies the format for the XML namespaces. All XML namespaces for a common language runtime class start with the <xref:System.String> that the current property returns.
  example:
  - "The following code example shows how to use this property. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!code-cpp[System.Runtime.Remoting.SoapServices#130](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#130)]\n [!code-csharp[System.Runtime.Remoting.SoapServices#130](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#130)]"
  syntax:
    content: public static string XmlNsForClrType { get; }
    return:
      type: System.String
      description: The XML namespace prefix for common language runtime types.
  overload: System.Runtime.Remoting.SoapServices.XmlNsForClrType*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The immediate caller does not have infrastructure permission.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/SoapServices.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Remoting.SoapServices.XmlNsForClrTypeWithAssembly
  commentId: P:System.Runtime.Remoting.SoapServices.XmlNsForClrTypeWithAssembly
  id: XmlNsForClrTypeWithAssembly
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: XmlNsForClrTypeWithAssembly
  nameWithType: SoapServices.XmlNsForClrTypeWithAssembly
  fullName: SoapServices.XmlNsForClrTypeWithAssembly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: Gets the default XML namespace prefix that should be used for XML encoding of a common language runtime class that has an assembly, but no native namespace.
  remarks: WSDL and SOAP protocols encode common language runtime classes into XML namespaces. The current property specifies the format for the XML namespaces. If a common language runtime class has an assembly but no namespace, the current property returns the default XML namespace that is used.
  example:
  - "The following code example shows how to use this property. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!code-cpp[System.Runtime.Remoting.SoapServices#131](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#131)]\n [!code-csharp[System.Runtime.Remoting.SoapServices#131](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#131)]"
  syntax:
    content: public static string XmlNsForClrTypeWithAssembly { get; }
    return:
      type: System.String
      description: The default XML namespace prefix that should be used for XML encoding of a common language runtime class that has an assembly, but no native namespace.
  overload: System.Runtime.Remoting.SoapServices.XmlNsForClrTypeWithAssembly*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The immediate caller does not have infrastructure permission.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/SoapServices.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Remoting.SoapServices.XmlNsForClrTypeWithNs
  commentId: P:System.Runtime.Remoting.SoapServices.XmlNsForClrTypeWithNs
  id: XmlNsForClrTypeWithNs
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: XmlNsForClrTypeWithNs
  nameWithType: SoapServices.XmlNsForClrTypeWithNs
  fullName: SoapServices.XmlNsForClrTypeWithNs
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: Gets the XML namespace prefix that should be used for XML encoding of a common language runtime class that is part of the mscorlib.dll file.
  remarks: WSDL and SOAP protocols encode common language runtime classes into XML namespaces. The current property specifies the format for the XML namespaces. If a common language runtime class is part of the mscorlib assembly, the XML namespace returned by the current property is used.
  example:
  - "The following code example shows how to use this property. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!code-cpp[System.Runtime.Remoting.SoapServices#132](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#132)]\n [!code-csharp[System.Runtime.Remoting.SoapServices#132](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#132)]"
  syntax:
    content: public static string XmlNsForClrTypeWithNs { get; }
    return:
      type: System.String
      description: The XML namespace prefix that should be used for XML encoding of a common language runtime class that is part of the mscorlib.dll file.
  overload: System.Runtime.Remoting.SoapServices.XmlNsForClrTypeWithNs*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The immediate caller does not have infrastructure permission.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/SoapServices.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Remoting.SoapServices.XmlNsForClrTypeWithNsAndAssembly
  commentId: P:System.Runtime.Remoting.SoapServices.XmlNsForClrTypeWithNsAndAssembly
  id: XmlNsForClrTypeWithNsAndAssembly
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: XmlNsForClrTypeWithNsAndAssembly
  nameWithType: SoapServices.XmlNsForClrTypeWithNsAndAssembly
  fullName: SoapServices.XmlNsForClrTypeWithNsAndAssembly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: Gets the default XML namespace prefix that should be used for XML encoding of a common language runtime class that has both a common language runtime namespace and an assembly.
  remarks: WSDL and SOAP protocols encode common language runtime classes into XML namespaces. The current property specifies the format for the XML namespaces. If a common language runtime class has an assembly and a common language runtime namespace, the current property returns the default XML namespace that is used.
  example:
  - "The following code example shows how to use this property. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!code-cpp[System.Runtime.Remoting.SoapServices#133](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#133)]\n [!code-csharp[System.Runtime.Remoting.SoapServices#133](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#133)]"
  syntax:
    content: public static string XmlNsForClrTypeWithNsAndAssembly { get; }
    return:
      type: System.String
      description: The default XML namespace prefix that should be used for XML encoding of a common language runtime class that has both a common language runtime namespace and an assembly.
  overload: System.Runtime.Remoting.SoapServices.XmlNsForClrTypeWithNsAndAssembly*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The immediate caller does not have infrastructure permission.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/SoapServices.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.Security.SecurityException
  parent: System.Security
  isExternal: false
  name: SecurityException
  nameWithType: SecurityException
  fullName: System.Security.SecurityException
- uid: System.Runtime.Remoting.RemotingException
  parent: System.Runtime.Remoting
  isExternal: false
  name: RemotingException
  nameWithType: RemotingException
  fullName: System.Runtime.Remoting.RemotingException
- uid: System.Runtime.Remoting.SoapServices.CodeXmlNamespaceForClrTypeNamespace(System.String,System.String)
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: CodeXmlNamespaceForClrTypeNamespace(String, String)
  nameWithType: SoapServices.CodeXmlNamespaceForClrTypeNamespace(String, String)
  fullName: SoapServices.CodeXmlNamespaceForClrTypeNamespace(String, String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Remoting.SoapServices.DecodeXmlNamespaceForClrTypeNamespace(System.String,System.String@,System.String@)
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: DecodeXmlNamespaceForClrTypeNamespace(String, String, String)
  nameWithType: SoapServices.DecodeXmlNamespaceForClrTypeNamespace(String, String, String)
  fullName: SoapServices.DecodeXmlNamespaceForClrTypeNamespace(String, String, String)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.Remoting.SoapServices.GetInteropFieldTypeAndNameFromXmlAttribute(System.Type,System.String,System.String,System.Type@,System.String@)
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: GetInteropFieldTypeAndNameFromXmlAttribute(Type, String, String, Type, String)
  nameWithType: SoapServices.GetInteropFieldTypeAndNameFromXmlAttribute(Type, String, String, Type, String)
  fullName: SoapServices.GetInteropFieldTypeAndNameFromXmlAttribute(Type, String, String, Type, String)
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.Remoting.SoapServices.GetInteropFieldTypeAndNameFromXmlElement(System.Type,System.String,System.String,System.Type@,System.String@)
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: GetInteropFieldTypeAndNameFromXmlElement(Type, String, String, Type, String)
  nameWithType: SoapServices.GetInteropFieldTypeAndNameFromXmlElement(Type, String, String, Type, String)
  fullName: SoapServices.GetInteropFieldTypeAndNameFromXmlElement(Type, String, String, Type, String)
- uid: System.Runtime.Remoting.SoapServices.GetInteropTypeFromXmlElement(System.String,System.String)
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: GetInteropTypeFromXmlElement(String, String)
  nameWithType: SoapServices.GetInteropTypeFromXmlElement(String, String)
  fullName: SoapServices.GetInteropTypeFromXmlElement(String, String)
- uid: System.Runtime.Remoting.SoapServices.GetInteropTypeFromXmlType(System.String,System.String)
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: GetInteropTypeFromXmlType(String, String)
  nameWithType: SoapServices.GetInteropTypeFromXmlType(String, String)
  fullName: SoapServices.GetInteropTypeFromXmlType(String, String)
- uid: System.Runtime.Remoting.SoapServices.GetSoapActionFromMethodBase(System.Reflection.MethodBase)
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: GetSoapActionFromMethodBase(MethodBase)
  nameWithType: SoapServices.GetSoapActionFromMethodBase(MethodBase)
  fullName: SoapServices.GetSoapActionFromMethodBase(MethodBase)
- uid: System.Reflection.MethodBase
  parent: System.Reflection
  isExternal: false
  name: MethodBase
  nameWithType: MethodBase
  fullName: System.Reflection.MethodBase
- uid: System.Runtime.Remoting.SoapServices.GetTypeAndMethodNameFromSoapAction(System.String,System.String@,System.String@)
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: GetTypeAndMethodNameFromSoapAction(String, String, String)
  nameWithType: SoapServices.GetTypeAndMethodNameFromSoapAction(String, String, String)
  fullName: SoapServices.GetTypeAndMethodNameFromSoapAction(String, String, String)
- uid: System.Runtime.Remoting.SoapServices.GetXmlElementForInteropType(System.Type,System.String@,System.String@)
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: GetXmlElementForInteropType(Type, String, String)
  nameWithType: SoapServices.GetXmlElementForInteropType(Type, String, String)
  fullName: SoapServices.GetXmlElementForInteropType(Type, String, String)
- uid: System.Runtime.Remoting.SoapServices.GetXmlNamespaceForMethodCall(System.Reflection.MethodBase)
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: GetXmlNamespaceForMethodCall(MethodBase)
  nameWithType: SoapServices.GetXmlNamespaceForMethodCall(MethodBase)
  fullName: SoapServices.GetXmlNamespaceForMethodCall(MethodBase)
- uid: System.Runtime.Remoting.SoapServices.GetXmlNamespaceForMethodResponse(System.Reflection.MethodBase)
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: GetXmlNamespaceForMethodResponse(MethodBase)
  nameWithType: SoapServices.GetXmlNamespaceForMethodResponse(MethodBase)
  fullName: SoapServices.GetXmlNamespaceForMethodResponse(MethodBase)
- uid: System.Runtime.Remoting.SoapServices.GetXmlTypeForInteropType(System.Type,System.String@,System.String@)
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: GetXmlTypeForInteropType(Type, String, String)
  nameWithType: SoapServices.GetXmlTypeForInteropType(Type, String, String)
  fullName: SoapServices.GetXmlTypeForInteropType(Type, String, String)
- uid: System.Runtime.Remoting.SoapServices.IsClrTypeNamespace(System.String)
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: IsClrTypeNamespace(String)
  nameWithType: SoapServices.IsClrTypeNamespace(String)
  fullName: SoapServices.IsClrTypeNamespace(String)
- uid: System.Runtime.Remoting.SoapServices.IsSoapActionValidForMethodBase(System.String,System.Reflection.MethodBase)
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: IsSoapActionValidForMethodBase(String, MethodBase)
  nameWithType: SoapServices.IsSoapActionValidForMethodBase(String, MethodBase)
  fullName: SoapServices.IsSoapActionValidForMethodBase(String, MethodBase)
- uid: System.Runtime.Remoting.SoapServices.PreLoad(System.Reflection.Assembly)
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: PreLoad(Assembly)
  nameWithType: SoapServices.PreLoad(Assembly)
  fullName: SoapServices.PreLoad(Assembly)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: false
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Runtime.Remoting.SoapServices.PreLoad(System.Type)
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: PreLoad(Type)
  nameWithType: SoapServices.PreLoad(Type)
  fullName: SoapServices.PreLoad(Type)
- uid: System.Runtime.Remoting.SoapServices.RegisterInteropXmlElement(System.String,System.String,System.Type)
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: RegisterInteropXmlElement(String, String, Type)
  nameWithType: SoapServices.RegisterInteropXmlElement(String, String, Type)
  fullName: SoapServices.RegisterInteropXmlElement(String, String, Type)
- uid: System.Runtime.Remoting.SoapServices.RegisterInteropXmlType(System.String,System.String,System.Type)
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: RegisterInteropXmlType(String, String, Type)
  nameWithType: SoapServices.RegisterInteropXmlType(String, String, Type)
  fullName: SoapServices.RegisterInteropXmlType(String, String, Type)
- uid: System.Runtime.Remoting.SoapServices.RegisterSoapActionForMethodBase(System.Reflection.MethodBase)
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: RegisterSoapActionForMethodBase(MethodBase)
  nameWithType: SoapServices.RegisterSoapActionForMethodBase(MethodBase)
  fullName: SoapServices.RegisterSoapActionForMethodBase(MethodBase)
- uid: System.Runtime.Remoting.SoapServices.RegisterSoapActionForMethodBase(System.Reflection.MethodBase,System.String)
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: RegisterSoapActionForMethodBase(MethodBase, String)
  nameWithType: SoapServices.RegisterSoapActionForMethodBase(MethodBase, String)
  fullName: SoapServices.RegisterSoapActionForMethodBase(MethodBase, String)
- uid: System.Runtime.Remoting.SoapServices.XmlNsForClrType
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: XmlNsForClrType
  nameWithType: SoapServices.XmlNsForClrType
  fullName: SoapServices.XmlNsForClrType
- uid: System.Runtime.Remoting.SoapServices.XmlNsForClrTypeWithAssembly
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: XmlNsForClrTypeWithAssembly
  nameWithType: SoapServices.XmlNsForClrTypeWithAssembly
  fullName: SoapServices.XmlNsForClrTypeWithAssembly
- uid: System.Runtime.Remoting.SoapServices.XmlNsForClrTypeWithNs
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: XmlNsForClrTypeWithNs
  nameWithType: SoapServices.XmlNsForClrTypeWithNs
  fullName: SoapServices.XmlNsForClrTypeWithNs
- uid: System.Runtime.Remoting.SoapServices.XmlNsForClrTypeWithNsAndAssembly
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: XmlNsForClrTypeWithNsAndAssembly
  nameWithType: SoapServices.XmlNsForClrTypeWithNsAndAssembly
  fullName: SoapServices.XmlNsForClrTypeWithNsAndAssembly
- uid: System.Runtime.Remoting.SoapServices.CodeXmlNamespaceForClrTypeNamespace*
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: CodeXmlNamespaceForClrTypeNamespace
  nameWithType: SoapServices.CodeXmlNamespaceForClrTypeNamespace
  fullName: SoapServices.CodeXmlNamespaceForClrTypeNamespace
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/SoapServices.xml
- uid: System.Runtime.Remoting.SoapServices.DecodeXmlNamespaceForClrTypeNamespace*
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: DecodeXmlNamespaceForClrTypeNamespace
  nameWithType: SoapServices.DecodeXmlNamespaceForClrTypeNamespace
  fullName: SoapServices.DecodeXmlNamespaceForClrTypeNamespace
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/SoapServices.xml
- uid: System.Runtime.Remoting.SoapServices.GetInteropFieldTypeAndNameFromXmlAttribute*
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: GetInteropFieldTypeAndNameFromXmlAttribute
  nameWithType: SoapServices.GetInteropFieldTypeAndNameFromXmlAttribute
  fullName: SoapServices.GetInteropFieldTypeAndNameFromXmlAttribute
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/SoapServices.xml
- uid: System.Runtime.Remoting.SoapServices.GetInteropFieldTypeAndNameFromXmlElement*
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: GetInteropFieldTypeAndNameFromXmlElement
  nameWithType: SoapServices.GetInteropFieldTypeAndNameFromXmlElement
  fullName: SoapServices.GetInteropFieldTypeAndNameFromXmlElement
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/SoapServices.xml
- uid: System.Runtime.Remoting.SoapServices.GetInteropTypeFromXmlElement*
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: GetInteropTypeFromXmlElement
  nameWithType: SoapServices.GetInteropTypeFromXmlElement
  fullName: SoapServices.GetInteropTypeFromXmlElement
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/SoapServices.xml
- uid: System.Runtime.Remoting.SoapServices.GetInteropTypeFromXmlType*
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: GetInteropTypeFromXmlType
  nameWithType: SoapServices.GetInteropTypeFromXmlType
  fullName: SoapServices.GetInteropTypeFromXmlType
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/SoapServices.xml
- uid: System.Runtime.Remoting.SoapServices.GetSoapActionFromMethodBase*
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: GetSoapActionFromMethodBase
  nameWithType: SoapServices.GetSoapActionFromMethodBase
  fullName: SoapServices.GetSoapActionFromMethodBase
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/SoapServices.xml
- uid: System.Runtime.Remoting.SoapServices.GetTypeAndMethodNameFromSoapAction*
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: GetTypeAndMethodNameFromSoapAction
  nameWithType: SoapServices.GetTypeAndMethodNameFromSoapAction
  fullName: SoapServices.GetTypeAndMethodNameFromSoapAction
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/SoapServices.xml
- uid: System.Runtime.Remoting.SoapServices.GetXmlElementForInteropType*
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: GetXmlElementForInteropType
  nameWithType: SoapServices.GetXmlElementForInteropType
  fullName: SoapServices.GetXmlElementForInteropType
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/SoapServices.xml
- uid: System.Runtime.Remoting.SoapServices.GetXmlNamespaceForMethodCall*
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: GetXmlNamespaceForMethodCall
  nameWithType: SoapServices.GetXmlNamespaceForMethodCall
  fullName: SoapServices.GetXmlNamespaceForMethodCall
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/SoapServices.xml
- uid: System.Runtime.Remoting.SoapServices.GetXmlNamespaceForMethodResponse*
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: GetXmlNamespaceForMethodResponse
  nameWithType: SoapServices.GetXmlNamespaceForMethodResponse
  fullName: SoapServices.GetXmlNamespaceForMethodResponse
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/SoapServices.xml
- uid: System.Runtime.Remoting.SoapServices.GetXmlTypeForInteropType*
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: GetXmlTypeForInteropType
  nameWithType: SoapServices.GetXmlTypeForInteropType
  fullName: SoapServices.GetXmlTypeForInteropType
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/SoapServices.xml
- uid: System.Runtime.Remoting.SoapServices.IsClrTypeNamespace*
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: IsClrTypeNamespace
  nameWithType: SoapServices.IsClrTypeNamespace
  fullName: SoapServices.IsClrTypeNamespace
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/SoapServices.xml
- uid: System.Runtime.Remoting.SoapServices.IsSoapActionValidForMethodBase*
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: IsSoapActionValidForMethodBase
  nameWithType: SoapServices.IsSoapActionValidForMethodBase
  fullName: SoapServices.IsSoapActionValidForMethodBase
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/SoapServices.xml
- uid: System.Runtime.Remoting.SoapServices.PreLoad*
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: PreLoad
  nameWithType: SoapServices.PreLoad
  fullName: SoapServices.PreLoad
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/SoapServices.xml
- uid: System.Runtime.Remoting.SoapServices.RegisterInteropXmlElement*
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: RegisterInteropXmlElement
  nameWithType: SoapServices.RegisterInteropXmlElement
  fullName: SoapServices.RegisterInteropXmlElement
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/SoapServices.xml
- uid: System.Runtime.Remoting.SoapServices.RegisterInteropXmlType*
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: RegisterInteropXmlType
  nameWithType: SoapServices.RegisterInteropXmlType
  fullName: SoapServices.RegisterInteropXmlType
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/SoapServices.xml
- uid: System.Runtime.Remoting.SoapServices.RegisterSoapActionForMethodBase*
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: RegisterSoapActionForMethodBase
  nameWithType: SoapServices.RegisterSoapActionForMethodBase
  fullName: SoapServices.RegisterSoapActionForMethodBase
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/SoapServices.xml
- uid: System.Runtime.Remoting.SoapServices.XmlNsForClrType*
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: XmlNsForClrType
  nameWithType: SoapServices.XmlNsForClrType
  fullName: SoapServices.XmlNsForClrType
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/SoapServices.xml
- uid: System.Runtime.Remoting.SoapServices.XmlNsForClrTypeWithAssembly*
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: XmlNsForClrTypeWithAssembly
  nameWithType: SoapServices.XmlNsForClrTypeWithAssembly
  fullName: SoapServices.XmlNsForClrTypeWithAssembly
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/SoapServices.xml
- uid: System.Runtime.Remoting.SoapServices.XmlNsForClrTypeWithNs*
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: XmlNsForClrTypeWithNs
  nameWithType: SoapServices.XmlNsForClrTypeWithNs
  fullName: SoapServices.XmlNsForClrTypeWithNs
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/SoapServices.xml
- uid: System.Runtime.Remoting.SoapServices.XmlNsForClrTypeWithNsAndAssembly*
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: XmlNsForClrTypeWithNsAndAssembly
  nameWithType: SoapServices.XmlNsForClrTypeWithNsAndAssembly
  fullName: SoapServices.XmlNsForClrTypeWithNsAndAssembly
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/SoapServices.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
