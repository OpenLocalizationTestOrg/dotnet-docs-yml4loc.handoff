{"nodes":[{"content":"The <xref href=\"System.Configuration.Install\"></xref> namespace provides classes that allow you to write custom installers for your own components. The <xref href=\"System.Configuration.Install.Installer\"></xref> class is the base class for all custom installers in the.NET Framework.","nodes":[{"pos":[0,283],"content":"The <xref href=\"System.Configuration.Install\"></xref> namespace provides classes that allow you to write custom installers for your own components. The <xref href=\"System.Configuration.Install.Installer\"></xref> class is the base class for all custom installers in the.NET Framework.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Configuration.Install\"&gt;&lt;/xref&gt;</ph> namespace provides classes that allow you to write custom installers for your own components.","pos":[0,147],"source":"The <xref href=\"System.Configuration.Install\"></xref> namespace provides classes that allow you to write custom installers for your own components."},{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Configuration.Install.Installer\"&gt;&lt;/xref&gt;</ph> class is the base class for all custom installers in the.NET Framework.","pos":[148,283],"source":" The <xref href=\"System.Configuration.Install.Installer\"></xref> class is the base class for all custom installers in the.NET Framework."}]}],"pos":[899,1183],"yaml":true},{"content":"Through the <xref:System.Configuration.Install.Installer.Installers%2A> property, an installer contains a collection of other installers as children. As the installer is executed, it cycles through its children and calls <xref:System.Configuration.Install.Installer.Install%2A>, <xref:System.Configuration.Install.Installer.Commit%2A>, <xref:System.Configuration.Install.Installer.Rollback%2A>, or <xref:System.Configuration.Install.Installer.Uninstall%2A>. For an example of an object in the <xref:System.Configuration.Install.Installer.Installers%2A> collection, see <xref:System.Diagnostics.EventLogInstaller>.  \n  \n The <xref:System.Configuration.Install.Installer.Context%2A> property contains information about the installation. For example, information about the location of the log file for the installation, the location of the file that saves information required by the <xref:System.Configuration.Install.Installer.Uninstall%2A> method, and the command line that was entered when the installation executable was run. For an example of an installation executable, see [Installutil.exe (Installer Tool)](~/docs/framework/tools/installutil-exe-installer-tool.md).  \n  \n The <xref:System.Configuration.Install.Installer.Install%2A>, <xref:System.Configuration.Install.Installer.Commit%2A>, <xref:System.Configuration.Install.Installer.Rollback%2A>, and <xref:System.Configuration.Install.Installer.Uninstall%2A> methods are not always called on the same instance of <xref:System.Configuration.Install.Installer>. For example, you might use an <xref:System.Configuration.Install.Installer> to install and commit an application, and then release the reference to that <xref:System.Configuration.Install.Installer>. Later, uninstalling the application creates a new reference to an <xref:System.Configuration.Install.Installer>, which means that the <xref:System.Configuration.Install.Installer.Uninstall%2A> method is called on a different instance of <xref:System.Configuration.Install.Installer>. For this reason, do not save the state of a computer in an installer. Instead, use an <xref:System.Collections.IDictionary> that is preserved across calls and passed into the <xref:System.Configuration.Install.Installer.Install%2A>, <xref:System.Configuration.Install.Installer.Commit%2A>, <xref:System.Configuration.Install.Installer.Rollback%2A>, and <xref:System.Configuration.Install.Installer.Uninstall%2A> methods.","nodes":[{"pos":[0,613],"content":"Through the <xref:System.Configuration.Install.Installer.Installers%2A> property, an installer contains a collection of other installers as children. As the installer is executed, it cycles through its children and calls <xref:System.Configuration.Install.Installer.Install%2A>, <xref:System.Configuration.Install.Installer.Commit%2A>, <xref:System.Configuration.Install.Installer.Rollback%2A>, or <xref:System.Configuration.Install.Installer.Uninstall%2A>. For an example of an object in the <xref:System.Configuration.Install.Installer.Installers%2A> collection, see <xref:System.Diagnostics.EventLogInstaller>.","nodes":[{"content":"Through the <xref:System.Configuration.Install.Installer.Installers%2A> property, an installer contains a collection of other installers as children. As the installer is executed, it cycles through its children and calls <xref:System.Configuration.Install.Installer.Install%2A>, <xref:System.Configuration.Install.Installer.Commit%2A>, <xref:System.Configuration.Install.Installer.Rollback%2A>, or <xref:System.Configuration.Install.Installer.Uninstall%2A>. For an example of an object in the <xref:System.Configuration.Install.Installer.Installers%2A> collection, see <xref:System.Diagnostics.EventLogInstaller>.","pos":[0,613],"nodes":[{"content":"Through the <ph id=\"ph1\">&lt;xref:System.Configuration.Install.Installer.Installers%2A&gt;</ph> property, an installer contains a collection of other installers as children.","pos":[0,149],"source":"Through the <xref:System.Configuration.Install.Installer.Installers%2A> property, an installer contains a collection of other installers as children."},{"content":"As the installer is executed, it cycles through its children and calls <ph id=\"ph1\">&lt;xref:System.Configuration.Install.Installer.Install%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Configuration.Install.Installer.Commit%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Configuration.Install.Installer.Rollback%2A&gt;</ph>, or <ph id=\"ph4\">&lt;xref:System.Configuration.Install.Installer.Uninstall%2A&gt;</ph>.","pos":[150,457],"source":" As the installer is executed, it cycles through its children and calls <xref:System.Configuration.Install.Installer.Install%2A>, <xref:System.Configuration.Install.Installer.Commit%2A>, <xref:System.Configuration.Install.Installer.Rollback%2A>, or <xref:System.Configuration.Install.Installer.Uninstall%2A>."},{"content":"For an example of an object in the <ph id=\"ph1\">&lt;xref:System.Configuration.Install.Installer.Installers%2A&gt;</ph> collection, see <ph id=\"ph2\">&lt;xref:System.Diagnostics.EventLogInstaller&gt;</ph>.","pos":[458,613],"source":" For an example of an object in the <xref:System.Configuration.Install.Installer.Installers%2A> collection, see <xref:System.Diagnostics.EventLogInstaller>."}]}]},{"pos":[620,1171],"content":"The <xref:System.Configuration.Install.Installer.Context%2A> property contains information about the installation. For example, information about the location of the log file for the installation, the location of the file that saves information required by the <xref:System.Configuration.Install.Installer.Uninstall%2A> method, and the command line that was entered when the installation executable was run. For an example of an installation executable, see [Installutil.exe (Installer Tool)](~/docs/framework/tools/installutil-exe-installer-tool.md).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Configuration.Install.Installer.Context%2A&gt;</ph> property contains information about the installation.","pos":[0,114],"source":"The <xref:System.Configuration.Install.Installer.Context%2A> property contains information about the installation."},{"content":"For example, information about the location of the log file for the installation, the location of the file that saves information required by the <ph id=\"ph1\">&lt;xref:System.Configuration.Install.Installer.Uninstall%2A&gt;</ph> method, and the command line that was entered when the installation executable was run.","pos":[115,407],"source":" For example, information about the location of the log file for the installation, the location of the file that saves information required by the <xref:System.Configuration.Install.Installer.Uninstall%2A> method, and the command line that was entered when the installation executable was run."},{"content":"For an example of an installation executable, see <bpt id=\"p1\">[</bpt>Installutil.exe (Installer Tool)<ept id=\"p1\">](~/docs/framework/tools/installutil-exe-installer-tool.md)</ept>.","pos":[408,551],"source":" For an example of an installation executable, see [Installutil.exe (Installer Tool)](~/docs/framework/tools/installutil-exe-installer-tool.md)."}]},{"pos":[1178,2424],"content":"The <xref:System.Configuration.Install.Installer.Install%2A>, <xref:System.Configuration.Install.Installer.Commit%2A>, <xref:System.Configuration.Install.Installer.Rollback%2A>, and <xref:System.Configuration.Install.Installer.Uninstall%2A> methods are not always called on the same instance of <xref:System.Configuration.Install.Installer>. For example, you might use an <xref:System.Configuration.Install.Installer> to install and commit an application, and then release the reference to that <xref:System.Configuration.Install.Installer>. Later, uninstalling the application creates a new reference to an <xref:System.Configuration.Install.Installer>, which means that the <xref:System.Configuration.Install.Installer.Uninstall%2A> method is called on a different instance of <xref:System.Configuration.Install.Installer>. For this reason, do not save the state of a computer in an installer. Instead, use an <xref:System.Collections.IDictionary> that is preserved across calls and passed into the <xref:System.Configuration.Install.Installer.Install%2A>, <xref:System.Configuration.Install.Installer.Commit%2A>, <xref:System.Configuration.Install.Installer.Rollback%2A>, and <xref:System.Configuration.Install.Installer.Uninstall%2A> methods.","nodes":[{"content":"The <xref:System.Configuration.Install.Installer.Install%2A>, <xref:System.Configuration.Install.Installer.Commit%2A>, <xref:System.Configuration.Install.Installer.Rollback%2A>, and <xref:System.Configuration.Install.Installer.Uninstall%2A> methods are not always called on the same instance of <xref:System.Configuration.Install.Installer>. For example, you might use an <xref:System.Configuration.Install.Installer> to install and commit an application, and then release the reference to that <xref:System.Configuration.Install.Installer>. Later, uninstalling the application creates a new reference to an <xref:System.Configuration.Install.Installer>, which means that the <xref:System.Configuration.Install.Installer.Uninstall%2A> method is called on a different instance of <xref:System.Configuration.Install.Installer>. For this reason, do not save the state of a computer in an installer. Instead, use an <xref:System.Collections.IDictionary> that is preserved across calls and passed into the <xref:System.Configuration.Install.Installer.Install%2A>, <xref:System.Configuration.Install.Installer.Commit%2A>, <xref:System.Configuration.Install.Installer.Rollback%2A>, and <xref:System.Configuration.Install.Installer.Uninstall%2A> methods.","pos":[0,1246],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Configuration.Install.Installer.Install%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Configuration.Install.Installer.Commit%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Configuration.Install.Installer.Rollback%2A&gt;</ph>, and <ph id=\"ph4\">&lt;xref:System.Configuration.Install.Installer.Uninstall%2A&gt;</ph> methods are not always called on the same instance of <ph id=\"ph5\">&lt;xref:System.Configuration.Install.Installer&gt;</ph>.","pos":[0,341],"source":"The <xref:System.Configuration.Install.Installer.Install%2A>, <xref:System.Configuration.Install.Installer.Commit%2A>, <xref:System.Configuration.Install.Installer.Rollback%2A>, and <xref:System.Configuration.Install.Installer.Uninstall%2A> methods are not always called on the same instance of <xref:System.Configuration.Install.Installer>."},{"content":"For example, you might use an <ph id=\"ph1\">&lt;xref:System.Configuration.Install.Installer&gt;</ph> to install and commit an application, and then release the reference to that <ph id=\"ph2\">&lt;xref:System.Configuration.Install.Installer&gt;</ph>.","pos":[342,541],"source":" For example, you might use an <xref:System.Configuration.Install.Installer> to install and commit an application, and then release the reference to that <xref:System.Configuration.Install.Installer>."},{"content":"Later, uninstalling the application creates a new reference to an <ph id=\"ph1\">&lt;xref:System.Configuration.Install.Installer&gt;</ph>, which means that the <ph id=\"ph2\">&lt;xref:System.Configuration.Install.Installer.Uninstall%2A&gt;</ph> method is called on a different instance of <ph id=\"ph3\">&lt;xref:System.Configuration.Install.Installer&gt;</ph>.","pos":[542,825],"source":" Later, uninstalling the application creates a new reference to an <xref:System.Configuration.Install.Installer>, which means that the <xref:System.Configuration.Install.Installer.Uninstall%2A> method is called on a different instance of <xref:System.Configuration.Install.Installer>."},{"content":"For this reason, do not save the state of a computer in an installer.","pos":[826,895]},{"content":"Instead, use an <ph id=\"ph1\">&lt;xref:System.Collections.IDictionary&gt;</ph> that is preserved across calls and passed into the <ph id=\"ph2\">&lt;xref:System.Configuration.Install.Installer.Install%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Configuration.Install.Installer.Commit%2A&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Configuration.Install.Installer.Rollback%2A&gt;</ph>, and <ph id=\"ph5\">&lt;xref:System.Configuration.Install.Installer.Uninstall%2A&gt;</ph> methods.","pos":[896,1246],"source":" Instead, use an <xref:System.Collections.IDictionary> that is preserved across calls and passed into the <xref:System.Configuration.Install.Installer.Install%2A>, <xref:System.Configuration.Install.Installer.Commit%2A>, <xref:System.Configuration.Install.Installer.Rollback%2A>, and <xref:System.Configuration.Install.Installer.Uninstall%2A> methods."}]}]}],"pos":[1194,3625],"yaml":true,"extradata":"MT"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Configuration.Install\n  id: System.Configuration.Install\n  children:\n  - System.Configuration.Install.AssemblyInstaller\n  - System.Configuration.Install.ComponentInstaller\n  - System.Configuration.Install.IManagedInstaller\n  - System.Configuration.Install.InstallContext\n  - System.Configuration.Install.Installer\n  - System.Configuration.Install.InstallerCollection\n  - System.Configuration.Install.InstallEventArgs\n  - System.Configuration.Install.InstallEventHandler\n  - System.Configuration.Install.InstallException\n  - System.Configuration.Install.ManagedInstallerClass\n  - System.Configuration.Install.TransactedInstaller\n  - System.Configuration.Install.UninstallAction\n  langs:\n  - csharp\n  name: System.Configuration.Install\n  nameWithType: System.Configuration.Install\n  fullName: System.Configuration.Install\n  type: Namespace\n  summary: The <xref href=\"System.Configuration.Install\"></xref> namespace provides classes that allow you to write custom installers for your own components. The <xref href=\"System.Configuration.Install.Installer\"></xref> class is the base class for all custom installers in the.NET Framework.\n  remarks: \"Through the <xref:System.Configuration.Install.Installer.Installers%2A> property, an installer contains a collection of other installers as children. As the installer is executed, it cycles through its children and calls <xref:System.Configuration.Install.Installer.Install%2A>, <xref:System.Configuration.Install.Installer.Commit%2A>, <xref:System.Configuration.Install.Installer.Rollback%2A>, or <xref:System.Configuration.Install.Installer.Uninstall%2A>. For an example of an object in the <xref:System.Configuration.Install.Installer.Installers%2A> collection, see <xref:System.Diagnostics.EventLogInstaller>.  \\n  \\n The <xref:System.Configuration.Install.Installer.Context%2A> property contains information about the installation. For example, information about the location of the log file for the installation, the location of the file that saves information required by the <xref:System.Configuration.Install.Installer.Uninstall%2A> method, and the command line that was entered when the installation executable was run. For an example of an installation executable, see [Installutil.exe (Installer Tool)](~/docs/framework/tools/installutil-exe-installer-tool.md).  \\n  \\n The <xref:System.Configuration.Install.Installer.Install%2A>, <xref:System.Configuration.Install.Installer.Commit%2A>, <xref:System.Configuration.Install.Installer.Rollback%2A>, and <xref:System.Configuration.Install.Installer.Uninstall%2A> methods are not always called on the same instance of <xref:System.Configuration.Install.Installer>. For example, you might use an <xref:System.Configuration.Install.Installer> to install and commit an application, and then release the reference to that <xref:System.Configuration.Install.Installer>. Later, uninstalling the application creates a new reference to an <xref:System.Configuration.Install.Installer>, which means that the <xref:System.Configuration.Install.Installer.Uninstall%2A> method is called on a different instance of <xref:System.Configuration.Install.Installer>. For this reason, do not save the state of a computer in an installer. Instead, use an <xref:System.Collections.IDictionary> that is preserved across calls and passed into the <xref:System.Configuration.Install.Installer.Install%2A>, <xref:System.Configuration.Install.Installer.Commit%2A>, <xref:System.Configuration.Install.Installer.Rollback%2A>, and <xref:System.Configuration.Install.Installer.Uninstall%2A> methods.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/ns-System.Configuration.Install.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Configuration.Install.AssemblyInstaller\n  parent: System.Configuration.Install\n  isExternal: false\n  name: AssemblyInstaller\n  nameWithType: AssemblyInstaller\n  fullName: System.Configuration.Install.AssemblyInstaller\n- uid: System.Configuration.Install.ComponentInstaller\n  parent: System.Configuration.Install\n  isExternal: false\n  name: ComponentInstaller\n  nameWithType: ComponentInstaller\n  fullName: System.Configuration.Install.ComponentInstaller\n- uid: System.Configuration.Install.IManagedInstaller\n  parent: System.Configuration.Install\n  isExternal: false\n  name: IManagedInstaller\n  nameWithType: IManagedInstaller\n  fullName: System.Configuration.Install.IManagedInstaller\n- uid: System.Configuration.Install.InstallContext\n  parent: System.Configuration.Install\n  isExternal: false\n  name: InstallContext\n  nameWithType: InstallContext\n  fullName: System.Configuration.Install.InstallContext\n- uid: System.Configuration.Install.Installer\n  parent: System.Configuration.Install\n  isExternal: false\n  name: Installer\n  nameWithType: Installer\n  fullName: System.Configuration.Install.Installer\n- uid: System.Configuration.Install.InstallerCollection\n  parent: System.Configuration.Install\n  isExternal: false\n  name: InstallerCollection\n  nameWithType: InstallerCollection\n  fullName: System.Configuration.Install.InstallerCollection\n- uid: System.Configuration.Install.InstallEventArgs\n  parent: System.Configuration.Install\n  isExternal: false\n  name: InstallEventArgs\n  nameWithType: InstallEventArgs\n  fullName: System.Configuration.Install.InstallEventArgs\n- uid: System.Configuration.Install.InstallEventHandler\n  parent: System.Configuration.Install\n  isExternal: false\n  name: InstallEventHandler\n  nameWithType: InstallEventHandler\n  fullName: System.Configuration.Install.InstallEventHandler\n- uid: System.Configuration.Install.InstallException\n  parent: System.Configuration.Install\n  isExternal: false\n  name: InstallException\n  nameWithType: InstallException\n  fullName: System.Configuration.Install.InstallException\n- uid: System.Configuration.Install.ManagedInstallerClass\n  parent: System.Configuration.Install\n  isExternal: false\n  name: ManagedInstallerClass\n  nameWithType: ManagedInstallerClass\n  fullName: System.Configuration.Install.ManagedInstallerClass\n- uid: System.Configuration.Install.TransactedInstaller\n  parent: System.Configuration.Install\n  isExternal: false\n  name: TransactedInstaller\n  nameWithType: TransactedInstaller\n  fullName: System.Configuration.Install.TransactedInstaller\n- uid: System.Configuration.Install.UninstallAction\n  parent: System.Configuration.Install\n  isExternal: false\n  name: UninstallAction\n  nameWithType: UninstallAction\n  fullName: System.Configuration.Install.UninstallAction\n"}