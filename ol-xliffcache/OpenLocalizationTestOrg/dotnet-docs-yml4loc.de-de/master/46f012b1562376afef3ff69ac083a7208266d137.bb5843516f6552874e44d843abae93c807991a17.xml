{"nodes":[{"content":"Provides an external process for running add-ins out-of-process from the host application.","nodes":[{"pos":[0,90],"content":"Provides an external process for running add-ins out-of-process from the host application.","nodes":[{"content":"Provides an external process for running add-ins out-of-process from the host application.","pos":[0,90]}]}],"pos":[875,966],"yaml":true},{"content":"To activate an add-in in an external process, pass an <xref:System.AddIn.Hosting.AddInProcess> object to the appropriate <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInProcess%2CSystem.Security.PermissionSet%29?displayProperty=fullName> method overload.  \n  \n The executable that runs the add-in is obtained from one of two files installed with the .NET Framework under the Windows directory. By default, the executable that matches the bits-per-word of the host application is used. If the host is a 64-bit process, AddInProcess.exe is run; otherwise, AddInProcess32.exe is run. To specify the way the executable is selected, use the <xref:System.AddIn.Hosting.AddInProcess.%23ctor%28System.AddIn.Hosting.Platform%29> constructor to create the <xref:System.AddIn.Hosting.AddInProcess> object.","nodes":[{"pos":[0,288],"content":"To activate an add-in in an external process, pass an <xref:System.AddIn.Hosting.AddInProcess> object to the appropriate <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInProcess%2CSystem.Security.PermissionSet%29?displayProperty=fullName> method overload.","nodes":[{"content":"To activate an add-in in an external process, pass an <ph id=\"ph1\">&lt;xref:System.AddIn.Hosting.AddInProcess&gt;</ph> object to the appropriate <ph id=\"ph2\">&lt;xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInProcess%2CSystem.Security.PermissionSet%29?displayProperty=fullName&gt;</ph> method overload.","pos":[0,288],"source":"To activate an add-in in an external process, pass an <xref:System.AddIn.Hosting.AddInProcess> object to the appropriate <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInProcess%2CSystem.Security.PermissionSet%29?displayProperty=fullName> method overload."}]},{"pos":[295,828],"content":"The executable that runs the add-in is obtained from one of two files installed with the .NET Framework under the Windows directory. By default, the executable that matches the bits-per-word of the host application is used. If the host is a 64-bit process, AddInProcess.exe is run; otherwise, AddInProcess32.exe is run. To specify the way the executable is selected, use the <xref:System.AddIn.Hosting.AddInProcess.%23ctor%28System.AddIn.Hosting.Platform%29> constructor to create the <xref:System.AddIn.Hosting.AddInProcess> object.","nodes":[{"content":"The executable that runs the add-in is obtained from one of two files installed with the .NET Framework under the Windows directory. By default, the executable that matches the bits-per-word of the host application is used. If the host is a 64-bit process, AddInProcess.exe is run; otherwise, AddInProcess32.exe is run. To specify the way the executable is selected, use the <xref:System.AddIn.Hosting.AddInProcess.%23ctor%28System.AddIn.Hosting.Platform%29> constructor to create the <xref:System.AddIn.Hosting.AddInProcess> object.","pos":[0,533],"nodes":[{"content":"The executable that runs the add-in is obtained from one of two files installed with the .NET Framework under the Windows directory.","pos":[0,132]},{"content":"By default, the executable that matches the bits-per-word of the host application is used.","pos":[133,223]},{"content":"If the host is a 64-bit process, AddInProcess.exe is run; otherwise, AddInProcess32.exe is run.","pos":[224,319]},{"content":"To specify the way the executable is selected, use the <ph id=\"ph1\">&lt;xref:System.AddIn.Hosting.AddInProcess.%23ctor%28System.AddIn.Hosting.Platform%29&gt;</ph> constructor to create the <ph id=\"ph2\">&lt;xref:System.AddIn.Hosting.AddInProcess&gt;</ph> object.","pos":[320,533],"source":" To specify the way the executable is selected, use the <xref:System.AddIn.Hosting.AddInProcess.%23ctor%28System.AddIn.Hosting.Platform%29> constructor to create the <xref:System.AddIn.Hosting.AddInProcess> object."}]}]}],"pos":[977,1810],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.AddIn.Hosting.AddInProcess\"></xref> class.","nodes":[{"pos":[0,95],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.AddIn.Hosting.AddInProcess\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.AddIn.Hosting.AddInProcess\"></xref> class."}],"pos":[3425,3521],"yaml":true},{"content":"This constructor has the same effect as using the <xref:System.AddIn.Hosting.AddInProcess.%23ctor%28System.AddIn.Hosting.Platform%29> constructor with the <xref:System.AddIn.Hosting.Platform?displayProperty=fullName> flag, to specify that the process that runs the add-in will have the same bits-per-word as the host process.","nodes":[{"pos":[0,325],"content":"This constructor has the same effect as using the <xref:System.AddIn.Hosting.AddInProcess.%23ctor%28System.AddIn.Hosting.Platform%29> constructor with the <xref:System.AddIn.Hosting.Platform?displayProperty=fullName> flag, to specify that the process that runs the add-in will have the same bits-per-word as the host process.","nodes":[{"content":"This constructor has the same effect as using the <ph id=\"ph1\">&lt;xref:System.AddIn.Hosting.AddInProcess.%23ctor%28System.AddIn.Hosting.Platform%29&gt;</ph> constructor with the <ph id=\"ph2\">&lt;xref:System.AddIn.Hosting.Platform?displayProperty=fullName&gt;</ph> flag, to specify that the process that runs the add-in will have the same bits-per-word as the host process.","pos":[0,325],"source":"This constructor has the same effect as using the <xref:System.AddIn.Hosting.AddInProcess.%23ctor%28System.AddIn.Hosting.Platform%29> constructor with the <xref:System.AddIn.Hosting.Platform?displayProperty=fullName> flag, to specify that the process that runs the add-in will have the same bits-per-word as the host process."}]}],"pos":[3532,3858],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.AddIn.Hosting.AddInProcess\"></xref> class, specifying the bits-per-word of the process in which the add-in runs.","nodes":[{"pos":[0,165],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.AddIn.Hosting.AddInProcess\"&gt;&lt;/xref&gt;</ph> class, specifying the bits-per-word of the process in which the add-in runs.","source":"Initializes a new instance of the <xref href=\"System.AddIn.Hosting.AddInProcess\"></xref> class, specifying the bits-per-word of the process in which the add-in runs."}],"pos":[5145,5311],"yaml":true},{"content":"The following table shows how `platform` affects the bits-per-word of the process on different operating systems:  \n  \n||32-bit operating system|64-bit operating system|  \n|-|------------------------------|------------------------------|  \n|Host|32-bit|Same as the host process|  \n|AnyCPU|32-bit|64-bit|  \n|X86|32-bit|32-bit|  \n|X64|Exception is thrown|64-bit|","nodes":[{"pos":[0,113],"content":"The following table shows how <ph id=\"ph1\">`platform`</ph> affects the bits-per-word of the process on different operating systems:","source":"The following table shows how `platform` affects the bits-per-word of the process on different operating systems:"},{"pos":[121,144],"content":"32-bit operating system","nodes":[{"content":"32-bit operating system","pos":[0,23]}]},{"pos":[145,168],"content":"64-bit operating system","nodes":[{"content":"64-bit operating system","pos":[0,23]}]},{"pos":[241,245],"content":"Host","nodes":[{"content":"Host","pos":[0,4]}]},{"pos":[246,252],"content":"32-bit","nodes":[{"content":"32-bit","pos":[0,6]}]},{"pos":[253,277],"content":"Same as the host process","nodes":[{"content":"Same as the host process","pos":[0,24]}]},{"pos":[282,288],"content":"AnyCPU","nodes":[{"content":"AnyCPU","pos":[0,6]}]},{"pos":[289,295],"content":"32-bit","nodes":[{"content":"32-bit","pos":[0,6]}]},{"pos":[296,302],"content":"64-bit","nodes":[{"content":"64-bit","pos":[0,6]}]},{"pos":[307,310],"content":"X86","nodes":[{"content":"X86","pos":[0,3]}]},{"pos":[311,317],"content":"32-bit","nodes":[{"content":"32-bit","pos":[0,6]}]},{"pos":[318,324],"content":"32-bit","nodes":[{"content":"32-bit","pos":[0,6]}]},{"pos":[329,332],"content":"X64","nodes":[{"content":"X64","pos":[0,3]}]},{"pos":[333,352],"content":"Exception is thrown","nodes":[{"content":"Exception is thrown","pos":[0,19]}]},{"pos":[353,359],"content":"64-bit","nodes":[{"content":"64-bit","pos":[0,6]}]}],"pos":[5322,5692],"yaml":true,"extradata":"MT"},{"content":"A value that specifies the bits-per-word of the process that runs the add-in.","nodes":[{"pos":[0,77],"content":"A value that specifies the bits-per-word of the process that runs the add-in.","nodes":[{"content":"A value that specifies the bits-per-word of the process that runs the add-in.","pos":[0,77]}]}],"pos":[5924,6002],"yaml":true},{"content":"The registry entry for the path to the executable (AddInProcess.exe or AddInProcess32.exe) is missing.  \n  \n -or-  \n  \n The executable is missing.","nodes":[{"pos":[0,102],"content":"The registry entry for the path to the executable (AddInProcess.exe or AddInProcess32.exe) is missing.","nodes":[{"content":"The registry entry for the path to the executable (AddInProcess.exe or AddInProcess32.exe) is missing.","pos":[0,102]}]},{"pos":[109,113],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[120,146],"content":"The executable is missing.","nodes":[{"content":"The executable is missing.","pos":[0,26]}]}],"pos":[6179,6332],"yaml":true},{"content":"Gets a value that indicates whether the current <xref href=\"System.AddIn.Hosting.AddInProcess\"></xref> object represents the host application process.","nodes":[{"pos":[0,150],"content":"Gets a value that indicates whether the current <ph id=\"ph1\">&lt;xref href=\"System.AddIn.Hosting.AddInProcess\"&gt;&lt;/xref&gt;</ph> object represents the host application process.","source":"Gets a value that indicates whether the current <xref href=\"System.AddIn.Hosting.AddInProcess\"></xref> object represents the host application process."}],"pos":[7349,7500],"yaml":true},{"content":"If the value of this property is `true`, the add-in is running in-process with the host application. In that case, using the <xref:System.AddIn.Hosting.AddInProcess.Start%2A> or <xref:System.AddIn.Hosting.AddInProcess.Shutdown%2A> method throws an <xref:System.InvalidOperationException>.  \n  \n> [!NOTE]\n>  The <xref:System.AddIn.Hosting.AddInEnvironment.Process%2A?displayProperty=fullName> property returns an <xref:System.AddIn.Hosting.AddInProcess> object that represents the host application process if the add-in is running in-process.","nodes":[{"pos":[0,288],"content":"If the value of this property is `true`, the add-in is running in-process with the host application. In that case, using the <xref:System.AddIn.Hosting.AddInProcess.Start%2A> or <xref:System.AddIn.Hosting.AddInProcess.Shutdown%2A> method throws an <xref:System.InvalidOperationException>.","nodes":[{"content":"If the value of this property is <ph id=\"ph1\">`true`</ph>, the add-in is running in-process with the host application.","pos":[0,100],"source":"If the value of this property is `true`, the add-in is running in-process with the host application."},{"content":"In that case, using the <ph id=\"ph1\">&lt;xref:System.AddIn.Hosting.AddInProcess.Start%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.AddIn.Hosting.AddInProcess.Shutdown%2A&gt;</ph> method throws an <ph id=\"ph3\">&lt;xref:System.InvalidOperationException&gt;</ph>.","pos":[101,288],"source":" In that case, using the <xref:System.AddIn.Hosting.AddInProcess.Start%2A> or <xref:System.AddIn.Hosting.AddInProcess.Shutdown%2A> method throws an <xref:System.InvalidOperationException>."}]},{"pos":[296,541],"content":"[!NOTE]\n The <xref:System.AddIn.Hosting.AddInEnvironment.Process%2A?displayProperty=fullName> property returns an <xref:System.AddIn.Hosting.AddInProcess> object that represents the host application process if the add-in is running in-process.","leadings":["","> "],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.AddIn.Hosting.AddInEnvironment.Process%2A?displayProperty=fullName&gt;</ph> property returns an <ph id=\"ph2\">&lt;xref:System.AddIn.Hosting.AddInProcess&gt;</ph> object that represents the host application process if the add-in is running in-process.","pos":[9,243],"source":" The <xref:System.AddIn.Hosting.AddInEnvironment.Process%2A?displayProperty=fullName> property returns an <xref:System.AddIn.Hosting.AddInProcess> object that represents the host application process if the add-in is running in-process."}]}],"pos":[7511,8058],"yaml":true,"extradata":"MT"},{"content":"`true` if the <xref href=\"System.AddIn.Hosting.AddInProcess\"></xref> object corresponds to the current process; otherwise, `false`.","nodes":[{"pos":[0,131],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.AddIn.Hosting.AddInProcess\"&gt;&lt;/xref&gt;</ph> object corresponds to the current process; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.AddIn.Hosting.AddInProcess\"></xref> object corresponds to the current process; otherwise, `false`."}],"pos":[8645,8779],"yaml":true},{"content":"Gets or sets a value that indicates whether to keep the external process alive.","nodes":[{"pos":[0,79],"content":"Gets or sets a value that indicates whether to keep the external process alive.","nodes":[{"content":"Gets or sets a value that indicates whether to keep the external process alive.","pos":[0,79]}]}],"pos":[9769,9849],"yaml":true},{"content":"Set this property to `false` to aggressively shut down the external process after the last add-in inside the process has been shut down.","nodes":[{"pos":[0,136],"content":"Set this property to <ph id=\"ph1\">`false`</ph> to aggressively shut down the external process after the last add-in inside the process has been shut down.","source":"Set this property to `false` to aggressively shut down the external process after the last add-in inside the process has been shut down."}],"pos":[9860,9997],"yaml":true,"extradata":"MT"},{"content":"`true` if the external process should be kept alive; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,96],"content":"`true` if the external process should be kept alive; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the external process should be kept alive; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,72],"source":"`true` if the external process should be kept alive; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[73,96],"source":" The default is `false`."}]}],"pos":[10114,10213],"yaml":true},{"content":"Gets the bits-per-word of the process in which the out-of-process add-in is run.","nodes":[{"pos":[0,80],"content":"Gets the bits-per-word of the process in which the out-of-process add-in is run.","nodes":[{"content":"Gets the bits-per-word of the process in which the out-of-process add-in is run.","pos":[0,80]}]}],"pos":[11190,11271],"yaml":true},{"content":"The bits-per-word is set when the <xref:System.AddIn.Hosting.AddInProcess> object is initialized, and cannot be changed.","nodes":[{"pos":[0,120],"content":"The bits-per-word is set when the <xref:System.AddIn.Hosting.AddInProcess> object is initialized, and cannot be changed.","nodes":[{"content":"The bits-per-word is set when the <ph id=\"ph1\">&lt;xref:System.AddIn.Hosting.AddInProcess&gt;</ph> object is initialized, and cannot be changed.","pos":[0,120],"source":"The bits-per-word is set when the <xref:System.AddIn.Hosting.AddInProcess> object is initialized, and cannot be changed."}]}],"pos":[11282,11403],"yaml":true,"extradata":"MT"},{"content":"The bits-per-word of the process that runs the add-in.","nodes":[{"pos":[0,54],"content":"The bits-per-word of the process that runs the add-in.","nodes":[{"content":"The bits-per-word of the process that runs the add-in.","pos":[0,54]}]}],"pos":[11554,11609],"yaml":true},{"content":"Gets the process ID of the external process.","nodes":[{"pos":[0,44],"content":"Gets the process ID of the external process.","nodes":[{"content":"Gets the process ID of the external process.","pos":[0,44]}]}],"pos":[12591,12636],"yaml":true},{"content":"Use this property for debugging.","nodes":[{"pos":[0,32],"content":"Use this property for debugging.","nodes":[{"content":"Use this property for debugging.","pos":[0,32]}]}],"pos":[12647,12680],"yaml":true,"extradata":"MT"},{"content":"The process ID, or -1 if the external process has not started.","nodes":[{"pos":[0,62],"content":"The process ID, or -1 if the external process has not started.","nodes":[{"content":"The process ID, or -1 if the external process has not started.","pos":[0,62]}]}],"pos":[12789,12852],"yaml":true},{"content":"Forcibly shuts down the external process.","nodes":[{"pos":[0,41],"content":"Forcibly shuts down the external process.","nodes":[{"content":"Forcibly shuts down the external process.","pos":[0,41]}]}],"pos":[13833,13875],"yaml":true},{"content":"`true` if the external process was running and is successfully shut down; `false` if there is no active process associated with the <xref href=\"System.AddIn.Hosting.AddInProcess\"></xref>.","nodes":[{"pos":[0,187],"content":"<ph id=\"ph1\">`true`</ph> if the external process was running and is successfully shut down; <ph id=\"ph2\">`false`</ph> if there is no active process associated with the <ph id=\"ph3\">&lt;xref href=\"System.AddIn.Hosting.AddInProcess\"&gt;&lt;/xref&gt;</ph>.","source":"`true` if the external process was running and is successfully shut down; `false` if there is no active process associated with the <xref href=\"System.AddIn.Hosting.AddInProcess\"></xref>."}],"pos":[14000,14190],"yaml":true},{"content":"The add-in is running in-process with the host application. Starting and stopping the process is allowed only for external processes, not for the host process.","nodes":[{"pos":[0,159],"content":"The add-in is running in-process with the host application. Starting and stopping the process is allowed only for external processes, not for the host process.","nodes":[{"content":"The add-in is running in-process with the host application. Starting and stopping the process is allowed only for external processes, not for the host process.","pos":[0,159],"nodes":[{"content":"The add-in is running in-process with the host application.","pos":[0,59]},{"content":"Starting and stopping the process is allowed only for external processes, not for the host process.","pos":[60,159]}]}]}],"pos":[14370,14530],"yaml":true},{"content":"Occurs when the process represented by the <xref href=\"System.AddIn.Hosting.AddInProcess\"></xref> object is about to be shut down.","nodes":[{"pos":[0,130],"content":"Occurs when the process represented by the <ph id=\"ph1\">&lt;xref href=\"System.AddIn.Hosting.AddInProcess\"&gt;&lt;/xref&gt;</ph> object is about to be shut down.","source":"Occurs when the process represented by the <xref href=\"System.AddIn.Hosting.AddInProcess\"></xref> object is about to be shut down."}],"pos":[15454,15585],"yaml":true},{"content":"Starts the external process.","nodes":[{"pos":[0,28],"content":"Starts the external process.","nodes":[{"content":"Starts the external process.","pos":[0,28]}]}],"pos":[16698,16727],"yaml":true},{"content":"`true` if the process is successfully started; `false` if the process is already running.","nodes":[{"pos":[0,89],"content":"<ph id=\"ph1\">`true`</ph> if the process is successfully started; <ph id=\"ph2\">`false`</ph> if the process is already running.","source":"`true` if the process is successfully started; `false` if the process is already running."}],"pos":[16900,16992],"yaml":true},{"content":"The add-in is running in-process with the host application. Starting and stopping the process is allowed only for external processes, not for the host process.","nodes":[{"pos":[0,159],"content":"The add-in is running in-process with the host application. Starting and stopping the process is allowed only for external processes, not for the host process.","nodes":[{"content":"The add-in is running in-process with the host application. Starting and stopping the process is allowed only for external processes, not for the host process.","pos":[0,159],"nodes":[{"content":"The add-in is running in-process with the host application.","pos":[0,59]},{"content":"Starting and stopping the process is allowed only for external processes, not for the host process.","pos":[60,159]}]}]}],"pos":[17169,17329],"yaml":true},{"content":"Gets or sets the number of seconds to allow for the process to start.","nodes":[{"pos":[0,69],"content":"Gets or sets the number of seconds to allow for the process to start.","nodes":[{"content":"Gets or sets the number of seconds to allow for the process to start.","pos":[0,69]}]}],"pos":[18334,18404],"yaml":true},{"content":"The default value is 10 seconds. This property is usually used during debugging, to increase the startup time for the process that runs the out-of-process add-in.","nodes":[{"pos":[0,162],"content":"The default value is 10 seconds. This property is usually used during debugging, to increase the startup time for the process that runs the out-of-process add-in.","nodes":[{"content":"The default value is 10 seconds. This property is usually used during debugging, to increase the startup time for the process that runs the out-of-process add-in.","pos":[0,162],"nodes":[{"content":"The default value is 10 seconds.","pos":[0,32]},{"content":"This property is usually used during debugging, to increase the startup time for the process that runs the out-of-process add-in.","pos":[33,162]}]}]}],"pos":[18415,18578],"yaml":true,"extradata":"MT"},{"content":"The number of seconds to allow for process startup.","nodes":[{"pos":[0,51],"content":"The number of seconds to allow for process startup.","nodes":[{"content":"The number of seconds to allow for process startup.","pos":[0,51]}]}],"pos":[18705,18757],"yaml":true},{"content":"The process is already running.","nodes":[{"pos":[0,31],"content":"The process is already running.","nodes":[{"content":"The process is already running.","pos":[0,31]}]}],"pos":[18943,18975],"yaml":true},{"content":"The assigned value is less than 0 (zero).","nodes":[{"pos":[0,41],"content":"The assigned value is less than 0 (zero).","nodes":[{"content":"The assigned value is less than 0 (zero).","pos":[0,41]}]}],"pos":[19089,19131],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.AddIn.Hosting.AddInProcess\n  commentId: T:System.AddIn.Hosting.AddInProcess\n  id: AddInProcess\n  children:\n  - System.AddIn.Hosting.AddInProcess.#ctor\n  - System.AddIn.Hosting.AddInProcess.#ctor(System.AddIn.Hosting.Platform)\n  - System.AddIn.Hosting.AddInProcess.IsCurrentProcess\n  - System.AddIn.Hosting.AddInProcess.KeepAlive\n  - System.AddIn.Hosting.AddInProcess.Platform\n  - System.AddIn.Hosting.AddInProcess.ProcessId\n  - System.AddIn.Hosting.AddInProcess.Shutdown\n  - System.AddIn.Hosting.AddInProcess.ShuttingDown\n  - System.AddIn.Hosting.AddInProcess.Start\n  - System.AddIn.Hosting.AddInProcess.StartupTimeout\n  langs:\n  - csharp\n  name: AddInProcess\n  nameWithType: AddInProcess\n  fullName: System.AddIn.Hosting.AddInProcess\n  type: Class\n  assemblies:\n  - System.AddIn\n  namespace: System.AddIn.Hosting\n  summary: Provides an external process for running add-ins out-of-process from the host application.\n  remarks: \"To activate an add-in in an external process, pass an <xref:System.AddIn.Hosting.AddInProcess> object to the appropriate <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInProcess%2CSystem.Security.PermissionSet%29?displayProperty=fullName> method overload.  \\n  \\n The executable that runs the add-in is obtained from one of two files installed with the .NET Framework under the Windows directory. By default, the executable that matches the bits-per-word of the host application is used. If the host is a 64-bit process, AddInProcess.exe is run; otherwise, AddInProcess32.exe is run. To specify the way the executable is selected, use the <xref:System.AddIn.Hosting.AddInProcess.%23ctor%28System.AddIn.Hosting.Platform%29> constructor to create the <xref:System.AddIn.Hosting.AddInProcess> object.\"\n  example:\n  - \"The following example activates an add-in in an external process.  \\n  \\n [!code-csharp[AddInP3Host#10](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#10)]\\n [!code-vb[AddInP3Host#10](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#10)]\"\n  syntax:\n    content: public sealed class AddInProcess\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInProcess.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Hosting.AddInProcess.#ctor\n  commentId: M:System.AddIn.Hosting.AddInProcess.#ctor\n  id: '#ctor'\n  parent: System.AddIn.Hosting.AddInProcess\n  langs:\n  - csharp\n  name: AddInProcess()\n  nameWithType: AddInProcess.AddInProcess()\n  fullName: AddInProcess.AddInProcess()\n  type: Constructor\n  assemblies:\n  - System.AddIn\n  namespace: System.AddIn.Hosting\n  summary: Initializes a new instance of the <xref href=\"System.AddIn.Hosting.AddInProcess\"></xref> class.\n  remarks: This constructor has the same effect as using the <xref:System.AddIn.Hosting.AddInProcess.%23ctor%28System.AddIn.Hosting.Platform%29> constructor with the <xref:System.AddIn.Hosting.Platform?displayProperty=fullName> flag, to specify that the process that runs the add-in will have the same bits-per-word as the host process.\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      public AddInProcess ();\n    parameters: []\n  overload: System.AddIn.Hosting.AddInProcess.#ctor*\n  exceptions: []\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInProcess.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Hosting.AddInProcess.#ctor(System.AddIn.Hosting.Platform)\n  commentId: M:System.AddIn.Hosting.AddInProcess.#ctor(System.AddIn.Hosting.Platform)\n  id: '#ctor(System.AddIn.Hosting.Platform)'\n  parent: System.AddIn.Hosting.AddInProcess\n  langs:\n  - csharp\n  name: AddInProcess(Platform)\n  nameWithType: AddInProcess.AddInProcess(Platform)\n  fullName: AddInProcess.AddInProcess(Platform)\n  type: Constructor\n  assemblies:\n  - System.AddIn\n  namespace: System.AddIn.Hosting\n  summary: Initializes a new instance of the <xref href=\"System.AddIn.Hosting.AddInProcess\"></xref> class, specifying the bits-per-word of the process in which the add-in runs.\n  remarks: \"The following table shows how `platform` affects the bits-per-word of the process on different operating systems:  \\n  \\n||32-bit operating system|64-bit operating system|  \\n|-|------------------------------|------------------------------|  \\n|Host|32-bit|Same as the host process|  \\n|AnyCPU|32-bit|64-bit|  \\n|X86|32-bit|32-bit|  \\n|X64|Exception is thrown|64-bit|\"\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      public AddInProcess (System.AddIn.Hosting.Platform platform);\n    parameters:\n    - id: platform\n      type: System.AddIn.Hosting.Platform\n      description: A value that specifies the bits-per-word of the process that runs the add-in.\n  overload: System.AddIn.Hosting.AddInProcess.#ctor*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The registry entry for the path to the executable (AddInProcess.exe or AddInProcess32.exe) is missing.  \\n  \\n -or-  \\n  \\n The executable is missing.\"\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInProcess.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Hosting.AddInProcess.IsCurrentProcess\n  commentId: P:System.AddIn.Hosting.AddInProcess.IsCurrentProcess\n  id: IsCurrentProcess\n  parent: System.AddIn.Hosting.AddInProcess\n  langs:\n  - csharp\n  name: IsCurrentProcess\n  nameWithType: AddInProcess.IsCurrentProcess\n  fullName: AddInProcess.IsCurrentProcess\n  type: Property\n  assemblies:\n  - System.AddIn\n  namespace: System.AddIn.Hosting\n  summary: Gets a value that indicates whether the current <xref href=\"System.AddIn.Hosting.AddInProcess\"></xref> object represents the host application process.\n  remarks: \"If the value of this property is `true`, the add-in is running in-process with the host application. In that case, using the <xref:System.AddIn.Hosting.AddInProcess.Start%2A> or <xref:System.AddIn.Hosting.AddInProcess.Shutdown%2A> method throws an <xref:System.InvalidOperationException>.  \\n  \\n> [!NOTE]\\n>  The <xref:System.AddIn.Hosting.AddInEnvironment.Process%2A?displayProperty=fullName> property returns an <xref:System.AddIn.Hosting.AddInProcess> object that represents the host application process if the add-in is running in-process.\"\n  example:\n  - \"The following example activates an add-in in an external process and uses the <xref:System.AddIn.Hosting.AddInProcess.IsCurrentProcess%2A> property to determine whether the add-in is in the same process as the host application process.  \\n  \\n [!code-csharp[AddInP3Host#10](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#10)]\\n [!code-vb[AddInP3Host#10](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#10)]\"\n  syntax:\n    content: public bool IsCurrentProcess { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.AddIn.Hosting.AddInProcess\"></xref> object corresponds to the current process; otherwise, `false`.'\n  overload: System.AddIn.Hosting.AddInProcess.IsCurrentProcess*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInProcess.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Hosting.AddInProcess.KeepAlive\n  commentId: P:System.AddIn.Hosting.AddInProcess.KeepAlive\n  id: KeepAlive\n  parent: System.AddIn.Hosting.AddInProcess\n  langs:\n  - csharp\n  name: KeepAlive\n  nameWithType: AddInProcess.KeepAlive\n  fullName: AddInProcess.KeepAlive\n  type: Property\n  assemblies:\n  - System.AddIn\n  namespace: System.AddIn.Hosting\n  summary: Gets or sets a value that indicates whether to keep the external process alive.\n  remarks: Set this property to `false` to aggressively shut down the external process after the last add-in inside the process has been shut down.\n  syntax:\n    content: public bool KeepAlive { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the external process should be kept alive; otherwise, `false`. The default is `false`.'\n  overload: System.AddIn.Hosting.AddInProcess.KeepAlive*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInProcess.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Hosting.AddInProcess.Platform\n  commentId: P:System.AddIn.Hosting.AddInProcess.Platform\n  id: Platform\n  parent: System.AddIn.Hosting.AddInProcess\n  langs:\n  - csharp\n  name: Platform\n  nameWithType: AddInProcess.Platform\n  fullName: AddInProcess.Platform\n  type: Property\n  assemblies:\n  - System.AddIn\n  namespace: System.AddIn.Hosting\n  summary: Gets the bits-per-word of the process in which the out-of-process add-in is run.\n  remarks: The bits-per-word is set when the <xref:System.AddIn.Hosting.AddInProcess> object is initialized, and cannot be changed.\n  syntax:\n    content: public System.AddIn.Hosting.Platform Platform { get; }\n    return:\n      type: System.AddIn.Hosting.Platform\n      description: The bits-per-word of the process that runs the add-in.\n  overload: System.AddIn.Hosting.AddInProcess.Platform*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInProcess.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Hosting.AddInProcess.ProcessId\n  commentId: P:System.AddIn.Hosting.AddInProcess.ProcessId\n  id: ProcessId\n  parent: System.AddIn.Hosting.AddInProcess\n  langs:\n  - csharp\n  name: ProcessId\n  nameWithType: AddInProcess.ProcessId\n  fullName: AddInProcess.ProcessId\n  type: Property\n  assemblies:\n  - System.AddIn\n  namespace: System.AddIn.Hosting\n  summary: Gets the process ID of the external process.\n  remarks: Use this property for debugging.\n  syntax:\n    content: public int ProcessId { get; }\n    return:\n      type: System.Int32\n      description: The process ID, or -1 if the external process has not started.\n  overload: System.AddIn.Hosting.AddInProcess.ProcessId*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInProcess.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Hosting.AddInProcess.Shutdown\n  commentId: M:System.AddIn.Hosting.AddInProcess.Shutdown\n  id: Shutdown\n  parent: System.AddIn.Hosting.AddInProcess\n  langs:\n  - csharp\n  name: Shutdown()\n  nameWithType: AddInProcess.Shutdown()\n  fullName: AddInProcess.Shutdown()\n  type: Method\n  assemblies:\n  - System.AddIn\n  namespace: System.AddIn.Hosting\n  summary: Forcibly shuts down the external process.\n  syntax:\n    content: public bool Shutdown ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the external process was running and is successfully shut down; `false` if there is no active process associated with the <xref href=\"System.AddIn.Hosting.AddInProcess\"></xref>.'\n  overload: System.AddIn.Hosting.AddInProcess.Shutdown*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The add-in is running in-process with the host application. Starting and stopping the process is allowed only for external processes, not for the host process.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInProcess.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Hosting.AddInProcess.ShuttingDown\n  commentId: E:System.AddIn.Hosting.AddInProcess.ShuttingDown\n  id: ShuttingDown\n  parent: System.AddIn.Hosting.AddInProcess\n  langs:\n  - csharp\n  name: ShuttingDown\n  nameWithType: AddInProcess.ShuttingDown\n  fullName: AddInProcess.ShuttingDown\n  type: Event\n  assemblies:\n  - System.AddIn\n  namespace: System.AddIn.Hosting\n  summary: Occurs when the process represented by the <xref href=\"System.AddIn.Hosting.AddInProcess\"></xref> object is about to be shut down.\n  syntax:\n    content: public event EventHandler<System.ComponentModel.CancelEventArgs> ShuttingDown;\n    return:\n      type: System.EventHandler{System.ComponentModel.CancelEventArgs}\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInProcess.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Hosting.AddInProcess.Start\n  commentId: M:System.AddIn.Hosting.AddInProcess.Start\n  id: Start\n  parent: System.AddIn.Hosting.AddInProcess\n  langs:\n  - csharp\n  name: Start()\n  nameWithType: AddInProcess.Start()\n  fullName: AddInProcess.Start()\n  type: Method\n  assemblies:\n  - System.AddIn\n  namespace: System.AddIn.Hosting\n  summary: Starts the external process.\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      public bool Start ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the process is successfully started; `false` if the process is already running.'\n  overload: System.AddIn.Hosting.AddInProcess.Start*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The add-in is running in-process with the host application. Starting and stopping the process is allowed only for external processes, not for the host process.\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInProcess.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Hosting.AddInProcess.StartupTimeout\n  commentId: P:System.AddIn.Hosting.AddInProcess.StartupTimeout\n  id: StartupTimeout\n  parent: System.AddIn.Hosting.AddInProcess\n  langs:\n  - csharp\n  name: StartupTimeout\n  nameWithType: AddInProcess.StartupTimeout\n  fullName: AddInProcess.StartupTimeout\n  type: Property\n  assemblies:\n  - System.AddIn\n  namespace: System.AddIn.Hosting\n  summary: Gets or sets the number of seconds to allow for the process to start.\n  remarks: The default value is 10 seconds. This property is usually used during debugging, to increase the startup time for the process that runs the out-of-process add-in.\n  syntax:\n    content: public TimeSpan StartupTimeout { get; set; }\n    return:\n      type: System.TimeSpan\n      description: The number of seconds to allow for process startup.\n  overload: System.AddIn.Hosting.AddInProcess.StartupTimeout*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The process is already running.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The assigned value is less than 0 (zero).\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInProcess.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.AddIn.Hosting.AddInProcess.#ctor\n  parent: System.AddIn.Hosting.AddInProcess\n  isExternal: false\n  name: AddInProcess()\n  nameWithType: AddInProcess.AddInProcess()\n  fullName: AddInProcess.AddInProcess()\n- uid: System.AddIn.Hosting.AddInProcess.#ctor(System.AddIn.Hosting.Platform)\n  parent: System.AddIn.Hosting.AddInProcess\n  isExternal: false\n  name: AddInProcess(Platform)\n  nameWithType: AddInProcess.AddInProcess(Platform)\n  fullName: AddInProcess.AddInProcess(Platform)\n- uid: System.AddIn.Hosting.Platform\n  parent: System.AddIn.Hosting\n  isExternal: false\n  name: Platform\n  nameWithType: Platform\n  fullName: System.AddIn.Hosting.Platform\n- uid: System.AddIn.Hosting.AddInProcess.IsCurrentProcess\n  parent: System.AddIn.Hosting.AddInProcess\n  isExternal: false\n  name: IsCurrentProcess\n  nameWithType: AddInProcess.IsCurrentProcess\n  fullName: AddInProcess.IsCurrentProcess\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.AddIn.Hosting.AddInProcess.KeepAlive\n  parent: System.AddIn.Hosting.AddInProcess\n  isExternal: false\n  name: KeepAlive\n  nameWithType: AddInProcess.KeepAlive\n  fullName: AddInProcess.KeepAlive\n- uid: System.AddIn.Hosting.AddInProcess.Platform\n  parent: System.AddIn.Hosting.AddInProcess\n  isExternal: false\n  name: Platform\n  nameWithType: AddInProcess.Platform\n  fullName: AddInProcess.Platform\n- uid: System.AddIn.Hosting.AddInProcess.ProcessId\n  parent: System.AddIn.Hosting.AddInProcess\n  isExternal: false\n  name: ProcessId\n  nameWithType: AddInProcess.ProcessId\n  fullName: AddInProcess.ProcessId\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.AddIn.Hosting.AddInProcess.Shutdown\n  parent: System.AddIn.Hosting.AddInProcess\n  isExternal: false\n  name: Shutdown()\n  nameWithType: AddInProcess.Shutdown()\n  fullName: AddInProcess.Shutdown()\n- uid: System.AddIn.Hosting.AddInProcess.ShuttingDown\n  parent: System.AddIn.Hosting.AddInProcess\n  isExternal: false\n  name: ShuttingDown\n  nameWithType: AddInProcess.ShuttingDown\n  fullName: AddInProcess.ShuttingDown\n- uid: System.EventHandler`1\n  name: EventHandler<TEventArgs>\n  nameWithType: EventHandler<TEventArgs>\n  fullName: System.EventHandler<TEventArgs>\n- uid: System.ComponentModel.CancelEventArgs\n  name: CancelEventArgs\n  nameWithType: CancelEventArgs\n  fullName: System.ComponentModel.CancelEventArgs\n- uid: System.EventHandler{System.ComponentModel.CancelEventArgs}\n  parent: System\n  isExternal: false\n  name: EventHandler<CancelEventArgs>\n  nameWithType: EventHandler<CancelEventArgs>\n  fullName: System.EventHandler<System.ComponentModel.CancelEventArgs>\n  spec.csharp:\n  - uid: System.EventHandler`1\n    name: EventHandler\n    nameWithType: EventHandler\n    fullName: System.EventHandler\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ComponentModel.CancelEventArgs\n    name: CancelEventArgs\n    nameWithType: CancelEventArgs\n    fullName: System.ComponentModel.CancelEventArgs\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.AddIn.Hosting.AddInProcess.Start\n  parent: System.AddIn.Hosting.AddInProcess\n  isExternal: false\n  name: Start()\n  nameWithType: AddInProcess.Start()\n  fullName: AddInProcess.Start()\n- uid: System.AddIn.Hosting.AddInProcess.StartupTimeout\n  parent: System.AddIn.Hosting.AddInProcess\n  isExternal: false\n  name: StartupTimeout\n  nameWithType: AddInProcess.StartupTimeout\n  fullName: AddInProcess.StartupTimeout\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.AddIn.Hosting.AddInProcess.#ctor*\n  parent: System.AddIn.Hosting.AddInProcess\n  isExternal: false\n  name: AddInProcess\n  nameWithType: AddInProcess.AddInProcess\n  fullName: AddInProcess.AddInProcess\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInProcess.xml\n- uid: System.AddIn.Hosting.AddInProcess.IsCurrentProcess*\n  parent: System.AddIn.Hosting.AddInProcess\n  isExternal: false\n  name: IsCurrentProcess\n  nameWithType: AddInProcess.IsCurrentProcess\n  fullName: AddInProcess.IsCurrentProcess\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInProcess.xml\n- uid: System.AddIn.Hosting.AddInProcess.KeepAlive*\n  parent: System.AddIn.Hosting.AddInProcess\n  isExternal: false\n  name: KeepAlive\n  nameWithType: AddInProcess.KeepAlive\n  fullName: AddInProcess.KeepAlive\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInProcess.xml\n- uid: System.AddIn.Hosting.AddInProcess.Platform*\n  parent: System.AddIn.Hosting.AddInProcess\n  isExternal: false\n  name: Platform\n  nameWithType: AddInProcess.Platform\n  fullName: AddInProcess.Platform\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInProcess.xml\n- uid: System.AddIn.Hosting.AddInProcess.ProcessId*\n  parent: System.AddIn.Hosting.AddInProcess\n  isExternal: false\n  name: ProcessId\n  nameWithType: AddInProcess.ProcessId\n  fullName: AddInProcess.ProcessId\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInProcess.xml\n- uid: System.AddIn.Hosting.AddInProcess.Shutdown*\n  parent: System.AddIn.Hosting.AddInProcess\n  isExternal: false\n  name: Shutdown\n  nameWithType: AddInProcess.Shutdown\n  fullName: AddInProcess.Shutdown\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInProcess.xml\n- uid: System.AddIn.Hosting.AddInProcess.Start*\n  parent: System.AddIn.Hosting.AddInProcess\n  isExternal: false\n  name: Start\n  nameWithType: AddInProcess.Start\n  fullName: AddInProcess.Start\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInProcess.xml\n- uid: System.AddIn.Hosting.AddInProcess.StartupTimeout*\n  parent: System.AddIn.Hosting.AddInProcess\n  isExternal: false\n  name: StartupTimeout\n  nameWithType: AddInProcess.StartupTimeout\n  fullName: AddInProcess.StartupTimeout\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInProcess.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}