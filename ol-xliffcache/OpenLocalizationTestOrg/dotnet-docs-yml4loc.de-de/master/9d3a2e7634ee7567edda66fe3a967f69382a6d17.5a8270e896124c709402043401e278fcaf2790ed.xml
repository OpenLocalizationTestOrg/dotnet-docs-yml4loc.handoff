{"nodes":[{"content":"Represents an add-in that can be activated.","nodes":[{"pos":[0,43],"content":"Represents an add-in that can be activated.","nodes":[{"content":"Represents an add-in that can be activated.","pos":[0,43]}]}],"pos":[1681,1725],"yaml":true},{"content":"An <xref:System.AddIn.Hosting.AddInToken> object represents an add-in, and its associated pipeline segments, that can be activated. The token contains the name, assembly name, description, publisher, and version of the add-in that it represents.  \n  \n Use the <xref:System.AddIn.Hosting.AddInStore.FindAddIns%2A?displayProperty=fullName> method to get a collection of tokens that represent add-ins whose pipelines match a specified host view. Use the <xref:System.AddIn.Hosting.AddInStore.FindAddIn%2A?displayProperty=fullName> method to get a collection of tokens that represent all the pipelines for a specified add-in that match a specified host view.  \n  \n To activate an add-in, pass the token that represents the desired add-in to the <xref:System.AddIn.Hosting.AddInToken.Activate%2A> method. This method returns an instance of the type that represents the host view of the add-in.  \n  \n The <xref:System.AddIn.Hosting.AddInToken.Activate%2A> method has several overloads. When you use an overload that does not require the name of an application domain as one of its parameters, a new application domain for the add-in is automatically created.  \n  \n You can use Language-Integrated Query (LINQ) extension methods to perform queries on an <xref:System.AddIn.Hosting.AddInToken>, treating the token as a collection of <xref:System.AddIn.Hosting.QualificationDataItem> structures.","nodes":[{"pos":[0,245],"content":"An <xref:System.AddIn.Hosting.AddInToken> object represents an add-in, and its associated pipeline segments, that can be activated. The token contains the name, assembly name, description, publisher, and version of the add-in that it represents.","nodes":[{"content":"An <xref:System.AddIn.Hosting.AddInToken> object represents an add-in, and its associated pipeline segments, that can be activated. The token contains the name, assembly name, description, publisher, and version of the add-in that it represents.","pos":[0,245],"nodes":[{"content":"An <ph id=\"ph1\">&lt;xref:System.AddIn.Hosting.AddInToken&gt;</ph> object represents an add-in, and its associated pipeline segments, that can be activated.","pos":[0,131],"source":"An <xref:System.AddIn.Hosting.AddInToken> object represents an add-in, and its associated pipeline segments, that can be activated."},{"content":"The token contains the name, assembly name, description, publisher, and version of the add-in that it represents.","pos":[132,245]}]}]},{"pos":[252,654],"content":"Use the <xref:System.AddIn.Hosting.AddInStore.FindAddIns%2A?displayProperty=fullName> method to get a collection of tokens that represent add-ins whose pipelines match a specified host view. Use the <xref:System.AddIn.Hosting.AddInStore.FindAddIn%2A?displayProperty=fullName> method to get a collection of tokens that represent all the pipelines for a specified add-in that match a specified host view.","nodes":[{"content":"Use the <xref:System.AddIn.Hosting.AddInStore.FindAddIns%2A?displayProperty=fullName> method to get a collection of tokens that represent add-ins whose pipelines match a specified host view. Use the <xref:System.AddIn.Hosting.AddInStore.FindAddIn%2A?displayProperty=fullName> method to get a collection of tokens that represent all the pipelines for a specified add-in that match a specified host view.","pos":[0,402],"nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.AddIn.Hosting.AddInStore.FindAddIns%2A?displayProperty=fullName&gt;</ph> method to get a collection of tokens that represent add-ins whose pipelines match a specified host view.","pos":[0,190],"source":"Use the <xref:System.AddIn.Hosting.AddInStore.FindAddIns%2A?displayProperty=fullName> method to get a collection of tokens that represent add-ins whose pipelines match a specified host view."},{"content":"Use the <ph id=\"ph1\">&lt;xref:System.AddIn.Hosting.AddInStore.FindAddIn%2A?displayProperty=fullName&gt;</ph> method to get a collection of tokens that represent all the pipelines for a specified add-in that match a specified host view.","pos":[191,402],"source":" Use the <xref:System.AddIn.Hosting.AddInStore.FindAddIn%2A?displayProperty=fullName> method to get a collection of tokens that represent all the pipelines for a specified add-in that match a specified host view."}]}]},{"pos":[661,888],"content":"To activate an add-in, pass the token that represents the desired add-in to the <xref:System.AddIn.Hosting.AddInToken.Activate%2A> method. This method returns an instance of the type that represents the host view of the add-in.","nodes":[{"content":"To activate an add-in, pass the token that represents the desired add-in to the <xref:System.AddIn.Hosting.AddInToken.Activate%2A> method. This method returns an instance of the type that represents the host view of the add-in.","pos":[0,227],"nodes":[{"content":"To activate an add-in, pass the token that represents the desired add-in to the <ph id=\"ph1\">&lt;xref:System.AddIn.Hosting.AddInToken.Activate%2A&gt;</ph> method.","pos":[0,138],"source":"To activate an add-in, pass the token that represents the desired add-in to the <xref:System.AddIn.Hosting.AddInToken.Activate%2A> method."},{"content":"This method returns an instance of the type that represents the host view of the add-in.","pos":[139,227]}]}]},{"pos":[895,1152],"content":"The <xref:System.AddIn.Hosting.AddInToken.Activate%2A> method has several overloads. When you use an overload that does not require the name of an application domain as one of its parameters, a new application domain for the add-in is automatically created.","nodes":[{"content":"The <xref:System.AddIn.Hosting.AddInToken.Activate%2A> method has several overloads. When you use an overload that does not require the name of an application domain as one of its parameters, a new application domain for the add-in is automatically created.","pos":[0,257],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.AddIn.Hosting.AddInToken.Activate%2A&gt;</ph> method has several overloads.","pos":[0,84],"source":"The <xref:System.AddIn.Hosting.AddInToken.Activate%2A> method has several overloads."},{"content":"When you use an overload that does not require the name of an application domain as one of its parameters, a new application domain for the add-in is automatically created.","pos":[85,257]}]}]},{"pos":[1159,1386],"content":"You can use Language-Integrated Query (LINQ) extension methods to perform queries on an <xref:System.AddIn.Hosting.AddInToken>, treating the token as a collection of <xref:System.AddIn.Hosting.QualificationDataItem> structures.","nodes":[{"content":"You can use Language-Integrated Query (LINQ) extension methods to perform queries on an <ph id=\"ph1\">&lt;xref:System.AddIn.Hosting.AddInToken&gt;</ph>, treating the token as a collection of <ph id=\"ph2\">&lt;xref:System.AddIn.Hosting.QualificationDataItem&gt;</ph> structures.","pos":[0,227],"source":"You can use Language-Integrated Query (LINQ) extension methods to perform queries on an <xref:System.AddIn.Hosting.AddInToken>, treating the token as a collection of <xref:System.AddIn.Hosting.QualificationDataItem> structures."}]}],"pos":[1736,3133],"yaml":true,"extradata":"MT"},{"content":"Activates an add-in in the environment of another add-in.","nodes":[{"pos":[0,57],"content":"Activates an add-in in the environment of another add-in.","nodes":[{"content":"Activates an add-in in the environment of another add-in.","pos":[0,57]}]}],"pos":[32528,32586],"yaml":true},{"content":"This method overload activates the add-in in the same application domain and process as the add-in from which `environment` was obtained.","nodes":[{"pos":[0,137],"content":"This method overload activates the add-in in the same application domain and process as the add-in from which <ph id=\"ph1\">`environment`</ph> was obtained.","source":"This method overload activates the add-in in the same application domain and process as the add-in from which `environment` was obtained."}],"pos":[32597,32735],"yaml":true,"extradata":"MT"},{"content":"The application domain and process that contains the original add-in.","nodes":[{"pos":[0,69],"content":"The application domain and process that contains the original add-in.","nodes":[{"content":"The application domain and process that contains the original add-in.","pos":[0,69]}]}],"pos":[33463,33533],"yaml":true},{"content":"The interface or abstract base type that represents the host view of the add-in.","nodes":[{"pos":[0,80],"content":"The interface or abstract base type that represents the host view of the add-in.","nodes":[{"content":"The interface or abstract base type that represents the host view of the add-in.","pos":[0,80]}]}],"pos":[33584,33665],"yaml":true},{"content":"The host view of the add-in.","nodes":[{"pos":[0,28],"content":"The host view of the add-in.","nodes":[{"content":"The host view of the add-in.","pos":[0,28]}]}],"pos":[33710,33739],"yaml":true},{"content":"Activates an add-in with a specified trust level in a new application domain.","nodes":[{"pos":[0,77],"content":"Activates an add-in with a specified trust level in a new application domain.","nodes":[{"content":"Activates an add-in with a specified trust level in a new application domain.","pos":[0,77]}]}],"pos":[34903,34981],"yaml":true},{"content":"This method overload loads the add-in into an automatically generated application domain. If you want to specify a name for the new application domain, use the <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%2CSystem.String%29> overload.  \n  \n This method sets the base directory for the application domain to be the location of the add-in assembly. It also looks for the configuration file [addinassemblyname].dll.config and, if found, sets it to be the configuration file for the new application domain.","nodes":[{"pos":[0,285],"content":"This method overload loads the add-in into an automatically generated application domain. If you want to specify a name for the new application domain, use the <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%2CSystem.String%29> overload.","nodes":[{"content":"This method overload loads the add-in into an automatically generated application domain. If you want to specify a name for the new application domain, use the <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%2CSystem.String%29> overload.","pos":[0,285],"nodes":[{"content":"This method overload loads the add-in into an automatically generated application domain.","pos":[0,89]},{"content":"If you want to specify a name for the new application domain, use the <ph id=\"ph1\">&lt;xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%2CSystem.String%29&gt;</ph> overload.","pos":[90,285],"source":" If you want to specify a name for the new application domain, use the <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%2CSystem.String%29> overload."}]}]},{"pos":[292,553],"content":"This method sets the base directory for the application domain to be the location of the add-in assembly. It also looks for the configuration file [addinassemblyname].dll.config and, if found, sets it to be the configuration file for the new application domain.","nodes":[{"content":"This method sets the base directory for the application domain to be the location of the add-in assembly. It also looks for the configuration file [addinassemblyname].dll.config and, if found, sets it to be the configuration file for the new application domain.","pos":[0,261],"nodes":[{"content":"This method sets the base directory for the application domain to be the location of the add-in assembly.","pos":[0,105]},{"content":"It also looks for the configuration file [addinassemblyname].dll.config and, if found, sets it to be the configuration file for the new application domain.","pos":[106,261]}]}]}],"pos":[34992,35550],"yaml":true,"extradata":"MT"},{"content":"One of the enumeration values that specifies the trust level.","nodes":[{"pos":[0,61],"content":"One of the enumeration values that specifies the trust level.","nodes":[{"content":"One of the enumeration values that specifies the trust level.","pos":[0,61]}]}],"pos":[36153,36215],"yaml":true},{"content":"The interface or abstract base type that represents the host view of the add-in.","nodes":[{"pos":[0,80],"content":"The interface or abstract base type that represents the host view of the add-in.","nodes":[{"content":"The interface or abstract base type that represents the host view of the add-in.","pos":[0,80]}]}],"pos":[36266,36347],"yaml":true},{"content":"The host view of the add-in.","nodes":[{"pos":[0,28],"content":"The host view of the add-in.","nodes":[{"content":"The host view of the add-in.","pos":[0,28]}]}],"pos":[36392,36421],"yaml":true},{"content":"Activates an add-in in an existing application domain.","nodes":[{"pos":[0,54],"content":"Activates an add-in in an existing application domain.","nodes":[{"content":"Activates an add-in in an existing application domain.","pos":[0,54]}]}],"pos":[37489,37544],"yaml":true},{"content":"To activate an add-in in an automatically generated application domain, use the <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%29> overload to generate a new application domain with a specified security level or the <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%2CSystem.String%29> overload to include a friendly name for the application domain.","nodes":[{"pos":[0,444],"content":"To activate an add-in in an automatically generated application domain, use the <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%29> overload to generate a new application domain with a specified security level or the <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%2CSystem.String%29> overload to include a friendly name for the application domain.","nodes":[{"content":"To activate an add-in in an automatically generated application domain, use the <ph id=\"ph1\">&lt;xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%29&gt;</ph> overload to generate a new application domain with a specified security level or the <ph id=\"ph2\">&lt;xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%2CSystem.String%29&gt;</ph> overload to include a friendly name for the application domain.","pos":[0,444],"source":"To activate an add-in in an automatically generated application domain, use the <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%29> overload to generate a new application domain with a specified security level or the <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%2CSystem.String%29> overload to include a friendly name for the application domain."}]}],"pos":[37555,38000],"yaml":true,"extradata":"MT"},{"content":"The application domain that the add-in should be activated in.","nodes":[{"pos":[0,62],"content":"The application domain that the add-in should be activated in.","nodes":[{"content":"The application domain that the add-in should be activated in.","pos":[0,62]}]}],"pos":[38573,38636],"yaml":true},{"content":"The interface or abstract base type that represents the host view of the add-in.","nodes":[{"pos":[0,80],"content":"The interface or abstract base type that represents the host view of the add-in.","nodes":[{"content":"The interface or abstract base type that represents the host view of the add-in.","pos":[0,80]}]}],"pos":[38687,38768],"yaml":true},{"content":"The host view of the add-in.","nodes":[{"pos":[0,28],"content":"The host view of the add-in.","nodes":[{"content":"The host view of the add-in.","pos":[0,28]}]}],"pos":[38813,38842],"yaml":true},{"content":"Full-trust permission is demanded. A caller in the call chain does not have sufficient permission.","nodes":[{"pos":[0,98],"content":"Full-trust permission is demanded. A caller in the call chain does not have sufficient permission.","nodes":[{"content":"Full-trust permission is demanded. A caller in the call chain does not have sufficient permission.","pos":[0,98],"nodes":[{"content":"Full-trust permission is demanded.","pos":[0,34]},{"content":"A caller in the call chain does not have sufficient permission.","pos":[35,98]}]}]}],"pos":[39025,39124],"yaml":true},{"content":"Activates an add-in with a specified permission set in a new application domain.","nodes":[{"pos":[0,80],"content":"Activates an add-in with a specified permission set in a new application domain.","nodes":[{"content":"Activates an add-in with a specified permission set in a new application domain.","pos":[0,80]}]}],"pos":[40169,40250],"yaml":true},{"content":"This method overload loads the add-in into an automatically generated application domain. It sets the base directory for the application domain to be the location of the add-in assembly. It also looks for the configuration file `[addinassemblyname].dll.config` and, if found, sets it to be the configuration file for the new application domain.","nodes":[{"pos":[0,344],"content":"This method overload loads the add-in into an automatically generated application domain. It sets the base directory for the application domain to be the location of the add-in assembly. It also looks for the configuration file `[addinassemblyname].dll.config` and, if found, sets it to be the configuration file for the new application domain.","nodes":[{"content":"This method overload loads the add-in into an automatically generated application domain.","pos":[0,89]},{"content":"It sets the base directory for the application domain to be the location of the add-in assembly.","pos":[90,186]},{"content":"It also looks for the configuration file <ph id=\"ph1\">`[addinassemblyname].dll.config`</ph> and, if found, sets it to be the configuration file for the new application domain.","pos":[187,344],"source":" It also looks for the configuration file `[addinassemblyname].dll.config` and, if found, sets it to be the configuration file for the new application domain."}]}],"pos":[40261,40606],"yaml":true,"extradata":"MT"},{"content":"The permissions granted for the add-in.","nodes":[{"pos":[0,39],"content":"The permissions granted for the add-in.","nodes":[{"content":"The permissions granted for the add-in.","pos":[0,39]}]}],"pos":[40794,40834],"yaml":true},{"content":"The interface or abstract base type that represents the host view of the add-in.","nodes":[{"pos":[0,80],"content":"The interface or abstract base type that represents the host view of the add-in.","nodes":[{"content":"The interface or abstract base type that represents the host view of the add-in.","pos":[0,80]}]}],"pos":[40885,40966],"yaml":true},{"content":"The host view of the add-in.","nodes":[{"pos":[0,28],"content":"The host view of the add-in.","nodes":[{"content":"The host view of the add-in.","pos":[0,28]}]}],"pos":[41011,41040],"yaml":true},{"content":"<code>permissions</code> is `null`.","nodes":[{"pos":[0,35],"content":"<ph id=\"ph1\">&lt;code&gt;permissions&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>permissions</code> is `null`."}],"pos":[41213,41249],"yaml":true},{"content":"Activates an add-in in an external process, in a new application domain, and with a specified trust level.","nodes":[{"pos":[0,106],"content":"Activates an add-in in an external process, in a new application domain, and with a specified trust level.","nodes":[{"content":"Activates an add-in in an external process, in a new application domain, and with a specified trust level.","pos":[0,106]}]}],"pos":[42483,42590],"yaml":true},{"content":"This method sets the base directory for the application domain to be the location of the add-in assembly. It also looks for the configuration file `[addinassemblyname].dll.config` and, if found, sets it to be the configuration file for the new application domain.","nodes":[{"pos":[0,263],"content":"This method sets the base directory for the application domain to be the location of the add-in assembly. It also looks for the configuration file `[addinassemblyname].dll.config` and, if found, sets it to be the configuration file for the new application domain.","nodes":[{"content":"This method sets the base directory for the application domain to be the location of the add-in assembly.","pos":[0,105]},{"content":"It also looks for the configuration file <ph id=\"ph1\">`[addinassemblyname].dll.config`</ph> and, if found, sets it to be the configuration file for the new application domain.","pos":[106,263],"source":" It also looks for the configuration file `[addinassemblyname].dll.config` and, if found, sets it to be the configuration file for the new application domain."}]}],"pos":[42601,42865],"yaml":true,"extradata":"MT"},{"content":"The external process in which to activate the add-in.","nodes":[{"pos":[0,53],"content":"The external process in which to activate the add-in.","nodes":[{"content":"The external process in which to activate the add-in.","pos":[0,53]}]}],"pos":[43450,43504],"yaml":true},{"content":"One of the enumeration values that specifies the trust level.","nodes":[{"pos":[0,61],"content":"One of the enumeration values that specifies the trust level.","nodes":[{"content":"One of the enumeration values that specifies the trust level.","pos":[0,61]}]}],"pos":[43591,43653],"yaml":true},{"content":"The interface or abstract base type that represents the host view of the add-in.","nodes":[{"pos":[0,80],"content":"The interface or abstract base type that represents the host view of the add-in.","nodes":[{"content":"The interface or abstract base type that represents the host view of the add-in.","pos":[0,80]}]}],"pos":[43704,43785],"yaml":true},{"content":"The host view of the add-in.","nodes":[{"pos":[0,28],"content":"The host view of the add-in.","nodes":[{"content":"The host view of the add-in.","pos":[0,28]}]}],"pos":[43830,43859],"yaml":true},{"content":"Activates an add-in in an external process, in a new application domain, and with a specified permission set.","nodes":[{"pos":[0,109],"content":"Activates an add-in in an external process, in a new application domain, and with a specified permission set.","nodes":[{"content":"Activates an add-in in an external process, in a new application domain, and with a specified permission set.","pos":[0,109]}]}],"pos":[45139,45249],"yaml":true},{"content":"This method sets the base directory for the application domain to be the location of the add-in assembly. It also looks for the configuration file `[addinassemblyname].dll.config` and, if found, sets it to be the configuration file for the new application domain.","nodes":[{"pos":[0,263],"content":"This method sets the base directory for the application domain to be the location of the add-in assembly. It also looks for the configuration file `[addinassemblyname].dll.config` and, if found, sets it to be the configuration file for the new application domain.","nodes":[{"content":"This method sets the base directory for the application domain to be the location of the add-in assembly.","pos":[0,105]},{"content":"It also looks for the configuration file <ph id=\"ph1\">`[addinassemblyname].dll.config`</ph> and, if found, sets it to be the configuration file for the new application domain.","pos":[106,263],"source":" It also looks for the configuration file `[addinassemblyname].dll.config` and, if found, sets it to be the configuration file for the new application domain."}]}],"pos":[45260,45524],"yaml":true,"extradata":"MT"},{"content":"The external process in which to activate the add-in.","nodes":[{"pos":[0,53],"content":"The external process in which to activate the add-in.","nodes":[{"content":"The external process in which to activate the add-in.","pos":[0,53]}]}],"pos":[45757,45811],"yaml":true},{"content":"The required permission set granted for the add-in.","nodes":[{"pos":[0,51],"content":"The required permission set granted for the add-in.","nodes":[{"content":"The required permission set granted for the add-in.","pos":[0,51]}]}],"pos":[45896,45948],"yaml":true},{"content":"The interface or abstract base type that represents the host view of the add-in.","nodes":[{"pos":[0,80],"content":"The interface or abstract base type that represents the host view of the add-in.","nodes":[{"content":"The interface or abstract base type that represents the host view of the add-in.","pos":[0,80]}]}],"pos":[45999,46080],"yaml":true},{"content":"The host view of the add-in.","nodes":[{"pos":[0,28],"content":"The host view of the add-in.","nodes":[{"content":"The host view of the add-in.","pos":[0,28]}]}],"pos":[46125,46154],"yaml":true},{"content":"Activates an add-in in a new application domain with a specified name and trust level.","nodes":[{"pos":[0,86],"content":"Activates an add-in in a new application domain with a specified name and trust level.","nodes":[{"content":"Activates an add-in in a new application domain with a specified name and trust level.","pos":[0,86]}]}],"pos":[47401,47488],"yaml":true},{"content":"If you do not need to specify an application domain name, use the <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%29> overload.  \n  \n This method sets the base directory for the application domain to be the location of the add-in assembly. It also looks for the configuration file `[addinassemblyname].dll.config` and, if found, sets it to be the configuration file for the new application domain.","nodes":[{"pos":[0,175],"content":"If you do not need to specify an application domain name, use the <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%29> overload.","nodes":[{"content":"If you do not need to specify an application domain name, use the <ph id=\"ph1\">&lt;xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%29&gt;</ph> overload.","pos":[0,175],"source":"If you do not need to specify an application domain name, use the <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%29> overload."}]},{"pos":[182,445],"content":"This method sets the base directory for the application domain to be the location of the add-in assembly. It also looks for the configuration file `[addinassemblyname].dll.config` and, if found, sets it to be the configuration file for the new application domain.","nodes":[{"content":"This method sets the base directory for the application domain to be the location of the add-in assembly.","pos":[0,105]},{"content":"It also looks for the configuration file <ph id=\"ph1\">`[addinassemblyname].dll.config`</ph> and, if found, sets it to be the configuration file for the new application domain.","pos":[106,263],"source":" It also looks for the configuration file `[addinassemblyname].dll.config` and, if found, sets it to be the configuration file for the new application domain."}]}],"pos":[47499,47949],"yaml":true,"extradata":"MT"},{"content":"One of the enumeration values that specifies the trust level.","nodes":[{"pos":[0,61],"content":"One of the enumeration values that specifies the trust level.","nodes":[{"content":"One of the enumeration values that specifies the trust level.","pos":[0,61]}]}],"pos":[48177,48239],"yaml":true},{"content":"The friendly name to assign to the new application domain.","nodes":[{"pos":[0,58],"content":"The friendly name to assign to the new application domain.","nodes":[{"content":"The friendly name to assign to the new application domain.","pos":[0,58]}]}],"pos":[48308,48367],"yaml":true},{"content":"The interface or abstract base type that represents the host view of the add-in.","nodes":[{"pos":[0,80],"content":"The interface or abstract base type that represents the host view of the add-in.","nodes":[{"content":"The interface or abstract base type that represents the host view of the add-in.","pos":[0,80]}]}],"pos":[48418,48499],"yaml":true},{"content":"The host view of the add-in.","nodes":[{"pos":[0,28],"content":"The host view of the add-in.","nodes":[{"content":"The host view of the add-in.","pos":[0,28]}]}],"pos":[48544,48573],"yaml":true},{"content":"Gets the namespace and type of the add-in.","nodes":[{"pos":[0,42],"content":"Gets the namespace and type of the add-in.","nodes":[{"content":"Gets the namespace and type of the add-in.","pos":[0,42]}]}],"pos":[49568,49611],"yaml":true},{"content":"This property obtains the full name of the add-in as it would be returned by the <xref:System.Type.FullName%2A?displayProperty=fullName> property. This value is always available on an instance of an <xref:System.AddIn.Hosting.AddInToken> object.","nodes":[{"pos":[0,245],"content":"This property obtains the full name of the add-in as it would be returned by the <xref:System.Type.FullName%2A?displayProperty=fullName> property. This value is always available on an instance of an <xref:System.AddIn.Hosting.AddInToken> object.","nodes":[{"content":"This property obtains the full name of the add-in as it would be returned by the <xref:System.Type.FullName%2A?displayProperty=fullName> property. This value is always available on an instance of an <xref:System.AddIn.Hosting.AddInToken> object.","pos":[0,245],"nodes":[{"content":"This property obtains the full name of the add-in as it would be returned by the <ph id=\"ph1\">&lt;xref:System.Type.FullName%2A?displayProperty=fullName&gt;</ph> property.","pos":[0,146],"source":"This property obtains the full name of the add-in as it would be returned by the <xref:System.Type.FullName%2A?displayProperty=fullName> property."},{"content":"This value is always available on an instance of an <ph id=\"ph1\">&lt;xref:System.AddIn.Hosting.AddInToken&gt;</ph> object.","pos":[147,245],"source":" This value is always available on an instance of an <xref:System.AddIn.Hosting.AddInToken> object."}]}]}],"pos":[49622,49868],"yaml":true,"extradata":"MT"},{"content":"The type of the add-in, fully qualified by its namespace.","nodes":[{"pos":[0,57],"content":"The type of the add-in, fully qualified by its namespace.","nodes":[{"content":"The type of the add-in, fully qualified by its namespace.","pos":[0,57]}]}],"pos":[50719,50777],"yaml":true},{"content":"Gets the name of the assembly that contains the add-in.","nodes":[{"pos":[0,55],"content":"Gets the name of the assembly that contains the add-in.","nodes":[{"content":"Gets the name of the assembly that contains the add-in.","pos":[0,55]}]}],"pos":[51768,51824],"yaml":true},{"content":"This property obtains the display name of the assembly that contains the add-in, as it would be returned by the <xref:System.Reflection.Assembly.FullName%2A?displayProperty=fullName> property. This value is always available on an instance of an <xref:System.AddIn.Hosting.AddInToken> object.","nodes":[{"pos":[0,291],"content":"This property obtains the display name of the assembly that contains the add-in, as it would be returned by the <xref:System.Reflection.Assembly.FullName%2A?displayProperty=fullName> property. This value is always available on an instance of an <xref:System.AddIn.Hosting.AddInToken> object.","nodes":[{"content":"This property obtains the display name of the assembly that contains the add-in, as it would be returned by the <xref:System.Reflection.Assembly.FullName%2A?displayProperty=fullName> property. This value is always available on an instance of an <xref:System.AddIn.Hosting.AddInToken> object.","pos":[0,291],"nodes":[{"content":"This property obtains the display name of the assembly that contains the add-in, as it would be returned by the <ph id=\"ph1\">&lt;xref:System.Reflection.Assembly.FullName%2A?displayProperty=fullName&gt;</ph> property.","pos":[0,192],"source":"This property obtains the display name of the assembly that contains the add-in, as it would be returned by the <xref:System.Reflection.Assembly.FullName%2A?displayProperty=fullName> property."},{"content":"This value is always available on an instance of an <ph id=\"ph1\">&lt;xref:System.AddIn.Hosting.AddInToken&gt;</ph> object.","pos":[193,291],"source":" This value is always available on an instance of an <xref:System.AddIn.Hosting.AddInToken> object."}]}]}],"pos":[51835,52127],"yaml":true,"extradata":"MT"},{"content":"The name of the assembly.","nodes":[{"pos":[0,25],"content":"The name of the assembly.","nodes":[{"content":"The name of the assembly.","pos":[0,25]}]}],"pos":[53019,53045],"yaml":true},{"content":"Gets the description of the add-in.","nodes":[{"pos":[0,35],"content":"Gets the description of the add-in.","nodes":[{"content":"Gets the description of the add-in.","pos":[0,35]}]}],"pos":[54029,54065],"yaml":true},{"content":"This property obtains the description of the add-in as specified in the <xref:System.AddIn.AddInAttribute> attribute.","nodes":[{"pos":[0,117],"content":"This property obtains the description of the add-in as specified in the <xref:System.AddIn.AddInAttribute> attribute.","nodes":[{"content":"This property obtains the description of the add-in as specified in the <ph id=\"ph1\">&lt;xref:System.AddIn.AddInAttribute&gt;</ph> attribute.","pos":[0,117],"source":"This property obtains the description of the add-in as specified in the <xref:System.AddIn.AddInAttribute> attribute."}]}],"pos":[54076,54194],"yaml":true,"extradata":"MT"},{"content":"A description of the add-in, or `null` if the description is not specified in the <xref href=\"System.AddIn.AddInAttribute\"></xref> attribute.","nodes":[{"pos":[0,141],"content":"A description of the add-in, or <ph id=\"ph1\">`null`</ph> if the description is not specified in the <ph id=\"ph2\">&lt;xref href=\"System.AddIn.AddInAttribute\"&gt;&lt;/xref&gt;</ph> attribute.","source":"A description of the add-in, or `null` if the description is not specified in the <xref href=\"System.AddIn.AddInAttribute\"></xref> attribute."}],"pos":[55044,55186],"yaml":true},{"content":"Gets and sets a value that indicates whether add-ins should be directly connected to their hosts when conditions permit.","nodes":[{"pos":[0,120],"content":"Gets and sets a value that indicates whether add-ins should be directly connected to their hosts when conditions permit.","nodes":[{"content":"Gets and sets a value that indicates whether add-ins should be directly connected to their hosts when conditions permit.","pos":[0,120]}]}],"pos":[56217,56338],"yaml":true},{"content":"The following conditions must exist for the direct connection to occur:  \n  \n-   This property must be set to `true`.  \n  \n-   The add-in must be in the same application domain as the host.  \n  \n-   The add-in view and the host view of the add-in must be the same type.  \n  \n-   All the segments of the pipeline must be available.  \n  \n When a direct connection is established, the add-in-side adapter and the host-side adapter are not instantiated.","nodes":[{"pos":[0,71],"content":"The following conditions must exist for the direct connection to occur:","nodes":[{"content":"The following conditions must exist for the direct connection to occur:","pos":[0,71]}]},{"pos":[81,117],"content":"This property must be set to <ph id=\"ph1\">`true`</ph>.","source":"This property must be set to `true`."},{"pos":[127,189],"content":"The add-in must be in the same application domain as the host.","nodes":[{"content":"The add-in must be in the same application domain as the host.","pos":[0,62]}]},{"pos":[199,269],"content":"The add-in view and the host view of the add-in must be the same type.","nodes":[{"content":"The add-in view and the host view of the add-in must be the same type.","pos":[0,70]}]},{"pos":[279,330],"content":"All the segments of the pipeline must be available.","nodes":[{"content":"All the segments of the pipeline must be available.","pos":[0,51]}]},{"pos":[337,449],"content":"When a direct connection is established, the add-in-side adapter and the host-side adapter are not instantiated.","nodes":[{"content":"When a direct connection is established, the add-in-side adapter and the host-side adapter are not instantiated.","pos":[0,112]}]}],"pos":[56349,56811],"yaml":true,"extradata":"MT"},{"content":"`true` if the add-in should be directly connected to the host; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,106],"content":"`true` if the add-in should be directly connected to the host; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the add-in should be directly connected to the host; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,82],"source":"`true` if the add-in should be directly connected to the host; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[83,106],"source":" The default is `false`."}]}],"pos":[56945,57054],"yaml":true},{"content":"Determines whether a specified object is equal to the current instance.","nodes":[{"pos":[0,71],"content":"Determines whether a specified object is equal to the current instance.","nodes":[{"content":"Determines whether a specified object is equal to the current instance.","pos":[0,71]}]}],"pos":[58082,58154],"yaml":true},{"content":"The object to compare with the current instance.","nodes":[{"pos":[0,48],"content":"The object to compare with the current instance.","nodes":[{"content":"The object to compare with the current instance.","pos":[0,48]}]}],"pos":[58294,58343],"yaml":true},{"content":"`true` if the specified object and the current instance are equal; otherwise, `false`.","nodes":[{"pos":[0,86],"content":"<ph id=\"ph1\">`true`</ph> if the specified object and the current instance are equal; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the specified object and the current instance are equal; otherwise, `false`."}],"pos":[58401,58490],"yaml":true},{"content":"Returns an enumerator for the qualification data of the pipeline segments that are associated with this token.","nodes":[{"pos":[0,110],"content":"Returns an enumerator for the qualification data of the pipeline segments that are associated with this token.","nodes":[{"content":"Returns an enumerator for the qualification data of the pipeline segments that are associated with this token.","pos":[0,110]}]}],"pos":[59484,59595],"yaml":true},{"content":"Use this method to treat a token as if it were a collection of qualification data items, for example, in a `foreach` statement (`For Each` in Visual Basic, `for each` in Visual C++).  \n  \n Use the enumerator returned by this method to iterate through the qualification data items of the pipeline segments associated with the current token. Each item of qualification data is a <xref:System.AddIn.Hosting.QualificationDataItem> structure that identifies the pipeline segment and contains a name/value pair from a <xref:System.AddIn.Pipeline.QualificationDataAttribute> attribute applied to that segment.  \n  \n> [!NOTE]\n>  The add-in model does not use qualification data that is applied to the host view of the add-in. As a result, when you enumerate qualification data you will not find any items whose <xref:System.AddIn.Hosting.QualificationDataItem.Segment%2A> property is <xref:System.AddIn.Hosting.AddInSegmentType?displayProperty=fullName>.  \n  \n Alternatively, you can use the <xref:System.AddIn.Hosting.AddInToken.QualificationData%2A> property to get a nested set of dictionaries that contain the qualification data of the pipeline segments.","nodes":[{"pos":[0,182],"content":"Use this method to treat a token as if it were a collection of qualification data items, for example, in a <ph id=\"ph1\">`foreach`</ph> statement (<ph id=\"ph2\">`For Each`</ph> in Visual Basic, <ph id=\"ph3\">`for each`</ph> in Visual C++).","source":"Use this method to treat a token as if it were a collection of qualification data items, for example, in a `foreach` statement (`For Each` in Visual Basic, `for each` in Visual C++)."},{"pos":[189,602],"content":"Use the enumerator returned by this method to iterate through the qualification data items of the pipeline segments associated with the current token. Each item of qualification data is a <xref:System.AddIn.Hosting.QualificationDataItem> structure that identifies the pipeline segment and contains a name/value pair from a <xref:System.AddIn.Pipeline.QualificationDataAttribute> attribute applied to that segment.","nodes":[{"content":"Use the enumerator returned by this method to iterate through the qualification data items of the pipeline segments associated with the current token. Each item of qualification data is a <xref:System.AddIn.Hosting.QualificationDataItem> structure that identifies the pipeline segment and contains a name/value pair from a <xref:System.AddIn.Pipeline.QualificationDataAttribute> attribute applied to that segment.","pos":[0,413],"nodes":[{"content":"Use the enumerator returned by this method to iterate through the qualification data items of the pipeline segments associated with the current token.","pos":[0,150]},{"content":"Each item of qualification data is a <ph id=\"ph1\">&lt;xref:System.AddIn.Hosting.QualificationDataItem&gt;</ph> structure that identifies the pipeline segment and contains a name/value pair from a <ph id=\"ph2\">&lt;xref:System.AddIn.Pipeline.QualificationDataAttribute&gt;</ph> attribute applied to that segment.","pos":[151,413],"source":" Each item of qualification data is a <xref:System.AddIn.Hosting.QualificationDataItem> structure that identifies the pipeline segment and contains a name/value pair from a <xref:System.AddIn.Pipeline.QualificationDataAttribute> attribute applied to that segment."}]}]},{"pos":[610,946],"content":"[!NOTE]\n The add-in model does not use qualification data that is applied to the host view of the add-in. As a result, when you enumerate qualification data you will not find any items whose <xref:System.AddIn.Hosting.QualificationDataItem.Segment%2A> property is <xref:System.AddIn.Hosting.AddInSegmentType?displayProperty=fullName>.","leadings":["","> "],"nodes":[{"content":" The add-in model does not use qualification data that is applied to the host view of the add-in. As a result, when you enumerate qualification data you will not find any items whose <xref:System.AddIn.Hosting.QualificationDataItem.Segment%2A> property is <xref:System.AddIn.Hosting.AddInSegmentType?displayProperty=fullName>.","pos":[8,334],"nodes":[{"content":"The add-in model does not use qualification data that is applied to the host view of the add-in.","pos":[1,97]},{"content":"As a result, when you enumerate qualification data you will not find any items whose <ph id=\"ph1\">&lt;xref:System.AddIn.Hosting.QualificationDataItem.Segment%2A&gt;</ph> property is <ph id=\"ph2\">&lt;xref:System.AddIn.Hosting.AddInSegmentType?displayProperty=fullName&gt;</ph>.","pos":[98,326],"source":" As a result, when you enumerate qualification data you will not find any items whose <xref:System.AddIn.Hosting.QualificationDataItem.Segment%2A> property is <xref:System.AddIn.Hosting.AddInSegmentType?displayProperty=fullName>."}]}]},{"pos":[953,1150],"content":"Alternatively, you can use the <xref:System.AddIn.Hosting.AddInToken.QualificationData%2A> property to get a nested set of dictionaries that contain the qualification data of the pipeline segments.","nodes":[{"content":"Alternatively, you can use the <ph id=\"ph1\">&lt;xref:System.AddIn.Hosting.AddInToken.QualificationData%2A&gt;</ph> property to get a nested set of dictionaries that contain the qualification data of the pipeline segments.","pos":[0,197],"source":"Alternatively, you can use the <xref:System.AddIn.Hosting.AddInToken.QualificationData%2A> property to get a nested set of dictionaries that contain the qualification data of the pipeline segments."}]}],"pos":[59606,60766],"yaml":true,"extradata":"MT"},{"content":"An enumerator that can be used to iterate through the qualification data of the pipeline segments that are associated with the current token.","nodes":[{"pos":[0,141],"content":"An enumerator that can be used to iterate through the qualification data of the pipeline segments that are associated with the current token.","nodes":[{"content":"An enumerator that can be used to iterate through the qualification data of the pipeline segments that are associated with the current token.","pos":[0,141]}]}],"pos":[61438,61580],"yaml":true},{"content":"Serves as a hash function for a token.","nodes":[{"pos":[0,38],"content":"Serves as a hash function for a token.","nodes":[{"content":"Serves as a hash function for a token.","pos":[0,38]}]}],"pos":[62569,62608],"yaml":true},{"content":"A hash code for the current token.","nodes":[{"pos":[0,34],"content":"A hash code for the current token.","nodes":[{"content":"A hash code for the current token.","pos":[0,34]}]}],"pos":[62742,62777],"yaml":true},{"content":"Gets the name of the add-in.","nodes":[{"pos":[0,28],"content":"Gets the name of the add-in.","nodes":[{"content":"Gets the name of the add-in.","pos":[0,28]}]}],"pos":[63718,63747],"yaml":true},{"content":"This property obtains the name of the add-in as specified in the <xref:System.AddIn.AddInAttribute> attribute. This value is always available on an instance of an <xref:System.AddIn.Hosting.AddInToken> object.","nodes":[{"pos":[0,209],"content":"This property obtains the name of the add-in as specified in the <xref:System.AddIn.AddInAttribute> attribute. This value is always available on an instance of an <xref:System.AddIn.Hosting.AddInToken> object.","nodes":[{"content":"This property obtains the name of the add-in as specified in the <xref:System.AddIn.AddInAttribute> attribute. This value is always available on an instance of an <xref:System.AddIn.Hosting.AddInToken> object.","pos":[0,209],"nodes":[{"content":"This property obtains the name of the add-in as specified in the <ph id=\"ph1\">&lt;xref:System.AddIn.AddInAttribute&gt;</ph> attribute.","pos":[0,110],"source":"This property obtains the name of the add-in as specified in the <xref:System.AddIn.AddInAttribute> attribute."},{"content":"This value is always available on an instance of an <ph id=\"ph1\">&lt;xref:System.AddIn.Hosting.AddInToken&gt;</ph> object.","pos":[111,209],"source":" This value is always available on an instance of an <xref:System.AddIn.Hosting.AddInToken> object."}]}]}],"pos":[63758,63968],"yaml":true,"extradata":"MT"},{"content":"The name of the add-in.","nodes":[{"pos":[0,23],"content":"The name of the add-in.","nodes":[{"content":"The name of the add-in.","pos":[0,23]}]}],"pos":[64811,64835],"yaml":true},{"content":"Gets the publisher of the add-in.","nodes":[{"pos":[0,33],"content":"Gets the publisher of the add-in.","nodes":[{"content":"Gets the publisher of the add-in.","pos":[0,33]}]}],"pos":[65799,65833],"yaml":true},{"content":"This property obtains the publisher of the add-in as specified in the <xref:System.AddIn.AddInAttribute> attribute.","nodes":[{"pos":[0,115],"content":"This property obtains the publisher of the add-in as specified in the <xref:System.AddIn.AddInAttribute> attribute.","nodes":[{"content":"This property obtains the publisher of the add-in as specified in the <ph id=\"ph1\">&lt;xref:System.AddIn.AddInAttribute&gt;</ph> attribute.","pos":[0,115],"source":"This property obtains the publisher of the add-in as specified in the <xref:System.AddIn.AddInAttribute> attribute."}]}],"pos":[65844,65960],"yaml":true,"extradata":"MT"},{"content":"The publisher of the add-in, or `null` if the publisher is not specified in the <xref href=\"System.AddIn.AddInAttribute\"></xref> attribute.","nodes":[{"pos":[0,139],"content":"The publisher of the add-in, or <ph id=\"ph1\">`null`</ph> if the publisher is not specified in the <ph id=\"ph2\">&lt;xref href=\"System.AddIn.AddInAttribute\"&gt;&lt;/xref&gt;</ph> attribute.","source":"The publisher of the add-in, or `null` if the publisher is not specified in the <xref href=\"System.AddIn.AddInAttribute\"></xref> attribute."}],"pos":[66808,66948],"yaml":true},{"content":"Gets a dictionary of data about the segments in the pipeline associated with the current token.","nodes":[{"pos":[0,95],"content":"Gets a dictionary of data about the segments in the pipeline associated with the current token.","nodes":[{"content":"Gets a dictionary of data about the segments in the pipeline associated with the current token.","pos":[0,95]}]}],"pos":[67965,68061],"yaml":true},{"content":"Use this property to obtain data that has been applied to pipeline segments with the <xref:System.AddIn.Pipeline.QualificationDataAttribute> attribute. You can use this data to identify and work with the types that compose your pipelines.  \n  \n This property returns a dictionary of dictionaries. The top dictionary always has six keys. Each key is an <xref:System.AddIn.Hosting.AddInSegmentType> value for a segment in the pipeline. Each value is a generic <xref:System.Collections.Generic.IDictionary%602>of strings with string keys that contains the segment's qualification data.  \n  \n The keys and values of these inner dictionaries are the names and values specified in the <xref:System.AddIn.Pipeline.QualificationDataAttribute> attributes for the segments. If no qualification data has been applied to a segment, its dictionary is empty.  \n  \n> [!NOTE]\n>  The add-in model does not use qualification data that is applied to the host view of the add-in. As a result, the dictionary for <xref:System.AddIn.Hosting.AddInSegmentType?displayProperty=fullName> is always empty.  \n  \n Alternatively, you can obtain qualification data by enumerating an <xref:System.AddIn.Hosting.AddInToken> as if it were a collection of <xref:System.AddIn.Hosting.QualificationDataItem> structures, using a `foreach` statement (`For Each` in Visual Basic, `for each` in Visual C++). See the example provided for the <xref:System.AddIn.Hosting.QualificationDataItem> structure.","nodes":[{"pos":[0,238],"content":"Use this property to obtain data that has been applied to pipeline segments with the <xref:System.AddIn.Pipeline.QualificationDataAttribute> attribute. You can use this data to identify and work with the types that compose your pipelines.","nodes":[{"content":"Use this property to obtain data that has been applied to pipeline segments with the <xref:System.AddIn.Pipeline.QualificationDataAttribute> attribute. You can use this data to identify and work with the types that compose your pipelines.","pos":[0,238],"nodes":[{"content":"Use this property to obtain data that has been applied to pipeline segments with the <ph id=\"ph1\">&lt;xref:System.AddIn.Pipeline.QualificationDataAttribute&gt;</ph> attribute.","pos":[0,151],"source":"Use this property to obtain data that has been applied to pipeline segments with the <xref:System.AddIn.Pipeline.QualificationDataAttribute> attribute."},{"content":"You can use this data to identify and work with the types that compose your pipelines.","pos":[152,238]}]}]},{"pos":[245,582],"content":"This property returns a dictionary of dictionaries. The top dictionary always has six keys. Each key is an <xref:System.AddIn.Hosting.AddInSegmentType> value for a segment in the pipeline. Each value is a generic <xref:System.Collections.Generic.IDictionary%602>of strings with string keys that contains the segment's qualification data.","nodes":[{"content":"This property returns a dictionary of dictionaries. The top dictionary always has six keys. Each key is an <xref:System.AddIn.Hosting.AddInSegmentType> value for a segment in the pipeline. Each value is a generic <xref:System.Collections.Generic.IDictionary%602>of strings with string keys that contains the segment's qualification data.","pos":[0,337],"nodes":[{"content":"This property returns a dictionary of dictionaries.","pos":[0,51]},{"content":"The top dictionary always has six keys.","pos":[52,91]},{"content":"Each key is an <ph id=\"ph1\">&lt;xref:System.AddIn.Hosting.AddInSegmentType&gt;</ph> value for a segment in the pipeline.","pos":[92,188],"source":" Each key is an <xref:System.AddIn.Hosting.AddInSegmentType> value for a segment in the pipeline."},{"content":"Each value is a generic <ph id=\"ph1\">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph>of strings with string keys that contains the segment's qualification data.","pos":[189,337],"source":" Each value is a generic <xref:System.Collections.Generic.IDictionary%602>of strings with string keys that contains the segment's qualification data."}]}]},{"pos":[589,844],"content":"The keys and values of these inner dictionaries are the names and values specified in the <xref:System.AddIn.Pipeline.QualificationDataAttribute> attributes for the segments. If no qualification data has been applied to a segment, its dictionary is empty.","nodes":[{"content":"The keys and values of these inner dictionaries are the names and values specified in the <xref:System.AddIn.Pipeline.QualificationDataAttribute> attributes for the segments. If no qualification data has been applied to a segment, its dictionary is empty.","pos":[0,255],"nodes":[{"content":"The keys and values of these inner dictionaries are the names and values specified in the <ph id=\"ph1\">&lt;xref:System.AddIn.Pipeline.QualificationDataAttribute&gt;</ph> attributes for the segments.","pos":[0,174],"source":"The keys and values of these inner dictionaries are the names and values specified in the <xref:System.AddIn.Pipeline.QualificationDataAttribute> attributes for the segments."},{"content":"If no qualification data has been applied to a segment, its dictionary is empty.","pos":[175,255]}]}]},{"pos":[852,1078],"content":"[!NOTE]\n The add-in model does not use qualification data that is applied to the host view of the add-in. As a result, the dictionary for <xref:System.AddIn.Hosting.AddInSegmentType?displayProperty=fullName> is always empty.","leadings":["","> "],"nodes":[{"content":" The add-in model does not use qualification data that is applied to the host view of the add-in. As a result, the dictionary for <xref:System.AddIn.Hosting.AddInSegmentType?displayProperty=fullName> is always empty.","pos":[8,224],"nodes":[{"content":"The add-in model does not use qualification data that is applied to the host view of the add-in.","pos":[1,97]},{"content":"As a result, the dictionary for <ph id=\"ph1\">&lt;xref:System.AddIn.Hosting.AddInSegmentType?displayProperty=fullName&gt;</ph> is always empty.","pos":[98,216],"source":" As a result, the dictionary for <xref:System.AddIn.Hosting.AddInSegmentType?displayProperty=fullName> is always empty."}]}]},{"pos":[1085,1460],"content":"Alternatively, you can obtain qualification data by enumerating an <xref:System.AddIn.Hosting.AddInToken> as if it were a collection of <xref:System.AddIn.Hosting.QualificationDataItem> structures, using a `foreach` statement (`For Each` in Visual Basic, `for each` in Visual C++). See the example provided for the <xref:System.AddIn.Hosting.QualificationDataItem> structure.","nodes":[{"content":"Alternatively, you can obtain qualification data by enumerating an <ph id=\"ph1\">&lt;xref:System.AddIn.Hosting.AddInToken&gt;</ph> as if it were a collection of <ph id=\"ph2\">&lt;xref:System.AddIn.Hosting.QualificationDataItem&gt;</ph> structures, using a <ph id=\"ph3\">`foreach`</ph> statement (<ph id=\"ph4\">`For Each`</ph> in Visual Basic, <ph id=\"ph5\">`for each`</ph> in Visual C++).","pos":[0,281],"source":"Alternatively, you can obtain qualification data by enumerating an <xref:System.AddIn.Hosting.AddInToken> as if it were a collection of <xref:System.AddIn.Hosting.QualificationDataItem> structures, using a `foreach` statement (`For Each` in Visual Basic, `for each` in Visual C++)."},{"content":"See the example provided for the <ph id=\"ph1\">&lt;xref:System.AddIn.Hosting.QualificationDataItem&gt;</ph> structure.","pos":[282,375],"source":" See the example provided for the <xref:System.AddIn.Hosting.QualificationDataItem> structure."}]}],"pos":[68072,69544],"yaml":true,"extradata":"MT"},{"content":"A dictionary whose keys are pipeline segments and whose values are dictionaries of name/value pairs that represent qualification data for each segment.","nodes":[{"pos":[0,151],"content":"A dictionary whose keys are pipeline segments and whose values are dictionaries of name/value pairs that represent qualification data for each segment.","nodes":[{"content":"A dictionary whose keys are pipeline segments and whose values are dictionaries of name/value pairs that represent qualification data for each segment.","pos":[0,151]}]}],"pos":[70229,70381],"yaml":true},{"content":"Returns a string that represents the token.","nodes":[{"pos":[0,43],"content":"Returns a string that represents the token.","nodes":[{"content":"Returns a string that represents the token.","pos":[0,43]}]}],"pos":[71356,71400],"yaml":true},{"content":"A string that represents the token.","nodes":[{"pos":[0,35],"content":"A string that represents the token.","nodes":[{"content":"A string that represents the token.","pos":[0,35]}]}],"pos":[71535,71571],"yaml":true},{"content":"Gets the version of the add-in, as specified in the <xref href=\"System.AddIn.AddInAttribute\"></xref> attribute.","nodes":[{"pos":[0,111],"content":"Gets the version of the add-in, as specified in the <ph id=\"ph1\">&lt;xref href=\"System.AddIn.AddInAttribute\"&gt;&lt;/xref&gt;</ph> attribute.","source":"Gets the version of the add-in, as specified in the <xref href=\"System.AddIn.AddInAttribute\"></xref> attribute."}],"pos":[72527,72639],"yaml":true},{"content":"The version number is a free-form string.","nodes":[{"pos":[0,41],"content":"The version number is a free-form string.","nodes":[{"content":"The version number is a free-form string.","pos":[0,41]}]}],"pos":[72650,72692],"yaml":true,"extradata":"MT"},{"content":"The version of the add-in, or `null` if the version number is not specified in the <xref href=\"System.AddIn.AddInAttribute\"></xref> attribute.","nodes":[{"pos":[0,142],"content":"The version of the add-in, or <ph id=\"ph1\">`null`</ph> if the version number is not specified in the <ph id=\"ph2\">&lt;xref href=\"System.AddIn.AddInAttribute\"&gt;&lt;/xref&gt;</ph> attribute.","source":"The version of the add-in, or `null` if the version number is not specified in the <xref href=\"System.AddIn.AddInAttribute\"></xref> attribute."}],"pos":[73538,73681],"yaml":true},{"content":"Returns an enumerator for the qualification data of the pipeline segments that are associated with this token.","nodes":[{"pos":[0,110],"content":"Returns an enumerator for the qualification data of the pipeline segments that are associated with this token.","nodes":[{"content":"Returns an enumerator for the qualification data of the pipeline segments that are associated with this token.","pos":[0,110]}]}],"pos":[74819,74930],"yaml":true},{"content":"This method allows a token to be treated like a collection of qualification data items, for example in a `foreach` statement (`For Each` in Visual Basic, `for each` in Visual C++).  \n  \n Use the enumerator returned by this method to iterate through the qualification data items of the pipeline segments associated with the current token. Each item of qualification data is a <xref:System.AddIn.Hosting.QualificationDataItem> structure that identifies the pipeline segment and contains the name/value pair from a <xref:System.AddIn.Pipeline.QualificationDataAttribute> attribute applied to that segment.  \n  \n> [!NOTE]\n>  The add-in model does not use qualification data that is applied to the host view of the add-in. As a result, when you enumerate qualification data you will not find any items whose <xref:System.AddIn.Hosting.QualificationDataItem.Segment%2A> property is <xref:System.AddIn.Hosting.AddInSegmentType?displayProperty=fullName>.  \n  \n Alternatively, you can use the <xref:System.AddIn.Hosting.AddInToken.QualificationData%2A> property to get a nested set of dictionaries containing the qualification data of the pipeline segments.","nodes":[{"pos":[0,180],"content":"This method allows a token to be treated like a collection of qualification data items, for example in a <ph id=\"ph1\">`foreach`</ph> statement (<ph id=\"ph2\">`For Each`</ph> in Visual Basic, <ph id=\"ph3\">`for each`</ph> in Visual C++).","source":"This method allows a token to be treated like a collection of qualification data items, for example in a `foreach` statement (`For Each` in Visual Basic, `for each` in Visual C++)."},{"pos":[187,602],"content":"Use the enumerator returned by this method to iterate through the qualification data items of the pipeline segments associated with the current token. Each item of qualification data is a <xref:System.AddIn.Hosting.QualificationDataItem> structure that identifies the pipeline segment and contains the name/value pair from a <xref:System.AddIn.Pipeline.QualificationDataAttribute> attribute applied to that segment.","nodes":[{"content":"Use the enumerator returned by this method to iterate through the qualification data items of the pipeline segments associated with the current token. Each item of qualification data is a <xref:System.AddIn.Hosting.QualificationDataItem> structure that identifies the pipeline segment and contains the name/value pair from a <xref:System.AddIn.Pipeline.QualificationDataAttribute> attribute applied to that segment.","pos":[0,415],"nodes":[{"content":"Use the enumerator returned by this method to iterate through the qualification data items of the pipeline segments associated with the current token.","pos":[0,150]},{"content":"Each item of qualification data is a <ph id=\"ph1\">&lt;xref:System.AddIn.Hosting.QualificationDataItem&gt;</ph> structure that identifies the pipeline segment and contains the name/value pair from a <ph id=\"ph2\">&lt;xref:System.AddIn.Pipeline.QualificationDataAttribute&gt;</ph> attribute applied to that segment.","pos":[151,415],"source":" Each item of qualification data is a <xref:System.AddIn.Hosting.QualificationDataItem> structure that identifies the pipeline segment and contains the name/value pair from a <xref:System.AddIn.Pipeline.QualificationDataAttribute> attribute applied to that segment."}]}]},{"pos":[610,946],"content":"[!NOTE]\n The add-in model does not use qualification data that is applied to the host view of the add-in. As a result, when you enumerate qualification data you will not find any items whose <xref:System.AddIn.Hosting.QualificationDataItem.Segment%2A> property is <xref:System.AddIn.Hosting.AddInSegmentType?displayProperty=fullName>.","leadings":["","> "],"nodes":[{"content":" The add-in model does not use qualification data that is applied to the host view of the add-in. As a result, when you enumerate qualification data you will not find any items whose <xref:System.AddIn.Hosting.QualificationDataItem.Segment%2A> property is <xref:System.AddIn.Hosting.AddInSegmentType?displayProperty=fullName>.","pos":[8,334],"nodes":[{"content":"The add-in model does not use qualification data that is applied to the host view of the add-in.","pos":[1,97]},{"content":"As a result, when you enumerate qualification data you will not find any items whose <ph id=\"ph1\">&lt;xref:System.AddIn.Hosting.QualificationDataItem.Segment%2A&gt;</ph> property is <ph id=\"ph2\">&lt;xref:System.AddIn.Hosting.AddInSegmentType?displayProperty=fullName&gt;</ph>.","pos":[98,326],"source":" As a result, when you enumerate qualification data you will not find any items whose <xref:System.AddIn.Hosting.QualificationDataItem.Segment%2A> property is <xref:System.AddIn.Hosting.AddInSegmentType?displayProperty=fullName>."}]}]},{"pos":[953,1148],"content":"Alternatively, you can use the <xref:System.AddIn.Hosting.AddInToken.QualificationData%2A> property to get a nested set of dictionaries containing the qualification data of the pipeline segments.","nodes":[{"content":"Alternatively, you can use the <ph id=\"ph1\">&lt;xref:System.AddIn.Hosting.AddInToken.QualificationData%2A&gt;</ph> property to get a nested set of dictionaries containing the qualification data of the pipeline segments.","pos":[0,195],"source":"Alternatively, you can use the <xref:System.AddIn.Hosting.AddInToken.QualificationData%2A> property to get a nested set of dictionaries containing the qualification data of the pipeline segments."}]}],"pos":[74941,76099],"yaml":true,"extradata":"MT"},{"content":"An enumerator that can be used to iterate through the qualification data of the pipeline segments that are associated with the current token.","nodes":[{"pos":[0,141],"content":"An enumerator that can be used to iterate through the qualification data of the pipeline segments that are associated with the current token.","nodes":[{"content":"An enumerator that can be used to iterate through the qualification data of the pipeline segments that are associated with the current token.","pos":[0,141]}]}],"pos":[76276,76418],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.AddIn.Hosting.AddInToken\n  commentId: T:System.AddIn.Hosting.AddInToken\n  id: AddInToken\n  children:\n  - System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInEnvironment)\n  - System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInSecurityLevel)\n  - System.AddIn.Hosting.AddInToken.Activate``1(System.AppDomain)\n  - System.AddIn.Hosting.AddInToken.Activate``1(System.Security.PermissionSet)\n  - System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInProcess,System.AddIn.Hosting.AddInSecurityLevel)\n  - System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInProcess,System.Security.PermissionSet)\n  - System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInSecurityLevel,System.String)\n  - System.AddIn.Hosting.AddInToken.AddInFullName\n  - System.AddIn.Hosting.AddInToken.AssemblyName\n  - System.AddIn.Hosting.AddInToken.Description\n  - System.AddIn.Hosting.AddInToken.EnableDirectConnect\n  - System.AddIn.Hosting.AddInToken.Equals(System.Object)\n  - System.AddIn.Hosting.AddInToken.GetEnumerator\n  - System.AddIn.Hosting.AddInToken.GetHashCode\n  - System.AddIn.Hosting.AddInToken.Name\n  - System.AddIn.Hosting.AddInToken.Publisher\n  - System.AddIn.Hosting.AddInToken.QualificationData\n  - System.AddIn.Hosting.AddInToken.ToString\n  - System.AddIn.Hosting.AddInToken.Version\n  - System.AddIn.Hosting.AddInToken.System#Collections#IEnumerable#GetEnumerator\n  langs:\n  - csharp\n  name: AddInToken\n  nameWithType: AddInToken\n  fullName: System.AddIn.Hosting.AddInToken\n  type: Class\n  assemblies:\n  - System.AddIn\n  namespace: System.AddIn.Hosting\n  summary: Represents an add-in that can be activated.\n  remarks: \"An <xref:System.AddIn.Hosting.AddInToken> object represents an add-in, and its associated pipeline segments, that can be activated. The token contains the name, assembly name, description, publisher, and version of the add-in that it represents.  \\n  \\n Use the <xref:System.AddIn.Hosting.AddInStore.FindAddIns%2A?displayProperty=fullName> method to get a collection of tokens that represent add-ins whose pipelines match a specified host view. Use the <xref:System.AddIn.Hosting.AddInStore.FindAddIn%2A?displayProperty=fullName> method to get a collection of tokens that represent all the pipelines for a specified add-in that match a specified host view.  \\n  \\n To activate an add-in, pass the token that represents the desired add-in to the <xref:System.AddIn.Hosting.AddInToken.Activate%2A> method. This method returns an instance of the type that represents the host view of the add-in.  \\n  \\n The <xref:System.AddIn.Hosting.AddInToken.Activate%2A> method has several overloads. When you use an overload that does not require the name of an application domain as one of its parameters, a new application domain for the add-in is automatically created.  \\n  \\n You can use Language-Integrated Query (LINQ) extension methods to perform queries on an <xref:System.AddIn.Hosting.AddInToken>, treating the token as a collection of <xref:System.AddIn.Hosting.QualificationDataItem> structures.\"\n  example:\n  - \"This section contains two examples. The first example activates an add-in that has been selected by using the `ChooseAddIn` method, and the second example shows the `ChooseAddIn` method.  \\n  \\n **Example 1**  \\n  \\n The following example shows how to activate an add-in with a token.  \\n  \\n [!code-csharp[AddInP3Host#5](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#5)]\\n [!code-vb[AddInP3Host#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#5)]  \\n  \\n **Example 2**  \\n  \\n The following example shows the custom `ChooseAddIn` method, which enumerates an <xref:System.AddIn.Hosting.AddInToken> collection. The user selects a token from this collection to activate the corresponding add-in.  \\n  \\n [!code-csharp[AddInP3Host#13](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#13)]\\n [!code-vb[AddInP3Host#13](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#13)]\"\n  syntax:\n    content: 'public sealed class AddInToken : System.Collections.Generic.IEnumerable<System.AddIn.Hosting.QualificationDataItem>'\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.Generic.IEnumerable{System.AddIn.Hosting.QualificationDataItem}\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  extensionMethods:\n  - System.Collections.Immutable.ImmutableArray.ToImmutableArray``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})\n  - System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})\n  - System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})\n  - System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)\n  - System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)\n  - System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n  - System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n  - System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n  - System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n  - System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Decimal})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Double})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int32})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int64})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Single})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  - System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  - System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n  - System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n  - System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n  - System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n  - System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n  - System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n  - System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n  - System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Decimal})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Double})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int32})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int64})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Single})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  - System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Decimal})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Double})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int32})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int64})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Single})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  - System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  - System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  - System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  - System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n  - System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n  - System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n  - System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n  - System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  - System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  - System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.SkipLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Decimal})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Double})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int32})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int64})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Single})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  - System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.TakeLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  - System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  - System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n  - System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  - System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  - System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  - System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  - System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.DescendantNodesAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  - System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  - System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Nodes``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute})\n  - System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable{``0})\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInToken.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInEnvironment)\n  commentId: M:System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInEnvironment)\n  id: Activate``1(System.AddIn.Hosting.AddInEnvironment)\n  parent: System.AddIn.Hosting.AddInToken\n  langs:\n  - csharp\n  name: Activate<T>(AddInEnvironment)\n  nameWithType: AddInToken.Activate<T>(AddInEnvironment)\n  fullName: AddInToken.Activate<T>(AddInEnvironment)\n  type: Method\n  assemblies:\n  - System.AddIn\n  namespace: System.AddIn.Hosting\n  summary: Activates an add-in in the environment of another add-in.\n  remarks: This method overload activates the add-in in the same application domain and process as the add-in from which `environment` was obtained.\n  example:\n  - \"The following example activates one add-in in an automatically generated application domain with a specified security level. It then activates a second add-in in the same application domain and process as the first by using the first add-in's <xref:System.AddIn.Hosting.AddInEnvironment> object.  \\n  \\n [!code-csharp[AddInP3Host#8](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#8)]\\n [!code-vb[AddInP3Host#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#8)]\"\n  syntax:\n    content: public T Activate<T> (System.AddIn.Hosting.AddInEnvironment environment);\n    parameters:\n    - id: environment\n      type: System.AddIn.Hosting.AddInEnvironment\n      description: The application domain and process that contains the original add-in.\n    typeParameters:\n    - id: T\n      description: The interface or abstract base type that represents the host view of the add-in.\n    return:\n      type: T\n      description: The host view of the add-in.\n  overload: System.AddIn.Hosting.AddInToken.Activate``1*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInToken.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInSecurityLevel)\n  commentId: M:System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInSecurityLevel)\n  id: Activate``1(System.AddIn.Hosting.AddInSecurityLevel)\n  parent: System.AddIn.Hosting.AddInToken\n  langs:\n  - csharp\n  name: Activate<T>(AddInSecurityLevel)\n  nameWithType: AddInToken.Activate<T>(AddInSecurityLevel)\n  fullName: AddInToken.Activate<T>(AddInSecurityLevel)\n  type: Method\n  assemblies:\n  - System.AddIn\n  namespace: System.AddIn.Hosting\n  summary: Activates an add-in with a specified trust level in a new application domain.\n  remarks: \"This method overload loads the add-in into an automatically generated application domain. If you want to specify a name for the new application domain, use the <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%2CSystem.String%29> overload.  \\n  \\n This method sets the base directory for the application domain to be the location of the add-in assembly. It also looks for the configuration file [addinassemblyname].dll.config and, if found, sets it to be the configuration file for the new application domain.\"\n  example:\n  - \"The following example shows how to activate an add-in, identified by the chosen token, in an automatically generated application domain with a specified security level.  \\n  \\n [!code-csharp[AddInP3Host#5](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#5)]\\n [!code-vb[AddInP3Host#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#5)]\"\n  syntax:\n    content: public T Activate<T> (System.AddIn.Hosting.AddInSecurityLevel trustLevel);\n    parameters:\n    - id: trustLevel\n      type: System.AddIn.Hosting.AddInSecurityLevel\n      description: One of the enumeration values that specifies the trust level.\n    typeParameters:\n    - id: T\n      description: The interface or abstract base type that represents the host view of the add-in.\n    return:\n      type: T\n      description: The host view of the add-in.\n  overload: System.AddIn.Hosting.AddInToken.Activate``1*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInToken.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Hosting.AddInToken.Activate``1(System.AppDomain)\n  commentId: M:System.AddIn.Hosting.AddInToken.Activate``1(System.AppDomain)\n  id: Activate``1(System.AppDomain)\n  parent: System.AddIn.Hosting.AddInToken\n  langs:\n  - csharp\n  name: Activate<T>(AppDomain)\n  nameWithType: AddInToken.Activate<T>(AppDomain)\n  fullName: AddInToken.Activate<T>(AppDomain)\n  type: Method\n  assemblies:\n  - System.AddIn\n  namespace: System.AddIn.Hosting\n  summary: Activates an add-in in an existing application domain.\n  remarks: To activate an add-in in an automatically generated application domain, use the <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%29> overload to generate a new application domain with a specified security level or the <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%2CSystem.String%29> overload to include a friendly name for the application domain.\n  example:\n  - \"The following example activates an add-in in an application domain that is being used by another add-in. The code for the first add-in is provided in the <xref:System.AddIn.Hosting.AddInToken> class.  \\n  \\n [!code-csharp[AddInP3Host#9](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#9)]\\n [!code-vb[AddInP3Host#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#9)]\"\n  syntax:\n    content: public T Activate<T> (AppDomain target);\n    parameters:\n    - id: target\n      type: System.AppDomain\n      description: The application domain that the add-in should be activated in.\n    typeParameters:\n    - id: T\n      description: The interface or abstract base type that represents the host view of the add-in.\n    return:\n      type: T\n      description: The host view of the add-in.\n  overload: System.AddIn.Hosting.AddInToken.Activate``1*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: Full-trust permission is demanded. A caller in the call chain does not have sufficient permission.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInToken.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Hosting.AddInToken.Activate``1(System.Security.PermissionSet)\n  commentId: M:System.AddIn.Hosting.AddInToken.Activate``1(System.Security.PermissionSet)\n  id: Activate``1(System.Security.PermissionSet)\n  parent: System.AddIn.Hosting.AddInToken\n  langs:\n  - csharp\n  name: Activate<T>(PermissionSet)\n  nameWithType: AddInToken.Activate<T>(PermissionSet)\n  fullName: AddInToken.Activate<T>(PermissionSet)\n  type: Method\n  assemblies:\n  - System.AddIn\n  namespace: System.AddIn.Hosting\n  summary: Activates an add-in with a specified permission set in a new application domain.\n  remarks: This method overload loads the add-in into an automatically generated application domain. It sets the base directory for the application domain to be the location of the add-in assembly. It also looks for the configuration file `[addinassemblyname].dll.config` and, if found, sets it to be the configuration file for the new application domain.\n  syntax:\n    content: public T Activate<T> (System.Security.PermissionSet permissions);\n    parameters:\n    - id: permissions\n      type: System.Security.PermissionSet\n      description: The permissions granted for the add-in.\n    typeParameters:\n    - id: T\n      description: The interface or abstract base type that represents the host view of the add-in.\n    return:\n      type: T\n      description: The host view of the add-in.\n  overload: System.AddIn.Hosting.AddInToken.Activate``1*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>permissions</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInToken.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInProcess,System.AddIn.Hosting.AddInSecurityLevel)\n  commentId: M:System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInProcess,System.AddIn.Hosting.AddInSecurityLevel)\n  id: Activate``1(System.AddIn.Hosting.AddInProcess,System.AddIn.Hosting.AddInSecurityLevel)\n  parent: System.AddIn.Hosting.AddInToken\n  langs:\n  - csharp\n  name: Activate<T>(AddInProcess, AddInSecurityLevel)\n  nameWithType: AddInToken.Activate<T>(AddInProcess, AddInSecurityLevel)\n  fullName: AddInToken.Activate<T>(AddInProcess, AddInSecurityLevel)\n  type: Method\n  assemblies:\n  - System.AddIn\n  namespace: System.AddIn.Hosting\n  summary: Activates an add-in in an external process, in a new application domain, and with a specified trust level.\n  remarks: This method sets the base directory for the application domain to be the location of the add-in assembly. It also looks for the configuration file `[addinassemblyname].dll.config` and, if found, sets it to be the configuration file for the new application domain.\n  example:\n  - \"The following example creates a new process and activates an add-in in that process with a full trust security level.  \\n  \\n [!code-csharp[AddInP3Host#10](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#10)]\\n [!code-vb[AddInP3Host#10](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#10)]\"\n  syntax:\n    content: public T Activate<T> (System.AddIn.Hosting.AddInProcess process, System.AddIn.Hosting.AddInSecurityLevel level);\n    parameters:\n    - id: process\n      type: System.AddIn.Hosting.AddInProcess\n      description: The external process in which to activate the add-in.\n    - id: level\n      type: System.AddIn.Hosting.AddInSecurityLevel\n      description: One of the enumeration values that specifies the trust level.\n    typeParameters:\n    - id: T\n      description: The interface or abstract base type that represents the host view of the add-in.\n    return:\n      type: T\n      description: The host view of the add-in.\n  overload: System.AddIn.Hosting.AddInToken.Activate``1*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInToken.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInProcess,System.Security.PermissionSet)\n  commentId: M:System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInProcess,System.Security.PermissionSet)\n  id: Activate``1(System.AddIn.Hosting.AddInProcess,System.Security.PermissionSet)\n  parent: System.AddIn.Hosting.AddInToken\n  langs:\n  - csharp\n  name: Activate<T>(AddInProcess, PermissionSet)\n  nameWithType: AddInToken.Activate<T>(AddInProcess, PermissionSet)\n  fullName: AddInToken.Activate<T>(AddInProcess, PermissionSet)\n  type: Method\n  assemblies:\n  - System.AddIn\n  namespace: System.AddIn.Hosting\n  summary: Activates an add-in in an external process, in a new application domain, and with a specified permission set.\n  remarks: This method sets the base directory for the application domain to be the location of the add-in assembly. It also looks for the configuration file `[addinassemblyname].dll.config` and, if found, sets it to be the configuration file for the new application domain.\n  syntax:\n    content: public T Activate<T> (System.AddIn.Hosting.AddInProcess process, System.Security.PermissionSet permissionSet);\n    parameters:\n    - id: process\n      type: System.AddIn.Hosting.AddInProcess\n      description: The external process in which to activate the add-in.\n    - id: permissionSet\n      type: System.Security.PermissionSet\n      description: The required permission set granted for the add-in.\n    typeParameters:\n    - id: T\n      description: The interface or abstract base type that represents the host view of the add-in.\n    return:\n      type: T\n      description: The host view of the add-in.\n  overload: System.AddIn.Hosting.AddInToken.Activate``1*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInToken.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInSecurityLevel,System.String)\n  commentId: M:System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInSecurityLevel,System.String)\n  id: Activate``1(System.AddIn.Hosting.AddInSecurityLevel,System.String)\n  parent: System.AddIn.Hosting.AddInToken\n  langs:\n  - csharp\n  name: Activate<T>(AddInSecurityLevel, String)\n  nameWithType: AddInToken.Activate<T>(AddInSecurityLevel, String)\n  fullName: AddInToken.Activate<T>(AddInSecurityLevel, String)\n  type: Method\n  assemblies:\n  - System.AddIn\n  namespace: System.AddIn.Hosting\n  summary: Activates an add-in in a new application domain with a specified name and trust level.\n  remarks: \"If you do not need to specify an application domain name, use the <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%29> overload.  \\n  \\n This method sets the base directory for the application domain to be the location of the add-in assembly. It also looks for the configuration file `[addinassemblyname].dll.config` and, if found, sets it to be the configuration file for the new application domain.\"\n  syntax:\n    content: public T Activate<T> (System.AddIn.Hosting.AddInSecurityLevel trustLevel, string appDomainName);\n    parameters:\n    - id: trustLevel\n      type: System.AddIn.Hosting.AddInSecurityLevel\n      description: One of the enumeration values that specifies the trust level.\n    - id: appDomainName\n      type: System.String\n      description: The friendly name to assign to the new application domain.\n    typeParameters:\n    - id: T\n      description: The interface or abstract base type that represents the host view of the add-in.\n    return:\n      type: T\n      description: The host view of the add-in.\n  overload: System.AddIn.Hosting.AddInToken.Activate``1*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInToken.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Hosting.AddInToken.AddInFullName\n  commentId: P:System.AddIn.Hosting.AddInToken.AddInFullName\n  id: AddInFullName\n  parent: System.AddIn.Hosting.AddInToken\n  langs:\n  - csharp\n  name: AddInFullName\n  nameWithType: AddInToken.AddInFullName\n  fullName: AddInToken.AddInFullName\n  type: Property\n  assemblies:\n  - System.AddIn\n  namespace: System.AddIn.Hosting\n  summary: Gets the namespace and type of the add-in.\n  remarks: This property obtains the full name of the add-in as it would be returned by the <xref:System.Type.FullName%2A?displayProperty=fullName> property. This value is always available on an instance of an <xref:System.AddIn.Hosting.AddInToken> object.\n  example:\n  - \"The following example displays the value of the <xref:System.AddIn.Hosting.AddInToken.Name%2A>, <xref:System.AddIn.Hosting.AddInToken.AddInFullName%2A>, <xref:System.AddIn.Hosting.AddInToken.Description%2A>, <xref:System.AddIn.Hosting.AddInToken.AssemblyName%2A>, <xref:System.AddIn.Hosting.AddInToken.Publisher%2A>, and <xref:System.AddIn.Hosting.AddInToken.Version%2A> properties to the console. This code example is part of a larger example provided for the <xref:System.AddIn.Hosting.AddInToken>class.  \\n  \\n [!code-csharp[AddInP3Host#7](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#7)]\\n [!code-vb[AddInP3Host#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#7)]\"\n  syntax:\n    content: public string AddInFullName { get; }\n    return:\n      type: System.String\n      description: The type of the add-in, fully qualified by its namespace.\n  overload: System.AddIn.Hosting.AddInToken.AddInFullName*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInToken.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Hosting.AddInToken.AssemblyName\n  commentId: P:System.AddIn.Hosting.AddInToken.AssemblyName\n  id: AssemblyName\n  parent: System.AddIn.Hosting.AddInToken\n  langs:\n  - csharp\n  name: AssemblyName\n  nameWithType: AddInToken.AssemblyName\n  fullName: AddInToken.AssemblyName\n  type: Property\n  assemblies:\n  - System.AddIn\n  namespace: System.AddIn.Hosting\n  summary: Gets the name of the assembly that contains the add-in.\n  remarks: This property obtains the display name of the assembly that contains the add-in, as it would be returned by the <xref:System.Reflection.Assembly.FullName%2A?displayProperty=fullName> property. This value is always available on an instance of an <xref:System.AddIn.Hosting.AddInToken> object.\n  example:\n  - \"The following example displays the value of the <xref:System.AddIn.Hosting.AddInToken.Name%2A>, <xref:System.AddIn.Hosting.AddInToken.AddInFullName%2A>, <xref:System.AddIn.Hosting.AddInToken.Description%2A>, <xref:System.AddIn.Hosting.AddInToken.AssemblyName%2A>, <xref:System.AddIn.Hosting.AddInToken.Publisher%2A>, and <xref:System.AddIn.Hosting.AddInToken.Version%2A> properties to the console. This code example is part of a larger example provided for the <xref:System.AddIn.Hosting.AddInToken> class.  \\n  \\n [!code-csharp[AddInP3Host#7](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#7)]\\n [!code-vb[AddInP3Host#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#7)]\"\n  syntax:\n    content: public System.Reflection.AssemblyName AssemblyName { get; }\n    return:\n      type: System.Reflection.AssemblyName\n      description: The name of the assembly.\n  overload: System.AddIn.Hosting.AddInToken.AssemblyName*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInToken.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Hosting.AddInToken.Description\n  commentId: P:System.AddIn.Hosting.AddInToken.Description\n  id: Description\n  parent: System.AddIn.Hosting.AddInToken\n  langs:\n  - csharp\n  name: Description\n  nameWithType: AddInToken.Description\n  fullName: AddInToken.Description\n  type: Property\n  assemblies:\n  - System.AddIn\n  namespace: System.AddIn.Hosting\n  summary: Gets the description of the add-in.\n  remarks: This property obtains the description of the add-in as specified in the <xref:System.AddIn.AddInAttribute> attribute.\n  example:\n  - \"The following example displays the value of the <xref:System.AddIn.Hosting.AddInToken.Name%2A>, <xref:System.AddIn.Hosting.AddInToken.AddInFullName%2A>, <xref:System.AddIn.Hosting.AddInToken.Description%2A>, <xref:System.AddIn.Hosting.AddInToken.AssemblyName%2A>, <xref:System.AddIn.Hosting.AddInToken.Publisher%2A>, and <xref:System.AddIn.Hosting.AddInToken.Version%2A> properties to the console. This code example is part of a larger example provided for the <xref:System.AddIn.Hosting.AddInToken> class.  \\n  \\n [!code-csharp[AddInP3Host#7](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#7)]\\n [!code-vb[AddInP3Host#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#7)]\"\n  syntax:\n    content: public string Description { get; }\n    return:\n      type: System.String\n      description: A description of the add-in, or `null` if the description is not specified in the <xref href=\"System.AddIn.AddInAttribute\"></xref> attribute.\n  overload: System.AddIn.Hosting.AddInToken.Description*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInToken.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Hosting.AddInToken.EnableDirectConnect\n  commentId: P:System.AddIn.Hosting.AddInToken.EnableDirectConnect\n  id: EnableDirectConnect\n  parent: System.AddIn.Hosting.AddInToken\n  langs:\n  - csharp\n  name: EnableDirectConnect\n  nameWithType: AddInToken.EnableDirectConnect\n  fullName: AddInToken.EnableDirectConnect\n  type: Property\n  assemblies:\n  - System.AddIn\n  namespace: System.AddIn.Hosting\n  summary: Gets and sets a value that indicates whether add-ins should be directly connected to their hosts when conditions permit.\n  remarks: \"The following conditions must exist for the direct connection to occur:  \\n  \\n-   This property must be set to `true`.  \\n  \\n-   The add-in must be in the same application domain as the host.  \\n  \\n-   The add-in view and the host view of the add-in must be the same type.  \\n  \\n-   All the segments of the pipeline must be available.  \\n  \\n When a direct connection is established, the add-in-side adapter and the host-side adapter are not instantiated.\"\n  syntax:\n    content: public static bool EnableDirectConnect { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the add-in should be directly connected to the host; otherwise, `false`. The default is `false`.'\n  overload: System.AddIn.Hosting.AddInToken.EnableDirectConnect*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInToken.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Hosting.AddInToken.Equals(System.Object)\n  commentId: M:System.AddIn.Hosting.AddInToken.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.AddIn.Hosting.AddInToken\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: AddInToken.Equals(Object)\n  fullName: AddInToken.Equals(Object)\n  type: Method\n  assemblies:\n  - System.AddIn\n  namespace: System.AddIn.Hosting\n  summary: Determines whether a specified object is equal to the current instance.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object to compare with the current instance.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified object and the current instance are equal; otherwise, `false`.'\n  overload: System.AddIn.Hosting.AddInToken.Equals*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInToken.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Hosting.AddInToken.GetEnumerator\n  commentId: M:System.AddIn.Hosting.AddInToken.GetEnumerator\n  id: GetEnumerator\n  parent: System.AddIn.Hosting.AddInToken\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: AddInToken.GetEnumerator()\n  fullName: AddInToken.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.AddIn\n  namespace: System.AddIn.Hosting\n  summary: Returns an enumerator for the qualification data of the pipeline segments that are associated with this token.\n  remarks: \"Use this method to treat a token as if it were a collection of qualification data items, for example, in a `foreach` statement (`For Each` in Visual Basic, `for each` in Visual C++).  \\n  \\n Use the enumerator returned by this method to iterate through the qualification data items of the pipeline segments associated with the current token. Each item of qualification data is a <xref:System.AddIn.Hosting.QualificationDataItem> structure that identifies the pipeline segment and contains a name/value pair from a <xref:System.AddIn.Pipeline.QualificationDataAttribute> attribute applied to that segment.  \\n  \\n> [!NOTE]\\n>  The add-in model does not use qualification data that is applied to the host view of the add-in. As a result, when you enumerate qualification data you will not find any items whose <xref:System.AddIn.Hosting.QualificationDataItem.Segment%2A> property is <xref:System.AddIn.Hosting.AddInSegmentType?displayProperty=fullName>.  \\n  \\n Alternatively, you can use the <xref:System.AddIn.Hosting.AddInToken.QualificationData%2A> property to get a nested set of dictionaries that contain the qualification data of the pipeline segments.\"\n  example:\n  - \"The following example lists the qualification data for the pipeline segments associated with each <xref:System.AddIn.Hosting.AddInToken> in a collection of tokens.  \\n  \\n [!code-csharp[AddInP3Host#12](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#12)]\\n [!code-vb[AddInP3Host#12](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#12)]\"\n  syntax:\n    content: public System.Collections.Generic.IEnumerator<System.AddIn.Hosting.QualificationDataItem> GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerator{System.AddIn.Hosting.QualificationDataItem}\n      description: An enumerator that can be used to iterate through the qualification data of the pipeline segments that are associated with the current token.\n  overload: System.AddIn.Hosting.AddInToken.GetEnumerator*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInToken.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Hosting.AddInToken.GetHashCode\n  commentId: M:System.AddIn.Hosting.AddInToken.GetHashCode\n  id: GetHashCode\n  parent: System.AddIn.Hosting.AddInToken\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: AddInToken.GetHashCode()\n  fullName: AddInToken.GetHashCode()\n  type: Method\n  assemblies:\n  - System.AddIn\n  namespace: System.AddIn.Hosting\n  summary: Serves as a hash function for a token.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A hash code for the current token.\n  overload: System.AddIn.Hosting.AddInToken.GetHashCode*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInToken.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Hosting.AddInToken.Name\n  commentId: P:System.AddIn.Hosting.AddInToken.Name\n  id: Name\n  parent: System.AddIn.Hosting.AddInToken\n  langs:\n  - csharp\n  name: Name\n  nameWithType: AddInToken.Name\n  fullName: AddInToken.Name\n  type: Property\n  assemblies:\n  - System.AddIn\n  namespace: System.AddIn.Hosting\n  summary: Gets the name of the add-in.\n  remarks: This property obtains the name of the add-in as specified in the <xref:System.AddIn.AddInAttribute> attribute. This value is always available on an instance of an <xref:System.AddIn.Hosting.AddInToken> object.\n  example:\n  - \"The following example displays the value of the <xref:System.AddIn.Hosting.AddInToken.Name%2A>, <xref:System.AddIn.Hosting.AddInToken.AddInFullName%2A>, <xref:System.AddIn.Hosting.AddInToken.Description%2A>, <xref:System.AddIn.Hosting.AddInToken.AssemblyName%2A>, <xref:System.AddIn.Hosting.AddInToken.Publisher%2A>, and <xref:System.AddIn.Hosting.AddInToken.Version%2A> properties to the console. This code example is part of a larger example provided for the <xref:System.AddIn.Hosting.AddInToken> class.  \\n  \\n [!code-csharp[AddInP3Host#7](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#7)]\\n [!code-vb[AddInP3Host#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#7)]\"\n  syntax:\n    content: public string Name { get; }\n    return:\n      type: System.String\n      description: The name of the add-in.\n  overload: System.AddIn.Hosting.AddInToken.Name*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInToken.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Hosting.AddInToken.Publisher\n  commentId: P:System.AddIn.Hosting.AddInToken.Publisher\n  id: Publisher\n  parent: System.AddIn.Hosting.AddInToken\n  langs:\n  - csharp\n  name: Publisher\n  nameWithType: AddInToken.Publisher\n  fullName: AddInToken.Publisher\n  type: Property\n  assemblies:\n  - System.AddIn\n  namespace: System.AddIn.Hosting\n  summary: Gets the publisher of the add-in.\n  remarks: This property obtains the publisher of the add-in as specified in the <xref:System.AddIn.AddInAttribute> attribute.\n  example:\n  - \"The following example displays the value of the <xref:System.AddIn.Hosting.AddInToken.Name%2A>, <xref:System.AddIn.Hosting.AddInToken.AddInFullName%2A>, <xref:System.AddIn.Hosting.AddInToken.Description%2A>, <xref:System.AddIn.Hosting.AddInToken.AssemblyName%2A>, <xref:System.AddIn.Hosting.AddInToken.Publisher%2A>, and <xref:System.AddIn.Hosting.AddInToken.Version%2A> properties to the console. This code example is part of a larger example provided for the <xref:System.AddIn.Hosting.AddInToken> class.  \\n  \\n [!code-csharp[AddInP3Host#7](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#7)]\\n [!code-vb[AddInP3Host#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#7)]\"\n  syntax:\n    content: public string Publisher { get; }\n    return:\n      type: System.String\n      description: The publisher of the add-in, or `null` if the publisher is not specified in the <xref href=\"System.AddIn.AddInAttribute\"></xref> attribute.\n  overload: System.AddIn.Hosting.AddInToken.Publisher*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInToken.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Hosting.AddInToken.QualificationData\n  commentId: P:System.AddIn.Hosting.AddInToken.QualificationData\n  id: QualificationData\n  parent: System.AddIn.Hosting.AddInToken\n  langs:\n  - csharp\n  name: QualificationData\n  nameWithType: AddInToken.QualificationData\n  fullName: AddInToken.QualificationData\n  type: Property\n  assemblies:\n  - System.AddIn\n  namespace: System.AddIn.Hosting\n  summary: Gets a dictionary of data about the segments in the pipeline associated with the current token.\n  remarks: \"Use this property to obtain data that has been applied to pipeline segments with the <xref:System.AddIn.Pipeline.QualificationDataAttribute> attribute. You can use this data to identify and work with the types that compose your pipelines.  \\n  \\n This property returns a dictionary of dictionaries. The top dictionary always has six keys. Each key is an <xref:System.AddIn.Hosting.AddInSegmentType> value for a segment in the pipeline. Each value is a generic <xref:System.Collections.Generic.IDictionary%602>of strings with string keys that contains the segment's qualification data.  \\n  \\n The keys and values of these inner dictionaries are the names and values specified in the <xref:System.AddIn.Pipeline.QualificationDataAttribute> attributes for the segments. If no qualification data has been applied to a segment, its dictionary is empty.  \\n  \\n> [!NOTE]\\n>  The add-in model does not use qualification data that is applied to the host view of the add-in. As a result, the dictionary for <xref:System.AddIn.Hosting.AddInSegmentType?displayProperty=fullName> is always empty.  \\n  \\n Alternatively, you can obtain qualification data by enumerating an <xref:System.AddIn.Hosting.AddInToken> as if it were a collection of <xref:System.AddIn.Hosting.QualificationDataItem> structures, using a `foreach` statement (`For Each` in Visual Basic, `for each` in Visual C++). See the example provided for the <xref:System.AddIn.Hosting.QualificationDataItem> structure.\"\n  example:\n  - \"The following example shows how to examine an add-in's qualification data.  \\n  \\n [!code-csharp[AddInP3Host#11](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#11)]\\n [!code-vb[AddInP3Host#11](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#11)]\"\n  syntax:\n    content: public System.Collections.Generic.IDictionary<System.AddIn.Hosting.AddInSegmentType,System.Collections.Generic.IDictionary<string,string>> QualificationData { get; }\n    return:\n      type: System.Collections.Generic.IDictionary{System.AddIn.Hosting.AddInSegmentType,System.Collections.Generic.IDictionary{System.String,System.String}}\n      description: A dictionary whose keys are pipeline segments and whose values are dictionaries of name/value pairs that represent qualification data for each segment.\n  overload: System.AddIn.Hosting.AddInToken.QualificationData*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInToken.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Hosting.AddInToken.ToString\n  commentId: M:System.AddIn.Hosting.AddInToken.ToString\n  id: ToString\n  parent: System.AddIn.Hosting.AddInToken\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: AddInToken.ToString()\n  fullName: AddInToken.ToString()\n  type: Method\n  assemblies:\n  - System.AddIn\n  namespace: System.AddIn.Hosting\n  summary: Returns a string that represents the token.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string that represents the token.\n  overload: System.AddIn.Hosting.AddInToken.ToString*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInToken.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Hosting.AddInToken.Version\n  commentId: P:System.AddIn.Hosting.AddInToken.Version\n  id: Version\n  parent: System.AddIn.Hosting.AddInToken\n  langs:\n  - csharp\n  name: Version\n  nameWithType: AddInToken.Version\n  fullName: AddInToken.Version\n  type: Property\n  assemblies:\n  - System.AddIn\n  namespace: System.AddIn.Hosting\n  summary: Gets the version of the add-in, as specified in the <xref href=\"System.AddIn.AddInAttribute\"></xref> attribute.\n  remarks: The version number is a free-form string.\n  example:\n  - \"The following example displays the value of the <xref:System.AddIn.Hosting.AddInToken.Name%2A>, <xref:System.AddIn.Hosting.AddInToken.AddInFullName%2A>, <xref:System.AddIn.Hosting.AddInToken.Description%2A>, <xref:System.AddIn.Hosting.AddInToken.AssemblyName%2A>, <xref:System.AddIn.Hosting.AddInToken.Publisher%2A>, and <xref:System.AddIn.Hosting.AddInToken.Version%2A> properties to the console. This code example is part of a larger example provided for the <xref:System.AddIn.Hosting.AddInToken> class.  \\n  \\n [!code-csharp[AddInP3Host#7](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#7)]\\n [!code-vb[AddInP3Host#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#7)]\"\n  syntax:\n    content: public string Version { get; }\n    return:\n      type: System.String\n      description: The version of the add-in, or `null` if the version number is not specified in the <xref href=\"System.AddIn.AddInAttribute\"></xref> attribute.\n  overload: System.AddIn.Hosting.AddInToken.Version*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInToken.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Hosting.AddInToken.System#Collections#IEnumerable#GetEnumerator\n  commentId: M:System.AddIn.Hosting.AddInToken.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.AddIn.Hosting.AddInToken\n  langs:\n  - csharp\n  name: IEnumerable.GetEnumerator()\n  nameWithType: AddInToken.IEnumerable.GetEnumerator()\n  fullName: AddInToken.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.AddIn\n  namespace: System.AddIn.Hosting\n  summary: Returns an enumerator for the qualification data of the pipeline segments that are associated with this token.\n  remarks: \"This method allows a token to be treated like a collection of qualification data items, for example in a `foreach` statement (`For Each` in Visual Basic, `for each` in Visual C++).  \\n  \\n Use the enumerator returned by this method to iterate through the qualification data items of the pipeline segments associated with the current token. Each item of qualification data is a <xref:System.AddIn.Hosting.QualificationDataItem> structure that identifies the pipeline segment and contains the name/value pair from a <xref:System.AddIn.Pipeline.QualificationDataAttribute> attribute applied to that segment.  \\n  \\n> [!NOTE]\\n>  The add-in model does not use qualification data that is applied to the host view of the add-in. As a result, when you enumerate qualification data you will not find any items whose <xref:System.AddIn.Hosting.QualificationDataItem.Segment%2A> property is <xref:System.AddIn.Hosting.AddInSegmentType?displayProperty=fullName>.  \\n  \\n Alternatively, you can use the <xref:System.AddIn.Hosting.AddInToken.QualificationData%2A> property to get a nested set of dictionaries containing the qualification data of the pipeline segments.\"\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: An enumerator that can be used to iterate through the qualification data of the pipeline segments that are associated with the current token.\n  overload: System.AddIn.Hosting.AddInToken.System#Collections#IEnumerable#GetEnumerator*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInToken.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Security.SecurityException\n  parent: System.Security\n  isExternal: false\n  name: SecurityException\n  nameWithType: SecurityException\n  fullName: System.Security.SecurityException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInEnvironment)\n  parent: System.AddIn.Hosting.AddInToken\n  isExternal: false\n  name: Activate<T>(AddInEnvironment)\n  nameWithType: AddInToken.Activate<T>(AddInEnvironment)\n  fullName: AddInToken.Activate<T>(AddInEnvironment)\n- uid: T\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.AddIn.Hosting.AddInEnvironment\n  parent: System.AddIn.Hosting\n  isExternal: false\n  name: AddInEnvironment\n  nameWithType: AddInEnvironment\n  fullName: System.AddIn.Hosting.AddInEnvironment\n- uid: System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInSecurityLevel)\n  parent: System.AddIn.Hosting.AddInToken\n  isExternal: false\n  name: Activate<T>(AddInSecurityLevel)\n  nameWithType: AddInToken.Activate<T>(AddInSecurityLevel)\n  fullName: AddInToken.Activate<T>(AddInSecurityLevel)\n- uid: System.AddIn.Hosting.AddInSecurityLevel\n  parent: System.AddIn.Hosting\n  isExternal: false\n  name: AddInSecurityLevel\n  nameWithType: AddInSecurityLevel\n  fullName: System.AddIn.Hosting.AddInSecurityLevel\n- uid: System.AddIn.Hosting.AddInToken.Activate``1(System.AppDomain)\n  parent: System.AddIn.Hosting.AddInToken\n  isExternal: false\n  name: Activate<T>(AppDomain)\n  nameWithType: AddInToken.Activate<T>(AppDomain)\n  fullName: AddInToken.Activate<T>(AppDomain)\n- uid: System.AppDomain\n  parent: System\n  isExternal: false\n  name: AppDomain\n  nameWithType: AppDomain\n  fullName: System.AppDomain\n- uid: System.AddIn.Hosting.AddInToken.Activate``1(System.Security.PermissionSet)\n  parent: System.AddIn.Hosting.AddInToken\n  isExternal: false\n  name: Activate<T>(PermissionSet)\n  nameWithType: AddInToken.Activate<T>(PermissionSet)\n  fullName: AddInToken.Activate<T>(PermissionSet)\n- uid: System.Security.PermissionSet\n  parent: System.Security\n  isExternal: false\n  name: PermissionSet\n  nameWithType: PermissionSet\n  fullName: System.Security.PermissionSet\n- uid: System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInProcess,System.AddIn.Hosting.AddInSecurityLevel)\n  parent: System.AddIn.Hosting.AddInToken\n  isExternal: false\n  name: Activate<T>(AddInProcess, AddInSecurityLevel)\n  nameWithType: AddInToken.Activate<T>(AddInProcess, AddInSecurityLevel)\n  fullName: AddInToken.Activate<T>(AddInProcess, AddInSecurityLevel)\n- uid: System.AddIn.Hosting.AddInProcess\n  parent: System.AddIn.Hosting\n  isExternal: false\n  name: AddInProcess\n  nameWithType: AddInProcess\n  fullName: System.AddIn.Hosting.AddInProcess\n- uid: System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInProcess,System.Security.PermissionSet)\n  parent: System.AddIn.Hosting.AddInToken\n  isExternal: false\n  name: Activate<T>(AddInProcess, PermissionSet)\n  nameWithType: AddInToken.Activate<T>(AddInProcess, PermissionSet)\n  fullName: AddInToken.Activate<T>(AddInProcess, PermissionSet)\n- uid: System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInSecurityLevel,System.String)\n  parent: System.AddIn.Hosting.AddInToken\n  isExternal: false\n  name: Activate<T>(AddInSecurityLevel, String)\n  nameWithType: AddInToken.Activate<T>(AddInSecurityLevel, String)\n  fullName: AddInToken.Activate<T>(AddInSecurityLevel, String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.AddIn.Hosting.AddInToken.AddInFullName\n  parent: System.AddIn.Hosting.AddInToken\n  isExternal: false\n  name: AddInFullName\n  nameWithType: AddInToken.AddInFullName\n  fullName: AddInToken.AddInFullName\n- uid: System.AddIn.Hosting.AddInToken.AssemblyName\n  parent: System.AddIn.Hosting.AddInToken\n  isExternal: false\n  name: AssemblyName\n  nameWithType: AddInToken.AssemblyName\n  fullName: AddInToken.AssemblyName\n- uid: System.Reflection.AssemblyName\n  parent: System.Reflection\n  isExternal: false\n  name: AssemblyName\n  nameWithType: AssemblyName\n  fullName: System.Reflection.AssemblyName\n- uid: System.AddIn.Hosting.AddInToken.Description\n  parent: System.AddIn.Hosting.AddInToken\n  isExternal: false\n  name: Description\n  nameWithType: AddInToken.Description\n  fullName: AddInToken.Description\n- uid: System.AddIn.Hosting.AddInToken.EnableDirectConnect\n  parent: System.AddIn.Hosting.AddInToken\n  isExternal: false\n  name: EnableDirectConnect\n  nameWithType: AddInToken.EnableDirectConnect\n  fullName: AddInToken.EnableDirectConnect\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.AddIn.Hosting.AddInToken.Equals(System.Object)\n  parent: System.AddIn.Hosting.AddInToken\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: AddInToken.Equals(Object)\n  fullName: AddInToken.Equals(Object)\n- uid: System.AddIn.Hosting.AddInToken.GetEnumerator\n  parent: System.AddIn.Hosting.AddInToken\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: AddInToken.GetEnumerator()\n  fullName: AddInToken.GetEnumerator()\n- uid: System.Collections.Generic.IEnumerator`1\n  name: IEnumerator<T>\n  nameWithType: IEnumerator<T>\n  fullName: System.Collections.Generic.IEnumerator<T>\n- uid: System.AddIn.Hosting.QualificationDataItem\n  name: QualificationDataItem\n  nameWithType: QualificationDataItem\n  fullName: System.AddIn.Hosting.QualificationDataItem\n- uid: System.Collections.Generic.IEnumerator{System.AddIn.Hosting.QualificationDataItem}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerator<QualificationDataItem>\n  nameWithType: IEnumerator<QualificationDataItem>\n  fullName: System.Collections.Generic.IEnumerator<System.AddIn.Hosting.QualificationDataItem>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    nameWithType: IEnumerator\n    fullName: System.Collections.Generic.IEnumerator\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.AddIn.Hosting.QualificationDataItem\n    name: QualificationDataItem\n    nameWithType: QualificationDataItem\n    fullName: System.AddIn.Hosting.QualificationDataItem\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.AddIn.Hosting.AddInToken.GetHashCode\n  parent: System.AddIn.Hosting.AddInToken\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: AddInToken.GetHashCode()\n  fullName: AddInToken.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.AddIn.Hosting.AddInToken.Name\n  parent: System.AddIn.Hosting.AddInToken\n  isExternal: false\n  name: Name\n  nameWithType: AddInToken.Name\n  fullName: AddInToken.Name\n- uid: System.AddIn.Hosting.AddInToken.Publisher\n  parent: System.AddIn.Hosting.AddInToken\n  isExternal: false\n  name: Publisher\n  nameWithType: AddInToken.Publisher\n  fullName: AddInToken.Publisher\n- uid: System.AddIn.Hosting.AddInToken.QualificationData\n  parent: System.AddIn.Hosting.AddInToken\n  isExternal: false\n  name: QualificationData\n  nameWithType: AddInToken.QualificationData\n  fullName: AddInToken.QualificationData\n- uid: System.Collections.Generic.IDictionary`2\n  name: IDictionary<TKey,TValue>\n  nameWithType: IDictionary<TKey,TValue>\n  fullName: System.Collections.Generic.IDictionary<TKey,TValue>\n- uid: System.AddIn.Hosting.AddInSegmentType\n  name: AddInSegmentType\n  nameWithType: AddInSegmentType\n  fullName: System.AddIn.Hosting.AddInSegmentType\n- uid: System.Collections.Generic.IDictionary{System.AddIn.Hosting.AddInSegmentType,System.Collections.Generic.IDictionary{System.String,System.String}}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IDictionary<AddInSegmentType,IDictionary<String,String>>\n  nameWithType: IDictionary<AddInSegmentType,IDictionary<String,String>>\n  fullName: System.Collections.Generic.IDictionary<System.AddIn.Hosting.AddInSegmentType,System.Collections.Generic.IDictionary<System.String,System.String>>\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    nameWithType: IDictionary\n    fullName: System.Collections.Generic.IDictionary\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.AddIn.Hosting.AddInSegmentType\n    name: AddInSegmentType\n    nameWithType: AddInSegmentType\n    fullName: System.AddIn.Hosting.AddInSegmentType\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    nameWithType: IDictionary\n    fullName: System.Collections.Generic.IDictionary\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.AddIn.Hosting.AddInToken.ToString\n  parent: System.AddIn.Hosting.AddInToken\n  isExternal: false\n  name: ToString()\n  nameWithType: AddInToken.ToString()\n  fullName: AddInToken.ToString()\n- uid: System.AddIn.Hosting.AddInToken.Version\n  parent: System.AddIn.Hosting.AddInToken\n  isExternal: false\n  name: Version\n  nameWithType: AddInToken.Version\n  fullName: AddInToken.Version\n- uid: System.AddIn.Hosting.AddInToken.System#Collections#IEnumerable#GetEnumerator\n  parent: System.AddIn.Hosting.AddInToken\n  isExternal: false\n  name: IEnumerable.GetEnumerator()\n  nameWithType: AddInToken.IEnumerable.GetEnumerator()\n  fullName: AddInToken.IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.AddIn.Hosting.AddInToken.Activate``1*\n  parent: System.AddIn.Hosting.AddInToken\n  isExternal: false\n  name: Activate<T>\n  nameWithType: AddInToken.Activate<T>\n  fullName: AddInToken.Activate<T>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInToken.xml\n- uid: System.AddIn.Hosting.AddInToken.AddInFullName*\n  parent: System.AddIn.Hosting.AddInToken\n  isExternal: false\n  name: AddInFullName\n  nameWithType: AddInToken.AddInFullName\n  fullName: AddInToken.AddInFullName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInToken.xml\n- uid: System.AddIn.Hosting.AddInToken.AssemblyName*\n  parent: System.AddIn.Hosting.AddInToken\n  isExternal: false\n  name: AssemblyName\n  nameWithType: AddInToken.AssemblyName\n  fullName: AddInToken.AssemblyName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInToken.xml\n- uid: System.AddIn.Hosting.AddInToken.Description*\n  parent: System.AddIn.Hosting.AddInToken\n  isExternal: false\n  name: Description\n  nameWithType: AddInToken.Description\n  fullName: AddInToken.Description\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInToken.xml\n- uid: System.AddIn.Hosting.AddInToken.EnableDirectConnect*\n  parent: System.AddIn.Hosting.AddInToken\n  isExternal: false\n  name: EnableDirectConnect\n  nameWithType: AddInToken.EnableDirectConnect\n  fullName: AddInToken.EnableDirectConnect\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInToken.xml\n- uid: System.AddIn.Hosting.AddInToken.Equals*\n  parent: System.AddIn.Hosting.AddInToken\n  isExternal: false\n  name: Equals\n  nameWithType: AddInToken.Equals\n  fullName: AddInToken.Equals\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInToken.xml\n- uid: System.AddIn.Hosting.AddInToken.GetEnumerator*\n  parent: System.AddIn.Hosting.AddInToken\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: AddInToken.GetEnumerator\n  fullName: AddInToken.GetEnumerator\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInToken.xml\n- uid: System.AddIn.Hosting.AddInToken.GetHashCode*\n  parent: System.AddIn.Hosting.AddInToken\n  isExternal: false\n  name: GetHashCode\n  nameWithType: AddInToken.GetHashCode\n  fullName: AddInToken.GetHashCode\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInToken.xml\n- uid: System.AddIn.Hosting.AddInToken.Name*\n  parent: System.AddIn.Hosting.AddInToken\n  isExternal: false\n  name: Name\n  nameWithType: AddInToken.Name\n  fullName: AddInToken.Name\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInToken.xml\n- uid: System.AddIn.Hosting.AddInToken.Publisher*\n  parent: System.AddIn.Hosting.AddInToken\n  isExternal: false\n  name: Publisher\n  nameWithType: AddInToken.Publisher\n  fullName: AddInToken.Publisher\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInToken.xml\n- uid: System.AddIn.Hosting.AddInToken.QualificationData*\n  parent: System.AddIn.Hosting.AddInToken\n  isExternal: false\n  name: QualificationData\n  nameWithType: AddInToken.QualificationData\n  fullName: AddInToken.QualificationData\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInToken.xml\n- uid: System.AddIn.Hosting.AddInToken.ToString*\n  parent: System.AddIn.Hosting.AddInToken\n  isExternal: false\n  name: ToString\n  nameWithType: AddInToken.ToString\n  fullName: AddInToken.ToString\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInToken.xml\n- uid: System.AddIn.Hosting.AddInToken.Version*\n  parent: System.AddIn.Hosting.AddInToken\n  isExternal: false\n  name: Version\n  nameWithType: AddInToken.Version\n  fullName: AddInToken.Version\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInToken.xml\n- uid: System.AddIn.Hosting.AddInToken.System#Collections#IEnumerable#GetEnumerator*\n  parent: System.AddIn.Hosting.AddInToken\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator\n  nameWithType: AddInToken.System.Collections.IEnumerable.GetEnumerator\n  fullName: AddInToken.System.Collections.IEnumerable.GetEnumerator\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInToken.xml\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Collections.Immutable.ImmutableArray.ToImmutableArray``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Collections.Immutable.ImmutableArray\n  isExternal: false\n  name: ToImmutableArray<TSource>(IEnumerable<TSource>)\n  nameWithType: ImmutableArray.ToImmutableArray<TSource>(IEnumerable<TSource>)\n  fullName: ImmutableArray.ToImmutableArray<TSource>(IEnumerable<TSource>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n- uid: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Collections.Immutable.ImmutableHashSet\n  isExternal: false\n  name: ToImmutableHashSet<TSource>(IEnumerable<TSource>)\n  nameWithType: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>)\n  fullName: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>)\n- uid: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Collections.Immutable.ImmutableHashSet\n  isExternal: false\n  name: ToImmutableHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Collections.Immutable.ImmutableList\n  isExternal: false\n  name: ToImmutableList<TSource>(IEnumerable<TSource>)\n  nameWithType: ImmutableList.ToImmutableList<TSource>(IEnumerable<TSource>)\n  fullName: ImmutableList.ToImmutableList<TSource>(IEnumerable<TSource>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>, IEqualityComparer<TValue>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>, IEqualityComparer<TValue>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>, IEqualityComparer<TValue>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>, IEqualityComparer<TValue>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>, IEqualityComparer<TValue>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>, IEqualityComparer<TValue>)\n- uid: System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Collections.Immutable.ImmutableSortedSet\n  isExternal: false\n  name: ToImmutableSortedSet<TSource>(IEnumerable<TSource>)\n  nameWithType: ImmutableSortedSet.ToImmutableSortedSet<TSource>(IEnumerable<TSource>)\n  fullName: ImmutableSortedSet.ToImmutableSortedSet<TSource>(IEnumerable<TSource>)\n- uid: System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})\n  parent: System.Collections.Immutable.ImmutableSortedSet\n  isExternal: false\n  name: ToImmutableSortedSet<TSource>(IEnumerable<TSource>, IComparer<TSource>)\n  nameWithType: ImmutableSortedSet.ToImmutableSortedSet<TSource>(IEnumerable<TSource>, IComparer<TSource>)\n  fullName: ImmutableSortedSet.ToImmutableSortedSet<TSource>(IEnumerable<TSource>, IComparer<TSource>)\n- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Data.DataTableExtensions\n  isExternal: false\n  name: CopyToDataTable<T>(IEnumerable<T>)\n  nameWithType: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>)\n  fullName: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>)\n- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)\n  parent: System.Data.DataTableExtensions\n  isExternal: false\n  name: CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption)\n  nameWithType: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption)\n  fullName: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption)\n- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)\n  parent: System.Data.DataTableExtensions\n  isExternal: false\n  name: CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption, FillErrorEventHandler)\n  nameWithType: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption, FillErrorEventHandler)\n  fullName: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption, FillErrorEventHandler)\n- uid: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Aggregate<TSource>(IEnumerable<TSource>, Func<TSource,TSource,TSource>)\n  nameWithType: Enumerable.Aggregate<TSource>(IEnumerable<TSource>, Func<TSource,TSource,TSource>)\n  fullName: Enumerable.Aggregate<TSource>(IEnumerable<TSource>, Func<TSource,TSource,TSource>)\n- uid: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Aggregate<TSource,TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>)\n  nameWithType: Enumerable.Aggregate<TSource,TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>)\n  fullName: Enumerable.Aggregate<TSource,TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>)\n- uid: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Aggregate<TSource,TAccumulate,TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>, Func<TAccumulate,TResult>)\n  nameWithType: Enumerable.Aggregate<TSource,TAccumulate,TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>, Func<TAccumulate,TResult>)\n  fullName: Enumerable.Aggregate<TSource,TAccumulate,TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>, Func<TAccumulate,TResult>)\n- uid: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: All<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.All<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.All<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Any<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Any<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Any<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Any<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Any<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Any<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Append<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType: Enumerable.Append<TSource>(IEnumerable<TSource>, TSource)\n  fullName: Enumerable.Append<TSource>(IEnumerable<TSource>, TSource)\n- uid: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: AsEnumerable<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.AsEnumerable<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.AsEnumerable<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Decimal>)\n  nameWithType: Enumerable.Average(IEnumerable<Decimal>)\n  fullName: Enumerable.Average(IEnumerable<Decimal>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Double>)\n  nameWithType: Enumerable.Average(IEnumerable<Double>)\n  fullName: Enumerable.Average(IEnumerable<Double>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Int32>)\n  nameWithType: Enumerable.Average(IEnumerable<Int32>)\n  fullName: Enumerable.Average(IEnumerable<Int32>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Int64>)\n  nameWithType: Enumerable.Average(IEnumerable<Int64>)\n  fullName: Enumerable.Average(IEnumerable<Int64>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Decimal>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Decimal>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Double>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Double>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Double>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Int32>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Int32>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Int64>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Int64>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Single>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Single>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Single>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Single>)\n  nameWithType: Enumerable.Average(IEnumerable<Single>)\n  fullName: Enumerable.Average(IEnumerable<Single>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Cast<TResult>(IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>(IEnumerable)\n  fullName: Enumerable.Cast<TResult>(IEnumerable)\n- uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Contains<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource)\n  fullName: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource)\n- uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)\n  fullName: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Count<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Count<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Count<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Count<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Count<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Count<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: DefaultIfEmpty<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)\n  fullName: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)\n- uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Distinct<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Distinct<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Distinct<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ElementAt<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.ElementAt<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.ElementAt<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: First<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.First<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.First<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: First<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.First<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.First<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: FirstOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>)\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>)\n- uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>)\n  nameWithType: Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>)\n  fullName: Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>)\n- uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>)\n  nameWithType: Enumerable.Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>)\n  fullName: Enumerable.Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>)\n- uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>, IEqualityComparer<TKey>)\n  fullName: Enumerable.Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Last<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Last<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Last<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Last<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Last<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Last<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: LastOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: LongCount<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.LongCount<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.LongCount<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: LongCount<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.LongCount<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.LongCount<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Decimal>)\n  nameWithType: Enumerable.Max(IEnumerable<Decimal>)\n  fullName: Enumerable.Max(IEnumerable<Decimal>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Double>)\n  nameWithType: Enumerable.Max(IEnumerable<Double>)\n  fullName: Enumerable.Max(IEnumerable<Double>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Int32>)\n  nameWithType: Enumerable.Max(IEnumerable<Int32>)\n  fullName: Enumerable.Max(IEnumerable<Int32>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Int64>)\n  nameWithType: Enumerable.Max(IEnumerable<Int64>)\n  fullName: Enumerable.Max(IEnumerable<Int64>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Decimal>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Decimal>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Double>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Double>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Double>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Int32>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Int32>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Int64>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Int64>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Single>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Single>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Single>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Single>)\n  nameWithType: Enumerable.Max(IEnumerable<Single>)\n  fullName: Enumerable.Max(IEnumerable<Single>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n- uid: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  nameWithType: Enumerable.Max<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  fullName: Enumerable.Max<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Decimal>)\n  nameWithType: Enumerable.Min(IEnumerable<Decimal>)\n  fullName: Enumerable.Min(IEnumerable<Decimal>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Double>)\n  nameWithType: Enumerable.Min(IEnumerable<Double>)\n  fullName: Enumerable.Min(IEnumerable<Double>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Int32>)\n  nameWithType: Enumerable.Min(IEnumerable<Int32>)\n  fullName: Enumerable.Min(IEnumerable<Int32>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Int64>)\n  nameWithType: Enumerable.Min(IEnumerable<Int64>)\n  fullName: Enumerable.Min(IEnumerable<Int64>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Decimal>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Decimal>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Double>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Double>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Double>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Int32>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Int32>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Int64>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Int64>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Single>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Single>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Single>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Single>)\n  nameWithType: Enumerable.Min(IEnumerable<Single>)\n  fullName: Enumerable.Min(IEnumerable<Single>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n- uid: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  nameWithType: Enumerable.Min<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  fullName: Enumerable.Min<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OfType<TResult>(IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>(IEnumerable)\n  fullName: Enumerable.OfType<TResult>(IEnumerable)\n- uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n  nameWithType: Enumerable.OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n  fullName: Enumerable.OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n- uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n  nameWithType: Enumerable.OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n  fullName: Enumerable.OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n- uid: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Prepend<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType: Enumerable.Prepend<TSource>(IEnumerable<TSource>, TSource)\n  fullName: Enumerable.Prepend<TSource>(IEnumerable<TSource>, TSource)\n- uid: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Reverse<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Reverse<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Reverse<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  nameWithType: Enumerable.Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  fullName: Enumerable.Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n- uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,TResult>)\n  nameWithType: Enumerable.Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,TResult>)\n  fullName: Enumerable.Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,TResult>)\n- uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TResult>>)\n  nameWithType: Enumerable.SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TResult>>)\n  fullName: Enumerable.SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TResult>>)\n- uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TResult>>)\n  nameWithType: Enumerable.SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TResult>>)\n  fullName: Enumerable.SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TResult>>)\n- uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n  nameWithType: Enumerable.SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n  fullName: Enumerable.SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n- uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n  nameWithType: Enumerable.SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n  fullName: Enumerable.SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n- uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Single<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Single<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Single<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Single<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Single<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Single<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SingleOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Skip<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.Skip<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.Skip<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.SkipLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SkipLast<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.SkipLast<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.SkipLast<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  nameWithType: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  fullName: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Decimal>)\n  nameWithType: Enumerable.Sum(IEnumerable<Decimal>)\n  fullName: Enumerable.Sum(IEnumerable<Decimal>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Double>)\n  nameWithType: Enumerable.Sum(IEnumerable<Double>)\n  fullName: Enumerable.Sum(IEnumerable<Double>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Int32>)\n  nameWithType: Enumerable.Sum(IEnumerable<Int32>)\n  fullName: Enumerable.Sum(IEnumerable<Int32>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Int64>)\n  nameWithType: Enumerable.Sum(IEnumerable<Int64>)\n  fullName: Enumerable.Sum(IEnumerable<Int64>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Decimal>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Decimal>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Double>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Double>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Double>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Int32>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Int32>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Int64>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Int64>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Single>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Single>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Single>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Single>)\n  nameWithType: Enumerable.Sum(IEnumerable<Single>)\n  fullName: Enumerable.Sum(IEnumerable<Single>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n- uid: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Take<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.Take<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.Take<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.TakeLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: TakeLast<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.TakeLast<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.TakeLast<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  nameWithType: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  fullName: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n- uid: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToArray<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.ToArray<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.ToArray<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  fullName: Enumerable.ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  nameWithType: Enumerable.ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  fullName: Enumerable.ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n- uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  fullName: Enumerable.ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToHashSet<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.ToHashSet<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.ToHashSet<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.ToHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.ToHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToList<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.ToList<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.ToList<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  fullName: Enumerable.ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  nameWithType: Enumerable.ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  fullName: Enumerable.ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n- uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  fullName: Enumerable.ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Where<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Where<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  nameWithType: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  fullName: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n- uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Zip<TFirst,TSecond,TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst,TSecond,TResult>)\n  nameWithType: Enumerable.Zip<TFirst,TSecond,TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst,TSecond,TResult>)\n  fullName: Enumerable.Zip<TFirst,TSecond,TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst,TSecond,TResult>)\n- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  parent: System.Linq.ParallelEnumerable\n  isExternal: false\n  name: AsParallel(IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)\n  fullName: ParallelEnumerable.AsParallel(IEnumerable)\n- uid: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.ParallelEnumerable\n  isExternal: false\n  name: AsParallel<TSource>(IEnumerable<TSource>)\n  nameWithType: ParallelEnumerable.AsParallel<TSource>(IEnumerable<TSource>)\n  fullName: ParallelEnumerable.AsParallel<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: AsQueryable(IEnumerable)\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n  fullName: Queryable.AsQueryable(IEnumerable)\n- uid: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: AsQueryable<TElement>(IEnumerable<TElement>)\n  nameWithType: Queryable.AsQueryable<TElement>(IEnumerable<TElement>)\n  fullName: Queryable.AsQueryable<TElement>(IEnumerable<TElement>)\n- uid: System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Ancestors<T>(IEnumerable<T>)\n  nameWithType: Extensions.Ancestors<T>(IEnumerable<T>)\n  fullName: Extensions.Ancestors<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Ancestors<T>(IEnumerable<T>, XName)\n  nameWithType: Extensions.Ancestors<T>(IEnumerable<T>, XName)\n  fullName: Extensions.Ancestors<T>(IEnumerable<T>, XName)\n- uid: System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: AncestorsAndSelf(IEnumerable<XElement>)\n  nameWithType: Extensions.AncestorsAndSelf(IEnumerable<XElement>)\n  fullName: Extensions.AncestorsAndSelf(IEnumerable<XElement>)\n- uid: System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: AncestorsAndSelf(IEnumerable<XElement>, XName)\n  nameWithType: Extensions.AncestorsAndSelf(IEnumerable<XElement>, XName)\n  fullName: Extensions.AncestorsAndSelf(IEnumerable<XElement>, XName)\n- uid: System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Attributes(IEnumerable<XElement>)\n  nameWithType: Extensions.Attributes(IEnumerable<XElement>)\n  fullName: Extensions.Attributes(IEnumerable<XElement>)\n- uid: System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Attributes(IEnumerable<XElement>, XName)\n  nameWithType: Extensions.Attributes(IEnumerable<XElement>, XName)\n  fullName: Extensions.Attributes(IEnumerable<XElement>, XName)\n- uid: System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: DescendantNodes<T>(IEnumerable<T>)\n  nameWithType: Extensions.DescendantNodes<T>(IEnumerable<T>)\n  fullName: Extensions.DescendantNodes<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.DescendantNodesAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: DescendantNodesAndSelf(IEnumerable<XElement>)\n  nameWithType: Extensions.DescendantNodesAndSelf(IEnumerable<XElement>)\n  fullName: Extensions.DescendantNodesAndSelf(IEnumerable<XElement>)\n- uid: System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Descendants<T>(IEnumerable<T>)\n  nameWithType: Extensions.Descendants<T>(IEnumerable<T>)\n  fullName: Extensions.Descendants<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Descendants<T>(IEnumerable<T>, XName)\n  nameWithType: Extensions.Descendants<T>(IEnumerable<T>, XName)\n  fullName: Extensions.Descendants<T>(IEnumerable<T>, XName)\n- uid: System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: DescendantsAndSelf(IEnumerable<XElement>)\n  nameWithType: Extensions.DescendantsAndSelf(IEnumerable<XElement>)\n  fullName: Extensions.DescendantsAndSelf(IEnumerable<XElement>)\n- uid: System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: DescendantsAndSelf(IEnumerable<XElement>, XName)\n  nameWithType: Extensions.DescendantsAndSelf(IEnumerable<XElement>, XName)\n  fullName: Extensions.DescendantsAndSelf(IEnumerable<XElement>, XName)\n- uid: System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Elements<T>(IEnumerable<T>)\n  nameWithType: Extensions.Elements<T>(IEnumerable<T>)\n  fullName: Extensions.Elements<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Elements<T>(IEnumerable<T>, XName)\n  nameWithType: Extensions.Elements<T>(IEnumerable<T>, XName)\n  fullName: Extensions.Elements<T>(IEnumerable<T>, XName)\n- uid: System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: InDocumentOrder<T>(IEnumerable<T>)\n  nameWithType: Extensions.InDocumentOrder<T>(IEnumerable<T>)\n  fullName: Extensions.InDocumentOrder<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Nodes``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Nodes<T>(IEnumerable<T>)\n  nameWithType: Extensions.Nodes<T>(IEnumerable<T>)\n  fullName: Extensions.Nodes<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Remove(IEnumerable<XAttribute>)\n  nameWithType: Extensions.Remove(IEnumerable<XAttribute>)\n  fullName: Extensions.Remove(IEnumerable<XAttribute>)\n- uid: System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Remove<T>(IEnumerable<T>)\n  nameWithType: Extensions.Remove<T>(IEnumerable<T>)\n  fullName: Extensions.Remove<T>(IEnumerable<T>)\n- uid: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Collections.Generic.IEnumerable{System.AddIn.Hosting.QualificationDataItem}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<QualificationDataItem>\n  nameWithType: IEnumerable<QualificationDataItem>\n  fullName: System.Collections.Generic.IEnumerable<System.AddIn.Hosting.QualificationDataItem>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.AddIn.Hosting.QualificationDataItem\n    name: QualificationDataItem\n    nameWithType: QualificationDataItem\n    fullName: System.AddIn.Hosting.QualificationDataItem\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n"}