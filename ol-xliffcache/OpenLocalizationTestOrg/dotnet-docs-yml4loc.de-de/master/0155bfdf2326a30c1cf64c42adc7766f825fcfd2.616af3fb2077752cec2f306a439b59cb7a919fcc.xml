{"nodes":[{"content":"The <xref href=\"System.Net.TransportContext\"></xref> class provides additional context about the underlying transport layer.","nodes":[{"pos":[0,124],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.TransportContext\"&gt;&lt;/xref&gt;</ph> class provides additional context about the underlying transport layer.","source":"The <xref href=\"System.Net.TransportContext\"></xref> class provides additional context about the underlying transport layer."}],"pos":[593,718],"yaml":true},{"content":"The <xref:System.Net.TransportContext> class is used with classes in the <xref:System.Security.Authentication.ExtendedProtection> namespace to provide support for authentication using extended protection for applications.  \n  \n The design of integrated Windows authentication allows for some credential challenge responses to be universal, meaning they can be re-used or forwarded. If this particular design feature is not needed then the challenge responses should be constructed with, at minimum, target specific information and, at best, also some channel specific information. Services can then provide extended protection to ensure that credential challenge responses contain service specific information (a Service Provider Name or SPN) and, if necessary, channel specific information (a channel binding token or CBT). With this information in the credential exchanges, services are able to better protect against malicious use of credential challenge responses that might have been improperly obtained.  \n  \n <xref:System.Net.HttpWebRequest> is the only class derived from <xref:System.Net.WebRequest> class that can potentially use IWA. The <xref:System.Net.FtpWebRequest> class does only FTP clear text authentication. The <xref:System.Net.FileWebRequest> class doesn't perform any authentication.  \n  \n There are several ways an application may get a <xref:System.Net.TransportContext> instance. An application that uses <xref:System.Net.Security.SslStream> can get the <xref:System.Net.TransportContext> using the <xref:System.Net.Security.SslStream.TransportContext%2A> property. An application that uses <xref:System.Net.HttpWebRequest> can get a <xref:System.Net.TransportContext> using the <xref:System.Net.HttpWebRequest.GetRequestStream%2A> or <xref:System.Net.HttpWebRequest.EndGetRequestStream%2A> methods.","nodes":[{"pos":[0,221],"content":"The <xref:System.Net.TransportContext> class is used with classes in the <xref:System.Security.Authentication.ExtendedProtection> namespace to provide support for authentication using extended protection for applications.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.TransportContext&gt;</ph> class is used with classes in the <ph id=\"ph2\">&lt;xref:System.Security.Authentication.ExtendedProtection&gt;</ph> namespace to provide support for authentication using extended protection for applications.","pos":[0,221],"source":"The <xref:System.Net.TransportContext> class is used with classes in the <xref:System.Security.Authentication.ExtendedProtection> namespace to provide support for authentication using extended protection for applications."}]},{"pos":[228,1009],"content":"The design of integrated Windows authentication allows for some credential challenge responses to be universal, meaning they can be re-used or forwarded. If this particular design feature is not needed then the challenge responses should be constructed with, at minimum, target specific information and, at best, also some channel specific information. Services can then provide extended protection to ensure that credential challenge responses contain service specific information (a Service Provider Name or SPN) and, if necessary, channel specific information (a channel binding token or CBT). With this information in the credential exchanges, services are able to better protect against malicious use of credential challenge responses that might have been improperly obtained.","nodes":[{"content":"The design of integrated Windows authentication allows for some credential challenge responses to be universal, meaning they can be re-used or forwarded. If this particular design feature is not needed then the challenge responses should be constructed with, at minimum, target specific information and, at best, also some channel specific information. Services can then provide extended protection to ensure that credential challenge responses contain service specific information (a Service Provider Name or SPN) and, if necessary, channel specific information (a channel binding token or CBT). With this information in the credential exchanges, services are able to better protect against malicious use of credential challenge responses that might have been improperly obtained.","pos":[0,781],"nodes":[{"content":"The design of integrated Windows authentication allows for some credential challenge responses to be universal, meaning they can be re-used or forwarded.","pos":[0,153]},{"content":"If this particular design feature is not needed then the challenge responses should be constructed with, at minimum, target specific information and, at best, also some channel specific information.","pos":[154,352]},{"content":"Services can then provide extended protection to ensure that credential challenge responses contain service specific information (a Service Provider Name or SPN) and, if necessary, channel specific information (a channel binding token or CBT).","pos":[353,596]},{"content":"With this information in the credential exchanges, services are able to better protect against malicious use of credential challenge responses that might have been improperly obtained.","pos":[597,781]}]}]},{"pos":[1016,1306],"content":"<xref:System.Net.HttpWebRequest> is the only class derived from <xref:System.Net.WebRequest> class that can potentially use IWA. The <xref:System.Net.FtpWebRequest> class does only FTP clear text authentication. The <xref:System.Net.FileWebRequest> class doesn't perform any authentication.","nodes":[{"content":"<xref:System.Net.HttpWebRequest> is the only class derived from <xref:System.Net.WebRequest> class that can potentially use IWA. The <xref:System.Net.FtpWebRequest> class does only FTP clear text authentication. The <xref:System.Net.FileWebRequest> class doesn't perform any authentication.","pos":[0,290],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Net.HttpWebRequest&gt;</ph> is the only class derived from <ph id=\"ph2\">&lt;xref:System.Net.WebRequest&gt;</ph> class that can potentially use IWA.","pos":[0,128],"source":"<xref:System.Net.HttpWebRequest> is the only class derived from <xref:System.Net.WebRequest> class that can potentially use IWA."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest&gt;</ph> class does only FTP clear text authentication.","pos":[129,211],"source":" The <xref:System.Net.FtpWebRequest> class does only FTP clear text authentication."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.FileWebRequest&gt;</ph> class doesn't perform any authentication.","pos":[212,290],"source":" The <xref:System.Net.FileWebRequest> class doesn't perform any authentication."}]}]},{"pos":[1313,1825],"content":"There are several ways an application may get a <xref:System.Net.TransportContext> instance. An application that uses <xref:System.Net.Security.SslStream> can get the <xref:System.Net.TransportContext> using the <xref:System.Net.Security.SslStream.TransportContext%2A> property. An application that uses <xref:System.Net.HttpWebRequest> can get a <xref:System.Net.TransportContext> using the <xref:System.Net.HttpWebRequest.GetRequestStream%2A> or <xref:System.Net.HttpWebRequest.EndGetRequestStream%2A> methods.","nodes":[{"content":"There are several ways an application may get a <xref:System.Net.TransportContext> instance. An application that uses <xref:System.Net.Security.SslStream> can get the <xref:System.Net.TransportContext> using the <xref:System.Net.Security.SslStream.TransportContext%2A> property. An application that uses <xref:System.Net.HttpWebRequest> can get a <xref:System.Net.TransportContext> using the <xref:System.Net.HttpWebRequest.GetRequestStream%2A> or <xref:System.Net.HttpWebRequest.EndGetRequestStream%2A> methods.","pos":[0,512],"nodes":[{"content":"There are several ways an application may get a <ph id=\"ph1\">&lt;xref:System.Net.TransportContext&gt;</ph> instance.","pos":[0,92],"source":"There are several ways an application may get a <xref:System.Net.TransportContext> instance."},{"content":"An application that uses <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream&gt;</ph> can get the <ph id=\"ph2\">&lt;xref:System.Net.TransportContext&gt;</ph> using the <ph id=\"ph3\">&lt;xref:System.Net.Security.SslStream.TransportContext%2A&gt;</ph> property.","pos":[93,278],"source":" An application that uses <xref:System.Net.Security.SslStream> can get the <xref:System.Net.TransportContext> using the <xref:System.Net.Security.SslStream.TransportContext%2A> property."},{"content":"An application that uses <ph id=\"ph1\">&lt;xref:System.Net.HttpWebRequest&gt;</ph> can get a <ph id=\"ph2\">&lt;xref:System.Net.TransportContext&gt;</ph> using the <ph id=\"ph3\">&lt;xref:System.Net.HttpWebRequest.GetRequestStream%2A&gt;</ph> or <ph id=\"ph4\">&lt;xref:System.Net.HttpWebRequest.EndGetRequestStream%2A&gt;</ph> methods.","pos":[279,512],"source":" An application that uses <xref:System.Net.HttpWebRequest> can get a <xref:System.Net.TransportContext> using the <xref:System.Net.HttpWebRequest.GetRequestStream%2A> or <xref:System.Net.HttpWebRequest.EndGetRequestStream%2A> methods."}]}]}],"pos":[729,2563],"yaml":true,"extradata":"MT"},{"content":"Creates a new instance of the <xref href=\"System.Net.TransportContext\"></xref> class","nodes":[{"pos":[0,84],"content":"Creates a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Net.TransportContext\"&gt;&lt;/xref&gt;</ph> class","source":"Creates a new instance of the <xref href=\"System.Net.TransportContext\"></xref> class"}],"pos":[4308,4393],"yaml":true},{"content":"Retrieves the requested channel binding.","nodes":[{"pos":[0,40],"content":"Retrieves the requested channel binding.","nodes":[{"content":"Retrieves the requested channel binding.","pos":[0,40]}]}],"pos":[6085,6126],"yaml":true},{"content":"The possible values for the `kind` parameter are <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint> or <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Unique>.  \n  \n If an application attempts to retrieve the channel binding token (CBT) from the <xref:System.Net.HttpListenerRequest.TransportContext%2A> property using the <xref:System.Net.TransportContext.GetChannelBinding%2A> method and the <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind> is not <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint>, then the <xref:System.Net.HttpListenerRequest> will throw <xref:System.NotSupportedException>. The <xref:System.Net.HttpListenerRequest> overrides the <xref:System.Net.TransportContext.GetChannelBinding%2A> method with an internal implementation","nodes":[{"pos":[0,220],"content":"The possible values for the <ph id=\"ph1\">`kind`</ph> parameter are <ph id=\"ph2\">&lt;xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint&gt;</ph> or <ph id=\"ph3\">&lt;xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Unique&gt;</ph>.","source":"The possible values for the `kind` parameter are <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint> or <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Unique>."},{"pos":[227,869],"content":"If an application attempts to retrieve the channel binding token (CBT) from the <xref:System.Net.HttpListenerRequest.TransportContext%2A> property using the <xref:System.Net.TransportContext.GetChannelBinding%2A> method and the <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind> is not <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint>, then the <xref:System.Net.HttpListenerRequest> will throw <xref:System.NotSupportedException>. The <xref:System.Net.HttpListenerRequest> overrides the <xref:System.Net.TransportContext.GetChannelBinding%2A> method with an internal implementation","nodes":[{"content":"If an application attempts to retrieve the channel binding token (CBT) from the <xref:System.Net.HttpListenerRequest.TransportContext%2A> property using the <xref:System.Net.TransportContext.GetChannelBinding%2A> method and the <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind> is not <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint>, then the <xref:System.Net.HttpListenerRequest> will throw <xref:System.NotSupportedException>. The <xref:System.Net.HttpListenerRequest> overrides the <xref:System.Net.TransportContext.GetChannelBinding%2A> method with an internal implementation","pos":[0,642],"nodes":[{"content":"If an application attempts to retrieve the channel binding token (CBT) from the <ph id=\"ph1\">&lt;xref:System.Net.HttpListenerRequest.TransportContext%2A&gt;</ph> property using the <ph id=\"ph2\">&lt;xref:System.Net.TransportContext.GetChannelBinding%2A&gt;</ph> method and the <ph id=\"ph3\">&lt;xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind&gt;</ph> is not <ph id=\"ph4\">&lt;xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint&gt;</ph>, then the <ph id=\"ph5\">&lt;xref:System.Net.HttpListenerRequest&gt;</ph> will throw <ph id=\"ph6\">&lt;xref:System.NotSupportedException&gt;</ph>.","pos":[0,491],"source":"If an application attempts to retrieve the channel binding token (CBT) from the <xref:System.Net.HttpListenerRequest.TransportContext%2A> property using the <xref:System.Net.TransportContext.GetChannelBinding%2A> method and the <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind> is not <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint>, then the <xref:System.Net.HttpListenerRequest> will throw <xref:System.NotSupportedException>."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.HttpListenerRequest&gt;</ph> overrides the <ph id=\"ph2\">&lt;xref:System.Net.TransportContext.GetChannelBinding%2A&gt;</ph> method with an internal implementation","pos":[492,642],"source":" The <xref:System.Net.HttpListenerRequest> overrides the <xref:System.Net.TransportContext.GetChannelBinding%2A> method with an internal implementation"}]}]}],"pos":[6137,7011],"yaml":true,"extradata":"MT"},{"content":"The type of channel binding to retrieve.","nodes":[{"pos":[0,40],"content":"The type of channel binding to retrieve.","nodes":[{"content":"The type of channel binding to retrieve.","pos":[0,40]}]}],"pos":[7341,7382],"yaml":true},{"content":"The requested <xref href=\"System.Security.Authentication.ExtendedProtection.ChannelBinding\"></xref>, or `null` if the channel binding is not supported by the current transport or by the operating system.","nodes":[{"pos":[0,203],"content":"The requested <ph id=\"ph1\">&lt;xref href=\"System.Security.Authentication.ExtendedProtection.ChannelBinding\"&gt;&lt;/xref&gt;</ph>, or <ph id=\"ph2\">`null`</ph> if the channel binding is not supported by the current transport or by the operating system.","source":"The requested <xref href=\"System.Security.Authentication.ExtendedProtection.ChannelBinding\"></xref>, or `null` if the channel binding is not supported by the current transport or by the operating system."}],"pos":[7490,7694],"yaml":true},{"content":"<code>kind</code> is must be <xref href=\"System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint\"></xref> for use with the <xref href=\"System.Net.TransportContext\"></xref> retrieved from the <xref href=\"System.Net.HttpListenerRequest.TransportContext\"></xref> property.","nodes":[{"pos":[0,291],"content":"<ph id=\"ph1\">&lt;code&gt;kind&lt;/code&gt;</ph> is must be <ph id=\"ph2\">&lt;xref href=\"System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint\"&gt;&lt;/xref&gt;</ph> for use with the <ph id=\"ph3\">&lt;xref href=\"System.Net.TransportContext\"&gt;&lt;/xref&gt;</ph> retrieved from the <ph id=\"ph4\">&lt;xref href=\"System.Net.HttpListenerRequest.TransportContext\"&gt;&lt;/xref&gt;</ph> property.","source":"<code>kind</code> is must be <xref href=\"System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint\"></xref> for use with the <xref href=\"System.Net.TransportContext\"></xref> retrieved from the <xref href=\"System.Net.HttpListenerRequest.TransportContext\"></xref> property."}],"pos":[7869,8161],"yaml":true},{"content":"Gets the transport security layer token bindings.","nodes":[{"pos":[0,49],"content":"Gets the transport security layer token bindings.","nodes":[{"content":"Gets the transport security layer token bindings.","pos":[0,49]}]}],"pos":[9422,9472],"yaml":true},{"content":"The transport security layer token bindings.","nodes":[{"pos":[0,44],"content":"The transport security layer token bindings.","nodes":[{"content":"The transport security layer token bindings.","pos":[0,44]}]}],"pos":[9802,9847],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Net.TransportContext\n  commentId: T:System.Net.TransportContext\n  id: TransportContext\n  children:\n  - System.Net.TransportContext.#ctor\n  - System.Net.TransportContext.GetChannelBinding(System.Security.Authentication.ExtendedProtection.ChannelBindingKind)\n  - System.Net.TransportContext.GetTlsTokenBindings\n  langs:\n  - csharp\n  name: TransportContext\n  nameWithType: TransportContext\n  fullName: System.Net.TransportContext\n  type: Class\n  assemblies:\n  - System.Net.Primitives\n  - System\n  - netstandard\n  namespace: System.Net\n  summary: The <xref href=\"System.Net.TransportContext\"></xref> class provides additional context about the underlying transport layer.\n  remarks: \"The <xref:System.Net.TransportContext> class is used with classes in the <xref:System.Security.Authentication.ExtendedProtection> namespace to provide support for authentication using extended protection for applications.  \\n  \\n The design of integrated Windows authentication allows for some credential challenge responses to be universal, meaning they can be re-used or forwarded. If this particular design feature is not needed then the challenge responses should be constructed with, at minimum, target specific information and, at best, also some channel specific information. Services can then provide extended protection to ensure that credential challenge responses contain service specific information (a Service Provider Name or SPN) and, if necessary, channel specific information (a channel binding token or CBT). With this information in the credential exchanges, services are able to better protect against malicious use of credential challenge responses that might have been improperly obtained.  \\n  \\n <xref:System.Net.HttpWebRequest> is the only class derived from <xref:System.Net.WebRequest> class that can potentially use IWA. The <xref:System.Net.FtpWebRequest> class does only FTP clear text authentication. The <xref:System.Net.FileWebRequest> class doesn't perform any authentication.  \\n  \\n There are several ways an application may get a <xref:System.Net.TransportContext> instance. An application that uses <xref:System.Net.Security.SslStream> can get the <xref:System.Net.TransportContext> using the <xref:System.Net.Security.SslStream.TransportContext%2A> property. An application that uses <xref:System.Net.HttpWebRequest> can get a <xref:System.Net.TransportContext> using the <xref:System.Net.HttpWebRequest.GetRequestStream%2A> or <xref:System.Net.HttpWebRequest.EndGetRequestStream%2A> methods.\"\n  syntax:\n    content: public abstract class TransportContext\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/TransportContext.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.TransportContext.#ctor\n  commentId: M:System.Net.TransportContext.#ctor\n  id: '#ctor'\n  parent: System.Net.TransportContext\n  langs:\n  - csharp\n  name: TransportContext()\n  nameWithType: TransportContext.TransportContext()\n  fullName: TransportContext.TransportContext()\n  type: Constructor\n  assemblies:\n  - System.Net.Primitives\n  - System\n  - netstandard\n  namespace: System.Net\n  summary: Creates a new instance of the <xref href=\"System.Net.TransportContext\"></xref> class\n  syntax:\n    content: protected TransportContext ();\n    parameters: []\n  overload: System.Net.TransportContext.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/TransportContext.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.TransportContext.GetChannelBinding(System.Security.Authentication.ExtendedProtection.ChannelBindingKind)\n  commentId: M:System.Net.TransportContext.GetChannelBinding(System.Security.Authentication.ExtendedProtection.ChannelBindingKind)\n  id: GetChannelBinding(System.Security.Authentication.ExtendedProtection.ChannelBindingKind)\n  parent: System.Net.TransportContext\n  langs:\n  - csharp\n  name: GetChannelBinding(ChannelBindingKind)\n  nameWithType: TransportContext.GetChannelBinding(ChannelBindingKind)\n  fullName: TransportContext.GetChannelBinding(ChannelBindingKind)\n  type: Method\n  assemblies:\n  - System.Net.Primitives\n  - System\n  - netstandard\n  namespace: System.Net\n  summary: Retrieves the requested channel binding.\n  remarks: \"The possible values for the `kind` parameter are <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint> or <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Unique>.  \\n  \\n If an application attempts to retrieve the channel binding token (CBT) from the <xref:System.Net.HttpListenerRequest.TransportContext%2A> property using the <xref:System.Net.TransportContext.GetChannelBinding%2A> method and the <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind> is not <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint>, then the <xref:System.Net.HttpListenerRequest> will throw <xref:System.NotSupportedException>. The <xref:System.Net.HttpListenerRequest> overrides the <xref:System.Net.TransportContext.GetChannelBinding%2A> method with an internal implementation\"\n  syntax:\n    content: public abstract System.Security.Authentication.ExtendedProtection.ChannelBinding GetChannelBinding (System.Security.Authentication.ExtendedProtection.ChannelBindingKind kind);\n    parameters:\n    - id: kind\n      type: System.Security.Authentication.ExtendedProtection.ChannelBindingKind\n      description: The type of channel binding to retrieve.\n    return:\n      type: System.Security.Authentication.ExtendedProtection.ChannelBinding\n      description: The requested <xref href=\"System.Security.Authentication.ExtendedProtection.ChannelBinding\"></xref>, or `null` if the channel binding is not supported by the current transport or by the operating system.\n  overload: System.Net.TransportContext.GetChannelBinding*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>kind</code> is must be <xref href=\"System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint\"></xref> for use with the <xref href=\"System.Net.TransportContext\"></xref> retrieved from the <xref href=\"System.Net.HttpListenerRequest.TransportContext\"></xref> property.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/TransportContext.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.TransportContext.GetTlsTokenBindings\n  commentId: M:System.Net.TransportContext.GetTlsTokenBindings\n  id: GetTlsTokenBindings\n  parent: System.Net.TransportContext\n  langs:\n  - csharp\n  name: GetTlsTokenBindings()\n  nameWithType: TransportContext.GetTlsTokenBindings()\n  fullName: TransportContext.GetTlsTokenBindings()\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Net\n  summary: Gets the transport security layer token bindings.\n  syntax:\n    content: public virtual System.Collections.Generic.IEnumerable<System.Security.Authentication.ExtendedProtection.TokenBinding> GetTlsTokenBindings ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Security.Authentication.ExtendedProtection.TokenBinding}\n      description: The transport security layer token bindings.\n  overload: System.Net.TransportContext.GetTlsTokenBindings*\n  exceptions: []\n  version:\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/TransportContext.xml\n  ms.author: alkoren\n  manager: markl\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  nameWithType: NotSupportedException\n  fullName: System.NotSupportedException\n- uid: System.Net.TransportContext.#ctor\n  parent: System.Net.TransportContext\n  isExternal: false\n  name: TransportContext()\n  nameWithType: TransportContext.TransportContext()\n  fullName: TransportContext.TransportContext()\n- uid: System.Net.TransportContext.GetChannelBinding(System.Security.Authentication.ExtendedProtection.ChannelBindingKind)\n  parent: System.Net.TransportContext\n  isExternal: false\n  name: GetChannelBinding(ChannelBindingKind)\n  nameWithType: TransportContext.GetChannelBinding(ChannelBindingKind)\n  fullName: TransportContext.GetChannelBinding(ChannelBindingKind)\n- uid: System.Security.Authentication.ExtendedProtection.ChannelBinding\n  parent: System.Security.Authentication.ExtendedProtection\n  isExternal: false\n  name: ChannelBinding\n  nameWithType: ChannelBinding\n  fullName: System.Security.Authentication.ExtendedProtection.ChannelBinding\n- uid: System.Security.Authentication.ExtendedProtection.ChannelBindingKind\n  parent: System.Security.Authentication.ExtendedProtection\n  isExternal: false\n  name: ChannelBindingKind\n  nameWithType: ChannelBindingKind\n  fullName: System.Security.Authentication.ExtendedProtection.ChannelBindingKind\n- uid: System.Net.TransportContext.GetTlsTokenBindings\n  parent: System.Net.TransportContext\n  isExternal: false\n  name: GetTlsTokenBindings()\n  nameWithType: TransportContext.GetTlsTokenBindings()\n  fullName: TransportContext.GetTlsTokenBindings()\n- uid: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Security.Authentication.ExtendedProtection.TokenBinding\n  name: TokenBinding\n  nameWithType: TokenBinding\n  fullName: System.Security.Authentication.ExtendedProtection.TokenBinding\n- uid: System.Collections.Generic.IEnumerable{System.Security.Authentication.ExtendedProtection.TokenBinding}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<TokenBinding>\n  nameWithType: IEnumerable<TokenBinding>\n  fullName: System.Collections.Generic.IEnumerable<System.Security.Authentication.ExtendedProtection.TokenBinding>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Security.Authentication.ExtendedProtection.TokenBinding\n    name: TokenBinding\n    nameWithType: TokenBinding\n    fullName: System.Security.Authentication.ExtendedProtection.TokenBinding\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Net.TransportContext.#ctor*\n  parent: System.Net.TransportContext\n  isExternal: false\n  name: TransportContext\n  nameWithType: TransportContext.TransportContext\n  fullName: TransportContext.TransportContext\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/TransportContext.xml\n- uid: System.Net.TransportContext.GetChannelBinding*\n  parent: System.Net.TransportContext\n  isExternal: false\n  name: GetChannelBinding\n  nameWithType: TransportContext.GetChannelBinding\n  fullName: TransportContext.GetChannelBinding\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/TransportContext.xml\n- uid: System.Net.TransportContext.GetTlsTokenBindings*\n  parent: System.Net.TransportContext\n  isExternal: false\n  name: GetTlsTokenBindings\n  nameWithType: TransportContext.GetTlsTokenBindings\n  fullName: TransportContext.GetTlsTokenBindings\n  monikers:\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/TransportContext.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}