### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Security.HttpDigestClientCredential
  commentId: T:System.ServiceModel.Security.HttpDigestClientCredential
  id: HttpDigestClientCredential
  children:
  - System.ServiceModel.Security.HttpDigestClientCredential.AllowedImpersonationLevel
  - System.ServiceModel.Security.HttpDigestClientCredential.ClientCredential
  langs:
  - csharp
  name: HttpDigestClientCredential
  nameWithType: HttpDigestClientCredential
  fullName: System.ServiceModel.Security.HttpDigestClientCredential
  type: Class
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: Used for digest authentication of HTTP clients.
  remarks: Digest authentication verifies that both parties to a communication know a shared secret (a password). Authentication is done without sending the password in the clear. Digest authentication is based on a challenge-response paradigm. The Digest scheme challenges using a nonce ("number used once") value. The response must contain a checksum of the user name, the password, the nonce value, the HTTP method, and the requested URI.
  syntax:
    content: public sealed class HttpDigestClientCredential
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/HttpDigestClientCredential.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Security.HttpDigestClientCredential.AllowedImpersonationLevel
  commentId: P:System.ServiceModel.Security.HttpDigestClientCredential.AllowedImpersonationLevel
  id: AllowedImpersonationLevel
  parent: System.ServiceModel.Security.HttpDigestClientCredential
  langs:
  - csharp
  name: AllowedImpersonationLevel
  nameWithType: HttpDigestClientCredential.AllowedImpersonationLevel
  fullName: HttpDigestClientCredential.AllowedImpersonationLevel
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: Gets or sets the level of impersonation that the client allows with the client credential provided.
  remarks: "Allowable values include:  \n  \n <xref:System.Security.Principal.TokenImpersonationLevel.Delegation>,  \n  \n <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and  \n  \n <xref:System.Security.Principal.TokenImpersonationLevel.Impersonation>.  \n  \n Due to the limitations of Digest authentication, when the client is using non-default credentials, only `Impersonation` and `Delegation` levels are allowed."
  example:
  - "The following example shows how to set this property.  \n  \n [!code-csharp[S_UE_HttpDigestClientCredential#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_httpdigestclientcredential/cs/source.cs#1)]\n [!code-vb[S_UE_HttpDigestClientCredential#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_httpdigestclientcredential/vb/source.vb#1)]"
  syntax:
    content: public System.Security.Principal.TokenImpersonationLevel AllowedImpersonationLevel { get; set; }
    return:
      type: System.Security.Principal.TokenImpersonationLevel
      description: The <xref href="System.Security.Principal.TokenImpersonationLevel"></xref> that the client grants the server as part of HTTP digest authentication.
  overload: System.ServiceModel.Security.HttpDigestClientCredential.AllowedImpersonationLevel*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/HttpDigestClientCredential.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Security.HttpDigestClientCredential.ClientCredential
  commentId: P:System.ServiceModel.Security.HttpDigestClientCredential.ClientCredential
  id: ClientCredential
  parent: System.ServiceModel.Security.HttpDigestClientCredential
  langs:
  - csharp
  name: ClientCredential
  nameWithType: HttpDigestClientCredential.ClientCredential
  fullName: HttpDigestClientCredential.ClientCredential
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: Gets or sets the network credential to be used for digest-based authentication.
  remarks: If not specified, the default thread credential will be used.
  example:
  - "The following code examples show how to authenticate the client as a different principal.  \n  \n This is how to change the properties of the instance of the <xref:System.Net.NetworkCredential> class that is returned by this property.  \n  \n [!code-csharp[S_UE_HttpDigestClientCredential#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_httpdigestclientcredential/cs/source.cs#2)]  \n  \n And here is how to create a new instance of the <xref:System.Net.NetworkCredential> class and assign it to this property.  \n  \n [!code-csharp[S_UE_HttpDigestClientCredential#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_httpdigestclientcredential/cs/source.cs#3)]"
  syntax:
    content: public System.Net.NetworkCredential ClientCredential { get; set; }
    return:
      type: System.Net.NetworkCredential
      description: The <xref href="System.Net.NetworkCredential"></xref> to be used for digest-based authentication.
  overload: System.ServiceModel.Security.HttpDigestClientCredential.ClientCredential*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/HttpDigestClientCredential.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.Security.HttpDigestClientCredential.AllowedImpersonationLevel
  parent: System.ServiceModel.Security.HttpDigestClientCredential
  isExternal: false
  name: AllowedImpersonationLevel
  nameWithType: HttpDigestClientCredential.AllowedImpersonationLevel
  fullName: HttpDigestClientCredential.AllowedImpersonationLevel
- uid: System.Security.Principal.TokenImpersonationLevel
  parent: System.Security.Principal
  isExternal: false
  name: TokenImpersonationLevel
  nameWithType: TokenImpersonationLevel
  fullName: System.Security.Principal.TokenImpersonationLevel
- uid: System.ServiceModel.Security.HttpDigestClientCredential.ClientCredential
  parent: System.ServiceModel.Security.HttpDigestClientCredential
  isExternal: false
  name: ClientCredential
  nameWithType: HttpDigestClientCredential.ClientCredential
  fullName: HttpDigestClientCredential.ClientCredential
- uid: System.Net.NetworkCredential
  parent: System.Net
  isExternal: false
  name: NetworkCredential
  nameWithType: NetworkCredential
  fullName: System.Net.NetworkCredential
- uid: System.ServiceModel.Security.HttpDigestClientCredential.AllowedImpersonationLevel*
  parent: System.ServiceModel.Security.HttpDigestClientCredential
  isExternal: false
  name: AllowedImpersonationLevel
  nameWithType: HttpDigestClientCredential.AllowedImpersonationLevel
  fullName: HttpDigestClientCredential.AllowedImpersonationLevel
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/HttpDigestClientCredential.xml
- uid: System.ServiceModel.Security.HttpDigestClientCredential.ClientCredential*
  parent: System.ServiceModel.Security.HttpDigestClientCredential
  isExternal: false
  name: ClientCredential
  nameWithType: HttpDigestClientCredential.ClientCredential
  fullName: HttpDigestClientCredential.ClientCredential
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/HttpDigestClientCredential.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
