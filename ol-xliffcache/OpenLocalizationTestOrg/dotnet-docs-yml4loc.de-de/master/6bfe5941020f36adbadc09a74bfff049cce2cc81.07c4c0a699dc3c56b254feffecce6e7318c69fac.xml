{"nodes":[{"content":"Converts instances of <xref href=\"System.String\"></xref> to and from instances of <xref href=\"System.DateTime\"></xref>.","nodes":[{"pos":[0,119],"content":"Converts instances of <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> to and from instances of <ph id=\"ph2\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph>.","source":"Converts instances of <xref href=\"System.String\"></xref> to and from instances of <xref href=\"System.DateTime\"></xref>."}],"pos":[1006,1126],"yaml":true},{"content":"<xref:System.Windows.Markup.ValueSerializer> is used rather than <xref:System.ComponentModel.TypeConverter> for cases where type conversion requires additional state. <xref:System.Windows.Markup.DateTimeValueSerializer> is not attributed to a type with <xref:System.Windows.Markup.ValueSerializerAttribute>. This is because <xref:System.DateTime> is in mscorlib, and mscorlib cannot take dependencies on attribute classes that it does not define itself. Instead, usage of <xref:System.Windows.Markup.DateTimeValueSerializer> is special-cased into XAML processor behavior in .NET Framework XAML Services behavior.  \n  \n In previous versions of the .NET Framework, this class existed in the WPF-specific assembly WindowsBase. In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.DateTimeValueSerializer> is in the System.Xaml assembly. See [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).  \n  \n<a name=\"xamlTextUsage_DateTimeValueSerializer\"></a>   \n## XAML Text Usage","nodes":[{"pos":[0,612],"content":"<xref:System.Windows.Markup.ValueSerializer> is used rather than <xref:System.ComponentModel.TypeConverter> for cases where type conversion requires additional state. <xref:System.Windows.Markup.DateTimeValueSerializer> is not attributed to a type with <xref:System.Windows.Markup.ValueSerializerAttribute>. This is because <xref:System.DateTime> is in mscorlib, and mscorlib cannot take dependencies on attribute classes that it does not define itself. Instead, usage of <xref:System.Windows.Markup.DateTimeValueSerializer> is special-cased into XAML processor behavior in .NET Framework XAML Services behavior.","nodes":[{"content":"<xref:System.Windows.Markup.ValueSerializer> is used rather than <xref:System.ComponentModel.TypeConverter> for cases where type conversion requires additional state. <xref:System.Windows.Markup.DateTimeValueSerializer> is not attributed to a type with <xref:System.Windows.Markup.ValueSerializerAttribute>. This is because <xref:System.DateTime> is in mscorlib, and mscorlib cannot take dependencies on attribute classes that it does not define itself. Instead, usage of <xref:System.Windows.Markup.DateTimeValueSerializer> is special-cased into XAML processor behavior in .NET Framework XAML Services behavior.","pos":[0,612],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Markup.ValueSerializer&gt;</ph> is used rather than <ph id=\"ph2\">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> for cases where type conversion requires additional state.","pos":[0,166],"source":"<xref:System.Windows.Markup.ValueSerializer> is used rather than <xref:System.ComponentModel.TypeConverter> for cases where type conversion requires additional state."},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Markup.DateTimeValueSerializer&gt;</ph> is not attributed to a type with <ph id=\"ph2\">&lt;xref:System.Windows.Markup.ValueSerializerAttribute&gt;</ph>.","pos":[167,307],"source":" <xref:System.Windows.Markup.DateTimeValueSerializer> is not attributed to a type with <xref:System.Windows.Markup.ValueSerializerAttribute>."},{"content":"This is because <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> is in mscorlib, and mscorlib cannot take dependencies on attribute classes that it does not define itself.","pos":[308,453],"source":" This is because <xref:System.DateTime> is in mscorlib, and mscorlib cannot take dependencies on attribute classes that it does not define itself."},{"content":"Instead, usage of <ph id=\"ph1\">&lt;xref:System.Windows.Markup.DateTimeValueSerializer&gt;</ph> is special-cased into XAML processor behavior in .NET Framework XAML Services behavior.","pos":[454,612],"source":" Instead, usage of <xref:System.Windows.Markup.DateTimeValueSerializer> is special-cased into XAML processor behavior in .NET Framework XAML Services behavior."}]}]},{"pos":[619,988],"content":"In previous versions of the .NET Framework, this class existed in the WPF-specific assembly WindowsBase. In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.DateTimeValueSerializer> is in the System.Xaml assembly. See [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).","nodes":[{"content":"In previous versions of the .NET Framework, this class existed in the WPF-specific assembly WindowsBase.","pos":[0,104]},{"content":"In <ph id=\"ph1\">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, <ph id=\"ph2\">&lt;xref:System.Windows.Markup.DateTimeValueSerializer&gt;</ph> is in the System.Xaml assembly.","pos":[105,249],"source":" In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.DateTimeValueSerializer> is in the System.Xaml assembly."},{"content":"See <bpt id=\"p1\">[</bpt>Types Migrated from WPF to System.Xaml<ept id=\"p1\">](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)</ept>.","pos":[250,369],"source":" See [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)."}]},{"pos":[1053,1068],"content":"XAML Text Usage","linkify":"XAML Text Usage","nodes":[{"content":"XAML Text Usage","pos":[0,15]}]}],"pos":[1137,2215],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Markup.DateTimeValueSerializer\"></xref> class.","nodes":[{"pos":[0,107],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Markup.DateTimeValueSerializer\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Windows.Markup.DateTimeValueSerializer\"></xref> class."}],"pos":[4423,4531],"yaml":true},{"content":"Determines if the specified <xref href=\"System.String\"></xref> can be convert to an instance of <xref href=\"System.DateTime\"></xref>.","nodes":[{"pos":[0,133],"content":"Determines if the specified <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> can be convert to an instance of <ph id=\"ph2\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph>.","source":"Determines if the specified <xref href=\"System.String\"></xref> can be convert to an instance of <xref href=\"System.DateTime\"></xref>."}],"pos":[5970,6104],"yaml":true},{"content":"This implementation always returns `true`.","nodes":[{"pos":[0,42],"content":"This implementation always returns <ph id=\"ph1\">`true`</ph>.","source":"This implementation always returns `true`."}],"pos":[6115,6158],"yaml":true,"extradata":"MT"},{"content":"The string to evaluate for conversion.","nodes":[{"pos":[0,38],"content":"The string to evaluate for conversion.","nodes":[{"content":"The string to evaluate for conversion.","pos":[0,38]}]}],"pos":[6371,6410],"yaml":true},{"content":"Context information that is used for conversion.","nodes":[{"pos":[0,48],"content":"Context information that is used for conversion.","nodes":[{"content":"Context information that is used for conversion.","pos":[0,48]}]}],"pos":[6505,6554],"yaml":true},{"content":"`true` if the value can be converted; otherwise, `false`.","nodes":[{"pos":[0,57],"content":"<ph id=\"ph1\">`true`</ph> if the value can be converted; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the value can be converted; otherwise, `false`."}],"pos":[6612,6672],"yaml":true},{"content":"Determines if the specified object can be converted to a <xref href=\"System.String\"></xref>.","nodes":[{"pos":[0,92],"content":"Determines if the specified object can be converted to a <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph>.","source":"Determines if the specified object can be converted to a <xref href=\"System.String\"></xref>."}],"pos":[8037,8130],"yaml":true},{"content":"This implementation returns `true` only if the passed `value` is of type <xref:System.DateTime>.","nodes":[{"pos":[0,96],"content":"This implementation returns <ph id=\"ph1\">`true`</ph> only if the passed <ph id=\"ph2\">`value`</ph> is of type <ph id=\"ph3\">&lt;xref:System.DateTime&gt;</ph>.","source":"This implementation returns `true` only if the passed `value` is of type <xref:System.DateTime>."}],"pos":[8141,8238],"yaml":true,"extradata":"MT"},{"content":"The object to evaluate for conversion.","nodes":[{"pos":[0,38],"content":"The object to evaluate for conversion.","nodes":[{"content":"The object to evaluate for conversion.","pos":[0,38]}]}],"pos":[8449,8488],"yaml":true},{"content":"Context information that is used for conversion.","nodes":[{"pos":[0,48],"content":"Context information that is used for conversion.","nodes":[{"content":"Context information that is used for conversion.","pos":[0,48]}]}],"pos":[8583,8632],"yaml":true},{"content":"`true` if <code>value</code> can be converted into a <xref href=\"System.String\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,108],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> can be converted into a <ph id=\"ph3\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>value</code> can be converted into a <xref href=\"System.String\"></xref>; otherwise, `false`."}],"pos":[8690,8801],"yaml":true},{"content":"Converts a <xref href=\"System.String\"></xref> into a <xref href=\"System.DateTime\"></xref>.","nodes":[{"pos":[0,90],"content":"Converts a <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> into a <ph id=\"ph2\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph>.","source":"Converts a <xref href=\"System.String\"></xref> into a <xref href=\"System.DateTime\"></xref>."}],"pos":[10158,10249],"yaml":true},{"content":"An empty string returns <xref:System.DateTime?displayProperty=fullName>.  \n  \n The current implementation uses <xref:System.DateTime.Parse%2A> internally, and also uses the following <xref:System.Globalization.DateTimeStyles>: `DateTimeStyles.RoundtripKind | DateTimeStyles.NoCurrentDateDefault | DateTimeStyles.AllowLeadingWhite | DateTimeStyles.AllowTrailingWhite`.","nodes":[{"pos":[0,72],"content":"An empty string returns <xref:System.DateTime?displayProperty=fullName>.","nodes":[{"content":"An empty string returns <ph id=\"ph1\">&lt;xref:System.DateTime?displayProperty=fullName&gt;</ph>.","pos":[0,72],"source":"An empty string returns <xref:System.DateTime?displayProperty=fullName>."}]},{"pos":[79,367],"content":"The current implementation uses <ph id=\"ph1\">&lt;xref:System.DateTime.Parse%2A&gt;</ph> internally, and also uses the following <ph id=\"ph2\">&lt;xref:System.Globalization.DateTimeStyles&gt;</ph>: <ph id=\"ph3\">`DateTimeStyles.RoundtripKind | DateTimeStyles.NoCurrentDateDefault | DateTimeStyles.AllowLeadingWhite | DateTimeStyles.AllowTrailingWhite`</ph>.","source":"The current implementation uses <xref:System.DateTime.Parse%2A> internally, and also uses the following <xref:System.Globalization.DateTimeStyles>: `DateTimeStyles.RoundtripKind | DateTimeStyles.NoCurrentDateDefault | DateTimeStyles.AllowLeadingWhite | DateTimeStyles.AllowTrailingWhite`."}],"pos":[10260,10632],"yaml":true,"extradata":"MT"},{"content":"The string to convert into a <xref href=\"System.DateTime\"></xref>.","nodes":[{"pos":[0,66],"content":"The string to convert into a <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph>.","source":"The string to convert into a <xref href=\"System.DateTime\"></xref>."}],"pos":[10844,10911],"yaml":true},{"content":"Context information that is used for conversion.","nodes":[{"pos":[0,48],"content":"Context information that is used for conversion.","nodes":[{"content":"Context information that is used for conversion.","pos":[0,48]}]}],"pos":[11006,11055],"yaml":true},{"content":"A new instance of <xref href=\"System.DateTime\"></xref> based on the supplied <code>value</code>.","nodes":[{"pos":[0,96],"content":"A new instance of <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> based on the supplied <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A new instance of <xref href=\"System.DateTime\"></xref> based on the supplied <code>value</code>."}],"pos":[11112,11209],"yaml":true},{"content":"<code>value</code> is `null`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>value</code> is `null`."}],"pos":[11402,11432],"yaml":true},{"content":"Converts an instance of <xref href=\"System.DateTime\"></xref> to a <xref href=\"System.String\"></xref>.","nodes":[{"pos":[0,101],"content":"Converts an instance of <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> to a <ph id=\"ph2\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph>.","source":"Converts an instance of <xref href=\"System.DateTime\"></xref> to a <xref href=\"System.String\"></xref>."}],"pos":[12682,12784],"yaml":true},{"content":"`context` is not used by this implementation.  \n  \n String representations for dates as found in XAML value processing are based on the `en-US` culture. This is because XAML processing for culture-sensitive information is split conceptually between compile-time and run-time phases and must use a known string representation throughout. For more information, see [WPF Globalization and Localization Overview](~/docs/framework/wpf/advanced/wpf-globalization-and-localization-overview.md).  \n  \n The current implementation uses a format string that is adjusted depending on whether aspects of the supplied <xref:System.DateTime> have values. For example, if there is no value in <xref:System.TimeSpan.TotalSeconds%2A>, the format string is in the form `yyyy-MM-dd` rather than writing out full-verbosity zero values for the time component.","nodes":[{"pos":[0,45],"content":"<ph id=\"ph1\">`context`</ph> is not used by this implementation.","source":"`context` is not used by this implementation."},{"pos":[52,487],"content":"String representations for dates as found in XAML value processing are based on the `en-US` culture. This is because XAML processing for culture-sensitive information is split conceptually between compile-time and run-time phases and must use a known string representation throughout. For more information, see [WPF Globalization and Localization Overview](~/docs/framework/wpf/advanced/wpf-globalization-and-localization-overview.md).","nodes":[{"content":"String representations for dates as found in XAML value processing are based on the <ph id=\"ph1\">`en-US`</ph> culture.","pos":[0,100],"source":"String representations for dates as found in XAML value processing are based on the `en-US` culture."},{"content":"This is because XAML processing for culture-sensitive information is split conceptually between compile-time and run-time phases and must use a known string representation throughout.","pos":[101,284]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>WPF Globalization and Localization Overview<ept id=\"p1\">](~/docs/framework/wpf/advanced/wpf-globalization-and-localization-overview.md)</ept>.","pos":[285,435],"source":" For more information, see [WPF Globalization and Localization Overview](~/docs/framework/wpf/advanced/wpf-globalization-and-localization-overview.md)."}]},{"pos":[494,837],"content":"The current implementation uses a format string that is adjusted depending on whether aspects of the supplied <xref:System.DateTime> have values. For example, if there is no value in <xref:System.TimeSpan.TotalSeconds%2A>, the format string is in the form `yyyy-MM-dd` rather than writing out full-verbosity zero values for the time component.","nodes":[{"content":"The current implementation uses a format string that is adjusted depending on whether aspects of the supplied <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> have values.","pos":[0,145],"source":"The current implementation uses a format string that is adjusted depending on whether aspects of the supplied <xref:System.DateTime> have values."},{"content":"For example, if there is no value in <ph id=\"ph1\">&lt;xref:System.TimeSpan.TotalSeconds%2A&gt;</ph>, the format string is in the form <ph id=\"ph2\">`yyyy-MM-dd`</ph> rather than writing out full-verbosity zero values for the time component.","pos":[146,343],"source":" For example, if there is no value in <xref:System.TimeSpan.TotalSeconds%2A>, the format string is in the form `yyyy-MM-dd` rather than writing out full-verbosity zero values for the time component."}]}],"pos":[12795,13639],"yaml":true,"extradata":"MT"},{"content":"The object to convert into a string.","nodes":[{"pos":[0,36],"content":"The object to convert into a string.","nodes":[{"content":"The object to convert into a string.","pos":[0,36]}]}],"pos":[13849,13886],"yaml":true},{"content":"Context information that is used for conversion.","nodes":[{"pos":[0,48],"content":"Context information that is used for conversion.","nodes":[{"content":"Context information that is used for conversion.","pos":[0,48]}]}],"pos":[13981,14030],"yaml":true},{"content":"A string representation of the specified <xref href=\"System.DateTime\"></xref>.","nodes":[{"pos":[0,78],"content":"A string representation of the specified <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph>.","source":"A string representation of the specified <xref href=\"System.DateTime\"></xref>."}],"pos":[14087,14166],"yaml":true},{"content":"<code>value</code> is not a <xref href=\"System.DateTime\"></xref> or is `null`.","nodes":[{"pos":[0,78],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is not a <ph id=\"ph2\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> or is <ph id=\"ph3\">`null`</ph>.","source":"<code>value</code> is not a <xref href=\"System.DateTime\"></xref> or is `null`."}],"pos":[14357,14436],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Markup.DateTimeValueSerializer\n  commentId: T:System.Windows.Markup.DateTimeValueSerializer\n  id: DateTimeValueSerializer\n  children:\n  - System.Windows.Markup.DateTimeValueSerializer.#ctor\n  - System.Windows.Markup.DateTimeValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)\n  - System.Windows.Markup.DateTimeValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)\n  - System.Windows.Markup.DateTimeValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)\n  - System.Windows.Markup.DateTimeValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)\n  langs:\n  - csharp\n  name: DateTimeValueSerializer\n  nameWithType: DateTimeValueSerializer\n  fullName: System.Windows.Markup.DateTimeValueSerializer\n  type: Class\n  assemblies:\n  - System.Xaml\n  namespace: System.Windows.Markup\n  summary: Converts instances of <xref href=\"System.String\"></xref> to and from instances of <xref href=\"System.DateTime\"></xref>.\n  remarks: \"<xref:System.Windows.Markup.ValueSerializer> is used rather than <xref:System.ComponentModel.TypeConverter> for cases where type conversion requires additional state. <xref:System.Windows.Markup.DateTimeValueSerializer> is not attributed to a type with <xref:System.Windows.Markup.ValueSerializerAttribute>. This is because <xref:System.DateTime> is in mscorlib, and mscorlib cannot take dependencies on attribute classes that it does not define itself. Instead, usage of <xref:System.Windows.Markup.DateTimeValueSerializer> is special-cased into XAML processor behavior in .NET Framework XAML Services behavior.  \\n  \\n In previous versions of the .NET Framework, this class existed in the WPF-specific assembly WindowsBase. In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.DateTimeValueSerializer> is in the System.Xaml assembly. See [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).  \\n  \\n<a name=\\\"xamlTextUsage_DateTimeValueSerializer\\\"></a>   \\n## XAML Text Usage\"\n  syntax:\n    content: 'public class DateTimeValueSerializer : System.Windows.Markup.ValueSerializer'\n  inheritance:\n  - System.Object\n  - System.Windows.Markup.ValueSerializer\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Windows.Markup.ValueSerializer.GetConvertFromException(System.Object)\n  - System.Windows.Markup.ValueSerializer.GetConvertToException(System.Object,System.Type)\n  - System.Windows.Markup.ValueSerializer.GetSerializerFor(System.ComponentModel.PropertyDescriptor)\n  - System.Windows.Markup.ValueSerializer.GetSerializerFor(System.ComponentModel.PropertyDescriptor,System.Windows.Markup.IValueSerializerContext)\n  - System.Windows.Markup.ValueSerializer.GetSerializerFor(System.Type)\n  - System.Windows.Markup.ValueSerializer.GetSerializerFor(System.Type,System.Windows.Markup.IValueSerializerContext)\n  - System.Windows.Markup.ValueSerializer.TypeReferences(System.Object,System.Windows.Markup.IValueSerializerContext)\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/DateTimeValueSerializer.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Windows.Markup.DateTimeValueSerializer.#ctor\n  commentId: M:System.Windows.Markup.DateTimeValueSerializer.#ctor\n  id: '#ctor'\n  parent: System.Windows.Markup.DateTimeValueSerializer\n  langs:\n  - csharp\n  name: DateTimeValueSerializer()\n  nameWithType: DateTimeValueSerializer.DateTimeValueSerializer()\n  fullName: DateTimeValueSerializer.DateTimeValueSerializer()\n  type: Constructor\n  assemblies:\n  - System.Xaml\n  namespace: System.Windows.Markup\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Markup.DateTimeValueSerializer\"></xref> class.\n  syntax:\n    content: public DateTimeValueSerializer ();\n    parameters: []\n  overload: System.Windows.Markup.DateTimeValueSerializer.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/DateTimeValueSerializer.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Windows.Markup.DateTimeValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)\n  commentId: M:System.Windows.Markup.DateTimeValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)\n  id: CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)\n  parent: System.Windows.Markup.DateTimeValueSerializer\n  langs:\n  - csharp\n  name: CanConvertFromString(String, IValueSerializerContext)\n  nameWithType: DateTimeValueSerializer.CanConvertFromString(String, IValueSerializerContext)\n  fullName: DateTimeValueSerializer.CanConvertFromString(String, IValueSerializerContext)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Windows.Markup\n  summary: Determines if the specified <xref href=\"System.String\"></xref> can be convert to an instance of <xref href=\"System.DateTime\"></xref>.\n  remarks: This implementation always returns `true`.\n  syntax:\n    content: public override bool CanConvertFromString (string value, System.Windows.Markup.IValueSerializerContext context);\n    parameters:\n    - id: value\n      type: System.String\n      description: The string to evaluate for conversion.\n    - id: context\n      type: System.Windows.Markup.IValueSerializerContext\n      description: Context information that is used for conversion.\n    return:\n      type: System.Boolean\n      description: '`true` if the value can be converted; otherwise, `false`.'\n  overload: System.Windows.Markup.DateTimeValueSerializer.CanConvertFromString*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/DateTimeValueSerializer.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Windows.Markup.DateTimeValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)\n  commentId: M:System.Windows.Markup.DateTimeValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)\n  id: CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)\n  parent: System.Windows.Markup.DateTimeValueSerializer\n  langs:\n  - csharp\n  name: CanConvertToString(Object, IValueSerializerContext)\n  nameWithType: DateTimeValueSerializer.CanConvertToString(Object, IValueSerializerContext)\n  fullName: DateTimeValueSerializer.CanConvertToString(Object, IValueSerializerContext)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Windows.Markup\n  summary: Determines if the specified object can be converted to a <xref href=\"System.String\"></xref>.\n  remarks: This implementation returns `true` only if the passed `value` is of type <xref:System.DateTime>.\n  syntax:\n    content: public override bool CanConvertToString (object value, System.Windows.Markup.IValueSerializerContext context);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The object to evaluate for conversion.\n    - id: context\n      type: System.Windows.Markup.IValueSerializerContext\n      description: Context information that is used for conversion.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>value</code> can be converted into a <xref href=\"System.String\"></xref>; otherwise, `false`.'\n  overload: System.Windows.Markup.DateTimeValueSerializer.CanConvertToString*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/DateTimeValueSerializer.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Windows.Markup.DateTimeValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)\n  commentId: M:System.Windows.Markup.DateTimeValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)\n  id: ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)\n  parent: System.Windows.Markup.DateTimeValueSerializer\n  langs:\n  - csharp\n  name: ConvertFromString(String, IValueSerializerContext)\n  nameWithType: DateTimeValueSerializer.ConvertFromString(String, IValueSerializerContext)\n  fullName: DateTimeValueSerializer.ConvertFromString(String, IValueSerializerContext)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Windows.Markup\n  summary: Converts a <xref href=\"System.String\"></xref> into a <xref href=\"System.DateTime\"></xref>.\n  remarks: \"An empty string returns <xref:System.DateTime?displayProperty=fullName>.  \\n  \\n The current implementation uses <xref:System.DateTime.Parse%2A> internally, and also uses the following <xref:System.Globalization.DateTimeStyles>: `DateTimeStyles.RoundtripKind | DateTimeStyles.NoCurrentDateDefault | DateTimeStyles.AllowLeadingWhite | DateTimeStyles.AllowTrailingWhite`.\"\n  syntax:\n    content: public override object ConvertFromString (string value, System.Windows.Markup.IValueSerializerContext context);\n    parameters:\n    - id: value\n      type: System.String\n      description: The string to convert into a <xref href=\"System.DateTime\"></xref>.\n    - id: context\n      type: System.Windows.Markup.IValueSerializerContext\n      description: Context information that is used for conversion.\n    return:\n      type: System.Object\n      description: A new instance of <xref href=\"System.DateTime\"></xref> based on the supplied <code>value</code>.\n  overload: System.Windows.Markup.DateTimeValueSerializer.ConvertFromString*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>value</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/DateTimeValueSerializer.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Windows.Markup.DateTimeValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)\n  commentId: M:System.Windows.Markup.DateTimeValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)\n  id: ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)\n  parent: System.Windows.Markup.DateTimeValueSerializer\n  langs:\n  - csharp\n  name: ConvertToString(Object, IValueSerializerContext)\n  nameWithType: DateTimeValueSerializer.ConvertToString(Object, IValueSerializerContext)\n  fullName: DateTimeValueSerializer.ConvertToString(Object, IValueSerializerContext)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Windows.Markup\n  summary: Converts an instance of <xref href=\"System.DateTime\"></xref> to a <xref href=\"System.String\"></xref>.\n  remarks: \"`context` is not used by this implementation.  \\n  \\n String representations for dates as found in XAML value processing are based on the `en-US` culture. This is because XAML processing for culture-sensitive information is split conceptually between compile-time and run-time phases and must use a known string representation throughout. For more information, see [WPF Globalization and Localization Overview](~/docs/framework/wpf/advanced/wpf-globalization-and-localization-overview.md).  \\n  \\n The current implementation uses a format string that is adjusted depending on whether aspects of the supplied <xref:System.DateTime> have values. For example, if there is no value in <xref:System.TimeSpan.TotalSeconds%2A>, the format string is in the form `yyyy-MM-dd` rather than writing out full-verbosity zero values for the time component.\"\n  syntax:\n    content: public override string ConvertToString (object value, System.Windows.Markup.IValueSerializerContext context);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The object to convert into a string.\n    - id: context\n      type: System.Windows.Markup.IValueSerializerContext\n      description: Context information that is used for conversion.\n    return:\n      type: System.String\n      description: A string representation of the specified <xref href=\"System.DateTime\"></xref>.\n  overload: System.Windows.Markup.DateTimeValueSerializer.ConvertToString*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>value</code> is not a <xref href=\"System.DateTime\"></xref> or is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/DateTimeValueSerializer.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\nreferences:\n- uid: System.Windows.Markup.ValueSerializer\n  parent: System.Windows.Markup\n  isExternal: false\n  name: ValueSerializer\n  nameWithType: ValueSerializer\n  fullName: System.Windows.Markup.ValueSerializer\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  nameWithType: NotSupportedException\n  fullName: System.NotSupportedException\n- uid: System.Windows.Markup.DateTimeValueSerializer.#ctor\n  parent: System.Windows.Markup.DateTimeValueSerializer\n  isExternal: false\n  name: DateTimeValueSerializer()\n  nameWithType: DateTimeValueSerializer.DateTimeValueSerializer()\n  fullName: DateTimeValueSerializer.DateTimeValueSerializer()\n- uid: System.Windows.Markup.DateTimeValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)\n  parent: System.Windows.Markup.DateTimeValueSerializer\n  isExternal: false\n  name: CanConvertFromString(String, IValueSerializerContext)\n  nameWithType: DateTimeValueSerializer.CanConvertFromString(String, IValueSerializerContext)\n  fullName: DateTimeValueSerializer.CanConvertFromString(String, IValueSerializerContext)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Markup.IValueSerializerContext\n  parent: System.Windows.Markup\n  isExternal: false\n  name: IValueSerializerContext\n  nameWithType: IValueSerializerContext\n  fullName: System.Windows.Markup.IValueSerializerContext\n- uid: System.Windows.Markup.DateTimeValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)\n  parent: System.Windows.Markup.DateTimeValueSerializer\n  isExternal: false\n  name: CanConvertToString(Object, IValueSerializerContext)\n  nameWithType: DateTimeValueSerializer.CanConvertToString(Object, IValueSerializerContext)\n  fullName: DateTimeValueSerializer.CanConvertToString(Object, IValueSerializerContext)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Markup.DateTimeValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)\n  parent: System.Windows.Markup.DateTimeValueSerializer\n  isExternal: false\n  name: ConvertFromString(String, IValueSerializerContext)\n  nameWithType: DateTimeValueSerializer.ConvertFromString(String, IValueSerializerContext)\n  fullName: DateTimeValueSerializer.ConvertFromString(String, IValueSerializerContext)\n- uid: System.Windows.Markup.DateTimeValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)\n  parent: System.Windows.Markup.DateTimeValueSerializer\n  isExternal: false\n  name: ConvertToString(Object, IValueSerializerContext)\n  nameWithType: DateTimeValueSerializer.ConvertToString(Object, IValueSerializerContext)\n  fullName: DateTimeValueSerializer.ConvertToString(Object, IValueSerializerContext)\n- uid: System.Windows.Markup.DateTimeValueSerializer.#ctor*\n  parent: System.Windows.Markup.DateTimeValueSerializer\n  isExternal: false\n  name: DateTimeValueSerializer\n  nameWithType: DateTimeValueSerializer.DateTimeValueSerializer\n  fullName: DateTimeValueSerializer.DateTimeValueSerializer\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/DateTimeValueSerializer.xml\n- uid: System.Windows.Markup.DateTimeValueSerializer.CanConvertFromString*\n  parent: System.Windows.Markup.DateTimeValueSerializer\n  isExternal: false\n  name: CanConvertFromString\n  nameWithType: DateTimeValueSerializer.CanConvertFromString\n  fullName: DateTimeValueSerializer.CanConvertFromString\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/DateTimeValueSerializer.xml\n- uid: System.Windows.Markup.DateTimeValueSerializer.CanConvertToString*\n  parent: System.Windows.Markup.DateTimeValueSerializer\n  isExternal: false\n  name: CanConvertToString\n  nameWithType: DateTimeValueSerializer.CanConvertToString\n  fullName: DateTimeValueSerializer.CanConvertToString\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/DateTimeValueSerializer.xml\n- uid: System.Windows.Markup.DateTimeValueSerializer.ConvertFromString*\n  parent: System.Windows.Markup.DateTimeValueSerializer\n  isExternal: false\n  name: ConvertFromString\n  nameWithType: DateTimeValueSerializer.ConvertFromString\n  fullName: DateTimeValueSerializer.ConvertFromString\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/DateTimeValueSerializer.xml\n- uid: System.Windows.Markup.DateTimeValueSerializer.ConvertToString*\n  parent: System.Windows.Markup.DateTimeValueSerializer\n  isExternal: false\n  name: ConvertToString\n  nameWithType: DateTimeValueSerializer.ConvertToString\n  fullName: DateTimeValueSerializer.ConvertToString\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/DateTimeValueSerializer.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Windows.Markup.ValueSerializer.GetConvertFromException(System.Object)\n  parent: System.Windows.Markup.ValueSerializer\n  isExternal: false\n  name: GetConvertFromException(Object)\n  nameWithType: ValueSerializer.GetConvertFromException(Object)\n  fullName: ValueSerializer.GetConvertFromException(Object)\n- uid: System.Windows.Markup.ValueSerializer.GetConvertToException(System.Object,System.Type)\n  parent: System.Windows.Markup.ValueSerializer\n  isExternal: false\n  name: GetConvertToException(Object, Type)\n  nameWithType: ValueSerializer.GetConvertToException(Object, Type)\n  fullName: ValueSerializer.GetConvertToException(Object, Type)\n- uid: System.Windows.Markup.ValueSerializer.GetSerializerFor(System.ComponentModel.PropertyDescriptor)\n  parent: System.Windows.Markup.ValueSerializer\n  isExternal: false\n  name: GetSerializerFor(PropertyDescriptor)\n  nameWithType: ValueSerializer.GetSerializerFor(PropertyDescriptor)\n  fullName: ValueSerializer.GetSerializerFor(PropertyDescriptor)\n- uid: System.Windows.Markup.ValueSerializer.GetSerializerFor(System.Type)\n  parent: System.Windows.Markup.ValueSerializer\n  isExternal: false\n  name: GetSerializerFor(Type)\n  nameWithType: ValueSerializer.GetSerializerFor(Type)\n  fullName: ValueSerializer.GetSerializerFor(Type)\n- uid: System.Windows.Markup.ValueSerializer.GetSerializerFor(System.ComponentModel.PropertyDescriptor,System.Windows.Markup.IValueSerializerContext)\n  parent: System.Windows.Markup.ValueSerializer\n  isExternal: false\n  name: GetSerializerFor(PropertyDescriptor, IValueSerializerContext)\n  nameWithType: ValueSerializer.GetSerializerFor(PropertyDescriptor, IValueSerializerContext)\n  fullName: ValueSerializer.GetSerializerFor(PropertyDescriptor, IValueSerializerContext)\n- uid: System.Windows.Markup.ValueSerializer.GetSerializerFor(System.Type,System.Windows.Markup.IValueSerializerContext)\n  parent: System.Windows.Markup.ValueSerializer\n  isExternal: false\n  name: GetSerializerFor(Type, IValueSerializerContext)\n  nameWithType: ValueSerializer.GetSerializerFor(Type, IValueSerializerContext)\n  fullName: ValueSerializer.GetSerializerFor(Type, IValueSerializerContext)\n- uid: System.Windows.Markup.ValueSerializer.TypeReferences(System.Object,System.Windows.Markup.IValueSerializerContext)\n  parent: System.Windows.Markup.ValueSerializer\n  isExternal: false\n  name: TypeReferences(Object, IValueSerializerContext)\n  nameWithType: ValueSerializer.TypeReferences(Object, IValueSerializerContext)\n  fullName: ValueSerializer.TypeReferences(Object, IValueSerializerContext)\n"}