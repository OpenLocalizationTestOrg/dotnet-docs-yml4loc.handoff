### YamlMime:ManagedReference
items:
- uid: System.DateTime
  commentId: T:System.DateTime
  id: DateTime
  children:
  - System.DateTime.#ctor(System.Int64)
  - System.DateTime.#ctor(System.Int64,System.DateTimeKind)
  - System.DateTime.#ctor(System.Int32,System.Int32,System.Int32)
  - System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)
  - System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)
  - System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)
  - System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)
  - System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)
  - System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar,System.DateTimeKind)
  - System.DateTime.Add(System.TimeSpan)
  - System.DateTime.AddDays(System.Double)
  - System.DateTime.AddHours(System.Double)
  - System.DateTime.AddMilliseconds(System.Double)
  - System.DateTime.AddMinutes(System.Double)
  - System.DateTime.AddMonths(System.Int32)
  - System.DateTime.AddSeconds(System.Double)
  - System.DateTime.AddTicks(System.Int64)
  - System.DateTime.AddYears(System.Int32)
  - System.DateTime.Compare(System.DateTime,System.DateTime)
  - System.DateTime.CompareTo(System.DateTime)
  - System.DateTime.CompareTo(System.Object)
  - System.DateTime.Date
  - System.DateTime.Day
  - System.DateTime.DayOfWeek
  - System.DateTime.DayOfYear
  - System.DateTime.DaysInMonth(System.Int32,System.Int32)
  - System.DateTime.Equals(System.DateTime)
  - System.DateTime.Equals(System.Object)
  - System.DateTime.Equals(System.DateTime,System.DateTime)
  - System.DateTime.FromBinary(System.Int64)
  - System.DateTime.FromFileTime(System.Int64)
  - System.DateTime.FromFileTimeUtc(System.Int64)
  - System.DateTime.FromOADate(System.Double)
  - System.DateTime.GetDateTimeFormats
  - System.DateTime.GetDateTimeFormats(System.Char)
  - System.DateTime.GetDateTimeFormats(System.IFormatProvider)
  - System.DateTime.GetDateTimeFormats(System.Char,System.IFormatProvider)
  - System.DateTime.GetHashCode
  - System.DateTime.GetTypeCode
  - System.DateTime.Hour
  - System.DateTime.IsDaylightSavingTime
  - System.DateTime.IsLeapYear(System.Int32)
  - System.DateTime.Kind
  - System.DateTime.MaxValue
  - System.DateTime.Millisecond
  - System.DateTime.Minute
  - System.DateTime.MinValue
  - System.DateTime.Month
  - System.DateTime.Now
  - System.DateTime.op_Addition(System.DateTime,System.TimeSpan)
  - System.DateTime.op_Equality(System.DateTime,System.DateTime)
  - System.DateTime.op_GreaterThan(System.DateTime,System.DateTime)
  - System.DateTime.op_GreaterThanOrEqual(System.DateTime,System.DateTime)
  - System.DateTime.op_Inequality(System.DateTime,System.DateTime)
  - System.DateTime.op_LessThan(System.DateTime,System.DateTime)
  - System.DateTime.op_LessThanOrEqual(System.DateTime,System.DateTime)
  - System.DateTime.op_Subtraction(System.DateTime,System.DateTime)
  - System.DateTime.op_Subtraction(System.DateTime,System.TimeSpan)
  - System.DateTime.Parse(System.String)
  - System.DateTime.Parse(System.String,System.IFormatProvider)
  - System.DateTime.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)
  - System.DateTime.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)
  - System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)
  - System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider)
  - System.DateTime.Second
  - System.DateTime.SpecifyKind(System.DateTime,System.DateTimeKind)
  - System.DateTime.Subtract(System.DateTime)
  - System.DateTime.Subtract(System.TimeSpan)
  - System.DateTime.Ticks
  - System.DateTime.TimeOfDay
  - System.DateTime.ToBinary
  - System.DateTime.Today
  - System.DateTime.ToFileTime
  - System.DateTime.ToFileTimeUtc
  - System.DateTime.ToLocalTime
  - System.DateTime.ToLongDateString
  - System.DateTime.ToLongTimeString
  - System.DateTime.ToOADate
  - System.DateTime.ToShortDateString
  - System.DateTime.ToShortTimeString
  - System.DateTime.ToString(System.String,System.IFormatProvider)
  - System.DateTime.ToString(System.String)
  - System.DateTime.ToString(System.IFormatProvider)
  - System.DateTime.ToString
  - System.DateTime.ToUniversalTime
  - System.DateTime.TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)
  - System.DateTime.TryParse(System.String,System.DateTime@)
  - System.DateTime.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)
  - System.DateTime.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)
  - System.DateTime.UtcNow
  - System.DateTime.Year
  - System.DateTime.System#IComparable#CompareTo(System.Object)
  - System.DateTime.System#IConvertible#GetTypeCode
  - System.DateTime.System#IConvertible#ToBoolean(System.IFormatProvider)
  - System.DateTime.System#IConvertible#ToByte(System.IFormatProvider)
  - System.DateTime.System#IConvertible#ToChar(System.IFormatProvider)
  - System.DateTime.System#IConvertible#ToDateTime(System.IFormatProvider)
  - System.DateTime.System#IConvertible#ToDecimal(System.IFormatProvider)
  - System.DateTime.System#IConvertible#ToDouble(System.IFormatProvider)
  - System.DateTime.System#IConvertible#ToInt16(System.IFormatProvider)
  - System.DateTime.System#IConvertible#ToInt32(System.IFormatProvider)
  - System.DateTime.System#IConvertible#ToInt64(System.IFormatProvider)
  - System.DateTime.System#IConvertible#ToSByte(System.IFormatProvider)
  - System.DateTime.System#IConvertible#ToSingle(System.IFormatProvider)
  - System.DateTime.System#IConvertible#ToType(System.Type,System.IFormatProvider)
  - System.DateTime.System#IConvertible#ToUInt16(System.IFormatProvider)
  - System.DateTime.System#IConvertible#ToUInt32(System.IFormatProvider)
  - System.DateTime.System#IConvertible#ToUInt64(System.IFormatProvider)
  - System.DateTime.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  langs:
  - csharp
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  type: Struct
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Represents an instant in time, typically expressed as a date and time of day.
  remarks: "> [!NOTE]\n>  To view the .NET Framework source code for this type, see the [Reference Source](http://referencesource-beta.microsoft.com/#mscorlib/system/datetime.cs#df6b1eba7461813b). You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see [instructions](http://referencesource.microsoft.com/).  \n  \n The <xref:System.DateTime> value type represents dates and times with values ranging from 00:00:00 (midnight), January 1, 0001 Anno Domini (Common Era) through 11:59:59 P.M., December 31, 9999 A.D. (C.E.) in the Gregorian calendar.  \n  \n Time values are measured in 100-nanosecond units called ticks, and a particular date is the number of ticks since 12:00 midnight, January 1, 0001 A.D. (C.E.) in the <xref:System.Globalization.GregorianCalendar> calendar (excluding ticks that would be added by leap seconds). For example, a ticks value of 31241376000000000L represents the date, Friday, January 01, 0100 12:00:00 midnight. A <xref:System.DateTime> value is always expressed in the context of an explicit or default calendar.  \n  \n> [!NOTE]\n>  If you are working with a ticks value that you want to convert to some other time interval, such as minutes or seconds, you should use the <xref:System.TimeSpan.TicksPerDay?displayProperty=fullName>, <xref:System.TimeSpan.TicksPerHour?displayProperty=fullName>, <xref:System.TimeSpan.TicksPerMinute?displayProperty=fullName>, <xref:System.TimeSpan.TicksPerSecond?displayProperty=fullName>, or <xref:System.TimeSpan.TicksPerMillisecond?displayProperty=fullName> constant to perform the conversion. For example, to add the number of seconds represented by a specified number of ticks to the <xref:System.DateTime.Second%2A> component of a <xref:System.DateTime> value, you can use the expression `dateValue.Second + nTicks/Timespan.TicksPerSecond`.  \n  \n In this section:  \n  \n [Instantiating a DateTime object](#instantiating_datetime)   \n [DateTime values and their string representations](#datetime_values_strings)   \n [Converting strings to DateTime values](#parsing)   \n [Version considerations](#datetime_versions)   \n [DateTime values](#datetime_values)   \n [DateTime operations](#datetime_ops)   \n [DateTime resolution](#Resolution)   \n [DateTime vs. TimeSpan](#datetime_timespan)   \n [DateTime values and calendars](#Calendars)   \n [Persisting DateTime values](#Persisting)   \n [COM interop considerations](#com_interop)  \n  \n<a name=\"instantiating_datetime\"></a>   \n## Instantiating a DateTime object  \n You can create a new <xref:System.DateTime> value in any of the following ways:  \n  \n-   By calling any of the overloads of the <xref:System.DateTime> constructor that allow you to specify specific elements of the date and time value (such as the year, month, and day, or the number of ticks). The following statement illustrates a call to one of the <xref:System.DateTime> constructors to create a date with a specific year, month, day, hour, minute, and second.  \n  \n     [!code-csharp[System.DateTime.Instantiation#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Instantiation/cs/Instantiation1.cs#1)]\n     [!code-vb[System.DateTime.Instantiation#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Instantiation/vb/Instantiation1.vb#1)]  \n  \n-   By using any compiler-specific syntax for declaring date and time values. For example, the following Visual Basic statement initializes a new <xref:System.DateTime> value.  \n  \n     [!code-vb[System.DateTime.Instantiation#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Instantiation/vb/Instantiation1.vb#2)]  \n  \n-   By assigning the <xref:System.DateTime> object a date and time value returned by a property or method. The following example assigns the current date and time, the current Coordinated Universal Time (UTC) date and time, and the current date to three new <xref:System.DateTime> variables.  \n  \n     [!code-csharp[System.DateTime.Instantiation#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Instantiation/cs/Instantiation1.cs#3)]\n     [!code-vb[System.DateTime.Instantiation#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Instantiation/vb/Instantiation1.vb#3)]  \n  \n-   By parsing the string representation of a date and time value. The <xref:System.DateTime.Parse%2A>, <xref:System.DateTime.ParseExact%2A>, <xref:System.DateTime.TryParse%2A>, and <xref:System.DateTime.TryParseExact%2A> methods all convert a string to its equivalent date and time value. The following example uses the <xref:System.DateTime.Parse%2A> method to parse a string and convert it to a <xref:System.DateTime> value.  \n  \n     [!code-csharp[System.DateTime.Instantiation#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Instantiation/cs/Instantiation1.cs#4)]\n     [!code-vb[System.DateTime.Instantiation#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Instantiation/vb/Instantiation1.vb#4)]  \n  \n     Note that the <xref:System.DateTime.TryParse%2A> and <xref:System.DateTime.TryParseExact%2A> methods indicate whether a particular string contains a valid representation of a <xref:System.DateTime> value in addition to performing the conversion.  \n  \n-   By calling the <xref:System.DateTime> structure's implicit default constructor. (For details on the implicit default constructor of a value type, see [Value Types](~/docs/csharp/language-reference/keywords/value-types.md).) An approximate equivalent, for compilers that support it, is declaring a <xref:System.DateTime> value without explicitly assigning a date and time to it. The following example illustrates a call to the <xref:System.DateTime> implicit default constructor in C# and Visual Basic, as well as a <xref:System.DateTime> variable declaration with no assignment in Visual Basic.  \n  \n     [!code-csharp[System.DateTime.Instantiation#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Instantiation/cs/Instantiation1.cs#5)]\n     [!code-vb[System.DateTime.Instantiation#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Instantiation/vb/Instantiation1.vb#5)]  \n  \n<a name=\"datetime_values_strings\"></a>   \n## DateTime values and their string representations  \n Internally, all <xref:System.DateTime> values are represented as the number of ticks (the number of 100-nanosecond intervals) that have elapsed since 12:00:00 midnight, January 1, 0001. The actual <xref:System.DateTime> value is independent of the way in which that value appears when displayed in a user interface element or when written to a file. The appearance of a <xref:System.DateTime> value is the result of a formatting operation. Formatting is the process of converting a value to its string representation.  \n  \n Because the appearance of date and time values is dependent on such factors as culture, international standards, application requirements, and personal preference, the <xref:System.DateTime> structure offers a great deal of flexibility in formatting date and time values through the overloads of its <xref:System.DateTime.ToString%2A> method. The default <xref:System.DateTime.ToString?displayProperty=fullName> method returns the string representation of a date and time value using the current culture's short date and long time pattern. The following example uses the default <xref:System.DateTime.ToString?displayProperty=fullName> method to display the date and time using the short date and long time pattern for the en-US culture, the current culture on the computer on which the example was run.  \n  \n [!code-csharp[System.DateTime.Formatting#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Formatting/cs/Formatting1.cs#1)]\n [!code-vb[System.DateTime.Formatting#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Formatting/vb/Formatting1.vb#1)]  \n  \n The <xref:System.DateTime.ToString%28System.IFormatProvider%29?displayProperty=fullName> method returns the string representation of a date and time value using the short date and long time pattern of a specific culture. The following example uses the <xref:System.DateTime.ToString%28System.IFormatProvider%29?displayProperty=fullName> method to display the date and time using the short date and long time pattern for the fr-FR culture.  \n  \n [!code-csharp[System.DateTime.Formatting#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Formatting/cs/Formatting1.cs#2)]\n [!code-vb[System.DateTime.Formatting#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Formatting/vb/Formatting1.vb#2)]  \n  \n The <xref:System.DateTime.ToString%28System.String%29?displayProperty=fullName> method returns the string representation of the date and time in a format defined by a standard or custom format specifier and using the formatting conventions of the current culture. The following example uses the <xref:System.DateTime.ToString%28System.String%29?displayProperty=fullName> method to display the full date and time pattern for the en-US culture, the current culture on the computer on which the example was run.  \n  \n [!code-csharp[System.DateTime.Formatting#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Formatting/cs/Formatting1.cs#3)]\n [!code-vb[System.DateTime.Formatting#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Formatting/vb/Formatting1.vb#3)]  \n  \n The <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=fullName> method returns the string representation of the date and time in a format defined by a specific format specifier and using the formatting conventions of a specific culture. The following example uses the <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=fullName> method to display the full date and time pattern for the fr-FR culture.  \n  \n [!code-csharp[System.DateTime.Formatting#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Formatting/cs/Formatting1.cs#4)]\n [!code-vb[System.DateTime.Formatting#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Formatting/vb/Formatting1.vb#4)]  \n  \n For more information about formatting <xref:System.DateTime> values, see  [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).  \n  \n<a name=\"parsing\"></a>   \n## Converting strings to DateTime values  \n Parsing involves converting the string representation of a date and time to a <xref:System.DateTime> value. Typically, date and time strings have two different usages in applications:  \n  \n-   They represent a date and time that can take a variety of forms and that reflect the conventions of either the current culture or a specific culture. For example, an application may allow a user whose current culture is en-US to input a date value as \"12/15/2013\" or \"December 15, 2013\", and allow a user whose current culture is en-GB to input a date value as \"15/12/2013\" or \"15 December 2013\".  \n  \n-   They represent a date and time in a predefined format. For example, an application may serialize a date as \"20130103\" independently of the culture on which the app is running, or it may require that a date be input in the current culture's short date format.  \n  \n You can use the <xref:System.DateTime.Parse%2A> or <xref:System.DateTime.TryParse%2A> method to convert a string that might reflect one of the common date and time formats used by a culture to a <xref:System.DateTime> value. The following example shows how you can use <xref:System.DateTime.TryParse%2A> to convert date strings in a number of different culture-specific formats to a <xref:System.DateTime> value. It changes the current culture to English (Great Britain) and calls the <xref:System.DateTime.GetDateTimeFormats> method to generate an array of date and time strings. It then passes each element in the array to the <xref:System.DateTime.TryParse%2A> method. The output from the example shows that the parsing method was able to successfully convert each of the culture-specific date and time strings.  \n  \n [!code-csharp[System.DateTime.Parsing#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.parsing/cs/parsingex1.cs#1)]\n [!code-vb[System.DateTime.Parsing#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.parsing/vb/parsingex1.vb#1)]  \n  \n You can use the <xref:System.DateTime.TryParse%2A> and <xref:System.DateTime.TryParseExact%2A> methods to convert a date and time string that must match a particular format or formats to a <xref:System.DateTime> value. You specify the required format or formats as a parameter to the parsing methodby using one or more  or  date and time format strings. The following example uses the <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29> method to convert strings that must be either in a \"yyyyMMdd\" format or a \"HHmmss\" format to <xref:System.DateTime> values.  \n  \n [!code-csharp[System.DateTime.Parsing#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.parsing/cs/parsingex2.cs#2)]\n [!code-vb[System.DateTime.Parsing#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.parsing/vb/parsingex2.vb#2)]  \n  \n The <xref:System.DateTime.Parse%2A> and <xref:System.DateTime.ParseExact%2A> methods throw an exception if the string to be converted to a <xref:System.DateTime> value cannot be parsed. The <xref:System.DateTime.TryParse%2A> and <xref:System.DateTime.TryParseExact%2A> methods return a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed. Because the parsing operation for date and time strings, particularly if strings are input by users, tends to have a high failure rate, and because exception handling is expensive, you should use the <xref:System.DateTime.TryParse%2A> or <xref:System.DateTime.TryParseExact%2A> methods in scenarios where performance is important or conversions are subject to a high rate of failure.  \n  \n For more information about parsing date and time values, see [Parsing Date and Time Strings](~/docs/standard/base-types/parsing-datetime.md).  \n  \n<a name=\"datetime_versions\"></a>   \n## Version considerations  \n Prior to the .NET Framework version 2.0, the <xref:System.DateTime> structure contains a 64-bit field composed of an unused 2-bit field concatenated with a private `Ticks` field, which is a 62-bit unsigned field that contains the number of ticks that represent the date and time. The value of the `Ticks` field can be obtained with the <xref:System.DateTime.Ticks%2A> property.  \n  \n Starting with the .NET Framework 2.0, the <xref:System.DateTime> structure contains a 64-bit field composed of a private Kind field concatenated with the Ticks field. The Kind field is a 2-bit field that indicates whether the <xref:System.DateTime> structure represents a local time, a Coordinated Universal Time (UTC), or the time in an unspecified time zone. The Kind field is used when performing time conversions between time zones, but not for time comparisons or arithmetic. The value of the Kind field can be obtained with the <xref:System.DateTime.Kind%2A> property.  \n  \n> [!NOTE]\n>  An alternative to the <xref:System.DateTime> structure for working with date and time values in particular time zones is the <xref:System.DateTimeOffset> structure. The <xref:System.DateTimeOffset> structure stores date and time information in a private <xref:System.DateTime> field and the number of minutes by which that date and time differs from UTC in a private <xref:System.Int16> field. This makes it possible for a <xref:System.DateTimeOffset> value to reflect the time in a particular time zone, whereas a <xref:System.DateTime> value can unambiguously reflect only UTC and the local time zone's time. For a discussion about when to use the <xref:System.DateTime> structure or the <xref:System.DateTimeOffset> structure when working with date and time values, see [Choosing Between DateTime, DateTimeOffset, TimeSpan, and TimeZoneInfo](~/docs/standard/datetime/choosing-between-datetime.md).  \n  \n<a name=\"datetime_values\"></a>   \n## DateTime values  \n Descriptions of time values in the <xref:System.DateTime> type are often expressed using the Coordinated Universal Time (UTC) standard, which is the internationally recognized name for Greenwich Mean Time (GMT). Coordinated Universal Time is the time as measured at zero degrees longitude, the UTC origin point. Daylight saving time is not applicable to UTC.  \n  \n Local time is relative to a particular time zone. A time zone is associated with a time zone offset, which is the displacement of the time zone measured in hours from the UTC origin point. In addition, local time is optionally affected by daylight saving time, which adds or subtracts an hour from the length of a day. Consequently, local time is calculated by adding the time zone offset to UTC and adjusting for daylight saving time if necessary. The time zone offset at the UTC origin point is zero.  \n  \n UTC time is suitable for calculations, comparisons, and storing dates and time in files. Local time is appropriate for display in user interfaces of desktop applications. Time zone-aware applications (such as many Web applications) also need to work with a number of other time zones.  \n  \n If the <xref:System.DateTime.Kind%2A> property of a <xref:System.DateTime> object is <xref:System.DateTimeKind?displayProperty=fullName>, it is unspecified whether the time represented is local time, UTC time, or a time in some other time zone.  \n  \n<a name=\"datetime_ops\"></a>   \n## DateTime operations  \n A calculation using a <xref:System.DateTime> structure, such as <xref:System.DateTime.Add%2A> or <xref:System.DateTime.Subtract%2A>, does not modify the value of the structure. Instead, the calculation returns a new <xref:System.DateTime> structure whose value is the result of the calculation.  \n  \n Conversion operations between time zones (such as between UTC and local time, or between one time zone and another) take daylight saving time into account, but arithmetic and comparison operations do not.  \n  \n The <xref:System.DateTime> structure itself offers limited support for converting from one time zone to another. You can use the <xref:System.DateTime.ToLocalTime%2A> method to convert UTC to local time, or you can use the <xref:System.DateTime.ToUniversalTime%2A> method to convert from local time to UTC. However, a full set of time zone conversion methods is available in the <xref:System.TimeZoneInfo> class. Using these methods, you can convert the time in any one of the world's time zones to the time in any other time zone.  \n  \n Calculations and comparisons of <xref:System.DateTime> objects are meaningful only if the objects represent times in the same time zone. You can use a <xref:System.TimeZoneInfo> object to represent a <xref:System.DateTime> value's time zone, although the two are loosely coupled. (That is, a <xref:System.DateTime> object does not have a property that returns an object that represents that date and time value's time zone other than the <xref:System.DateTime.Kind%2A> property.) For this reason, in a time zone-aware application, you must rely on some external mechanism to determine the time zone in which a <xref:System.DateTime> object was created. For example, you could use a structure that wraps both the <xref:System.DateTime> value and the <xref:System.TimeZoneInfo> object that represents the <xref:System.DateTime> value's time zone. For details on using UTC in calculations and comparisons with <xref:System.DateTime> values, see [Performing Arithmetic Operations with Dates and Times](~/docs/standard/datetime/performing-arithmetic-operations.md).  \n  \n Each <xref:System.DateTime> member implicitly uses the Gregorian calendar to perform its operation, with the exception of constructors that specify a calendar, and methods with a parameter derived from <xref:System.IFormatProvider>, such as <xref:System.Globalization.DateTimeFormatInfo?displayProperty=fullName>, that implicitly specifies a calendar.  \n  \n Operations by members of the <xref:System.DateTime> type take into account details such as leap years and the number of days in a month.  \n  \n Two other common operations with <xref:System.DateTime> values involve converting a date and time value to or from its string representation. The process of converting a <xref:System.DateTime> value to its string representation is a formatting operation; for more information about formatting, see [DateTime values and their string representations](#datetime_values_strings). The process of converting the string representation of a date and time to a <xref:System.DateTime> value is a parsing operation; for more information about parsing, see [Converting strings to DateTime values](#parsing).  \n  \n<a name=\"Resolution\"></a>   \n## DateTime resolution  \n  \n> [!NOTE]\n>  As an alternative to performing date and time arithmetic on <xref:System.DateTime> values to measure elapsed time, you can use the <xref:System.Diagnostics.Stopwatch> class.  \n  \n The <xref:System.DateTime.Ticks%2A> property expresses date and time values in units of one ten-millionth of a second, and the <xref:System.DateTime.Millisecond%2A> property returns the thousandths of a second in a date and time value. However, if you are using repeated calls to the <xref:System.DateTime.Now%2A?displayProperty=fullName> property to measure elapsed time, and you are concerned with small time intervals less than 100 milliseconds, you should note that values returned by the <xref:System.DateTime.Now%2A?displayProperty=fullName> property are dependent on the system clock, which on Windows 7 and Windows 8 systems has a resolution of approximately 15 milliseconds.  \n  \n The following example illustrates the dependence of current date and time values on the resolution of the system clock. In the example, an outer loop repeats 20 times, and an inner loop serves to delay the outer loop. If the value of the outer loop counter is 10, a call to the <xref:System.Threading.Thread.Sleep%2A?displayProperty=fullName> method introduces a five millisecond delay. As the output from the example shows, the number of milliseconds in returned by the `DateTime.Now.Milliseconds` property changed only after the call to <xref:System.Threading.Thread.Sleep%2A?displayProperty=fullName>.  \n  \n [!code-cpp[System.DateTime.Now#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.datetime.now/cpp/resolution2.cpp#1)]\n [!code-csharp[System.DateTime.Now#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.now/cs/resolution2.cs#1)]\n [!code-vb[System.DateTime.Now#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.now/vb/resolution2.vb#1)]  \n  \n<a name=\"datetime_timespan\"></a>   \n## DateTime vs. TimeSpan  \n The <xref:System.DateTime> and <xref:System.TimeSpan> value types differ in that a <xref:System.DateTime> represents an instant in time whereas a <xref:System.TimeSpan> represents a time interval. This means, for example, that you can subtract one instance of <xref:System.DateTime> from another to obtain a <xref:System.TimeSpan> object that represents the time interval between them. Or you could add a positive <xref:System.TimeSpan> to the current <xref:System.DateTime> to obtain a <xref:System.DateTime> value that represents a future date.  \n  \n You can add or subtract a time interval from a <xref:System.DateTime> object. Time intervals can be negative or positive, can be expressed in units such as ticks or seconds, or can be expressed as a <xref:System.TimeSpan> object.  \n  \n<a name=\"Calendars\"></a>   \n## DateTime values and calendars  \n The .NET Framework Class Library includes a number of calendar classes, all of which are derived from the <xref:System.Globalization.Calendar> class.  They are:  \n  \n-   The <xref:System.Globalization.ChineseLunisolarCalendar> class.  \n  \n-   The <xref:System.Globalization.EastAsianLunisolarCalendar> class.  \n  \n-   The <xref:System.Globalization.GregorianCalendar> class.  \n  \n-   The <xref:System.Globalization.HebrewCalendar> class.  \n  \n-   The <xref:System.Globalization.HijriCalendar> class.  \n  \n-   The <xref:System.Globalization.JapaneseCalendar> class.  \n  \n-   The <xref:System.Globalization.JapaneseLunisolarCalendar> class.  \n  \n-   The <xref:System.Globalization.JulianCalendar> class.  \n  \n-   The <xref:System.Globalization.KoreanCalendar> class.  \n  \n-   The <xref:System.Globalization.KoreanLunisolarCalendar> class.  \n  \n-   The <xref:System.Globalization.PersianCalendar> class.  \n  \n-   The <xref:System.Globalization.TaiwanCalendar> class.  \n  \n-   The <xref:System.Globalization.TaiwanLunisolarCalendar> class.  \n  \n-   The <xref:System.Globalization.ThaiBuddhistCalendar> class.  \n  \n-   The <xref:System.Globalization.UmAlQuraCalendar> class.  \n  \n Each culture uses a default calendar defined by its read-only <xref:System.Globalization.CultureInfo.Calendar%2A?displayProperty=fullName> property and supports one or more calendars defined by its read-only <xref:System.Globalization.CultureInfo.OptionalCalendars%2A?displayProperty=fullName> property. The calendar currently used by a specific <xref:System.Globalization.CultureInfo> object is defined by its <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=fullName> property; it must be one of the calendars found in the <xref:System.Globalization.CultureInfo.OptionalCalendars%2A?displayProperty=fullName> array.  \n  \n A culture's current calendar is used in all formatting operations for that culture. For example, the default calendar of the Persian (Iran) culture is the Umm al-Qura calendar, which is represented by the <xref:System.Globalization.UmAlQuraCalendar> class.  When a <xref:System.Globalization.CultureInfo> object that represents the Persian (Iran) culture is used in a date and time formatting operation, the Umm al-Qura calendar is used by default, and the Gregorian calendar is used only if the culture's <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=fullName> property is changed, as the following example shows.  \n  \n [!code-csharp[System.DateTime.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.DateTime.Calendar/cs/UmAlQuraCalendar1.cs#1)]\n [!code-vb[System.DateTime.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.DateTime.Calendar/vb/UmAlQuraCalendar1.vb#1)]  \n  \n A culture's current calendar is also used in all parsing operations for that culture, as the following example shows.  \n  \n [!code-csharp[System.DateTime.Calendar#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.DateTime.Calendar/cs/UmAlQuraParse1.cs#2)]\n [!code-vb[System.DateTime.Calendar#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.DateTime.Calendar/vb/UmAlQuraParse1.vb#2)]  \n  \n You can also instantiate a <xref:System.DateTime> value by using the date and time elements (such as the number of the year, month, and day) of a specific calendar by calling a [DateTime constructor](../Topic/DateTime%20Constructor.md) that includes a `calendar` parameter and passing it a <xref:System.Globalization.CultureInfo.Calendar%2A> object that represents that calendar. The following example does this by using the date and time elements from the <xref:System.Globalization.UmAlQuraCalendar> calendar.  \n  \n [!code-csharp[System.DateTime.Calendar#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.DateTime.Calendar/cs/Ctor1.cs#3)]\n [!code-vb[System.DateTime.Calendar#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.DateTime.Calendar/vb/Ctor1.vb#3)]  \n  \n <xref:System.DateTime> constructors that do not include a `calendar` parameter assume that the date and time elements are expressed as units in the Gregorian calendar.  \n  \n All other <xref:System.DateTime> properties and methods use the Gregorian calendar. For example, the <xref:System.DateTime.Year%2A?displayProperty=fullName> property returns the year in the Gregorian calendar, and the <xref:System.DateTime.IsLeapYear%28System.Int32%29?displayProperty=fullName> method assumes that the `year` parameter is a year in the Gregorian calendar.  Each <xref:System.DateTime> member that uses the Gregorian calendar has a corresponding member of the <xref:System.Globalization.CultureInfo.Calendar%2A> class that  uses a specific calendar. For example, the <xref:System.Globalization.Calendar.GetYear%2A?displayProperty=fullName> method returns the year in a specific calendar, and the <xref:System.Globalization.Calendar.IsLeapYear%2A?displayProperty=fullName> method interprets the `year` parameter as a year number in a specific calendar. The following example use both the <xref:System.DateTime> and the corresponding members of the  <xref:System.Globalization.UmAlQuraCalendar> class.  \n  \n [!code-csharp[System.DateTime.Calendar#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.DateTime.Calendar/cs/DateTimesAndCalendars1.cs#4)]\n [!code-vb[System.DateTime.Calendar#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.DateTime.Calendar/vb/DateTimesAndCalendars1.vb#4)]  \n  \n Although the <xref:System.DateTime> structure includes <xref:System.DateTime.DayOfWeek%2A> property that returns the day of the week in the Gregorian calendar, it does not include a member that allows you to retrieve the week number of the year. To retrieve the week of the year, call the individual calendar's <xref:System.Globalization.Calendar.GetWeekOfYear%2A?displayProperty=fullName> method. The following example provides an illustration.  \n  \n [!code-csharp[System.DateTime.Calendar#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.DateTime.Calendar/cs/Weeks1.cs#5)]\n [!code-vb[System.DateTime.Calendar#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.DateTime.Calendar/vb/Weeks1.vb#5)]  \n  \n For more information on dates and calendars, see [Working with Calendars](~/docs/standard/datetime/working-with-calendars.md).  \n  \n<a name=\"Persisting\"></a>   \n## Persisting DateTime values  \n You can persist <xref:System.DateTime> values in four ways:  \n  \n-   You can [convert them to strings](#Strings) and persist the strings.  \n  \n-   You can [convert them to 64-bit integer values](#Integers) (the value of the <xref:System.DateTime.Ticks%2A> property) and persist the integers.  \n  \n-   You can[serialize the DateTime values](#Serialized).  \n  \n-   You can [serialize the DateTime values along with time zone information](#TimeZone).  \n  \n Regardless of which technique you choose, you must ensure that the routine that restores the <xref:System.DateTime> values doesn't lose data or throw an exception. <xref:System.DateTime> values should round-trip. That is, the original value and the restored value should be the same. And if the original <xref:System.DateTime> value represents a single instant of time, it should identify the same moment of time when it's restored.  \n  \n<a name=\"Strings\"></a>   \n### Persisting values as strings  \n To successfully restore <xref:System.DateTime> values that are persisted as strings, follow these rules:  \n  \n-   Make the same assumptions about culture-specific formatting when you restore the string as when you persisted it. To ensure that a string can be restored on a system whose current culture is different from the culture of the system it was saved on, call the <xref:System.DateTime.ToString%2A>overload to save the string by using the conventions of the invariant culture, and call the <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> or <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29> overload to restore the string by using the conventions of the invariant culture. Never use the <xref:System.DateTime.ToString>, <xref:System.DateTime.Parse%28System.String%29>, or <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29> overloads, which use the conventions of the current thread culture.  \n  \n-   If the data represents a single moment of time, ensure that it represents the same moment in time when it's restored, even if it's restored on a system that uses a different time zone. To do this, you convert the <xref:System.DateTime> value to Coordinated Universal Time (UTC) before saving it. You can also serialize the value along with time zone information; for more information about this approach, see [Serializing DateTime and time zone data](#TimeZone).  \n  \n The most common error made when persisting <xref:System.DateTime> values as strings is to rely on the formatting conventions of the default or current culture. Problems arise if the current culture is different when saving and restoring the strings. The following example illustrates these problems. It saves five dates using the formatting conventions of the current culture, which in this case is English (United States). It restores the dates using the formatting conventions of the current culture, which in this case is English (Great Britain). Because the formatting conventions of the two cultures are different, two of the dates can't be restored, and the remaining three dates are interpreted incorrectly. Also, if the original date and time values represent single moments in time, the restored times are incorrect because time zone information is lost.  \n  \n [!code-csharp[System.DateTime.Persist#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.persist/cs/persist1.cs#1)]\n [!code-vb[System.DateTime.Persist#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.persist/vb/persist1.vb#1)]  \n  \n To round-trip <xref:System.DateTime> values successfully, follow these steps:  \n  \n1.  If the values represent single moments of time, convert them from the local time to UTC by calling the <xref:System.DateTime.ToUniversalTime%2A> method.  \n  \n2.  Convert the dates to their string representations by calling the <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29> or <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=fullName> overload. Use the formatting conventions of the invariant culture by specifying <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName> as the `provider` argument. Specify that the value should round-trip by using the \"O\" or \"R\" .  \n  \n3.  When you call the <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> or <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29> method.  \n  \n To restore the persisted <xref:System.DateTime> values without data loss, do the following:  \n  \n1.  Parse the data by calling the <xref:System.DateTime.ParseExact%2A> or <xref:System.DateTime.TryParseExact%2A> overload. Specify <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName> as the `provider` argument, and use the same standard format string you used for the `format` argument during conversion. Include the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> value in the `styles` argument.  \n  \n2.  If the <xref:System.DateTime> values represent single moments in time, call the <xref:System.DateTime.ToLocalTime%2A> method to convert the parsed date from UTC to local time.  \n  \n The following example uses the invariant culture and the \"O\" standard format string to ensure that <xref:System.DateTime> values that are saved and restored represent the same moment in time regardless of the system, culture, or time zone of the source and target systems.  \n  \n [!code-csharp[System.DateTime.Persist#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.persist/cs/persist2.cs#2)]\n [!code-vb[System.DateTime.Persist#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.persist/vb/persist2.vb#2)]  \n  \n<a name=\"Integers\"></a>   \n### Persisting values as integers  \n Instead of persisting a <xref:System.DateTime> value as a string, you can persist it as an <xref:System.Int64> value that represents a number of ticks. In this case, you don't have to consider the culture of the systems the <xref:System.DateTime> values are persisted and restored on.  \n  \n To persist a <xref:System.DateTime> value as an integer:  \n  \n-   If the <xref:System.DateTime> values represent single moments in time, convert them to UTC by calling the <xref:System.DateTime.ToUniversalTime%2A> method.  \n  \n-   Retrieve the number of ticks represented by the <xref:System.DateTime> value from its <xref:System.DateTime.Ticks%2A> property.  \n  \n To restore a <xref:System.DateTime> value that has been persisted as an integer:  \n  \n1.  Instantiate a new <xref:System.DateTime> object by passing the <xref:System.Int64> value to the <xref:System.DateTime.%23ctor%28System.Int64%29> constructor.  \n  \n2.  If the <xref:System.DateTime> value represents a single moment in time, convert it from UTC to the local time by calling the <xref:System.DateTime.ToLocalTime%2A> method.  \n  \n The following example persists an array of <xref:System.DateTime> values as integers on a system in the U.S. Pacific Time zone. It restores it on a system in the UTC zone. The file that contains the integers includes an <xref:System.Int32> value that indicates the total number of <xref:System.Int64> values that immediately follow it.  \n  \n [!code-csharp[System.DateTime.Persist#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.persist/cs/persist4.cs#4)]\n [!code-vb[System.DateTime.Persist#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.persist/vb/persist4.vb#4)]  \n  \n<a name=\"Serialized\"></a>   \n### Serializing DateTime values  \n Instead of saving <xref:System.DateTime> values as strings or integers, which you then have to convert back to <xref:System.DateTime> values, you can persist <xref:System.DateTime> values through serialization to a stream or file, and then restore them through deserialization. In this case, <xref:System.DateTime>data is serialized in some specified object format, and the objects are restored when they are deserialized. A formatter or serializer, such as <xref:System.Xml.Serialization.XmlSerializer> or <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>, handles the process of serialization and deserialization. For more information about serialization and the types of serialization supported by the .NET Framework, see [Serialization](http://msdn.microsoft.com/library/4d1111c0-9447-4231-a997-96a2b74b3453).  \n  \n The following example uses the <xref:System.Xml.Serialization.XmlSerializer> class to serialize and deserialize <xref:System.DateTime> values that represent all leap year days in the twenty-first century. The output represents the result if the example is run on a system whose current culture is English (Great Britain). Because we've deserialized the <xref:System.DateTime> object itself, the code doesn't have to handle cultural differences in date and time formats.  \n  \n [!code-csharp[System.DateTime.Persist#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.persist/cs/persist5.cs#5)]\n [!code-vb[System.DateTime.Persist#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.persist/vb/persist5.vb#5)]  \n  \n The previous example doesn't include time information. However, if a <xref:System.DateTime> value represents a moment in time and is expressed as a local time, you should convert it from local time to UTC before serializing it by calling the <xref:System.DateTime.ToUniversalTime%2A> method. After you deserialize it, you should convert it from UTC to local time by calling the <xref:System.DateTime.ToLocalTime%2A> method. The following example uses the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> class to serialize<xref:System.DateTime> data on a system in the U.S. Pacific Standard Time zone and to deserialize it on a system in the UTC zone.  \n  \n [!code-csharp[System.DateTime.Persist#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.persist/cs/persist3.cs#3)]\n [!code-vb[System.DateTime.Persist#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.persist/vb/persist3.vb#3)]  \n  \n<a name=\"TimeZone\"></a>   \n### Serializing DateTime and time zone data  \n The previous examples have all assumed that <xref:System.DateTime> values are expressed as local times, and converted the values between UTC and local time so they reflect the same moment in time on the source and target systems. <xref:System.DateTime> values may also reflect moments in time in a time zone other than local and UTC. In this case, because the <xref:System.DateTime> structure is not time zone-aware, you have to serialize both the <xref:System.DateTime>value and the <xref:System.TimeZoneInfo> object that represents its time zone. To do this, create a type whose fields include both the <xref:System.DateTime> value and its time zone. The following example defines a `DateWithTimeZone` structure that illustrates how this might be done.  \n  \n [!code-csharp[System.DateTime.Persist#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.persist/cs/persist6.cs#6)]\n [!code-vb[System.DateTime.Persist#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.persist/vb/persist6.vb#6)]  \n  \n> [!IMPORTANT]\n>  The `DateWithTimeZone` structure is used in the next two examples, which serialize and deserialize an array of `DateWithTimeZone` objects. To run the examples, first create a class library that contains the `DateWithTimeZone` structure, and then add a reference to it when you compile each example.  \n  \n By using the `DateWithTimeZone` structure , you can then persist date and time along with time zone information. The following example uses the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> class to serialize an array of `DateWithTimeZone` objects.  \n  \n [!code-csharp[System.DateTime.Persist#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.persist/cs/persist7.cs#7)]\n [!code-vb[System.DateTime.Persist#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.persist/vb/persist7.vb#7)]  \n  \n The following example then calls the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize%2A?displayProperty=fullName> method to deserialize it.  \n  \n [!code-csharp[System.DateTime.Persist#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.persist/cs/persist8.cs#8)]\n [!code-vb[System.DateTime.Persist#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.persist/vb/persist8.vb#8)]  \n  \n<a name=\"com_interop\"></a>   \n## COM interop considerations  \n A <xref:System.DateTime> value that is transferred to a COM application, then is transferred back to a managed application, is said to round-trip. However, a <xref:System.DateTime> value that specifies only a time does not round-trip as you might expect.  \n  \n If you round-trip only a time, such as 3 P.M., the final date and time is December 30, 1899 C.E. at 3:00 P.M., instead of January, 1, 0001 C.E. at 3:00 P.M. This happens because the .NET Framework and COM assume a default date when only a time is specified. However, the COM system assumes a base date of December 30, 1899 C.E. while the .NET Framework assumes a base date of January, 1, 0001 C.E.  \n  \n When only a time is passed from the .NET Framework to COM, special processing is performed that converts the time to the format used by COM. When only a time is passed from COM to the .NET Framework, no special processing is performed because that would corrupt legitimate dates and times on or before December 30, 1899. This also means if a date starts its round-trip from COM, the .NET Framework and COM preserve the date.  \n  \n The behavior of the .NET Framework and COM means that if your application round-trips a <xref:System.DateTime> that only specifies a time, your application must remember to modify or ignore the erroneous date from the final <xref:System.DateTime> object."
  example:
  - "The following example demonstrates how to compare roughly equivalent <xref:System.DateTime> values, accepting a small margin of difference when declaring them equal.  \n  \n [!code-cpp[DateTime Equivalency Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime Equivalency Example/CPP/datetimesample.cpp#1)]\n [!code-csharp[DateTime Equivalency Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime Equivalency Example/CS/datetimesample.cs#1)]\n [!code-vb[DateTime Equivalency Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime Equivalency Example/VB/datetimesample.vb#1)]"
  syntax:
    content: 'public struct DateTime : IComparable, IComparable<DateTime>, IConvertible, IEquatable<DateTime>, IFormattable, System.Runtime.Serialization.ISerializable'
  inheritance:
  - System.Object
  - System.ValueType
  implements:
  - System.IComparable
  - System.IComparable{System.DateTime}
  - System.IConvertible
  - System.IEquatable{System.DateTime}
  - System.IFormattable
  - System.Runtime.Serialization.ISerializable
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.#ctor(System.Int64)
  commentId: M:System.DateTime.#ctor(System.Int64)
  id: '#ctor(System.Int64)'
  parent: System.DateTime
  langs:
  - csharp
  name: DateTime(Int64)
  nameWithType: DateTime.DateTime(Int64)
  fullName: DateTime.DateTime(Int64)
  type: Constructor
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Initializes a new instance of the <xref href="System.DateTime"></xref> structure to a specified number of ticks.
  remarks: "The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind.Unspecified>.  \n  \n For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor."
  example:
  - "The following example demonstrates one of the <xref:System.DateTime> constructors.  \n  \n [!code-cpp[datetime.ctor_Int64#1](~/samples/snippets/cpp/VS_Snippets_CLR/datetime.ctor_Int64/CPP/ticks.cpp#1)]\n [!code-csharp[datetime.ctor_Int64#1](~/samples/snippets/csharp/VS_Snippets_CLR/datetime.ctor_Int64/CS/ticks.cs#1)]\n [!code-vb[datetime.ctor_Int64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/datetime.ctor_Int64/VB/ticks.vb#1)]"
  syntax:
    content: public DateTime (long ticks);
    parameters:
    - id: ticks
      type: System.Int64
      description: A date and time expressed in the number of 100-nanosecond intervals that have elapsed since January 1, 0001 at 00:00:00.000 in the Gregorian calendar.
  overload: System.DateTime.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>ticks</code> is less than <xref href="System.DateTime.MinValue"></xref> or greater than <xref href="System.DateTime.MaxValue"></xref>.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.#ctor(System.Int64,System.DateTimeKind)
  commentId: M:System.DateTime.#ctor(System.Int64,System.DateTimeKind)
  id: '#ctor(System.Int64,System.DateTimeKind)'
  parent: System.DateTime
  langs:
  - csharp
  name: DateTime(Int64, DateTimeKind)
  nameWithType: DateTime.DateTime(Int64, DateTimeKind)
  fullName: DateTime.DateTime(Int64, DateTimeKind)
  type: Constructor
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Initializes a new instance of the <xref href="System.DateTime"></xref> structure to a specified number of ticks and to Coordinated Universal Time (UTC) or local time.
  remarks: For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor.
  syntax:
    content: public DateTime (long ticks, DateTimeKind kind);
    parameters:
    - id: ticks
      type: System.Int64
      description: A date and time expressed in the number of 100-nanosecond intervals that have elapsed since January 1, 0001 at 00:00:00.000 in the Gregorian calendar.
    - id: kind
      type: System.DateTimeKind
      description: One of the enumeration values that indicates whether <code>ticks</code> specifies a local time, Coordinated Universal Time (UTC), or neither.
  overload: System.DateTime.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>ticks</code> is less than <xref href="System.DateTime.MinValue"></xref> or greater than <xref href="System.DateTime.MaxValue"></xref>.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>kind</code> is not one of the <xref href="System.DateTimeKind"></xref> values.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.#ctor(System.Int32,System.Int32,System.Int32)
  commentId: M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Int32)'
  parent: System.DateTime
  langs:
  - csharp
  name: DateTime(Int32, Int32, Int32)
  nameWithType: DateTime.DateTime(Int32, Int32, Int32)
  fullName: DateTime.DateTime(Int32, Int32, Int32)
  type: Constructor
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Initializes a new instance of the <xref href="System.DateTime"></xref> structure to the specified year, month, and day.
  remarks: "This constructor interprets `year`, `month`, and `day` as a year, month, and day in the Gregorian calendar. To instantiate a <xref:System.DateTime> value by using the year, month, and day in another calendar, call the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29> constructor.  \n  \n The time of day for the resulting <xref:System.DateTime> is midnight (00:00:00). The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind?displayProperty=fullName>."
  example:
  - "The following example uses the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%29> constructor to instantiate a <xref:System.DateTime> value. The example also illustrates that this overload creates a <xref:System.DateTime> value whose time component equals midnight (or 0:00).  \n  \n [!code-csharp[System.DateTime.Constructor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.constructor/cs/ctorexample1.cs#1)]\n [!code-vb[System.DateTime.Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.constructor/vb/ctorexample1.vb#1)]"
  syntax:
    content: public DateTime (int year, int month, int day);
    parameters:
    - id: year
      type: System.Int32
      description: The year (1 through 9999).
    - id: month
      type: System.Int32
      description: The month (1 through 12).
    - id: day
      type: System.Int32
      description: The day (1 through the number of days in <code>month</code>).
  overload: System.DateTime.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code> is less than 1 or greater than 9999.  \n  \n -or-  \n  \n <code>month</code> is less than 1 or greater than 12.  \n  \n -or-  \n  \n <code>day</code> is less than 1 or greater than the number of days in <code>month</code>."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)
  commentId: M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)'
  parent: System.DateTime
  langs:
  - csharp
  name: DateTime(Int32, Int32, Int32, Calendar)
  nameWithType: DateTime.DateTime(Int32, Int32, Int32, Calendar)
  fullName: DateTime.DateTime(Int32, Int32, Int32, Calendar)
  type: Constructor
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Initializes a new instance of the <xref href="System.DateTime"></xref> structure to the specified year, month, and day for the specified calendar.
  remarks: "The time of day for the resulting <xref:System.DateTime> is midnight (00:00:00). The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind.Unspecified>.  \n  \n The allowable values for `year`, `month`, and `day` depend on `calendar`. An exception is thrown if the specified date and time cannot be expressed using `calendar`.  \n  \n The <xref:System.Globalization> namespace provides several calendars including <xref:System.Globalization.GregorianCalendar> and <xref:System.Globalization.JulianCalendar>."
  example:
  - "The following example calls the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29> constructor twice to instantiate two <xref:System.DateTime> values. The first call instantiates a <xref:System.DateTime> value by using a <xref:System.Globalization.PersianCalendar> object. Because the Persian calendar cannot be designated as the default calendar for a culture, displaying a date in the Persian calendar requires individual calls to its <xref:System.Globalization.PersianCalendar.GetMonth%2A?displayProperty=fullName>, <xref:System.Globalization.PersianCalendar.GetDayOfMonth%2A?displayProperty=fullName>, and <xref:System.Globalization.PersianCalendar.GetYear%2A?displayProperty=fullName> methods. The second call to the constructor instantiates a <xref:System.DateTime> value by using a <xref:System.Globalization.HijriCalendar> object. The example changes the current culture to Arabic (Syria) and changes the current culture's default calendar to the Hijri calendar. Because Hijri is the current culture's default calendar, the <xref:System.Console.WriteLine%2A?displayProperty=fullName> method uses it to format the date. When the previous current culture (which is English (United States) in this case) is restored, the <xref:System.Console.WriteLine%2A?displayProperty=fullName> method uses the current culture's default Gregorian calendar to format the date.  \n  \n [!code-csharp[System.DateTime.Constructor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.constructor/cs/ctorexample2.cs#2)]\n [!code-vb[System.DateTime.Constructor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.constructor/vb/ctorexample2.vb#2)]"
  syntax:
    content: public DateTime (int year, int month, int day, System.Globalization.Calendar calendar);
    parameters:
    - id: year
      type: System.Int32
      description: The year (1 through the number of years in <code>calendar</code>).
    - id: month
      type: System.Int32
      description: The month (1 through the number of months in <code>calendar</code>).
    - id: day
      type: System.Int32
      description: The day (1 through the number of days in <code>month</code>).
    - id: calendar
      type: System.Globalization.Calendar
      description: The calendar that is used to interpret <code>year</code>, <code>month</code>, and <code>day</code>.
  overload: System.DateTime.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>calendar</code> is `null`.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code> is not in the range supported by <code>calendar</code>.  \n  \n -or-  \n  \n <code>month</code> is less than 1 or greater than the number of months in <code>calendar</code>.  \n  \n -or-  \n  \n <code>day</code> is less than 1 or greater than the number of days in <code>month</code>."
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)'
  parent: System.DateTime
  langs:
  - csharp
  name: DateTime(Int32, Int32, Int32, Int32, Int32, Int32)
  nameWithType: DateTime.DateTime(Int32, Int32, Int32, Int32, Int32, Int32)
  fullName: DateTime.DateTime(Int32, Int32, Int32, Int32, Int32, Int32)
  type: Constructor
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Initializes a new instance of the <xref href="System.DateTime"></xref> structure to the specified year, month, day, hour, minute, and second.
  remarks: "The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind.Unspecified>.  \n  \n This constructor interprets`year`, `month`, and `day` as a year, month, and day in the Gregorian calendar. To instantiate a <xref:System.DateTime> value by using the year, month, and day in another calendar, call the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29> constructor.  \n  \n For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor."
  example:
  - "The following example uses the <xref:System.DateTime.%23ctor%2A> constructor to instantiate a <xref:System.DateTime> value.  \n  \n [!code-csharp[System.DateTime.Constructor#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.constructor/cs/ctorexample1.cs#3)]\n [!code-vb[System.DateTime.Constructor#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.constructor/vb/ctorexample1.vb#3)]"
  syntax:
    content: public DateTime (int year, int month, int day, int hour, int minute, int second);
    parameters:
    - id: year
      type: System.Int32
      description: The year (1 through 9999).
    - id: month
      type: System.Int32
      description: The month (1 through 12).
    - id: day
      type: System.Int32
      description: The day (1 through the number of days in <code>month</code>).
    - id: hour
      type: System.Int32
      description: The hours (0 through 23).
    - id: minute
      type: System.Int32
      description: The minutes (0 through 59).
    - id: second
      type: System.Int32
      description: The seconds (0 through 59).
  overload: System.DateTime.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code> is less than 1 or greater than 9999.  \n  \n -or-  \n  \n <code>month</code> is less than 1 or greater than 12.  \n  \n -or-  \n  \n <code>day</code> is less than 1 or greater than the number of days in <code>month</code>.  \n  \n -or-  \n  \n <code>hour</code> is less than 0 or greater than 23.  \n  \n -or-  \n  \n <code>minute</code> is less than 0 or greater than 59.  \n  \n -or-  \n  \n <code>second</code> is less than 0 or greater than 59."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)
  commentId: M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)'
  parent: System.DateTime
  langs:
  - csharp
  name: DateTime(Int32, Int32, Int32, Int32, Int32, Int32, DateTimeKind)
  nameWithType: DateTime.DateTime(Int32, Int32, Int32, Int32, Int32, Int32, DateTimeKind)
  fullName: DateTime.DateTime(Int32, Int32, Int32, Int32, Int32, Int32, DateTimeKind)
  type: Constructor
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Initializes a new instance of the <xref href="System.DateTime"></xref> structure to the specified year, month, day, hour, minute, second, and Coordinated Universal Time (UTC) or local time.
  remarks: "This constructor interprets`year`, `month`, and `day` as a year, month, and day in the Gregorian calendar. To instantiate a <xref:System.DateTime> value by using the year, month, and day in another calendar, call the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%2CSystem.DateTimeKind%29> constructor.  \n  \n For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor."
  example:
  - "The following example uses the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.DateTimeKind%29> constructor to instantiate a <xref:System.DateTime> value.  \n  \n [!code-csharp[System.DateTime.Constructor#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.constructor/cs/ctorexample1.cs#7)]\n [!code-vb[System.DateTime.Constructor#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.constructor/vb/ctorexample1.vb#7)]"
  syntax:
    content: public DateTime (int year, int month, int day, int hour, int minute, int second, DateTimeKind kind);
    parameters:
    - id: year
      type: System.Int32
      description: The year (1 through 9999).
    - id: month
      type: System.Int32
      description: The month (1 through 12).
    - id: day
      type: System.Int32
      description: The day (1 through the number of days in <code>month</code>).
    - id: hour
      type: System.Int32
      description: The hours (0 through 23).
    - id: minute
      type: System.Int32
      description: The minutes (0 through 59).
    - id: second
      type: System.Int32
      description: The seconds (0 through 59).
    - id: kind
      type: System.DateTimeKind
      description: One of the enumeration values that indicates whether <code>year</code>, <code>month</code>, <code>day</code>, <code>hour</code>, <code>minute</code> and <code>second</code> specify a local time, Coordinated Universal Time (UTC), or neither.
  overload: System.DateTime.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code> is less than 1 or greater than 9999.  \n  \n -or-  \n  \n <code>month</code> is less than 1 or greater than 12.  \n  \n -or-  \n  \n <code>day</code> is less than 1 or greater than the number of days in <code>month</code>.  \n  \n -or-  \n  \n <code>hour</code> is less than 0 or greater than 23.  \n  \n -or-  \n  \n <code>minute</code> is less than 0 or greater than 59.  \n  \n -or-  \n  \n <code>second</code> is less than 0 or greater than 59."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>kind</code> is not one of the <xref href="System.DateTimeKind"></xref> values.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)
  commentId: M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)'
  parent: System.DateTime
  langs:
  - csharp
  name: DateTime(Int32, Int32, Int32, Int32, Int32, Int32, Calendar)
  nameWithType: DateTime.DateTime(Int32, Int32, Int32, Int32, Int32, Int32, Calendar)
  fullName: DateTime.DateTime(Int32, Int32, Int32, Int32, Int32, Int32, Calendar)
  type: Constructor
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Initializes a new instance of the <xref href="System.DateTime"></xref> structure to the specified year, month, day, hour, minute, and second for the specified calendar.
  remarks: "The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind.Unspecified>.  \n  \n The allowable values for `year`, `month`, and `day` depend on `calendar`. An exception is thrown if the specified date and time cannot be expressed using `calendar`.  \n  \n The <xref:System.Globalization> namespace provides several calendars including <xref:System.Globalization.GregorianCalendar> and <xref:System.Globalization.JulianCalendar>."
  example:
  - "The following example calls the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29> constructor twice to instantiate two <xref:System.DateTime> values. The first call instantiates a <xref:System.DateTime> value by using a <xref:System.Globalization.PersianCalendar> object. Because the Persian calendar cannot be designated as the default calendar for a culture, displaying a date in the Persian calendar requires individual calls to its <xref:System.Globalization.PersianCalendar.GetMonth%2A?displayProperty=fullName>, <xref:System.Globalization.PersianCalendar.GetDayOfMonth%2A?displayProperty=fullName>, and <xref:System.Globalization.PersianCalendar.GetYear%2A?displayProperty=fullName> methods. The second call to the constructor instantiates a <xref:System.DateTime> value by using a <xref:System.Globalization.HijriCalendar> object. The example changes the current culture to Arabic (Syria) and changes the current culture's default calendar to the Hijri calendar. Because Hijri is the current culture's default calendar, the <xref:System.Console.WriteLine%2A?displayProperty=fullName> method uses it to format the date. When the previous current culture (which is English (United States) in this case) is restored, the <xref:System.Console.WriteLine%2A?displayProperty=fullName> method uses the current culture's default Gregorian calendar to format the date.  \n  \n [!code-csharp[System.DateTime.Constructor#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.constructor/cs/ctorexample4.cs#4)]\n [!code-vb[System.DateTime.Constructor#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.constructor/vb/ctorexample4.vb#4)]"
  syntax:
    content: public DateTime (int year, int month, int day, int hour, int minute, int second, System.Globalization.Calendar calendar);
    parameters:
    - id: year
      type: System.Int32
      description: The year (1 through the number of years in <code>calendar</code>).
    - id: month
      type: System.Int32
      description: The month (1 through the number of months in <code>calendar</code>).
    - id: day
      type: System.Int32
      description: The day (1 through the number of days in <code>month</code>).
    - id: hour
      type: System.Int32
      description: The hours (0 through 23).
    - id: minute
      type: System.Int32
      description: The minutes (0 through 59).
    - id: second
      type: System.Int32
      description: The seconds (0 through 59).
    - id: calendar
      type: System.Globalization.Calendar
      description: The calendar that is used to interpret <code>year</code>, <code>month</code>, and <code>day</code>.
  overload: System.DateTime.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>calendar</code> is `null`.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code> is not in the range supported by <code>calendar</code>.  \n  \n -or-  \n  \n <code>month</code> is less than 1 or greater than the number of months in <code>calendar</code>.  \n  \n -or-  \n  \n <code>day</code> is less than 1 or greater than the number of days in <code>month</code>.  \n  \n -or-  \n  \n <code>hour</code> is less than 0 or greater than 23  \n  \n -or-  \n  \n <code>minute</code> is less than 0 or greater than 59.  \n  \n -or-  \n  \n <code>second</code> is less than 0 or greater than 59."
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)'
  parent: System.DateTime
  langs:
  - csharp
  name: DateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32)
  nameWithType: DateTime.DateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32)
  fullName: DateTime.DateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32)
  type: Constructor
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Initializes a new instance of the <xref href="System.DateTime"></xref> structure to the specified year, month, day, hour, minute, second, and millisecond.
  remarks: "This constructor interprets`year`, `month`, and `day` as a year, month, and day in the Gregorian calendar. To instantiate a <xref:System.DateTime> value by using the year, month, and day in another calendar, call the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29> constructor.  \n  \n The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind.Unspecified>.  \n  \n For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor."
  example:
  - "The following example uses the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29> constructor to instantiate a <xref:System.DateTime> value.  \n  \n [!code-csharp[System.DateTime.Constructor#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.constructor/cs/ctorexample1.cs#5)]\n [!code-vb[System.DateTime.Constructor#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.constructor/vb/ctorexample1.vb#5)]"
  syntax:
    content: public DateTime (int year, int month, int day, int hour, int minute, int second, int millisecond);
    parameters:
    - id: year
      type: System.Int32
      description: The year (1 through 9999).
    - id: month
      type: System.Int32
      description: The month (1 through 12).
    - id: day
      type: System.Int32
      description: The day (1 through the number of days in <code>month</code>).
    - id: hour
      type: System.Int32
      description: The hours (0 through 23).
    - id: minute
      type: System.Int32
      description: The minutes (0 through 59).
    - id: second
      type: System.Int32
      description: The seconds (0 through 59).
    - id: millisecond
      type: System.Int32
      description: The milliseconds (0 through 999).
  overload: System.DateTime.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code> is less than 1 or greater than 9999.  \n  \n -or-  \n  \n <code>month</code> is less than 1 or greater than 12.  \n  \n -or-  \n  \n <code>day</code> is less than 1 or greater than the number of days in <code>month</code>.  \n  \n -or-  \n  \n <code>hour</code> is less than 0 or greater than 23.  \n  \n -or-  \n  \n <code>minute</code> is less than 0 or greater than 59.  \n  \n -or-  \n  \n <code>second</code> is less than 0 or greater than 59.  \n  \n -or-  \n  \n <code>millisecond</code> is less than 0 or greater than 999."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)
  commentId: M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)'
  parent: System.DateTime
  langs:
  - csharp
  name: DateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, DateTimeKind)
  nameWithType: DateTime.DateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, DateTimeKind)
  fullName: DateTime.DateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, DateTimeKind)
  type: Constructor
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Initializes a new instance of the <xref href="System.DateTime"></xref> structure to the specified year, month, day, hour, minute, second, millisecond, and Coordinated Universal Time (UTC) or local time.
  remarks: "This constructor interprets`year`, `month`, and `day` as a year, month, and day in the Gregorian calendar. To instantiate a <xref:System.DateTime> value by using the year, month, and day in another calendar, call the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%2CSystem.DateTimeKind%29> constructor.  \n  \n For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor."
  example:
  - "The following example uses the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.DateTimeKind%29> constructor to instantiate a <xref:System.DateTime> value.  \n  \n [!code-csharp[System.DateTime.Constructor#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.constructor/cs/ctorexample1.cs#8)]\n [!code-vb[System.DateTime.Constructor#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.constructor/vb/ctorexample1.vb#8)]"
  syntax:
    content: public DateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, DateTimeKind kind);
    parameters:
    - id: year
      type: System.Int32
      description: The year (1 through 9999).
    - id: month
      type: System.Int32
      description: The month (1 through 12).
    - id: day
      type: System.Int32
      description: The day (1 through the number of days in <code>month</code>).
    - id: hour
      type: System.Int32
      description: The hours (0 through 23).
    - id: minute
      type: System.Int32
      description: The minutes (0 through 59).
    - id: second
      type: System.Int32
      description: The seconds (0 through 59).
    - id: millisecond
      type: System.Int32
      description: The milliseconds (0 through 999).
    - id: kind
      type: System.DateTimeKind
      description: One of the enumeration values that indicates whether <code>year</code>, <code>month</code>, <code>day</code>, <code>hour</code>, <code>minute</code>, <code>second</code>, and <code>millisecond</code> specify a local time, Coordinated Universal Time (UTC), or neither.
  overload: System.DateTime.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code> is less than 1 or greater than 9999.  \n  \n -or-  \n  \n <code>month</code> is less than 1 or greater than 12.  \n  \n -or-  \n  \n <code>day</code> is less than 1 or greater than the number of days in <code>month</code>.  \n  \n -or-  \n  \n <code>hour</code> is less than 0 or greater than 23.  \n  \n -or-  \n  \n <code>minute</code> is less than 0 or greater than 59.  \n  \n -or-  \n  \n <code>second</code> is less than 0 or greater than 59.  \n  \n -or-  \n  \n <code>millisecond</code> is less than 0 or greater than 999."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>kind</code> is not one of the <xref href="System.DateTimeKind"></xref> values.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)
  commentId: M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)'
  parent: System.DateTime
  langs:
  - csharp
  name: DateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Calendar)
  nameWithType: DateTime.DateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Calendar)
  fullName: DateTime.DateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Calendar)
  type: Constructor
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Initializes a new instance of the <xref href="System.DateTime"></xref> structure to the specified year, month, day, hour, minute, second, and millisecond for the specified calendar.
  remarks: "The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind.Unspecified>.  \n  \n The allowable values for `year`, `month`, and `day` depend on `calendar`. An exception is thrown if the specified date and time cannot be expressed using `calendar`.  \n  \n For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor.  \n  \n The <xref:System.Globalization> namespace provides several calendars including <xref:System.Globalization.GregorianCalendar> and <xref:System.Globalization.JulianCalendar>."
  example:
  - "The following example calls the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29> constructor twice to instantiate two <xref:System.DateTime> values. The first call instantiates a <xref:System.DateTime> value by using a <xref:System.Globalization.PersianCalendar> object. Because the Persian calendar cannot be designated as the default calendar for a culture, displaying a date in the Persian calendar requires individual calls to its <xref:System.Globalization.PersianCalendar.GetMonth%2A?displayProperty=fullName>, <xref:System.Globalization.PersianCalendar.GetDayOfMonth%2A?displayProperty=fullName>, and <xref:System.Globalization.PersianCalendar.GetYear%2A?displayProperty=fullName> methods. The second call to the constructor instantiates a <xref:System.DateTime> value by using a <xref:System.Globalization.HijriCalendar> object. The example changes the current culture to Arabic (Syria) and changes the current culture's default calendar to the Hijri calendar. Because Hijri is the current culture's default calendar, the <xref:System.Console.WriteLine%2A?displayProperty=fullName> method uses it to format the date. When the previous current culture (which is English (United States) in this case) is restored, the <xref:System.Console.WriteLine%2A?displayProperty=fullName> method uses the current culture's default Gregorian calendar to format the date.  \n  \n [!code-csharp[System.DateTime.Constructor#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.constructor/cs/ctorexample6.cs#6)]\n [!code-vb[System.DateTime.Constructor#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.constructor/vb/ctorexample6.vb#6)]"
  syntax:
    content: public DateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, System.Globalization.Calendar calendar);
    parameters:
    - id: year
      type: System.Int32
      description: The year (1 through the number of years in <code>calendar</code>).
    - id: month
      type: System.Int32
      description: The month (1 through the number of months in <code>calendar</code>).
    - id: day
      type: System.Int32
      description: The day (1 through the number of days in <code>month</code>).
    - id: hour
      type: System.Int32
      description: The hours (0 through 23).
    - id: minute
      type: System.Int32
      description: The minutes (0 through 59).
    - id: second
      type: System.Int32
      description: The seconds (0 through 59).
    - id: millisecond
      type: System.Int32
      description: The milliseconds (0 through 999).
    - id: calendar
      type: System.Globalization.Calendar
      description: The calendar that is used to interpret <code>year</code>, <code>month</code>, and <code>day</code>.
  overload: System.DateTime.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>calendar</code> is `null`.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code> is not in the range supported by <code>calendar</code>.  \n  \n -or-  \n  \n <code>month</code> is less than 1 or greater than the number of months in <code>calendar</code>.  \n  \n -or-  \n  \n <code>day</code> is less than 1 or greater than the number of days in <code>month</code>.  \n  \n -or-  \n  \n <code>hour</code> is less than 0 or greater than 23.  \n  \n -or-  \n  \n <code>minute</code> is less than 0 or greater than 59.  \n  \n -or-  \n  \n <code>second</code> is less than 0 or greater than 59.  \n  \n -or-  \n  \n <code>millisecond</code> is less than 0 or greater than 999."
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar,System.DateTimeKind)
  commentId: M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar,System.DateTimeKind)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar,System.DateTimeKind)'
  parent: System.DateTime
  langs:
  - csharp
  name: DateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Calendar, DateTimeKind)
  nameWithType: DateTime.DateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Calendar, DateTimeKind)
  fullName: DateTime.DateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Calendar, DateTimeKind)
  type: Constructor
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Initializes a new instance of the <xref href="System.DateTime"></xref> structure to the specified year, month, day, hour, minute, second, millisecond, and Coordinated Universal Time (UTC) or local time for the specified calendar.
  remarks: "The allowable values for `year`, `month`, and `day` parameters depend on the `calendar` parameter. An exception is thrown if the specified date and time cannot be expressed using `calendar`.  \n  \n For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor.  \n  \n The <xref:System.Globalization> namespace provides several calendars including <xref:System.Globalization.GregorianCalendar> and <xref:System.Globalization.JulianCalendar>."
  example:
  - "The following example calls the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%2CSystem.DateTimeKind%29> constructor twice to instantiate two <xref:System.DateTime> values. The first call instantiates a <xref:System.DateTime> value by using a <xref:System.Globalization.PersianCalendar> object. Because the Persian calendar cannot be designated as the default calendar for a culture, displaying a date in the Persian calendar requires individual calls to its <xref:System.Globalization.PersianCalendar.GetMonth%2A?displayProperty=fullName>, <xref:System.Globalization.PersianCalendar.GetDayOfMonth%2A?displayProperty=fullName>, and <xref:System.Globalization.PersianCalendar.GetYear%2A?displayProperty=fullName> methods. The second call to the constructor instantiates a <xref:System.DateTime> value by using a <xref:System.Globalization.HijriCalendar> object. The example changes the current culture to Arabic (Syria) and changes the current culture's default calendar to the Hijri calendar. Because Hijri is the current culture's default calendar, the <xref:System.Console.WriteLine%2A?displayProperty=fullName> method uses it to format the date. When the previous current culture (which is English (United States) in this case) is restored, the <xref:System.Console.WriteLine%2A?displayProperty=fullName> method uses the current culture's default Gregorian calendar to format the date.  \n  \n [!code-csharp[System.DateTime.Constructor#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.constructor/cs/ctorexample9.cs#9)]\n [!code-vb[System.DateTime.Constructor#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.constructor/vb/ctorexample9.vb#9)]"
  syntax:
    content: public DateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, System.Globalization.Calendar calendar, DateTimeKind kind);
    parameters:
    - id: year
      type: System.Int32
      description: The year (1 through the number of years in <code>calendar</code>).
    - id: month
      type: System.Int32
      description: The month (1 through the number of months in <code>calendar</code>).
    - id: day
      type: System.Int32
      description: The day (1 through the number of days in <code>month</code>).
    - id: hour
      type: System.Int32
      description: The hours (0 through 23).
    - id: minute
      type: System.Int32
      description: The minutes (0 through 59).
    - id: second
      type: System.Int32
      description: The seconds (0 through 59).
    - id: millisecond
      type: System.Int32
      description: The milliseconds (0 through 999).
    - id: calendar
      type: System.Globalization.Calendar
      description: The calendar that is used to interpret <code>year</code>, <code>month</code>, and <code>day</code>.
    - id: kind
      type: System.DateTimeKind
      description: One of the enumeration values that indicates whether <code>year</code>, <code>month</code>, <code>day</code>, <code>hour</code>, <code>minute</code>, <code>second</code>, and <code>millisecond</code> specify a local time, Coordinated Universal Time (UTC), or neither.
  overload: System.DateTime.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>calendar</code> is `null`.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code> is not in the range supported by <code>calendar</code>.  \n  \n -or-  \n  \n <code>month</code> is less than 1 or greater than the number of months in <code>calendar</code>.  \n  \n -or-  \n  \n <code>day</code> is less than 1 or greater than the number of days in <code>month</code>.  \n  \n -or-  \n  \n <code>hour</code> is less than 0 or greater than 23.  \n  \n -or-  \n  \n <code>minute</code> is less than 0 or greater than 59.  \n  \n -or-  \n  \n <code>second</code> is less than 0 or greater than 59.  \n  \n -or-  \n  \n <code>millisecond</code> is less than 0 or greater than 999."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>kind</code> is not one of the <xref href="System.DateTimeKind"></xref> values.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.Add(System.TimeSpan)
  commentId: M:System.DateTime.Add(System.TimeSpan)
  id: Add(System.TimeSpan)
  parent: System.DateTime
  langs:
  - csharp
  name: Add(TimeSpan)
  nameWithType: DateTime.Add(TimeSpan)
  fullName: DateTime.Add(TimeSpan)
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Returns a new <xref href="System.DateTime"></xref> that adds the value of the specified <xref href="System.TimeSpan"></xref> to the value of this instance.
  remarks: "You can use the <xref:System.DateTime.Add%2A> method to add more than one kind of time interval (days, hours, minutes, seconds, or milliseconds) in a single operation. This method's behavior is identical to that of the addition operator. The <xref:System.DateTime> structure also supports specialized addition methods (such as <xref:System.DateTime.AddDays%2A>, <xref:System.DateTime.AddHours%2A>, and <xref:System.DateTime.AddMinutes%2A>) for each time interval.  \n  \n The <xref:System.DateTime.Add%2A> method takes into account leap years and the number of days in a month when performing date arithmetic.  \n  \n This method does not change the value of this <xref:System.DateTime>. Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation. The <xref:System.DateTime.Kind%2A> property of the new <xref:System.DateTime> instance is the same as that of the current instance."
  example:
  - "The following example demonstrates the <xref:System.DateTime.Add%2A> method. It calculates the day of the week that is 36 days (864 hours) from this moment.  \n  \n [!code-cpp[DateTime.Add#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.Add/CPP/class1.cpp#1)]\n [!code-csharp[DateTime.Add#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Add/CS/class1.cs#1)]\n [!code-vb[DateTime.Add#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Add/VB/class1.vb#1)]"
  syntax:
    content: public DateTime Add (TimeSpan value);
    parameters:
    - id: value
      type: System.TimeSpan
      description: A positive or negative time interval.
    return:
      type: System.DateTime
      description: An object whose value is the sum of the date and time represented by this instance and the time interval represented by <code>value</code>.
  overload: System.DateTime.Add*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The resulting <xref href="System.DateTime"></xref> is less than <xref href="System.DateTime.MinValue"></xref> or greater than <xref href="System.DateTime.MaxValue"></xref>.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.AddDays(System.Double)
  commentId: M:System.DateTime.AddDays(System.Double)
  id: AddDays(System.Double)
  parent: System.DateTime
  langs:
  - csharp
  name: AddDays(Double)
  nameWithType: DateTime.AddDays(Double)
  fullName: DateTime.AddDays(Double)
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Returns a new <xref href="System.DateTime"></xref> that adds the specified number of days to the value of this instance.
  remarks: "This method does not change the value of this <xref:System.DateTime>. Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation.  \n  \n The fractional part of `value` is the fractional part of a day. For example, 4.5 is equivalent to 4 days, 12 hours, 0 minutes, 0 seconds, 0 milliseconds, and 0 ticks.  \n  \n The `value` parameter is rounded to the nearest millisecond.  \n  \n The<xref:System.DateTime.AddDays%2A> method takes into account leap years and the number of days in a month when performing date arithmetic."
  example:
  - "The following example uses the <xref:System.DateTime.AddDays%2A> method to determine the day of the week 36 days after the current date.  \n  \n [!code-cpp[DateTime.AddDays#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.AddDays/CPP/class1.cpp#1)]\n [!code-csharp[DateTime.AddDays#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.AddDays/CS/class1.cs#1)]\n [!code-vb[DateTime.AddDays#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.AddDays/VB/class1.vb#1)]"
  syntax:
    content: public DateTime AddDays (double value);
    parameters:
    - id: value
      type: System.Double
      description: A number of whole and fractional days. The <code>value</code> parameter can be negative or positive.
    return:
      type: System.DateTime
      description: An object whose value is the sum of the date and time represented by this instance and the number of days represented by <code>value</code>.
  overload: System.DateTime.AddDays*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The resulting <xref href="System.DateTime"></xref> is less than <xref href="System.DateTime.MinValue"></xref> or greater than <xref href="System.DateTime.MaxValue"></xref>.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.AddHours(System.Double)
  commentId: M:System.DateTime.AddHours(System.Double)
  id: AddHours(System.Double)
  parent: System.DateTime
  langs:
  - csharp
  name: AddHours(Double)
  nameWithType: DateTime.AddHours(Double)
  fullName: DateTime.AddHours(Double)
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Returns a new <xref href="System.DateTime"></xref> that adds the specified number of hours to the value of this instance.
  remarks: "This method does not change the value of this <xref:System.DateTime>. Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation. The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is the same as that of `value`.  \n  \n The fractional part of `value` is the fractional part of an hour. For example, 4.5 is equivalent to 4 hours, 30 minutes, 0 seconds, 0 milliseconds, and 0 ticks.  \n  \n The `value` parameter is rounded to the nearest millisecond.  \n  \n Converting time intervals of less than an hour to a fraction can involve a loss of precision if the result is a non-terminating repeating decimal. (For example, one minute is 0.016667 of an hour.) If this is problematic, you can use the <xref:System.DateTime.Add%2A> method, which enables you to specify more than one kind of time interval in a single method call and eliminates the need to convert time intervals to fractional parts of an hour."
  example:
  - "The following example uses the <xref:System.DateTime.AddHours%2A> method to add a number of whole and fractional values to a date and time. It also illustrates the loss of precision caused by passing the method a value that includes a fractional component.  \n  \n [!code-csharp[System.DateTime.AddHours#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.AddHours/cs/AddHours1.cs#1)]\n [!code-vb[System.DateTime.AddHours#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.AddHours/vb/AddHours1.vb#1)]"
  syntax:
    content: public DateTime AddHours (double value);
    parameters:
    - id: value
      type: System.Double
      description: A number of whole and fractional hours. The <code>value</code> parameter can be negative or positive.
    return:
      type: System.DateTime
      description: An object whose value is the sum of the date and time represented by this instance and the number of hours represented by <code>value</code>.
  overload: System.DateTime.AddHours*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The resulting <xref href="System.DateTime"></xref> is less than <xref href="System.DateTime.MinValue"></xref> or greater than <xref href="System.DateTime.MaxValue"></xref>.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.AddMilliseconds(System.Double)
  commentId: M:System.DateTime.AddMilliseconds(System.Double)
  id: AddMilliseconds(System.Double)
  parent: System.DateTime
  langs:
  - csharp
  name: AddMilliseconds(Double)
  nameWithType: DateTime.AddMilliseconds(Double)
  fullName: DateTime.AddMilliseconds(Double)
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Returns a new <xref href="System.DateTime"></xref> that adds the specified number of milliseconds to the value of this instance.
  remarks: "This method does not change the value of this <xref:System.DateTime>. Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation.  \n  \n The fractional part of `value` is the fractional part of a millisecond. For example, 4.5 is equivalent to 4 milliseconds and 5000 ticks, where one millisecond = 10000 ticks.  \n  \n The `value` parameter is rounded to the nearest integer."
  example:
  - "The following example uses the <xref:System.DateTime.AddMilliseconds%2A> method to add one millisecond and 1.5 milliseconds to a <xref:System.DateTime> value. It then displays each new value and displays the difference between it and the original value. The difference is displayed both as a time span and as a number of ticks. The example makes it clear that one millisecond equals 10,000 ticks. It also shows that fractional milliseconds are rounded before performing the addition; the <xref:System.DateTime> value that results from adding 1.5 milliseconds to the original date is 2 milliseconds greater than the original date.  \n  \n [!code-csharp[System.DateTime.AddMilliseconds#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.addmilliseconds/cs/addmilliseconds2.cs#1)]\n [!code-vb[System.DateTime.AddMilliseconds#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.addmilliseconds/vb/addmilliseconds2.vb#1)]"
  syntax:
    content: public DateTime AddMilliseconds (double value);
    parameters:
    - id: value
      type: System.Double
      description: A number of whole and fractional milliseconds. The <code>value</code> parameter can be negative or positive. Note that this value is rounded to the nearest integer.
    return:
      type: System.DateTime
      description: An object whose value is the sum of the date and time represented by this instance and the number of milliseconds represented by <code>value</code>.
  overload: System.DateTime.AddMilliseconds*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The resulting <xref href="System.DateTime"></xref> is less than <xref href="System.DateTime.MinValue"></xref> or greater than <xref href="System.DateTime.MaxValue"></xref>.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.AddMinutes(System.Double)
  commentId: M:System.DateTime.AddMinutes(System.Double)
  id: AddMinutes(System.Double)
  parent: System.DateTime
  langs:
  - csharp
  name: AddMinutes(Double)
  nameWithType: DateTime.AddMinutes(Double)
  fullName: DateTime.AddMinutes(Double)
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Returns a new <xref href="System.DateTime"></xref> that adds the specified number of minutes to the value of this instance.
  remarks: "This method does not change the value of this <xref:System.DateTime>. Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation.  \n  \n The fractional part of `value` is the fractional part of a minute. For example, 4.5 is equivalent to 4 minutes, 30 seconds, 0 milliseconds, and 0 ticks.  \n  \n The `value` parameter is rounded to the nearest millisecond."
  example:
  - "The following example uses the <xref:System.DateTime.AddMinutes%2A> method to add a number of whole and fractional values to a date and time.  \n  \n [!code-cpp[System.DateTime.AddMinutes#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.datetime.addminutes/cpp/addminutes1.cpp#1)]\n [!code-csharp[System.DateTime.AddMinutes#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.addminutes/cs/addminutes1.cs#1)]\n [!code-vb[System.DateTime.AddMinutes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.addminutes/vb/addminutes1.vb#1)]"
  syntax:
    content: public DateTime AddMinutes (double value);
    parameters:
    - id: value
      type: System.Double
      description: A number of whole and fractional minutes. The <code>value</code> parameter can be negative or positive.
    return:
      type: System.DateTime
      description: An object whose value is the sum of the date and time represented by this instance and the number of minutes represented by <code>value</code>.
  overload: System.DateTime.AddMinutes*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The resulting <xref href="System.DateTime"></xref> is less than <xref href="System.DateTime.MinValue"></xref> or greater than <xref href="System.DateTime.MaxValue"></xref>.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.AddMonths(System.Int32)
  commentId: M:System.DateTime.AddMonths(System.Int32)
  id: AddMonths(System.Int32)
  parent: System.DateTime
  langs:
  - csharp
  name: AddMonths(Int32)
  nameWithType: DateTime.AddMonths(Int32)
  fullName: DateTime.AddMonths(Int32)
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Returns a new <xref href="System.DateTime"></xref> that adds the specified number of months to the value of this instance.
  remarks: "This method does not change the value of this <xref:System.DateTime> object. Instead, it returns a new <xref:System.DateTime> object whose value is the result of this operation.  \n  \n The <xref:System.DateTime.AddMonths%2A> method calculates the resulting month and year, taking into account leap years and the number of days in a month, then adjusts the day part of the resulting <xref:System.DateTime> object. If the resulting day is not a valid day in the resulting month, the last valid day of the resulting month is used. For example, March 31st + 1 month = April 30th, and March 31st - 1 month = February 28 for a non-leap year and February 29 for a leap year.  \n  \n The time-of-day part of the resulting <xref:System.DateTime> object remains the same as this instance."
  example:
  - "The following example adds between zero and fifteen months to the last day of December, 2015. In this case, the AddMonths method returns the date of the last day of each month, and successfully handles leap years.  \n  \n [!code-csharp[System.DateTime.AddMonths#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.addmonths/cs/addmonths1.cs#1)]\n [!code-vb[System.DateTime.AddMonths#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.addmonths/vb/addmonths1.vb#1)]"
  syntax:
    content: public DateTime AddMonths (int months);
    parameters:
    - id: months
      type: System.Int32
      description: A number of months. The <code>months</code> parameter can be negative or positive.
    return:
      type: System.DateTime
      description: An object whose value is the sum of the date and time represented by this instance and <code>months</code>.
  overload: System.DateTime.AddMonths*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The resulting <xref href=\"System.DateTime\"></xref> is less than <xref href=\"System.DateTime.MinValue\"></xref> or greater than <xref href=\"System.DateTime.MaxValue\"></xref>.  \n  \n -or-  \n  \n <code>months</code> is less than -120,000 or greater than 120,000."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.AddSeconds(System.Double)
  commentId: M:System.DateTime.AddSeconds(System.Double)
  id: AddSeconds(System.Double)
  parent: System.DateTime
  langs:
  - csharp
  name: AddSeconds(Double)
  nameWithType: DateTime.AddSeconds(Double)
  fullName: DateTime.AddSeconds(Double)
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Returns a new <xref href="System.DateTime"></xref> that adds the specified number of seconds to the value of this instance.
  remarks: "This method does not change the value of this <xref:System.DateTime>. Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation.  \n  \n The fractional part of `value` is the fractional part of a second. For example, 4.5 is equivalent to 4 seconds, 500 milliseconds, and 0 ticks.  \n  \n The `value` parameter is rounded to the nearest millisecond."
  example:
  - "The following example uses the<xref:System.DateTime.AddSeconds%2A>method to add 30 seconds and the number of seconds in one day to a <xref:System.DateTime> value. It then displays each new value and displays the difference between it and the original value. The difference is displayed both as a time span and as a number of ticks.  \n  \n [!code-csharp[System.DateTime.AddSeconds#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.addseconds/cs/addseconds1.cs#1)]\n [!code-vb[System.DateTime.AddSeconds#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.addseconds/vb/addseconds1.vb#1)]"
  syntax:
    content: public DateTime AddSeconds (double value);
    parameters:
    - id: value
      type: System.Double
      description: A number of whole and fractional seconds. The <code>value</code> parameter can be negative or positive.
    return:
      type: System.DateTime
      description: An object whose value is the sum of the date and time represented by this instance and the number of seconds represented by <code>value</code>.
  overload: System.DateTime.AddSeconds*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The resulting <xref href="System.DateTime"></xref> is less than <xref href="System.DateTime.MinValue"></xref> or greater than <xref href="System.DateTime.MaxValue"></xref>.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.AddTicks(System.Int64)
  commentId: M:System.DateTime.AddTicks(System.Int64)
  id: AddTicks(System.Int64)
  parent: System.DateTime
  langs:
  - csharp
  name: AddTicks(Int64)
  nameWithType: DateTime.AddTicks(Int64)
  fullName: DateTime.AddTicks(Int64)
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Returns a new <xref href="System.DateTime"></xref> that adds the specified number of ticks to the value of this instance.
  remarks: This method does not change the value of this <xref:System.DateTime>. Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation.
  syntax:
    content: public DateTime AddTicks (long value);
    parameters:
    - id: value
      type: System.Int64
      description: A number of 100-nanosecond ticks. The <code>value</code> parameter can be positive or negative.
    return:
      type: System.DateTime
      description: An object whose value is the sum of the date and time represented by this instance and the time represented by <code>value</code>.
  overload: System.DateTime.AddTicks*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The resulting <xref href="System.DateTime"></xref> is less than <xref href="System.DateTime.MinValue"></xref> or greater than <xref href="System.DateTime.MaxValue"></xref>.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.AddYears(System.Int32)
  commentId: M:System.DateTime.AddYears(System.Int32)
  id: AddYears(System.Int32)
  parent: System.DateTime
  langs:
  - csharp
  name: AddYears(Int32)
  nameWithType: DateTime.AddYears(Int32)
  fullName: DateTime.AddYears(Int32)
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Returns a new <xref href="System.DateTime"></xref> that adds the specified number of years to the value of this instance.
  remarks: "This method does not change the value of this <xref:System.DateTime> object. Instead, it returns a new <xref:System.DateTime> object whose value is the result of this operation.  \n  \n The <xref:System.DateTime.AddYears%2A> method calculates the resulting year taking into account leap years. The month and time-of-day part of the resulting <xref:System.DateTime> object remains the same as this instance.  \n  \n If the current instance represents the leap day in a leap year, the return value depends on the target date:  \n  \n-   If `value` + <xref:System.DateTime.Year%2A?displayProperty=fullName> is also a leap year, the return value represents the leap day in that year. For example, if four years is added to February 29, 2012, the date returned is February 29, 2016.  \n  \n-   If `value` + <xref:System.DateTime.Year%2A?displayProperty=fullName> is not a leap year, the return value represents the day before the leap day in that year. For example, if one year is added to February 29, 2012, the date returned is February 28, 2013.  \n  \n The following example illustrates using the <xref:System.DateTime.AddYears%2A> method with a <xref:System.DateTime> value that represents a leap year day. It displays the date for the fifteen years prior to and the fifteen years that follow February 29, 2000.  \n  \n [!code-csharp[System.DateTime.AddYears#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.addyears/cs/addyears1.cs#1)]\n [!code-vb[System.DateTime.AddYears#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.addyears/vb/addyears1.vb#1)]"
  syntax:
    content: public DateTime AddYears (int value);
    parameters:
    - id: value
      type: System.Int32
      description: A number of years. The <code>value</code> parameter can be negative or positive.
    return:
      type: System.DateTime
      description: An object whose value is the sum of the date and time represented by this instance and the number of years represented by <code>value</code>.
  overload: System.DateTime.AddYears*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>value</code> or the resulting <xref href="System.DateTime"></xref> is less than <xref href="System.DateTime.MinValue"></xref> or greater than <xref href="System.DateTime.MaxValue"></xref>.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.Compare(System.DateTime,System.DateTime)
  commentId: M:System.DateTime.Compare(System.DateTime,System.DateTime)
  id: Compare(System.DateTime,System.DateTime)
  parent: System.DateTime
  langs:
  - csharp
  name: Compare(DateTime, DateTime)
  nameWithType: DateTime.Compare(DateTime, DateTime)
  fullName: DateTime.Compare(DateTime, DateTime)
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Compares two instances of <xref href="System.DateTime"></xref> and returns an integer that indicates whether the first instance is earlier than, the same as, or later than the second instance.
  remarks: To determine the relationship of `t1` to `t2`, the <xref:System.DateTime.Compare%2A> method compares the <xref:System.DateTime.Ticks%2A> property of `t1` and `t2` but ignores their <xref:System.DateTime.Kind%2A> property. Before comparing <xref:System.DateTime> objects, ensure that the objects represent times in the same time zone.
  example:
  - "The following example demonstrates the<xref:System.DateTime.Compare%2A> method.  \n  \n [!code-csharp[System.DateTime.Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.compare/cs/compare1.cs#1)]\n [!code-vb[System.DateTime.Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.compare/vb/compare1.vb#1)]"
  syntax:
    content: public static int Compare (DateTime t1, DateTime t2);
    parameters:
    - id: t1
      type: System.DateTime
      description: The first object to compare.
    - id: t2
      type: System.DateTime
      description: The second object to compare.
    return:
      type: System.Int32
      description: "A signed number indicating the relative values of <code>t1</code> and <code>t2</code>.  \n  \n <table><thead><tr><th> Value Type  \n  \n </th><th> Condition  \n  \n </th></tr></thead><tbody><tr><td> Less than zero  \n  \n </td><td><code>t1</code> is earlier than <code>t2</code>.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td><code>t1</code> is the same as <code>t2</code>.  \n  \n </td></tr><tr><td> Greater than zero  \n  \n </td><td><code>t1</code> is later than <code>t2</code>.  \n  \n </td></tr></tbody></table>"
  overload: System.DateTime.Compare*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.CompareTo(System.DateTime)
  commentId: M:System.DateTime.CompareTo(System.DateTime)
  id: CompareTo(System.DateTime)
  parent: System.DateTime
  langs:
  - csharp
  name: CompareTo(DateTime)
  nameWithType: DateTime.CompareTo(DateTime)
  fullName: DateTime.CompareTo(DateTime)
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Compares the value of this instance to a specified <xref href="System.DateTime"></xref> value and returns an integer that indicates whether this instance is earlier than, the same as, or later than the specified <xref href="System.DateTime"></xref> value.
  remarks: "To determine the relationship of the current instance to `value`, the <xref:System.DateTime.CompareTo%2A> method compares the <xref:System.DateTime.Ticks%2A> property of the current instance and `value` but ignores their <xref:System.DateTime.Kind%2A> property.  Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone. You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> properties.  \n  \n This method implements the <xref:System.IComparable%601?displayProperty=fullName> interface and performs slightly better than the <xref:System.DateTime.CompareTo%28System.Object%29?displayProperty=fullName> method overload because it does not have to convert the `value` parameter to an object."
  example:
  - "The following example instantiates three <xref:System.DateTime> objects, one that represents today's date, another that represents the date one year previously, and a third that represents the date one year in the future. It then calls the <xref:System.DateTime.CompareTo%28System.DateTime%29> method and displays the result of the comparison.  \n  \n [!code-csharp[DateTime.CompareTo.2#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.CompareTo.2/CS/CompareTo_CS1_24564.cs#1)]\n [!code-vb[DateTime.CompareTo.2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.CompareTo.2/VB/CompareTo_VB1_24564.vb#1)]"
  syntax:
    content: public int CompareTo (DateTime value);
    parameters:
    - id: value
      type: System.DateTime
      description: The object to compare to the current instance.
    return:
      type: System.Int32
      description: "A signed number indicating the relative values of this instance and the <code>value</code> parameter.  \n  \n <table><thead><tr><th> Value  \n  \n </th><th> Description  \n  \n </th></tr></thead><tbody><tr><td> Less than zero  \n  \n </td><td> This instance is earlier than <code>value</code>.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td> This instance is the same as <code>value</code>.  \n  \n </td></tr><tr><td> Greater than zero  \n  \n </td><td> This instance is later than <code>value</code>.  \n  \n </td></tr></tbody></table>"
  overload: System.DateTime.CompareTo*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.CompareTo(System.Object)
  commentId: M:System.DateTime.CompareTo(System.Object)
  id: CompareTo(System.Object)
  parent: System.DateTime
  langs:
  - csharp
  name: CompareTo(Object)
  nameWithType: DateTime.CompareTo(Object)
  fullName: DateTime.CompareTo(Object)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Compares the value of this instance to a specified object that contains a specified <xref href="System.DateTime"></xref> value, and returns an integer that indicates whether this instance is earlier than, the same as, or later than the specified <xref href="System.DateTime"></xref> value.
  remarks: "To determine the relationship of the current instance to `value`, the<xref:System.DateTime.CompareTo%2A> method compares the <xref:System.DateTime.Ticks%2A> property of the current instance and `value` but ignores their <xref:System.DateTime.Kind%2A> property. Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone. You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> properties.  \n  \n Any instance of <xref:System.DateTime>, regardless of its value, is considered greater than `null`."
  example:
  - "The following example demonstrates the <xref:System.DateTime.CompareTo%2A> method.  \n  \n [!code-cpp[DateTime.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.CompareTo/CPP/class1.cpp#1)]\n [!code-csharp[DateTime.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.CompareTo/CS/class1.cs#1)]\n [!code-vb[DateTime.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.CompareTo/VB/class1.vb#1)]"
  syntax:
    content: public int CompareTo (object value);
    parameters:
    - id: value
      type: System.Object
      description: A boxed object to compare, or `null`.
    return:
      type: System.Int32
      description: "A signed number indicating the relative values of this instance and <code>value</code>.  \n  \n <table><thead><tr><th> Value  \n  \n </th><th> Description  \n  \n </th></tr></thead><tbody><tr><td> Less than zero  \n  \n </td><td> This instance is earlier than <code>value</code>.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td> This instance is the same as <code>value</code>.  \n  \n </td></tr><tr><td> Greater than zero  \n  \n </td><td> This instance is later than <code>value</code>, or <code>value</code> is `null`.  \n  \n </td></tr></tbody></table>"
  overload: System.DateTime.CompareTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>value</code> is not a <xref href="System.DateTime"></xref>.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.Date
  commentId: P:System.DateTime.Date
  id: Date
  parent: System.DateTime
  langs:
  - csharp
  name: Date
  nameWithType: DateTime.Date
  fullName: DateTime.Date
  type: Property
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Gets the date component of this instance.
  remarks: "The value of the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is the same as that of the current instance.  \n  \n Because the <xref:System.DateTime> type represents both dates and times in a single type, it is important to avoid misinterpreting a date returned by the <xref:System.DateTime.Date%2A> property as a date and time."
  example:
  - "The following example uses the <xref:System.DateTime.Date%2A> property to extract the date component of a <xref:System.DateTime> value with its time component set to zero (or 0:00:00, or midnight). It also illustrates that, depending on the format string used when displaying the <xref:System.DateTime> value, the time component can continue to appear in formatted output.  \n  \n [!code-cpp[System.DateTime.Date#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.DateTime.Date/cpp/date1.cpp#1)]\n [!code-csharp[System.DateTime.Date#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Date/cs/Date1.cs#1)]\n [!code-vb[System.DateTime.Date#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Date/vb/Date1.vb#1)]"
  syntax:
    content: public DateTime Date { get; }
    return:
      type: System.DateTime
      description: A new object with the same date as this instance, and the time value set to 12:00:00 midnight (00:00:00).
  overload: System.DateTime.Date*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.Day
  commentId: P:System.DateTime.Day
  id: Day
  parent: System.DateTime
  langs:
  - csharp
  name: Day
  nameWithType: DateTime.Day
  fullName: DateTime.Day
  type: Property
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Gets the day of the month represented by this instance.
  remarks: "The <xref:System.DateTime.Day%2A> property always returns the day of the month in the Gregorian calendar, even if the current <xref:System.DateTime> value was instantiated using some other calendar or if the current thread culture's default calendar is not the Gregorian calendar. To retrieve the day of the month of a particular date using some other calendar, call that calendar's <xref:System.Globalization.Calendar.GetDayOfMonth%2A?displayProperty=fullName> method. The following example uses both the <xref:System.DateTime.Day%2A> property and the <xref:System.Globalization.HijriCalendar.GetDayOfMonth%2A?displayProperty=fullName> method to retrieve the day of the month for a <xref:System.DateTime> value that is instantiated using the Hijri calendar.  \n  \n [!code-csharp[System.DateTime.Day#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Day/cs/Day1.cs#1)]\n [!code-vb[System.DateTime.Day#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Day/vb/Day1.vb#1)]  \n  \n Similarly, the following example uses both the <xref:System.DateTime.Day%2A> property and the <xref:System.Globalization.HijriCalendar.GetDayOfMonth%2A?displayProperty=fullName> method to retrieve the day of the month when the current thread culture is ar-SA, which uses Hijri as its default calendar.  \n  \n [!code-csharp[System.DateTime.Day#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Day/cs/Day2.cs#2)]\n [!code-vb[System.DateTime.Day#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Day/vb/Day2.vb#2)]"
  example:
  - "The following example demonstrates the <xref:System.DateTime.Day%2A> property.  \n  \n [!code-cpp[System.DateTime.Minute etc#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CPP/class1.cpp#1)]\n [!code-csharp[System.DateTime.Minute etc#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CS/class1.cs#1)]\n [!code-vb[System.DateTime.Minute etc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Minute etc/VB/class1.vb#1)]"
  syntax:
    content: public int Day { get; }
    return:
      type: System.Int32
      description: The day component, expressed as a value between 1 and 31.
  overload: System.DateTime.Day*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.DayOfWeek
  commentId: P:System.DateTime.DayOfWeek
  id: DayOfWeek
  parent: System.DateTime
  langs:
  - csharp
  name: DayOfWeek
  nameWithType: DateTime.DayOfWeek
  fullName: DateTime.DayOfWeek
  type: Property
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Gets the day of the week represented by this instance.
  remarks: "The value of the constants in the <xref:System.DayOfWeek> enumeration ranges from <xref:System.DayOfWeek?displayProperty=fullName> to <xref:System.DayOfWeek?displayProperty=fullName>. If cast to an integer, its value ranges from zero (which indicates <xref:System.DayOfWeek?displayProperty=fullName>) to six (which indicates <xref:System.DayOfWeek?displayProperty=fullName>).  \n  \n The <xref:System.DateTime.DayOfWeek%2A> property returns an enumerated constant; it does not reflect a system's regional and language settings. To retrieve a string representing a localized weekday name for a particular date, call one of the overloads of the <xref:System.DateTime.ToString%2A> method that includes a `format` parameter and pass it either the `ddd` or `dddd` custom format strings. For details, see [How to: Extract the Day of the Week from a Specific Date](~/docs/standard/base-types/how-to-extract-the-day-of-the-week-from-a-specific-date.md)."
  example:
  - "The following example demonstrates the <xref:System.DateTime.DayOfWeek%2A> property and the <xref:System.DayOfWeek?displayProperty=fullName> enumeration.  \n  \n [!code-cpp[DateTime.DayOfWeek#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.DayOfWeek/CPP/dow.cpp#1)]\n [!code-csharp[DateTime.DayOfWeek#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.DayOfWeek/CS/dow.cs#1)]\n [!code-vb[DateTime.DayOfWeek#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.DayOfWeek/VB/dow.vb#1)]"
  syntax:
    content: public DayOfWeek DayOfWeek { get; }
    return:
      type: System.DayOfWeek
      description: An enumerated constant that indicates the day of the week of this <xref href="System.DateTime"></xref> value.
  overload: System.DateTime.DayOfWeek*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.DayOfYear
  commentId: P:System.DateTime.DayOfYear
  id: DayOfYear
  parent: System.DateTime
  langs:
  - csharp
  name: DayOfYear
  nameWithType: DateTime.DayOfYear
  fullName: DateTime.DayOfYear
  type: Property
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Gets the day of the year represented by this instance.
  remarks: The<xref:System.DateTime.DayOfYear%2A> property takes leap years into account when it calculates the day of the year. The property value always reflects the day of the year in the Gregorian calendar, regardless of the current thread culture's current calendar. To retrieve the day of the year in a different calendar, call the <xref:System.Globalization.Calendar.GetDayOfYear%2A?displayProperty=fullName> method of that calendar.
  example:
  - "The following example displays the day of the year of December 31 for the years 2010-2020 in the Gregorian calendar. Note that the example shows that December 31 is the 366th day of the year in leap years.  \n  \n [!code-csharp[System.DateTime.DayOfYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.dayofyear/cs/dayofyear2.cs#1)]\n [!code-vb[System.DateTime.DayOfYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.dayofyear/vb/dayofyear2.vb#1)]"
  syntax:
    content: public int DayOfYear { get; }
    return:
      type: System.Int32
      description: The day of the year, expressed as a value between 1 and 366.
  overload: System.DateTime.DayOfYear*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.DaysInMonth(System.Int32,System.Int32)
  commentId: M:System.DateTime.DaysInMonth(System.Int32,System.Int32)
  id: DaysInMonth(System.Int32,System.Int32)
  parent: System.DateTime
  langs:
  - csharp
  name: DaysInMonth(Int32, Int32)
  nameWithType: DateTime.DaysInMonth(Int32, Int32)
  fullName: DateTime.DaysInMonth(Int32, Int32)
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Returns the number of days in the specified month and year.
  remarks: The<xref:System.DateTime.DaysInMonth%2A> method always interprets `month` and `year` as the month and year of the Gregorian calendar even if the Gregorian calendar is not the current culture's current calendar. To get the number of days in a specified month of a particular calendar, call that calendar's <xref:System.Globalization.Calendar.GetDaysInMonth%2A> method.
  example:
  - "The following example demonstrates how to use the <xref:System.DateTime.DaysInMonth%2A> method to determine the number of days in July 2001, February 1998 (a non-leap year), and February 1996 (a leap year).  \n  \n [!code-cpp[DateTime.DaysInMonth#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.DaysInMonth/CPP/class1.cpp#1)]\n [!code-csharp[DateTime.DaysInMonth#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.DaysInMonth/CS/class1.cs#1)]\n [!code-vb[DateTime.DaysInMonth#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.DaysInMonth/VB/class1.vb#1)]  \n  \n The following example displays the number of days in each month of a year specified in an integer array.  \n  \n [!code-csharp[System.DateTime.DaysInMonth#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.daysinmonth/cs/daysinmonth3.cs#1)]\n [!code-vb[System.DateTime.DaysInMonth#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.daysinmonth/vb/daysinmonth3.vb#1)]"
  syntax:
    content: public static int DaysInMonth (int year, int month);
    parameters:
    - id: year
      type: System.Int32
      description: The year.
    - id: month
      type: System.Int32
      description: The month (a number ranging from 1 to 12).
    return:
      type: System.Int32
      description: "The number of days in <code>month</code> for the specified <code>year</code>.  \n  \n For example, if <code>month</code> equals 2 for February, the return value is 28 or 29 depending upon whether <code>year</code> is a leap year."
  overload: System.DateTime.DaysInMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>month</code> is less than 1 or greater than 12.  \n  \n -or-  \n  \n <code>year</code> is less than 1 or greater than 9999."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.Equals(System.DateTime)
  commentId: M:System.DateTime.Equals(System.DateTime)
  id: Equals(System.DateTime)
  parent: System.DateTime
  langs:
  - csharp
  name: Equals(DateTime)
  nameWithType: DateTime.Equals(DateTime)
  fullName: DateTime.Equals(DateTime)
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Returns a value indicating whether the value of this instance is equal to the value of the specified <xref href="System.DateTime"></xref> instance.
  remarks: "The current instance and `value` are equal if their <xref:System.DateTime.Ticks%2A> property values are equal. Their <xref:System.DateTime.Kind%2A> property values are not considered in the test for equality.  \n  \n This method implements the <xref:System.IEquatable%601?displayProperty=fullName> interface, and performs slightly better than the <xref:System.DateTime.Equals%2A> method because the `value` parameter does not have to be converted to an object."
  example:
  - "The following example demonstrates the <xref:System.DateTime.Equals%2A> method.  \n  \n [!code-csharp[System.DateTime.Equals-Instance#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Equals-Instance/cs/sample.cs#1)]\n [!code-vb[System.DateTime.Equals-Instance#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Equals-Instance/vb/sample.vb#1)]"
  syntax:
    content: public bool Equals (DateTime value);
    parameters:
    - id: value
      type: System.DateTime
      description: The object to compare to this instance.
    return:
      type: System.Boolean
      description: '`true` if the <code>value</code> parameter equals the value of this instance; otherwise, `false`.'
  overload: System.DateTime.Equals*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.Equals(System.Object)
  commentId: M:System.DateTime.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.DateTime
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: DateTime.Equals(Object)
  fullName: DateTime.Equals(Object)
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Returns a value indicating whether this instance is equal to a specified object.
  remarks: The current instance and `value` are equal if their <xref:System.DateTime.Ticks%2A> property values are equal. Their <xref:System.DateTime.Kind%2A> property values are not considered in the test for equality.
  example:
  - "The following example demonstrates the <xref:System.DateTime.Equals%2A> method.  \n  \n [!code-csharp[System.DateTime.Equals-Instance#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Equals-Instance/cs/sample.cs#1)]\n [!code-vb[System.DateTime.Equals-Instance#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Equals-Instance/vb/sample.vb#1)]"
  syntax:
    content: public override bool Equals (object value);
    parameters:
    - id: value
      type: System.Object
      description: The object to compare to this instance.
    return:
      type: System.Boolean
      description: '`true` if <code>value</code> is an instance of <xref href="System.DateTime"></xref> and equals the value of this instance; otherwise, `false`.'
  overload: System.DateTime.Equals*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.Equals(System.DateTime,System.DateTime)
  commentId: M:System.DateTime.Equals(System.DateTime,System.DateTime)
  id: Equals(System.DateTime,System.DateTime)
  parent: System.DateTime
  langs:
  - csharp
  name: Equals(DateTime, DateTime)
  nameWithType: DateTime.Equals(DateTime, DateTime)
  fullName: DateTime.Equals(DateTime, DateTime)
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Returns a value indicating whether two <xref href="System.DateTime"></xref> instances  have the same date and time value.
  remarks: '`t1` and `t2` are equal if their <xref:System.DateTime.Ticks%2A> property values are equal. Their<xref:System.DateTime.Kind%2A> property values are not considered in the test for equality.'
  example:
  - "The following example demonstrates the <xref:System.DateTime.Equals%2A> method.  \n  \n [!code-cpp[DateTime.Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.Equals/CPP/class1.cpp#1)]\n [!code-csharp[DateTime.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Equals/CS/class1.cs#1)]\n [!code-vb[DateTime.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Equals/VB/class1.vb#1)]"
  syntax:
    content: public static bool Equals (DateTime t1, DateTime t2);
    parameters:
    - id: t1
      type: System.DateTime
      description: The first object to compare.
    - id: t2
      type: System.DateTime
      description: The second object to compare.
    return:
      type: System.Boolean
      description: '`true` if the two values are equal; otherwise, `false`.'
  overload: System.DateTime.Equals*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.FromBinary(System.Int64)
  commentId: M:System.DateTime.FromBinary(System.Int64)
  id: FromBinary(System.Int64)
  parent: System.DateTime
  langs:
  - csharp
  name: FromBinary(Int64)
  nameWithType: DateTime.FromBinary(Int64)
  fullName: DateTime.FromBinary(Int64)
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Deserializes a 64-bit binary value and recreates an original serialized <xref href="System.DateTime"></xref> object.
  remarks: "Use the <xref:System.DateTime.ToBinary%2A> method to convert the value of the current <xref:System.DateTime> object to a binary value. Subsequently, use the binary value and the <xref:System.DateTime.FromBinary%2A> method to recreate the original <xref:System.DateTime> object.  \n  \n> [!IMPORTANT]\n>  In some cases, the <xref:System.DateTime> value returned by the <xref:System.DateTime.FromBinary%2A> method is not identical to the original <xref:System.DateTime> value supplied to the <xref:System.DateTime.ToBinary%2A> method. For more information, see the next section, \"Local Time Adjustment\".  \n  \n## Local Time Adjustment  \n A local time, which is a Coordinated Universal Time adjusted to the local time zone, is represented by a <xref:System.DateTime> structure whose <xref:System.DateTime.Kind%2A> property has the value <xref:System.DateTimeKind.Local>. When restoring a local <xref:System.DateTime> value from the binary representation that is produced by the <xref:System.DateTime.ToBinary%2A> method, the <xref:System.DateTime.FromBinary%2A> method may adjust the recreated value so that it is not equal to the original value. This can occur under the following conditions:  \n  \n-   If a local <xref:System.DateTime> object is serialized in one time zone by the <xref:System.DateTime.ToBinary%2A> method, and then deserialized in a different time zone by the <xref:System.DateTime.FromBinary%2A> method, the local time represented by the resulting <xref:System.DateTime> object is automatically adjusted to the second time zone.  \n  \n     For example, consider a <xref:System.DateTime> object that represents a local time of 3 P.M. An application that is executing in the U.S. Pacific Time zone uses the <xref:System.DateTime.ToBinary%2A> method to convert that <xref:System.DateTime> object to a binary value. Another application that is executing in the U.S. Eastern Time zone then uses the <xref:System.DateTime.FromBinary%2A> method to convert the binary value to a new <xref:System.DateTime> object. The value of the new <xref:System.DateTime> object is 6 P.M., which represents the same point in time as the original 3 P.M. value, but is adjusted to local time in the Eastern Time zone.  \n  \n-   If the binary representation of a local <xref:System.DateTime> value represents an invalid time in the local time zone of the system on which <xref:System.DateTime.FromBinary%2A> is called, the time is adjusted so that it is valid.  \n  \n     For example, the transition from standard time to daylight saving time occurs in the Pacific Time zone of the United States on March 14, 2010, at 2:00 A.M., when the time advances by one hour, to 3:00 A.M. This hour interval is an invalid time, that is, a time interval that does not exist in this time zone. The following example shows that when a time that falls within this range is converted to a binary value by the <xref:System.DateTime.ToBinary%2A> method and is then restored by the <xref:System.DateTime.FromBinary%2A> method, the original value is adjusted to become a valid time. You can determine whether a particular date and time value may be subject to modification by passing it to the <xref:System.TimeZoneInfo.IsInvalidTime%2A?displayProperty=fullName> method, as the example illustrates.  \n  \n     [!code-csharp[System.DateTime.FromBinary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.frombinary/cs/frombinary1.cs#1)]\n     [!code-vb[System.DateTime.FromBinary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.frombinary/vb/frombinary1.vb#1)]  \n  \n## Version Considerations  \n Starting with the .NET Framework version 2.0, a <xref:System.DateTime> structure consists of a private Kind field, which indicates whether the specified time is local time, Coordinated Universal Time (UTC), or neither, concatenated to a private Ticks field, which contains the number of 100-nanosecond ticks that specify a date and time. The number of ticks can be accessed with the <xref:System.DateTime.Ticks%2A> property and theKind field can be accessed with the <xref:System.DateTime.Kind%2A> property.  \n  \n Prior to the .NET Framework 2.0, if you serialized a <xref:System.DateTime> object manually instead of using a serialization interface such as <xref:System.Runtime.Serialization.ISerializable?displayProperty=fullName>, you needed to serialize only the Ticks data in the <xref:System.DateTime>. Starting with the .NET Framework 2.0, you must also serialize the Kind data."
  syntax:
    content: public static DateTime FromBinary (long dateData);
    parameters:
    - id: dateData
      type: System.Int64
      description: A 64-bit signed integer that encodes the <xref href="System.DateTime.Kind"></xref> property in a 2-bit field and the <xref href="System.DateTime.Ticks"></xref> property in a 62-bit field.
    return:
      type: System.DateTime
      description: An object that is equivalent to the <xref href="System.DateTime"></xref> object that was serialized by the <xref href="System.DateTime.ToBinary"></xref> method.
  overload: System.DateTime.FromBinary*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>dateData</code> is less than <xref href="System.DateTime.MinValue"></xref> or greater than <xref href="System.DateTime.MaxValue"></xref>.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.FromFileTime(System.Int64)
  commentId: M:System.DateTime.FromFileTime(System.Int64)
  id: FromFileTime(System.Int64)
  parent: System.DateTime
  langs:
  - csharp
  name: FromFileTime(Int64)
  nameWithType: DateTime.FromFileTime(Int64)
  fullName: DateTime.FromFileTime(Int64)
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Converts the specified Windows file time to an equivalent local time.
  remarks: "A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D. (C.E.) Coordinated Universal Time (UTC). Windows uses a file time to record when an application creates, accesses, or writes to a file.  \n  \n The `fileTime` parameter specifies a file time expressed in 100-nanosecond ticks.  \n  \n Starting with the .NET Framework version 2.0, the return value is a <xref:System.DateTime> whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName>."
  example:
  - "The following example demonstrates the <xref:System.DateTime.FromFileTime%2A> method.  \n  \n [!code-cpp[DateTime.FromFileTime#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.FromFileTime/CPP/class1.cpp#1)]\n [!code-csharp[DateTime.FromFileTime#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.FromFileTime/CS/class1.cs#1)]\n [!code-vb[DateTime.FromFileTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.FromFileTime/VB/class1.vb#1)]"
  syntax:
    content: public static DateTime FromFileTime (long fileTime);
    parameters:
    - id: fileTime
      type: System.Int64
      description: A Windows file time expressed in ticks.
    return:
      type: System.DateTime
      description: An object that represents the local time equivalent of the date and time represented by the <code>fileTime</code> parameter.
  overload: System.DateTime.FromFileTime*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>fileTime</code> is less than 0 or represents a time greater than <xref href="System.DateTime.MaxValue"></xref>.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.FromFileTimeUtc(System.Int64)
  commentId: M:System.DateTime.FromFileTimeUtc(System.Int64)
  id: FromFileTimeUtc(System.Int64)
  parent: System.DateTime
  langs:
  - csharp
  name: FromFileTimeUtc(Int64)
  nameWithType: DateTime.FromFileTimeUtc(Int64)
  fullName: DateTime.FromFileTimeUtc(Int64)
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Converts the specified Windows file time to an equivalent UTC time.
  remarks: "A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D. (C.E.) Coordinated Universal Time (UTC). Windows uses a file time to record when an application creates, accesses, or writes to a file.  \n  \n The `fileTime` parameter specifies a file time expressed in 100-nanosecond ticks.  \n  \n Starting with the .NET Framework version 2.0, the return value is a <xref:System.DateTime> whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Utc>."
  syntax:
    content: public static DateTime FromFileTimeUtc (long fileTime);
    parameters:
    - id: fileTime
      type: System.Int64
      description: A Windows file time expressed in ticks.
    return:
      type: System.DateTime
      description: An object that represents the UTC time equivalent of the date and time represented by the <code>fileTime</code> parameter.
  overload: System.DateTime.FromFileTimeUtc*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>fileTime</code> is less than 0 or represents a time greater than <xref href="System.DateTime.MaxValue"></xref>.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.FromOADate(System.Double)
  commentId: M:System.DateTime.FromOADate(System.Double)
  id: FromOADate(System.Double)
  parent: System.DateTime
  langs:
  - csharp
  name: FromOADate(Double)
  nameWithType: DateTime.FromOADate(Double)
  fullName: DateTime.FromOADate(Double)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Returns a <xref href="System.DateTime"></xref> equivalent to the specified OLE Automation Date.
  remarks: "The `d` parameter is a double-precision floating-point number that represents a date as the number of days before or after the base date, midnight, 30 December 1899. The sign and integral part of `d` encode the date as a positive or negative day displacement from 30 December 1899, and the absolute value of the fractional part of `d` encodes the time of day as a fraction of a day displacement from midnight. `d` must be a value between negative 657435.0 through positive 2958465.99999999.  \n  \n Note that because of the way dates are encoded, there are two ways of representing any time of day on 30 December 1899. For example, -0.5 and 0.5 both mean noon on 30 December 1899 because a day displacement of plus or minus zero days from the base date is still the base date, and a half day displacement from midnight is noon.  \n  \n See <xref:System.DateTime.ToOADate%2A> for more information on OLE Automation."
  syntax:
    content: public static DateTime FromOADate (double d);
    parameters:
    - id: d
      type: System.Double
      description: An OLE Automation Date value.
    return:
      type: System.DateTime
      description: An object that represents the same date and time as <code>d</code>.
  overload: System.DateTime.FromOADate*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The date is not a valid OLE Automation Date value.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.GetDateTimeFormats
  commentId: M:System.DateTime.GetDateTimeFormats
  id: GetDateTimeFormats
  parent: System.DateTime
  langs:
  - csharp
  name: GetDateTimeFormats()
  nameWithType: DateTime.GetDateTimeFormats()
  fullName: DateTime.GetDateTimeFormats()
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Converts the value of this instance to all the string representations supported by the standard date and time format specifiers.
  remarks: "The string array returned by the <xref:System.DateTime.GetDateTimeFormats?displayProperty=fullName> method is equivalent to combining the string arrays returned by separate calls to the <xref:System.DateTime.GetDateTimeFormats%28System.Char%29?displayProperty=fullName> method with the \"d\", \"D\", \"f\", \"F\", \"g\", \"G\", \"m\", \"o\", \"r\", \"s\", \"t\", \"T\", \"u\", \"U\", and \"y\" standard format strings. For more information about standard format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md).  \n  \n Each element of the return value is formatted using information from the current culture. For more information about culture-specific formatting information for the current culture, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName>.  \n  \n> [!IMPORTANT]\n>  Because this method uses culture-sensitive data, you should not assume that multiple calls to the method will return identical data. The data returned by this method can change if the current culture changes, the user overrides individual cultural settings, or an update occurs to the system's cultural data."
  example:
  - "The following example demonstrates the <xref:System.DateTime.GetDateTimeFormats?displayProperty=fullName> method. It displays the string representation of a date using all possible standard date and time formats in the computer's current culture, which in this case is en-US.  \n  \n [!code-cpp[DateTime.GetDateTimeFormats#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.GetDateTimeFormats/CPP/class1.cpp#1)]\n [!code-csharp[DateTime.GetDateTimeFormats#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.GetDateTimeFormats/CS/class1.cs#1)]\n [!code-vb[DateTime.GetDateTimeFormats#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.GetDateTimeFormats/VB/class1.vb#1)]  \n  \n The example displays the following output:  \n  \n```  \n7/28/2009  \n7/28/09  \n07/28/09  \n07/28/2009  \n09/07/28  \n2009-07-28  \n28-Jul-09  \nTuesday, July 28, 2009  \nJuly 28, 2009  \nTuesday, 28 July, 2009  \n28 July, 2009  \nTuesday, July 28, 2009 5:23 AM  \nTuesday, July 28, 2009 05:23 AM  \nTuesday, July 28, 2009 5:23  \nTuesday, July 28, 2009 05:23  \nJuly 28, 2009 5:23 AM  \nJuly 28, 2009 05:23 AM  \nJuly 28, 2009 5:23  \nJuly 28, 2009 05:23  \nTuesday, 28 July, 2009 5:23 AM  \nTuesday, 28 July, 2009 05:23 AM  \nTuesday, 28 July, 2009 5:23  \nTuesday, 28 July, 2009 05:23  \n28 July, 2009 5:23 AM  \n28 July, 2009 05:23 AM  \n28 July, 2009 5:23  \n28 July, 2009 05:23  \nTuesday, July 28, 2009 5:23:15 AM  \nTuesday, July 28, 2009 05:23:15 AM  \nTuesday, July 28, 2009 5:23:15  \nTuesday, July 28, 2009 05:23:15  \nJuly 28, 2009 5:23:15 AM  \nJuly 28, 2009 05:23:15 AM  \nJuly 28, 2009 5:23:15  \nJuly 28, 2009 05:23:15  \nTuesday, 28 July, 2009 5:23:15 AM  \nTuesday, 28 July, 2009 05:23:15 AM  \nTuesday, 28 July, 2009 5:23:15  \nTuesday, 28 July, 2009 05:23:15  \n28 July, 2009 5:23:15 AM  \n28 July, 2009 05:23:15 AM  \n28 July, 2009 5:23:15  \n28 July, 2009 05:23:15  \n7/28/2009 5:23 AM  \n7/28/2009 05:23 AM  \n7/28/2009 5:23  \n7/28/2009 05:23  \n7/28/09 5:23 AM  \n7/28/09 05:23 AM  \n7/28/09 5:23  \n7/28/09 05:23  \n07/28/09 5:23 AM  \n07/28/09 05:23 AM  \n07/28/09 5:23  \n07/28/09 05:23  \n07/28/2009 5:23 AM  \n07/28/2009 05:23 AM  \n07/28/2009 5:23  \n07/28/2009 05:23  \n09/07/28 5:23 AM  \n09/07/28 05:23 AM  \n09/07/28 5:23  \n09/07/28 05:23  \n2009-07-28 5:23 AM  \n2009-07-28 05:23 AM  \n2009-07-28 5:23  \n2009-07-28 05:23  \n28-Jul-09 5:23 AM  \n28-Jul-09 05:23 AM  \n28-Jul-09 5:23  \n28-Jul-09 05:23  \n7/28/2009 5:23:15 AM  \n7/28/2009 05:23:15 AM  \n7/28/2009 5:23:15  \n7/28/2009 05:23:15  \n7/28/09 5:23:15 AM  \n7/28/09 05:23:15 AM  \n7/28/09 5:23:15  \n7/28/09 05:23:15  \n07/28/09 5:23:15 AM  \n07/28/09 05:23:15 AM  \n07/28/09 5:23:15  \n07/28/09 05:23:15  \n07/28/2009 5:23:15 AM  \n07/28/2009 05:23:15 AM  \n07/28/2009 5:23:15  \n07/28/2009 05:23:15  \n09/07/28 5:23:15 AM  \n09/07/28 05:23:15 AM  \n09/07/28 5:23:15  \n09/07/28 05:23:15  \n2009-07-28 5:23:15 AM  \n2009-07-28 05:23:15 AM  \n2009-07-28 5:23:15  \n2009-07-28 05:23:15  \n28-Jul-09 5:23:15 AM  \n28-Jul-09 05:23:15 AM  \n28-Jul-09 5:23:15  \n28-Jul-09 05:23:15  \nJuly 28  \nJuly 28  \n2009-07-28T05:23:15.0160000  \n2009-07-28T05:23:15.0160000  \nTue, 28 Jul 2009 05:23:15 GMT  \nTue, 28 Jul 2009 05:23:15 GMT  \n2009-07-28T05:23:15  \n5:23 AM  \n05:23 AM  \n5:23  \n05:23  \n5:23:15 AM  \n05:23:15 AM  \n5:23:15  \n05:23:15  \n2009-07-28 05:23:15Z  \nTuesday, July 28, 2009 12:23:15 PM  \nTuesday, July 28, 2009 12:23:15 PM  \nTuesday, July 28, 2009 12:23:15  \nTuesday, July 28, 2009 12:23:15  \nJuly 28, 2009 12:23:15 PM  \nJuly 28, 2009 12:23:15 PM  \nJuly 28, 2009 12:23:15  \nJuly 28, 2009 12:23:15  \nTuesday, 28 July, 2009 12:23:15 PM  \nTuesday, 28 July, 2009 12:23:15 PM  \nTuesday, 28 July, 2009 12:23:15  \nTuesday, 28 July, 2009 12:23:15  \n28 July, 2009 12:23:15 PM  \n28 July, 2009 12:23:15 PM  \n28 July, 2009 12:23:15  \n28 July, 2009 12:23:15  \nJuly, 2009  \nJuly, 2009  \n```"
  syntax:
    content: public string[] GetDateTimeFormats ();
    parameters: []
    return:
      type: System.String[]
      description: A string array where each element is the representation of the value of this instance formatted with one of the standard date and time format specifiers.
  overload: System.DateTime.GetDateTimeFormats*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.GetDateTimeFormats(System.Char)
  commentId: M:System.DateTime.GetDateTimeFormats(System.Char)
  id: GetDateTimeFormats(System.Char)
  parent: System.DateTime
  langs:
  - csharp
  name: GetDateTimeFormats(Char)
  nameWithType: DateTime.GetDateTimeFormats(Char)
  fullName: DateTime.GetDateTimeFormats(Char)
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Converts the value of this instance to all the string representations supported by the specified standard date and time format specifier.
  remarks: "The `format` parameter can be any of the standard date and time format specifiers. These include d, D, f, F, g, G, M (or m), O (or o), R (or r), s, t, T, u, U, and Y (or y). For more information, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md).  \n  \n Each element of the return value is formatted using information from the current culture. For more information about culture-specific formatting information for the current culture, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName>.  \n  \n> [!IMPORTANT]\n>  Because this method uses culture-sensitive data, you should not assume that multiple calls to the method will return identical data. The data returned by this method can change if the current culture changes, the user overrides individual cultural settings, or an update occurs to the system's cultural data."
  example:
  - "The following example demonstrates the <xref:System.DateTime.GetDateTimeFormats%28System.Char%29> method. It displays the string representation of a date using the long date format specifier (\"D\") for the current culture.  \n  \n [!code-csharp[DateTime.GetDateTimeFormats#3](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.GetDateTimeFormats/CS/class1.cs#3)]\n [!code-vb[DateTime.GetDateTimeFormats#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.GetDateTimeFormats/VB/class1.vb#3)]"
  syntax:
    content: public string[] GetDateTimeFormats (char format);
    parameters:
    - id: format
      type: System.Char
      description: A standard date and time format string.
    return:
      type: System.String[]
      description: A string array where each element is the representation of the value of this instance formatted with the <code>format</code> standard date and time format specifier.
  overload: System.DateTime.GetDateTimeFormats*
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: <code>format</code> is not a valid standard date and time format specifier character.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.GetDateTimeFormats(System.IFormatProvider)
  commentId: M:System.DateTime.GetDateTimeFormats(System.IFormatProvider)
  id: GetDateTimeFormats(System.IFormatProvider)
  parent: System.DateTime
  langs:
  - csharp
  name: GetDateTimeFormats(IFormatProvider)
  nameWithType: DateTime.GetDateTimeFormats(IFormatProvider)
  fullName: DateTime.GetDateTimeFormats(IFormatProvider)
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Converts the value of this instance to all the string representations supported by the standard date and time format specifiers and the specified culture-specific formatting information.
  remarks: "The string array returned by the <xref:System.DateTime.GetDateTimeFormats%28System.IFormatProvider%29?displayProperty=fullName> method is equivalent to combining the string arrays returned by separate calls to the <xref:System.DateTime.GetDateTimeFormats%28System.Char%2CSystem.IFormatProvider%29?displayProperty=fullName> method with the \"d\", \"D\", \"f\", \"F\", \"g\", \"G\", \"m\", \"o\", \"r\", \"s\", \"t\", \"T\", \"u\", \"U\", and \"y\" standard format strings. For more information about standard format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md).  \n  \n Each element of the return value is formatted using culture-specific information supplied by `provider`.  \n  \n> [!IMPORTANT]\n>  Because this method uses culture-sensitive data, you should not assume that multiple calls to the method will return identical data unless `provider` is a <xref:System.Globalization.CultureInfo> object that represents the invariant culture. The data returned by this method can change if the user overrides the individual cultural settings of `provider` or if an update occurs to the system's cultural data for `provider`."
  example:
  - "The following example demonstrates the <xref:System.DateTime.GetDateTimeFormats%28System.IFormatProvider%29?displayProperty=fullName>method. It displays the string representation of a date using all possible standard date and time formats for the fr-FR culture.  \n  \n [!code-cpp[DateTime.GetDateTimeFormats#2](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.GetDateTimeFormats/CPP/class1.cpp#2)]\n [!code-csharp[DateTime.GetDateTimeFormats#2](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.GetDateTimeFormats/CS/class1.cs#2)]\n [!code-vb[DateTime.GetDateTimeFormats#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.GetDateTimeFormats/VB/class1.vb#2)]  \n  \n The example displays the following output:  \n  \n```  \n28/07/2009  \n28/07/09  \n28.07.09  \n28-07-09  \n2009-07-28  \nmardi 28 juillet 2009  \n28 juil. 09  \n28 juillet 2009  \nmardi 28 juillet 2009 05:23  \nmardi 28 juillet 2009 5:23  \nmardi 28 juillet 2009 05.23  \nmardi 28 juillet 2009 05 h 23  \n28 juil. 09 05:23  \n28 juil. 09 5:23  \n28 juil. 09 05.23  \n28 juil. 09 05 h 23  \n28 juillet 2009 05:23  \n28 juillet 2009 5:23  \n28 juillet 2009 05.23  \n28 juillet 2009 05 h 23  \nmardi 28 juillet 2009 05:23:15  \nmardi 28 juillet 2009 5:23:15  \nmardi 28 juillet 2009 05.23  \nmardi 28 juillet 2009 05 h 23  \n28 juil. 09 05:23:15  \n28 juil. 09 5:23:15  \n28 juil. 09 05.23  \n28 juil. 09 05 h 23  \n28 juillet 2009 05:23:15  \n28 juillet 2009 5:23:15  \n28 juillet 2009 05.23  \n28 juillet 2009 05 h 23  \n28/07/2009 05:23  \n28/07/2009 5:23  \n28/07/2009 05.23  \n28/07/2009 05 h 23  \n28/07/09 05:23  \n28/07/09 5:23  \n28/07/09 05.23  \n28/07/09 05 h 23  \n28.07.09 05:23  \n28.07.09 5:23  \n28.07.09 05.23  \n28.07.09 05 h 23  \n28-07-09 05:23  \n28-07-09 5:23  \n28-07-09 05.23  \n28-07-09 05 h 23  \n2009-07-28 05:23  \n2009-07-28 5:23  \n2009-07-28 05.23  \n2009-07-28 05 h 23  \n28/07/2009 05:23:15  \n28/07/2009 5:23:15  \n28/07/2009 05.23  \n28/07/2009 05 h 23  \n28/07/09 05:23:15  \n28/07/09 5:23:15  \n28/07/09 05.23  \n28/07/09 05 h 23  \n28.07.09 05:23:15  \n28.07.09 5:23:15  \n28.07.09 05.23  \n28.07.09 05 h 23  \n28-07-09 05:23:15  \n28-07-09 5:23:15  \n28-07-09 05.23  \n28-07-09 05 h 23  \n2009-07-28 05:23:15  \n2009-07-28 5:23:15  \n2009-07-28 05.23  \n2009-07-28 05 h 23  \n28 juillet  \n28 juillet  \n2009-07-28T05:23:15.0160000  \n2009-07-28T05:23:15.0160000  \nTue, 28 Jul 2009 05:23:15 GMT  \nTue, 28 Jul 2009 05:23:15 GMT  \n2009-07-28T05:23:15  \n05:23  \n5:23  \n05.23  \n05 h 23  \n05:23:15  \n5:23:15  \n05.23  \n05 h 23  \n2009-07-28 05:23:15Z  \nmardi 28 juillet 2009 12:23:15  \nmardi 28 juillet 2009 12:23:15  \nmardi 28 juillet 2009 12.23  \nmardi 28 juillet 2009 12 h 23  \n28 juil. 09 12:23:15  \n28 juil. 09 12:23:15  \n28 juil. 09 12.23  \n28 juil. 09 12 h 23  \n28 juillet 2009 12:23:15  \n28 juillet 2009 12:23:15  \n28 juillet 2009 12.23  \n28 juillet 2009 12 h 23  \njuillet 2009  \njuillet 2009  \n```"
  syntax:
    content: public string[] GetDateTimeFormats (IFormatProvider provider);
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information about this instance.
    return:
      type: System.String[]
      description: A string array where each element is the representation of the value of this instance formatted with one of the standard date and time format specifiers.
  overload: System.DateTime.GetDateTimeFormats*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.GetDateTimeFormats(System.Char,System.IFormatProvider)
  commentId: M:System.DateTime.GetDateTimeFormats(System.Char,System.IFormatProvider)
  id: GetDateTimeFormats(System.Char,System.IFormatProvider)
  parent: System.DateTime
  langs:
  - csharp
  name: GetDateTimeFormats(Char, IFormatProvider)
  nameWithType: DateTime.GetDateTimeFormats(Char, IFormatProvider)
  fullName: DateTime.GetDateTimeFormats(Char, IFormatProvider)
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Converts the value of this instance to all the string representations supported by the specified standard date and time format specifier and culture-specific formatting information.
  remarks: "The format parameter can be any of the standard date and time format specifiers. These include d, D, f, F, g, G, M (or m), O (or o), R (or r), s, t, T, u, U, and Y (or y). For more information, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md).  \n  \n Each element of the return value is formatted using culture-specific information supplied by `provider`.  \n  \n> [!IMPORTANT]\n>  Because this method uses culture-sensitive data, you should not assume that multiple calls to the method will return identical data unless `provider` is a <xref:System.Globalization.CultureInfo> object that represents the invariant culture. The data returned by this method can change if the user overrides the individual cultural settings of `provider` or if an update occurs to the system's cultural data for `provider`."
  example:
  - "The following example demonstrates the <xref:System.DateTime.GetDateTimeFormats%28System.Char%2CSystem.IFormatProvider%29> method. It displays the string representations of a date using the short date format specifier (\"d\") for the fr-FR culture.  \n  \n [!code-csharp[DateTime.GetDateTimeFormats#4](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.GetDateTimeFormats/CS/class1.cs#4)]\n [!code-vb[DateTime.GetDateTimeFormats#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.GetDateTimeFormats/VB/class1.vb#4)]"
  syntax:
    content: public string[] GetDateTimeFormats (char format, IFormatProvider provider);
    parameters:
    - id: format
      type: System.Char
      description: A date and time format string.
    - id: provider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information about this instance.
    return:
      type: System.String[]
      description: A string array where each element is the representation of the value of this instance formatted with one of the standard date and time format specifiers.
  overload: System.DateTime.GetDateTimeFormats*
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: <code>format</code> is not a valid standard date and time format specifier character.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.GetHashCode
  commentId: M:System.DateTime.GetHashCode
  id: GetHashCode
  parent: System.DateTime
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: DateTime.GetHashCode()
  fullName: DateTime.GetHashCode()
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Returns the hash code for this instance.
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: A 32-bit signed integer hash code.
  overload: System.DateTime.GetHashCode*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.GetTypeCode
  commentId: M:System.DateTime.GetTypeCode
  id: GetTypeCode
  parent: System.DateTime
  langs:
  - csharp
  name: GetTypeCode()
  nameWithType: DateTime.GetTypeCode()
  fullName: DateTime.GetTypeCode()
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Returns the <xref href="System.TypeCode"></xref> for value type <xref href="System.DateTime"></xref>.
  syntax:
    content: public TypeCode GetTypeCode ();
    parameters: []
    return:
      type: System.TypeCode
      description: The enumerated constant, <xref href="System.TypeCode.DateTime"></xref>.
  overload: System.DateTime.GetTypeCode*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.Hour
  commentId: P:System.DateTime.Hour
  id: Hour
  parent: System.DateTime
  langs:
  - csharp
  name: Hour
  nameWithType: DateTime.Hour
  fullName: DateTime.Hour
  type: Property
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Gets the hour component of the date represented by this instance.
  remarks: "The value of the <xref:System.DateTime.Hour%2A> property is always expressed using a 24-hour clock. To retrieve a string that represents the hour of a date and time using a 12-hour clock, call the <xref:System.DateTime.ToString%28System.String%29?displayProperty=fullName> or <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=fullName> method with the \"h\" custom format specifier. For example:  \n  \n [!code-csharp[System.DateTime.Hour#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Hour/cs/Hour1.cs#1)]\n [!code-vb[System.DateTime.Hour#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Hour/vb/Hour1.vb#1)]"
  example:
  - "The following example demonstrates the <xref:System.DateTime.Hour%2A> property.  \n  \n [!code-cpp[System.DateTime.Minute etc#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CPP/class1.cpp#1)]\n [!code-csharp[System.DateTime.Minute etc#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CS/class1.cs#1)]\n [!code-vb[System.DateTime.Minute etc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Minute etc/VB/class1.vb#1)]"
  syntax:
    content: public int Hour { get; }
    return:
      type: System.Int32
      description: The hour component, expressed as a value between 0 and 23.
  overload: System.DateTime.Hour*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.IsDaylightSavingTime
  commentId: M:System.DateTime.IsDaylightSavingTime
  id: IsDaylightSavingTime
  parent: System.DateTime
  langs:
  - csharp
  name: IsDaylightSavingTime()
  nameWithType: DateTime.IsDaylightSavingTime()
  fullName: DateTime.IsDaylightSavingTime()
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Indicates whether this instance of <xref href="System.DateTime"></xref> is within the daylight saving time range for the current time zone.
  remarks: "This method determines whether the current <xref:System.DateTime> value falls within the daylight saving time range of the local time zone, which is returned by the <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName> property. You can determine whether a time zone supports daylight saving time by retrieving the value of its <xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A?displayProperty=fullName> property. For time zones that observe daylight saving time, you can determine when the transition to and from daylight saving time occurs by retrieving the <xref:System.TimeZoneInfo.AdjustmentRule?displayProperty=fullName> array returned by the time zone's <xref:System.TimeZoneInfo.GetAdjustmentRules%2A?displayProperty=fullName> property.  \n  \n If the current <xref:System.DateTime> value represents either an ambiguous or an invalid time in the local time zone, the method returns `false`.  \n  \n On [!INCLUDE[winxp](~/includes/winxp-md.md)] systems, the <xref:System.DateTime.IsDaylightSavingTime%2A> method recognizes only the current adjustment rule when determining whether the current instance is a daylight saving time. As a result, the method may not accurately report whether the current instance is a daylight saving time for periods before the current adjustment rule came into effect."
  syntax:
    content: public bool IsDaylightSavingTime ();
    parameters: []
    return:
      type: System.Boolean
      description: '`true` if the value of the <xref href="System.DateTime.Kind"></xref> property is <xref href="System.DateTimeKind.Local"></xref> or <xref href="System.DateTimeKind.Unspecified"></xref> and the value of this instance of <xref href="System.DateTime"></xref> is within the daylight saving time range for the local time zone; `false` if <xref href="System.DateTime.Kind"></xref> is <xref href="System.DateTimeKind.Utc"></xref>.'
  overload: System.DateTime.IsDaylightSavingTime*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.IsLeapYear(System.Int32)
  commentId: M:System.DateTime.IsLeapYear(System.Int32)
  id: IsLeapYear(System.Int32)
  parent: System.DateTime
  langs:
  - csharp
  name: IsLeapYear(Int32)
  nameWithType: DateTime.IsLeapYear(Int32)
  fullName: DateTime.IsLeapYear(Int32)
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Returns an indication whether the specified year is a leap year.
  remarks: "`year` is specified as a 4-digit base 10 number; for example, 1996.  \n  \n `year` is always interpreted as a year in the Gregorian calendar. To determine whether a particular year was a leap year in some other calendar, call that calendar object's `IsLeapYear` method."
  example:
  - "The following example uses the <xref:System.DateTime.IsLeapYear%2A> method to determine which years between 1994 and 2014 are leap years. The example also illustrates the result when the <xref:System.DateTime.AddYears%2A> method is used to add a year to a leap day.  \n  \n [!code-csharp[System.DateTime.IsLeapYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.IsLeapYear/cs/IsLeapYear1.cs#1)]\n [!code-vb[System.DateTime.IsLeapYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.IsLeapYear/vb/IsLeapYear1.vb#1)]"
  syntax:
    content: public static bool IsLeapYear (int year);
    parameters:
    - id: year
      type: System.Int32
      description: A 4-digit year.
    return:
      type: System.Boolean
      description: '`true` if <code>year</code> is a leap year; otherwise, `false`.'
  overload: System.DateTime.IsLeapYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>year</code> is less than 1 or greater than 9999.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.Kind
  commentId: P:System.DateTime.Kind
  id: Kind
  parent: System.DateTime
  langs:
  - csharp
  name: Kind
  nameWithType: DateTime.Kind
  fullName: DateTime.Kind
  type: Property
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Gets a value that indicates whether the time represented by this instance is based on local time, Coordinated Universal Time (UTC), or neither.
  remarks: "You can explicitly set the <xref:System.DateTime.Kind%2A> property of a new <xref:System.DateTime> value to a particular <xref:System.DateTimeKind> value by calling the <xref:System.DateTime.SpecifyKind%2A> method.  \n  \n The <xref:System.DateTime.Kind%2A> property allows a <xref:System.DateTime> value to clearly reflect either Coordinated Universal Time (UTC) or the local time. In contrast, the <xref:System.DateTimeOffset> structure can unambiguously reflect any time in any time zone as a single point in time."
  example:
  - "The following example uses the <xref:System.DateTime.SpecifyKind%2A> method to demonstrate how the <xref:System.DateTime.Kind%2A> property influences the <xref:System.DateTime.ToLocalTime%2A> and <xref:System.DateTime.ToUniversalTime%2A> conversion methods.  \n  \n [!code-csharp[DateTime.Kind_Suite#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Kind_Suite/cs/ks.cs#1)]\n [!code-vb[DateTime.Kind_Suite#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Kind_Suite/vb/ks.vb#1)]"
  syntax:
    content: public DateTimeKind Kind { get; }
    return:
      type: System.DateTimeKind
      description: One of the enumeration values that indicates what the current time represents. The default is <xref href="System.DateTimeKind.Unspecified"></xref>.
  overload: System.DateTime.Kind*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.MaxValue
  commentId: F:System.DateTime.MaxValue
  id: MaxValue
  parent: System.DateTime
  langs:
  - csharp
  name: MaxValue
  nameWithType: DateTime.MaxValue
  fullName: DateTime.MaxValue
  type: Field
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Represents the largest possible value of <xref href="System.DateTime"></xref>. This field is read-only.
  remarks: "The value of this constant is equivalent to 23:59:59.9999999 UTC, December 31, 9999 in the Gregorian calendar, exactly one 100-nanosecond tick before 00:00:00 UTC, January 1, 10000.  \n  \n Some calendars, such as the <xref:System.Globalization.UmAlQuraCalendar>, support an upper date range that is earlier than <xref:System.DateTime.MaxValue>. In these cases, trying to access <xref:System.DateTime.MaxValue> in variable assignments or formatting and parsing operations can throw an <xref:System.ArgumentOutOfRangeException>. Rather than retrieving the value of <xref:System.DateTime.MaxValue?displayProperty=fullName>, you can retrieve the value of the specified culture's latest valid date value from the `System.Globalization.CultureInfo.DateTimeFormat.Calendar.MaxSupportedDateTime` property."
  example:
  - "The following example instantiates a <xref:System.DateTime> object by passing its constructor an <xref:System.Int64> value that represents a number of ticks. Before invoking the constructor, the example ensures that this value is greater than or equal to `DateTime.MinValue.Ticks` and less than or equal to `DateTime.MaxValue.Ticks`. If not, it throws an <xref:System.ArgumentOutOfRangeException>.  \n  \n [!code-csharp[System.DateTime.MinValue#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.MinValue/cs/MinValue.cs#2)]\n [!code-vb[System.DateTime.MinValue#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.MinValue/vb/MinValue.vb#2)]"
  syntax:
    content: public static readonly DateTime MaxValue;
    return:
      type: System.DateTime
      description: ''
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.Millisecond
  commentId: P:System.DateTime.Millisecond
  id: Millisecond
  parent: System.DateTime
  langs:
  - csharp
  name: Millisecond
  nameWithType: DateTime.Millisecond
  fullName: DateTime.Millisecond
  type: Property
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Gets the milliseconds component of the date represented by this instance.
  remarks: "You can display the string representation of the <xref:System.DateTime.Millisecond%2A> property by using the \"fff\" format specifier. For example, the following code displays a string that contains the number of milliseconds in a date and time to the console.  \n  \n [!code-csharp[System.DateTime.Millisecond#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Millisecond/cs/Millisecond.cs#1)]\n [!code-vb[System.DateTime.Millisecond#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Millisecond/vb/Millisecond.vb#1)]  \n  \n You can also display the millisecond component together with the other components of a date and time value by using the \"o\" standard format specifier. For example:  \n  \n [!code-csharp[System.DateTime.Millisecond#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Millisecond/cs/Millisecond.cs#2)]\n [!code-vb[System.DateTime.Millisecond#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Millisecond/vb/Millisecond.vb#2)]  \n  \n However, the \"o\" format specifier is intended less for displaying than for round-tripping or storing a <xref:System.DateTime> value. You can also display milliseconds together with other date and time components by using a custom format string, as the following example shows.  \n  \n [!code-csharp[System.DateTime.Millisecond#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Millisecond/cs/Millisecond.cs#3)]\n [!code-vb[System.DateTime.Millisecond#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Millisecond/vb/Millisecond.vb#3)]"
  example:
  - "The following example demonstrates the <xref:System.DateTime.Millisecond%2A> property.  \n  \n [!code-cpp[System.DateTime.Minute etc#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CPP/class1.cpp#1)]\n [!code-csharp[System.DateTime.Minute etc#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CS/class1.cs#1)]\n [!code-vb[System.DateTime.Minute etc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Minute etc/VB/class1.vb#1)]"
  syntax:
    content: public int Millisecond { get; }
    return:
      type: System.Int32
      description: The milliseconds component, expressed as a value between 0 and 999.
  overload: System.DateTime.Millisecond*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.Minute
  commentId: P:System.DateTime.Minute
  id: Minute
  parent: System.DateTime
  langs:
  - csharp
  name: Minute
  nameWithType: DateTime.Minute
  fullName: DateTime.Minute
  type: Property
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Gets the minute component of the date represented by this instance.
  remarks: ''
  example:
  - "The following example demonstrates the <xref:System.DateTime.Minute%2A> property.  \n  \n [!code-cpp[System.DateTime.Minute etc#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CPP/class1.cpp#1)]\n [!code-csharp[System.DateTime.Minute etc#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CS/class1.cs#1)]\n [!code-vb[System.DateTime.Minute etc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Minute etc/VB/class1.vb#1)]"
  syntax:
    content: public int Minute { get; }
    return:
      type: System.Int32
      description: The minute component, expressed as a value between 0 and 59.
  overload: System.DateTime.Minute*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.MinValue
  commentId: F:System.DateTime.MinValue
  id: MinValue
  parent: System.DateTime
  langs:
  - csharp
  name: MinValue
  nameWithType: DateTime.MinValue
  fullName: DateTime.MinValue
  type: Field
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Represents the smallest possible value of <xref href="System.DateTime"></xref>. This field is read-only.
  remarks: "The value of this constant is equivalent to 00:00:00.0000000 UTC, January 1, 0001, in the Gregorian calendar.  \n  \n <xref:System.DateTime.MinValue> defines the date and time that is assigned to an uninitialized <xref:System.DateTime> variable. The following example illustrates this.  \n  \n [!code-csharp[System.DateTime.MinValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.MinValue/cs/MinValue.cs#1)]\n [!code-vb[System.DateTime.MinValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.MinValue/vb/MinValue.vb#1)]  \n  \n The <xref:System.DateTime.MinValue> and <xref:System.DateTime.MaxValue> properties can be used to ensure that a value lies within the supported range before passing it to a <xref:System.DateTime> constructor. The code in the Example section illustrates this usage."
  example:
  - "The following example instantiates a <xref:System.DateTime> object by passing its constructor an <xref:System.Int64> value that represents a number of ticks. Before invoking the constructor, the example ensures that this value is greater than or equal to `DateTime.MinValue.Ticks` and less than or equal to `DateTime.MaxValue.Ticks`. If not, it throws an <xref:System.ArgumentOutOfRangeException>.  \n  \n [!code-csharp[System.DateTime.MinValue#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.MinValue/cs/MinValue.cs#2)]\n [!code-vb[System.DateTime.MinValue#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.MinValue/vb/MinValue.vb#2)]"
  syntax:
    content: public static readonly DateTime MinValue;
    return:
      type: System.DateTime
      description: ''
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.Month
  commentId: P:System.DateTime.Month
  id: Month
  parent: System.DateTime
  langs:
  - csharp
  name: Month
  nameWithType: DateTime.Month
  fullName: DateTime.Month
  type: Property
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Gets the month component of the date represented by this instance.
  remarks: ''
  example:
  - "The following example demonstrates the <xref:System.DateTime.Month%2A> property.  \n  \n [!code-cpp[System.DateTime.Minute etc#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CPP/class1.cpp#1)]\n [!code-csharp[System.DateTime.Minute etc#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CS/class1.cs#1)]\n [!code-vb[System.DateTime.Minute etc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Minute etc/VB/class1.vb#1)]"
  syntax:
    content: public int Month { get; }
    return:
      type: System.Int32
      description: The month component, expressed as a value between 1 and 12.
  overload: System.DateTime.Month*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.Now
  commentId: P:System.DateTime.Now
  id: Now
  parent: System.DateTime
  langs:
  - csharp
  name: Now
  nameWithType: DateTime.Now
  fullName: DateTime.Now
  type: Property
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Gets a <xref href="System.DateTime"></xref> object that is set to the current date and time on this computer, expressed as the local time.
  remarks: "The <xref:System.DateTime.Now%2A> property returns a <xref:System.DateTime> value that represents the current date and time on the local computer. Note that there is a difference between a <xref:System.DateTime> value, which represents the number of ticks that have elapsed since midnight of January 1, 0001, and the string representation of that <xref:System.DateTime> value, which expresses a date and time value in a culture-specific-specific format. For information on formatting date and time values, see the <xref:System.DateTime.ToString%2A>method. The following example displays the short date and time string in a number of culture-specific formats.  \n  \n [!code-cpp[System.DateTime.Now#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.datetime.now/cpp/now1.cpp#2)]\n [!code-csharp[System.DateTime.Now#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.now/cs/now1.cs#2)]\n [!code-vb[System.DateTime.Now#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.now/vb/now1.vb#2)]  \n  \n The resolution of this property depends on the system timer, which is approximately 15 milliseconds on Windows systems.As a result, repeated calls to the <xref:System.DateTime.Now%2A> property in a short time interval, such as in a loop, may return the same value.  \n  \n The <xref:System.DateTime.Now%2A> property is frequently used to measure performance. However, because of its low resolution, it is not suitable for use as a benchmarking tool. A better alternative is to use the <xref:System.Diagnostics.Stopwatch> class.  \n  \n Starting with the .NET Framework version 2.0, the return value is a <xref:System.DateTime> whose <xref:System.DateTime.Kind%2A> property returns <xref:System.DateTimeKind?displayProperty=fullName>.  \n  \n> [!NOTE]\n>  You can also use the <xref:System.DateTimeOffset.Now%2A?displayProperty=fullName> property to retrieve the current local date and time. It allows a local time to be expressed unambiguously as a single point in time, which in turn makes that time value portable across computers."
  example:
  - "The following example uses the <xref:System.DateTime.Now%2A> and <xref:System.DateTime.UtcNow%2A> properties to retrieve the current local date and time and the current universal coordinated (UTC) date and time. It then uses the formatting conventions of a number of cultures to display the strings, along with the values of the their <xref:System.DateTime.Kind%2A> properties.  \n  \n [!code-cpp[System.DateTime.Now#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.datetime.now/cpp/now2.cpp#3)]\n [!code-csharp[System.DateTime.Now#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.now/cs/now2.cs#3)]\n [!code-vb[System.DateTime.Now#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.now/vb/now2.vb#3)]"
  syntax:
    content: public static DateTime Now { get; }
    return:
      type: System.DateTime
      description: An object whose value is the current local date and time.
  overload: System.DateTime.Now*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.op_Addition(System.DateTime,System.TimeSpan)
  commentId: M:System.DateTime.op_Addition(System.DateTime,System.TimeSpan)
  id: op_Addition(System.DateTime,System.TimeSpan)
  parent: System.DateTime
  langs:
  - csharp
  name: op_Addition(DateTime, TimeSpan)
  nameWithType: DateTime.op_Addition(DateTime, TimeSpan)
  fullName: DateTime.op_Addition(DateTime, TimeSpan)
  type: Operator
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Adds a specified time interval to a specified date and time, yielding a new date and time.
  remarks: The equivalent method for this operator is <xref:System.DateTime.Add%28System.TimeSpan%29?displayProperty=fullName>
  example:
  - "The following example demonstrates the addition operator.  \n  \n [!code-cpp[DateTime Operators#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime Operators/CPP/class1.cpp#1)]\n [!code-csharp[DateTime Operators#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime Operators/CS/class1.cs#1)]\n [!code-vb[DateTime Operators#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime Operators/VB/class1.vb#1)]"
  syntax:
    content: public static DateTime op_Addition (DateTime d, TimeSpan t);
    parameters:
    - id: d
      type: System.DateTime
      description: The date and time value to add.
    - id: t
      type: System.TimeSpan
      description: The time interval to add.
    return:
      type: System.DateTime
      description: An object that is the sum of the values of <code>d</code> and <code>t</code>.
  overload: System.DateTime.op_Addition*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The resulting <xref href="System.DateTime"></xref> is less than <xref href="System.DateTime.MinValue"></xref> or greater than <xref href="System.DateTime.MaxValue"></xref>.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.op_Equality(System.DateTime,System.DateTime)
  commentId: M:System.DateTime.op_Equality(System.DateTime,System.DateTime)
  id: op_Equality(System.DateTime,System.DateTime)
  parent: System.DateTime
  langs:
  - csharp
  name: op_Equality(DateTime, DateTime)
  nameWithType: DateTime.op_Equality(DateTime, DateTime)
  fullName: DateTime.op_Equality(DateTime, DateTime)
  type: Operator
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Determines whether two specified instances of <xref href="System.DateTime"></xref> are equal.
  remarks: "The <xref:System.DateTime.op_Equality%2A> operator determines whether two <xref:System.DateTime> values are equal by comparing their number of ticks. Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone. You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> property.  \n  \n The equivalent method for this operator is <xref:System.DateTime.Equals%28System.Object%29?displayProperty=fullName>"
  example:
  - "The following example demonstrates the equality operator.  \n  \n [!code-cpp[DateTime Operators#2](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime Operators/CPP/class1.cpp#2)]\n [!code-csharp[DateTime Operators#2](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime Operators/CS/class1.cs#2)]\n [!code-vb[DateTime Operators#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime Operators/VB/class1.vb#2)]"
  syntax:
    content: public static bool op_Equality (DateTime d1, DateTime d2);
    parameters:
    - id: d1
      type: System.DateTime
      description: The first object to compare.
    - id: d2
      type: System.DateTime
      description: The second object to compare.
    return:
      type: System.Boolean
      description: '`true` if <code>d1</code> and <code>d2</code> represent the same date and time; otherwise, `false`.'
  overload: System.DateTime.op_Equality*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.op_GreaterThan(System.DateTime,System.DateTime)
  commentId: M:System.DateTime.op_GreaterThan(System.DateTime,System.DateTime)
  id: op_GreaterThan(System.DateTime,System.DateTime)
  parent: System.DateTime
  langs:
  - csharp
  name: op_GreaterThan(DateTime, DateTime)
  nameWithType: DateTime.op_GreaterThan(DateTime, DateTime)
  fullName: DateTime.op_GreaterThan(DateTime, DateTime)
  type: Operator
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Determines whether one specified <xref href="System.DateTime"></xref> is later than another specified <xref href="System.DateTime"></xref>.
  remarks: "The <xref:System.DateTime.op_GreaterThan%2A> operator determines the relationship between two <xref:System.DateTime> values by comparing their number of ticks. Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone. You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> property.  \n  \n The equivalent method for this operator is <xref:System.DateTime.Compare%28System.DateTime%2CSystem.DateTime%29?displayProperty=fullName>"
  syntax:
    content: public static bool op_GreaterThan (DateTime t1, DateTime t2);
    parameters:
    - id: t1
      type: System.DateTime
      description: The first object to compare.
    - id: t2
      type: System.DateTime
      description: The second object to compare.
    return:
      type: System.Boolean
      description: '`true` if <code>t1</code> is later than <code>t2</code>; otherwise, `false`.'
  overload: System.DateTime.op_GreaterThan*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.op_GreaterThanOrEqual(System.DateTime,System.DateTime)
  commentId: M:System.DateTime.op_GreaterThanOrEqual(System.DateTime,System.DateTime)
  id: op_GreaterThanOrEqual(System.DateTime,System.DateTime)
  parent: System.DateTime
  langs:
  - csharp
  name: op_GreaterThanOrEqual(DateTime, DateTime)
  nameWithType: DateTime.op_GreaterThanOrEqual(DateTime, DateTime)
  fullName: DateTime.op_GreaterThanOrEqual(DateTime, DateTime)
  type: Operator
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Determines whether one specified <xref href="System.DateTime"></xref> represents a date and time that is the same as or later than another specified <xref href="System.DateTime"></xref>.
  remarks: "The <xref:System.DateTime.op_GreaterThanOrEqual%2A> operator determines the relationship between two <xref:System.DateTime> values by comparing their number of ticks. Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone. You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> property.  \n  \n The equivalent method for this operator is <xref:System.DateTime.Compare%28System.DateTime%2CSystem.DateTime%29?displayProperty=fullName>"
  syntax:
    content: public static bool op_GreaterThanOrEqual (DateTime t1, DateTime t2);
    parameters:
    - id: t1
      type: System.DateTime
      description: The first object to compare.
    - id: t2
      type: System.DateTime
      description: The second object to compare.
    return:
      type: System.Boolean
      description: '`true` if <code>t1</code> is the same as or later than <code>t2</code>; otherwise, `false`.'
  overload: System.DateTime.op_GreaterThanOrEqual*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.op_Inequality(System.DateTime,System.DateTime)
  commentId: M:System.DateTime.op_Inequality(System.DateTime,System.DateTime)
  id: op_Inequality(System.DateTime,System.DateTime)
  parent: System.DateTime
  langs:
  - csharp
  name: op_Inequality(DateTime, DateTime)
  nameWithType: DateTime.op_Inequality(DateTime, DateTime)
  fullName: DateTime.op_Inequality(DateTime, DateTime)
  type: Operator
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Determines whether two specified instances of <xref href="System.DateTime"></xref> are not equal.
  remarks: "The <xref:System.DateTime.op_Inequality%2A> operator determines whether two <xref:System.DateTime> values are not equal by comparing their number of ticks. Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone. You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> property.  \n  \n The equivalent method for this operator is <xref:System.DateTime.Equals%28System.Object%29?displayProperty=fullName>"
  syntax:
    content: public static bool op_Inequality (DateTime d1, DateTime d2);
    parameters:
    - id: d1
      type: System.DateTime
      description: The first object to compare.
    - id: d2
      type: System.DateTime
      description: The second object to compare.
    return:
      type: System.Boolean
      description: '`true` if <code>d1</code> and <code>d2</code> do not represent the same date and time; otherwise, `false`.'
  overload: System.DateTime.op_Inequality*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.op_LessThan(System.DateTime,System.DateTime)
  commentId: M:System.DateTime.op_LessThan(System.DateTime,System.DateTime)
  id: op_LessThan(System.DateTime,System.DateTime)
  parent: System.DateTime
  langs:
  - csharp
  name: op_LessThan(DateTime, DateTime)
  nameWithType: DateTime.op_LessThan(DateTime, DateTime)
  fullName: DateTime.op_LessThan(DateTime, DateTime)
  type: Operator
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Determines whether one specified <xref href="System.DateTime"></xref> is earlier than another specified <xref href="System.DateTime"></xref>.
  remarks: "The <xref:System.DateTime.op_LessThan%2A> operator determines the relationship between two <xref:System.DateTime> values by comparing their number of ticks. Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone. You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> property.  \n  \n The equivalent method for this operator is <xref:System.DateTime.Compare%28System.DateTime%2CSystem.DateTime%29?displayProperty=fullName>"
  syntax:
    content: public static bool op_LessThan (DateTime t1, DateTime t2);
    parameters:
    - id: t1
      type: System.DateTime
      description: The first object to compare.
    - id: t2
      type: System.DateTime
      description: The second object to compare.
    return:
      type: System.Boolean
      description: '`true` if <code>t1</code> is earlier than <code>t2</code>; otherwise, `false`.'
  overload: System.DateTime.op_LessThan*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.op_LessThanOrEqual(System.DateTime,System.DateTime)
  commentId: M:System.DateTime.op_LessThanOrEqual(System.DateTime,System.DateTime)
  id: op_LessThanOrEqual(System.DateTime,System.DateTime)
  parent: System.DateTime
  langs:
  - csharp
  name: op_LessThanOrEqual(DateTime, DateTime)
  nameWithType: DateTime.op_LessThanOrEqual(DateTime, DateTime)
  fullName: DateTime.op_LessThanOrEqual(DateTime, DateTime)
  type: Operator
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Determines whether one specified <xref href="System.DateTime"></xref> represents a date and time that is the same as or earlier than another specified <xref href="System.DateTime"></xref>.
  remarks: "The <xref:System.DateTime.op_LessThanOrEqual%2A> operator determines the relationship between two <xref:System.DateTime> values by comparing their number of ticks. Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone. You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> property.  \n  \n The equivalent method for this operator is <xref:System.DateTime.Compare%28System.DateTime%2CSystem.DateTime%29?displayProperty=fullName>"
  syntax:
    content: public static bool op_LessThanOrEqual (DateTime t1, DateTime t2);
    parameters:
    - id: t1
      type: System.DateTime
      description: The first object to compare.
    - id: t2
      type: System.DateTime
      description: The second object to compare.
    return:
      type: System.Boolean
      description: '`true` if <code>t1</code> is the same as or earlier than <code>t2</code>; otherwise, `false`.'
  overload: System.DateTime.op_LessThanOrEqual*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.op_Subtraction(System.DateTime,System.DateTime)
  commentId: M:System.DateTime.op_Subtraction(System.DateTime,System.DateTime)
  id: op_Subtraction(System.DateTime,System.DateTime)
  parent: System.DateTime
  langs:
  - csharp
  name: op_Subtraction(DateTime, DateTime)
  nameWithType: DateTime.op_Subtraction(DateTime, DateTime)
  fullName: DateTime.op_Subtraction(DateTime, DateTime)
  type: Operator
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Subtracts a specified date and time from another specified date and time and returns a time interval.
  remarks: "The <xref:System.DateTime.op_Subtraction%28System.DateTime%2CSystem.DateTime%29> method does not consider the value of the <xref:System.DateTime.Kind%2A> property of the two <xref:System.DateTime> values when performing the subtraction. Before subtracting <xref:System.DateTime> objects, ensure that the objects represent times in the same time zone. Otherwise, the result will include the difference between time zones.  \n  \n> [!NOTE]\n>  The <xref:System.DateTimeOffset.op_Subtraction%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=fullName> method does consider the difference between time zones when performing the subtraction.  \n  \n The equivalent method for this operator is <xref:System.DateTime.Subtract%28System.DateTime%29?displayProperty=fullName>"
  example:
  - "The following example demonstrates the <xref:System.DateTime.Subtract%2A> method and the subtraction operator.  \n  \n [!code-cpp[DateTime.Subtraction#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.Subtraction/CPP/class1.cpp#1)]\n [!code-csharp[DateTime.Subtraction#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Subtraction/CS/class1.cs#1)]\n [!code-vb[DateTime.Subtraction#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Subtraction/VB/class1.vb#1)]"
  syntax:
    content: public static TimeSpan op_Subtraction (DateTime d1, DateTime d2);
    parameters:
    - id: d1
      type: System.DateTime
      description: The date and time value to subtract from (the minuend).
    - id: d2
      type: System.DateTime
      description: The date and time value to subtract (the subtrahend).
    return:
      type: System.TimeSpan
      description: The time interval between <code>d1</code> and <code>d2</code>; that is, <code>d1</code> minus <code>d2</code>.
  overload: System.DateTime.op_Subtraction*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.op_Subtraction(System.DateTime,System.TimeSpan)
  commentId: M:System.DateTime.op_Subtraction(System.DateTime,System.TimeSpan)
  id: op_Subtraction(System.DateTime,System.TimeSpan)
  parent: System.DateTime
  langs:
  - csharp
  name: op_Subtraction(DateTime, TimeSpan)
  nameWithType: DateTime.op_Subtraction(DateTime, TimeSpan)
  fullName: DateTime.op_Subtraction(DateTime, TimeSpan)
  type: Operator
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Subtracts a specified time interval from a specified date and time and returns a new date and time.
  remarks: "This method subtracts the ticks value of `t` from the ticks value of `d`.  \n  \n The equivalent method for this operator is <xref:System.DateTime.Subtract%28System.DateTime%29?displayProperty=fullName>"
  example:
  - "The following example demonstrates the <xref:System.DateTime.Subtract%2A> method and the subtraction operator.  \n  \n [!code-cpp[DateTime.Subtraction#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.Subtraction/CPP/class1.cpp#1)]\n [!code-csharp[DateTime.Subtraction#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Subtraction/CS/class1.cs#1)]\n [!code-vb[DateTime.Subtraction#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Subtraction/VB/class1.vb#1)]"
  syntax:
    content: public static DateTime op_Subtraction (DateTime d, TimeSpan t);
    parameters:
    - id: d
      type: System.DateTime
      description: The date and time value to subtract from.
    - id: t
      type: System.TimeSpan
      description: The time interval to subtract.
    return:
      type: System.DateTime
      description: An object whose value is the value of <code>d</code> minus the value of <code>t</code>.
  overload: System.DateTime.op_Subtraction*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The resulting <xref href="System.DateTime"></xref> is less than <xref href="System.DateTime.MinValue"></xref> or greater than <xref href="System.DateTime.MaxValue"></xref>.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.Parse(System.String)
  commentId: M:System.DateTime.Parse(System.String)
  id: Parse(System.String)
  parent: System.DateTime
  langs:
  - csharp
  name: Parse(String)
  nameWithType: DateTime.Parse(String)
  fullName: DateTime.Parse(String)
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Converts the string representation of a date and time to its <xref href="System.DateTime"></xref> equivalent.
  remarks: >-
    > [!NOTE]

    >  For examples and comprehensive usage information about this and other overloads of the `Parse` method, see the <xref:System.DateTime.Parse%2A> overload summary.
  syntax:
    content: public static DateTime Parse (string s);
    parameters:
    - id: s
      type: System.String
      description: A string that contains a date and time to convert.
    return:
      type: System.DateTime
      description: An object that is equivalent to the date and time contained in <code>s</code>.
  overload: System.DateTime.Parse*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>s</code> is `null`.
  - type: System.FormatException
    commentId: T:System.FormatException
    description: <code>s</code> does not contain a valid string representation of a date and time.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.Parse(System.String,System.IFormatProvider)
  commentId: M:System.DateTime.Parse(System.String,System.IFormatProvider)
  id: Parse(System.String,System.IFormatProvider)
  parent: System.DateTime
  langs:
  - csharp
  name: Parse(String, IFormatProvider)
  nameWithType: DateTime.Parse(String, IFormatProvider)
  fullName: DateTime.Parse(String, IFormatProvider)
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Converts the string representation of a date and time to its <xref href="System.DateTime"></xref> equivalent by using culture-specific format information.
  remarks: >-
    > [!NOTE]

    >  For examples and comprehensive usage information about this and other overloads of the `Parse` method, see the <xref:System.DateTime.Parse%2A> overload summary.
  syntax:
    content: public static DateTime Parse (string s, IFormatProvider provider);
    parameters:
    - id: s
      type: System.String
      description: A string that contains a date and time to convert.
    - id: provider
      type: System.IFormatProvider
      description: An object that supplies culture-specific format information about <code>s</code>.
    return:
      type: System.DateTime
      description: An object that is equivalent to the date and time contained in <code>s</code> as specified by <code>provider</code>.
  overload: System.DateTime.Parse*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>s</code> is `null`.
  - type: System.FormatException
    commentId: T:System.FormatException
    description: <code>s</code> does not contain a valid string representation of a date and time.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)
  commentId: M:System.DateTime.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)
  id: Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)
  parent: System.DateTime
  langs:
  - csharp
  name: Parse(String, IFormatProvider, DateTimeStyles)
  nameWithType: DateTime.Parse(String, IFormatProvider, DateTimeStyles)
  fullName: DateTime.Parse(String, IFormatProvider, DateTimeStyles)
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Converts the string representation of a date and time to its <xref href="System.DateTime"></xref> equivalent by using culture-specific format information and formatting style.
  remarks: >-
    > [!NOTE]

    >  For examples and comprehensive usage information about this and other overloads of the `Parse` method, see the <xref:System.DateTime.Parse%2A> overload summary.
  syntax:
    content: public static DateTime Parse (string s, IFormatProvider provider, System.Globalization.DateTimeStyles styles);
    parameters:
    - id: s
      type: System.String
      description: A string that contains a date and time to convert.
    - id: provider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information about <code>s</code>.
    - id: styles
      type: System.Globalization.DateTimeStyles
      description: A bitwise combination of the enumeration values that indicates the style elements that can be present in <code>s</code> for the parse operation to succeed, and that defines how to interpret the parsed date in relation to the current time zone or the current date. A typical value to specify is <xref href="System.Globalization.DateTimeStyles.None"></xref>.
    return:
      type: System.DateTime
      description: An object that is equivalent to the date and time contained in <code>s</code>, as specified by <code>provider</code> and <code>styles</code>.
  overload: System.DateTime.Parse*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>s</code> is `null`.
  - type: System.FormatException
    commentId: T:System.FormatException
    description: <code>s</code> does not contain a valid string representation of a date and time.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>styles</code> contains an invalid combination of <xref href="System.Globalization.DateTimeStyles"></xref> values. For example, both <xref href="System.Globalization.DateTimeStyles.AssumeLocal"></xref> and <xref href="System.Globalization.DateTimeStyles.AssumeUniversal"></xref>.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)
  commentId: M:System.DateTime.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)
  id: ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)
  parent: System.DateTime
  langs:
  - csharp
  name: ParseExact(String, String[], IFormatProvider, DateTimeStyles)
  nameWithType: DateTime.ParseExact(String, String[], IFormatProvider, DateTimeStyles)
  fullName: DateTime.ParseExact(String, String[], IFormatProvider, DateTimeStyles)
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Converts the specified string representation of a date and time to its <xref href="System.DateTime"></xref> equivalent using the specified array of formats, culture-specific format information, and style. The format of the string representation must match at least one of the specified formats exactly or an exception is thrown.
  remarks: "The <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method parses the string representation of a date that matches any one of the patterns assigned to the `formats` parameter. If the string `s` does not match any one of these patterns with any of the variations defined by the `styles` parameter, the method throws a <xref:System.FormatException>. Aside from comparing `s` to multiple formatting patterns, rather than to a single formatting pattern, this overload behaves identically to the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method.  \n  \n The `s` parameter contains the date and time to parse. If the `s` parameter contains only a time and no date, the current date is used unless the `style` parameter includes the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, in which case the default date (`DateTime.Date.MinValue`) is used. If the `s` parameter contains only a date and no time, midnight (00:00:00) is used. The `style` parameter also determines whether the `s` parameter can contain leading, inner, or trailing white space characters other than those permitted by one of the format strings in `formats`.  \n  \n If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is <xref:System.DateTimeKind?displayProperty=fullName>. This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName>, or by using the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> and <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flags, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName>. If `s` contains time zone information, the time is converted to local time, if necessary, and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind?displayProperty=fullName>. This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag to not convert Coordinated Universal Time (UTC) to a local time and set the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>.  \n  \n The `formats` parameter contains an array of patterns, one of which `s` must match exactly if the parse operation is to succeed. The patterns in the `formats` parameter consists of one or more custom format specifiers from the [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md) table, or a single standard format specifier, which identifies a predefined pattern, from the [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) table.  \n  \n If you do not use date or time separators in a custom format pattern, use the invariant culture for the `provider` parameter and the widest form of each custom format specifier. For example, if you want to specify hours in the pattern, specify the wider form, \"HH\", instead of the narrower form, \"H\".  \n  \n The `styles` parameter includes one or more members of the <xref:System.Globalization.DateTimeStyles> enumeration that determine whether and where white space not defined by `format` can appear in `s` and that control the precise behavior of the parse operation. The following table describes how each member of the <xref:System.Globalization.DateTimeStyles> enumeration affects the operation of the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> method.  \n  \n|DateTimeStyles member|Description|  \n|---------------------------|-----------------|  \n|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|Parses `s` and, if necessary, converts it to UTC. If `s` includes a time zone offset, or if `s` contains no time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, the method parses the string, calls <xref:System.DateTime.ToUniversalTime%2A> to convert the returned <xref:System.DateTime> value to UTC, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>. If `s` indicates that it represents UTC, or if `s` does not contain time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, the method parses the string, performs no time zone conversion on the returned <xref:System.DateTime> value, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>. In all other cases, the flag has no effect.|  \n|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|Specifies that white space not defined by `format` can appear between any individual date or time element.|  \n|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|Specifies that white space not defined by `format` can appear at the beginning of `s`.|  \n|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|Specifies that white space not defined by `format` can appear at the end of `s`.|  \n|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|Specifies that `s` may contain leading, inner, and trailing white spaces not defined by `format`.|  \n|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|Specifies that if `s` lacks any time zone information, it is assumed to represent a local time. Unless the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag is present, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set to <xref:System.DateTimeKind?displayProperty=fullName>.|  \n|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|Specifies that if `s` lacks any time zone information, it is assumed to represent UTC. Unless the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag is present, the method converts the returned <xref:System.DateTime> value from UTC to local time and sets its <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>.|  \n|<xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>|If `s` contains time without date information, the date of the return value is set to `DateTime.MinValue.Date`.|  \n|<xref:System.Globalization.DateTimeStyles.None>|The `s` parameter is parsed using default values. No white space other than that present in `format` is allowed. If `s` lacks a date component, the date of the returned <xref:System.DateTime> value is set to 1/1/0001. If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind?displayProperty=fullName>. If time zone information is present in `s`, the time is converted to local time and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind?displayProperty=fullName>.|  \n|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|For strings that contain time zone information, tries to prevent the conversion to a date and time with its <xref:System.DateTime.Kind%2A> property set to <xref:System.DateTimeKind?displayProperty=fullName>. This flag primarily prevents the conversion of UTC times to local times.|  \n  \n The particular date and time symbols and strings (such as the names of the days of the week in a particular language) used in `s` are defined by the `provider` parameter, as is the precise format of `s` if `format` is a standard format specifier string. The `provider` parameter can be any of the following:  \n  \n-   A <xref:System.Globalization.CultureInfo> object that represents the culture used to interpret `s`. The <xref:System.Globalization.DateTimeFormatInfo> object returned by its <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property defines the symbols and formatting in `s`.  \n  \n-   A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.  \n  \n-   A custom <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns either the <xref:System.Globalization.CultureInfo> object or the <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.  \n  \n If `provider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used."
  example:
  - "The following example uses the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method to ensure that a string in a number of possible formats can be successfully parsed .  \n  \n [!code-csharp[System.Datetime.ParseExact#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.ParseExact/cs/parseexact3.cs#3)]\n [!code-vb[System.Datetime.ParseExact#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.ParseExact/vb/parseexact3.vb#3)]"
  syntax:
    content: public static DateTime ParseExact (string s, string[] formats, IFormatProvider provider, System.Globalization.DateTimeStyles style);
    parameters:
    - id: s
      type: System.String
      description: A string that contains a date and time to convert.
    - id: formats
      type: System.String[]
      description: An array of allowable formats of <code>s</code>. For more information, see the Remarks section.
    - id: provider
      type: System.IFormatProvider
      description: An object that supplies culture-specific format information about <code>s</code>.
    - id: style
      type: System.Globalization.DateTimeStyles
      description: A bitwise combination of enumeration values that indicates the permitted format of <code>s</code>. A typical value to specify is <xref href="System.Globalization.DateTimeStyles.None"></xref>.
    return:
      type: System.DateTime
      description: An object that is equivalent to the date and time contained in <code>s</code>, as specified by <code>formats</code>, <code>provider</code>, and <code>style</code>.
  overload: System.DateTime.ParseExact*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>s</code> or <code>formats</code> is `null`.
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>s</code> is an empty string.  \n  \n -or-  \n  \n an element of <code>formats</code> is an empty string.  \n  \n -or-  \n  \n <code>s</code> does not contain a date and time that corresponds to any element of <code>formats</code>.  \n  \n -or-  \n  \n The hour component and the AM/PM designator in <code>s</code> do not agree."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>style</code> contains an invalid combination of <xref href="System.Globalization.DateTimeStyles"></xref> values. For example, both <xref href="System.Globalization.DateTimeStyles.AssumeLocal"></xref> and <xref href="System.Globalization.DateTimeStyles.AssumeUniversal"></xref>.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)
  commentId: M:System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)
  id: ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)
  parent: System.DateTime
  langs:
  - csharp
  name: ParseExact(String, String, IFormatProvider, DateTimeStyles)
  nameWithType: DateTime.ParseExact(String, String, IFormatProvider, DateTimeStyles)
  fullName: DateTime.ParseExact(String, String, IFormatProvider, DateTimeStyles)
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Converts the specified string representation of a date and time to its <xref href="System.DateTime"></xref> equivalent using the specified format, culture-specific format information, and style. The format of the string representation must match the specified format exactly or an exception is thrown.
  remarks: "The <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method parses the string representation of a date, which must be in a format defined by the `format` parameter. It also requires that the date and time elements in `s` appear in the order specified by `format`. If `s` does not match the pattern of the `format` parameter, with any variations defined by the `style` parameter, the method throws a <xref:System.FormatException>. In contrast, the <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method parses the string representation of a date in any one of the formats recognized by the format provider's <xref:System.Globalization.DateTimeFormatInfo> object. The<xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method also allows the date and time elements in `s` to appear in any order.  \n  \n If the `s` parameter contains only a time and no date, the current date is used unless the `style` parameter includes the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, in which case the default date (`DateTime.Date.MinValue`) is used. If the `s` parameter contains only a date and no time, midnight (00:00:00) is used. The `style` parameter also determines whether the `s` parameter can contain leading, inner, or trailing white space characters.  \n  \n If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is <xref:System.DateTimeKind?displayProperty=fullName>. This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName>, or by using the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> and <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flags, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName>. If `s` contains time zone information, the time is converted to local time, if necessary, and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind?displayProperty=fullName>. This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag to not convert Coordinated Universal Time (UTC) to a local time and to set the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>.  \n  \n The `format` parameter defines the required pattern of the `s` parameter. It can consist of either one or more custom format specifiers from the [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md) table, or a single standard format specifier, which identifies a predefined pattern, from the [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) table.  \n  \n If you do not use date or time separators in a custom format pattern, use the invariant culture for the `provider` parameter and the widest form of each custom format specifier. For example, if you want to specify hours in the pattern, specify the wider form, \"HH\", instead of the narrower form, \"H\".  \n  \n> [!NOTE]\n>  Rather than requiring that `s` conform to a single format for the parse operation to succeed, you can call the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method and specify multiple permitted formats. This makes the parse operation more likely to succeed.  \n  \n The `styles` parameter includes one or more members of the <xref:System.Globalization.DateTimeStyles> enumeration that determine whether and where white space not defined by `format` can appear in `s` and that control the precise behavior of the parse operation. The following table describes how each member of the <xref:System.Globalization.DateTimeStyles> enumeration affects the operation of the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> method.  \n  \n|DateTimeStyles member|Description|  \n|---------------------------|-----------------|  \n|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|Parses `s` and, if necessary, converts it to UTC. If `s` includes a time zone offset, or if `s` contains no time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, the method parses the string, calls <xref:System.DateTime.ToUniversalTime%2A> to convert the returned <xref:System.DateTime> value to UTC, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>. If `s` indicates that it represents UTC, or if `s` does not contain time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, the method parses the string, performs no time zone conversion on the returned <xref:System.DateTime> value, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>. In all other cases, the flag has no effect.|  \n|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|Specifies that white space not defined by `format` can appear between any individual date or time element.|  \n|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|Specifies that white space not defined by `format` can appear at the beginning of `s`.|  \n|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|Specifies that white space not defined by `format` can appear at the end of `s`.|  \n|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|Specifies that `s` may contain leading, inner, and trailing white spaces not defined by `format`.|  \n|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|Specifies that if `s` lacks any time zone information, it is assumed to represent a local time. Unless the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag is present, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set to <xref:System.DateTimeKind?displayProperty=fullName>.|  \n|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|Specifies that if `s` lacks any time zone information, it is assumed to represent UTC. Unless the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag is present, the method converts the returned <xref:System.DateTime> value from UTC to local time and sets its <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>.|  \n|<xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>|If `s` contains time without date information, the date of the return value is set to `DateTime.MinValue.Date`.|  \n|<xref:System.Globalization.DateTimeStyles.None>|The `s` parameter is parsed using default values. No white space other than that present in `format` is allowed. If `s` lacks a date component, the date of the returned <xref:System.DateTime> value is set to 1/1/0001. If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind?displayProperty=fullName>. If time zone information is present in `s`, the time is converted to local time and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind?displayProperty=fullName>.|  \n|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|For strings that contain time zone information, tries to prevent the conversion to a <xref:System.DateTime> value date and time with its <xref:System.DateTime.Kind%2A> property set to <xref:System.DateTimeKind?displayProperty=fullName>. This flag primarily prevents the conversion of UTC times to local times.|  \n  \n The particular date and time symbols and strings (such as the names of the days of the week in a particular language) used in `s` are defined by the `provider` parameter, as is the precise format of `s` if `format` is a standard format specifier string. The `provider` parameter can be any of the following:  \n  \n-   A <xref:System.Globalization.CultureInfo> object that represents the culture used to interpret `s`. The <xref:System.Globalization.DateTimeFormatInfo> object returned by its <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property defines the symbols and formatting in `s`.  \n  \n-   A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.  \n  \n-   A custom <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns either the <xref:System.Globalization.CultureInfo> object or the <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.  \n  \n If `provider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used."
  example:
  - "The following example demonstrates the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29> method. Note that the string \" 5/01/2009 8:30 AM\" cannot be parsed successfully when the `styles` parameter equals <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> because leading spaces are not allowed by `format`. Additionally, the string \"5/01/2009 09:00\" cannot be parsed successfully with a `format` of \"MM/dd/yyyyhh:mm\" because the date string does not precede the month number with a leading zero, as `format` requires.  \n  \n [!code-csharp[System.DateTime.ParseExact#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.ParseExact/cs/parseexact2.cs#2)]\n [!code-vb[System.DateTime.ParseExact#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.ParseExact/vb/parseexact2.vb#2)]"
  syntax:
    content: public static DateTime ParseExact (string s, string format, IFormatProvider provider, System.Globalization.DateTimeStyles style);
    parameters:
    - id: s
      type: System.String
      description: A string containing a date and time to convert.
    - id: format
      type: System.String
      description: A format specifier that defines the required format of <code>s</code>. For more information, see the Remarks section.
    - id: provider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information about <code>s</code>.
    - id: style
      type: System.Globalization.DateTimeStyles
      description: A bitwise combination of the enumeration values that provides additional information about <code>s</code>, about style elements that may be present in <code>s</code>, or about the conversion from <code>s</code> to a <xref href="System.DateTime"></xref> value. A typical value to specify is <xref href="System.Globalization.DateTimeStyles.None"></xref>.
    return:
      type: System.DateTime
      description: An object that is equivalent to the date and time contained in <code>s</code>, as specified by <code>format</code>, <code>provider</code>, and <code>style</code>.
  overload: System.DateTime.ParseExact*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>s</code> or <code>format</code> is `null`.
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>s</code> or <code>format</code> is an empty string.  \n  \n -or-  \n  \n <code>s</code> does not contain a date and time that corresponds to the pattern specified in <code>format</code>.  \n  \n -or-  \n  \n The hour component and the AM/PM designator in <code>s</code> do not agree."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>style</code> contains an invalid combination of <xref href="System.Globalization.DateTimeStyles"></xref> values. For example, both <xref href="System.Globalization.DateTimeStyles.AssumeLocal"></xref> and <xref href="System.Globalization.DateTimeStyles.AssumeUniversal"></xref>.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider)
  commentId: M:System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider)
  id: ParseExact(System.String,System.String,System.IFormatProvider)
  parent: System.DateTime
  langs:
  - csharp
  name: ParseExact(String, String, IFormatProvider)
  nameWithType: DateTime.ParseExact(String, String, IFormatProvider)
  fullName: DateTime.ParseExact(String, String, IFormatProvider)
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Converts the specified string representation of a date and time to its <xref href="System.DateTime"></xref> equivalent using the specified format and culture-specific format information. The format of the string representation must match the specified format exactly.
  remarks: "The <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29?displayProperty=fullName> method parses the string representation of a date, which must be in the format defined by the `format` parameter. It also requires that the \\<Date> and \\<Time> elements of the string representation of a date and time appear in the order specified by `format`, and that `s` have no white space other than that permitted by `format`. If `format` defines a date with no time element and the parse operation succeeds, the resulting <xref:System.DateTime> value has a time of midnight (00:00:00). If `format` defines a time with no date element and the parse operation succeeds, the resulting <xref:System.DateTime> value has a date of `DateTime.Now.Date`.  \n  \n If `s` does not represent a time in a particular time zone and the parse operation succeeds, the<xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is <xref:System.DateTimeKind?displayProperty=fullName>. If `s` does represent the time in a particular time zone and `format` allows time zone information to be present (for example, if `format` is equal to the \"o\", \"r\", or \"u\" standard format specifiers, or if it contains the \"z\", \"zz\", or \"zzz\" custom format specifiers), the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is <xref:System.DateTimeKind?displayProperty=fullName>.  \n  \n The `format` parameter is a string that contains either a single standard format specifier, or one or more custom format specifiers that define the required format of `s`. For details about valid formatting codes, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) or [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).  \n  \n> [!NOTE]\n>  If `format` is a custom format pattern that does not include date or time separators (such as \"yyyyMMddHHmm\"), use the invariant culture for the `provider` parameter and the widest form of each custom format specifier. For example, if you want to specify hours in the format pattern, specify the wider form, \"HH\", instead of the narrower form, \"H\".  \n  \n The particular date and time symbols and strings (such as names of the days of the week in a particular language) used in `s` are defined by the `provider` parameter, as is the precise format of `s` if `format` is a standard format specifier string. The `provider` parameter can be any of the following:  \n  \n-   A <xref:System.Globalization.CultureInfo> object that represents the culture used to interpret `s`. The <xref:System.Globalization.DateTimeFormatInfo> object returned by its <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property defines the symbols and formatting in `s`.  \n  \n-   A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.  \n  \n-   A custom <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns either the <xref:System.Globalization.CultureInfo> object or the <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.  \n  \n If `provider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used."
  example:
  - "The following example demonstrates the <xref:System.DateTime.ParseExact%2A> method.  \n  \n [!code-csharp[System.DateTime.ParseExact#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.ParseExact/cs/ParseExact1.cs#1)]\n [!code-vb[System.DateTime.ParseExact#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.ParseExact/vb/ParseExact1.vb#1)]"
  syntax:
    content: public static DateTime ParseExact (string s, string format, IFormatProvider provider);
    parameters:
    - id: s
      type: System.String
      description: A string that contains a date and time to convert.
    - id: format
      type: System.String
      description: A format specifier that defines the required format of <code>s</code>. For more information, see the Remarks section.
    - id: provider
      type: System.IFormatProvider
      description: An object that supplies culture-specific format information about <code>s</code>.
    return:
      type: System.DateTime
      description: An object that is equivalent to the date and time contained in <code>s</code>, as specified by <code>format</code> and <code>provider</code>.
  overload: System.DateTime.ParseExact*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>s</code> or <code>format</code> is `null`.
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>s</code> or <code>format</code> is an empty string.  \n  \n -or-  \n  \n <code>s</code> does not contain a date and time that corresponds to the pattern specified in <code>format</code>.  \n  \n -or-  \n  \n The hour component and the AM/PM designator in <code>s</code> do not agree."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.Second
  commentId: P:System.DateTime.Second
  id: Second
  parent: System.DateTime
  langs:
  - csharp
  name: Second
  nameWithType: DateTime.Second
  fullName: DateTime.Second
  type: Property
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Gets the seconds component of the date represented by this instance.
  remarks: ''
  example:
  - "The following example demonstrates the <xref:System.DateTime.Second%2A> property.  \n  \n [!code-cpp[System.DateTime.Minute etc#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CPP/class1.cpp#1)]\n [!code-csharp[System.DateTime.Minute etc#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CS/class1.cs#1)]\n [!code-vb[System.DateTime.Minute etc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Minute etc/VB/class1.vb#1)]"
  syntax:
    content: public int Second { get; }
    return:
      type: System.Int32
      description: The seconds component, expressed as a value between 0 and 59.
  overload: System.DateTime.Second*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.SpecifyKind(System.DateTime,System.DateTimeKind)
  commentId: M:System.DateTime.SpecifyKind(System.DateTime,System.DateTimeKind)
  id: SpecifyKind(System.DateTime,System.DateTimeKind)
  parent: System.DateTime
  langs:
  - csharp
  name: SpecifyKind(DateTime, DateTimeKind)
  nameWithType: DateTime.SpecifyKind(DateTime, DateTimeKind)
  fullName: DateTime.SpecifyKind(DateTime, DateTimeKind)
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Creates a new <xref href="System.DateTime"></xref> object that has the same number of ticks as the specified <xref href="System.DateTime"></xref>, but is designated as either local time, Coordinated Universal Time (UTC), or neither, as indicated by the specified <xref href="System.DateTimeKind"></xref> value.
  remarks: "A <xref:System.DateTime> object consists of a Kind field that indicates whether the time value is based on local time, Coordinated Universal Time (UTC), or neither, and a Ticks field that contains a time value measured in 100-nanosecond ticks. The <xref:System.DateTime.SpecifyKind%2A> method creates a new <xref:System.DateTime> object using the specified `kind` parameter and the original time value.  \n  \n> [!IMPORTANT]\n>  The returned <xref:System.DateTime> value does not represent the same instant in time as the `value` parameter, and <xref:System.DateTime.SpecifyKind%2A> is not a time zone conversion method. Instead, it leaves the time specified by the `value` parameter unchanged, and sets the <xref:System.DateTime.Kind%2A> property to `kind`. For information about time zone conversions, see [Converting Times Between Time Zones](~/docs/standard/datetime/converting-between-time-zones.md).  \n  \n The <xref:System.DateTime.SpecifyKind%2A> method is useful in interoperability scenarios where you receive a <xref:System.DateTime> object with an unspecified Kind field, but you can determine by independent means that the Ticks field represents local time or UTC."
  example:
  - "The following example uses the <xref:System.DateTime.SpecifyKind%2A> method to demonstrate how the <xref:System.DateTime.Kind%2A> property influences the <xref:System.DateTime.ToLocalTime%2A> and <xref:System.DateTime.ToUniversalTime%2A> conversion methods.  \n  \n [!code-csharp[DateTime.Kind_Suite#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Kind_Suite/cs/ks.cs#1)]\n [!code-vb[DateTime.Kind_Suite#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Kind_Suite/vb/ks.vb#1)]"
  syntax:
    content: public static DateTime SpecifyKind (DateTime value, DateTimeKind kind);
    parameters:
    - id: value
      type: System.DateTime
      description: A date and time.
    - id: kind
      type: System.DateTimeKind
      description: One of the enumeration values that indicates whether the new object represents local time, UTC, or neither.
    return:
      type: System.DateTime
      description: A new object that has the same number of ticks as the object represented by the <code>value</code> parameter and the <xref href="System.DateTimeKind"></xref> value specified by the <code>kind</code> parameter.
  overload: System.DateTime.SpecifyKind*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.Subtract(System.DateTime)
  commentId: M:System.DateTime.Subtract(System.DateTime)
  id: Subtract(System.DateTime)
  parent: System.DateTime
  langs:
  - csharp
  name: Subtract(DateTime)
  nameWithType: DateTime.Subtract(DateTime)
  fullName: DateTime.Subtract(DateTime)
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Subtracts the specified date and time from this instance.
  remarks: "The <xref:System.DateTime.Subtract%28System.DateTime%29> method determines the difference between two dates. To subtract a time interval from the current instance, call the <xref:System.DateTime.Subtract%28System.TimeSpan%29> method. To subtract a particular time interval from the current instance, call the method that adds that time interval to the current date, and supply a negative value as the method argument. For example, to subtract two months from the current date, call the <xref:System.DateTime.AddMonths%28System.Int32%29> method with a value of -2.  \n  \n If the date and time of the current instance is earlier than `value`, the method returns a <xref:System.TimeSpan> object that represents a negative time span. That is, the value of all of its non-zero properties (such as <xref:System.TimeSpan.Days%2A> or <xref:System.TimeSpan.Ticks%2A>) is negative.  \n  \n The<xref:System.DateTime.Subtract%28System.DateTime%29> method does not consider the value of the <xref:System.DateTime.Kind%2A> property of the two <xref:System.DateTime> values when performing the subtraction. Before subtracting <xref:System.DateTime> objects, ensure that the objects represent times in the same time zone. Otherwise, the result will include the difference between time zones.  \n  \n> [!NOTE]\n>  The <xref:System.DateTimeOffset.Subtract%28System.DateTimeOffset%29?displayProperty=fullName> method does consider the difference between time zones when performing the subtraction."
  example:
  - "The following example demonstrates the <xref:System.DateTime.Subtract%2A> method and the subtraction operator.  \n  \n [!code-cpp[DateTime.Subtraction#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.Subtraction/CPP/class1.cpp#1)]\n [!code-csharp[DateTime.Subtraction#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Subtraction/CS/class1.cs#1)]\n [!code-vb[DateTime.Subtraction#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Subtraction/VB/class1.vb#1)]"
  syntax:
    content: public TimeSpan Subtract (DateTime value);
    parameters:
    - id: value
      type: System.DateTime
      description: The date and time value to subtract.
    return:
      type: System.TimeSpan
      description: A time interval that is equal to the date and time represented by this instance minus the date and time represented by <code>value</code>.
  overload: System.DateTime.Subtract*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The result is less than <xref href="System.DateTime.MinValue"></xref> or greater than <xref href="System.DateTime.MaxValue"></xref>.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.Subtract(System.TimeSpan)
  commentId: M:System.DateTime.Subtract(System.TimeSpan)
  id: Subtract(System.TimeSpan)
  parent: System.DateTime
  langs:
  - csharp
  name: Subtract(TimeSpan)
  nameWithType: DateTime.Subtract(TimeSpan)
  fullName: DateTime.Subtract(TimeSpan)
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Subtracts the specified duration from this instance.
  remarks: "The <xref:System.DateTime.Subtract%28System.TimeSpan%29> method returns the date that is a specified time interval difference from the current instance. To determine the time interval between two dates, call the <xref:System.DateTime.Subtract%28System.DateTime%29> method. To subtract a particular time interval from the current instance, call the method that adds that time interval to the current date, and supply a negative value as the method argument. For example, to subtract two months from the current date, call the <xref:System.DateTime.AddMonths%28System.Int32%29> method with a value of -2.  \n  \n This method does not change the value of this <xref:System.DateTime>. Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation.  \n  \n Ordinarily, the <xref:System.DateTime.Subtract%28System.TimeSpan%29?displayProperty=fullName> method subtracts a <xref:System.TimeSpan> object that represents a positive time span and returns a <xref:System.DateTime> value that is earlier than the date and time of the current instance. However, if the <xref:System.TimeSpan> object represents a negative time span, the <xref:System.DateTime.Subtract%28System.TimeSpan%29?displayProperty=fullName> method returns a <xref:System.DateTime> value that is later than the date and time of the current instance.  \n  \n The <xref:System.DateTime.Subtract%28System.TimeSpan%29?displayProperty=fullName> method allows you to subtract a time interval that consists of more than one unit of time (such as a given number of hours and a given number of minutes). To subtract a single unit of time (such as years, months, or days) from the <xref:System.DateTime> instance, you can pass a negative numeric value as a parameter to any of the following methods:  \n  \n-   <xref:System.DateTime.AddYears%2A>, to subtract a specific number of years from the current date and time instance.  \n  \n-   <xref:System.DateTime.AddMonths%2A>, to subtract a specific number of months from the current date and time instance.  \n  \n-   <xref:System.DateTime.AddDays%2A>, to subtract a specific number of days from the current date and time instance.  \n  \n-   <xref:System.DateTime.AddHours%2A>, to subtract a specific number of hours from the current date and time instance.  \n  \n-   <xref:System.DateTime.AddMinutes%2A>, to subtract a specific number of minutes from the current date and time instance.  \n  \n-   <xref:System.DateTime.AddSeconds%2A>, to subtract a specific number of seconds from the current date and time instance.  \n  \n-   <xref:System.DateTime.AddMilliseconds%2A>, to subtract a specific number of milliseconds from the current date and time instance.  \n  \n-   <xref:System.DateTime.AddTicks%2A>, to subtract a specific number of ticks from the current date and time instance."
  example:
  - "The following example demonstrates the <xref:System.DateTime.Subtract%2A> method and the subtraction operator.  \n  \n [!code-cpp[DateTime.Subtraction#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.Subtraction/CPP/class1.cpp#1)]\n [!code-csharp[DateTime.Subtraction#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Subtraction/CS/class1.cs#1)]\n [!code-vb[DateTime.Subtraction#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Subtraction/VB/class1.vb#1)]"
  syntax:
    content: public DateTime Subtract (TimeSpan value);
    parameters:
    - id: value
      type: System.TimeSpan
      description: The time interval to subtract.
    return:
      type: System.DateTime
      description: An object that is equal to the date and time represented by this instance minus the time interval represented by <code>value</code>.
  overload: System.DateTime.Subtract*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The result is less than <xref href="System.DateTime.MinValue"></xref> or greater than <xref href="System.DateTime.MaxValue"></xref>.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.Ticks
  commentId: P:System.DateTime.Ticks
  id: Ticks
  parent: System.DateTime
  langs:
  - csharp
  name: Ticks
  nameWithType: DateTime.Ticks
  fullName: DateTime.Ticks
  type: Property
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Gets the number of ticks that represent the date and time of this instance.
  remarks: "A single tick represents one hundred nanoseconds or one ten-millionth of a second. There are 10,000 ticks in a millisecond, or 10 million ticks in a second.  \n  \n The value of this property represents the number of 100-nanosecond intervals that have elapsed since 12:00:00 midnight, January 1, 0001 (0:00:00 UTC on January 1, 0001, in the Gregorian calendar), which represents <xref:System.DateTime.MinValue?displayProperty=fullName>. It does not include the number of ticks that are attributable to leap seconds."
  example:
  - "The following example uses the <xref:System.DateTime.Ticks%2A> property to display the number of ticks that have elapsed since the beginning of the twenty-first century and to instantiate a <xref:System.TimeSpan> object. The <xref:System.TimeSpan> object is then used to display the elapsed time using several other time intervals.  \n  \n [!code-csharp[System.DateTime.Ticks#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Ticks/cs/Ticks.cs#1)]\n [!code-vb[System.DateTime.Ticks#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Ticks/vb/Ticks.vb#1)]"
  syntax:
    content: public long Ticks { get; }
    return:
      type: System.Int64
      description: The number of ticks that represent the date and time of this instance. The value is between `DateTime.MinValue.Ticks` and `DateTime.MaxValue.Ticks`.
  overload: System.DateTime.Ticks*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.TimeOfDay
  commentId: P:System.DateTime.TimeOfDay
  id: TimeOfDay
  parent: System.DateTime
  langs:
  - csharp
  name: TimeOfDay
  nameWithType: DateTime.TimeOfDay
  fullName: DateTime.TimeOfDay
  type: Property
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Gets the time of day for this instance.
  remarks: "Unlike the <xref:System.DateTime.Date%2A> property. which returns a <xref:System.DateTime> value that represents a date without its time component, the <xref:System.DateTime.TimeOfDay%2A> property returns a <xref:System.TimeSpan> value that represents a  <xref:System.DateTime> value's time component.  \n  \n If you want to display the time of day or retrieve the string representation of the time of day of a <xref:System.DateTime> value, you can instead call an overload of the <xref:System.DateTime.ToString%2A> method that has a `format` parameter or use the [composite formatting](~/docs/standard/base-types/composite-formatting.md) feature with the \"t\" or \"T\" standard format string."
  example:
  - "The following example displays the value of the <xref:System.DateTime.TimeOfDay%2A> property for an array of <xref:System.DateTime> values. It also contrasts the return value with the string returned by the \"t\" standard format string in a composite formatting operation.  \n  \n [!code-csharp[System.DateTime.TimeOfDay#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.timeofday/cs/timeofday1.cs#1)]\n [!code-vb[System.DateTime.TimeOfDay#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.timeofday/vb/timeofday1.vb#1)]"
  syntax:
    content: public TimeSpan TimeOfDay { get; }
    return:
      type: System.TimeSpan
      description: A time interval that represents the fraction of the day that has elapsed since midnight.
  overload: System.DateTime.TimeOfDay*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.ToBinary
  commentId: M:System.DateTime.ToBinary
  id: ToBinary
  parent: System.DateTime
  langs:
  - csharp
  name: ToBinary()
  nameWithType: DateTime.ToBinary()
  fullName: DateTime.ToBinary()
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Serializes the current <xref href="System.DateTime"></xref> object to a 64-bit binary value that subsequently can be used to recreate the <xref href="System.DateTime"></xref> object.
  remarks: "Use the <xref:System.DateTime.ToBinary%2A> method to convert the value of the current <xref:System.DateTime> object to a binary value. Subsequently, use the binary value and the <xref:System.DateTime.FromBinary%2A> method to recreate the original <xref:System.DateTime> object.  \n  \n> [!IMPORTANT]\n>  In some cases, the <xref:System.DateTime> value returned by the <xref:System.DateTime.FromBinary%2A> method is not identical to the original <xref:System.DateTime> value supplied to the <xref:System.DateTime.ToBinary%2A> method. For more information, see the next section, \"Local Time Adjustment\".  \n  \n## Local Time Adjustment  \n A local time, which is a Coordinated Universal Time adjusted to the local time zone, is represented by a <xref:System.DateTime> structure whose <xref:System.DateTime.Kind%2A> property has the value <xref:System.DateTimeKind.Local>. When restoring a local <xref:System.DateTime> value from the binary representation that is produced by the <xref:System.DateTime.ToBinary%2A> method, the <xref:System.DateTime.FromBinary%2A> method may adjust the recreated value so that it is not equal to the original value. This can occur under the following conditions:  \n  \n-   If a local <xref:System.DateTime> object is serialized in one time zone by the <xref:System.DateTime.ToBinary%2A> method, and then deserialized in a different time zone by the <xref:System.DateTime.FromBinary%2A> method, the local time represented by the resulting <xref:System.DateTime> object is automatically adjusted to the second time zone.  \n  \n     For example, consider a <xref:System.DateTime> object that represents a local time of 3 P.M. An application that is executing in the U.S. Pacific Time zone uses the <xref:System.DateTime.ToBinary%2A> method to convert that <xref:System.DateTime> object to a binary value. Another application that is executing in the U.S. Eastern Time zone uses the <xref:System.DateTime.FromBinary%2A> method to convert the binary value to a new <xref:System.DateTime> object. The value of the new <xref:System.DateTime> object is 6 P.M., which represents the same point in time as the original 3 P.M. value, but is adjusted to local time in the Eastern Time zone.  \n  \n-   If the binary representation of a local <xref:System.DateTime> value represents an invalid time in the local time zone of the system on which <xref:System.DateTime.FromBinary%2A> is called, the time is adjusted so that it is valid.  \n  \n     For example, the transition from standard time to daylight saving time occurs in the U.S. Pacific Time zone on March 14, 2010, at 2:00 A.M., when the time advances by one hour, to 3:00 A.M. This hour interval is an invalid time, that is, a time interval that does not exist in this time zone. The following example shows that when a time that falls within this range is converted to a binary value by the <xref:System.DateTime.ToBinary%2A> method and is then restored by the <xref:System.DateTime.FromBinary%2A> method, the original value is adjusted to become a valid time. You can determine whether a particular date and time value may be subject to modification by passing it to the <xref:System.TimeZoneInfo.IsInvalidTime%2A?displayProperty=fullName> method, as the example illustrates.  \n  \n     [!code-csharp[System.DateTime.FromBinary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.frombinary/cs/frombinary1.cs#1)]\n     [!code-vb[System.DateTime.FromBinary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.frombinary/vb/frombinary1.vb#1)]  \n  \n## Version Considerations  \n Starting with the .NET Framework version 2.0, a <xref:System.DateTime> structure consists of a private Kind field, which indicates whether the specified time value is based on local time, Coordinated Universal Time (UTC), or neither, and a private Ticks field, which contains the number of 100-nanosecond ticks that specify a date and time. The Ticks field can be accessed with the <xref:System.DateTime.Ticks%2A> property and the Kind field can be accessed with the <xref:System.DateTime.Kind%2A> property.  \n  \n Prior to the .NET Framework 2.0, if you serialized a <xref:System.DateTime> object manually instead of using a serialization interface such as <xref:System.Runtime.Serialization.ISerializable?displayProperty=fullName>, you only needed to serialize the Ticks data in the <xref:System.DateTime> structure. Starting with version 2.0, you must also serialize the Kind data."
  syntax:
    content: public long ToBinary ();
    parameters: []
    return:
      type: System.Int64
      description: A 64-bit signed integer that encodes the <xref href="System.DateTime.Kind"></xref> and <xref href="System.DateTime.Ticks"></xref> properties.
  overload: System.DateTime.ToBinary*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.Today
  commentId: P:System.DateTime.Today
  id: Today
  parent: System.DateTime
  langs:
  - csharp
  name: Today
  nameWithType: DateTime.Today
  fullName: DateTime.Today
  type: Property
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Gets the current date.
  remarks: "Starting with the .NET Framework version 2.0, the return value is a <xref:System.DateTime> whose <xref:System.DateTime.Kind%2A> property returns <xref:System.DateTimeKind.Local>.  \n  \n Because it returns the current date without the current time, the <xref:System.DateTime.Today%2A> property is suitable for use in applications that work with dates only. For details, see [Choosing Between DateTime, DateTimeOffset, TimeSpan, and TimeZoneInfo](~/docs/standard/datetime/choosing-between-datetime.md). In contrast, the <xref:System.DateTime.TimeOfDay%2A> property returns the current time without the current date, and the <xref:System.DateTime.Now%2A> property returns both the current date and the current time."
  example:
  - "The following example uses the <xref:System.DateTime.Date%2A> property to retrieve the current date. It also illustrates how a <xref:System.DateTime> value can be formatted using some of the standard date and time format strings. Note that the output produced by the third call to the <xref:System.DateTime.ToString%28System.String%29> method uses the g format specifier to include the time component, which is zero.  \n  \n [!code-csharp[System.DateTime.Today#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Today/cs/Today1.cs#1)]\n [!code-vb[System.DateTime.Today#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Today/vb/Today1.vb#1)]"
  syntax:
    content: public static DateTime Today { get; }
    return:
      type: System.DateTime
      description: An object that is set to today's date, with the time component set to 00:00:00.
  overload: System.DateTime.Today*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.ToFileTime
  commentId: M:System.DateTime.ToFileTime
  id: ToFileTime
  parent: System.DateTime
  langs:
  - csharp
  name: ToFileTime()
  nameWithType: DateTime.ToFileTime()
  fullName: DateTime.ToFileTime()
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Converts the value of the current <xref href="System.DateTime"></xref> object to a Windows file time.
  remarks: "A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D. (C.E.) Coordinated Universal Time (UTC). Windows uses a file time to record when an application creates, accesses, or writes to a file.  \n  \n The <xref:System.DateTime.ToFileTime%2A> method uses the <xref:System.DateTime.Kind%2A> property to determine whether the current <xref:System.DateTime> object is a local time, a UTC time, or an unspecified kind of time which is treated as a local time."
  example:
  - "The following example demonstrates the <xref:System.DateTime.ToFileTime%2A> method.  \n  \n [!code-cpp[DateTime.ToFileTime#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.ToFileTime/CPP/class1.cpp#1)]\n [!code-csharp[DateTime.ToFileTime#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.ToFileTime/CS/class1.cs#1)]\n [!code-vb[DateTime.ToFileTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.ToFileTime/VB/class1.vb#1)]"
  syntax:
    content: public long ToFileTime ();
    parameters: []
    return:
      type: System.Int64
      description: The value of the current <xref href="System.DateTime"></xref> object expressed as a Windows file time.
  overload: System.DateTime.ToFileTime*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The resulting file time would represent a date and time before 12:00 midnight January 1, 1601 C.E. UTC.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.ToFileTimeUtc
  commentId: M:System.DateTime.ToFileTimeUtc
  id: ToFileTimeUtc
  parent: System.DateTime
  langs:
  - csharp
  name: ToFileTimeUtc()
  nameWithType: DateTime.ToFileTimeUtc()
  fullName: DateTime.ToFileTimeUtc()
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Converts the value of the current <xref href="System.DateTime"></xref> object to a Windows file time.
  remarks: "A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D. (C.E.) Coordinated Universal Time (UTC). Windows uses a file time to record when an application creates, accesses, or writes to a file.  \n  \n The <xref:System.DateTime.ToFileTimeUtc%2A> method uses the <xref:System.DateTime.Kind%2A> property to determine whether the current <xref:System.DateTime> object is a local time, a UTC time, or an unspecified kind of time which is treated as a UTC time. If it is a local time, it converts the time to UTC before performing the conversion to a Windows file time."
  syntax:
    content: public long ToFileTimeUtc ();
    parameters: []
    return:
      type: System.Int64
      description: The value of the current <xref href="System.DateTime"></xref> object expressed as a Windows file time.
  overload: System.DateTime.ToFileTimeUtc*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The resulting file time would represent a date and time before 12:00 midnight January 1, 1601 C.E. UTC.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.ToLocalTime
  commentId: M:System.DateTime.ToLocalTime
  id: ToLocalTime
  parent: System.DateTime
  langs:
  - csharp
  name: ToLocalTime()
  nameWithType: DateTime.ToLocalTime()
  fullName: DateTime.ToLocalTime()
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Converts the value of the current <xref href="System.DateTime"></xref> object to local time.
  remarks: "The local time is equal to the Coordinated Universal Time (UTC) time plus the UTC offset. For more information about the UTC offset, see <xref:System.TimeZone.GetUtcOffset%2A?displayProperty=fullName>. The conversion also takes into account the daylight saving time rule that applies to the time represented by the current <xref:System.DateTime> object.  \n  \n> [!IMPORTANT]\n>  On [!INCLUDE[winxp](~/includes/winxp-md.md)] systems, the <xref:System.DateTime.ToLocalTime%2A> method recognizes only the current adjustment rule when converting from UTC to local time. As a result, conversions for periods before the current adjustment rule came into effect may not accurately reflect the difference between UTC and local time.  \n  \n Starting with the .NET Framework version 2.0, the value returned by the <xref:System.DateTime.ToLocalTime%2A> method is determined by the <xref:System.DateTime.Kind%2A> property of the current <xref:System.DateTime> object. The following table describes the possible results.  \n  \n|Kind|Results|  \n|----------|-------------|  \n|<xref:System.DateTimeKind.Utc>|This instance of <xref:System.DateTime> is converted to local time.|  \n|<xref:System.DateTimeKind.Local>|No conversion is performed.|  \n|<xref:System.DateTimeKind.Unspecified>|This instance of <xref:System.DateTime> is assumed to be a UTC time, and the conversion is performed as if <xref:System.DateTime.Kind%2A> were <xref:System.DateTimeKind.Utc>.|  \n  \n> [!NOTE]\n>  The <xref:System.DateTime.ToLocalTime%2A> method converts a <xref:System.DateTime> value from UTC to local time. To convert the time in any designated time zone to local time, use the <xref:System.TimeZoneInfo.ConvertTime%2A?displayProperty=fullName> method.  \n  \n The value returned by the conversion is a <xref:System.DateTime> whose <xref:System.DateTime.Kind%2A> property always returns <xref:System.DateTimeKind.Local>. Consequently, a valid result is returned even if <xref:System.DateTime.ToLocalTime%2A> is applied repeatedly to the same <xref:System.DateTime>."
  example:
  - "The following example demonstrates the <xref:System.DateTime.ToLocalTime%2A> method. Note that the exact output depends on the current culture and the local time zone of the system on which it is run.  \n  \n [!code-cpp[DateTime.ToLocalTime ToUniversalTime#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.ToLocalTime ToUniversalTime/CPP/class1.cpp#1)]\n [!code-csharp[DateTime.ToLocalTime ToUniversalTime#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.ToLocalTime ToUniversalTime/CS/class1.cs#1)]\n [!code-vb[DateTime.ToLocalTime ToUniversalTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.ToLocalTime ToUniversalTime/VB/class1.vb#1)]  \n  \n The following example uses the <xref:System.DateTime.SpecifyKind%2A> method to demonstrate how the <xref:System.DateTime.Kind%2A> property influences the <xref:System.DateTime.ToLocalTime%2A> and <xref:System.DateTime.ToUniversalTime%2A> conversion methods.  \n  \n [!code-csharp[DateTime.Kind_Suite#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Kind_Suite/cs/ks.cs#1)]\n [!code-vb[DateTime.Kind_Suite#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Kind_Suite/vb/ks.vb#1)]"
  syntax:
    content: public DateTime ToLocalTime ();
    parameters: []
    return:
      type: System.DateTime
      description: An object whose <xref href="System.DateTime.Kind"></xref> property is <xref href="System.DateTimeKind.Local"></xref>, and whose value is the local time equivalent to the value of the current <xref href="System.DateTime"></xref> object, or <xref href="System.DateTime.MaxValue"></xref> if the converted value is too large to be represented by a <xref href="System.DateTime"></xref> object, or <xref href="System.DateTime.MinValue"></xref> if the converted value is too small to be represented as a <xref href="System.DateTime"></xref> object.
  overload: System.DateTime.ToLocalTime*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.ToLongDateString
  commentId: M:System.DateTime.ToLongDateString
  id: ToLongDateString
  parent: System.DateTime
  langs:
  - csharp
  name: ToLongDateString()
  nameWithType: DateTime.ToLongDateString()
  fullName: DateTime.ToLongDateString()
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Converts the value of the current <xref href="System.DateTime"></xref> object to its equivalent long date string representation.
  remarks: "The value of the current <xref:System.DateTime> object is formatted using the pattern defined by the <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> property associated with the current thread culture. The return value is identical to the value returned by specifying the \"D\" [standard DateTime format string](~/docs/standard/base-types/standard-date-and-time-format-strings.md) with the <xref:System.DateTime.ToString%28System.String%29> method.  \n  \n> [!IMPORTANT]\n>  The string returned by the <xref:System.DateTime.ToLongDateString%2A> method is culture-sensitive. It reflects the pattern defined by the current culture's <xref:System.Globalization.DateTimeFormatInfo> object. For example, for the en-US culture, the standard long date pattern is \"dddd, MMMMdd, yyyy\"; for the de-DE culture, it is \"dddd, d. MMMMyyyy\"; for the ja-JP culture, it is \"yyyy'?'M'?'d'?'\". The specific format string on a particular computer can also be customized so that it differs from the standard long date format string.  \n  \n For more information about the current thread culture, see the <xref:System.Threading.Thread.CurrentCulture%2A> property. For more information about format characters, format patterns, and the output they produce, see the [Formatting Types](~/docs/standard/base-types/formatting-types.md) topic. For more information about changing the format pattern associated with a format character, see the <xref:System.Globalization.DateTimeFormatInfo> class."
  example:
  - "The following example demonstrates the <xref:System.DateTime.ToLongDateString%2A> method.  \n  \n [!code-csharp[DateTime.ToShortLongString#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.ToShortLongString/cs/sls.cs#1)]\n [!code-vb[DateTime.ToShortLongString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.ToShortLongString/vb/sls.vb#1)]"
  syntax:
    content: public string ToLongDateString ();
    parameters: []
    return:
      type: System.String
      description: A string that contains the long date string representation of the current <xref href="System.DateTime"></xref> object.
  overload: System.DateTime.ToLongDateString*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.ToLongTimeString
  commentId: M:System.DateTime.ToLongTimeString
  id: ToLongTimeString
  parent: System.DateTime
  langs:
  - csharp
  name: ToLongTimeString()
  nameWithType: DateTime.ToLongTimeString()
  fullName: DateTime.ToLongTimeString()
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Converts the value of the current <xref href="System.DateTime"></xref> object to its equivalent long time string representation.
  remarks: "The value of the current <xref:System.DateTime> object is formatted using the pattern defined by the <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A?displayProperty=fullName> property associated with the current thread culture. The return value is identical to the value returned by specifying the \"T\" [standard date and time format string](~/docs/standard/base-types/standard-date-and-time-format-strings.md) with the <xref:System.DateTime.ToString%28System.String%29> method.  \n  \n> [!IMPORTANT]\n>  The string returned by the <xref:System.DateTime.ToLongTimeString%2A> method is culture-sensitive. It reflects the pattern defined by the <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> property of the current culture's <xref:System.Globalization.DateTimeFormatInfo> object. For example, for the en-US culture, the standard long time pattern is \"h:mm:ss tt\"; for the de-DE culture, it is \"HH:mm:ss\"; for the ja-JP culture, it is \"H:mm:ss\". The specific format string on a particular computer can also be customized so that it differs from the standard long time format string.  \n  \n For more information about the current thread culture, see the <xref:System.Threading.Thread.CurrentCulture%2A> property. For more information about format characters, format patterns, and the output they produce, see the [Formatting Types](~/docs/standard/base-types/formatting-types.md) topic. For more information about changing the format pattern associated with a format character, see the <xref:System.Globalization.DateTimeFormatInfo> class."
  example:
  - "The following example demonstrates the <xref:System.DateTime.ToLongTimeString%2A> method.  \n  \n [!code-csharp[System.DateTime.ToLongTimeString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.tolongtimestring/cs/sls.cs#1)]\n [!code-vb[System.DateTime.ToLongTimeString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.tolongtimestring/vb/sls.vb#1)]"
  syntax:
    content: public string ToLongTimeString ();
    parameters: []
    return:
      type: System.String
      description: A string that contains the long time string representation of the current <xref href="System.DateTime"></xref> object.
  overload: System.DateTime.ToLongTimeString*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.ToOADate
  commentId: M:System.DateTime.ToOADate
  id: ToOADate
  parent: System.DateTime
  langs:
  - csharp
  name: ToOADate()
  nameWithType: DateTime.ToOADate()
  fullName: DateTime.ToOADate()
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Converts the value of this instance to the equivalent OLE Automation date.
  remarks: "An OLE Automation date is implemented as a floating-point number whose integral component is the number of days before or after midnight, 30 December 1899, and whose fractional component represents the time on that day divided by 24. For example, midnight, 31 December 1899 is represented by 1.0; 6 A.M., 1 January 1900 is represented by 2.25; midnight, 29 December 1899 is represented by -1.0; and 6 A.M., 29 December 1899 is represented by -1.25.  \n  \n The base OLE Automation Date is midnight, 30 December 1899. The minimum OLE Automation date is midnight, 1 January 0100. The maximum OLE Automation Date is the same as <xref:System.DateTime.MaxValue?displayProperty=fullName>, the last moment of 31 December 9999.  \n  \n The <xref:System.DateTime.ToOADate%2A> method throws an <xref:System.OverflowException> if the current instance represents a date that is later than <xref:System.DateTime.MinValue> and earlier than midnight on January1, 0100. However, if the value of the current instance is <xref:System.DateTime.MinValue>, the method returns 0.  \n  \n For more information about OLE Automation, see the [MSDN Library](http://go.microsoft.com/fwlink/?linkid=37118)."
  syntax:
    content: public double ToOADate ();
    parameters: []
    return:
      type: System.Double
      description: A double-precision floating-point number that contains an OLE Automation date equivalent to the value of this instance.
  overload: System.DateTime.ToOADate*
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: The value of this instance cannot be represented as an OLE Automation Date.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.ToShortDateString
  commentId: M:System.DateTime.ToShortDateString
  id: ToShortDateString
  parent: System.DateTime
  langs:
  - csharp
  name: ToShortDateString()
  nameWithType: DateTime.ToShortDateString()
  fullName: DateTime.ToShortDateString()
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Converts the value of the current <xref href="System.DateTime"></xref> object to its equivalent short date string representation.
  remarks: "The value of the current <xref:System.DateTime> object is formatted using the pattern defined by the <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A?displayProperty=fullName> property associated with the current thread culture. The return value is identical to the value returned by specifying the \"d\" [standard DateTime format string](~/docs/standard/base-types/standard-date-and-time-format-strings.md) with the <xref:System.DateTime.ToString%28System.String%29> method.  \n  \n> [!IMPORTANT]\n>  The string returned by the <xref:System.DateTime.ToShortDateString%2A> method is culture-sensitive. It reflects the pattern defined by the current culture's <xref:System.Globalization.DateTimeFormatInfo> object. For example, for the en-US culture, the standard short date pattern is \"M/d/yyyy\"; for the de-DE culture, it is \"dd.MM.yyyy\"; for the ja-JP culture, it is \"yyyy/M/d\". The specific format string on a particular computer can also be customized so that it differs from the standard short date format string.  \n  \n For more information about the current thread culture, see the <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=fullName> property. For more information about format characters, format patterns, and the output they produce, see the [Formatting Types](~/docs/standard/base-types/formatting-types.md) topic. For more information about changing the format pattern associated with a format character, see the <xref:System.Globalization.DateTimeFormatInfo> class."
  example:
  - "The following example demonstrates the <xref:System.DateTime.ToShortDateString%2A> method. It also shows that the result of calling the <xref:System.DateTime.ToShortDateString%2A> method is identical to calling the <xref:System.DateTime.ToString%28System.String%29?displayProperty=fullName> method with \"d\" as the format parameter.  \n  \n [!code-csharp[System.DateTime.ToShortDateString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.ToShortDateString/cs/ToShortDateString.cs#1)]\n [!code-vb[System.DateTime.ToShortDateString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.ToShortDateString/vb/ToShortDateString.vb#1)]"
  syntax:
    content: public string ToShortDateString ();
    parameters: []
    return:
      type: System.String
      description: A string that contains the short date string representation of the current <xref href="System.DateTime"></xref> object.
  overload: System.DateTime.ToShortDateString*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.ToShortTimeString
  commentId: M:System.DateTime.ToShortTimeString
  id: ToShortTimeString
  parent: System.DateTime
  langs:
  - csharp
  name: ToShortTimeString()
  nameWithType: DateTime.ToShortTimeString()
  fullName: DateTime.ToShortTimeString()
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Converts the value of the current <xref href="System.DateTime"></xref> object to its equivalent short time string representation.
  remarks: "The value of the current <xref:System.DateTime> object is formatted using the pattern defined by the <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A?displayProperty=fullName> property associated with the current thread culture. The return value is identical to the value returned by specifying the \"t\" [standard DateTime format string](~/docs/standard/base-types/standard-date-and-time-format-strings.md) with the <xref:System.DateTime.ToString%28System.String%29> method.  \n  \n> [!IMPORTANT]\n>  The string returned by the <xref:System.DateTime.ToShortTimeString%2A> method is culture-sensitive. It reflects the pattern defined by the current culture's <xref:System.Globalization.DateTimeFormatInfo> object. For example, for the en-US culture, the standard short time pattern is \"h:mm tt\"; for the de-DE culture, it is \"HH:mm\"; for the ja-JP culture, it is \"H:mm\". The specific format string on a particular computer can also be customized so that it differs from the standard short time format string.  \n  \n For more information about the current thread culture, see the <xref:System.Threading.Thread.CurrentCulture%2A> property. For more information about format characters, format patterns, and the output they produce, see the [Formatting Types](~/docs/standard/base-types/formatting-types.md) topic. For more information about changing the format pattern associated with a format character, see the <xref:System.Globalization.DateTimeFormatInfo> class."
  example:
  - "The following example demonstrates the <xref:System.DateTime.ToShortTimeString%2A> method.  \n  \n [!code-csharp[DateTime.ToShortLongString#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.ToShortLongString/cs/sls.cs#1)]\n [!code-vb[DateTime.ToShortLongString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.ToShortLongString/vb/sls.vb#1)]"
  syntax:
    content: public string ToShortTimeString ();
    parameters: []
    return:
      type: System.String
      description: A string that contains the short time string representation of the current <xref href="System.DateTime"></xref> object.
  overload: System.DateTime.ToShortTimeString*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.ToString(System.String,System.IFormatProvider)
  commentId: M:System.DateTime.ToString(System.String,System.IFormatProvider)
  id: ToString(System.String,System.IFormatProvider)
  parent: System.DateTime
  langs:
  - csharp
  name: ToString(String, IFormatProvider)
  nameWithType: DateTime.ToString(String, IFormatProvider)
  fullName: DateTime.ToString(String, IFormatProvider)
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Converts the value of the current <xref href="System.DateTime"></xref> object to its equivalent string representation using the specified format and culture-specific format information.
  remarks: "The `format` parameter can contain either a single format specifier character (see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)) or a custom format pattern (see [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md)). If `format` is `null` or an empty string (\"\"), the standard format specifier, \"G\", is used.  \n  \n The `provider` parameter defines the pattern that corresponds to the standard format specifiers, as well as the symbols and names of date and time components. The `provider` parameter can be any of the following:  \n  \n-   A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting conventions are to be reflected in the returned string. The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the formatting of the returned string.  \n  \n-   A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.  \n  \n-   A custom object that implements the <xref:System.IFormatProvider> interface. Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.  \n  \n If `provider` is `null`, the <xref:System.Globalization.DateTimeFormatInfo> associated with the current culture is used. For more information, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName>."
  example:
  - "The following example uses each of the standard date time format strings to display the string representation of a date and time for four different cultures.  \n  \n [!code-csharp[System.DateTime.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.ToString/cs/tostring3.cs#4)]\n [!code-vb[System.DateTime.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.ToString/vb/tostring3.vb#4)]  \n  \n The following example demonstrates different ways of formatting a <xref:System.DateTime> value using the invariant <xref:System.Globalization.DateTimeFormatInfo>.  \n  \n [!code-cpp[Classic DateTime.ToString2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic DateTime.ToString2 Example/CPP/source.cpp#1)]\n [!code-csharp[Classic DateTime.ToString2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic DateTime.ToString2 Example/CS/source.cs#1)]\n [!code-vb[Classic DateTime.ToString2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic DateTime.ToString2 Example/VB/source.vb#1)]"
  syntax:
    content: public string ToString (string format, IFormatProvider provider);
    parameters:
    - id: format
      type: System.String
      description: A standard or custom date and time format string.
    - id: provider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information.
    return:
      type: System.String
      description: A string representation of value of the current <xref href="System.DateTime"></xref> object as specified by <code>format</code> and <code>provider</code>.
  overload: System.DateTime.ToString*
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "The length of <code>format</code> is 1, and it is not one of the format specifier characters defined for <xref href=\"System.Globalization.DateTimeFormatInfo\"></xref>.  \n  \n -or-  \n  \n <code>format</code> does not contain a valid custom format pattern."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The date and time is outside the range of dates supported by the calendar used by <code>provider</code>.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.ToString(System.String)
  commentId: M:System.DateTime.ToString(System.String)
  id: ToString(System.String)
  parent: System.DateTime
  langs:
  - csharp
  name: ToString(String)
  nameWithType: DateTime.ToString(String)
  fullName: DateTime.ToString(String)
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Converts the value of the current <xref href="System.DateTime"></xref> object to its equivalent string representation using the specified format and the formatting conventions of the current culture.
  remarks: "The <xref:System.DateTime.ToString%28System.String%29> method returns the string representation of a date and time value in a specific format that uses the formatting conventions of the current culture; for more information, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName>.  \n  \n The `format` parameter should contain either a single format specifier character (see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)) or a custom format pattern (see [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md)) that defines the format of the returned string. If `format` is `null` or an empty string, the general format specifier, 'G', is used.  \n  \n Some uses of this method include:  \n  \n-   Getting a string that displays the date and time in the current culture’s short date and time format. To do this, you use the \"G\" format specifier.  \n  \n-   Getting a string that contains only the month and year. To do this, you use the \"MM/yyyy\" format string. The format string uses the current culture’s date separator.  \n  \n-   Getting a string that contains the date and time in a specific format. For example, the \"MM/dd/yyyyHH:mm\" format string displays the date and time string in a fixed format such as \"19//03//2013 18:06\". The format string uses \"/\" as a fixed date separator regardless of culture-specific settings.  \n  \n-   Getting a date in a condensed format that could be used for serializing a date string. For example, the \"yyyyMMdd\" format string displays a four-digit year followed by a two-digit month and a two-digit day with no date separator.  \n  \n The following example uses these three format strings to display a date and time value by using the conventions of the en-US and fr-FR cultures.  \n  \n [!code-csharp[System.DateTime.ToString#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.ToString/cs/tostring5.cs#5)]\n [!code-vb[System.DateTime.ToString#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.ToString/vb/tostring5.vb#5)]"
  example:
  - "The following example uses each of the standard date and time format strings and a selection of custom date and time format strings to display the string representation of a <xref:System.DateTime> value. The thread current culture for the example is en-US.  \n  \n [!code-csharp[System.DateTime.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.ToString/cs/ToString2.cs#2)]\n [!code-vb[System.DateTime.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.ToString/vb/ToString2.vb#2)]"
  syntax:
    content: public string ToString (string format);
    parameters:
    - id: format
      type: System.String
      description: A standard or custom date and time format string.
    return:
      type: System.String
      description: A string representation of value of the current <xref href="System.DateTime"></xref> object as specified by <code>format</code>.
  overload: System.DateTime.ToString*
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "The length of <code>format</code> is 1, and it is not one of the format specifier characters defined for <xref href=\"System.Globalization.DateTimeFormatInfo\"></xref>.  \n  \n -or-  \n  \n <code>format</code> does not contain a valid custom format pattern."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The date and time is outside the range of dates supported by the calendar used by the current culture.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.ToString(System.IFormatProvider)
  commentId: M:System.DateTime.ToString(System.IFormatProvider)
  id: ToString(System.IFormatProvider)
  parent: System.DateTime
  langs:
  - csharp
  name: ToString(IFormatProvider)
  nameWithType: DateTime.ToString(IFormatProvider)
  fullName: DateTime.ToString(IFormatProvider)
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Converts the value of the current <xref href="System.DateTime"></xref> object to its equivalent string representation using the specified culture-specific format information.
  remarks: "The value of the current <xref:System.DateTime> object is formatted using the general date and time format specifier ('G'), which formats output using the short date pattern and the long time pattern.  \n  \n The format of the short date and long time pattern is defined by the `provider` parameter. The `provider` parameter can be any of the following:  \n  \n-   A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting conventions are to be reflected in the returned string. The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the formatting of the returned string.  \n  \n-   A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.  \n  \n-   A custom object that implements the <xref:System.IFormatProvider> interface. Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.  \n  \n If `provider` is `null`, the <xref:System.Globalization.DateTimeFormatInfo> object associated with the current culture is used. For more information, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName>."
  example:
  - "The following example displays the string representation of a date and time using <xref:System.Globalization.CultureInfo> objects that represent five different cultures.  \n  \n [!code-csharp[System.DateTime.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.ToString/cs/ToString4.cs#3)]\n [!code-vb[System.DateTime.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.ToString/vb/ToString4.vb#3)]"
  syntax:
    content: public string ToString (IFormatProvider provider);
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information.
    return:
      type: System.String
      description: A string representation of value of the current <xref href="System.DateTime"></xref> object as specified by <code>provider</code>.
  overload: System.DateTime.ToString*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The date and time is outside the range of dates supported by the calendar used by <code>provider</code>.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.ToString
  commentId: M:System.DateTime.ToString
  id: ToString
  parent: System.DateTime
  langs:
  - csharp
  name: ToString()
  nameWithType: DateTime.ToString()
  fullName: DateTime.ToString()
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Converts the value of the current <xref href="System.DateTime"></xref> object to its equivalent string representation using the formatting conventions of the current culture.
  remarks: "The value of the current <xref:System.DateTime> object is formatted using the general date and time format specifier ('G'). To format it using a specific date and time format specifier, call the <xref:System.DateTime.ToString%28System.String%29> method. To format it using the general date and time format specifier ('G') for a specific culture, call the <xref:System.DateTime.ToString%28System.IFormatProvider%29> method. To format it using a specific date and time format specifier and the conventions of a specific culture, call the <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29> method.  \n  \n This method uses formatting information derived from the current culture. In particular, it combines the custom format strings returned by the <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> and <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> properties of the <xref:System.Globalization.DateTimeFormatInfo> object returned by the `Thread.CurrentThread.CurrentCulture.DateTimeFormat` property. For more information, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName>. Other overloads of the <xref:System.DateTime.ToString%2A> method enable you to specify the culture whose formatting to use and to define the output pattern of the <xref:System.DateTime> value."
  example:
  - "The following example illustrates how the string representation of a <xref:System.DateTime> value returned by the <xref:System.DateTime.ToString> method depends on the thread current culture. It changes the current thread culture from en-US to fr-FR to ja-JP. and in each case calls the <xref:System.DateTime.ToString> method to return the string representation of a date and time value using that culture.  \n  \n [!code-csharp[System.DateTime.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.ToString/cs/ToString1.cs#1)]\n [!code-vb[System.DateTime.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.ToString/vb/ToString1.vb#1)]"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: A string representation of the value of the current <xref href="System.DateTime"></xref> object.
  overload: System.DateTime.ToString*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The date and time is outside the range of dates supported by the calendar used by the current culture.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.ToUniversalTime
  commentId: M:System.DateTime.ToUniversalTime
  id: ToUniversalTime
  parent: System.DateTime
  langs:
  - csharp
  name: ToUniversalTime()
  nameWithType: DateTime.ToUniversalTime()
  fullName: DateTime.ToUniversalTime()
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Converts the value of the current <xref href="System.DateTime"></xref> object to Coordinated Universal Time (UTC).
  remarks: "The Coordinated Universal Time (UTC) is equal to the local time minus the UTC offset. For more information about the UTC offset, see <xref:System.TimeZone.GetUtcOffset%2A?displayProperty=fullName>. The conversion also takes into account the daylight saving time rule that applies to the time represented by the current <xref:System.DateTime> object.  \n  \n> [!IMPORTANT]\n>  On [!INCLUDE[winxp](~/includes/winxp-md.md)] systems, the <xref:System.DateTime.ToUniversalTime%2A> method recognizes only the current adjustment rule when converting from local time to UTC. As a result, conversions for periods before the current adjustment rule came into effect may not accurately reflect the difference between local time and UTC.  \n  \n Starting with the .NET Framework version 2.0, the value returned by the <xref:System.DateTime.ToUniversalTime%2A> method is determined by the <xref:System.DateTime.Kind%2A> property of the current <xref:System.DateTime> object. The following table describes the possible results.  \n  \n|Kind|Results|  \n|----------|-------------|  \n|<xref:System.DateTimeKind.Utc>|No conversion is performed.|  \n|<xref:System.DateTimeKind.Local>|The current <xref:System.DateTime> object is converted to UTC.|  \n|<xref:System.DateTimeKind.Unspecified>|The current <xref:System.DateTime> object is assumed to be a local time, and the conversion is performed as if <xref:System.DateTime.Kind%2A> were <xref:System.DateTimeKind.Local>.|  \n  \n> [!NOTE]\n>  The <xref:System.DateTime.ToUniversalTime%2A> method converts a <xref:System.DateTime> value from local time to UTC. To convert the time in a non-local time zone to UTC, use the <xref:System.TimeZoneInfo.ConvertTimeToUtc%28System.DateTime%2CSystem.TimeZoneInfo%29?displayProperty=fullName> method. To convert a time whose offset from UTC is known, use the <xref:System.DateTimeOffset.ToUniversalTime%2A> method.  \n  \n If the date and time instance value is an ambiguous time, this method assumes that it is a standard time. (An ambiguous time is one that can map either to a standard time or to a daylight saving time in the local time zone) If the date and time instance value is an invalid time, this method simply subtracts the local time from the local time zone's UTC offset to return UTC. (An invalid time is one that does not exist because of the application of daylight saving time adjustment rules.)"
  example:
  - "The following example demonstrates the <xref:System.DateTime.ToUniversalTime%2A> method.  \n  \n [!code-cpp[DateTime.ToLocalTime ToUniversalTime#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.ToLocalTime ToUniversalTime/CPP/class1.cpp#1)]\n [!code-csharp[DateTime.ToLocalTime ToUniversalTime#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.ToLocalTime ToUniversalTime/CS/class1.cs#1)]\n [!code-vb[DateTime.ToLocalTime ToUniversalTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.ToLocalTime ToUniversalTime/VB/class1.vb#1)]  \n  \n The following example uses the <xref:System.DateTime.SpecifyKind%2A> method to demonstrate how the <xref:System.DateTime.Kind%2A> property influences the <xref:System.DateTime.ToLocalTime%2A> and <xref:System.DateTime.ToUniversalTime%2A> conversion methods.  \n  \n [!code-csharp[DateTime.Kind_Suite#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Kind_Suite/cs/ks.cs#1)]\n [!code-vb[DateTime.Kind_Suite#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Kind_Suite/vb/ks.vb#1)]"
  syntax:
    content: public DateTime ToUniversalTime ();
    parameters: []
    return:
      type: System.DateTime
      description: An object whose <xref href="System.DateTime.Kind"></xref> property is <xref href="System.DateTimeKind.Utc"></xref>, and whose value is the UTC equivalent to the value of the current <xref href="System.DateTime"></xref> object, or <xref href="System.DateTime.MaxValue"></xref> if the converted value is too large to be represented by a <xref href="System.DateTime"></xref> object, or <xref href="System.DateTime.MinValue"></xref> if the converted value is too small to be represented by a <xref href="System.DateTime"></xref> object.
  overload: System.DateTime.ToUniversalTime*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)
  commentId: M:System.DateTime.TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)
  id: TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)
  parent: System.DateTime
  langs:
  - csharp
  name: TryParse(String, IFormatProvider, DateTimeStyles, DateTime)
  nameWithType: DateTime.TryParse(String, IFormatProvider, DateTimeStyles, DateTime)
  fullName: DateTime.TryParse(String, IFormatProvider, DateTimeStyles, DateTime)
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Converts the specified string representation of a date and time to its <xref href="System.DateTime"></xref> equivalent using the specified culture-specific format information and formatting style, and returns a value that indicates whether the conversion succeeded.
  remarks: "The <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=fullName> method parses a string that can contain date, time, and time zone information. It is similar to the <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method, except that the <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=fullName> method does not throw an exception if the conversion fails.  \n  \n This method attempts to ignore unrecognized data and parse `s` completely. If `s` contains a time but no date, the method by default substitutes the current date or, if `styles` includes the <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault> flag, it substitutes `DateTime.Date.MinValue`. If `s` contains a date but no time, 12:00 midnight is used as the default time. If a date is present but its year component consists of only two digits, it is converted to a year in the `provider` parameter's current calendar based on the value of the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=fullName> property. Any leading, inner, or trailing white space characters in `s` are ignored. The date and time can be bracketed with a pair of leading and trailing NUMBER SIGN characters ('#', U+0023), and can be trailed with one or more NULL characters (U+0000).  \n  \n Specific valid formats for date and time elements, as well as the names and symbols used in dates and times, are defined by the `provider` parameter, which can be any of the following:  \n  \n-   A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting is used in the `s` parameter. The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the formatting used in `s`.  \n  \n-   A <xref:System.Globalization.DateTimeFormatInfo> object that defines the formatting used in `s`.  \n  \n-   A custom <xref:System.IFormatProvider> implementation. Its <xref:System.IFormatProvider.GetFormat%2A?displayProperty=fullName> method returns a <xref:System.Globalization.DateTimeFormatInfo> object that defines the formatting used in `s`.  \n  \n If `provider` is `null`, the current culture is used.  \n  \n If `s` is the string representation of a leap day in a leap year in the current calendar, the method parses `s` successfully. If `s` is the string representation of a leap day in a non-leap year in the current calendar of `provider`, the parse operation fails and the method returns `false`.  \n  \n The `styles` parameter defines the precise interpretation of the parsed string and how the parse operation should handle it. It can be one or more members of the <xref:System.Globalization.DateTimeStyles> enumeration, as described in the following table.  \n  \n|DateTimeStyles member|Description|  \n|---------------------------|-----------------|  \n|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|Parses `s` and, if necessary, converts it to UTC. If `s` includes a time zone offset, or if `s` contains no time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, the method parses the string, calls <xref:System.DateTime.ToUniversalTime%2A> to convert the returned <xref:System.DateTime> value to UTC, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>. If `s` indicates that it represents UTC, or if `s` does not contain time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, the method parses the string, performs no time zone conversion on the returned <xref:System.DateTime> value, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>. In all other cases, the flag has no effect.|  \n|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|Although valid, this value is ignored. Inner white space is permitted in the date and time elements of `s`.|  \n|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|Although valid, this value is ignored. Leading white space is permitted in the date and time elements of `s`.|  \n|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|Although valid, this value is ignored. Trailing white space is permitted in the date and time elements of `s`.|  \n|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|Specifies that `s` may contain leading, inner, and trailing white spaces. This is the default behavior. It cannot be overridden by supplying a more restrictive <xref:System.Globalization.DateTimeStyles> enumeration value such as <xref:System.Globalization.DateTimeStyles?displayProperty=fullName>.|  \n|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|Specifies that if `s` lacks any time zone information, it is assumed to represent a local time. Unless the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag is present, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set to <xref:System.DateTimeKind?displayProperty=fullName>.|  \n|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|Specifies that if `s` lacks any time zone information, it is assumed to represent UTC. Unless the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag is present, the method converts the returned <xref:System.DateTime> value from UTC to local time and sets its <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>.|  \n|<xref:System.Globalization.DateTimeStyles.None>|Although valid, this value is ignored.|  \n|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|For strings that contain time zone information, tries to prevent the conversion of a date and time string to a <xref:System.DateTime> value with its <xref:System.DateTime.Kind%2A> property set to <xref:System.DateTimeKind?displayProperty=fullName>. Typically, such a string is created by calling the <xref:System.DateTime.ToString%28System.String%29?displayProperty=fullName> method using either the \"o\", \"r\", or \"u\" standard format specifiers.|  \n  \n If `s` contains no time zone information, the <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=fullName> method returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName> unless a `styles` flag indicates otherwise. If `s` includes time zone or time zone offset information, the <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=fullName> method performs any necessary time conversion and returns one of the following:  \n  \n-   A <xref:System.DateTime> value whose date and time reflect the local time and whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName>.  \n  \n-   Or, if `styles` includes the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal> flag, a <xref:System.DateTime> value whose date and time reflect UTC and whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName>.  \n  \n This behavior can be overridden by using the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag.  \n  \n## Parsing Custom Cultures  \n If you parse a date and time string generated for a custom culture, use the <xref:System.DateTime.TryParseExact%2A> method instead of the <xref:System.DateTime.TryParse%2A> method to improve the probability that the parse operation will succeed. A custom culture date and time string can be complicated and difficult to parse. The <xref:System.DateTime.TryParse%2A> method attempts to parse a string with several implicit parse patterns, all of which might fail. In contrast, the <xref:System.DateTime.TryParseExact%2A> method  requires you to explicitly designate one or more exact parse patterns that are likely to succeed.  \n  \n For more information about custom cultures, see the <xref:System.Globalization.CultureAndRegionInfoBuilder?displayProperty=fullName> class."
  example:
  - "The following example illustrates the <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=fullName> method.  \n  \n [!code-csharp[System.DateTime.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.TryParse/cs/tryparse2.cs#2)]\n [!code-vb[System.DateTime.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.TryParse/vb/tryparse2.vb#2)]"
  syntax:
    content: public static bool TryParse (string s, IFormatProvider provider, System.Globalization.DateTimeStyles styles, out DateTime result);
    parameters:
    - id: s
      type: System.String
      description: A string containing a date and time to convert.
    - id: provider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information about <code>s</code>.
    - id: styles
      type: System.Globalization.DateTimeStyles
      description: A bitwise combination of enumeration values that defines how to interpret the parsed date in relation to the current time zone or the current date. A typical value to specify is <xref href="System.Globalization.DateTimeStyles.None"></xref>.
    - id: result
      type: System.DateTime
      description: When this method returns, contains the <xref href="System.DateTime"></xref> value equivalent to the date and time contained in <code>s</code>, if the conversion succeeded, or <xref href="System.DateTime.MinValue"></xref> if the conversion failed. The conversion fails if the <code>s</code> parameter is `null`, is an empty string (""), or does not contain a valid string representation of a date and time. This parameter is passed uninitialized.
    return:
      type: System.Boolean
      description: '`true` if the <code>s</code> parameter was converted successfully; otherwise, `false`.'
  overload: System.DateTime.TryParse*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>styles</code> is not a valid <xref href=\"System.Globalization.DateTimeStyles\"></xref> value.  \n  \n -or-  \n  \n <code>styles</code> contains an invalid combination of <xref href=\"System.Globalization.DateTimeStyles\"></xref> values (for example, both <xref href=\"System.Globalization.DateTimeStyles.AssumeLocal\"></xref> and <xref href=\"System.Globalization.DateTimeStyles.AssumeUniversal\"></xref>)."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: <code>provider</code> is a neutral culture and cannot be used in a parsing operation.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.TryParse(System.String,System.DateTime@)
  commentId: M:System.DateTime.TryParse(System.String,System.DateTime@)
  id: TryParse(System.String,System.DateTime@)
  parent: System.DateTime
  langs:
  - csharp
  name: TryParse(String, DateTime)
  nameWithType: DateTime.TryParse(String, DateTime)
  fullName: DateTime.TryParse(String, DateTime)
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Converts the specified string representation of a date and time to its <xref href="System.DateTime"></xref> equivalent and returns a value that indicates whether the conversion succeeded.
  remarks: "The <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=fullName> method is similar to the <xref:System.DateTime.Parse%28System.String%29?displayProperty=fullName> method, except that the <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29> method does not throw an exception if the conversion fails.  \n  \n The string `s` is parsed using formatting information in the current <xref:System.Globalization.DateTimeFormatInfo> object, which is supplied implicitly by the current thread culture.  \n  \n This method tries to ignore unrecognized data, if possible, and fills in missing month, day, and year information with the current date. If `s` contains only a date and no time, this method assumes the time is 12:00 midnight. If `s` includes a date component with a two-digit year, it is converted to a year in the current culture's current calendar based on the value of the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=fullName> property. Any leading, inner, or trailing white space character in `s` is ignored. The date and time can be bracketed with a pair of leading and trailing NUMBER SIGN characters ('#', U+0023), and can be trailed with one or more NULL characters (U+0000).  \n  \n Because the <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=fullName> method tries to parse the string representation of a date and time using the formatting rules of the current culture, trying to parse a particular string across different cultures can either fail or return different results. If a specific date and time format will be parsed across different locales, use the <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=fullName> method or one of the overloads of the <xref:System.DateTime.TryParseExact%2A> method and provide a format specifier.  \n  \n If `s` is the string representation of a leap day in a leap year in the current calendar, the method parses `s` successfully. If `s` is the string representation of a leap day in a non-leap year in the current culture's current calendar, the parse operation fails and the method returns `false`.  \n  \n If `s` contains no time zone information, `result` contains a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName> when the method returns. If the string to be parsed contains time zone information, `result` contains a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName> when the method returns."
  example:
  - "The following example passes a number of date and time strings to the <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=fullName> method.  \n  \n [!code-cpp[System.DateTime.TryParse#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.DateTime.TryParse/cpp/datetime.tryparse1.cpp#1)]\n [!code-csharp[System.DateTime.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.TryParse/cs/TryParse1.cs#1)]\n [!code-vb[System.DateTime.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.TryParse/vb/TryParse1.vb#1)]"
  syntax:
    content: public static bool TryParse (string s, out DateTime result);
    parameters:
    - id: s
      type: System.String
      description: A string containing a date and time to convert.
    - id: result
      type: System.DateTime
      description: When this method returns, contains the <xref href="System.DateTime"></xref> value equivalent to the date and time contained in <code>s</code>, if the conversion succeeded, or <xref href="System.DateTime.MinValue"></xref> if the conversion failed. The conversion fails if the <code>s</code> parameter is `null`, is an empty string (""), or does not contain a valid string representation of a date and time. This parameter is passed uninitialized.
    return:
      type: System.Boolean
      description: '`true` if the <code>s</code> parameter was converted successfully; otherwise, `false`.'
  overload: System.DateTime.TryParse*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)
  commentId: M:System.DateTime.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)
  id: TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)
  parent: System.DateTime
  langs:
  - csharp
  name: TryParseExact(String, String, IFormatProvider, DateTimeStyles, DateTime)
  nameWithType: DateTime.TryParseExact(String, String, IFormatProvider, DateTimeStyles, DateTime)
  fullName: DateTime.TryParseExact(String, String, IFormatProvider, DateTimeStyles, DateTime)
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Converts the specified string representation of a date and time to its <xref href="System.DateTime"></xref> equivalent using the specified format, culture-specific format information, and style. The format of the string representation must match the specified format exactly. The method returns a value that indicates whether the conversion succeeded.
  remarks: "The <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=fullName> method parses the string representation of a date, which must be in the format defined by the `format` parameter. It is similar to the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method, except that the <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29> method does not throw an exception if the conversion fails.  \n  \n The `s` parameter contains the date and time to parse and must be in a format defined by the `format` parameter. If date, time, and time zone elements are present in `s`, they must also appear in the order specified by `format`. If `format` defines a date with no time element and the parse operation succeeds, the resulting <xref:System.DateTime> value has a time of midnight (00:00:00). If `format` defines a time with no date element and the parse operation succeeds, the resulting <xref:System.DateTime> value by default has a date of `DateTime.Now.Date`, or it has a date of `DateTime.MinValue.Date` if `styles` includes the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag. The `style` parameter determines whether the `s` parameter can contain leading, inner, or trailing white space characters.  \n  \n If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is <xref:System.DateTimeKind?displayProperty=fullName>. This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName>, or by using the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> and <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flags, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName>. If s contains time zone information, the time is converted to local time, if necessary, and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind?displayProperty=fullName>. This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag to not convert Coordinated Universal Time (UTC) to a local time and set the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>.  \n  \n The `format` parameter contains a pattern that corresponds to the expected format of the `s` parameter. The pattern in the `format` parameter consists of one or more custom format specifiers from the [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md) table, or a single standard format specifier, which identifies a predefined pattern, from the [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) table.  \n  \n If you do not use date or time separators in a custom format pattern, use the invariant culture for the `provider` parameter and the widest form of each custom format specifier. For example, if you want to specify hours in the pattern, specify the wider form, \"HH\", instead of the narrower form, \"H\".  \n  \n> [!NOTE]\n>  Rather than requiring that `s` conform to a single format for the parse operation to succeed, you can call the <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=fullName> method and specify multiple permitted formats. This makes the parse operation more likely to succeed.  \n  \n The particular date and time symbols and strings (such as the names of the days of the week in a particular language) used in `s` are defined by the `provider` parameter, as is the precise format of `s` if `format` is a standard format specifier string. The `provider` parameter can be any of the following:  \n  \n-   A <xref:System.Globalization.CultureInfo> object that represents the culture used to interpret `s`. The <xref:System.Globalization.DateTimeFormatInfo> object returned by its <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property defines the symbols and formatting in `s`.  \n  \n-   A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.  \n  \n-   A custom <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns either the <xref:System.Globalization.CultureInfo> object or the <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.  \n  \n If `provider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.  \n  \n The `styles` parameter includes one or more members of the <xref:System.Globalization.DateTimeStyles> enumeration that determine whether and where white space not defined by `format` can appear in `s` and that control the precise behavior of the parse operation. The following table describes how each member of the <xref:System.Globalization.DateTimeStyles> enumeration affects the operation of the <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29> method.  \n  \n|DateTimeStyles member|Description|  \n|---------------------------|-----------------|  \n|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|Parses `s` and, if necessary, converts it to UTC. If `s` includes a time zone offset, or if `s` contains no time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, the method parses the string, calls <xref:System.DateTime.ToUniversalTime%2A> to convert the returned <xref:System.DateTime> value to UTC, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>. If `s` indicates that it represents UTC, or if `s` does not contain time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, the method parses the string, performs no time zone conversion on the returned <xref:System.DateTime> value, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>. In all other cases, the flag has no effect.|  \n|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|Specifies that white space not defined by `format` can appear between any individual date or time element.|  \n|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|Specifies that white space not defined by `format` can appear at the beginning of `s`.|  \n|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|Specifies that white space not defined by `format` can appear at the end of `s`.|  \n|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|Specifies that `s` may contain leading, inner, and trailing white spaces not defined by `format`.|  \n|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|Specifies that if `s` lacks any time zone information, it is assumed to represent a local time. Unless the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag is present, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime>value is set to <xref:System.DateTimeKind?displayProperty=fullName>.|  \n|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|Specifies that if `s` lacks any time zone information, it is assumed to represent UTC. Unless the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag is present, the method converts the returned <xref:System.DateTime> value from UTC to local time and sets its <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>.|  \n|<xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>|If `s` contains time without date information, the date of the return value is set to `DateTime.MinValue.Date`.|  \n|<xref:System.Globalization.DateTimeStyles.None>|The `s` parameter is parsed using default values. No white space other than that present in `format` is allowed. If `s` lacks a date component, the date of the returned <xref:System.DateTime> value is set to 1/1/0001. If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind?displayProperty=fullName>. If time zone information is present in `s`, the time is converted to local time and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind?displayProperty=fullName>.|  \n|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|For strings that contain time zone information, tries to prevent the conversion to a <xref:System.DateTime> value with its <xref:System.DateTime.Kind%2A> property set to <xref:System.DateTimeKind?displayProperty=fullName>. This flag primarily prevents the conversion of UTC times to local times.|"
  example:
  - "The following example demonstrates the <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=fullName> method. Note that the string \" 5/01/2009 8:30 AM\" cannot be parsed successfully when the `styles` parameter equals <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> because leading spaces are not allowed by `format`. Additionally, the string \"5/01/2009 09:00\" cannot be parsed successfully with a `format` of \"MM/dd/yyyyhh:mm\" because the date string does not precede the month number with a leading zero, as `format` requires.  \n  \n [!code-csharp[System.DateTime.TryParseExact#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.TryParseExact/cs/TryParseExact1.cs#1)]\n [!code-vb[System.DateTime.TryParseExact#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.TryParseExact/vb/TryParseExact1.vb#1)]"
  syntax:
    content: public static bool TryParseExact (string s, string format, IFormatProvider provider, System.Globalization.DateTimeStyles style, out DateTime result);
    parameters:
    - id: s
      type: System.String
      description: A string containing a date and time to convert.
    - id: format
      type: System.String
      description: The required format of <code>s</code>.
    - id: provider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information about <code>s</code>.
    - id: style
      type: System.Globalization.DateTimeStyles
      description: A bitwise combination of one or more enumeration values that indicate the permitted format of <code>s</code>.
    - id: result
      type: System.DateTime
      description: When this method returns, contains the <xref href="System.DateTime"></xref> value equivalent to the date and time contained in <code>s</code>, if the conversion succeeded, or <xref href="System.DateTime.MinValue"></xref> if the conversion failed. The conversion fails if either the <code>s</code> or <code>format</code> parameter is `null`, is an empty string, or does not contain a date and time that correspond to the pattern specified in <code>format</code>. This parameter is passed uninitialized.
    return:
      type: System.Boolean
      description: '`true` if <code>s</code> was converted successfully; otherwise, `false`.'
  overload: System.DateTime.TryParseExact*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>styles</code> is not a valid <xref href=\"System.Globalization.DateTimeStyles\"></xref> value.  \n  \n -or-  \n  \n <code>styles</code> contains an invalid combination of <xref href=\"System.Globalization.DateTimeStyles\"></xref> values (for example, both <xref href=\"System.Globalization.DateTimeStyles.AssumeLocal\"></xref> and <xref href=\"System.Globalization.DateTimeStyles.AssumeUniversal\"></xref>)."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)
  commentId: M:System.DateTime.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)
  id: TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)
  parent: System.DateTime
  langs:
  - csharp
  name: TryParseExact(String, String[], IFormatProvider, DateTimeStyles, DateTime)
  nameWithType: DateTime.TryParseExact(String, String[], IFormatProvider, DateTimeStyles, DateTime)
  fullName: DateTime.TryParseExact(String, String[], IFormatProvider, DateTimeStyles, DateTime)
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Converts the specified string representation of a date and time to its <xref href="System.DateTime"></xref> equivalent using the specified array of formats, culture-specific format information, and style. The format of the string representation must match at least one of the specified formats exactly. The method returns a value that indicates whether the conversion succeeded.
  remarks: "The <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=fullName> method parses the string representation of a date that matches any one of the patterns assigned to the `formats` parameter. It is like the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method, except the <xref:System.DateTime.TryParseExact%2A> method does not throw an exception if the conversion fails.  \n  \n The `s` parameter contains the date and time to parse. If the `s` parameter contains only a time and no date, the current date is used unless the `style` parameter includes the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, in which case the default date (`DateTime.Date.MinValue`) is used. If the `s` parameter contains only a date and no time, midnight (00:00:00) is used. The `style` parameter also determines whether the `s` parameter can contain leading, inner, or trailing white space characters other than those permitted by one of the format strings in `formats`.  \n  \n If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is <xref:System.DateTimeKind?displayProperty=fullName>. This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName>, or by using the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> and <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flags, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName>. If s contains time zone information, the time is converted to local time, if necessary, and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind?displayProperty=fullName>. This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag to not convert Coordinated Universal Time (UTC) to a local time and set the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>.  \n  \n The `formats` parameter contains an array of patterns, one of which `s` must match exactly if the parse operation is to succeed. The patterns in the `formats` parameter consist of one or more custom format specifiers from the [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md) table, or a single standard format specifier, which identifies a predefined pattern, from the [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) table.  \n  \n If you do not use date or time separators in a custom format pattern, use the invariant culture for the `provider` parameter and the widest form of each custom format specifier. For example, if you want to specify hours in the pattern, specify the wider form, \"HH\", instead of the narrower form, \"H\".  \n  \n The particular date and time symbols and strings (such as the names of the days of the week in a particular language) used in `s` are defined by the `provider` parameter, as is the precise format of `s` if `format` is a standard format specifier string. The `provider` parameter can be any of the following:  \n  \n-   A <xref:System.Globalization.CultureInfo> object that represents the culture used to interpret `s`. The <xref:System.Globalization.DateTimeFormatInfo> object returned by its <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property defines the symbols and formatting in `s`.  \n  \n-   A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.  \n  \n-   A custom <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns either the <xref:System.Globalization.CultureInfo>object or the <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.  \n  \n If `provider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.  \n  \n The `styles` parameter includes one or more members of the <xref:System.Globalization.DateTimeStyles> enumeration that determine whether and where white space not defined by `format` can appear in `s` and that control the precise behavior of the parse operation. The following table describes how each member of the <xref:System.Globalization.DateTimeStyles> enumeration affects the operation of the <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29> method.  \n  \n|DateTimeStyles member|Description|  \n|---------------------------|-----------------|  \n|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|Parses `s` and, if necessary, converts it to UTC. If `s` includes a time zone offset, or if `s` contains no time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, the method parses the string, calls <xref:System.DateTime.ToUniversalTime%2A> to convert the returned <xref:System.DateTime> value to UTC, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>. If `s` indicates that it represents UTC, or if `s` does not contain time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, the method parses the string, performs no time zone conversion on the returned <xref:System.DateTime> value, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>. In all other cases, the flag has no effect.|  \n|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|Specifies that white space not defined by `format` can appear between any individual date or time element.|  \n|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|Specifies that white space not defined by `format` can appear at the beginning of `s`.|  \n|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|Specifies that white space not defined by `format` can appear at the end of `s`.|  \n|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|Specifies that `s` may contain leading, inner, and trailing white spaces not defined by `format`.|  \n|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|Specifies that if `s` lacks any time zone information, it is assumed to represent a local time. Unless the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag is present, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set to <xref:System.DateTimeKind?displayProperty=fullName>.|  \n|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|Specifies that if `s` lacks any time zone information, it is assumed to represent UTC. Unless the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag is present, the method converts the returned <xref:System.DateTime> value from UTC to local time and sets its <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>.|  \n|<xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>|If `s` contains time without date information, the date of the return value is set to `DateTime.MinValue.Date`.|  \n|<xref:System.Globalization.DateTimeStyles.None>|The `s` parameter is parsed using default values. No white space other than that present in `format` is allowed. If `s` lacks a date component, the date of the returned <xref:System.DateTime> value is set to 1/1/0001. If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind?displayProperty=fullName>. If time zone information is present in `s`, the time is converted to local time and the<xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind?displayProperty=fullName>.|  \n|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|For strings that contain time zone information, tries to prevent the conversion to a <xref:System.DateTime> value with its <xref:System.DateTime.Kind%2A> property set to <xref:System.DateTimeKind?displayProperty=fullName>. This flag primarily prevents the conversion of UTC times to local times.|"
  example:
  - "The following example uses the <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=fullName> method to ensure that a string in a number of possible formats can be successfully parsed .  \n  \n [!code-csharp[System.Datetime.TryParseExact#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.TryParseExact/cs/TryParseExact2.cs#2)]\n [!code-vb[System.Datetime.TryParseExact#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.TryParseExact/vb/TryParseExact2.vb#2)]"
  syntax:
    content: public static bool TryParseExact (string s, string[] formats, IFormatProvider provider, System.Globalization.DateTimeStyles style, out DateTime result);
    parameters:
    - id: s
      type: System.String
      description: A string that contains a date and time to convert.
    - id: formats
      type: System.String[]
      description: An array of allowable formats of <code>s</code>.
    - id: provider
      type: System.IFormatProvider
      description: An object that supplies culture-specific format information about <code>s</code>.
    - id: style
      type: System.Globalization.DateTimeStyles
      description: A bitwise combination of enumeration values that indicates the permitted format of <code>s</code>. A typical value to specify is <xref href="System.Globalization.DateTimeStyles.None"></xref>.
    - id: result
      type: System.DateTime
      description: When this method returns, contains the <xref href="System.DateTime"></xref> value equivalent to the date and time contained in <code>s</code>, if the conversion succeeded, or <xref href="System.DateTime.MinValue"></xref> if the conversion failed. The conversion fails if <code>s</code> or <code>formats</code> is `null`, <code>s</code> or an element of <code>formats</code> is an empty string, or the format of <code>s</code> is not exactly as specified by at least one of the format patterns in <code>formats</code>. This parameter is passed uninitialized.
    return:
      type: System.Boolean
      description: '`true` if the <code>s</code> parameter was converted successfully; otherwise, `false`.'
  overload: System.DateTime.TryParseExact*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>styles</code> is not a valid <xref href=\"System.Globalization.DateTimeStyles\"></xref> value.  \n  \n -or-  \n  \n <code>styles</code> contains an invalid combination of <xref href=\"System.Globalization.DateTimeStyles\"></xref> values (for example, both <xref href=\"System.Globalization.DateTimeStyles.AssumeLocal\"></xref> and <xref href=\"System.Globalization.DateTimeStyles.AssumeUniversal\"></xref>)."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.UtcNow
  commentId: P:System.DateTime.UtcNow
  id: UtcNow
  parent: System.DateTime
  langs:
  - csharp
  name: UtcNow
  nameWithType: DateTime.UtcNow
  fullName: DateTime.UtcNow
  type: Property
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Gets a <xref href="System.DateTime"></xref> object that is set to the current date and time on this computer, expressed as the Coordinated Universal Time (UTC).
  remarks: "The resolution of this property depends on the system timer.  \n  \n|System|Approximate Resolution|  \n|------------|----------------------------|  \n|Windows NT 3.5 and later|10 milliseconds|  \n|Windows 98|55 milliseconds|  \n  \n Starting with the .NET Framework version 2.0, the return value is a <xref:System.DateTime> whose <xref:System.DateTime.Kind%2A> property returns <xref:System.DateTimeKind?displayProperty=fullName>.  \n  \n An alternative to using <xref:System.DateTime.UtcNow%2A> is <xref:System.DateTimeOffset.UtcNow%2A?displayProperty=fullName>. While the former indicates that a date and time value is Coordinated Universal Time (UTC) by assigning <xref:System.DateTimeKind?displayProperty=fullName> to its <xref:System.DateTime.Kind%2A> property, the latter assigns the date and time value the UTC time's offset (equal to <xref:System.TimeSpan.Zero?displayProperty=fullName>)."
  example:
  - "The following example uses the <xref:System.DateTime.SpecifyKind%2A> method to demonstrate how the <xref:System.DateTime.Kind%2A> property influences the <xref:System.DateTime.ToLocalTime%2A> and <xref:System.DateTime.ToUniversalTime%2A> conversion methods.  \n  \n [!code-csharp[DateTime.Kind_Suite#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Kind_Suite/cs/ks.cs#1)]\n [!code-vb[DateTime.Kind_Suite#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Kind_Suite/vb/ks.vb#1)]"
  syntax:
    content: >-
      [get: System.Security.SecuritySafeCritical]

      public static DateTime UtcNow { get; }
    return:
      type: System.DateTime
      description: An object whose value is the current UTC date and time.
  overload: System.DateTime.UtcNow*
  exceptions: []
  attributes:
  - type: 'get: System.Security.SecuritySafeCritical'
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.Year
  commentId: P:System.DateTime.Year
  id: Year
  parent: System.DateTime
  langs:
  - csharp
  name: Year
  nameWithType: DateTime.Year
  fullName: DateTime.Year
  type: Property
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Gets the year component of the date represented by this instance.
  remarks: "The<xref:System.DateTime.Year%2A> property returns the year of the current instance in the Gregorian calendar. It does not return the year using the default calendar of the current culture. To retrieve the year using a particular calendar, you can call that calendar's `GetYear` method, as the following code shows.  \n  \n [!code-csharp[System.DateTime.Year#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Year/cs/Year.cs#1)]\n [!code-vb[System.DateTime.Year#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Year/vb/Year.vb#1)]"
  example:
  - "The following example demonstrates the <xref:System.DateTime.Year%2A> property.  \n  \n [!code-cpp[System.DateTime.Minute etc#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CPP/class1.cpp#1)]\n [!code-csharp[System.DateTime.Minute etc#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CS/class1.cs#1)]\n [!code-vb[System.DateTime.Minute etc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Minute etc/VB/class1.vb#1)]"
  syntax:
    content: public int Year { get; }
    return:
      type: System.Int32
      description: The year, between 1 and 9999.
  overload: System.DateTime.Year*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.System#IComparable#CompareTo(System.Object)
  commentId: M:System.DateTime.System#IComparable#CompareTo(System.Object)
  id: System#IComparable#CompareTo(System.Object)
  isEii: true
  parent: System.DateTime
  langs:
  - csharp
  name: IComparable.CompareTo(Object)
  nameWithType: DateTime.IComparable.CompareTo(Object)
  fullName: DateTime.IComparable.CompareTo(Object)
  type: Method
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: int IComparable.CompareTo (object value);
    parameters:
    - id: value
      type: System.Object
      description: ''
    return:
      type: System.Int32
      description: ''
  overload: System.DateTime.System#IComparable#CompareTo*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.System#IConvertible#GetTypeCode
  commentId: M:System.DateTime.System#IConvertible#GetTypeCode
  id: System#IConvertible#GetTypeCode
  isEii: true
  parent: System.DateTime
  langs:
  - csharp
  name: IConvertible.GetTypeCode()
  nameWithType: DateTime.IConvertible.GetTypeCode()
  fullName: DateTime.IConvertible.GetTypeCode()
  type: Method
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: TypeCode IConvertible.GetTypeCode ();
    parameters: []
    return:
      type: System.TypeCode
      description: ''
  overload: System.DateTime.System#IConvertible#GetTypeCode*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.System#IConvertible#ToBoolean(System.IFormatProvider)
  commentId: M:System.DateTime.System#IConvertible#ToBoolean(System.IFormatProvider)
  id: System#IConvertible#ToBoolean(System.IFormatProvider)
  isEii: true
  parent: System.DateTime
  langs:
  - csharp
  name: IConvertible.ToBoolean(IFormatProvider)
  nameWithType: DateTime.IConvertible.ToBoolean(IFormatProvider)
  fullName: DateTime.IConvertible.ToBoolean(IFormatProvider)
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: This conversion is not supported. Attempting to use this method throws an <xref href="System.InvalidCastException"></xref>.
  syntax:
    content: bool IConvertible.ToBoolean (IFormatProvider provider);
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that implements the <xref href="System.IFormatProvider"></xref> interface. (This parameter is not used; specify `null`.)
    return:
      type: System.Boolean
      description: The return value for this member is not used.
  overload: System.DateTime.System#IConvertible#ToBoolean*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: In all cases.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.System#IConvertible#ToByte(System.IFormatProvider)
  commentId: M:System.DateTime.System#IConvertible#ToByte(System.IFormatProvider)
  id: System#IConvertible#ToByte(System.IFormatProvider)
  isEii: true
  parent: System.DateTime
  langs:
  - csharp
  name: IConvertible.ToByte(IFormatProvider)
  nameWithType: DateTime.IConvertible.ToByte(IFormatProvider)
  fullName: DateTime.IConvertible.ToByte(IFormatProvider)
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: This conversion is not supported. Attempting to use this method throws an <xref href="System.InvalidCastException"></xref>.
  syntax:
    content: byte IConvertible.ToByte (IFormatProvider provider);
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that implements the <xref href="System.IFormatProvider"></xref> interface. (This parameter is not used; specify `null`.)
    return:
      type: System.Byte
      description: The return value for this member is not used.
  overload: System.DateTime.System#IConvertible#ToByte*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: In all cases.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.System#IConvertible#ToChar(System.IFormatProvider)
  commentId: M:System.DateTime.System#IConvertible#ToChar(System.IFormatProvider)
  id: System#IConvertible#ToChar(System.IFormatProvider)
  isEii: true
  parent: System.DateTime
  langs:
  - csharp
  name: IConvertible.ToChar(IFormatProvider)
  nameWithType: DateTime.IConvertible.ToChar(IFormatProvider)
  fullName: DateTime.IConvertible.ToChar(IFormatProvider)
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: This conversion is not supported. Attempting to use this method throws an <xref href="System.InvalidCastException"></xref>.
  syntax:
    content: char IConvertible.ToChar (IFormatProvider provider);
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that implements the <xref href="System.IFormatProvider"></xref> interface. (This parameter is not used; specify `null`.)
    return:
      type: System.Char
      description: The return value for this member is not used.
  overload: System.DateTime.System#IConvertible#ToChar*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: In all cases.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.System#IConvertible#ToDateTime(System.IFormatProvider)
  commentId: M:System.DateTime.System#IConvertible#ToDateTime(System.IFormatProvider)
  id: System#IConvertible#ToDateTime(System.IFormatProvider)
  isEii: true
  parent: System.DateTime
  langs:
  - csharp
  name: IConvertible.ToDateTime(IFormatProvider)
  nameWithType: DateTime.IConvertible.ToDateTime(IFormatProvider)
  fullName: DateTime.IConvertible.ToDateTime(IFormatProvider)
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Returns the current <xref href="System.DateTime"></xref> object.
  syntax:
    content: DateTime IConvertible.ToDateTime (IFormatProvider provider);
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that implements the <xref href="System.IFormatProvider"></xref> interface. (This parameter is not used; specify `null`.)
    return:
      type: System.DateTime
      description: The current object.
  overload: System.DateTime.System#IConvertible#ToDateTime*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.System#IConvertible#ToDecimal(System.IFormatProvider)
  commentId: M:System.DateTime.System#IConvertible#ToDecimal(System.IFormatProvider)
  id: System#IConvertible#ToDecimal(System.IFormatProvider)
  isEii: true
  parent: System.DateTime
  langs:
  - csharp
  name: IConvertible.ToDecimal(IFormatProvider)
  nameWithType: DateTime.IConvertible.ToDecimal(IFormatProvider)
  fullName: DateTime.IConvertible.ToDecimal(IFormatProvider)
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: This conversion is not supported. Attempting to use this method throws an <xref href="System.InvalidCastException"></xref>.
  syntax:
    content: decimal IConvertible.ToDecimal (IFormatProvider provider);
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that implements the <xref href="System.IFormatProvider"></xref> interface. (This parameter is not used; specify `null`.)
    return:
      type: System.Decimal
      description: The return value for this member is not used.
  overload: System.DateTime.System#IConvertible#ToDecimal*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: In all cases.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.System#IConvertible#ToDouble(System.IFormatProvider)
  commentId: M:System.DateTime.System#IConvertible#ToDouble(System.IFormatProvider)
  id: System#IConvertible#ToDouble(System.IFormatProvider)
  isEii: true
  parent: System.DateTime
  langs:
  - csharp
  name: IConvertible.ToDouble(IFormatProvider)
  nameWithType: DateTime.IConvertible.ToDouble(IFormatProvider)
  fullName: DateTime.IConvertible.ToDouble(IFormatProvider)
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: This conversion is not supported. Attempting to use this method throws an <xref href="System.InvalidCastException"></xref>.
  syntax:
    content: double IConvertible.ToDouble (IFormatProvider provider);
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that implements the <xref href="System.IFormatProvider"></xref> interface. (This parameter is not used; specify `null`.)
    return:
      type: System.Double
      description: The return value for this member is not used.
  overload: System.DateTime.System#IConvertible#ToDouble*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: In all cases.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.System#IConvertible#ToInt16(System.IFormatProvider)
  commentId: M:System.DateTime.System#IConvertible#ToInt16(System.IFormatProvider)
  id: System#IConvertible#ToInt16(System.IFormatProvider)
  isEii: true
  parent: System.DateTime
  langs:
  - csharp
  name: IConvertible.ToInt16(IFormatProvider)
  nameWithType: DateTime.IConvertible.ToInt16(IFormatProvider)
  fullName: DateTime.IConvertible.ToInt16(IFormatProvider)
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: This conversion is not supported. Attempting to use this method throws an <xref href="System.InvalidCastException"></xref>.
  syntax:
    content: short IConvertible.ToInt16 (IFormatProvider provider);
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that implements the <xref href="System.IFormatProvider"></xref> interface. (This parameter is not used; specify `null`.)
    return:
      type: System.Int16
      description: The return value for this member is not used.
  overload: System.DateTime.System#IConvertible#ToInt16*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: In all cases.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.System#IConvertible#ToInt32(System.IFormatProvider)
  commentId: M:System.DateTime.System#IConvertible#ToInt32(System.IFormatProvider)
  id: System#IConvertible#ToInt32(System.IFormatProvider)
  isEii: true
  parent: System.DateTime
  langs:
  - csharp
  name: IConvertible.ToInt32(IFormatProvider)
  nameWithType: DateTime.IConvertible.ToInt32(IFormatProvider)
  fullName: DateTime.IConvertible.ToInt32(IFormatProvider)
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: This conversion is not supported. Attempting to use this method throws an <xref href="System.InvalidCastException"></xref>.
  syntax:
    content: int IConvertible.ToInt32 (IFormatProvider provider);
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that implements the <xref href="System.IFormatProvider"></xref> interface. (This parameter is not used; specify `null`.)
    return:
      type: System.Int32
      description: The return value for this member is not used.
  overload: System.DateTime.System#IConvertible#ToInt32*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: In all cases.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.System#IConvertible#ToInt64(System.IFormatProvider)
  commentId: M:System.DateTime.System#IConvertible#ToInt64(System.IFormatProvider)
  id: System#IConvertible#ToInt64(System.IFormatProvider)
  isEii: true
  parent: System.DateTime
  langs:
  - csharp
  name: IConvertible.ToInt64(IFormatProvider)
  nameWithType: DateTime.IConvertible.ToInt64(IFormatProvider)
  fullName: DateTime.IConvertible.ToInt64(IFormatProvider)
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: This conversion is not supported. Attempting to use this method throws an <xref href="System.InvalidCastException"></xref>.
  syntax:
    content: long IConvertible.ToInt64 (IFormatProvider provider);
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that implements the <xref href="System.IFormatProvider"></xref> interface. (This parameter is not used; specify `null`.)
    return:
      type: System.Int64
      description: The return value for this member is not used.
  overload: System.DateTime.System#IConvertible#ToInt64*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: In all cases.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.System#IConvertible#ToSByte(System.IFormatProvider)
  commentId: M:System.DateTime.System#IConvertible#ToSByte(System.IFormatProvider)
  id: System#IConvertible#ToSByte(System.IFormatProvider)
  isEii: true
  parent: System.DateTime
  langs:
  - csharp
  name: IConvertible.ToSByte(IFormatProvider)
  nameWithType: DateTime.IConvertible.ToSByte(IFormatProvider)
  fullName: DateTime.IConvertible.ToSByte(IFormatProvider)
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: This conversion is not supported. Attempting to use this method throws an <xref href="System.InvalidCastException"></xref>.
  syntax:
    content: sbyte IConvertible.ToSByte (IFormatProvider provider);
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that implements the <xref href="System.IFormatProvider"></xref> interface. (This parameter is not used; specify `null`.)
    return:
      type: System.SByte
      description: The return value for this member is not used.
  overload: System.DateTime.System#IConvertible#ToSByte*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: In all cases.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.System#IConvertible#ToSingle(System.IFormatProvider)
  commentId: M:System.DateTime.System#IConvertible#ToSingle(System.IFormatProvider)
  id: System#IConvertible#ToSingle(System.IFormatProvider)
  isEii: true
  parent: System.DateTime
  langs:
  - csharp
  name: IConvertible.ToSingle(IFormatProvider)
  nameWithType: DateTime.IConvertible.ToSingle(IFormatProvider)
  fullName: DateTime.IConvertible.ToSingle(IFormatProvider)
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: This conversion is not supported. Attempting to use this method throws an <xref href="System.InvalidCastException"></xref>.
  syntax:
    content: float IConvertible.ToSingle (IFormatProvider provider);
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that implements the <xref href="System.IFormatProvider"></xref> interface. (This parameter is not used; specify `null`.)
    return:
      type: System.Single
      description: The return value for this member is not used.
  overload: System.DateTime.System#IConvertible#ToSingle*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: In all cases.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.System#IConvertible#ToType(System.Type,System.IFormatProvider)
  commentId: M:System.DateTime.System#IConvertible#ToType(System.Type,System.IFormatProvider)
  id: System#IConvertible#ToType(System.Type,System.IFormatProvider)
  isEii: true
  parent: System.DateTime
  langs:
  - csharp
  name: IConvertible.ToType(Type, IFormatProvider)
  nameWithType: DateTime.IConvertible.ToType(Type, IFormatProvider)
  fullName: DateTime.IConvertible.ToType(Type, IFormatProvider)
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Converts the current <xref href="System.DateTime"></xref> object to an object of a specified type.
  syntax:
    content: object IConvertible.ToType (Type type, IFormatProvider provider);
    parameters:
    - id: type
      type: System.Type
      description: The desired type.
    - id: provider
      type: System.IFormatProvider
      description: An object that implements the <xref href="System.IFormatProvider"></xref> interface. (This parameter is not used; specify `null`.)
    return:
      type: System.Object
      description: An object of the type specified by the <code>type</code> parameter, with a value equivalent to the current <xref href="System.DateTime"></xref> object.
  overload: System.DateTime.System#IConvertible#ToType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>type</code> is `null`.
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: This conversion is not supported for the <xref href="System.DateTime"></xref> type.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.System#IConvertible#ToUInt16(System.IFormatProvider)
  commentId: M:System.DateTime.System#IConvertible#ToUInt16(System.IFormatProvider)
  id: System#IConvertible#ToUInt16(System.IFormatProvider)
  isEii: true
  parent: System.DateTime
  langs:
  - csharp
  name: IConvertible.ToUInt16(IFormatProvider)
  nameWithType: DateTime.IConvertible.ToUInt16(IFormatProvider)
  fullName: DateTime.IConvertible.ToUInt16(IFormatProvider)
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: This conversion is not supported. Attempting to use this method throws an <xref href="System.InvalidCastException"></xref>.
  syntax:
    content: ushort IConvertible.ToUInt16 (IFormatProvider provider);
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that implements the <xref href="System.IFormatProvider"></xref> interface. (This parameter is not used; specify `null`.)
    return:
      type: System.UInt16
      description: The return value for this member is not used.
  overload: System.DateTime.System#IConvertible#ToUInt16*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: In all cases.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.System#IConvertible#ToUInt32(System.IFormatProvider)
  commentId: M:System.DateTime.System#IConvertible#ToUInt32(System.IFormatProvider)
  id: System#IConvertible#ToUInt32(System.IFormatProvider)
  isEii: true
  parent: System.DateTime
  langs:
  - csharp
  name: IConvertible.ToUInt32(IFormatProvider)
  nameWithType: DateTime.IConvertible.ToUInt32(IFormatProvider)
  fullName: DateTime.IConvertible.ToUInt32(IFormatProvider)
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: This conversion is not supported. Attempting to use this method throws an <xref href="System.InvalidCastException"></xref>.
  syntax:
    content: uint IConvertible.ToUInt32 (IFormatProvider provider);
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that implements the <xref href="System.IFormatProvider"></xref> interface. (This parameter is not used; specify `null`.)
    return:
      type: System.UInt32
      description: The return value for this member is not used.
  overload: System.DateTime.System#IConvertible#ToUInt32*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: In all cases.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.System#IConvertible#ToUInt64(System.IFormatProvider)
  commentId: M:System.DateTime.System#IConvertible#ToUInt64(System.IFormatProvider)
  id: System#IConvertible#ToUInt64(System.IFormatProvider)
  isEii: true
  parent: System.DateTime
  langs:
  - csharp
  name: IConvertible.ToUInt64(IFormatProvider)
  nameWithType: DateTime.IConvertible.ToUInt64(IFormatProvider)
  fullName: DateTime.IConvertible.ToUInt64(IFormatProvider)
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: This conversion is not supported. Attempting to use this method throws an <xref href="System.InvalidCastException"></xref>.
  syntax:
    content: ulong IConvertible.ToUInt64 (IFormatProvider provider);
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that implements the <xref href="System.IFormatProvider"></xref> interface. (This parameter is not used; specify `null`.)
    return:
      type: System.UInt64
      description: The return value for this member is not used.
  overload: System.DateTime.System#IConvertible#ToUInt64*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: In all cases.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DateTime.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.DateTime.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.DateTime
  langs:
  - csharp
  name: ISerializable.GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: DateTime.ISerializable.GetObjectData(SerializationInfo, StreamingContext)
  fullName: DateTime.ISerializable.GetObjectData(SerializationInfo, StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Populates a <xref href="System.Runtime.Serialization.SerializationInfo"></xref> object with the data needed to serialize the current <xref href="System.DateTime"></xref> object.
  remarks: This method populates the `info` parameter with the <xref:System.DateTime.Ticks%2A> and <xref:System.DateTime.Kind%2A> property values.
  syntax:
    content: >-
      [System.Security.SecurityCritical]

      void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: The object to populate with data.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: The destination for this serialization. (This parameter is not used; specify `null`.)
  overload: System.DateTime.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>info</code> is `null`.
  attributes:
  - type: System.Security.SecurityCriticalAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
references:
- uid: System.ValueType
  parent: System
  isExternal: false
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.ArgumentOutOfRangeException
  parent: System
  isExternal: false
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.FormatException
  parent: System
  isExternal: false
  name: FormatException
  nameWithType: FormatException
  fullName: System.FormatException
- uid: System.OverflowException
  parent: System
  isExternal: false
  name: OverflowException
  nameWithType: OverflowException
  fullName: System.OverflowException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  nameWithType: NotSupportedException
  fullName: System.NotSupportedException
- uid: System.InvalidCastException
  parent: System
  isExternal: false
  name: InvalidCastException
  nameWithType: InvalidCastException
  fullName: System.InvalidCastException
- uid: System.DateTime.#ctor(System.Int64)
  parent: System.DateTime
  isExternal: false
  name: DateTime(Int64)
  nameWithType: DateTime.DateTime(Int64)
  fullName: DateTime.DateTime(Int64)
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.DateTime.#ctor(System.Int64,System.DateTimeKind)
  parent: System.DateTime
  isExternal: false
  name: DateTime(Int64, DateTimeKind)
  nameWithType: DateTime.DateTime(Int64, DateTimeKind)
  fullName: DateTime.DateTime(Int64, DateTimeKind)
- uid: System.DateTimeKind
  parent: System
  isExternal: false
  name: DateTimeKind
  nameWithType: DateTimeKind
  fullName: System.DateTimeKind
- uid: System.DateTime.#ctor(System.Int32,System.Int32,System.Int32)
  parent: System.DateTime
  isExternal: false
  name: DateTime(Int32, Int32, Int32)
  nameWithType: DateTime.DateTime(Int32, Int32, Int32)
  fullName: DateTime.DateTime(Int32, Int32, Int32)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)
  parent: System.DateTime
  isExternal: false
  name: DateTime(Int32, Int32, Int32, Calendar)
  nameWithType: DateTime.DateTime(Int32, Int32, Int32, Calendar)
  fullName: DateTime.DateTime(Int32, Int32, Int32, Calendar)
- uid: System.Globalization.Calendar
  parent: System.Globalization
  isExternal: false
  name: Calendar
  nameWithType: Calendar
  fullName: System.Globalization.Calendar
- uid: System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.DateTime
  isExternal: false
  name: DateTime(Int32, Int32, Int32, Int32, Int32, Int32)
  nameWithType: DateTime.DateTime(Int32, Int32, Int32, Int32, Int32, Int32)
  fullName: DateTime.DateTime(Int32, Int32, Int32, Int32, Int32, Int32)
- uid: System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)
  parent: System.DateTime
  isExternal: false
  name: DateTime(Int32, Int32, Int32, Int32, Int32, Int32, DateTimeKind)
  nameWithType: DateTime.DateTime(Int32, Int32, Int32, Int32, Int32, Int32, DateTimeKind)
  fullName: DateTime.DateTime(Int32, Int32, Int32, Int32, Int32, Int32, DateTimeKind)
- uid: System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)
  parent: System.DateTime
  isExternal: false
  name: DateTime(Int32, Int32, Int32, Int32, Int32, Int32, Calendar)
  nameWithType: DateTime.DateTime(Int32, Int32, Int32, Int32, Int32, Int32, Calendar)
  fullName: DateTime.DateTime(Int32, Int32, Int32, Int32, Int32, Int32, Calendar)
- uid: System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.DateTime
  isExternal: false
  name: DateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32)
  nameWithType: DateTime.DateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32)
  fullName: DateTime.DateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32)
- uid: System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)
  parent: System.DateTime
  isExternal: false
  name: DateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, DateTimeKind)
  nameWithType: DateTime.DateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, DateTimeKind)
  fullName: DateTime.DateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, DateTimeKind)
- uid: System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)
  parent: System.DateTime
  isExternal: false
  name: DateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Calendar)
  nameWithType: DateTime.DateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Calendar)
  fullName: DateTime.DateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Calendar)
- uid: System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar,System.DateTimeKind)
  parent: System.DateTime
  isExternal: false
  name: DateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Calendar, DateTimeKind)
  nameWithType: DateTime.DateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Calendar, DateTimeKind)
  fullName: DateTime.DateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Calendar, DateTimeKind)
- uid: System.DateTime.Add(System.TimeSpan)
  parent: System.DateTime
  isExternal: false
  name: Add(TimeSpan)
  nameWithType: DateTime.Add(TimeSpan)
  fullName: DateTime.Add(TimeSpan)
- uid: System.DateTime
  parent: System
  isExternal: false
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.DateTime.AddDays(System.Double)
  parent: System.DateTime
  isExternal: false
  name: AddDays(Double)
  nameWithType: DateTime.AddDays(Double)
  fullName: DateTime.AddDays(Double)
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.DateTime.AddHours(System.Double)
  parent: System.DateTime
  isExternal: false
  name: AddHours(Double)
  nameWithType: DateTime.AddHours(Double)
  fullName: DateTime.AddHours(Double)
- uid: System.DateTime.AddMilliseconds(System.Double)
  parent: System.DateTime
  isExternal: false
  name: AddMilliseconds(Double)
  nameWithType: DateTime.AddMilliseconds(Double)
  fullName: DateTime.AddMilliseconds(Double)
- uid: System.DateTime.AddMinutes(System.Double)
  parent: System.DateTime
  isExternal: false
  name: AddMinutes(Double)
  nameWithType: DateTime.AddMinutes(Double)
  fullName: DateTime.AddMinutes(Double)
- uid: System.DateTime.AddMonths(System.Int32)
  parent: System.DateTime
  isExternal: false
  name: AddMonths(Int32)
  nameWithType: DateTime.AddMonths(Int32)
  fullName: DateTime.AddMonths(Int32)
- uid: System.DateTime.AddSeconds(System.Double)
  parent: System.DateTime
  isExternal: false
  name: AddSeconds(Double)
  nameWithType: DateTime.AddSeconds(Double)
  fullName: DateTime.AddSeconds(Double)
- uid: System.DateTime.AddTicks(System.Int64)
  parent: System.DateTime
  isExternal: false
  name: AddTicks(Int64)
  nameWithType: DateTime.AddTicks(Int64)
  fullName: DateTime.AddTicks(Int64)
- uid: System.DateTime.AddYears(System.Int32)
  parent: System.DateTime
  isExternal: false
  name: AddYears(Int32)
  nameWithType: DateTime.AddYears(Int32)
  fullName: DateTime.AddYears(Int32)
- uid: System.DateTime.Compare(System.DateTime,System.DateTime)
  parent: System.DateTime
  isExternal: false
  name: Compare(DateTime, DateTime)
  nameWithType: DateTime.Compare(DateTime, DateTime)
  fullName: DateTime.Compare(DateTime, DateTime)
- uid: System.DateTime.CompareTo(System.DateTime)
  parent: System.DateTime
  isExternal: false
  name: CompareTo(DateTime)
  nameWithType: DateTime.CompareTo(DateTime)
  fullName: DateTime.CompareTo(DateTime)
- uid: System.DateTime.CompareTo(System.Object)
  parent: System.DateTime
  isExternal: false
  name: CompareTo(Object)
  nameWithType: DateTime.CompareTo(Object)
  fullName: DateTime.CompareTo(Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.DateTime.Date
  parent: System.DateTime
  isExternal: false
  name: Date
  nameWithType: DateTime.Date
  fullName: DateTime.Date
- uid: System.DateTime.Day
  parent: System.DateTime
  isExternal: false
  name: Day
  nameWithType: DateTime.Day
  fullName: DateTime.Day
- uid: System.DateTime.DayOfWeek
  parent: System.DateTime
  isExternal: false
  name: DayOfWeek
  nameWithType: DateTime.DayOfWeek
  fullName: DateTime.DayOfWeek
- uid: System.DayOfWeek
  parent: System
  isExternal: false
  name: DayOfWeek
  nameWithType: DayOfWeek
  fullName: System.DayOfWeek
- uid: System.DateTime.DayOfYear
  parent: System.DateTime
  isExternal: false
  name: DayOfYear
  nameWithType: DateTime.DayOfYear
  fullName: DateTime.DayOfYear
- uid: System.DateTime.DaysInMonth(System.Int32,System.Int32)
  parent: System.DateTime
  isExternal: false
  name: DaysInMonth(Int32, Int32)
  nameWithType: DateTime.DaysInMonth(Int32, Int32)
  fullName: DateTime.DaysInMonth(Int32, Int32)
- uid: System.DateTime.Equals(System.DateTime)
  parent: System.DateTime
  isExternal: false
  name: Equals(DateTime)
  nameWithType: DateTime.Equals(DateTime)
  fullName: DateTime.Equals(DateTime)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.DateTime.Equals(System.Object)
  parent: System.DateTime
  isExternal: false
  name: Equals(Object)
  nameWithType: DateTime.Equals(Object)
  fullName: DateTime.Equals(Object)
- uid: System.DateTime.Equals(System.DateTime,System.DateTime)
  parent: System.DateTime
  isExternal: false
  name: Equals(DateTime, DateTime)
  nameWithType: DateTime.Equals(DateTime, DateTime)
  fullName: DateTime.Equals(DateTime, DateTime)
- uid: System.DateTime.FromBinary(System.Int64)
  parent: System.DateTime
  isExternal: false
  name: FromBinary(Int64)
  nameWithType: DateTime.FromBinary(Int64)
  fullName: DateTime.FromBinary(Int64)
- uid: System.DateTime.FromFileTime(System.Int64)
  parent: System.DateTime
  isExternal: false
  name: FromFileTime(Int64)
  nameWithType: DateTime.FromFileTime(Int64)
  fullName: DateTime.FromFileTime(Int64)
- uid: System.DateTime.FromFileTimeUtc(System.Int64)
  parent: System.DateTime
  isExternal: false
  name: FromFileTimeUtc(Int64)
  nameWithType: DateTime.FromFileTimeUtc(Int64)
  fullName: DateTime.FromFileTimeUtc(Int64)
- uid: System.DateTime.FromOADate(System.Double)
  parent: System.DateTime
  isExternal: false
  name: FromOADate(Double)
  nameWithType: DateTime.FromOADate(Double)
  fullName: DateTime.FromOADate(Double)
- uid: System.DateTime.GetDateTimeFormats
  parent: System.DateTime
  isExternal: false
  name: GetDateTimeFormats()
  nameWithType: DateTime.GetDateTimeFormats()
  fullName: DateTime.GetDateTimeFormats()
- uid: System.String
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String[]
  parent: System
  isExternal: false
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.DateTime.GetDateTimeFormats(System.Char)
  parent: System.DateTime
  isExternal: false
  name: GetDateTimeFormats(Char)
  nameWithType: DateTime.GetDateTimeFormats(Char)
  fullName: DateTime.GetDateTimeFormats(Char)
- uid: System.Char
  parent: System
  isExternal: false
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.DateTime.GetDateTimeFormats(System.IFormatProvider)
  parent: System.DateTime
  isExternal: false
  name: GetDateTimeFormats(IFormatProvider)
  nameWithType: DateTime.GetDateTimeFormats(IFormatProvider)
  fullName: DateTime.GetDateTimeFormats(IFormatProvider)
- uid: System.IFormatProvider
  parent: System
  isExternal: false
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.DateTime.GetDateTimeFormats(System.Char,System.IFormatProvider)
  parent: System.DateTime
  isExternal: false
  name: GetDateTimeFormats(Char, IFormatProvider)
  nameWithType: DateTime.GetDateTimeFormats(Char, IFormatProvider)
  fullName: DateTime.GetDateTimeFormats(Char, IFormatProvider)
- uid: System.DateTime.GetHashCode
  parent: System.DateTime
  isExternal: false
  name: GetHashCode()
  nameWithType: DateTime.GetHashCode()
  fullName: DateTime.GetHashCode()
- uid: System.DateTime.GetTypeCode
  parent: System.DateTime
  isExternal: false
  name: GetTypeCode()
  nameWithType: DateTime.GetTypeCode()
  fullName: DateTime.GetTypeCode()
- uid: System.TypeCode
  parent: System
  isExternal: false
  name: TypeCode
  nameWithType: TypeCode
  fullName: System.TypeCode
- uid: System.DateTime.Hour
  parent: System.DateTime
  isExternal: false
  name: Hour
  nameWithType: DateTime.Hour
  fullName: DateTime.Hour
- uid: System.DateTime.IsDaylightSavingTime
  parent: System.DateTime
  isExternal: false
  name: IsDaylightSavingTime()
  nameWithType: DateTime.IsDaylightSavingTime()
  fullName: DateTime.IsDaylightSavingTime()
- uid: System.DateTime.IsLeapYear(System.Int32)
  parent: System.DateTime
  isExternal: false
  name: IsLeapYear(Int32)
  nameWithType: DateTime.IsLeapYear(Int32)
  fullName: DateTime.IsLeapYear(Int32)
- uid: System.DateTime.Kind
  parent: System.DateTime
  isExternal: false
  name: Kind
  nameWithType: DateTime.Kind
  fullName: DateTime.Kind
- uid: System.DateTime.MaxValue
  parent: System.DateTime
  isExternal: false
  name: MaxValue
  nameWithType: DateTime.MaxValue
  fullName: DateTime.MaxValue
- uid: System.DateTime.Millisecond
  parent: System.DateTime
  isExternal: false
  name: Millisecond
  nameWithType: DateTime.Millisecond
  fullName: DateTime.Millisecond
- uid: System.DateTime.Minute
  parent: System.DateTime
  isExternal: false
  name: Minute
  nameWithType: DateTime.Minute
  fullName: DateTime.Minute
- uid: System.DateTime.MinValue
  parent: System.DateTime
  isExternal: false
  name: MinValue
  nameWithType: DateTime.MinValue
  fullName: DateTime.MinValue
- uid: System.DateTime.Month
  parent: System.DateTime
  isExternal: false
  name: Month
  nameWithType: DateTime.Month
  fullName: DateTime.Month
- uid: System.DateTime.Now
  parent: System.DateTime
  isExternal: false
  name: Now
  nameWithType: DateTime.Now
  fullName: DateTime.Now
- uid: System.DateTime.op_Addition(System.DateTime,System.TimeSpan)
  parent: System.DateTime
  isExternal: false
  name: op_Addition(DateTime, TimeSpan)
  nameWithType: DateTime.op_Addition(DateTime, TimeSpan)
  fullName: DateTime.op_Addition(DateTime, TimeSpan)
- uid: System.DateTime.op_Equality(System.DateTime,System.DateTime)
  parent: System.DateTime
  isExternal: false
  name: op_Equality(DateTime, DateTime)
  nameWithType: DateTime.op_Equality(DateTime, DateTime)
  fullName: DateTime.op_Equality(DateTime, DateTime)
- uid: System.DateTime.op_GreaterThan(System.DateTime,System.DateTime)
  parent: System.DateTime
  isExternal: false
  name: op_GreaterThan(DateTime, DateTime)
  nameWithType: DateTime.op_GreaterThan(DateTime, DateTime)
  fullName: DateTime.op_GreaterThan(DateTime, DateTime)
- uid: System.DateTime.op_GreaterThanOrEqual(System.DateTime,System.DateTime)
  parent: System.DateTime
  isExternal: false
  name: op_GreaterThanOrEqual(DateTime, DateTime)
  nameWithType: DateTime.op_GreaterThanOrEqual(DateTime, DateTime)
  fullName: DateTime.op_GreaterThanOrEqual(DateTime, DateTime)
- uid: System.DateTime.op_Inequality(System.DateTime,System.DateTime)
  parent: System.DateTime
  isExternal: false
  name: op_Inequality(DateTime, DateTime)
  nameWithType: DateTime.op_Inequality(DateTime, DateTime)
  fullName: DateTime.op_Inequality(DateTime, DateTime)
- uid: System.DateTime.op_LessThan(System.DateTime,System.DateTime)
  parent: System.DateTime
  isExternal: false
  name: op_LessThan(DateTime, DateTime)
  nameWithType: DateTime.op_LessThan(DateTime, DateTime)
  fullName: DateTime.op_LessThan(DateTime, DateTime)
- uid: System.DateTime.op_LessThanOrEqual(System.DateTime,System.DateTime)
  parent: System.DateTime
  isExternal: false
  name: op_LessThanOrEqual(DateTime, DateTime)
  nameWithType: DateTime.op_LessThanOrEqual(DateTime, DateTime)
  fullName: DateTime.op_LessThanOrEqual(DateTime, DateTime)
- uid: System.DateTime.op_Subtraction(System.DateTime,System.DateTime)
  parent: System.DateTime
  isExternal: false
  name: op_Subtraction(DateTime, DateTime)
  nameWithType: DateTime.op_Subtraction(DateTime, DateTime)
  fullName: DateTime.op_Subtraction(DateTime, DateTime)
- uid: System.DateTime.op_Subtraction(System.DateTime,System.TimeSpan)
  parent: System.DateTime
  isExternal: false
  name: op_Subtraction(DateTime, TimeSpan)
  nameWithType: DateTime.op_Subtraction(DateTime, TimeSpan)
  fullName: DateTime.op_Subtraction(DateTime, TimeSpan)
- uid: System.DateTime.Parse(System.String)
  parent: System.DateTime
  isExternal: false
  name: Parse(String)
  nameWithType: DateTime.Parse(String)
  fullName: DateTime.Parse(String)
- uid: System.DateTime.Parse(System.String,System.IFormatProvider)
  parent: System.DateTime
  isExternal: false
  name: Parse(String, IFormatProvider)
  nameWithType: DateTime.Parse(String, IFormatProvider)
  fullName: DateTime.Parse(String, IFormatProvider)
- uid: System.DateTime.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)
  parent: System.DateTime
  isExternal: false
  name: Parse(String, IFormatProvider, DateTimeStyles)
  nameWithType: DateTime.Parse(String, IFormatProvider, DateTimeStyles)
  fullName: DateTime.Parse(String, IFormatProvider, DateTimeStyles)
- uid: System.Globalization.DateTimeStyles
  parent: System.Globalization
  isExternal: false
  name: DateTimeStyles
  nameWithType: DateTimeStyles
  fullName: System.Globalization.DateTimeStyles
- uid: System.DateTime.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)
  parent: System.DateTime
  isExternal: false
  name: ParseExact(String, String[], IFormatProvider, DateTimeStyles)
  nameWithType: DateTime.ParseExact(String, String[], IFormatProvider, DateTimeStyles)
  fullName: DateTime.ParseExact(String, String[], IFormatProvider, DateTimeStyles)
- uid: System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)
  parent: System.DateTime
  isExternal: false
  name: ParseExact(String, String, IFormatProvider, DateTimeStyles)
  nameWithType: DateTime.ParseExact(String, String, IFormatProvider, DateTimeStyles)
  fullName: DateTime.ParseExact(String, String, IFormatProvider, DateTimeStyles)
- uid: System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider)
  parent: System.DateTime
  isExternal: false
  name: ParseExact(String, String, IFormatProvider)
  nameWithType: DateTime.ParseExact(String, String, IFormatProvider)
  fullName: DateTime.ParseExact(String, String, IFormatProvider)
- uid: System.DateTime.Second
  parent: System.DateTime
  isExternal: false
  name: Second
  nameWithType: DateTime.Second
  fullName: DateTime.Second
- uid: System.DateTime.SpecifyKind(System.DateTime,System.DateTimeKind)
  parent: System.DateTime
  isExternal: false
  name: SpecifyKind(DateTime, DateTimeKind)
  nameWithType: DateTime.SpecifyKind(DateTime, DateTimeKind)
  fullName: DateTime.SpecifyKind(DateTime, DateTimeKind)
- uid: System.DateTime.Subtract(System.DateTime)
  parent: System.DateTime
  isExternal: false
  name: Subtract(DateTime)
  nameWithType: DateTime.Subtract(DateTime)
  fullName: DateTime.Subtract(DateTime)
- uid: System.DateTime.Subtract(System.TimeSpan)
  parent: System.DateTime
  isExternal: false
  name: Subtract(TimeSpan)
  nameWithType: DateTime.Subtract(TimeSpan)
  fullName: DateTime.Subtract(TimeSpan)
- uid: System.DateTime.Ticks
  parent: System.DateTime
  isExternal: false
  name: Ticks
  nameWithType: DateTime.Ticks
  fullName: DateTime.Ticks
- uid: System.DateTime.TimeOfDay
  parent: System.DateTime
  isExternal: false
  name: TimeOfDay
  nameWithType: DateTime.TimeOfDay
  fullName: DateTime.TimeOfDay
- uid: System.DateTime.ToBinary
  parent: System.DateTime
  isExternal: false
  name: ToBinary()
  nameWithType: DateTime.ToBinary()
  fullName: DateTime.ToBinary()
- uid: System.DateTime.Today
  parent: System.DateTime
  isExternal: false
  name: Today
  nameWithType: DateTime.Today
  fullName: DateTime.Today
- uid: System.DateTime.ToFileTime
  parent: System.DateTime
  isExternal: false
  name: ToFileTime()
  nameWithType: DateTime.ToFileTime()
  fullName: DateTime.ToFileTime()
- uid: System.DateTime.ToFileTimeUtc
  parent: System.DateTime
  isExternal: false
  name: ToFileTimeUtc()
  nameWithType: DateTime.ToFileTimeUtc()
  fullName: DateTime.ToFileTimeUtc()
- uid: System.DateTime.ToLocalTime
  parent: System.DateTime
  isExternal: false
  name: ToLocalTime()
  nameWithType: DateTime.ToLocalTime()
  fullName: DateTime.ToLocalTime()
- uid: System.DateTime.ToLongDateString
  parent: System.DateTime
  isExternal: false
  name: ToLongDateString()
  nameWithType: DateTime.ToLongDateString()
  fullName: DateTime.ToLongDateString()
- uid: System.DateTime.ToLongTimeString
  parent: System.DateTime
  isExternal: false
  name: ToLongTimeString()
  nameWithType: DateTime.ToLongTimeString()
  fullName: DateTime.ToLongTimeString()
- uid: System.DateTime.ToOADate
  parent: System.DateTime
  isExternal: false
  name: ToOADate()
  nameWithType: DateTime.ToOADate()
  fullName: DateTime.ToOADate()
- uid: System.DateTime.ToShortDateString
  parent: System.DateTime
  isExternal: false
  name: ToShortDateString()
  nameWithType: DateTime.ToShortDateString()
  fullName: DateTime.ToShortDateString()
- uid: System.DateTime.ToShortTimeString
  parent: System.DateTime
  isExternal: false
  name: ToShortTimeString()
  nameWithType: DateTime.ToShortTimeString()
  fullName: DateTime.ToShortTimeString()
- uid: System.DateTime.ToString(System.String,System.IFormatProvider)
  parent: System.DateTime
  isExternal: false
  name: ToString(String, IFormatProvider)
  nameWithType: DateTime.ToString(String, IFormatProvider)
  fullName: DateTime.ToString(String, IFormatProvider)
- uid: System.DateTime.ToString(System.String)
  parent: System.DateTime
  isExternal: false
  name: ToString(String)
  nameWithType: DateTime.ToString(String)
  fullName: DateTime.ToString(String)
- uid: System.DateTime.ToString(System.IFormatProvider)
  parent: System.DateTime
  isExternal: false
  name: ToString(IFormatProvider)
  nameWithType: DateTime.ToString(IFormatProvider)
  fullName: DateTime.ToString(IFormatProvider)
- uid: System.DateTime.ToString
  parent: System.DateTime
  isExternal: false
  name: ToString()
  nameWithType: DateTime.ToString()
  fullName: DateTime.ToString()
- uid: System.DateTime.ToUniversalTime
  parent: System.DateTime
  isExternal: false
  name: ToUniversalTime()
  nameWithType: DateTime.ToUniversalTime()
  fullName: DateTime.ToUniversalTime()
- uid: System.DateTime.TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)
  parent: System.DateTime
  isExternal: false
  name: TryParse(String, IFormatProvider, DateTimeStyles, DateTime)
  nameWithType: DateTime.TryParse(String, IFormatProvider, DateTimeStyles, DateTime)
  fullName: DateTime.TryParse(String, IFormatProvider, DateTimeStyles, DateTime)
- uid: System.DateTime.TryParse(System.String,System.DateTime@)
  parent: System.DateTime
  isExternal: false
  name: TryParse(String, DateTime)
  nameWithType: DateTime.TryParse(String, DateTime)
  fullName: DateTime.TryParse(String, DateTime)
- uid: System.DateTime.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)
  parent: System.DateTime
  isExternal: false
  name: TryParseExact(String, String, IFormatProvider, DateTimeStyles, DateTime)
  nameWithType: DateTime.TryParseExact(String, String, IFormatProvider, DateTimeStyles, DateTime)
  fullName: DateTime.TryParseExact(String, String, IFormatProvider, DateTimeStyles, DateTime)
- uid: System.DateTime.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)
  parent: System.DateTime
  isExternal: false
  name: TryParseExact(String, String[], IFormatProvider, DateTimeStyles, DateTime)
  nameWithType: DateTime.TryParseExact(String, String[], IFormatProvider, DateTimeStyles, DateTime)
  fullName: DateTime.TryParseExact(String, String[], IFormatProvider, DateTimeStyles, DateTime)
- uid: System.DateTime.UtcNow
  parent: System.DateTime
  isExternal: false
  name: UtcNow
  nameWithType: DateTime.UtcNow
  fullName: DateTime.UtcNow
- uid: System.DateTime.Year
  parent: System.DateTime
  isExternal: false
  name: Year
  nameWithType: DateTime.Year
  fullName: DateTime.Year
- uid: System.DateTime.System#IComparable#CompareTo(System.Object)
  parent: System.DateTime
  isExternal: false
  name: IComparable.CompareTo(Object)
  nameWithType: DateTime.IComparable.CompareTo(Object)
  fullName: DateTime.IComparable.CompareTo(Object)
- uid: System.DateTime.System#IConvertible#GetTypeCode
  parent: System.DateTime
  isExternal: false
  name: IConvertible.GetTypeCode()
  nameWithType: DateTime.IConvertible.GetTypeCode()
  fullName: DateTime.IConvertible.GetTypeCode()
- uid: System.DateTime.System#IConvertible#ToBoolean(System.IFormatProvider)
  parent: System.DateTime
  isExternal: false
  name: IConvertible.ToBoolean(IFormatProvider)
  nameWithType: DateTime.IConvertible.ToBoolean(IFormatProvider)
  fullName: DateTime.IConvertible.ToBoolean(IFormatProvider)
- uid: System.DateTime.System#IConvertible#ToByte(System.IFormatProvider)
  parent: System.DateTime
  isExternal: false
  name: IConvertible.ToByte(IFormatProvider)
  nameWithType: DateTime.IConvertible.ToByte(IFormatProvider)
  fullName: DateTime.IConvertible.ToByte(IFormatProvider)
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.DateTime.System#IConvertible#ToChar(System.IFormatProvider)
  parent: System.DateTime
  isExternal: false
  name: IConvertible.ToChar(IFormatProvider)
  nameWithType: DateTime.IConvertible.ToChar(IFormatProvider)
  fullName: DateTime.IConvertible.ToChar(IFormatProvider)
- uid: System.DateTime.System#IConvertible#ToDateTime(System.IFormatProvider)
  parent: System.DateTime
  isExternal: false
  name: IConvertible.ToDateTime(IFormatProvider)
  nameWithType: DateTime.IConvertible.ToDateTime(IFormatProvider)
  fullName: DateTime.IConvertible.ToDateTime(IFormatProvider)
- uid: System.DateTime.System#IConvertible#ToDecimal(System.IFormatProvider)
  parent: System.DateTime
  isExternal: false
  name: IConvertible.ToDecimal(IFormatProvider)
  nameWithType: DateTime.IConvertible.ToDecimal(IFormatProvider)
  fullName: DateTime.IConvertible.ToDecimal(IFormatProvider)
- uid: System.Decimal
  parent: System
  isExternal: false
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.DateTime.System#IConvertible#ToDouble(System.IFormatProvider)
  parent: System.DateTime
  isExternal: false
  name: IConvertible.ToDouble(IFormatProvider)
  nameWithType: DateTime.IConvertible.ToDouble(IFormatProvider)
  fullName: DateTime.IConvertible.ToDouble(IFormatProvider)
- uid: System.DateTime.System#IConvertible#ToInt16(System.IFormatProvider)
  parent: System.DateTime
  isExternal: false
  name: IConvertible.ToInt16(IFormatProvider)
  nameWithType: DateTime.IConvertible.ToInt16(IFormatProvider)
  fullName: DateTime.IConvertible.ToInt16(IFormatProvider)
- uid: System.Int16
  parent: System
  isExternal: false
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.DateTime.System#IConvertible#ToInt32(System.IFormatProvider)
  parent: System.DateTime
  isExternal: false
  name: IConvertible.ToInt32(IFormatProvider)
  nameWithType: DateTime.IConvertible.ToInt32(IFormatProvider)
  fullName: DateTime.IConvertible.ToInt32(IFormatProvider)
- uid: System.DateTime.System#IConvertible#ToInt64(System.IFormatProvider)
  parent: System.DateTime
  isExternal: false
  name: IConvertible.ToInt64(IFormatProvider)
  nameWithType: DateTime.IConvertible.ToInt64(IFormatProvider)
  fullName: DateTime.IConvertible.ToInt64(IFormatProvider)
- uid: System.DateTime.System#IConvertible#ToSByte(System.IFormatProvider)
  parent: System.DateTime
  isExternal: false
  name: IConvertible.ToSByte(IFormatProvider)
  nameWithType: DateTime.IConvertible.ToSByte(IFormatProvider)
  fullName: DateTime.IConvertible.ToSByte(IFormatProvider)
- uid: System.SByte
  parent: System
  isExternal: false
  name: SByte
  nameWithType: SByte
  fullName: System.SByte
- uid: System.DateTime.System#IConvertible#ToSingle(System.IFormatProvider)
  parent: System.DateTime
  isExternal: false
  name: IConvertible.ToSingle(IFormatProvider)
  nameWithType: DateTime.IConvertible.ToSingle(IFormatProvider)
  fullName: DateTime.IConvertible.ToSingle(IFormatProvider)
- uid: System.Single
  parent: System
  isExternal: false
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.DateTime.System#IConvertible#ToType(System.Type,System.IFormatProvider)
  parent: System.DateTime
  isExternal: false
  name: IConvertible.ToType(Type, IFormatProvider)
  nameWithType: DateTime.IConvertible.ToType(Type, IFormatProvider)
  fullName: DateTime.IConvertible.ToType(Type, IFormatProvider)
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.DateTime.System#IConvertible#ToUInt16(System.IFormatProvider)
  parent: System.DateTime
  isExternal: false
  name: IConvertible.ToUInt16(IFormatProvider)
  nameWithType: DateTime.IConvertible.ToUInt16(IFormatProvider)
  fullName: DateTime.IConvertible.ToUInt16(IFormatProvider)
- uid: System.UInt16
  parent: System
  isExternal: false
  name: UInt16
  nameWithType: UInt16
  fullName: System.UInt16
- uid: System.DateTime.System#IConvertible#ToUInt32(System.IFormatProvider)
  parent: System.DateTime
  isExternal: false
  name: IConvertible.ToUInt32(IFormatProvider)
  nameWithType: DateTime.IConvertible.ToUInt32(IFormatProvider)
  fullName: DateTime.IConvertible.ToUInt32(IFormatProvider)
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.DateTime.System#IConvertible#ToUInt64(System.IFormatProvider)
  parent: System.DateTime
  isExternal: false
  name: IConvertible.ToUInt64(IFormatProvider)
  nameWithType: DateTime.IConvertible.ToUInt64(IFormatProvider)
  fullName: DateTime.IConvertible.ToUInt64(IFormatProvider)
- uid: System.UInt64
  parent: System
  isExternal: false
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: System.DateTime.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.DateTime
  isExternal: false
  name: ISerializable.GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: DateTime.ISerializable.GetObjectData(SerializationInfo, StreamingContext)
  fullName: DateTime.ISerializable.GetObjectData(SerializationInfo, StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: false
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.DateTime.CompareTo*
  parent: System.DateTime
  isExternal: false
  name: CompareTo
  nameWithType: DateTime.CompareTo
  fullName: DateTime.CompareTo
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.GetDateTimeFormats*
  parent: System.DateTime
  isExternal: false
  name: GetDateTimeFormats
  nameWithType: DateTime.GetDateTimeFormats
  fullName: DateTime.GetDateTimeFormats
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.Parse*
  parent: System.DateTime
  isExternal: false
  name: Parse
  nameWithType: DateTime.Parse
  fullName: DateTime.Parse
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.#ctor*
  parent: System.DateTime
  isExternal: false
  name: DateTime
  nameWithType: DateTime.DateTime
  fullName: DateTime.DateTime
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.Add*
  parent: System.DateTime
  isExternal: false
  name: Add
  nameWithType: DateTime.Add
  fullName: DateTime.Add
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.AddDays*
  parent: System.DateTime
  isExternal: false
  name: AddDays
  nameWithType: DateTime.AddDays
  fullName: DateTime.AddDays
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.AddHours*
  parent: System.DateTime
  isExternal: false
  name: AddHours
  nameWithType: DateTime.AddHours
  fullName: DateTime.AddHours
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.AddMilliseconds*
  parent: System.DateTime
  isExternal: false
  name: AddMilliseconds
  nameWithType: DateTime.AddMilliseconds
  fullName: DateTime.AddMilliseconds
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.AddMinutes*
  parent: System.DateTime
  isExternal: false
  name: AddMinutes
  nameWithType: DateTime.AddMinutes
  fullName: DateTime.AddMinutes
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.AddMonths*
  parent: System.DateTime
  isExternal: false
  name: AddMonths
  nameWithType: DateTime.AddMonths
  fullName: DateTime.AddMonths
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.AddSeconds*
  parent: System.DateTime
  isExternal: false
  name: AddSeconds
  nameWithType: DateTime.AddSeconds
  fullName: DateTime.AddSeconds
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.AddTicks*
  parent: System.DateTime
  isExternal: false
  name: AddTicks
  nameWithType: DateTime.AddTicks
  fullName: DateTime.AddTicks
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.AddYears*
  parent: System.DateTime
  isExternal: false
  name: AddYears
  nameWithType: DateTime.AddYears
  fullName: DateTime.AddYears
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.Compare*
  parent: System.DateTime
  isExternal: false
  name: Compare
  nameWithType: DateTime.Compare
  fullName: DateTime.Compare
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.Date*
  parent: System.DateTime
  isExternal: false
  name: Date
  nameWithType: DateTime.Date
  fullName: DateTime.Date
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.Day*
  parent: System.DateTime
  isExternal: false
  name: Day
  nameWithType: DateTime.Day
  fullName: DateTime.Day
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.DayOfWeek*
  parent: System.DateTime
  isExternal: false
  name: DayOfWeek
  nameWithType: DateTime.DayOfWeek
  fullName: DateTime.DayOfWeek
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.DayOfYear*
  parent: System.DateTime
  isExternal: false
  name: DayOfYear
  nameWithType: DateTime.DayOfYear
  fullName: DateTime.DayOfYear
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.DaysInMonth*
  parent: System.DateTime
  isExternal: false
  name: DaysInMonth
  nameWithType: DateTime.DaysInMonth
  fullName: DateTime.DaysInMonth
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.Equals*
  parent: System.DateTime
  isExternal: false
  name: Equals
  nameWithType: DateTime.Equals
  fullName: DateTime.Equals
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.FromBinary*
  parent: System.DateTime
  isExternal: false
  name: FromBinary
  nameWithType: DateTime.FromBinary
  fullName: DateTime.FromBinary
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.FromFileTime*
  parent: System.DateTime
  isExternal: false
  name: FromFileTime
  nameWithType: DateTime.FromFileTime
  fullName: DateTime.FromFileTime
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.FromFileTimeUtc*
  parent: System.DateTime
  isExternal: false
  name: FromFileTimeUtc
  nameWithType: DateTime.FromFileTimeUtc
  fullName: DateTime.FromFileTimeUtc
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.FromOADate*
  parent: System.DateTime
  isExternal: false
  name: FromOADate
  nameWithType: DateTime.FromOADate
  fullName: DateTime.FromOADate
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.GetHashCode*
  parent: System.DateTime
  isExternal: false
  name: GetHashCode
  nameWithType: DateTime.GetHashCode
  fullName: DateTime.GetHashCode
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.GetTypeCode*
  parent: System.DateTime
  isExternal: false
  name: GetTypeCode
  nameWithType: DateTime.GetTypeCode
  fullName: DateTime.GetTypeCode
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.Hour*
  parent: System.DateTime
  isExternal: false
  name: Hour
  nameWithType: DateTime.Hour
  fullName: DateTime.Hour
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.IsDaylightSavingTime*
  parent: System.DateTime
  isExternal: false
  name: IsDaylightSavingTime
  nameWithType: DateTime.IsDaylightSavingTime
  fullName: DateTime.IsDaylightSavingTime
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.IsLeapYear*
  parent: System.DateTime
  isExternal: false
  name: IsLeapYear
  nameWithType: DateTime.IsLeapYear
  fullName: DateTime.IsLeapYear
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.Kind*
  parent: System.DateTime
  isExternal: false
  name: Kind
  nameWithType: DateTime.Kind
  fullName: DateTime.Kind
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.Millisecond*
  parent: System.DateTime
  isExternal: false
  name: Millisecond
  nameWithType: DateTime.Millisecond
  fullName: DateTime.Millisecond
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.Minute*
  parent: System.DateTime
  isExternal: false
  name: Minute
  nameWithType: DateTime.Minute
  fullName: DateTime.Minute
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.Month*
  parent: System.DateTime
  isExternal: false
  name: Month
  nameWithType: DateTime.Month
  fullName: DateTime.Month
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.Now*
  parent: System.DateTime
  isExternal: false
  name: Now
  nameWithType: DateTime.Now
  fullName: DateTime.Now
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.op_Addition*
  parent: System.DateTime
  isExternal: false
  name: op_Addition
  nameWithType: DateTime.op_Addition
  fullName: DateTime.op_Addition
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.op_Equality*
  parent: System.DateTime
  isExternal: false
  name: op_Equality
  nameWithType: DateTime.op_Equality
  fullName: DateTime.op_Equality
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.op_GreaterThan*
  parent: System.DateTime
  isExternal: false
  name: op_GreaterThan
  nameWithType: DateTime.op_GreaterThan
  fullName: DateTime.op_GreaterThan
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.op_GreaterThanOrEqual*
  parent: System.DateTime
  isExternal: false
  name: op_GreaterThanOrEqual
  nameWithType: DateTime.op_GreaterThanOrEqual
  fullName: DateTime.op_GreaterThanOrEqual
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.op_Inequality*
  parent: System.DateTime
  isExternal: false
  name: op_Inequality
  nameWithType: DateTime.op_Inequality
  fullName: DateTime.op_Inequality
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.op_LessThan*
  parent: System.DateTime
  isExternal: false
  name: op_LessThan
  nameWithType: DateTime.op_LessThan
  fullName: DateTime.op_LessThan
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.op_LessThanOrEqual*
  parent: System.DateTime
  isExternal: false
  name: op_LessThanOrEqual
  nameWithType: DateTime.op_LessThanOrEqual
  fullName: DateTime.op_LessThanOrEqual
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.op_Subtraction*
  parent: System.DateTime
  isExternal: false
  name: op_Subtraction
  nameWithType: DateTime.op_Subtraction
  fullName: DateTime.op_Subtraction
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.ParseExact*
  parent: System.DateTime
  isExternal: false
  name: ParseExact
  nameWithType: DateTime.ParseExact
  fullName: DateTime.ParseExact
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.Second*
  parent: System.DateTime
  isExternal: false
  name: Second
  nameWithType: DateTime.Second
  fullName: DateTime.Second
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.SpecifyKind*
  parent: System.DateTime
  isExternal: false
  name: SpecifyKind
  nameWithType: DateTime.SpecifyKind
  fullName: DateTime.SpecifyKind
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.Subtract*
  parent: System.DateTime
  isExternal: false
  name: Subtract
  nameWithType: DateTime.Subtract
  fullName: DateTime.Subtract
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.Ticks*
  parent: System.DateTime
  isExternal: false
  name: Ticks
  nameWithType: DateTime.Ticks
  fullName: DateTime.Ticks
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.TimeOfDay*
  parent: System.DateTime
  isExternal: false
  name: TimeOfDay
  nameWithType: DateTime.TimeOfDay
  fullName: DateTime.TimeOfDay
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.ToBinary*
  parent: System.DateTime
  isExternal: false
  name: ToBinary
  nameWithType: DateTime.ToBinary
  fullName: DateTime.ToBinary
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.Today*
  parent: System.DateTime
  isExternal: false
  name: Today
  nameWithType: DateTime.Today
  fullName: DateTime.Today
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.ToFileTime*
  parent: System.DateTime
  isExternal: false
  name: ToFileTime
  nameWithType: DateTime.ToFileTime
  fullName: DateTime.ToFileTime
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.ToFileTimeUtc*
  parent: System.DateTime
  isExternal: false
  name: ToFileTimeUtc
  nameWithType: DateTime.ToFileTimeUtc
  fullName: DateTime.ToFileTimeUtc
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.ToLocalTime*
  parent: System.DateTime
  isExternal: false
  name: ToLocalTime
  nameWithType: DateTime.ToLocalTime
  fullName: DateTime.ToLocalTime
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.ToLongDateString*
  parent: System.DateTime
  isExternal: false
  name: ToLongDateString
  nameWithType: DateTime.ToLongDateString
  fullName: DateTime.ToLongDateString
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.ToLongTimeString*
  parent: System.DateTime
  isExternal: false
  name: ToLongTimeString
  nameWithType: DateTime.ToLongTimeString
  fullName: DateTime.ToLongTimeString
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.ToOADate*
  parent: System.DateTime
  isExternal: false
  name: ToOADate
  nameWithType: DateTime.ToOADate
  fullName: DateTime.ToOADate
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.ToShortDateString*
  parent: System.DateTime
  isExternal: false
  name: ToShortDateString
  nameWithType: DateTime.ToShortDateString
  fullName: DateTime.ToShortDateString
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.ToShortTimeString*
  parent: System.DateTime
  isExternal: false
  name: ToShortTimeString
  nameWithType: DateTime.ToShortTimeString
  fullName: DateTime.ToShortTimeString
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.ToString*
  parent: System.DateTime
  isExternal: false
  name: ToString
  nameWithType: DateTime.ToString
  fullName: DateTime.ToString
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.ToUniversalTime*
  parent: System.DateTime
  isExternal: false
  name: ToUniversalTime
  nameWithType: DateTime.ToUniversalTime
  fullName: DateTime.ToUniversalTime
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.TryParse*
  parent: System.DateTime
  isExternal: false
  name: TryParse
  nameWithType: DateTime.TryParse
  fullName: DateTime.TryParse
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.TryParseExact*
  parent: System.DateTime
  isExternal: false
  name: TryParseExact
  nameWithType: DateTime.TryParseExact
  fullName: DateTime.TryParseExact
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.UtcNow*
  parent: System.DateTime
  isExternal: false
  name: UtcNow
  nameWithType: DateTime.UtcNow
  fullName: DateTime.UtcNow
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.Year*
  parent: System.DateTime
  isExternal: false
  name: Year
  nameWithType: DateTime.Year
  fullName: DateTime.Year
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.System#IComparable#CompareTo*
  parent: System.DateTime
  isExternal: false
  name: System.IComparable.CompareTo
  nameWithType: DateTime.System.IComparable.CompareTo
  fullName: DateTime.System.IComparable.CompareTo
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.System#IConvertible#GetTypeCode*
  parent: System.DateTime
  isExternal: false
  name: System.IConvertible.GetTypeCode
  nameWithType: DateTime.System.IConvertible.GetTypeCode
  fullName: DateTime.System.IConvertible.GetTypeCode
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.System#IConvertible#ToBoolean*
  parent: System.DateTime
  isExternal: false
  name: System.IConvertible.ToBoolean
  nameWithType: DateTime.System.IConvertible.ToBoolean
  fullName: DateTime.System.IConvertible.ToBoolean
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.System#IConvertible#ToByte*
  parent: System.DateTime
  isExternal: false
  name: System.IConvertible.ToByte
  nameWithType: DateTime.System.IConvertible.ToByte
  fullName: DateTime.System.IConvertible.ToByte
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.System#IConvertible#ToChar*
  parent: System.DateTime
  isExternal: false
  name: System.IConvertible.ToChar
  nameWithType: DateTime.System.IConvertible.ToChar
  fullName: DateTime.System.IConvertible.ToChar
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.System#IConvertible#ToDateTime*
  parent: System.DateTime
  isExternal: false
  name: System.IConvertible.ToDateTime
  nameWithType: DateTime.System.IConvertible.ToDateTime
  fullName: DateTime.System.IConvertible.ToDateTime
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.System#IConvertible#ToDecimal*
  parent: System.DateTime
  isExternal: false
  name: System.IConvertible.ToDecimal
  nameWithType: DateTime.System.IConvertible.ToDecimal
  fullName: DateTime.System.IConvertible.ToDecimal
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.System#IConvertible#ToDouble*
  parent: System.DateTime
  isExternal: false
  name: System.IConvertible.ToDouble
  nameWithType: DateTime.System.IConvertible.ToDouble
  fullName: DateTime.System.IConvertible.ToDouble
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.System#IConvertible#ToInt16*
  parent: System.DateTime
  isExternal: false
  name: System.IConvertible.ToInt16
  nameWithType: DateTime.System.IConvertible.ToInt16
  fullName: DateTime.System.IConvertible.ToInt16
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.System#IConvertible#ToInt32*
  parent: System.DateTime
  isExternal: false
  name: System.IConvertible.ToInt32
  nameWithType: DateTime.System.IConvertible.ToInt32
  fullName: DateTime.System.IConvertible.ToInt32
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.System#IConvertible#ToInt64*
  parent: System.DateTime
  isExternal: false
  name: System.IConvertible.ToInt64
  nameWithType: DateTime.System.IConvertible.ToInt64
  fullName: DateTime.System.IConvertible.ToInt64
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.System#IConvertible#ToSByte*
  parent: System.DateTime
  isExternal: false
  name: System.IConvertible.ToSByte
  nameWithType: DateTime.System.IConvertible.ToSByte
  fullName: DateTime.System.IConvertible.ToSByte
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.System#IConvertible#ToSingle*
  parent: System.DateTime
  isExternal: false
  name: System.IConvertible.ToSingle
  nameWithType: DateTime.System.IConvertible.ToSingle
  fullName: DateTime.System.IConvertible.ToSingle
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.System#IConvertible#ToType*
  parent: System.DateTime
  isExternal: false
  name: System.IConvertible.ToType
  nameWithType: DateTime.System.IConvertible.ToType
  fullName: DateTime.System.IConvertible.ToType
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.System#IConvertible#ToUInt16*
  parent: System.DateTime
  isExternal: false
  name: System.IConvertible.ToUInt16
  nameWithType: DateTime.System.IConvertible.ToUInt16
  fullName: DateTime.System.IConvertible.ToUInt16
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.System#IConvertible#ToUInt32*
  parent: System.DateTime
  isExternal: false
  name: System.IConvertible.ToUInt32
  nameWithType: DateTime.System.IConvertible.ToUInt32
  fullName: DateTime.System.IConvertible.ToUInt32
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.System#IConvertible#ToUInt64*
  parent: System.DateTime
  isExternal: false
  name: System.IConvertible.ToUInt64
  nameWithType: DateTime.System.IConvertible.ToUInt64
  fullName: DateTime.System.IConvertible.ToUInt64
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.DateTime.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.DateTime
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: DateTime.System.Runtime.Serialization.ISerializable.GetObjectData
  fullName: DateTime.System.Runtime.Serialization.ISerializable.GetObjectData
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml
- uid: System.IComparable
  parent: System
  isExternal: false
  name: IComparable
  nameWithType: IComparable
  fullName: System.IComparable
- uid: System.IComparable`1
  name: IComparable<T>
  nameWithType: IComparable<T>
  fullName: System.IComparable<T>
- uid: System.IComparable{System.DateTime}
  parent: System
  isExternal: false
  name: IComparable<DateTime>
  nameWithType: IComparable<DateTime>
  fullName: System.IComparable<System.DateTime>
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IConvertible
  parent: System
  isExternal: false
  name: IConvertible
  nameWithType: IConvertible
  fullName: System.IConvertible
- uid: System.IEquatable`1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
- uid: System.IEquatable{System.DateTime}
  parent: System
  isExternal: false
  name: IEquatable<DateTime>
  nameWithType: IEquatable<DateTime>
  fullName: System.IEquatable<System.DateTime>
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IFormattable
  parent: System
  isExternal: false
  name: IFormattable
  nameWithType: IFormattable
  fullName: System.IFormattable
- uid: System.Runtime.Serialization.ISerializable
  parent: System.Runtime.Serialization
  isExternal: false
  name: ISerializable
  nameWithType: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
