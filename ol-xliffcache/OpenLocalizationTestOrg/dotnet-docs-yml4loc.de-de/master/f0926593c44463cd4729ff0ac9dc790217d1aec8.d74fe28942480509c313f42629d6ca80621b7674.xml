{"nodes":[{"content":"Specifies how a <xref href=\"System.Windows.Controls.RichTextBox\"></xref> should handle a custom text element.","nodes":[{"pos":[0,109],"content":"Specifies how a <ph id=\"ph1\">&lt;xref href=\"System.Windows.Controls.RichTextBox\"&gt;&lt;/xref&gt;</ph> should handle a custom text element.","source":"Specifies how a <xref href=\"System.Windows.Controls.RichTextBox\"></xref> should handle a custom text element."}],"pos":[757,867],"yaml":true},{"content":"When you create a custom text element, you can use the <xref:System.Windows.Documents.TextElementEditingBehaviorAttribute> attribute to specify that the element should be treated as a single, unbreakable entity.  When the <xref:System.Windows.Documents.TextElementEditingBehaviorAttribute.IsMergeable%2A> and <xref:System.Windows.Documents.TextElementEditingBehaviorAttribute.IsTypographicOnly%2A> properties are set to `false`, a <xref:System.Windows.Controls.RichTextBox> preserves the boundaries and content of the element when the user edits the <xref:System.Windows.Controls.RichTextBox>.  In general, the custom element behaves similar to a <xref:System.Windows.Documents.Hyperlink>.  The following behavior occurs when you use this class and set both of its properties to `false`:  \n  \n-   When a user copies and pastes a part of the content in a custom element, the formatting of the copied text is not preserved.  \n  \n-   When a user types before or after the content of the custom element, the new content does not acquire the custom element's formatting information.  \n  \n-   The user cannot insert a line break in the custom element.  \n  \n When you create a custom element, use the <xref:System.Windows.Documents.TextRange.Save%28System.IO.Stream%2CSystem.String%2CSystem.Boolean%29?displayProperty=fullName> method and set `preserveTextElements` to `true` to preserve the custom element and property values when you serialize it to the disk or clipboard.  \n  \n <xref:System.Windows.Documents.TextElementEditingBehaviorAttribute> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).","nodes":[{"pos":[0,787],"content":"When you create a custom text element, you can use the <xref:System.Windows.Documents.TextElementEditingBehaviorAttribute> attribute to specify that the element should be treated as a single, unbreakable entity.  When the <xref:System.Windows.Documents.TextElementEditingBehaviorAttribute.IsMergeable%2A> and <xref:System.Windows.Documents.TextElementEditingBehaviorAttribute.IsTypographicOnly%2A> properties are set to `false`, a <xref:System.Windows.Controls.RichTextBox> preserves the boundaries and content of the element when the user edits the <xref:System.Windows.Controls.RichTextBox>.  In general, the custom element behaves similar to a <xref:System.Windows.Documents.Hyperlink>.  The following behavior occurs when you use this class and set both of its properties to `false`:","nodes":[{"content":"When you create a custom text element, you can use the <ph id=\"ph1\">&lt;xref:System.Windows.Documents.TextElementEditingBehaviorAttribute&gt;</ph> attribute to specify that the element should be treated as a single, unbreakable entity.","pos":[0,211],"source":"When you create a custom text element, you can use the <xref:System.Windows.Documents.TextElementEditingBehaviorAttribute> attribute to specify that the element should be treated as a single, unbreakable entity."},{"content":"When the <ph id=\"ph1\">&lt;xref:System.Windows.Documents.TextElementEditingBehaviorAttribute.IsMergeable%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Documents.TextElementEditingBehaviorAttribute.IsTypographicOnly%2A&gt;</ph> properties are set to <ph id=\"ph3\">`false`</ph>, a <ph id=\"ph4\">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph> preserves the boundaries and content of the element when the user edits the <ph id=\"ph5\">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph>.","pos":[213,593],"source":"  When the <xref:System.Windows.Documents.TextElementEditingBehaviorAttribute.IsMergeable%2A> and <xref:System.Windows.Documents.TextElementEditingBehaviorAttribute.IsTypographicOnly%2A> properties are set to `false`, a <xref:System.Windows.Controls.RichTextBox> preserves the boundaries and content of the element when the user edits the <xref:System.Windows.Controls.RichTextBox>."},{"content":"In general, the custom element behaves similar to a <ph id=\"ph1\">&lt;xref:System.Windows.Documents.Hyperlink&gt;</ph>.","pos":[595,689],"source":"  In general, the custom element behaves similar to a <xref:System.Windows.Documents.Hyperlink>."},{"content":"The following behavior occurs when you use this class and set both of its properties to <ph id=\"ph1\">`false`</ph>:","pos":[691,787],"source":"  The following behavior occurs when you use this class and set both of its properties to `false`:"}]},{"pos":[797,921],"content":"When a user copies and pastes a part of the content in a custom element, the formatting of the copied text is not preserved.","nodes":[{"content":"When a user copies and pastes a part of the content in a custom element, the formatting of the copied text is not preserved.","pos":[0,124]}]},{"pos":[931,1077],"content":"When a user types before or after the content of the custom element, the new content does not acquire the custom element's formatting information.","nodes":[{"content":"When a user types before or after the content of the custom element, the new content does not acquire the custom element's formatting information.","pos":[0,146]}]},{"pos":[1087,1145],"content":"The user cannot insert a line break in the custom element.","nodes":[{"content":"The user cannot insert a line break in the custom element.","pos":[0,58]}]},{"pos":[1152,1467],"content":"When you create a custom element, use the <ph id=\"ph1\">&lt;xref:System.Windows.Documents.TextRange.Save%28System.IO.Stream%2CSystem.String%2CSystem.Boolean%29?displayProperty=fullName&gt;</ph> method and set <ph id=\"ph2\">`preserveTextElements`</ph> to <ph id=\"ph3\">`true`</ph> to preserve the custom element and property values when you serialize it to the disk or clipboard.","source":"When you create a custom element, use the <xref:System.Windows.Documents.TextRange.Save%28System.IO.Stream%2CSystem.String%2CSystem.Boolean%29?displayProperty=fullName> method and set `preserveTextElements` to `true` to preserve the custom element and property values when you serialize it to the disk or clipboard."},{"pos":[1474,1709],"content":"<xref:System.Windows.Documents.TextElementEditingBehaviorAttribute> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Documents.TextElementEditingBehaviorAttribute&gt;</ph> is introduced in the .NET Framework version 3.5.","pos":[0,116],"source":"<xref:System.Windows.Documents.TextElementEditingBehaviorAttribute> is introduced in the .NET Framework version 3.5."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.","pos":[118,235],"source":"  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md)."}]}],"pos":[878,2600],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Documents.TextElementEditingBehaviorAttribute\"></xref> class.","nodes":[{"pos":[0,122],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Documents.TextElementEditingBehaviorAttribute\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Windows.Documents.TextElementEditingBehaviorAttribute\"></xref> class."}],"pos":[7653,7776],"yaml":true},{"content":"<xref:System.Windows.Documents.TextElementEditingBehaviorAttribute> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).","nodes":[{"pos":[0,235],"content":"<xref:System.Windows.Documents.TextElementEditingBehaviorAttribute> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Documents.TextElementEditingBehaviorAttribute&gt;</ph> is introduced in the .NET Framework version 3.5.","pos":[0,116],"source":"<xref:System.Windows.Documents.TextElementEditingBehaviorAttribute> is introduced in the .NET Framework version 3.5."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.","pos":[118,235],"source":"  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md)."}]}],"pos":[7787,8023],"yaml":true,"extradata":"MT"},{"content":"Gets or sets a value indicating whether the <xref href=\"System.Windows.Controls.RichTextBox\"></xref> can merge two adjacent text elements.","nodes":[{"pos":[0,138],"content":"Gets or sets a value indicating whether the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Controls.RichTextBox\"&gt;&lt;/xref&gt;</ph> can merge two adjacent text elements.","source":"Gets or sets a value indicating whether the <xref href=\"System.Windows.Controls.RichTextBox\"></xref> can merge two adjacent text elements."}],"pos":[9291,9430],"yaml":true},{"content":"When <xref:System.Windows.Documents.TextElementEditingBehaviorAttribute.IsMergeable%2A> is `true`, the decision to combine adjacent text elements that have identical property values is left up to the <xref:System.Windows.Controls.RichTextBox>.  When <xref:System.Windows.Documents.TextElementEditingBehaviorAttribute.IsMergeable%2A> is `false`, a <xref:System.Windows.Controls.RichTextBox> does not combine two adjacent text elements.  \n  \n <xref:System.Windows.Documents.TextElementEditingBehaviorAttribute> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).","nodes":[{"pos":[0,434],"content":"When <xref:System.Windows.Documents.TextElementEditingBehaviorAttribute.IsMergeable%2A> is `true`, the decision to combine adjacent text elements that have identical property values is left up to the <xref:System.Windows.Controls.RichTextBox>.  When <xref:System.Windows.Documents.TextElementEditingBehaviorAttribute.IsMergeable%2A> is `false`, a <xref:System.Windows.Controls.RichTextBox> does not combine two adjacent text elements.","nodes":[{"content":"When <ph id=\"ph1\">&lt;xref:System.Windows.Documents.TextElementEditingBehaviorAttribute.IsMergeable%2A&gt;</ph> is <ph id=\"ph2\">`true`</ph>, the decision to combine adjacent text elements that have identical property values is left up to the <ph id=\"ph3\">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph>.","pos":[0,243],"source":"When <xref:System.Windows.Documents.TextElementEditingBehaviorAttribute.IsMergeable%2A> is `true`, the decision to combine adjacent text elements that have identical property values is left up to the <xref:System.Windows.Controls.RichTextBox>."},{"content":"When <ph id=\"ph1\">&lt;xref:System.Windows.Documents.TextElementEditingBehaviorAttribute.IsMergeable%2A&gt;</ph> is <ph id=\"ph2\">`false`</ph>, a <ph id=\"ph3\">&lt;xref:System.Windows.Controls.RichTextBox&gt;</ph> does not combine two adjacent text elements.","pos":[245,434],"source":"  When <xref:System.Windows.Documents.TextElementEditingBehaviorAttribute.IsMergeable%2A> is `false`, a <xref:System.Windows.Controls.RichTextBox> does not combine two adjacent text elements."}]},{"pos":[441,676],"content":"<xref:System.Windows.Documents.TextElementEditingBehaviorAttribute> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Documents.TextElementEditingBehaviorAttribute&gt;</ph> is introduced in the .NET Framework version 3.5.","pos":[0,116],"source":"<xref:System.Windows.Documents.TextElementEditingBehaviorAttribute> is introduced in the .NET Framework version 3.5."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.","pos":[118,235],"source":"  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md)."}]}],"pos":[9441,10122],"yaml":true,"extradata":"MT"},{"content":"`true` if a <xref href=\"System.Windows.Controls.RichTextBox\"></xref> is free to merge adjacent custom text elements that have identical property values; otherwise, `false`.","nodes":[{"pos":[0,172],"content":"<ph id=\"ph1\">`true`</ph> if a <ph id=\"ph2\">&lt;xref href=\"System.Windows.Controls.RichTextBox\"&gt;&lt;/xref&gt;</ph> is free to merge adjacent custom text elements that have identical property values; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if a <xref href=\"System.Windows.Controls.RichTextBox\"></xref> is free to merge adjacent custom text elements that have identical property values; otherwise, `false`."}],"pos":[10241,10416],"yaml":true},{"content":"Gets or sets a value indicating whether the text element provides formatting on a character basis, or if the formatting applies to the entire element.","nodes":[{"pos":[0,150],"content":"Gets or sets a value indicating whether the text element provides formatting on a character basis, or if the formatting applies to the entire element.","nodes":[{"content":"Gets or sets a value indicating whether the text element provides formatting on a character basis, or if the formatting applies to the entire element.","pos":[0,150]}]}],"pos":[11637,11788],"yaml":true},{"content":"When <xref:System.Windows.Documents.TextElementEditingBehaviorAttribute.IsTypographicOnly%2A> is `true` and the user copies and pastes part of the content of a custom text element, the formatting is preserved.  When <xref:System.Windows.Documents.TextElementEditingBehaviorAttribute.IsTypographicOnly%2A> is `false`, the formatting is preserved only if the user copies and pastes all of the content of the custom text element.  \n  \n <xref:System.Windows.Documents.TextElementEditingBehaviorAttribute> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).","nodes":[{"pos":[0,426],"content":"When <xref:System.Windows.Documents.TextElementEditingBehaviorAttribute.IsTypographicOnly%2A> is `true` and the user copies and pastes part of the content of a custom text element, the formatting is preserved.  When <xref:System.Windows.Documents.TextElementEditingBehaviorAttribute.IsTypographicOnly%2A> is `false`, the formatting is preserved only if the user copies and pastes all of the content of the custom text element.","nodes":[{"content":"When <ph id=\"ph1\">&lt;xref:System.Windows.Documents.TextElementEditingBehaviorAttribute.IsTypographicOnly%2A&gt;</ph> is <ph id=\"ph2\">`true`</ph> and the user copies and pastes part of the content of a custom text element, the formatting is preserved.","pos":[0,209],"source":"When <xref:System.Windows.Documents.TextElementEditingBehaviorAttribute.IsTypographicOnly%2A> is `true` and the user copies and pastes part of the content of a custom text element, the formatting is preserved."},{"content":"When <ph id=\"ph1\">&lt;xref:System.Windows.Documents.TextElementEditingBehaviorAttribute.IsTypographicOnly%2A&gt;</ph> is <ph id=\"ph2\">`false`</ph>, the formatting is preserved only if the user copies and pastes all of the content of the custom text element.","pos":[211,426],"source":"  When <xref:System.Windows.Documents.TextElementEditingBehaviorAttribute.IsTypographicOnly%2A> is `false`, the formatting is preserved only if the user copies and pastes all of the content of the custom text element."}]},{"pos":[433,668],"content":"<xref:System.Windows.Documents.TextElementEditingBehaviorAttribute> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Documents.TextElementEditingBehaviorAttribute&gt;</ph> is introduced in the .NET Framework version 3.5.","pos":[0,116],"source":"<xref:System.Windows.Documents.TextElementEditingBehaviorAttribute> is introduced in the .NET Framework version 3.5."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.","pos":[118,235],"source":"  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md)."}]}],"pos":[11799,12472],"yaml":true,"extradata":"MT"},{"content":"`true` if formatting should apply to the individual characters; `false` if the formatting should apply to the entire element.","nodes":[{"pos":[0,125],"content":"<ph id=\"ph1\">`true`</ph> if formatting should apply to the individual characters; <ph id=\"ph2\">`false`</ph> if the formatting should apply to the entire element.","source":"`true` if formatting should apply to the individual characters; `false` if the formatting should apply to the entire element."}],"pos":[12597,12725],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Documents.TextElementEditingBehaviorAttribute\n  commentId: T:System.Windows.Documents.TextElementEditingBehaviorAttribute\n  id: TextElementEditingBehaviorAttribute\n  children:\n  - System.Windows.Documents.TextElementEditingBehaviorAttribute.#ctor\n  - System.Windows.Documents.TextElementEditingBehaviorAttribute.IsMergeable\n  - System.Windows.Documents.TextElementEditingBehaviorAttribute.IsTypographicOnly\n  langs:\n  - csharp\n  name: TextElementEditingBehaviorAttribute\n  nameWithType: TextElementEditingBehaviorAttribute\n  fullName: System.Windows.Documents.TextElementEditingBehaviorAttribute\n  type: Class\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  summary: Specifies how a <xref href=\"System.Windows.Controls.RichTextBox\"></xref> should handle a custom text element.\n  remarks: \"When you create a custom text element, you can use the <xref:System.Windows.Documents.TextElementEditingBehaviorAttribute> attribute to specify that the element should be treated as a single, unbreakable entity.  When the <xref:System.Windows.Documents.TextElementEditingBehaviorAttribute.IsMergeable%2A> and <xref:System.Windows.Documents.TextElementEditingBehaviorAttribute.IsTypographicOnly%2A> properties are set to `false`, a <xref:System.Windows.Controls.RichTextBox> preserves the boundaries and content of the element when the user edits the <xref:System.Windows.Controls.RichTextBox>.  In general, the custom element behaves similar to a <xref:System.Windows.Documents.Hyperlink>.  The following behavior occurs when you use this class and set both of its properties to `false`:  \\n  \\n-   When a user copies and pastes a part of the content in a custom element, the formatting of the copied text is not preserved.  \\n  \\n-   When a user types before or after the content of the custom element, the new content does not acquire the custom element's formatting information.  \\n  \\n-   The user cannot insert a line break in the custom element.  \\n  \\n When you create a custom element, use the <xref:System.Windows.Documents.TextRange.Save%28System.IO.Stream%2CSystem.String%2CSystem.Boolean%29?displayProperty=fullName> method and set `preserveTextElements` to `true` to preserve the custom element and property values when you serialize it to the disk or clipboard.  \\n  \\n <xref:System.Windows.Documents.TextElementEditingBehaviorAttribute> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Class)]\n\n      public sealed class TextElementEditingBehaviorAttribute : Attribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  implements: []\n  inheritedMembers:\n  - System.Attribute.Equals(System.Object)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetHashCode\n  - System.Attribute.IsDefaultAttribute\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.Match(System.Object)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Attribute.TypeId\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.AttributeUsageAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Documents/TextElementEditingBehaviorAttribute.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Documents.TextElementEditingBehaviorAttribute.#ctor\n  commentId: M:System.Windows.Documents.TextElementEditingBehaviorAttribute.#ctor\n  id: '#ctor'\n  parent: System.Windows.Documents.TextElementEditingBehaviorAttribute\n  langs:\n  - csharp\n  name: TextElementEditingBehaviorAttribute()\n  nameWithType: TextElementEditingBehaviorAttribute.TextElementEditingBehaviorAttribute()\n  fullName: TextElementEditingBehaviorAttribute.TextElementEditingBehaviorAttribute()\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Documents.TextElementEditingBehaviorAttribute\"></xref> class.\n  remarks: <xref:System.Windows.Documents.TextElementEditingBehaviorAttribute> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).\n  syntax:\n    content: public TextElementEditingBehaviorAttribute ();\n    parameters: []\n  overload: System.Windows.Documents.TextElementEditingBehaviorAttribute.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Documents/TextElementEditingBehaviorAttribute.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Documents.TextElementEditingBehaviorAttribute.IsMergeable\n  commentId: P:System.Windows.Documents.TextElementEditingBehaviorAttribute.IsMergeable\n  id: IsMergeable\n  parent: System.Windows.Documents.TextElementEditingBehaviorAttribute\n  langs:\n  - csharp\n  name: IsMergeable\n  nameWithType: TextElementEditingBehaviorAttribute.IsMergeable\n  fullName: TextElementEditingBehaviorAttribute.IsMergeable\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  summary: Gets or sets a value indicating whether the <xref href=\"System.Windows.Controls.RichTextBox\"></xref> can merge two adjacent text elements.\n  remarks: \"When <xref:System.Windows.Documents.TextElementEditingBehaviorAttribute.IsMergeable%2A> is `true`, the decision to combine adjacent text elements that have identical property values is left up to the <xref:System.Windows.Controls.RichTextBox>.  When <xref:System.Windows.Documents.TextElementEditingBehaviorAttribute.IsMergeable%2A> is `false`, a <xref:System.Windows.Controls.RichTextBox> does not combine two adjacent text elements.  \\n  \\n <xref:System.Windows.Documents.TextElementEditingBehaviorAttribute> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).\"\n  syntax:\n    content: public bool IsMergeable { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if a <xref href=\"System.Windows.Controls.RichTextBox\"></xref> is free to merge adjacent custom text elements that have identical property values; otherwise, `false`.'\n  overload: System.Windows.Documents.TextElementEditingBehaviorAttribute.IsMergeable*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Documents/TextElementEditingBehaviorAttribute.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Documents.TextElementEditingBehaviorAttribute.IsTypographicOnly\n  commentId: P:System.Windows.Documents.TextElementEditingBehaviorAttribute.IsTypographicOnly\n  id: IsTypographicOnly\n  parent: System.Windows.Documents.TextElementEditingBehaviorAttribute\n  langs:\n  - csharp\n  name: IsTypographicOnly\n  nameWithType: TextElementEditingBehaviorAttribute.IsTypographicOnly\n  fullName: TextElementEditingBehaviorAttribute.IsTypographicOnly\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  summary: Gets or sets a value indicating whether the text element provides formatting on a character basis, or if the formatting applies to the entire element.\n  remarks: \"When <xref:System.Windows.Documents.TextElementEditingBehaviorAttribute.IsTypographicOnly%2A> is `true` and the user copies and pastes part of the content of a custom text element, the formatting is preserved.  When <xref:System.Windows.Documents.TextElementEditingBehaviorAttribute.IsTypographicOnly%2A> is `false`, the formatting is preserved only if the user copies and pastes all of the content of the custom text element.  \\n  \\n <xref:System.Windows.Documents.TextElementEditingBehaviorAttribute> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).\"\n  syntax:\n    content: public bool IsTypographicOnly { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if formatting should apply to the individual characters; `false` if the formatting should apply to the entire element.'\n  overload: System.Windows.Documents.TextElementEditingBehaviorAttribute.IsTypographicOnly*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Documents/TextElementEditingBehaviorAttribute.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Attribute\n  parent: System\n  isExternal: false\n  name: Attribute\n  nameWithType: Attribute\n  fullName: System.Attribute\n- uid: System.Windows.Documents.TextElementEditingBehaviorAttribute.#ctor\n  parent: System.Windows.Documents.TextElementEditingBehaviorAttribute\n  isExternal: false\n  name: TextElementEditingBehaviorAttribute()\n  nameWithType: TextElementEditingBehaviorAttribute.TextElementEditingBehaviorAttribute()\n  fullName: TextElementEditingBehaviorAttribute.TextElementEditingBehaviorAttribute()\n- uid: System.Windows.Documents.TextElementEditingBehaviorAttribute.IsMergeable\n  parent: System.Windows.Documents.TextElementEditingBehaviorAttribute\n  isExternal: false\n  name: IsMergeable\n  nameWithType: TextElementEditingBehaviorAttribute.IsMergeable\n  fullName: TextElementEditingBehaviorAttribute.IsMergeable\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Documents.TextElementEditingBehaviorAttribute.IsTypographicOnly\n  parent: System.Windows.Documents.TextElementEditingBehaviorAttribute\n  isExternal: false\n  name: IsTypographicOnly\n  nameWithType: TextElementEditingBehaviorAttribute.IsTypographicOnly\n  fullName: TextElementEditingBehaviorAttribute.IsTypographicOnly\n- uid: System.Windows.Documents.TextElementEditingBehaviorAttribute.#ctor*\n  parent: System.Windows.Documents.TextElementEditingBehaviorAttribute\n  isExternal: false\n  name: TextElementEditingBehaviorAttribute\n  nameWithType: TextElementEditingBehaviorAttribute.TextElementEditingBehaviorAttribute\n  fullName: TextElementEditingBehaviorAttribute.TextElementEditingBehaviorAttribute\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Documents/TextElementEditingBehaviorAttribute.xml\n- uid: System.Windows.Documents.TextElementEditingBehaviorAttribute.IsMergeable*\n  parent: System.Windows.Documents.TextElementEditingBehaviorAttribute\n  isExternal: false\n  name: IsMergeable\n  nameWithType: TextElementEditingBehaviorAttribute.IsMergeable\n  fullName: TextElementEditingBehaviorAttribute.IsMergeable\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Documents/TextElementEditingBehaviorAttribute.xml\n- uid: System.Windows.Documents.TextElementEditingBehaviorAttribute.IsTypographicOnly*\n  parent: System.Windows.Documents.TextElementEditingBehaviorAttribute\n  isExternal: false\n  name: IsTypographicOnly\n  nameWithType: TextElementEditingBehaviorAttribute.IsTypographicOnly\n  fullName: TextElementEditingBehaviorAttribute.IsTypographicOnly\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Documents/TextElementEditingBehaviorAttribute.xml\n- uid: System.Attribute.Equals(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Attribute.Equals(Object)\n  fullName: Attribute.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Attribute.GetHashCode\n  parent: System.Attribute\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Attribute.GetHashCode()\n  fullName: Attribute.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type)\n  fullName: Attribute.GetCustomAttribute(Module, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type)\n  fullName: Attribute.GetCustomAttributes(Module, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module)\n  nameWithType: Attribute.GetCustomAttributes(Module)\n  fullName: Attribute.GetCustomAttributes(Module)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo)\n  fullName: Attribute.GetCustomAttributes(MemberInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly)\n  nameWithType: Attribute.GetCustomAttributes(Assembly)\n  fullName: Attribute.GetCustomAttributes(Assembly)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type)\n- uid: System.Attribute.IsDefaultAttribute\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefaultAttribute()\n  nameWithType: Attribute.IsDefaultAttribute()\n  fullName: Attribute.IsDefaultAttribute()\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Module, Type, Boolean)\n  fullName: Attribute.IsDefined(Module, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(MemberInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)\n  fullName: Attribute.IsDefined(Assembly, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type)\n  fullName: Attribute.IsDefined(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type)\n  nameWithType: Attribute.IsDefined(Module, Type)\n  fullName: Attribute.IsDefined(Module, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type)\n  nameWithType: Attribute.IsDefined(Assembly, Type)\n  fullName: Attribute.IsDefined(Assembly, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type)\n  fullName: Attribute.IsDefined(ParameterInfo, Type)\n- uid: System.Attribute.Match(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Match(Object)\n  nameWithType: Attribute.Match(Object)\n  fullName: Attribute.Match(Object)\n- uid: System.Attribute.TypeId\n  parent: System.Attribute\n  isExternal: false\n  name: TypeId\n  nameWithType: Attribute.TypeId\n  fullName: Attribute.TypeId\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfoCount(UInt32)\n  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)\n  fullName: Attribute._Attribute.GetTypeInfoCount(UInt32)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n"}