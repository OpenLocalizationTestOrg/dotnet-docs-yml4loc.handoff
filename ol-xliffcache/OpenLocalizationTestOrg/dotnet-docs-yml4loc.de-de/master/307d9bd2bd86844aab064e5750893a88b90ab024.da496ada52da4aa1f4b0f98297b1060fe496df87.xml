{"nodes":[{"content":"Provides an abstraction of a property on a class.","nodes":[{"pos":[0,49],"content":"Provides an abstraction of a property on a class.","nodes":[{"content":"Provides an abstraction of a property on a class.","pos":[0,49]}]}],"pos":[2753,2803],"yaml":true},{"content":"A description of a property consists of a name, its attributes, the component class that the property is associated with, and the type of the property.  \n  \n <xref:System.ComponentModel.PropertyDescriptor> provides the following properties and methods:  \n  \n-   <xref:System.ComponentModel.PropertyDescriptor.Converter%2A> contains the <xref:System.ComponentModel.TypeConverter> for this property.  \n  \n-   <xref:System.ComponentModel.PropertyDescriptor.IsLocalizable%2A> indicates whether this property should be localized.  \n  \n-   <xref:System.ComponentModel.PropertyDescriptor.GetEditor%2A> returns an editor of the specified type.  \n  \n <xref:System.ComponentModel.PropertyDescriptor> also provides the following `abstract` properties and methods:  \n  \n-   <xref:System.ComponentModel.PropertyDescriptor.ComponentType%2A> contains the type of component this property is bound to.  \n  \n-   <xref:System.ComponentModel.PropertyDescriptor.IsReadOnly%2A> indicates whether this property is read-only.  \n  \n-   <xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A> gets the type of the property.  \n  \n-   <xref:System.ComponentModel.PropertyDescriptor.CanResetValue%2A> indicates whether resetting the component changes the value of the component.  \n  \n-   <xref:System.ComponentModel.PropertyDescriptor.GetValue%2A> returns the current value of the property on a component.  \n  \n-   <xref:System.ComponentModel.PropertyDescriptor.ResetValue%2A> resets the value for this property of the component.  \n  \n-   <xref:System.ComponentModel.PropertyDescriptor.SetValue%2A> sets the value of the component to a different value.  \n  \n-   <xref:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue%2A> indicates whether the value of this property needs to be persisted.  \n  \n Typically, the `abstract` members are implemented through reflection. For more information about reflection, see the topics in [Reflection](~/docs/framework/reflection-and-codedom/reflection.md).","nodes":[{"pos":[0,151],"content":"A description of a property consists of a name, its attributes, the component class that the property is associated with, and the type of the property.","nodes":[{"content":"A description of a property consists of a name, its attributes, the component class that the property is associated with, and the type of the property.","pos":[0,151]}]},{"pos":[158,252],"content":"<xref:System.ComponentModel.PropertyDescriptor> provides the following properties and methods:","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph> provides the following properties and methods:","pos":[0,94],"source":"<xref:System.ComponentModel.PropertyDescriptor> provides the following properties and methods:"}]},{"pos":[262,397],"content":"<xref:System.ComponentModel.PropertyDescriptor.Converter%2A> contains the <xref:System.ComponentModel.TypeConverter> for this property.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ComponentModel.PropertyDescriptor.Converter%2A&gt;</ph> contains the <ph id=\"ph2\">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> for this property.","pos":[0,135],"source":"<xref:System.ComponentModel.PropertyDescriptor.Converter%2A> contains the <xref:System.ComponentModel.TypeConverter> for this property."}]},{"pos":[407,524],"content":"<xref:System.ComponentModel.PropertyDescriptor.IsLocalizable%2A> indicates whether this property should be localized.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ComponentModel.PropertyDescriptor.IsLocalizable%2A&gt;</ph> indicates whether this property should be localized.","pos":[0,117],"source":"<xref:System.ComponentModel.PropertyDescriptor.IsLocalizable%2A> indicates whether this property should be localized."}]},{"pos":[534,635],"content":"<xref:System.ComponentModel.PropertyDescriptor.GetEditor%2A> returns an editor of the specified type.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ComponentModel.PropertyDescriptor.GetEditor%2A&gt;</ph> returns an editor of the specified type.","pos":[0,101],"source":"<xref:System.ComponentModel.PropertyDescriptor.GetEditor%2A> returns an editor of the specified type."}]},{"pos":[642,752],"content":"<ph id=\"ph1\">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph> also provides the following <ph id=\"ph2\">`abstract`</ph> properties and methods:","source":"<xref:System.ComponentModel.PropertyDescriptor> also provides the following `abstract` properties and methods:"},{"pos":[762,884],"content":"<xref:System.ComponentModel.PropertyDescriptor.ComponentType%2A> contains the type of component this property is bound to.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ComponentModel.PropertyDescriptor.ComponentType%2A&gt;</ph> contains the type of component this property is bound to.","pos":[0,122],"source":"<xref:System.ComponentModel.PropertyDescriptor.ComponentType%2A> contains the type of component this property is bound to."}]},{"pos":[894,1001],"content":"<xref:System.ComponentModel.PropertyDescriptor.IsReadOnly%2A> indicates whether this property is read-only.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ComponentModel.PropertyDescriptor.IsReadOnly%2A&gt;</ph> indicates whether this property is read-only.","pos":[0,107],"source":"<xref:System.ComponentModel.PropertyDescriptor.IsReadOnly%2A> indicates whether this property is read-only."}]},{"pos":[1011,1105],"content":"<xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A> gets the type of the property.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A&gt;</ph> gets the type of the property.","pos":[0,94],"source":"<xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A> gets the type of the property."}]},{"pos":[1115,1257],"content":"<xref:System.ComponentModel.PropertyDescriptor.CanResetValue%2A> indicates whether resetting the component changes the value of the component.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ComponentModel.PropertyDescriptor.CanResetValue%2A&gt;</ph> indicates whether resetting the component changes the value of the component.","pos":[0,142],"source":"<xref:System.ComponentModel.PropertyDescriptor.CanResetValue%2A> indicates whether resetting the component changes the value of the component."}]},{"pos":[1267,1384],"content":"<xref:System.ComponentModel.PropertyDescriptor.GetValue%2A> returns the current value of the property on a component.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ComponentModel.PropertyDescriptor.GetValue%2A&gt;</ph> returns the current value of the property on a component.","pos":[0,117],"source":"<xref:System.ComponentModel.PropertyDescriptor.GetValue%2A> returns the current value of the property on a component."}]},{"pos":[1394,1508],"content":"<xref:System.ComponentModel.PropertyDescriptor.ResetValue%2A> resets the value for this property of the component.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ComponentModel.PropertyDescriptor.ResetValue%2A&gt;</ph> resets the value for this property of the component.","pos":[0,114],"source":"<xref:System.ComponentModel.PropertyDescriptor.ResetValue%2A> resets the value for this property of the component."}]},{"pos":[1518,1631],"content":"<xref:System.ComponentModel.PropertyDescriptor.SetValue%2A> sets the value of the component to a different value.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ComponentModel.PropertyDescriptor.SetValue%2A&gt;</ph> sets the value of the component to a different value.","pos":[0,113],"source":"<xref:System.ComponentModel.PropertyDescriptor.SetValue%2A> sets the value of the component to a different value."}]},{"pos":[1641,1780],"content":"<xref:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue%2A> indicates whether the value of this property needs to be persisted.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue%2A&gt;</ph> indicates whether the value of this property needs to be persisted.","pos":[0,139],"source":"<xref:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue%2A> indicates whether the value of this property needs to be persisted."}]},{"pos":[1787,1982],"content":"Typically, the `abstract` members are implemented through reflection. For more information about reflection, see the topics in [Reflection](~/docs/framework/reflection-and-codedom/reflection.md).","nodes":[{"content":"Typically, the <ph id=\"ph1\">`abstract`</ph> members are implemented through reflection.","pos":[0,69],"source":"Typically, the `abstract` members are implemented through reflection."},{"content":"For more information about reflection, see the topics in <bpt id=\"p1\">[</bpt>Reflection<ept id=\"p1\">](~/docs/framework/reflection-and-codedom/reflection.md)</ept>.","pos":[70,195],"source":" For more information about reflection, see the topics in [Reflection](~/docs/framework/reflection-and-codedom/reflection.md)."}]}],"pos":[2814,4827],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> class with the name and attributes in the specified <xref href=\"System.ComponentModel.MemberDescriptor\"></xref>.","nodes":[{"pos":[0,208],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.PropertyDescriptor\"&gt;&lt;/xref&gt;</ph> class with the name and attributes in the specified <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.MemberDescriptor\"&gt;&lt;/xref&gt;</ph>.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> class with the name and attributes in the specified <xref href=\"System.ComponentModel.MemberDescriptor\"></xref>."}],"pos":[10196,10405],"yaml":true},{"content":"A <xref href=\"System.ComponentModel.MemberDescriptor\"></xref> that contains the name of the property and its attributes.","nodes":[{"pos":[0,120],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.MemberDescriptor\"&gt;&lt;/xref&gt;</ph> that contains the name of the property and its attributes.","source":"A <xref href=\"System.ComponentModel.MemberDescriptor\"></xref> that contains the name of the property and its attributes."}],"pos":[10607,10728],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> class with the name in the specified <xref href=\"System.ComponentModel.MemberDescriptor\"></xref> and the attributes in both the <xref href=\"System.ComponentModel.MemberDescriptor\"></xref> and the <xref href=\"System.Attribute\"></xref> array.","nodes":[{"pos":[0,336],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.PropertyDescriptor\"&gt;&lt;/xref&gt;</ph> class with the name in the specified <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.MemberDescriptor\"&gt;&lt;/xref&gt;</ph> and the attributes in both the <ph id=\"ph3\">&lt;xref href=\"System.ComponentModel.MemberDescriptor\"&gt;&lt;/xref&gt;</ph> and the <ph id=\"ph4\">&lt;xref href=\"System.Attribute\"&gt;&lt;/xref&gt;</ph> array.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> class with the name in the specified <xref href=\"System.ComponentModel.MemberDescriptor\"></xref> and the attributes in both the <xref href=\"System.ComponentModel.MemberDescriptor\"></xref> and the <xref href=\"System.Attribute\"></xref> array."}],"pos":[12354,12691],"yaml":true},{"content":"This constructor appends the attributes in the <xref:System.Attribute> array to the attributes in the <xref:System.ComponentModel.MemberDescriptor>.","nodes":[{"pos":[0,148],"content":"This constructor appends the attributes in the <xref:System.Attribute> array to the attributes in the <xref:System.ComponentModel.MemberDescriptor>.","nodes":[{"content":"This constructor appends the attributes in the <ph id=\"ph1\">&lt;xref:System.Attribute&gt;</ph> array to the attributes in the <ph id=\"ph2\">&lt;xref:System.ComponentModel.MemberDescriptor&gt;</ph>.","pos":[0,148],"source":"This constructor appends the attributes in the <xref:System.Attribute> array to the attributes in the <xref:System.ComponentModel.MemberDescriptor>."}]}],"pos":[12702,12851],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.ComponentModel.MemberDescriptor\"></xref> containing the name of the member and its attributes.","nodes":[{"pos":[0,115],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.MemberDescriptor\"&gt;&lt;/xref&gt;</ph> containing the name of the member and its attributes.","source":"A <xref href=\"System.ComponentModel.MemberDescriptor\"></xref> containing the name of the member and its attributes."}],"pos":[13072,13188],"yaml":true},{"content":"An <xref href=\"System.Attribute\"></xref> array containing the attributes you want to associate with the property.","nodes":[{"pos":[0,113],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Attribute\"&gt;&lt;/xref&gt;</ph> array containing the attributes you want to associate with the property.","source":"An <xref href=\"System.Attribute\"></xref> array containing the attributes you want to associate with the property."}],"pos":[13254,13368],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> class with the specified name and attributes.","nodes":[{"pos":[0,141],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.PropertyDescriptor\"&gt;&lt;/xref&gt;</ph> class with the specified name and attributes.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> class with the specified name and attributes."}],"pos":[14889,15031],"yaml":true},{"content":"The name of the property.","nodes":[{"pos":[0,25],"content":"The name of the property.","nodes":[{"content":"The name of the property.","pos":[0,25]}]}],"pos":[15193,15219],"yaml":true},{"content":"An array of type <xref href=\"System.Attribute\"></xref> that contains the property attributes.","nodes":[{"pos":[0,93],"content":"An array of type <ph id=\"ph1\">&lt;xref href=\"System.Attribute\"&gt;&lt;/xref&gt;</ph> that contains the property attributes.","source":"An array of type <xref href=\"System.Attribute\"></xref> that contains the property attributes."}],"pos":[15285,15379],"yaml":true},{"content":"Enables other objects to be notified when this property changes.","nodes":[{"pos":[0,64],"content":"Enables other objects to be notified when this property changes.","nodes":[{"content":"Enables other objects to be notified when this property changes.","pos":[0,64]}]}],"pos":[16920,16985],"yaml":true},{"content":"The component to add the handler for.","nodes":[{"pos":[0,37],"content":"The component to add the handler for.","nodes":[{"content":"The component to add the handler for.","pos":[0,37]}]}],"pos":[17167,17205],"yaml":true},{"content":"The delegate to add as a listener.","nodes":[{"pos":[0,34],"content":"The delegate to add as a listener.","nodes":[{"content":"The delegate to add as a listener.","pos":[0,34]}]}],"pos":[17274,17309],"yaml":true},{"content":"<code>component</code> or <code>handler</code> is `null`.","nodes":[{"pos":[0,57],"content":"<ph id=\"ph1\">&lt;code&gt;component&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;handler&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>component</code> or <code>handler</code> is `null`."}],"pos":[17495,17553],"yaml":true},{"content":"When overridden in a derived class, returns whether resetting an object changes its value.","nodes":[{"pos":[0,90],"content":"When overridden in a derived class, returns whether resetting an object changes its value.","nodes":[{"content":"When overridden in a derived class, returns whether resetting an object changes its value.","pos":[0,90]}]}],"pos":[18903,18994],"yaml":true},{"content":"Typically, this method is implemented through reflection.","nodes":[{"pos":[0,57],"content":"Typically, this method is implemented through reflection.","nodes":[{"content":"Typically, this method is implemented through reflection.","pos":[0,57]}]}],"pos":[19005,19063],"yaml":true,"extradata":"MT"},{"content":"The component to test for reset capability.","nodes":[{"pos":[0,43],"content":"The component to test for reset capability.","nodes":[{"content":"The component to test for reset capability.","pos":[0,43]}]}],"pos":[19222,19266],"yaml":true},{"content":"`true` if resetting the component changes its value; otherwise, `false`.","nodes":[{"pos":[0,72],"content":"<ph id=\"ph1\">`true`</ph> if resetting the component changes its value; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if resetting the component changes its value; otherwise, `false`."}],"pos":[19324,19399],"yaml":true},{"content":"When overridden in a derived class, gets the type of the component this property is bound to.","nodes":[{"pos":[0,93],"content":"When overridden in a derived class, gets the type of the component this property is bound to.","nodes":[{"content":"When overridden in a derived class, gets the type of the component this property is bound to.","pos":[0,93]}]}],"pos":[20767,20861],"yaml":true},{"content":"Typically, this property is implemented through reflection.","nodes":[{"pos":[0,59],"content":"Typically, this property is implemented through reflection.","nodes":[{"content":"Typically, this property is implemented through reflection.","pos":[0,59]}]}],"pos":[20872,20932],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Type\"></xref> that represents the type of component this property is bound to. When the <xref href=\"System.ComponentModel.PropertyDescriptor.GetValue(System.Object)\"></xref> or <xref href=\"System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)\"></xref> methods are invoked, the object specified might be an instance of this type.","nodes":[{"pos":[0,374],"content":"A <xref href=\"System.Type\"></xref> that represents the type of component this property is bound to. When the <xref href=\"System.ComponentModel.PropertyDescriptor.GetValue(System.Object)\"></xref> or <xref href=\"System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)\"></xref> methods are invoked, the object specified might be an instance of this type.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that represents the type of component this property is bound to.","pos":[0,99],"source":"A <xref href=\"System.Type\"></xref> that represents the type of component this property is bound to."},{"content":"When the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.PropertyDescriptor.GetValue(System.Object)\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)\"&gt;&lt;/xref&gt;</ph> methods are invoked, the object specified might be an instance of this type.","pos":[100,374],"source":" When the <xref href=\"System.ComponentModel.PropertyDescriptor.GetValue(System.Object)\"></xref> or <xref href=\"System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)\"></xref> methods are invoked, the object specified might be an instance of this type."}]}],"pos":[21054,21429],"yaml":true},{"content":"Gets the type converter for this property.","nodes":[{"pos":[0,42],"content":"Gets the type converter for this property.","nodes":[{"content":"Gets the type converter for this property.","pos":[0,42]}]}],"pos":[22773,22816],"yaml":true},{"content":"A <xref href=\"System.ComponentModel.TypeConverter\"></xref> that is used to convert the <xref href=\"System.Type\"></xref> of this property.","nodes":[{"pos":[0,137],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.TypeConverter\"&gt;&lt;/xref&gt;</ph> that is used to convert the <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> of this property.","source":"A <xref href=\"System.ComponentModel.TypeConverter\"></xref> that is used to convert the <xref href=\"System.Type\"></xref> of this property."}],"pos":[22988,23126],"yaml":true},{"content":"Creates an instance of the specified type.","nodes":[{"pos":[0,42],"content":"Creates an instance of the specified type.","nodes":[{"content":"Creates an instance of the specified type.","pos":[0,42]}]}],"pos":[24551,24594],"yaml":true},{"content":"<xref:System.ComponentModel.PropertyDescriptor.CreateInstance%2A> looks for a constructor that takes the specified type. If it finds a constructor, the type of the property is passed in.  \n  \n Converters and editors use this method to create versions of a component. This method enables a single component to be reused for more than one type.","nodes":[{"pos":[0,186],"content":"<xref:System.ComponentModel.PropertyDescriptor.CreateInstance%2A> looks for a constructor that takes the specified type. If it finds a constructor, the type of the property is passed in.","nodes":[{"content":"<xref:System.ComponentModel.PropertyDescriptor.CreateInstance%2A> looks for a constructor that takes the specified type. If it finds a constructor, the type of the property is passed in.","pos":[0,186],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ComponentModel.PropertyDescriptor.CreateInstance%2A&gt;</ph> looks for a constructor that takes the specified type.","pos":[0,120],"source":"<xref:System.ComponentModel.PropertyDescriptor.CreateInstance%2A> looks for a constructor that takes the specified type."},{"content":"If it finds a constructor, the type of the property is passed in.","pos":[121,186]}]}]},{"pos":[193,342],"content":"Converters and editors use this method to create versions of a component. This method enables a single component to be reused for more than one type.","nodes":[{"content":"Converters and editors use this method to create versions of a component. This method enables a single component to be reused for more than one type.","pos":[0,149],"nodes":[{"content":"Converters and editors use this method to create versions of a component.","pos":[0,73]},{"content":"This method enables a single component to be reused for more than one type.","pos":[74,149]}]}]}],"pos":[24605,24952],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Type\"></xref> that represents the type to create.","nodes":[{"pos":[0,70],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that represents the type to create.","source":"A <xref href=\"System.Type\"></xref> that represents the type to create."}],"pos":[25094,25165],"yaml":true},{"content":"A new instance of the type.","nodes":[{"pos":[0,27],"content":"A new instance of the type.","nodes":[{"content":"A new instance of the type.","pos":[0,27]}]}],"pos":[25222,25250],"yaml":true},{"content":"Compares this to another object to see if they are equivalent.","nodes":[{"pos":[0,62],"content":"Compares this to another object to see if they are equivalent.","nodes":[{"content":"Compares this to another object to see if they are equivalent.","pos":[0,62]}]}],"pos":[26644,26707],"yaml":true},{"content":"The object to compare to this <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref>.","nodes":[{"pos":[0,92],"content":"The object to compare to this <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.PropertyDescriptor\"&gt;&lt;/xref&gt;</ph>.","source":"The object to compare to this <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref>."}],"pos":[26847,26940],"yaml":true},{"content":"`true` if the values are equivalent; otherwise, `false`.","nodes":[{"pos":[0,56],"content":"<ph id=\"ph1\">`true`</ph> if the values are equivalent; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the values are equivalent; otherwise, `false`."}],"pos":[26998,27057],"yaml":true},{"content":"Adds the attributes of the <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> to the specified list of attributes in the parent class.","nodes":[{"pos":[0,145],"content":"Adds the attributes of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.PropertyDescriptor\"&gt;&lt;/xref&gt;</ph> to the specified list of attributes in the parent class.","source":"Adds the attributes of the <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> to the specified list of attributes in the parent class."}],"pos":[28521,28667],"yaml":true},{"content":"For duplicate attributes, the last one added to the list will be kept.","nodes":[{"pos":[0,70],"content":"For duplicate attributes, the last one added to the list will be kept.","nodes":[{"content":"For duplicate attributes, the last one added to the list will be kept.","pos":[0,70]}]}],"pos":[28678,28749],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Collections.IList\"></xref> that lists the attributes in the parent class. Initially, this is empty.","nodes":[{"pos":[0,121],"content":"An <xref href=\"System.Collections.IList\"></xref> that lists the attributes in the parent class. Initially, this is empty.","nodes":[{"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph> that lists the attributes in the parent class.","pos":[0,95],"source":"An <xref href=\"System.Collections.IList\"></xref> that lists the attributes in the parent class."},{"content":"Initially, this is empty.","pos":[96,121]}]}],"pos":[28949,29071],"yaml":true},{"content":"Returns the default <xref href=\"System.ComponentModel.PropertyDescriptorCollection\"></xref>.","nodes":[{"pos":[0,92],"content":"Returns the default <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.PropertyDescriptorCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Returns the default <xref href=\"System.ComponentModel.PropertyDescriptorCollection\"></xref>."}],"pos":[30474,30567],"yaml":true},{"content":"This method passes `null` for both the `instance` parameter and the `filter` parameter.  \n  \n The properties for the `instance` parameter can differ from the properties of a class, because the container can add or remove properties if the `instance` parameter is sited.  \n  \n The `filter` parameter can mix <xref:System.Type> and <xref:System.Attribute> objects. Filtering is defined by the following rules:  \n  \n-   A <xref:System.Type> object is treated as a wildcard; it matches any property that has the <xref:System.Type> in its set of attributes.  \n  \n-   If a property does not have an <xref:System.Attribute> of the same class, the property will not be included in the returned array.  \n  \n-   If the attribute is an instance of <xref:System.Attribute>, the property must be an exact match to be included in the returned array.  \n  \n-   If you specify an <xref:System.Attribute> and it is the default property, it will be included in the returned array, even if there is no instance of <xref:System.Attribute> in the property.","nodes":[{"pos":[0,87],"content":"This method passes <ph id=\"ph1\">`null`</ph> for both the <ph id=\"ph2\">`instance`</ph> parameter and the <ph id=\"ph3\">`filter`</ph> parameter.","source":"This method passes `null` for both the `instance` parameter and the `filter` parameter."},{"pos":[94,269],"content":"The properties for the <ph id=\"ph1\">`instance`</ph> parameter can differ from the properties of a class, because the container can add or remove properties if the <ph id=\"ph2\">`instance`</ph> parameter is sited.","source":"The properties for the `instance` parameter can differ from the properties of a class, because the container can add or remove properties if the `instance` parameter is sited."},{"pos":[276,407],"content":"The `filter` parameter can mix <xref:System.Type> and <xref:System.Attribute> objects. Filtering is defined by the following rules:","nodes":[{"content":"The <ph id=\"ph1\">`filter`</ph> parameter can mix <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Attribute&gt;</ph> objects.","pos":[0,86],"source":"The `filter` parameter can mix <xref:System.Type> and <xref:System.Attribute> objects."},{"content":"Filtering is defined by the following rules:","pos":[87,131]}]},{"pos":[417,552],"content":"A <xref:System.Type> object is treated as a wildcard; it matches any property that has the <xref:System.Type> in its set of attributes.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Type&gt;</ph> object is treated as a wildcard; it matches any property that has the <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph> in its set of attributes.","pos":[0,135],"source":"A <xref:System.Type> object is treated as a wildcard; it matches any property that has the <xref:System.Type> in its set of attributes."}]},{"pos":[562,692],"content":"If a property does not have an <xref:System.Attribute> of the same class, the property will not be included in the returned array.","nodes":[{"content":"If a property does not have an <ph id=\"ph1\">&lt;xref:System.Attribute&gt;</ph> of the same class, the property will not be included in the returned array.","pos":[0,130],"source":"If a property does not have an <xref:System.Attribute> of the same class, the property will not be included in the returned array."}]},{"pos":[702,835],"content":"If the attribute is an instance of <xref:System.Attribute>, the property must be an exact match to be included in the returned array.","nodes":[{"content":"If the attribute is an instance of <ph id=\"ph1\">&lt;xref:System.Attribute&gt;</ph>, the property must be an exact match to be included in the returned array.","pos":[0,133],"source":"If the attribute is an instance of <xref:System.Attribute>, the property must be an exact match to be included in the returned array."}]},{"pos":[845,1034],"content":"If you specify an <xref:System.Attribute> and it is the default property, it will be included in the returned array, even if there is no instance of <xref:System.Attribute> in the property.","nodes":[{"content":"If you specify an <ph id=\"ph1\">&lt;xref:System.Attribute&gt;</ph> and it is the default property, it will be included in the returned array, even if there is no instance of <ph id=\"ph2\">&lt;xref:System.Attribute&gt;</ph> in the property.","pos":[0,189],"source":"If you specify an <xref:System.Attribute> and it is the default property, it will be included in the returned array, even if there is no instance of <xref:System.Attribute> in the property."}]}],"pos":[30578,31627],"yaml":true,"extradata":"MT"},{"content":"A collection of property descriptor.","nodes":[{"pos":[0,36],"content":"A collection of property descriptor.","nodes":[{"content":"A collection of property descriptor.","pos":[0,36]}]}],"pos":[31844,31881],"yaml":true},{"content":"Returns a <xref href=\"System.ComponentModel.PropertyDescriptorCollection\"></xref> using a specified array of attributes as a filter.","nodes":[{"pos":[0,132],"content":"Returns a <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.PropertyDescriptorCollection\"&gt;&lt;/xref&gt;</ph> using a specified array of attributes as a filter.","source":"Returns a <xref href=\"System.ComponentModel.PropertyDescriptorCollection\"></xref> using a specified array of attributes as a filter."}],"pos":[33381,33514],"yaml":true},{"content":"This method passes `null` for the `instance` parameter.  \n  \n The properties for the `instance` parameter can differ from the properties of a class, because the site can add or remove properties if the `instance` parameter is sited.  \n  \n The `filter` parameter can mix <xref:System.Type> and <xref:System.Attribute> objects. Filtering is defined by the following rules:  \n  \n-   A <xref:System.Type> object is treated as a wildcard; it matches any property that has the <xref:System.Type> in its set of attributes.  \n  \n-   If a property does not have an <xref:System.Attribute> of the same class, the property will not be included in the returned array.  \n  \n-   If the attribute is an instance of <xref:System.Attribute>, the property must be an exact match to be included in the returned array.  \n  \n-   If you specify an <xref:System.Attribute> instance and it is the default property, it will be included in the returned array even if there is no instance of the <xref:System.Attribute> in the property.","nodes":[{"pos":[0,55],"content":"This method passes <ph id=\"ph1\">`null`</ph> for the <ph id=\"ph2\">`instance`</ph> parameter.","source":"This method passes `null` for the `instance` parameter."},{"pos":[62,232],"content":"The properties for the <ph id=\"ph1\">`instance`</ph> parameter can differ from the properties of a class, because the site can add or remove properties if the <ph id=\"ph2\">`instance`</ph> parameter is sited.","source":"The properties for the `instance` parameter can differ from the properties of a class, because the site can add or remove properties if the `instance` parameter is sited."},{"pos":[239,370],"content":"The `filter` parameter can mix <xref:System.Type> and <xref:System.Attribute> objects. Filtering is defined by the following rules:","nodes":[{"content":"The <ph id=\"ph1\">`filter`</ph> parameter can mix <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Attribute&gt;</ph> objects.","pos":[0,86],"source":"The `filter` parameter can mix <xref:System.Type> and <xref:System.Attribute> objects."},{"content":"Filtering is defined by the following rules:","pos":[87,131]}]},{"pos":[380,515],"content":"A <xref:System.Type> object is treated as a wildcard; it matches any property that has the <xref:System.Type> in its set of attributes.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Type&gt;</ph> object is treated as a wildcard; it matches any property that has the <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph> in its set of attributes.","pos":[0,135],"source":"A <xref:System.Type> object is treated as a wildcard; it matches any property that has the <xref:System.Type> in its set of attributes."}]},{"pos":[525,655],"content":"If a property does not have an <xref:System.Attribute> of the same class, the property will not be included in the returned array.","nodes":[{"content":"If a property does not have an <ph id=\"ph1\">&lt;xref:System.Attribute&gt;</ph> of the same class, the property will not be included in the returned array.","pos":[0,130],"source":"If a property does not have an <xref:System.Attribute> of the same class, the property will not be included in the returned array."}]},{"pos":[665,798],"content":"If the attribute is an instance of <xref:System.Attribute>, the property must be an exact match to be included in the returned array.","nodes":[{"content":"If the attribute is an instance of <ph id=\"ph1\">&lt;xref:System.Attribute&gt;</ph>, the property must be an exact match to be included in the returned array.","pos":[0,133],"source":"If the attribute is an instance of <xref:System.Attribute>, the property must be an exact match to be included in the returned array."}]},{"pos":[808,1009],"content":"If you specify an <xref:System.Attribute> instance and it is the default property, it will be included in the returned array even if there is no instance of the <xref:System.Attribute> in the property.","nodes":[{"content":"If you specify an <ph id=\"ph1\">&lt;xref:System.Attribute&gt;</ph> instance and it is the default property, it will be included in the returned array even if there is no instance of the <ph id=\"ph2\">&lt;xref:System.Attribute&gt;</ph> in the property.","pos":[0,201],"source":"If you specify an <xref:System.Attribute> instance and it is the default property, it will be included in the returned array even if there is no instance of the <xref:System.Attribute> in the property."}]}],"pos":[33525,34549],"yaml":true,"extradata":"MT"},{"content":"An array of type <xref href=\"System.Attribute\"></xref> to use as a filter.","nodes":[{"pos":[0,74],"content":"An array of type <ph id=\"ph1\">&lt;xref href=\"System.Attribute\"&gt;&lt;/xref&gt;</ph> to use as a filter.","source":"An array of type <xref href=\"System.Attribute\"></xref> to use as a filter."}],"pos":[34754,34829],"yaml":true},{"content":"A <xref href=\"System.ComponentModel.PropertyDescriptorCollection\"></xref> with the properties that match the specified attributes.","nodes":[{"pos":[0,130],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.PropertyDescriptorCollection\"&gt;&lt;/xref&gt;</ph> with the properties that match the specified attributes.","source":"A <xref href=\"System.ComponentModel.PropertyDescriptorCollection\"></xref> with the properties that match the specified attributes."}],"pos":[34923,35054],"yaml":true},{"content":"Returns a <xref href=\"System.ComponentModel.PropertyDescriptorCollection\"></xref> for a given object.","nodes":[{"pos":[0,101],"content":"Returns a <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.PropertyDescriptorCollection\"&gt;&lt;/xref&gt;</ph> for a given object.","source":"Returns a <xref href=\"System.ComponentModel.PropertyDescriptorCollection\"></xref> for a given object."}],"pos":[36524,36626],"yaml":true},{"content":"This method passes `null` for the `filter` parameter.  \n  \n The properties for the `instance` parameter can differ from the properties of a class, because the site can add or remove properties if the `instance` parameter is sited.  \n  \n The `filter` parameter can mix <xref:System.Type> and <xref:System.Attribute> objects. Filtering is defined by the following rules:  \n  \n-   A <xref:System.Type> object is treated as a wildcard; it matches any property that has the <xref:System.Type> in its set of attributes.  \n  \n-   If a property does not have an <xref:System.Attribute> of the same class, the property will not be included in the returned array.  \n  \n-   If the attribute is an instance of <xref:System.Attribute>, the property must be an exact match to be included in the returned array.  \n  \n-   If you specify an <xref:System.Attribute> instance and it is the default property, it will be included in the returned array even if there is no instance of the <xref:System.Attribute> in the property.","nodes":[{"pos":[0,53],"content":"This method passes <ph id=\"ph1\">`null`</ph> for the <ph id=\"ph2\">`filter`</ph> parameter.","source":"This method passes `null` for the `filter` parameter."},{"pos":[60,230],"content":"The properties for the <ph id=\"ph1\">`instance`</ph> parameter can differ from the properties of a class, because the site can add or remove properties if the <ph id=\"ph2\">`instance`</ph> parameter is sited.","source":"The properties for the `instance` parameter can differ from the properties of a class, because the site can add or remove properties if the `instance` parameter is sited."},{"pos":[237,368],"content":"The `filter` parameter can mix <xref:System.Type> and <xref:System.Attribute> objects. Filtering is defined by the following rules:","nodes":[{"content":"The <ph id=\"ph1\">`filter`</ph> parameter can mix <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Attribute&gt;</ph> objects.","pos":[0,86],"source":"The `filter` parameter can mix <xref:System.Type> and <xref:System.Attribute> objects."},{"content":"Filtering is defined by the following rules:","pos":[87,131]}]},{"pos":[378,513],"content":"A <xref:System.Type> object is treated as a wildcard; it matches any property that has the <xref:System.Type> in its set of attributes.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Type&gt;</ph> object is treated as a wildcard; it matches any property that has the <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph> in its set of attributes.","pos":[0,135],"source":"A <xref:System.Type> object is treated as a wildcard; it matches any property that has the <xref:System.Type> in its set of attributes."}]},{"pos":[523,653],"content":"If a property does not have an <xref:System.Attribute> of the same class, the property will not be included in the returned array.","nodes":[{"content":"If a property does not have an <ph id=\"ph1\">&lt;xref:System.Attribute&gt;</ph> of the same class, the property will not be included in the returned array.","pos":[0,130],"source":"If a property does not have an <xref:System.Attribute> of the same class, the property will not be included in the returned array."}]},{"pos":[663,796],"content":"If the attribute is an instance of <xref:System.Attribute>, the property must be an exact match to be included in the returned array.","nodes":[{"content":"If the attribute is an instance of <ph id=\"ph1\">&lt;xref:System.Attribute&gt;</ph>, the property must be an exact match to be included in the returned array.","pos":[0,133],"source":"If the attribute is an instance of <xref:System.Attribute>, the property must be an exact match to be included in the returned array."}]},{"pos":[806,1007],"content":"If you specify an <xref:System.Attribute> instance and it is the default property, it will be included in the returned array even if there is no instance of the <xref:System.Attribute> in the property.","nodes":[{"content":"If you specify an <ph id=\"ph1\">&lt;xref:System.Attribute&gt;</ph> instance and it is the default property, it will be included in the returned array even if there is no instance of the <ph id=\"ph2\">&lt;xref:System.Attribute&gt;</ph> in the property.","pos":[0,201],"source":"If you specify an <xref:System.Attribute> instance and it is the default property, it will be included in the returned array even if there is no instance of the <xref:System.Attribute> in the property."}]}],"pos":[36637,37659],"yaml":true,"extradata":"MT"},{"content":"A component to get the properties for.","nodes":[{"pos":[0,38],"content":"A component to get the properties for.","nodes":[{"content":"A component to get the properties for.","pos":[0,38]}]}],"pos":[37858,37897],"yaml":true},{"content":"A <xref href=\"System.ComponentModel.PropertyDescriptorCollection\"></xref> with the properties for the specified component.","nodes":[{"pos":[0,122],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.PropertyDescriptorCollection\"&gt;&lt;/xref&gt;</ph> with the properties for the specified component.","source":"A <xref href=\"System.ComponentModel.PropertyDescriptorCollection\"></xref> with the properties for the specified component."}],"pos":[37991,38114],"yaml":true},{"content":"Returns a <xref href=\"System.ComponentModel.PropertyDescriptorCollection\"></xref> for a given object using a specified array of attributes as a filter.","nodes":[{"pos":[0,151],"content":"Returns a <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.PropertyDescriptorCollection\"&gt;&lt;/xref&gt;</ph> for a given object using a specified array of attributes as a filter.","source":"Returns a <xref href=\"System.ComponentModel.PropertyDescriptorCollection\"></xref> for a given object using a specified array of attributes as a filter."}],"pos":[39680,39832],"yaml":true},{"content":"The properties for the `instance` parameter can differ from the properties of a class, because the site can add or remove properties if the `instance` parameter is sited.  \n  \n The `filter` parameter can mix <xref:System.Type> and <xref:System.Attribute> objects. Filtering is defined by the following rules:  \n  \n-   A <xref:System.Type> object is treated as a wildcard; it matches any property that has the <xref:System.Type> in its set of attributes.  \n  \n-   If a property does not have an <xref:System.Attribute> of the same class, the property will not be included in the returned array.  \n  \n-   If the attribute is an instance of <xref:System.Attribute>, the property must be an exact match to be included in the returned array.  \n  \n-   If you specify an <xref:System.Attribute> instance and it is the default property, it will be included in the returned array even if there is no instance of the <xref:System.Attribute> in the property.  \n  \n Generally, child properties should be returned by implementing the <xref:System.ComponentModel.TypeConverter.GetProperties%2A> member of the <xref:System.ComponentModel.TypeConverter> returned from this property.","nodes":[{"pos":[0,170],"content":"The properties for the <ph id=\"ph1\">`instance`</ph> parameter can differ from the properties of a class, because the site can add or remove properties if the <ph id=\"ph2\">`instance`</ph> parameter is sited.","source":"The properties for the `instance` parameter can differ from the properties of a class, because the site can add or remove properties if the `instance` parameter is sited."},{"pos":[177,308],"content":"The `filter` parameter can mix <xref:System.Type> and <xref:System.Attribute> objects. Filtering is defined by the following rules:","nodes":[{"content":"The <ph id=\"ph1\">`filter`</ph> parameter can mix <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Attribute&gt;</ph> objects.","pos":[0,86],"source":"The `filter` parameter can mix <xref:System.Type> and <xref:System.Attribute> objects."},{"content":"Filtering is defined by the following rules:","pos":[87,131]}]},{"pos":[318,453],"content":"A <xref:System.Type> object is treated as a wildcard; it matches any property that has the <xref:System.Type> in its set of attributes.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Type&gt;</ph> object is treated as a wildcard; it matches any property that has the <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph> in its set of attributes.","pos":[0,135],"source":"A <xref:System.Type> object is treated as a wildcard; it matches any property that has the <xref:System.Type> in its set of attributes."}]},{"pos":[463,593],"content":"If a property does not have an <xref:System.Attribute> of the same class, the property will not be included in the returned array.","nodes":[{"content":"If a property does not have an <ph id=\"ph1\">&lt;xref:System.Attribute&gt;</ph> of the same class, the property will not be included in the returned array.","pos":[0,130],"source":"If a property does not have an <xref:System.Attribute> of the same class, the property will not be included in the returned array."}]},{"pos":[603,736],"content":"If the attribute is an instance of <xref:System.Attribute>, the property must be an exact match to be included in the returned array.","nodes":[{"content":"If the attribute is an instance of <ph id=\"ph1\">&lt;xref:System.Attribute&gt;</ph>, the property must be an exact match to be included in the returned array.","pos":[0,133],"source":"If the attribute is an instance of <xref:System.Attribute>, the property must be an exact match to be included in the returned array."}]},{"pos":[746,947],"content":"If you specify an <xref:System.Attribute> instance and it is the default property, it will be included in the returned array even if there is no instance of the <xref:System.Attribute> in the property.","nodes":[{"content":"If you specify an <ph id=\"ph1\">&lt;xref:System.Attribute&gt;</ph> instance and it is the default property, it will be included in the returned array even if there is no instance of the <ph id=\"ph2\">&lt;xref:System.Attribute&gt;</ph> in the property.","pos":[0,201],"source":"If you specify an <xref:System.Attribute> instance and it is the default property, it will be included in the returned array even if there is no instance of the <xref:System.Attribute> in the property."}]},{"pos":[954,1166],"content":"Generally, child properties should be returned by implementing the <xref:System.ComponentModel.TypeConverter.GetProperties%2A> member of the <xref:System.ComponentModel.TypeConverter> returned from this property.","nodes":[{"content":"Generally, child properties should be returned by implementing the <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeConverter.GetProperties%2A&gt;</ph> member of the <ph id=\"ph2\">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> returned from this property.","pos":[0,212],"source":"Generally, child properties should be returned by implementing the <xref:System.ComponentModel.TypeConverter.GetProperties%2A> member of the <xref:System.ComponentModel.TypeConverter> returned from this property."}]}],"pos":[39843,41024],"yaml":true,"extradata":"MT"},{"content":"A component to get the properties for.","nodes":[{"pos":[0,38],"content":"A component to get the properties for.","nodes":[{"content":"A component to get the properties for.","pos":[0,38]}]}],"pos":[41251,41290],"yaml":true},{"content":"An array of type <xref href=\"System.Attribute\"></xref> to use as a filter.","nodes":[{"pos":[0,74],"content":"An array of type <ph id=\"ph1\">&lt;xref href=\"System.Attribute\"&gt;&lt;/xref&gt;</ph> to use as a filter.","source":"An array of type <xref href=\"System.Attribute\"></xref> to use as a filter."}],"pos":[41357,41432],"yaml":true},{"content":"A <xref href=\"System.ComponentModel.PropertyDescriptorCollection\"></xref> with the properties that match the specified attributes for the specified component.","nodes":[{"pos":[0,158],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.PropertyDescriptorCollection\"&gt;&lt;/xref&gt;</ph> with the properties that match the specified attributes for the specified component.","source":"A <xref href=\"System.ComponentModel.PropertyDescriptorCollection\"></xref> with the properties that match the specified attributes for the specified component."}],"pos":[41526,41685],"yaml":true},{"content":"Gets an editor of the specified type.","nodes":[{"pos":[0,37],"content":"Gets an editor of the specified type.","nodes":[{"content":"Gets an editor of the specified type.","pos":[0,37]}]}],"pos":[43089,43127],"yaml":true},{"content":"The base type of editor, which is used to differentiate between multiple editors that a property supports.","nodes":[{"pos":[0,106],"content":"The base type of editor, which is used to differentiate between multiple editors that a property supports.","nodes":[{"content":"The base type of editor, which is used to differentiate between multiple editors that a property supports.","pos":[0,106]}]}],"pos":[43289,43396],"yaml":true},{"content":"An instance of the requested editor type, or `null` if an editor cannot be found.","nodes":[{"pos":[0,81],"content":"An instance of the requested editor type, or <ph id=\"ph1\">`null`</ph> if an editor cannot be found.","source":"An instance of the requested editor type, or `null` if an editor cannot be found."}],"pos":[43453,43535],"yaml":true},{"content":"Returns the hash code for this object.","nodes":[{"pos":[0,38],"content":"Returns the hash code for this object.","nodes":[{"content":"Returns the hash code for this object.","pos":[0,38]}]}],"pos":[44891,44930],"yaml":true},{"content":"The hash code for this object.","nodes":[{"pos":[0,30],"content":"The hash code for this object.","nodes":[{"content":"The hash code for this object.","pos":[0,30]}]}],"pos":[45064,45095],"yaml":true},{"content":"This method returns the object that should be used during invocation of members.","nodes":[{"pos":[0,80],"content":"This method returns the object that should be used during invocation of members.","nodes":[{"content":"This method returns the object that should be used during invocation of members.","pos":[0,80]}]}],"pos":[46618,46699],"yaml":true},{"content":"Typically, the return value will be the same as the `instance` passed in. If someone associated another object with this instance, or if the instance is a custom type descriptor, the <xref:System.ComponentModel.PropertyDescriptor.GetInvocationTarget%2A> method may return a different value.","nodes":[{"pos":[0,290],"content":"Typically, the return value will be the same as the `instance` passed in. If someone associated another object with this instance, or if the instance is a custom type descriptor, the <xref:System.ComponentModel.PropertyDescriptor.GetInvocationTarget%2A> method may return a different value.","nodes":[{"content":"Typically, the return value will be the same as the <ph id=\"ph1\">`instance`</ph> passed in.","pos":[0,73],"source":"Typically, the return value will be the same as the `instance` passed in."},{"content":"If someone associated another object with this instance, or if the instance is a custom type descriptor, the <ph id=\"ph1\">&lt;xref:System.ComponentModel.PropertyDescriptor.GetInvocationTarget%2A&gt;</ph> method may return a different value.","pos":[74,290],"source":" If someone associated another object with this instance, or if the instance is a custom type descriptor, the <xref:System.ComponentModel.PropertyDescriptor.GetInvocationTarget%2A> method may return a different value."}]}],"pos":[46710,47001],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Type\"></xref> of the invocation target.","nodes":[{"pos":[0,62],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> of the invocation target.","source":"The <xref href=\"System.Type\"></xref> of the invocation target."}],"pos":[47174,47237],"yaml":true},{"content":"The potential invocation target.","nodes":[{"pos":[0,32],"content":"The potential invocation target.","nodes":[{"content":"The potential invocation target.","pos":[0,32]}]}],"pos":[47301,47334],"yaml":true},{"content":"The <xref href=\"System.Object\"></xref> that should be used during invocation of members.","nodes":[{"pos":[0,88],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> that should be used during invocation of members.","source":"The <xref href=\"System.Object\"></xref> that should be used during invocation of members."}],"pos":[47391,47480],"yaml":true},{"content":"Returns a type using its name.","nodes":[{"pos":[0,30],"content":"Returns a type using its name.","nodes":[{"content":"Returns a type using its name.","pos":[0,30]}]}],"pos":[48933,48964],"yaml":true},{"content":"To find the appropriate type, this method first checks the assembly of the type that this <xref:System.ComponentModel.PropertyDescriptor> references. If it does not find the type in the assembly, it calls <xref:System.Type.GetType%2A?displayProperty=fullName>.","nodes":[{"pos":[0,260],"content":"To find the appropriate type, this method first checks the assembly of the type that this <xref:System.ComponentModel.PropertyDescriptor> references. If it does not find the type in the assembly, it calls <xref:System.Type.GetType%2A?displayProperty=fullName>.","nodes":[{"content":"To find the appropriate type, this method first checks the assembly of the type that this <xref:System.ComponentModel.PropertyDescriptor> references. If it does not find the type in the assembly, it calls <xref:System.Type.GetType%2A?displayProperty=fullName>.","pos":[0,260],"nodes":[{"content":"To find the appropriate type, this method first checks the assembly of the type that this <ph id=\"ph1\">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph> references.","pos":[0,149],"source":"To find the appropriate type, this method first checks the assembly of the type that this <xref:System.ComponentModel.PropertyDescriptor> references."},{"content":"If it does not find the type in the assembly, it calls <ph id=\"ph1\">&lt;xref:System.Type.GetType%2A?displayProperty=fullName&gt;</ph>.","pos":[150,260],"source":" If it does not find the type in the assembly, it calls <xref:System.Type.GetType%2A?displayProperty=fullName>."}]}]}],"pos":[48975,49236],"yaml":true,"extradata":"MT"},{"content":"The assembly-qualified name of the type to retrieve.","nodes":[{"pos":[0,52],"content":"The assembly-qualified name of the type to retrieve.","nodes":[{"content":"The assembly-qualified name of the type to retrieve.","pos":[0,52]}]}],"pos":[49389,49442],"yaml":true},{"content":"A <xref href=\"System.Type\"></xref> that matches the given type name, or `null` if a match cannot be found.","nodes":[{"pos":[0,106],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that matches the given type name, or <ph id=\"ph2\">`null`</ph> if a match cannot be found.","source":"A <xref href=\"System.Type\"></xref> that matches the given type name, or `null` if a match cannot be found."}],"pos":[49497,49604],"yaml":true},{"content":"When overridden in a derived class, gets the current value of the property on a component.","nodes":[{"pos":[0,90],"content":"When overridden in a derived class, gets the current value of the property on a component.","nodes":[{"content":"When overridden in a derived class, gets the current value of the property on a component.","pos":[0,90]}]}],"pos":[51011,51102],"yaml":true},{"content":"Typically, this method is implemented through reflection.  \n  \n This method automatically calls the pre-change method, <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A>, and post-change method, <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A>, of the <xref:System.ComponentModel.Design.IComponentChangeService>.","nodes":[{"pos":[0,57],"content":"Typically, this method is implemented through reflection.","nodes":[{"content":"Typically, this method is implemented through reflection.","pos":[0,57]}]},{"pos":[64,377],"content":"This method automatically calls the pre-change method, <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A>, and post-change method, <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A>, of the <xref:System.ComponentModel.Design.IComponentChangeService>.","nodes":[{"content":"This method automatically calls the pre-change method, <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A&gt;</ph>, and post-change method, <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A&gt;</ph>, of the <ph id=\"ph3\">&lt;xref:System.ComponentModel.Design.IComponentChangeService&gt;</ph>.","pos":[0,313],"source":"This method automatically calls the pre-change method, <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A>, and post-change method, <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A>, of the <xref:System.ComponentModel.Design.IComponentChangeService>."}]}],"pos":[51113,51495],"yaml":true,"extradata":"MT"},{"content":"The component with the property for which to retrieve the value.","nodes":[{"pos":[0,64],"content":"The component with the property for which to retrieve the value.","nodes":[{"content":"The component with the property for which to retrieve the value.","pos":[0,64]}]}],"pos":[51651,51716],"yaml":true},{"content":"The value of a property for a given component.","nodes":[{"pos":[0,46],"content":"The value of a property for a given component.","nodes":[{"content":"The value of a property for a given component.","pos":[0,46]}]}],"pos":[51773,51820],"yaml":true},{"content":"Retrieves the current set of <code>ValueChanged</code> event handlers for a specific component","nodes":[{"pos":[0,94],"content":"Retrieves the current set of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">ValueChanged</ph><ept id=\"p1\">&lt;/code&gt;</ept> event handlers for a specific component","source":"Retrieves the current set of <code>ValueChanged</code> event handlers for a specific component"}],"pos":[53304,53399],"yaml":true},{"content":"The component for which to retrieve event handlers.","nodes":[{"pos":[0,51],"content":"The component for which to retrieve event handlers.","nodes":[{"content":"The component for which to retrieve event handlers.","pos":[0,51]}]}],"pos":[53569,53621],"yaml":true},{"content":"A combined multicast event handler, or `null` if no event handlers are currently assigned to <code>component</code>.","nodes":[{"pos":[0,116],"content":"A combined multicast event handler, or <ph id=\"ph1\">`null`</ph> if no event handlers are currently assigned to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">component</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A combined multicast event handler, or `null` if no event handlers are currently assigned to <code>component</code>."}],"pos":[53684,53801],"yaml":true},{"content":"Gets a value indicating whether this property should be localized, as specified in the <xref href=\"System.ComponentModel.LocalizableAttribute\"></xref>.","nodes":[{"pos":[0,151],"content":"Gets a value indicating whether this property should be localized, as specified in the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.LocalizableAttribute\"&gt;&lt;/xref&gt;</ph>.","source":"Gets a value indicating whether this property should be localized, as specified in the <xref href=\"System.ComponentModel.LocalizableAttribute\"></xref>."}],"pos":[55178,55330],"yaml":true},{"content":"When a property is marked with the <xref:System.ComponentModel.LocalizableAttribute> set to `true` and used in a visual designer, its values are saved in a resource file. If you mark a property with the attribute and then set the property in code, resource files are not used.","nodes":[{"pos":[0,276],"content":"When a property is marked with the <xref:System.ComponentModel.LocalizableAttribute> set to `true` and used in a visual designer, its values are saved in a resource file. If you mark a property with the attribute and then set the property in code, resource files are not used.","nodes":[{"content":"When a property is marked with the <ph id=\"ph1\">&lt;xref:System.ComponentModel.LocalizableAttribute&gt;</ph> set to <ph id=\"ph2\">`true`</ph> and used in a visual designer, its values are saved in a resource file.","pos":[0,170],"source":"When a property is marked with the <xref:System.ComponentModel.LocalizableAttribute> set to `true` and used in a visual designer, its values are saved in a resource file."},{"content":"If you mark a property with the attribute and then set the property in code, resource files are not used.","pos":[171,276]}]}],"pos":[55341,55618],"yaml":true,"extradata":"MT"},{"content":"`true` if the member is marked with the <xref href=\"System.ComponentModel.LocalizableAttribute\"></xref> set to `true`; otherwise, `false`.","nodes":[{"pos":[0,138],"content":"<ph id=\"ph1\">`true`</ph> if the member is marked with the <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.LocalizableAttribute\"&gt;&lt;/xref&gt;</ph> set to <ph id=\"ph3\">`true`</ph>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the member is marked with the <xref href=\"System.ComponentModel.LocalizableAttribute\"></xref> set to `true`; otherwise, `false`."}],"pos":[55742,55883],"yaml":true},{"content":"When overridden in a derived class, gets a value indicating whether this property is read-only.","nodes":[{"pos":[0,95],"content":"When overridden in a derived class, gets a value indicating whether this property is read-only.","nodes":[{"content":"When overridden in a derived class, gets a value indicating whether this property is read-only.","pos":[0,95]}]}],"pos":[57233,57329],"yaml":true},{"content":"`true` if the property is read-only; otherwise, `false`.","nodes":[{"pos":[0,56],"content":"<ph id=\"ph1\">`true`</ph> if the property is read-only; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the property is read-only; otherwise, `false`."}],"pos":[57451,57510],"yaml":true},{"content":"Raises the <code>ValueChanged</code> event that you implemented.","nodes":[{"pos":[0,64],"content":"Raises the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">ValueChanged</ph><ept id=\"p1\">&lt;/code&gt;</ept> event that you implemented.","source":"Raises the <code>ValueChanged</code> event that you implemented."}],"pos":[59032,59097],"yaml":true},{"content":"This method should be called by your property descriptor implementation when the property value has changed.","nodes":[{"pos":[0,108],"content":"This method should be called by your property descriptor implementation when the property value has changed.","nodes":[{"content":"This method should be called by your property descriptor implementation when the property value has changed.","pos":[0,108]}]}],"pos":[59108,59217],"yaml":true,"extradata":"MT"},{"content":"The object that raises the event.","nodes":[{"pos":[0,33],"content":"The object that raises the event.","nodes":[{"content":"The object that raises the event.","pos":[0,33]}]}],"pos":[59392,59426],"yaml":true},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[59486,59557],"yaml":true},{"content":"When overridden in a derived class, gets the type of the property.","nodes":[{"pos":[0,66],"content":"When overridden in a derived class, gets the type of the property.","nodes":[{"content":"When overridden in a derived class, gets the type of the property.","pos":[0,66]}]}],"pos":[60920,60987],"yaml":true},{"content":"Typically, this property is implemented through reflection.","nodes":[{"pos":[0,59],"content":"Typically, this property is implemented through reflection.","nodes":[{"content":"Typically, this property is implemented through reflection.","pos":[0,59]}]}],"pos":[60998,61058],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Type\"></xref> that represents the type of the property.","nodes":[{"pos":[0,76],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that represents the type of the property.","source":"A <xref href=\"System.Type\"></xref> that represents the type of the property."}],"pos":[61179,61256],"yaml":true},{"content":"Enables other objects to be notified when this property changes.","nodes":[{"pos":[0,64],"content":"Enables other objects to be notified when this property changes.","nodes":[{"content":"Enables other objects to be notified when this property changes.","pos":[0,64]}]}],"pos":[62822,62887],"yaml":true},{"content":"The component to remove the handler for.","nodes":[{"pos":[0,40],"content":"The component to remove the handler for.","nodes":[{"content":"The component to remove the handler for.","pos":[0,40]}]}],"pos":[63072,63113],"yaml":true},{"content":"The delegate to remove as a listener.","nodes":[{"pos":[0,37],"content":"The delegate to remove as a listener.","nodes":[{"content":"The delegate to remove as a listener.","pos":[0,37]}]}],"pos":[63182,63220],"yaml":true},{"content":"<code>component</code> or <code>handler</code> is `null`.","nodes":[{"pos":[0,57],"content":"<ph id=\"ph1\">&lt;code&gt;component&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;handler&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>component</code> or <code>handler</code> is `null`."}],"pos":[63409,63467],"yaml":true},{"content":"When overridden in a derived class, resets the value for this property of the component to the default value.","nodes":[{"pos":[0,109],"content":"When overridden in a derived class, resets the value for this property of the component to the default value.","nodes":[{"content":"When overridden in a derived class, resets the value for this property of the component to the default value.","pos":[0,109]}]}],"pos":[64799,64909],"yaml":true},{"content":"Typically, this method is implemented through reflection.  \n  \n This method determines the value to reset the property to in the following order of precedence:  \n  \n1.  There is a shadowed property for this property.  \n  \n2.  There is a <xref:System.ComponentModel.DefaultValueAttribute> for this property.  \n  \n3.  There is a \"ResetMyProperty\" method that you have implemented, where \"MyProperty\" is the name of the property you pass to it.  \n  \n This method creates a <xref:System.ComponentModel.Design.DesignerTransaction> automatically in the following order:  \n  \n1.  The method calls the <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=fullName> method to create a new <xref:System.ComponentModel.Design.DesignerTransaction> to represent the changes.  \n  \n2.  The method calls the <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=fullName> method to indicate that the transaction has begun and the changes are about to occur.  \n  \n3.  The method resets the property to the value determined by this method's checking order.  \n  \n4.  The method calls the <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=fullName> method to indicate that the changes have occurred.  \n  \n5.  The method calls <xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=fullName> to indicate that the transaction is completed.  \n  \n The purpose of the transaction is to support `Undo` and `Redo` functionality.","nodes":[{"pos":[0,57],"content":"Typically, this method is implemented through reflection.","nodes":[{"content":"Typically, this method is implemented through reflection.","pos":[0,57]}]},{"pos":[64,159],"content":"This method determines the value to reset the property to in the following order of precedence:","nodes":[{"content":"This method determines the value to reset the property to in the following order of precedence:","pos":[0,95]}]},{"pos":[169,216],"content":"There is a shadowed property for this property.","nodes":[{"content":"There is a shadowed property for this property.","pos":[0,47]}]},{"pos":[226,306],"content":"There is a <xref:System.ComponentModel.DefaultValueAttribute> for this property.","nodes":[{"content":"There is a <ph id=\"ph1\">&lt;xref:System.ComponentModel.DefaultValueAttribute&gt;</ph> for this property.","pos":[0,80],"source":"There is a <xref:System.ComponentModel.DefaultValueAttribute> for this property."}]},{"pos":[316,441],"content":"There is a \"ResetMyProperty\" method that you have implemented, where \"MyProperty\" is the name of the property you pass to it.","nodes":[{"content":"There is a \"ResetMyProperty\" method that you have implemented, where \"MyProperty\" is the name of the property you pass to it.","pos":[0,125]}]},{"pos":[448,563],"content":"This method creates a <xref:System.ComponentModel.Design.DesignerTransaction> automatically in the following order:","nodes":[{"content":"This method creates a <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph> automatically in the following order:","pos":[0,115],"source":"This method creates a <xref:System.ComponentModel.Design.DesignerTransaction> automatically in the following order:"}]},{"pos":[573,794],"content":"The method calls the <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=fullName> method to create a new <xref:System.ComponentModel.Design.DesignerTransaction> to represent the changes.","nodes":[{"content":"The method calls the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=fullName&gt;</ph> method to create a new <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph> to represent the changes.","pos":[0,221],"source":"The method calls the <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=fullName> method to create a new <xref:System.ComponentModel.Design.DesignerTransaction> to represent the changes."}]},{"pos":[804,1018],"content":"The method calls the <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=fullName> method to indicate that the transaction has begun and the changes are about to occur.","nodes":[{"content":"The method calls the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=fullName&gt;</ph> method to indicate that the transaction has begun and the changes are about to occur.","pos":[0,214],"source":"The method calls the <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=fullName> method to indicate that the transaction has begun and the changes are about to occur."}]},{"pos":[1028,1115],"content":"The method resets the property to the value determined by this method's checking order.","nodes":[{"content":"The method resets the property to the value determined by this method's checking order.","pos":[0,87]}]},{"pos":[1125,1303],"content":"The method calls the <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=fullName> method to indicate that the changes have occurred.","nodes":[{"content":"The method calls the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=fullName&gt;</ph> method to indicate that the changes have occurred.","pos":[0,178],"source":"The method calls the <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=fullName> method to indicate that the changes have occurred."}]},{"pos":[1313,1467],"content":"The method calls <xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=fullName> to indicate that the transaction is completed.","nodes":[{"content":"The method calls <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=fullName&gt;</ph> to indicate that the transaction is completed.","pos":[0,154],"source":"The method calls <xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=fullName> to indicate that the transaction is completed."}]},{"pos":[1474,1551],"content":"The purpose of the transaction is to support <ph id=\"ph1\">`Undo`</ph> and <ph id=\"ph2\">`Redo`</ph> functionality.","source":"The purpose of the transaction is to support `Undo` and `Redo` functionality."}],"pos":[64920,66500],"yaml":true,"extradata":"MT"},{"content":"The component with the property value that is to be reset to the default value.","nodes":[{"pos":[0,79],"content":"The component with the property value that is to be reset to the default value.","nodes":[{"content":"The component with the property value that is to be reset to the default value.","pos":[0,79]}]}],"pos":[66656,66736],"yaml":true},{"content":"Gets a value indicating whether this property should be serialized, as specified in the <xref href=\"System.ComponentModel.DesignerSerializationVisibilityAttribute\"></xref>.","nodes":[{"pos":[0,172],"content":"Gets a value indicating whether this property should be serialized, as specified in the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.DesignerSerializationVisibilityAttribute\"&gt;&lt;/xref&gt;</ph>.","source":"Gets a value indicating whether this property should be serialized, as specified in the <xref href=\"System.ComponentModel.DesignerSerializationVisibilityAttribute\"></xref>."}],"pos":[68161,68334],"yaml":true},{"content":"One of the <xref href=\"System.ComponentModel.DesignerSerializationVisibility\"></xref> enumeration values that specifies whether this property should be serialized.","nodes":[{"pos":[0,163],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.DesignerSerializationVisibility\"&gt;&lt;/xref&gt;</ph> enumeration values that specifies whether this property should be serialized.","source":"One of the <xref href=\"System.ComponentModel.DesignerSerializationVisibility\"></xref> enumeration values that specifies whether this property should be serialized."}],"pos":[68548,68712],"yaml":true},{"content":"When overridden in a derived class, sets the value of the component to a different value.","nodes":[{"pos":[0,89],"content":"When overridden in a derived class, sets the value of the component to a different value.","nodes":[{"content":"When overridden in a derived class, sets the value of the component to a different value.","pos":[0,89]}]}],"pos":[70193,70283],"yaml":true},{"content":"Typically, this method is implemented through reflection.  \n  \n This method creates a <xref:System.ComponentModel.Design.DesignerTransaction> automatically in the following order:  \n  \n1.  The method calls the <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=fullName> method to create a new <xref:System.ComponentModel.Design.DesignerTransaction> to represent the changes.  \n  \n2.  The method calls the <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=fullName> method to indicate that the transaction has begun and the changes are about to occur.  \n  \n3.  The method resets the property to the value determined by this method's checking order.  \n  \n4.  The method calls the <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=fullName> method to indicate that the changes have occurred.  \n  \n5.  The method calls <xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=fullName> to indicate that the transaction is complete.  \n  \n The purpose of the transaction is to support `Undo` and `Redo` functionality.","nodes":[{"pos":[0,57],"content":"Typically, this method is implemented through reflection.","nodes":[{"content":"Typically, this method is implemented through reflection.","pos":[0,57]}]},{"pos":[64,179],"content":"This method creates a <xref:System.ComponentModel.Design.DesignerTransaction> automatically in the following order:","nodes":[{"content":"This method creates a <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph> automatically in the following order:","pos":[0,115],"source":"This method creates a <xref:System.ComponentModel.Design.DesignerTransaction> automatically in the following order:"}]},{"pos":[189,410],"content":"The method calls the <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=fullName> method to create a new <xref:System.ComponentModel.Design.DesignerTransaction> to represent the changes.","nodes":[{"content":"The method calls the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=fullName&gt;</ph> method to create a new <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph> to represent the changes.","pos":[0,221],"source":"The method calls the <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=fullName> method to create a new <xref:System.ComponentModel.Design.DesignerTransaction> to represent the changes."}]},{"pos":[420,634],"content":"The method calls the <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=fullName> method to indicate that the transaction has begun and the changes are about to occur.","nodes":[{"content":"The method calls the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=fullName&gt;</ph> method to indicate that the transaction has begun and the changes are about to occur.","pos":[0,214],"source":"The method calls the <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=fullName> method to indicate that the transaction has begun and the changes are about to occur."}]},{"pos":[644,731],"content":"The method resets the property to the value determined by this method's checking order.","nodes":[{"content":"The method resets the property to the value determined by this method's checking order.","pos":[0,87]}]},{"pos":[741,919],"content":"The method calls the <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=fullName> method to indicate that the changes have occurred.","nodes":[{"content":"The method calls the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=fullName&gt;</ph> method to indicate that the changes have occurred.","pos":[0,178],"source":"The method calls the <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=fullName> method to indicate that the changes have occurred."}]},{"pos":[929,1082],"content":"The method calls <xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=fullName> to indicate that the transaction is complete.","nodes":[{"content":"The method calls <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=fullName&gt;</ph> to indicate that the transaction is complete.","pos":[0,153],"source":"The method calls <xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=fullName> to indicate that the transaction is complete."}]},{"pos":[1089,1166],"content":"The purpose of the transaction is to support <ph id=\"ph1\">`Undo`</ph> and <ph id=\"ph2\">`Redo`</ph> functionality.","source":"The purpose of the transaction is to support `Undo` and `Redo` functionality."}],"pos":[70294,71477],"yaml":true,"extradata":"MT"},{"content":"The component with the property value that is to be set.","nodes":[{"pos":[0,56],"content":"The component with the property value that is to be set.","nodes":[{"content":"The component with the property value that is to be set.","pos":[0,56]}]}],"pos":[71645,71702],"yaml":true},{"content":"The new value.","nodes":[{"pos":[0,14],"content":"The new value.","nodes":[{"content":"The new value.","pos":[0,14]}]}],"pos":[71763,71778],"yaml":true},{"content":"When overridden in a derived class, determines a value indicating whether the value of this property needs to be persisted.","nodes":[{"pos":[0,123],"content":"When overridden in a derived class, determines a value indicating whether the value of this property needs to be persisted.","nodes":[{"content":"When overridden in a derived class, determines a value indicating whether the value of this property needs to be persisted.","pos":[0,123]}]}],"pos":[73250,73374],"yaml":true},{"content":"Typically, this method is implemented through reflection.","nodes":[{"pos":[0,57],"content":"Typically, this method is implemented through reflection.","nodes":[{"content":"Typically, this method is implemented through reflection.","pos":[0,57]}]}],"pos":[73385,73443],"yaml":true,"extradata":"MT"},{"content":"The component with the property to be examined for persistence.","nodes":[{"pos":[0,63],"content":"The component with the property to be examined for persistence.","nodes":[{"content":"The component with the property to be examined for persistence.","pos":[0,63]}]}],"pos":[73609,73673],"yaml":true},{"content":"`true` if the property should be persisted; otherwise, `false`.","nodes":[{"pos":[0,63],"content":"<ph id=\"ph1\">`true`</ph> if the property should be persisted; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the property should be persisted; otherwise, `false`."}],"pos":[73731,73797],"yaml":true},{"content":"Gets a value indicating whether value change notifications for this property may originate from outside the property descriptor.","nodes":[{"pos":[0,128],"content":"Gets a value indicating whether value change notifications for this property may originate from outside the property descriptor.","nodes":[{"content":"Gets a value indicating whether value change notifications for this property may originate from outside the property descriptor.","pos":[0,128]}]}],"pos":[75214,75343],"yaml":true},{"content":"The <xref:System.ComponentModel.PropertyDescriptor.SupportsChangeEvents%2A> property indicates whether value change notifications for this property may originate from outside the property descriptor, such as from the component itself, or whether notifications will only originate from direct calls made to the <xref:System.ComponentModel.PropertyDescriptor.SetValue%2A> method. For example, the component may implement the <xref:System.ComponentModel.INotifyPropertyChanged> interface, or may have an explicit `name.Changed` event for this property.","nodes":[{"pos":[0,549],"content":"The <xref:System.ComponentModel.PropertyDescriptor.SupportsChangeEvents%2A> property indicates whether value change notifications for this property may originate from outside the property descriptor, such as from the component itself, or whether notifications will only originate from direct calls made to the <xref:System.ComponentModel.PropertyDescriptor.SetValue%2A> method. For example, the component may implement the <xref:System.ComponentModel.INotifyPropertyChanged> interface, or may have an explicit `name.Changed` event for this property.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.PropertyDescriptor.SupportsChangeEvents%2A&gt;</ph> property indicates whether value change notifications for this property may originate from outside the property descriptor, such as from the component itself, or whether notifications will only originate from direct calls made to the <ph id=\"ph2\">&lt;xref:System.ComponentModel.PropertyDescriptor.SetValue%2A&gt;</ph> method.","pos":[0,377],"source":"The <xref:System.ComponentModel.PropertyDescriptor.SupportsChangeEvents%2A> property indicates whether value change notifications for this property may originate from outside the property descriptor, such as from the component itself, or whether notifications will only originate from direct calls made to the <xref:System.ComponentModel.PropertyDescriptor.SetValue%2A> method."},{"content":"For example, the component may implement the <ph id=\"ph1\">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph> interface, or may have an explicit <ph id=\"ph2\">`name.Changed`</ph> event for this property.","pos":[378,549],"source":" For example, the component may implement the <xref:System.ComponentModel.INotifyPropertyChanged> interface, or may have an explicit `name.Changed` event for this property."}]}],"pos":[75354,75904],"yaml":true,"extradata":"MT"},{"content":"`true` if value change notifications may originate from outside the property descriptor; otherwise, `false`.","nodes":[{"pos":[0,108],"content":"<ph id=\"ph1\">`true`</ph> if value change notifications may originate from outside the property descriptor; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if value change notifications may originate from outside the property descriptor; otherwise, `false`."}],"pos":[76035,76146],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.PropertyDescriptor\n  commentId: T:System.ComponentModel.PropertyDescriptor\n  id: PropertyDescriptor\n  children:\n  - System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor)\n  - System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])\n  - System.ComponentModel.PropertyDescriptor.#ctor(System.String,System.Attribute[])\n  - System.ComponentModel.PropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)\n  - System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)\n  - System.ComponentModel.PropertyDescriptor.ComponentType\n  - System.ComponentModel.PropertyDescriptor.Converter\n  - System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)\n  - System.ComponentModel.PropertyDescriptor.Equals(System.Object)\n  - System.ComponentModel.PropertyDescriptor.FillAttributes(System.Collections.IList)\n  - System.ComponentModel.PropertyDescriptor.GetChildProperties\n  - System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])\n  - System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)\n  - System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])\n  - System.ComponentModel.PropertyDescriptor.GetEditor(System.Type)\n  - System.ComponentModel.PropertyDescriptor.GetHashCode\n  - System.ComponentModel.PropertyDescriptor.GetInvocationTarget(System.Type,System.Object)\n  - System.ComponentModel.PropertyDescriptor.GetTypeFromName(System.String)\n  - System.ComponentModel.PropertyDescriptor.GetValue(System.Object)\n  - System.ComponentModel.PropertyDescriptor.GetValueChangedHandler(System.Object)\n  - System.ComponentModel.PropertyDescriptor.IsLocalizable\n  - System.ComponentModel.PropertyDescriptor.IsReadOnly\n  - System.ComponentModel.PropertyDescriptor.OnValueChanged(System.Object,System.EventArgs)\n  - System.ComponentModel.PropertyDescriptor.PropertyType\n  - System.ComponentModel.PropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)\n  - System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)\n  - System.ComponentModel.PropertyDescriptor.SerializationVisibility\n  - System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)\n  - System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)\n  - System.ComponentModel.PropertyDescriptor.SupportsChangeEvents\n  langs:\n  - csharp\n  name: PropertyDescriptor\n  nameWithType: PropertyDescriptor\n  fullName: System.ComponentModel.PropertyDescriptor\n  type: Class\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Provides an abstraction of a property on a class.\n  remarks: \"A description of a property consists of a name, its attributes, the component class that the property is associated with, and the type of the property.  \\n  \\n <xref:System.ComponentModel.PropertyDescriptor> provides the following properties and methods:  \\n  \\n-   <xref:System.ComponentModel.PropertyDescriptor.Converter%2A> contains the <xref:System.ComponentModel.TypeConverter> for this property.  \\n  \\n-   <xref:System.ComponentModel.PropertyDescriptor.IsLocalizable%2A> indicates whether this property should be localized.  \\n  \\n-   <xref:System.ComponentModel.PropertyDescriptor.GetEditor%2A> returns an editor of the specified type.  \\n  \\n <xref:System.ComponentModel.PropertyDescriptor> also provides the following `abstract` properties and methods:  \\n  \\n-   <xref:System.ComponentModel.PropertyDescriptor.ComponentType%2A> contains the type of component this property is bound to.  \\n  \\n-   <xref:System.ComponentModel.PropertyDescriptor.IsReadOnly%2A> indicates whether this property is read-only.  \\n  \\n-   <xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A> gets the type of the property.  \\n  \\n-   <xref:System.ComponentModel.PropertyDescriptor.CanResetValue%2A> indicates whether resetting the component changes the value of the component.  \\n  \\n-   <xref:System.ComponentModel.PropertyDescriptor.GetValue%2A> returns the current value of the property on a component.  \\n  \\n-   <xref:System.ComponentModel.PropertyDescriptor.ResetValue%2A> resets the value for this property of the component.  \\n  \\n-   <xref:System.ComponentModel.PropertyDescriptor.SetValue%2A> sets the value of the component to a different value.  \\n  \\n-   <xref:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue%2A> indicates whether the value of this property needs to be persisted.  \\n  \\n Typically, the `abstract` members are implemented through reflection. For more information about reflection, see the topics in [Reflection](~/docs/framework/reflection-and-codedom/reflection.md).\"\n  example:\n  - \"The following code example is built upon the example in the <xref:System.ComponentModel.PropertyDescriptorCollection> class. It prints the information (category, description, display name) of the text of a button in a text box. It assumes that `button1` and `textbox1` have been instantiated on a form.  \\n  \\n [!code-cpp[PropertyDescriptor#1](~/samples/snippets/cpp/VS_Snippets_Winforms/PropertyDescriptor/CPP/propertydescriptor.cpp#1)]\\n [!code-csharp[PropertyDescriptor#1](~/samples/snippets/csharp/VS_Snippets_Winforms/PropertyDescriptor/CS/propertydescriptor.cs#1)]\\n [!code-vb[PropertyDescriptor#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PropertyDescriptor/VB/propertydescriptor.vb#1)]  \\n  \\n The following code example shows how to implement a custom property descriptor that provides a read-only wrapper around a property. The `SerializeReadOnlyPropertyDescriptor` is used in a custom designer to provide a read-only property descriptor for the control's <xref:System.Windows.Forms.Control.Size%2A> property.  \\n  \\n [!code-csharp[System.ComponentModel.PropertyDescriptor#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.PropertyDescriptor/CS/SerializeReadOnlyPropertyDescriptor.cs#1)]\\n [!code-vb[System.ComponentModel.PropertyDescriptor#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.PropertyDescriptor/VB/SerializeReadOnlyPropertyDescriptor.vb#1)]  \\n  \\n The following code examples show how to use the The `SerializeReadOnlyPropertyDescriptor` in a custom designer.  \\n  \\n [!code-csharp[System.ComponentModel.PropertyDescriptor#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.PropertyDescriptor/CS/DemoControlDesigner.cs#10)]\\n [!code-vb[System.ComponentModel.PropertyDescriptor#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.PropertyDescriptor/VB/DemoControlDesigner.vb#10)]  \\n[!code-csharp[System.ComponentModel.PropertyDescriptor#100](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.PropertyDescriptor/CS/DemoControl.cs#100)]\\n[!code-vb[System.ComponentModel.PropertyDescriptor#100](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.PropertyDescriptor/VB/DemoControl.vb#100)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public abstract class PropertyDescriptor : System.ComponentModel.MemberDescriptor\n  inheritance:\n  - System.Object\n  - System.ComponentModel.MemberDescriptor\n  derivedClasses:\n  - System.ComponentModel.DependencyPropertyDescriptor\n  - System.ComponentModel.TypeConverter.SimplePropertyDescriptor\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.MemberDescriptor.AttributeArray\n  - System.ComponentModel.MemberDescriptor.Attributes\n  - System.ComponentModel.MemberDescriptor.Category\n  - System.ComponentModel.MemberDescriptor.CreateAttributeCollection\n  - System.ComponentModel.MemberDescriptor.Description\n  - System.ComponentModel.MemberDescriptor.DesignTimeOnly\n  - System.ComponentModel.MemberDescriptor.DisplayName\n  - System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type)\n  - System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type,System.Boolean)\n  - System.ComponentModel.MemberDescriptor.GetInvokee(System.Type,System.Object)\n  - System.ComponentModel.MemberDescriptor.GetSite(System.Object)\n  - System.ComponentModel.MemberDescriptor.IsBrowsable\n  - System.ComponentModel.MemberDescriptor.Name\n  - System.ComponentModel.MemberDescriptor.NameHashCode\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PropertyDescriptor.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor)\n  commentId: M:System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor)\n  id: '#ctor(System.ComponentModel.MemberDescriptor)'\n  parent: System.ComponentModel.PropertyDescriptor\n  langs:\n  - csharp\n  name: PropertyDescriptor(MemberDescriptor)\n  nameWithType: PropertyDescriptor.PropertyDescriptor(MemberDescriptor)\n  fullName: PropertyDescriptor.PropertyDescriptor(MemberDescriptor)\n  type: Constructor\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> class with the name and attributes in the specified <xref href=\"System.ComponentModel.MemberDescriptor\"></xref>.\n  syntax:\n    content: protected PropertyDescriptor (System.ComponentModel.MemberDescriptor descr);\n    parameters:\n    - id: descr\n      type: System.ComponentModel.MemberDescriptor\n      description: A <xref href=\"System.ComponentModel.MemberDescriptor\"></xref> that contains the name of the property and its attributes.\n  overload: System.ComponentModel.PropertyDescriptor.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PropertyDescriptor.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])\n  commentId: M:System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])\n  id: '#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])'\n  parent: System.ComponentModel.PropertyDescriptor\n  langs:\n  - csharp\n  name: PropertyDescriptor(MemberDescriptor, Attribute[])\n  nameWithType: PropertyDescriptor.PropertyDescriptor(MemberDescriptor, Attribute[])\n  fullName: PropertyDescriptor.PropertyDescriptor(MemberDescriptor, Attribute[])\n  type: Constructor\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> class with the name in the specified <xref href=\"System.ComponentModel.MemberDescriptor\"></xref> and the attributes in both the <xref href=\"System.ComponentModel.MemberDescriptor\"></xref> and the <xref href=\"System.Attribute\"></xref> array.\n  remarks: This constructor appends the attributes in the <xref:System.Attribute> array to the attributes in the <xref:System.ComponentModel.MemberDescriptor>.\n  syntax:\n    content: protected PropertyDescriptor (System.ComponentModel.MemberDescriptor descr, Attribute[] attrs);\n    parameters:\n    - id: descr\n      type: System.ComponentModel.MemberDescriptor\n      description: A <xref href=\"System.ComponentModel.MemberDescriptor\"></xref> containing the name of the member and its attributes.\n    - id: attrs\n      type: System.Attribute[]\n      description: An <xref href=\"System.Attribute\"></xref> array containing the attributes you want to associate with the property.\n  overload: System.ComponentModel.PropertyDescriptor.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PropertyDescriptor.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.PropertyDescriptor.#ctor(System.String,System.Attribute[])\n  commentId: M:System.ComponentModel.PropertyDescriptor.#ctor(System.String,System.Attribute[])\n  id: '#ctor(System.String,System.Attribute[])'\n  parent: System.ComponentModel.PropertyDescriptor\n  langs:\n  - csharp\n  name: PropertyDescriptor(String, Attribute[])\n  nameWithType: PropertyDescriptor.PropertyDescriptor(String, Attribute[])\n  fullName: PropertyDescriptor.PropertyDescriptor(String, Attribute[])\n  type: Constructor\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> class with the specified name and attributes.\n  syntax:\n    content: protected PropertyDescriptor (string name, Attribute[] attrs);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the property.\n    - id: attrs\n      type: System.Attribute[]\n      description: An array of type <xref href=\"System.Attribute\"></xref> that contains the property attributes.\n  overload: System.ComponentModel.PropertyDescriptor.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PropertyDescriptor.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.PropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)\n  commentId: M:System.ComponentModel.PropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)\n  id: AddValueChanged(System.Object,System.EventHandler)\n  parent: System.ComponentModel.PropertyDescriptor\n  langs:\n  - csharp\n  name: AddValueChanged(Object, EventHandler)\n  nameWithType: PropertyDescriptor.AddValueChanged(Object, EventHandler)\n  fullName: PropertyDescriptor.AddValueChanged(Object, EventHandler)\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Enables other objects to be notified when this property changes.\n  syntax:\n    content: public virtual void AddValueChanged (object component, EventHandler handler);\n    parameters:\n    - id: component\n      type: System.Object\n      description: The component to add the handler for.\n    - id: handler\n      type: System.EventHandler\n      description: The delegate to add as a listener.\n  overload: System.ComponentModel.PropertyDescriptor.AddValueChanged*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>component</code> or <code>handler</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PropertyDescriptor.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)\n  commentId: M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)\n  id: CanResetValue(System.Object)\n  parent: System.ComponentModel.PropertyDescriptor\n  langs:\n  - csharp\n  name: CanResetValue(Object)\n  nameWithType: PropertyDescriptor.CanResetValue(Object)\n  fullName: PropertyDescriptor.CanResetValue(Object)\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: When overridden in a derived class, returns whether resetting an object changes its value.\n  remarks: Typically, this method is implemented through reflection.\n  syntax:\n    content: public abstract bool CanResetValue (object component);\n    parameters:\n    - id: component\n      type: System.Object\n      description: The component to test for reset capability.\n    return:\n      type: System.Boolean\n      description: '`true` if resetting the component changes its value; otherwise, `false`.'\n  overload: System.ComponentModel.PropertyDescriptor.CanResetValue*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PropertyDescriptor.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.PropertyDescriptor.ComponentType\n  commentId: P:System.ComponentModel.PropertyDescriptor.ComponentType\n  id: ComponentType\n  parent: System.ComponentModel.PropertyDescriptor\n  langs:\n  - csharp\n  name: ComponentType\n  nameWithType: PropertyDescriptor.ComponentType\n  fullName: PropertyDescriptor.ComponentType\n  type: Property\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: When overridden in a derived class, gets the type of the component this property is bound to.\n  remarks: Typically, this property is implemented through reflection.\n  syntax:\n    content: public abstract Type ComponentType { get; }\n    return:\n      type: System.Type\n      description: A <xref href=\"System.Type\"></xref> that represents the type of component this property is bound to. When the <xref href=\"System.ComponentModel.PropertyDescriptor.GetValue(System.Object)\"></xref> or <xref href=\"System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)\"></xref> methods are invoked, the object specified might be an instance of this type.\n  overload: System.ComponentModel.PropertyDescriptor.ComponentType*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PropertyDescriptor.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.PropertyDescriptor.Converter\n  commentId: P:System.ComponentModel.PropertyDescriptor.Converter\n  id: Converter\n  parent: System.ComponentModel.PropertyDescriptor\n  langs:\n  - csharp\n  name: Converter\n  nameWithType: PropertyDescriptor.Converter\n  fullName: PropertyDescriptor.Converter\n  type: Property\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Gets the type converter for this property.\n  syntax:\n    content: public virtual System.ComponentModel.TypeConverter Converter { get; }\n    return:\n      type: System.ComponentModel.TypeConverter\n      description: A <xref href=\"System.ComponentModel.TypeConverter\"></xref> that is used to convert the <xref href=\"System.Type\"></xref> of this property.\n  overload: System.ComponentModel.PropertyDescriptor.Converter*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PropertyDescriptor.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)\n  commentId: M:System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)\n  id: CreateInstance(System.Type)\n  parent: System.ComponentModel.PropertyDescriptor\n  langs:\n  - csharp\n  name: CreateInstance(Type)\n  nameWithType: PropertyDescriptor.CreateInstance(Type)\n  fullName: PropertyDescriptor.CreateInstance(Type)\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Creates an instance of the specified type.\n  remarks: \"<xref:System.ComponentModel.PropertyDescriptor.CreateInstance%2A> looks for a constructor that takes the specified type. If it finds a constructor, the type of the property is passed in.  \\n  \\n Converters and editors use this method to create versions of a component. This method enables a single component to be reused for more than one type.\"\n  syntax:\n    content: protected object CreateInstance (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: A <xref href=\"System.Type\"></xref> that represents the type to create.\n    return:\n      type: System.Object\n      description: A new instance of the type.\n  overload: System.ComponentModel.PropertyDescriptor.CreateInstance*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PropertyDescriptor.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.PropertyDescriptor.Equals(System.Object)\n  commentId: M:System.ComponentModel.PropertyDescriptor.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.ComponentModel.PropertyDescriptor\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: PropertyDescriptor.Equals(Object)\n  fullName: PropertyDescriptor.Equals(Object)\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Compares this to another object to see if they are equivalent.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object to compare to this <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref>.\n    return:\n      type: System.Boolean\n      description: '`true` if the values are equivalent; otherwise, `false`.'\n  overload: System.ComponentModel.PropertyDescriptor.Equals*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PropertyDescriptor.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.PropertyDescriptor.FillAttributes(System.Collections.IList)\n  commentId: M:System.ComponentModel.PropertyDescriptor.FillAttributes(System.Collections.IList)\n  id: FillAttributes(System.Collections.IList)\n  parent: System.ComponentModel.PropertyDescriptor\n  langs:\n  - csharp\n  name: FillAttributes(IList)\n  nameWithType: PropertyDescriptor.FillAttributes(IList)\n  fullName: PropertyDescriptor.FillAttributes(IList)\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Adds the attributes of the <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref> to the specified list of attributes in the parent class.\n  remarks: For duplicate attributes, the last one added to the list will be kept.\n  syntax:\n    content: protected override void FillAttributes (System.Collections.IList attributeList);\n    parameters:\n    - id: attributeList\n      type: System.Collections.IList\n      description: An <xref href=\"System.Collections.IList\"></xref> that lists the attributes in the parent class. Initially, this is empty.\n  overload: System.ComponentModel.PropertyDescriptor.FillAttributes*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PropertyDescriptor.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.PropertyDescriptor.GetChildProperties\n  commentId: M:System.ComponentModel.PropertyDescriptor.GetChildProperties\n  id: GetChildProperties\n  parent: System.ComponentModel.PropertyDescriptor\n  langs:\n  - csharp\n  name: GetChildProperties()\n  nameWithType: PropertyDescriptor.GetChildProperties()\n  fullName: PropertyDescriptor.GetChildProperties()\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Returns the default <xref href=\"System.ComponentModel.PropertyDescriptorCollection\"></xref>.\n  remarks: \"This method passes `null` for both the `instance` parameter and the `filter` parameter.  \\n  \\n The properties for the `instance` parameter can differ from the properties of a class, because the container can add or remove properties if the `instance` parameter is sited.  \\n  \\n The `filter` parameter can mix <xref:System.Type> and <xref:System.Attribute> objects. Filtering is defined by the following rules:  \\n  \\n-   A <xref:System.Type> object is treated as a wildcard; it matches any property that has the <xref:System.Type> in its set of attributes.  \\n  \\n-   If a property does not have an <xref:System.Attribute> of the same class, the property will not be included in the returned array.  \\n  \\n-   If the attribute is an instance of <xref:System.Attribute>, the property must be an exact match to be included in the returned array.  \\n  \\n-   If you specify an <xref:System.Attribute> and it is the default property, it will be included in the returned array, even if there is no instance of <xref:System.Attribute> in the property.\"\n  syntax:\n    content: public System.ComponentModel.PropertyDescriptorCollection GetChildProperties ();\n    parameters: []\n    return:\n      type: System.ComponentModel.PropertyDescriptorCollection\n      description: A collection of property descriptor.\n  overload: System.ComponentModel.PropertyDescriptor.GetChildProperties*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PropertyDescriptor.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])\n  commentId: M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])\n  id: GetChildProperties(System.Attribute[])\n  parent: System.ComponentModel.PropertyDescriptor\n  langs:\n  - csharp\n  name: GetChildProperties(Attribute[])\n  nameWithType: PropertyDescriptor.GetChildProperties(Attribute[])\n  fullName: PropertyDescriptor.GetChildProperties(Attribute[])\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Returns a <xref href=\"System.ComponentModel.PropertyDescriptorCollection\"></xref> using a specified array of attributes as a filter.\n  remarks: \"This method passes `null` for the `instance` parameter.  \\n  \\n The properties for the `instance` parameter can differ from the properties of a class, because the site can add or remove properties if the `instance` parameter is sited.  \\n  \\n The `filter` parameter can mix <xref:System.Type> and <xref:System.Attribute> objects. Filtering is defined by the following rules:  \\n  \\n-   A <xref:System.Type> object is treated as a wildcard; it matches any property that has the <xref:System.Type> in its set of attributes.  \\n  \\n-   If a property does not have an <xref:System.Attribute> of the same class, the property will not be included in the returned array.  \\n  \\n-   If the attribute is an instance of <xref:System.Attribute>, the property must be an exact match to be included in the returned array.  \\n  \\n-   If you specify an <xref:System.Attribute> instance and it is the default property, it will be included in the returned array even if there is no instance of the <xref:System.Attribute> in the property.\"\n  syntax:\n    content: public System.ComponentModel.PropertyDescriptorCollection GetChildProperties (Attribute[] filter);\n    parameters:\n    - id: filter\n      type: System.Attribute[]\n      description: An array of type <xref href=\"System.Attribute\"></xref> to use as a filter.\n    return:\n      type: System.ComponentModel.PropertyDescriptorCollection\n      description: A <xref href=\"System.ComponentModel.PropertyDescriptorCollection\"></xref> with the properties that match the specified attributes.\n  overload: System.ComponentModel.PropertyDescriptor.GetChildProperties*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PropertyDescriptor.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)\n  commentId: M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)\n  id: GetChildProperties(System.Object)\n  parent: System.ComponentModel.PropertyDescriptor\n  langs:\n  - csharp\n  name: GetChildProperties(Object)\n  nameWithType: PropertyDescriptor.GetChildProperties(Object)\n  fullName: PropertyDescriptor.GetChildProperties(Object)\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Returns a <xref href=\"System.ComponentModel.PropertyDescriptorCollection\"></xref> for a given object.\n  remarks: \"This method passes `null` for the `filter` parameter.  \\n  \\n The properties for the `instance` parameter can differ from the properties of a class, because the site can add or remove properties if the `instance` parameter is sited.  \\n  \\n The `filter` parameter can mix <xref:System.Type> and <xref:System.Attribute> objects. Filtering is defined by the following rules:  \\n  \\n-   A <xref:System.Type> object is treated as a wildcard; it matches any property that has the <xref:System.Type> in its set of attributes.  \\n  \\n-   If a property does not have an <xref:System.Attribute> of the same class, the property will not be included in the returned array.  \\n  \\n-   If the attribute is an instance of <xref:System.Attribute>, the property must be an exact match to be included in the returned array.  \\n  \\n-   If you specify an <xref:System.Attribute> instance and it is the default property, it will be included in the returned array even if there is no instance of the <xref:System.Attribute> in the property.\"\n  syntax:\n    content: public System.ComponentModel.PropertyDescriptorCollection GetChildProperties (object instance);\n    parameters:\n    - id: instance\n      type: System.Object\n      description: A component to get the properties for.\n    return:\n      type: System.ComponentModel.PropertyDescriptorCollection\n      description: A <xref href=\"System.ComponentModel.PropertyDescriptorCollection\"></xref> with the properties for the specified component.\n  overload: System.ComponentModel.PropertyDescriptor.GetChildProperties*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PropertyDescriptor.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])\n  commentId: M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])\n  id: GetChildProperties(System.Object,System.Attribute[])\n  parent: System.ComponentModel.PropertyDescriptor\n  langs:\n  - csharp\n  name: GetChildProperties(Object, Attribute[])\n  nameWithType: PropertyDescriptor.GetChildProperties(Object, Attribute[])\n  fullName: PropertyDescriptor.GetChildProperties(Object, Attribute[])\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Returns a <xref href=\"System.ComponentModel.PropertyDescriptorCollection\"></xref> for a given object using a specified array of attributes as a filter.\n  remarks: \"The properties for the `instance` parameter can differ from the properties of a class, because the site can add or remove properties if the `instance` parameter is sited.  \\n  \\n The `filter` parameter can mix <xref:System.Type> and <xref:System.Attribute> objects. Filtering is defined by the following rules:  \\n  \\n-   A <xref:System.Type> object is treated as a wildcard; it matches any property that has the <xref:System.Type> in its set of attributes.  \\n  \\n-   If a property does not have an <xref:System.Attribute> of the same class, the property will not be included in the returned array.  \\n  \\n-   If the attribute is an instance of <xref:System.Attribute>, the property must be an exact match to be included in the returned array.  \\n  \\n-   If you specify an <xref:System.Attribute> instance and it is the default property, it will be included in the returned array even if there is no instance of the <xref:System.Attribute> in the property.  \\n  \\n Generally, child properties should be returned by implementing the <xref:System.ComponentModel.TypeConverter.GetProperties%2A> member of the <xref:System.ComponentModel.TypeConverter> returned from this property.\"\n  syntax:\n    content: public virtual System.ComponentModel.PropertyDescriptorCollection GetChildProperties (object instance, Attribute[] filter);\n    parameters:\n    - id: instance\n      type: System.Object\n      description: A component to get the properties for.\n    - id: filter\n      type: System.Attribute[]\n      description: An array of type <xref href=\"System.Attribute\"></xref> to use as a filter.\n    return:\n      type: System.ComponentModel.PropertyDescriptorCollection\n      description: A <xref href=\"System.ComponentModel.PropertyDescriptorCollection\"></xref> with the properties that match the specified attributes for the specified component.\n  overload: System.ComponentModel.PropertyDescriptor.GetChildProperties*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PropertyDescriptor.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.PropertyDescriptor.GetEditor(System.Type)\n  commentId: M:System.ComponentModel.PropertyDescriptor.GetEditor(System.Type)\n  id: GetEditor(System.Type)\n  parent: System.ComponentModel.PropertyDescriptor\n  langs:\n  - csharp\n  name: GetEditor(Type)\n  nameWithType: PropertyDescriptor.GetEditor(Type)\n  fullName: PropertyDescriptor.GetEditor(Type)\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Gets an editor of the specified type.\n  syntax:\n    content: public virtual object GetEditor (Type editorBaseType);\n    parameters:\n    - id: editorBaseType\n      type: System.Type\n      description: The base type of editor, which is used to differentiate between multiple editors that a property supports.\n    return:\n      type: System.Object\n      description: An instance of the requested editor type, or `null` if an editor cannot be found.\n  overload: System.ComponentModel.PropertyDescriptor.GetEditor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PropertyDescriptor.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.PropertyDescriptor.GetHashCode\n  commentId: M:System.ComponentModel.PropertyDescriptor.GetHashCode\n  id: GetHashCode\n  parent: System.ComponentModel.PropertyDescriptor\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: PropertyDescriptor.GetHashCode()\n  fullName: PropertyDescriptor.GetHashCode()\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Returns the hash code for this object.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The hash code for this object.\n  overload: System.ComponentModel.PropertyDescriptor.GetHashCode*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PropertyDescriptor.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.PropertyDescriptor.GetInvocationTarget(System.Type,System.Object)\n  commentId: M:System.ComponentModel.PropertyDescriptor.GetInvocationTarget(System.Type,System.Object)\n  id: GetInvocationTarget(System.Type,System.Object)\n  parent: System.ComponentModel.PropertyDescriptor\n  langs:\n  - csharp\n  name: GetInvocationTarget(Type, Object)\n  nameWithType: PropertyDescriptor.GetInvocationTarget(Type, Object)\n  fullName: PropertyDescriptor.GetInvocationTarget(Type, Object)\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: This method returns the object that should be used during invocation of members.\n  remarks: Typically, the return value will be the same as the `instance` passed in. If someone associated another object with this instance, or if the instance is a custom type descriptor, the <xref:System.ComponentModel.PropertyDescriptor.GetInvocationTarget%2A> method may return a different value.\n  syntax:\n    content: protected override object GetInvocationTarget (Type type, object instance);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> of the invocation target.\n    - id: instance\n      type: System.Object\n      description: The potential invocation target.\n    return:\n      type: System.Object\n      description: The <xref href=\"System.Object\"></xref> that should be used during invocation of members.\n  overload: System.ComponentModel.PropertyDescriptor.GetInvocationTarget*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PropertyDescriptor.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.PropertyDescriptor.GetTypeFromName(System.String)\n  commentId: M:System.ComponentModel.PropertyDescriptor.GetTypeFromName(System.String)\n  id: GetTypeFromName(System.String)\n  parent: System.ComponentModel.PropertyDescriptor\n  langs:\n  - csharp\n  name: GetTypeFromName(String)\n  nameWithType: PropertyDescriptor.GetTypeFromName(String)\n  fullName: PropertyDescriptor.GetTypeFromName(String)\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Returns a type using its name.\n  remarks: To find the appropriate type, this method first checks the assembly of the type that this <xref:System.ComponentModel.PropertyDescriptor> references. If it does not find the type in the assembly, it calls <xref:System.Type.GetType%2A?displayProperty=fullName>.\n  syntax:\n    content: protected Type GetTypeFromName (string typeName);\n    parameters:\n    - id: typeName\n      type: System.String\n      description: The assembly-qualified name of the type to retrieve.\n    return:\n      type: System.Type\n      description: A <xref href=\"System.Type\"></xref> that matches the given type name, or `null` if a match cannot be found.\n  overload: System.ComponentModel.PropertyDescriptor.GetTypeFromName*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PropertyDescriptor.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.PropertyDescriptor.GetValue(System.Object)\n  commentId: M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)\n  id: GetValue(System.Object)\n  parent: System.ComponentModel.PropertyDescriptor\n  langs:\n  - csharp\n  name: GetValue(Object)\n  nameWithType: PropertyDescriptor.GetValue(Object)\n  fullName: PropertyDescriptor.GetValue(Object)\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: When overridden in a derived class, gets the current value of the property on a component.\n  remarks: \"Typically, this method is implemented through reflection.  \\n  \\n This method automatically calls the pre-change method, <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A>, and post-change method, <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A>, of the <xref:System.ComponentModel.Design.IComponentChangeService>.\"\n  syntax:\n    content: public abstract object GetValue (object component);\n    parameters:\n    - id: component\n      type: System.Object\n      description: The component with the property for which to retrieve the value.\n    return:\n      type: System.Object\n      description: The value of a property for a given component.\n  overload: System.ComponentModel.PropertyDescriptor.GetValue*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PropertyDescriptor.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.PropertyDescriptor.GetValueChangedHandler(System.Object)\n  commentId: M:System.ComponentModel.PropertyDescriptor.GetValueChangedHandler(System.Object)\n  id: GetValueChangedHandler(System.Object)\n  parent: System.ComponentModel.PropertyDescriptor\n  langs:\n  - csharp\n  name: GetValueChangedHandler(Object)\n  nameWithType: PropertyDescriptor.GetValueChangedHandler(Object)\n  fullName: PropertyDescriptor.GetValueChangedHandler(Object)\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Retrieves the current set of <code>ValueChanged</code> event handlers for a specific component\n  syntax:\n    content: protected EventHandler GetValueChangedHandler (object component);\n    parameters:\n    - id: component\n      type: System.Object\n      description: The component for which to retrieve event handlers.\n    return:\n      type: System.EventHandler\n      description: A combined multicast event handler, or `null` if no event handlers are currently assigned to <code>component</code>.\n  overload: System.ComponentModel.PropertyDescriptor.GetValueChangedHandler*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PropertyDescriptor.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.PropertyDescriptor.IsLocalizable\n  commentId: P:System.ComponentModel.PropertyDescriptor.IsLocalizable\n  id: IsLocalizable\n  parent: System.ComponentModel.PropertyDescriptor\n  langs:\n  - csharp\n  name: IsLocalizable\n  nameWithType: PropertyDescriptor.IsLocalizable\n  fullName: PropertyDescriptor.IsLocalizable\n  type: Property\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Gets a value indicating whether this property should be localized, as specified in the <xref href=\"System.ComponentModel.LocalizableAttribute\"></xref>.\n  remarks: When a property is marked with the <xref:System.ComponentModel.LocalizableAttribute> set to `true` and used in a visual designer, its values are saved in a resource file. If you mark a property with the attribute and then set the property in code, resource files are not used.\n  syntax:\n    content: public virtual bool IsLocalizable { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the member is marked with the <xref href=\"System.ComponentModel.LocalizableAttribute\"></xref> set to `true`; otherwise, `false`.'\n  overload: System.ComponentModel.PropertyDescriptor.IsLocalizable*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PropertyDescriptor.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.PropertyDescriptor.IsReadOnly\n  commentId: P:System.ComponentModel.PropertyDescriptor.IsReadOnly\n  id: IsReadOnly\n  parent: System.ComponentModel.PropertyDescriptor\n  langs:\n  - csharp\n  name: IsReadOnly\n  nameWithType: PropertyDescriptor.IsReadOnly\n  fullName: PropertyDescriptor.IsReadOnly\n  type: Property\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: When overridden in a derived class, gets a value indicating whether this property is read-only.\n  syntax:\n    content: public abstract bool IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the property is read-only; otherwise, `false`.'\n  overload: System.ComponentModel.PropertyDescriptor.IsReadOnly*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PropertyDescriptor.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.PropertyDescriptor.OnValueChanged(System.Object,System.EventArgs)\n  commentId: M:System.ComponentModel.PropertyDescriptor.OnValueChanged(System.Object,System.EventArgs)\n  id: OnValueChanged(System.Object,System.EventArgs)\n  parent: System.ComponentModel.PropertyDescriptor\n  langs:\n  - csharp\n  name: OnValueChanged(Object, EventArgs)\n  nameWithType: PropertyDescriptor.OnValueChanged(Object, EventArgs)\n  fullName: PropertyDescriptor.OnValueChanged(Object, EventArgs)\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Raises the <code>ValueChanged</code> event that you implemented.\n  remarks: This method should be called by your property descriptor implementation when the property value has changed.\n  syntax:\n    content: protected virtual void OnValueChanged (object component, EventArgs e);\n    parameters:\n    - id: component\n      type: System.Object\n      description: The object that raises the event.\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.ComponentModel.PropertyDescriptor.OnValueChanged*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PropertyDescriptor.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.PropertyDescriptor.PropertyType\n  commentId: P:System.ComponentModel.PropertyDescriptor.PropertyType\n  id: PropertyType\n  parent: System.ComponentModel.PropertyDescriptor\n  langs:\n  - csharp\n  name: PropertyType\n  nameWithType: PropertyDescriptor.PropertyType\n  fullName: PropertyDescriptor.PropertyType\n  type: Property\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: When overridden in a derived class, gets the type of the property.\n  remarks: Typically, this property is implemented through reflection.\n  syntax:\n    content: public abstract Type PropertyType { get; }\n    return:\n      type: System.Type\n      description: A <xref href=\"System.Type\"></xref> that represents the type of the property.\n  overload: System.ComponentModel.PropertyDescriptor.PropertyType*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PropertyDescriptor.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.PropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)\n  commentId: M:System.ComponentModel.PropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)\n  id: RemoveValueChanged(System.Object,System.EventHandler)\n  parent: System.ComponentModel.PropertyDescriptor\n  langs:\n  - csharp\n  name: RemoveValueChanged(Object, EventHandler)\n  nameWithType: PropertyDescriptor.RemoveValueChanged(Object, EventHandler)\n  fullName: PropertyDescriptor.RemoveValueChanged(Object, EventHandler)\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Enables other objects to be notified when this property changes.\n  syntax:\n    content: public virtual void RemoveValueChanged (object component, EventHandler handler);\n    parameters:\n    - id: component\n      type: System.Object\n      description: The component to remove the handler for.\n    - id: handler\n      type: System.EventHandler\n      description: The delegate to remove as a listener.\n  overload: System.ComponentModel.PropertyDescriptor.RemoveValueChanged*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>component</code> or <code>handler</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PropertyDescriptor.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)\n  commentId: M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)\n  id: ResetValue(System.Object)\n  parent: System.ComponentModel.PropertyDescriptor\n  langs:\n  - csharp\n  name: ResetValue(Object)\n  nameWithType: PropertyDescriptor.ResetValue(Object)\n  fullName: PropertyDescriptor.ResetValue(Object)\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: When overridden in a derived class, resets the value for this property of the component to the default value.\n  remarks: \"Typically, this method is implemented through reflection.  \\n  \\n This method determines the value to reset the property to in the following order of precedence:  \\n  \\n1.  There is a shadowed property for this property.  \\n  \\n2.  There is a <xref:System.ComponentModel.DefaultValueAttribute> for this property.  \\n  \\n3.  There is a \\\"ResetMyProperty\\\" method that you have implemented, where \\\"MyProperty\\\" is the name of the property you pass to it.  \\n  \\n This method creates a <xref:System.ComponentModel.Design.DesignerTransaction> automatically in the following order:  \\n  \\n1.  The method calls the <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=fullName> method to create a new <xref:System.ComponentModel.Design.DesignerTransaction> to represent the changes.  \\n  \\n2.  The method calls the <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=fullName> method to indicate that the transaction has begun and the changes are about to occur.  \\n  \\n3.  The method resets the property to the value determined by this method's checking order.  \\n  \\n4.  The method calls the <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=fullName> method to indicate that the changes have occurred.  \\n  \\n5.  The method calls <xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=fullName> to indicate that the transaction is completed.  \\n  \\n The purpose of the transaction is to support `Undo` and `Redo` functionality.\"\n  syntax:\n    content: public abstract void ResetValue (object component);\n    parameters:\n    - id: component\n      type: System.Object\n      description: The component with the property value that is to be reset to the default value.\n  overload: System.ComponentModel.PropertyDescriptor.ResetValue*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PropertyDescriptor.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.PropertyDescriptor.SerializationVisibility\n  commentId: P:System.ComponentModel.PropertyDescriptor.SerializationVisibility\n  id: SerializationVisibility\n  parent: System.ComponentModel.PropertyDescriptor\n  langs:\n  - csharp\n  name: SerializationVisibility\n  nameWithType: PropertyDescriptor.SerializationVisibility\n  fullName: PropertyDescriptor.SerializationVisibility\n  type: Property\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Gets a value indicating whether this property should be serialized, as specified in the <xref href=\"System.ComponentModel.DesignerSerializationVisibilityAttribute\"></xref>.\n  syntax:\n    content: public System.ComponentModel.DesignerSerializationVisibility SerializationVisibility { get; }\n    return:\n      type: System.ComponentModel.DesignerSerializationVisibility\n      description: One of the <xref href=\"System.ComponentModel.DesignerSerializationVisibility\"></xref> enumeration values that specifies whether this property should be serialized.\n  overload: System.ComponentModel.PropertyDescriptor.SerializationVisibility*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PropertyDescriptor.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)\n  commentId: M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)\n  id: SetValue(System.Object,System.Object)\n  parent: System.ComponentModel.PropertyDescriptor\n  langs:\n  - csharp\n  name: SetValue(Object, Object)\n  nameWithType: PropertyDescriptor.SetValue(Object, Object)\n  fullName: PropertyDescriptor.SetValue(Object, Object)\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: When overridden in a derived class, sets the value of the component to a different value.\n  remarks: \"Typically, this method is implemented through reflection.  \\n  \\n This method creates a <xref:System.ComponentModel.Design.DesignerTransaction> automatically in the following order:  \\n  \\n1.  The method calls the <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=fullName> method to create a new <xref:System.ComponentModel.Design.DesignerTransaction> to represent the changes.  \\n  \\n2.  The method calls the <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=fullName> method to indicate that the transaction has begun and the changes are about to occur.  \\n  \\n3.  The method resets the property to the value determined by this method's checking order.  \\n  \\n4.  The method calls the <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=fullName> method to indicate that the changes have occurred.  \\n  \\n5.  The method calls <xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=fullName> to indicate that the transaction is complete.  \\n  \\n The purpose of the transaction is to support `Undo` and `Redo` functionality.\"\n  syntax:\n    content: public abstract void SetValue (object component, object value);\n    parameters:\n    - id: component\n      type: System.Object\n      description: The component with the property value that is to be set.\n    - id: value\n      type: System.Object\n      description: The new value.\n  overload: System.ComponentModel.PropertyDescriptor.SetValue*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PropertyDescriptor.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)\n  commentId: M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)\n  id: ShouldSerializeValue(System.Object)\n  parent: System.ComponentModel.PropertyDescriptor\n  langs:\n  - csharp\n  name: ShouldSerializeValue(Object)\n  nameWithType: PropertyDescriptor.ShouldSerializeValue(Object)\n  fullName: PropertyDescriptor.ShouldSerializeValue(Object)\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: When overridden in a derived class, determines a value indicating whether the value of this property needs to be persisted.\n  remarks: Typically, this method is implemented through reflection.\n  syntax:\n    content: public abstract bool ShouldSerializeValue (object component);\n    parameters:\n    - id: component\n      type: System.Object\n      description: The component with the property to be examined for persistence.\n    return:\n      type: System.Boolean\n      description: '`true` if the property should be persisted; otherwise, `false`.'\n  overload: System.ComponentModel.PropertyDescriptor.ShouldSerializeValue*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PropertyDescriptor.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.PropertyDescriptor.SupportsChangeEvents\n  commentId: P:System.ComponentModel.PropertyDescriptor.SupportsChangeEvents\n  id: SupportsChangeEvents\n  parent: System.ComponentModel.PropertyDescriptor\n  langs:\n  - csharp\n  name: SupportsChangeEvents\n  nameWithType: PropertyDescriptor.SupportsChangeEvents\n  fullName: PropertyDescriptor.SupportsChangeEvents\n  type: Property\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Gets a value indicating whether value change notifications for this property may originate from outside the property descriptor.\n  remarks: The <xref:System.ComponentModel.PropertyDescriptor.SupportsChangeEvents%2A> property indicates whether value change notifications for this property may originate from outside the property descriptor, such as from the component itself, or whether notifications will only originate from direct calls made to the <xref:System.ComponentModel.PropertyDescriptor.SetValue%2A> method. For example, the component may implement the <xref:System.ComponentModel.INotifyPropertyChanged> interface, or may have an explicit `name.Changed` event for this property.\n  syntax:\n    content: public virtual bool SupportsChangeEvents { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if value change notifications may originate from outside the property descriptor; otherwise, `false`.'\n  overload: System.ComponentModel.PropertyDescriptor.SupportsChangeEvents*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PropertyDescriptor.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.ComponentModel.MemberDescriptor\n  parent: System.ComponentModel\n  isExternal: false\n  name: MemberDescriptor\n  nameWithType: MemberDescriptor\n  fullName: System.ComponentModel.MemberDescriptor\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor)\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: PropertyDescriptor(MemberDescriptor)\n  nameWithType: PropertyDescriptor.PropertyDescriptor(MemberDescriptor)\n  fullName: PropertyDescriptor.PropertyDescriptor(MemberDescriptor)\n- uid: System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: PropertyDescriptor(MemberDescriptor, Attribute[])\n  nameWithType: PropertyDescriptor.PropertyDescriptor(MemberDescriptor, Attribute[])\n  fullName: PropertyDescriptor.PropertyDescriptor(MemberDescriptor, Attribute[])\n- uid: System.Attribute\n  name: Attribute\n  nameWithType: Attribute\n  fullName: System.Attribute\n- uid: System.Attribute[]\n  parent: System\n  isExternal: false\n  name: Attribute[]\n  nameWithType: Attribute[]\n  fullName: System.Attribute[]\n  spec.csharp:\n  - uid: System.Attribute\n    name: Attribute\n    nameWithType: Attribute\n    fullName: System.Attribute\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.ComponentModel.PropertyDescriptor.#ctor(System.String,System.Attribute[])\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: PropertyDescriptor(String, Attribute[])\n  nameWithType: PropertyDescriptor.PropertyDescriptor(String, Attribute[])\n  fullName: PropertyDescriptor.PropertyDescriptor(String, Attribute[])\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ComponentModel.PropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: AddValueChanged(Object, EventHandler)\n  nameWithType: PropertyDescriptor.AddValueChanged(Object, EventHandler)\n  fullName: PropertyDescriptor.AddValueChanged(Object, EventHandler)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.EventHandler\n  parent: System\n  isExternal: false\n  name: EventHandler\n  nameWithType: EventHandler\n  fullName: System.EventHandler\n- uid: System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: CanResetValue(Object)\n  nameWithType: PropertyDescriptor.CanResetValue(Object)\n  fullName: PropertyDescriptor.CanResetValue(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.PropertyDescriptor.ComponentType\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: ComponentType\n  nameWithType: PropertyDescriptor.ComponentType\n  fullName: PropertyDescriptor.ComponentType\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ComponentModel.PropertyDescriptor.Converter\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: Converter\n  nameWithType: PropertyDescriptor.Converter\n  fullName: PropertyDescriptor.Converter\n- uid: System.ComponentModel.TypeConverter\n  parent: System.ComponentModel\n  isExternal: false\n  name: TypeConverter\n  nameWithType: TypeConverter\n  fullName: System.ComponentModel.TypeConverter\n- uid: System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: CreateInstance(Type)\n  nameWithType: PropertyDescriptor.CreateInstance(Type)\n  fullName: PropertyDescriptor.CreateInstance(Type)\n- uid: System.ComponentModel.PropertyDescriptor.Equals(System.Object)\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: PropertyDescriptor.Equals(Object)\n  fullName: PropertyDescriptor.Equals(Object)\n- uid: System.ComponentModel.PropertyDescriptor.FillAttributes(System.Collections.IList)\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: FillAttributes(IList)\n  nameWithType: PropertyDescriptor.FillAttributes(IList)\n  fullName: PropertyDescriptor.FillAttributes(IList)\n- uid: System.Collections.IList\n  parent: System.Collections\n  isExternal: false\n  name: IList\n  nameWithType: IList\n  fullName: System.Collections.IList\n- uid: System.ComponentModel.PropertyDescriptor.GetChildProperties\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: GetChildProperties()\n  nameWithType: PropertyDescriptor.GetChildProperties()\n  fullName: PropertyDescriptor.GetChildProperties()\n- uid: System.ComponentModel.PropertyDescriptorCollection\n  parent: System.ComponentModel\n  isExternal: false\n  name: PropertyDescriptorCollection\n  nameWithType: PropertyDescriptorCollection\n  fullName: System.ComponentModel.PropertyDescriptorCollection\n- uid: System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: GetChildProperties(Attribute[])\n  nameWithType: PropertyDescriptor.GetChildProperties(Attribute[])\n  fullName: PropertyDescriptor.GetChildProperties(Attribute[])\n- uid: System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: GetChildProperties(Object)\n  nameWithType: PropertyDescriptor.GetChildProperties(Object)\n  fullName: PropertyDescriptor.GetChildProperties(Object)\n- uid: System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: GetChildProperties(Object, Attribute[])\n  nameWithType: PropertyDescriptor.GetChildProperties(Object, Attribute[])\n  fullName: PropertyDescriptor.GetChildProperties(Object, Attribute[])\n- uid: System.ComponentModel.PropertyDescriptor.GetEditor(System.Type)\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: GetEditor(Type)\n  nameWithType: PropertyDescriptor.GetEditor(Type)\n  fullName: PropertyDescriptor.GetEditor(Type)\n- uid: System.ComponentModel.PropertyDescriptor.GetHashCode\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: PropertyDescriptor.GetHashCode()\n  fullName: PropertyDescriptor.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ComponentModel.PropertyDescriptor.GetInvocationTarget(System.Type,System.Object)\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: GetInvocationTarget(Type, Object)\n  nameWithType: PropertyDescriptor.GetInvocationTarget(Type, Object)\n  fullName: PropertyDescriptor.GetInvocationTarget(Type, Object)\n- uid: System.ComponentModel.PropertyDescriptor.GetTypeFromName(System.String)\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: GetTypeFromName(String)\n  nameWithType: PropertyDescriptor.GetTypeFromName(String)\n  fullName: PropertyDescriptor.GetTypeFromName(String)\n- uid: System.ComponentModel.PropertyDescriptor.GetValue(System.Object)\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: GetValue(Object)\n  nameWithType: PropertyDescriptor.GetValue(Object)\n  fullName: PropertyDescriptor.GetValue(Object)\n- uid: System.ComponentModel.PropertyDescriptor.GetValueChangedHandler(System.Object)\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: GetValueChangedHandler(Object)\n  nameWithType: PropertyDescriptor.GetValueChangedHandler(Object)\n  fullName: PropertyDescriptor.GetValueChangedHandler(Object)\n- uid: System.ComponentModel.PropertyDescriptor.IsLocalizable\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: IsLocalizable\n  nameWithType: PropertyDescriptor.IsLocalizable\n  fullName: PropertyDescriptor.IsLocalizable\n- uid: System.ComponentModel.PropertyDescriptor.IsReadOnly\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: PropertyDescriptor.IsReadOnly\n  fullName: PropertyDescriptor.IsReadOnly\n- uid: System.ComponentModel.PropertyDescriptor.OnValueChanged(System.Object,System.EventArgs)\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: OnValueChanged(Object, EventArgs)\n  nameWithType: PropertyDescriptor.OnValueChanged(Object, EventArgs)\n  fullName: PropertyDescriptor.OnValueChanged(Object, EventArgs)\n- uid: System.EventArgs\n  parent: System\n  isExternal: false\n  name: EventArgs\n  nameWithType: EventArgs\n  fullName: System.EventArgs\n- uid: System.ComponentModel.PropertyDescriptor.PropertyType\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: PropertyType\n  nameWithType: PropertyDescriptor.PropertyType\n  fullName: PropertyDescriptor.PropertyType\n- uid: System.ComponentModel.PropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: RemoveValueChanged(Object, EventHandler)\n  nameWithType: PropertyDescriptor.RemoveValueChanged(Object, EventHandler)\n  fullName: PropertyDescriptor.RemoveValueChanged(Object, EventHandler)\n- uid: System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: ResetValue(Object)\n  nameWithType: PropertyDescriptor.ResetValue(Object)\n  fullName: PropertyDescriptor.ResetValue(Object)\n- uid: System.ComponentModel.PropertyDescriptor.SerializationVisibility\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: SerializationVisibility\n  nameWithType: PropertyDescriptor.SerializationVisibility\n  fullName: PropertyDescriptor.SerializationVisibility\n- uid: System.ComponentModel.DesignerSerializationVisibility\n  parent: System.ComponentModel\n  isExternal: false\n  name: DesignerSerializationVisibility\n  nameWithType: DesignerSerializationVisibility\n  fullName: System.ComponentModel.DesignerSerializationVisibility\n- uid: System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: SetValue(Object, Object)\n  nameWithType: PropertyDescriptor.SetValue(Object, Object)\n  fullName: PropertyDescriptor.SetValue(Object, Object)\n- uid: System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: ShouldSerializeValue(Object)\n  nameWithType: PropertyDescriptor.ShouldSerializeValue(Object)\n  fullName: PropertyDescriptor.ShouldSerializeValue(Object)\n- uid: System.ComponentModel.PropertyDescriptor.SupportsChangeEvents\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: SupportsChangeEvents\n  nameWithType: PropertyDescriptor.SupportsChangeEvents\n  fullName: PropertyDescriptor.SupportsChangeEvents\n- uid: System.ComponentModel.PropertyDescriptor.#ctor*\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: PropertyDescriptor\n  nameWithType: PropertyDescriptor.PropertyDescriptor\n  fullName: PropertyDescriptor.PropertyDescriptor\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PropertyDescriptor.xml\n- uid: System.ComponentModel.PropertyDescriptor.AddValueChanged*\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: AddValueChanged\n  nameWithType: PropertyDescriptor.AddValueChanged\n  fullName: PropertyDescriptor.AddValueChanged\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PropertyDescriptor.xml\n- uid: System.ComponentModel.PropertyDescriptor.CanResetValue*\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: CanResetValue\n  nameWithType: PropertyDescriptor.CanResetValue\n  fullName: PropertyDescriptor.CanResetValue\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PropertyDescriptor.xml\n- uid: System.ComponentModel.PropertyDescriptor.ComponentType*\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: ComponentType\n  nameWithType: PropertyDescriptor.ComponentType\n  fullName: PropertyDescriptor.ComponentType\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PropertyDescriptor.xml\n- uid: System.ComponentModel.PropertyDescriptor.Converter*\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: Converter\n  nameWithType: PropertyDescriptor.Converter\n  fullName: PropertyDescriptor.Converter\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PropertyDescriptor.xml\n- uid: System.ComponentModel.PropertyDescriptor.CreateInstance*\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: CreateInstance\n  nameWithType: PropertyDescriptor.CreateInstance\n  fullName: PropertyDescriptor.CreateInstance\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PropertyDescriptor.xml\n- uid: System.ComponentModel.PropertyDescriptor.Equals*\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: Equals\n  nameWithType: PropertyDescriptor.Equals\n  fullName: PropertyDescriptor.Equals\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PropertyDescriptor.xml\n- uid: System.ComponentModel.PropertyDescriptor.FillAttributes*\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: FillAttributes\n  nameWithType: PropertyDescriptor.FillAttributes\n  fullName: PropertyDescriptor.FillAttributes\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PropertyDescriptor.xml\n- uid: System.ComponentModel.PropertyDescriptor.GetChildProperties*\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: GetChildProperties\n  nameWithType: PropertyDescriptor.GetChildProperties\n  fullName: PropertyDescriptor.GetChildProperties\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PropertyDescriptor.xml\n- uid: System.ComponentModel.PropertyDescriptor.GetEditor*\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: GetEditor\n  nameWithType: PropertyDescriptor.GetEditor\n  fullName: PropertyDescriptor.GetEditor\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PropertyDescriptor.xml\n- uid: System.ComponentModel.PropertyDescriptor.GetHashCode*\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: GetHashCode\n  nameWithType: PropertyDescriptor.GetHashCode\n  fullName: PropertyDescriptor.GetHashCode\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PropertyDescriptor.xml\n- uid: System.ComponentModel.PropertyDescriptor.GetInvocationTarget*\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: GetInvocationTarget\n  nameWithType: PropertyDescriptor.GetInvocationTarget\n  fullName: PropertyDescriptor.GetInvocationTarget\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PropertyDescriptor.xml\n- uid: System.ComponentModel.PropertyDescriptor.GetTypeFromName*\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: GetTypeFromName\n  nameWithType: PropertyDescriptor.GetTypeFromName\n  fullName: PropertyDescriptor.GetTypeFromName\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PropertyDescriptor.xml\n- uid: System.ComponentModel.PropertyDescriptor.GetValue*\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: GetValue\n  nameWithType: PropertyDescriptor.GetValue\n  fullName: PropertyDescriptor.GetValue\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PropertyDescriptor.xml\n- uid: System.ComponentModel.PropertyDescriptor.GetValueChangedHandler*\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: GetValueChangedHandler\n  nameWithType: PropertyDescriptor.GetValueChangedHandler\n  fullName: PropertyDescriptor.GetValueChangedHandler\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PropertyDescriptor.xml\n- uid: System.ComponentModel.PropertyDescriptor.IsLocalizable*\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: IsLocalizable\n  nameWithType: PropertyDescriptor.IsLocalizable\n  fullName: PropertyDescriptor.IsLocalizable\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PropertyDescriptor.xml\n- uid: System.ComponentModel.PropertyDescriptor.IsReadOnly*\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: PropertyDescriptor.IsReadOnly\n  fullName: PropertyDescriptor.IsReadOnly\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PropertyDescriptor.xml\n- uid: System.ComponentModel.PropertyDescriptor.OnValueChanged*\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: OnValueChanged\n  nameWithType: PropertyDescriptor.OnValueChanged\n  fullName: PropertyDescriptor.OnValueChanged\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PropertyDescriptor.xml\n- uid: System.ComponentModel.PropertyDescriptor.PropertyType*\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: PropertyType\n  nameWithType: PropertyDescriptor.PropertyType\n  fullName: PropertyDescriptor.PropertyType\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PropertyDescriptor.xml\n- uid: System.ComponentModel.PropertyDescriptor.RemoveValueChanged*\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: RemoveValueChanged\n  nameWithType: PropertyDescriptor.RemoveValueChanged\n  fullName: PropertyDescriptor.RemoveValueChanged\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PropertyDescriptor.xml\n- uid: System.ComponentModel.PropertyDescriptor.ResetValue*\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: ResetValue\n  nameWithType: PropertyDescriptor.ResetValue\n  fullName: PropertyDescriptor.ResetValue\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PropertyDescriptor.xml\n- uid: System.ComponentModel.PropertyDescriptor.SerializationVisibility*\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: SerializationVisibility\n  nameWithType: PropertyDescriptor.SerializationVisibility\n  fullName: PropertyDescriptor.SerializationVisibility\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PropertyDescriptor.xml\n- uid: System.ComponentModel.PropertyDescriptor.SetValue*\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: SetValue\n  nameWithType: PropertyDescriptor.SetValue\n  fullName: PropertyDescriptor.SetValue\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PropertyDescriptor.xml\n- uid: System.ComponentModel.PropertyDescriptor.ShouldSerializeValue*\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: ShouldSerializeValue\n  nameWithType: PropertyDescriptor.ShouldSerializeValue\n  fullName: PropertyDescriptor.ShouldSerializeValue\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PropertyDescriptor.xml\n- uid: System.ComponentModel.PropertyDescriptor.SupportsChangeEvents*\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: SupportsChangeEvents\n  nameWithType: PropertyDescriptor.SupportsChangeEvents\n  fullName: PropertyDescriptor.SupportsChangeEvents\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/PropertyDescriptor.xml\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.ComponentModel.MemberDescriptor.AttributeArray\n  parent: System.ComponentModel.MemberDescriptor\n  isExternal: false\n  name: AttributeArray\n  nameWithType: MemberDescriptor.AttributeArray\n  fullName: MemberDescriptor.AttributeArray\n- uid: System.ComponentModel.MemberDescriptor.Attributes\n  parent: System.ComponentModel.MemberDescriptor\n  isExternal: false\n  name: Attributes\n  nameWithType: MemberDescriptor.Attributes\n  fullName: MemberDescriptor.Attributes\n- uid: System.ComponentModel.MemberDescriptor.Category\n  parent: System.ComponentModel.MemberDescriptor\n  isExternal: false\n  name: Category\n  nameWithType: MemberDescriptor.Category\n  fullName: MemberDescriptor.Category\n- uid: System.ComponentModel.MemberDescriptor.CreateAttributeCollection\n  parent: System.ComponentModel.MemberDescriptor\n  isExternal: false\n  name: CreateAttributeCollection()\n  nameWithType: MemberDescriptor.CreateAttributeCollection()\n  fullName: MemberDescriptor.CreateAttributeCollection()\n- uid: System.ComponentModel.MemberDescriptor.Description\n  parent: System.ComponentModel.MemberDescriptor\n  isExternal: false\n  name: Description\n  nameWithType: MemberDescriptor.Description\n  fullName: MemberDescriptor.Description\n- uid: System.ComponentModel.MemberDescriptor.DesignTimeOnly\n  parent: System.ComponentModel.MemberDescriptor\n  isExternal: false\n  name: DesignTimeOnly\n  nameWithType: MemberDescriptor.DesignTimeOnly\n  fullName: MemberDescriptor.DesignTimeOnly\n- uid: System.ComponentModel.MemberDescriptor.DisplayName\n  parent: System.ComponentModel.MemberDescriptor\n  isExternal: false\n  name: DisplayName\n  nameWithType: MemberDescriptor.DisplayName\n  fullName: MemberDescriptor.DisplayName\n- uid: System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type)\n  parent: System.ComponentModel.MemberDescriptor\n  isExternal: false\n  name: FindMethod(Type, String, Type[], Type)\n  nameWithType: MemberDescriptor.FindMethod(Type, String, Type[], Type)\n  fullName: MemberDescriptor.FindMethod(Type, String, Type[], Type)\n- uid: System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type,System.Boolean)\n  parent: System.ComponentModel.MemberDescriptor\n  isExternal: false\n  name: FindMethod(Type, String, Type[], Type, Boolean)\n  nameWithType: MemberDescriptor.FindMethod(Type, String, Type[], Type, Boolean)\n  fullName: MemberDescriptor.FindMethod(Type, String, Type[], Type, Boolean)\n- uid: System.ComponentModel.MemberDescriptor.GetInvokee(System.Type,System.Object)\n  parent: System.ComponentModel.MemberDescriptor\n  isExternal: false\n  name: GetInvokee(Type, Object)\n  nameWithType: MemberDescriptor.GetInvokee(Type, Object)\n  fullName: MemberDescriptor.GetInvokee(Type, Object)\n- uid: System.ComponentModel.MemberDescriptor.GetSite(System.Object)\n  parent: System.ComponentModel.MemberDescriptor\n  isExternal: false\n  name: GetSite(Object)\n  nameWithType: MemberDescriptor.GetSite(Object)\n  fullName: MemberDescriptor.GetSite(Object)\n- uid: System.ComponentModel.MemberDescriptor.IsBrowsable\n  parent: System.ComponentModel.MemberDescriptor\n  isExternal: false\n  name: IsBrowsable\n  nameWithType: MemberDescriptor.IsBrowsable\n  fullName: MemberDescriptor.IsBrowsable\n- uid: System.ComponentModel.MemberDescriptor.Name\n  parent: System.ComponentModel.MemberDescriptor\n  isExternal: false\n  name: Name\n  nameWithType: MemberDescriptor.Name\n  fullName: MemberDescriptor.Name\n- uid: System.ComponentModel.MemberDescriptor.NameHashCode\n  parent: System.ComponentModel.MemberDescriptor\n  isExternal: false\n  name: NameHashCode\n  nameWithType: MemberDescriptor.NameHashCode\n  fullName: MemberDescriptor.NameHashCode\n"}