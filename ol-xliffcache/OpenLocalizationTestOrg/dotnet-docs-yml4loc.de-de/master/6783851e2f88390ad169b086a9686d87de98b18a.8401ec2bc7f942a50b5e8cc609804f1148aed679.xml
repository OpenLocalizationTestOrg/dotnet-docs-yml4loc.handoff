{"nodes":[{"content":"Creates a filter template.","nodes":[{"pos":[0,26],"content":"Creates a filter template.","nodes":[{"content":"Creates a filter template.","pos":[0,26]}]}],"pos":[655,682],"yaml":true},{"content":"The <xref:System.Web.DynamicData.FilterFactory> class is used at run time by Dynamic Data to get an instance of a filter template for a specific column type.  \n  \n You can override the methods that are defined in this class to customize how filter templates are loaded. For example, a custom implementation could load the filter templates from a location different than the default ~/DynamicData/Filters folder.  \n  \n Dynamic Data provides filter templates for foreign-key, Boolean, and enumeration column types and displays them by using a <xref:System.Web.UI.WebControls.DropDownList> control. You can also create custom filter templates.","nodes":[{"pos":[0,157],"content":"The <xref:System.Web.DynamicData.FilterFactory> class is used at run time by Dynamic Data to get an instance of a filter template for a specific column type.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.DynamicData.FilterFactory&gt;</ph> class is used at run time by Dynamic Data to get an instance of a filter template for a specific column type.","pos":[0,157],"source":"The <xref:System.Web.DynamicData.FilterFactory> class is used at run time by Dynamic Data to get an instance of a filter template for a specific column type."}]},{"pos":[164,411],"content":"You can override the methods that are defined in this class to customize how filter templates are loaded. For example, a custom implementation could load the filter templates from a location different than the default ~/DynamicData/Filters folder.","nodes":[{"content":"You can override the methods that are defined in this class to customize how filter templates are loaded. For example, a custom implementation could load the filter templates from a location different than the default ~/DynamicData/Filters folder.","pos":[0,247],"nodes":[{"content":"You can override the methods that are defined in this class to customize how filter templates are loaded.","pos":[0,105]},{"content":"For example, a custom implementation could load the filter templates from a location different than the default ~/DynamicData/Filters folder.","pos":[106,247]}]}]},{"pos":[418,640],"content":"Dynamic Data provides filter templates for foreign-key, Boolean, and enumeration column types and displays them by using a <xref:System.Web.UI.WebControls.DropDownList> control. You can also create custom filter templates.","nodes":[{"content":"Dynamic Data provides filter templates for foreign-key, Boolean, and enumeration column types and displays them by using a <xref:System.Web.UI.WebControls.DropDownList> control. You can also create custom filter templates.","pos":[0,222],"nodes":[{"content":"Dynamic Data provides filter templates for foreign-key, Boolean, and enumeration column types and displays them by using a <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control.","pos":[0,177],"source":"Dynamic Data provides filter templates for foreign-key, Boolean, and enumeration column types and displays them by using a <xref:System.Web.UI.WebControls.DropDownList> control."},{"content":"You can also create custom filter templates.","pos":[178,222]}]}]}],"pos":[693,1340],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Web.DynamicData.FilterFactory\"></xref> class.","nodes":[{"pos":[0,98],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Web.DynamicData.FilterFactory\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Web.DynamicData.FilterFactory\"></xref> class."}],"pos":[2817,2916],"yaml":true},{"content":"Creates an instance of the filter template.","nodes":[{"pos":[0,43],"content":"Creates an instance of the filter template.","nodes":[{"content":"Creates an instance of the filter template.","pos":[0,43]}]}],"pos":[4236,4280],"yaml":true},{"content":"This method is called by Dynamic Data to get an instance of a filter template. Derived classes can override this method to customize how instances of filter templates are created. For example, a custom implementation could load templates from a compiled assembly instead of from the default ~/DynamicData/Filters folder.","nodes":[{"pos":[0,320],"content":"This method is called by Dynamic Data to get an instance of a filter template. Derived classes can override this method to customize how instances of filter templates are created. For example, a custom implementation could load templates from a compiled assembly instead of from the default ~/DynamicData/Filters folder.","nodes":[{"content":"This method is called by Dynamic Data to get an instance of a filter template. Derived classes can override this method to customize how instances of filter templates are created. For example, a custom implementation could load templates from a compiled assembly instead of from the default ~/DynamicData/Filters folder.","pos":[0,320],"nodes":[{"content":"This method is called by Dynamic Data to get an instance of a filter template.","pos":[0,78]},{"content":"Derived classes can override this method to customize how instances of filter templates are created.","pos":[79,179]},{"content":"For example, a custom implementation could load templates from a compiled assembly instead of from the default ~/DynamicData/Filters folder.","pos":[180,320]}]}]}],"pos":[4291,4612],"yaml":true,"extradata":"MT"},{"content":"The data column to which the filter template applies.","nodes":[{"pos":[0,53],"content":"The data column to which the filter template applies.","nodes":[{"content":"The data column to which the filter template applies.","pos":[0,53]}]}],"pos":[4883,4937],"yaml":true},{"content":"The name of the filter template to use.","nodes":[{"pos":[0,39],"content":"The name of the filter template to use.","nodes":[{"content":"The name of the filter template to use.","pos":[0,39]}]}],"pos":[5005,5045],"yaml":true},{"content":"An instance of the <xref href=\"System.Web.DynamicData.QueryableFilterUserControl\"></xref> class.","nodes":[{"pos":[0,96],"content":"An instance of the <ph id=\"ph1\">&lt;xref href=\"System.Web.DynamicData.QueryableFilterUserControl\"&gt;&lt;/xref&gt;</ph> class.","source":"An instance of the <xref href=\"System.Web.DynamicData.QueryableFilterUserControl\"></xref> class."}],"pos":[5138,5235],"yaml":true},{"content":"<code>column</code> is **null**.","nodes":[{"pos":[0,32],"content":"<ph id=\"ph1\">&lt;code&gt;column&lt;/code&gt;</ph> is <bpt id=\"p1\">**</bpt>null<ept id=\"p1\">**</ept>.","source":"<code>column</code> is **null**."}],"pos":[5421,5454],"yaml":true},{"content":"Gets the virtual path of the filter template.","nodes":[{"pos":[0,45],"content":"Gets the virtual path of the filter template.","nodes":[{"content":"Gets the virtual path of the filter template.","pos":[0,45]}]}],"pos":[6640,6686],"yaml":true},{"content":"By default, filter templates are located in the ~/DynamicData/Filers folder.  \n  \n This method determines the virtual path of the folder that contains the field template. Derived classes can override this method to provide filter templates from a different virtual path.","nodes":[{"pos":[0,76],"content":"By default, filter templates are located in the ~/DynamicData/Filers folder.","nodes":[{"content":"By default, filter templates are located in the ~/DynamicData/Filers folder.","pos":[0,76]}]},{"pos":[83,270],"content":"This method determines the virtual path of the folder that contains the field template. Derived classes can override this method to provide filter templates from a different virtual path.","nodes":[{"content":"This method determines the virtual path of the folder that contains the field template. Derived classes can override this method to provide filter templates from a different virtual path.","pos":[0,187],"nodes":[{"content":"This method determines the virtual path of the folder that contains the field template.","pos":[0,87]},{"content":"Derived classes can override this method to provide filter templates from a different virtual path.","pos":[88,187]}]}]}],"pos":[6697,6972],"yaml":true,"extradata":"MT"},{"content":"The data column to which the filter template applies.","nodes":[{"pos":[0,53],"content":"The data column to which the filter template applies.","nodes":[{"content":"The data column to which the filter template applies.","pos":[0,53]}]}],"pos":[7201,7255],"yaml":true},{"content":"The filter template to use.","nodes":[{"pos":[0,27],"content":"The filter template to use.","nodes":[{"content":"The filter template to use.","pos":[0,27]}]}],"pos":[7323,7351],"yaml":true},{"content":"The virtual path of the filter template.","nodes":[{"pos":[0,40],"content":"The virtual path of the filter template.","nodes":[{"content":"The virtual path of the filter template.","pos":[0,40]}]}],"pos":[7408,7449],"yaml":true},{"content":"<code>column</code> is **null**.","nodes":[{"pos":[0,32],"content":"<ph id=\"ph1\">&lt;code&gt;column&lt;/code&gt;</ph> is <bpt id=\"p1\">**</bpt>null<ept id=\"p1\">**</ept>.","source":"<code>column</code> is **null**."}],"pos":[7636,7669],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.DynamicData.FilterFactory\n  commentId: T:System.Web.DynamicData.FilterFactory\n  id: FilterFactory\n  children:\n  - System.Web.DynamicData.FilterFactory.#ctor\n  - System.Web.DynamicData.FilterFactory.CreateFilterControl(System.Web.DynamicData.MetaColumn,System.String)\n  - System.Web.DynamicData.FilterFactory.GetFilterVirtualPath(System.Web.DynamicData.MetaColumn,System.String)\n  langs:\n  - csharp\n  name: FilterFactory\n  nameWithType: FilterFactory\n  fullName: System.Web.DynamicData.FilterFactory\n  type: Class\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Creates a filter template.\n  remarks: \"The <xref:System.Web.DynamicData.FilterFactory> class is used at run time by Dynamic Data to get an instance of a filter template for a specific column type.  \\n  \\n You can override the methods that are defined in this class to customize how filter templates are loaded. For example, a custom implementation could load the filter templates from a location different than the default ~/DynamicData/Filters folder.  \\n  \\n Dynamic Data provides filter templates for foreign-key, Boolean, and enumeration column types and displays them by using a <xref:System.Web.UI.WebControls.DropDownList> control. You can also create custom filter templates.\"\n  example:\n  - For an example of table row filtering uses the default filter templates, see the <xref:System.Web.DynamicData.QueryableFilterRepeater> class.\n  syntax:\n    content: public class FilterFactory\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/FilterFactory.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.FilterFactory.#ctor\n  commentId: M:System.Web.DynamicData.FilterFactory.#ctor\n  id: '#ctor'\n  parent: System.Web.DynamicData.FilterFactory\n  langs:\n  - csharp\n  name: FilterFactory()\n  nameWithType: FilterFactory.FilterFactory()\n  fullName: FilterFactory.FilterFactory()\n  type: Constructor\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Initializes a new instance of the <xref href=\"System.Web.DynamicData.FilterFactory\"></xref> class.\n  syntax:\n    content: public FilterFactory ();\n    parameters: []\n  overload: System.Web.DynamicData.FilterFactory.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/FilterFactory.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.FilterFactory.CreateFilterControl(System.Web.DynamicData.MetaColumn,System.String)\n  commentId: M:System.Web.DynamicData.FilterFactory.CreateFilterControl(System.Web.DynamicData.MetaColumn,System.String)\n  id: CreateFilterControl(System.Web.DynamicData.MetaColumn,System.String)\n  parent: System.Web.DynamicData.FilterFactory\n  langs:\n  - csharp\n  name: CreateFilterControl(MetaColumn, String)\n  nameWithType: FilterFactory.CreateFilterControl(MetaColumn, String)\n  fullName: FilterFactory.CreateFilterControl(MetaColumn, String)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Creates an instance of the filter template.\n  remarks: This method is called by Dynamic Data to get an instance of a filter template. Derived classes can override this method to customize how instances of filter templates are created. For example, a custom implementation could load templates from a compiled assembly instead of from the default ~/DynamicData/Filters folder.\n  syntax:\n    content: public virtual System.Web.DynamicData.QueryableFilterUserControl CreateFilterControl (System.Web.DynamicData.MetaColumn column, string filterUIHint);\n    parameters:\n    - id: column\n      type: System.Web.DynamicData.MetaColumn\n      description: The data column to which the filter template applies.\n    - id: filterUIHint\n      type: System.String\n      description: The name of the filter template to use.\n    return:\n      type: System.Web.DynamicData.QueryableFilterUserControl\n      description: An instance of the <xref href=\"System.Web.DynamicData.QueryableFilterUserControl\"></xref> class.\n  overload: System.Web.DynamicData.FilterFactory.CreateFilterControl*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>column</code> is **null**.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/FilterFactory.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.FilterFactory.GetFilterVirtualPath(System.Web.DynamicData.MetaColumn,System.String)\n  commentId: M:System.Web.DynamicData.FilterFactory.GetFilterVirtualPath(System.Web.DynamicData.MetaColumn,System.String)\n  id: GetFilterVirtualPath(System.Web.DynamicData.MetaColumn,System.String)\n  parent: System.Web.DynamicData.FilterFactory\n  langs:\n  - csharp\n  name: GetFilterVirtualPath(MetaColumn, String)\n  nameWithType: FilterFactory.GetFilterVirtualPath(MetaColumn, String)\n  fullName: FilterFactory.GetFilterVirtualPath(MetaColumn, String)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets the virtual path of the filter template.\n  remarks: \"By default, filter templates are located in the ~/DynamicData/Filers folder.  \\n  \\n This method determines the virtual path of the folder that contains the field template. Derived classes can override this method to provide filter templates from a different virtual path.\"\n  syntax:\n    content: public virtual string GetFilterVirtualPath (System.Web.DynamicData.MetaColumn column, string filterUIHint);\n    parameters:\n    - id: column\n      type: System.Web.DynamicData.MetaColumn\n      description: The data column to which the filter template applies.\n    - id: filterUIHint\n      type: System.String\n      description: The filter template to use.\n    return:\n      type: System.String\n      description: The virtual path of the filter template.\n  overload: System.Web.DynamicData.FilterFactory.GetFilterVirtualPath*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>column</code> is **null**.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/FilterFactory.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Web.DynamicData.FilterFactory.#ctor\n  parent: System.Web.DynamicData.FilterFactory\n  isExternal: false\n  name: FilterFactory()\n  nameWithType: FilterFactory.FilterFactory()\n  fullName: FilterFactory.FilterFactory()\n- uid: System.Web.DynamicData.FilterFactory.CreateFilterControl(System.Web.DynamicData.MetaColumn,System.String)\n  parent: System.Web.DynamicData.FilterFactory\n  isExternal: false\n  name: CreateFilterControl(MetaColumn, String)\n  nameWithType: FilterFactory.CreateFilterControl(MetaColumn, String)\n  fullName: FilterFactory.CreateFilterControl(MetaColumn, String)\n- uid: System.Web.DynamicData.QueryableFilterUserControl\n  parent: System.Web.DynamicData\n  isExternal: false\n  name: QueryableFilterUserControl\n  nameWithType: QueryableFilterUserControl\n  fullName: System.Web.DynamicData.QueryableFilterUserControl\n- uid: System.Web.DynamicData.MetaColumn\n  parent: System.Web.DynamicData\n  isExternal: false\n  name: MetaColumn\n  nameWithType: MetaColumn\n  fullName: System.Web.DynamicData.MetaColumn\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.DynamicData.FilterFactory.GetFilterVirtualPath(System.Web.DynamicData.MetaColumn,System.String)\n  parent: System.Web.DynamicData.FilterFactory\n  isExternal: false\n  name: GetFilterVirtualPath(MetaColumn, String)\n  nameWithType: FilterFactory.GetFilterVirtualPath(MetaColumn, String)\n  fullName: FilterFactory.GetFilterVirtualPath(MetaColumn, String)\n- uid: System.Web.DynamicData.FilterFactory.#ctor*\n  parent: System.Web.DynamicData.FilterFactory\n  isExternal: false\n  name: FilterFactory\n  nameWithType: FilterFactory.FilterFactory\n  fullName: FilterFactory.FilterFactory\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/FilterFactory.xml\n- uid: System.Web.DynamicData.FilterFactory.CreateFilterControl*\n  parent: System.Web.DynamicData.FilterFactory\n  isExternal: false\n  name: CreateFilterControl\n  nameWithType: FilterFactory.CreateFilterControl\n  fullName: FilterFactory.CreateFilterControl\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/FilterFactory.xml\n- uid: System.Web.DynamicData.FilterFactory.GetFilterVirtualPath*\n  parent: System.Web.DynamicData.FilterFactory\n  isExternal: false\n  name: GetFilterVirtualPath\n  nameWithType: FilterFactory.GetFilterVirtualPath\n  fullName: FilterFactory.GetFilterVirtualPath\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/FilterFactory.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}