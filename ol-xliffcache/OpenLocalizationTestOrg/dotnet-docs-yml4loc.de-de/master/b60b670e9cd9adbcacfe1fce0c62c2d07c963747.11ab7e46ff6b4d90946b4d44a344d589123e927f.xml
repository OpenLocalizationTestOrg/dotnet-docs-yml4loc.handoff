{"nodes":[{"content":"Provides the ability to control access to a cryptographic key object without direct manipulation of  an Access Control List (ACL).","nodes":[{"pos":[0,130],"content":"Provides the ability to control access to a cryptographic key object without direct manipulation of  an Access Control List (ACL).","nodes":[{"content":"Provides the ability to control access to a cryptographic key object without direct manipulation of  an Access Control List (ACL).","pos":[0,130]}]}],"pos":[2679,2810],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.CryptoKeySecurity\"></xref> class.","nodes":[{"pos":[0,109],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.CryptoKeySecurity\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.CryptoKeySecurity\"></xref> class."}],"pos":[9948,10058],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.CryptoKeySecurity\"></xref> class by using the specified security descriptor.","nodes":[{"pos":[0,152],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.CryptoKeySecurity\"&gt;&lt;/xref&gt;</ph> class by using the specified security descriptor.","source":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.CryptoKeySecurity\"></xref> class by using the specified security descriptor."}],"pos":[11577,11730],"yaml":true},{"content":"The security descriptor from which to create the new <xref href=\"System.Security.AccessControl.CryptoKeySecurity\"></xref> object.","nodes":[{"pos":[0,129],"content":"The security descriptor from which to create the new <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.CryptoKeySecurity\"&gt;&lt;/xref&gt;</ph> object.","source":"The security descriptor from which to create the new <xref href=\"System.Security.AccessControl.CryptoKeySecurity\"></xref> object."}],"pos":[11986,12116],"yaml":true},{"content":"Gets the <xref href=\"System.Type\"></xref> of the securable object associated with this <xref href=\"System.Security.AccessControl.CryptoKeySecurity\"></xref> object.","nodes":[{"pos":[0,163],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> of the securable object associated with this <ph id=\"ph2\">&lt;xref href=\"System.Security.AccessControl.CryptoKeySecurity\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets the <xref href=\"System.Type\"></xref> of the securable object associated with this <xref href=\"System.Security.AccessControl.CryptoKeySecurity\"></xref> object."}],"pos":[13337,13501],"yaml":true},{"content":"The type of the securable object associated with this <xref href=\"System.Security.AccessControl.CryptoKeySecurity\"></xref> object.","nodes":[{"pos":[0,130],"content":"The type of the securable object associated with this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.CryptoKeySecurity\"&gt;&lt;/xref&gt;</ph> object.","source":"The type of the securable object associated with this <xref href=\"System.Security.AccessControl.CryptoKeySecurity\"></xref> object."}],"pos":[13625,13756],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.AccessRule\"></xref> class with the specified values.","nodes":[{"pos":[0,128],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.AccessRule\"&gt;&lt;/xref&gt;</ph> class with the specified values.","source":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.AccessRule\"></xref> class with the specified values."}],"pos":[15912,16041],"yaml":true},{"content":"The identity to which the access rule applies.  It must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>.","nodes":[{"pos":[0,157],"content":"The identity to which the access rule applies.  It must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>.","nodes":[{"content":"The identity to which the access rule applies.","pos":[0,46]},{"content":"It must be an object that can be cast as a <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;&lt;/xref&gt;</ph>.","pos":[48,157],"source":"  It must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>."}]}],"pos":[16548,16706],"yaml":true},{"content":"The access mask of this rule. The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.","nodes":[{"pos":[0,150],"content":"The access mask of this rule. The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.","nodes":[{"content":"The access mask of this rule. The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.","pos":[0,150],"nodes":[{"content":"The access mask of this rule.","pos":[0,29]},{"content":"The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.","pos":[30,150]}]}]}],"pos":[16771,16922],"yaml":true},{"content":"true if this rule is inherited from a parent container.","nodes":[{"pos":[0,55],"content":"true if this rule is inherited from a parent container.","nodes":[{"content":"true if this rule is inherited from a parent container.","pos":[0,55]}]}],"pos":[16990,17046],"yaml":true},{"content":"Specifies the inheritance properties of the access rule.","nodes":[{"pos":[0,56],"content":"Specifies the inheritance properties of the access rule.","nodes":[{"content":"Specifies the inheritance properties of the access rule.","pos":[0,56]}]}],"pos":[17151,17208],"yaml":true},{"content":"Specifies whether inherited access rules are automatically propagated. The propagation flags are ignored if <code>inheritanceFlags</code> is set to <xref href=\"System.Security.AccessControl.InheritanceFlags.None\"></xref>.","nodes":[{"pos":[0,221],"content":"Specifies whether inherited access rules are automatically propagated. The propagation flags are ignored if <code>inheritanceFlags</code> is set to <xref href=\"System.Security.AccessControl.InheritanceFlags.None\"></xref>.","nodes":[{"content":"Specifies whether inherited access rules are automatically propagated.","pos":[0,70]},{"content":"The propagation flags are ignored if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">inheritanceFlags</ph><ept id=\"p1\">&lt;/code&gt;</ept> is set to <ph id=\"ph2\">&lt;xref href=\"System.Security.AccessControl.InheritanceFlags.None\"&gt;&lt;/xref&gt;</ph>.","pos":[71,221],"source":" The propagation flags are ignored if <code>inheritanceFlags</code> is set to <xref href=\"System.Security.AccessControl.InheritanceFlags.None\"></xref>."}]}],"pos":[17313,17535],"yaml":true},{"content":"Specifies the valid access control type.","nodes":[{"pos":[0,40],"content":"Specifies the valid access control type.","nodes":[{"content":"Specifies the valid access control type.","pos":[0,40]}]}],"pos":[17629,17670],"yaml":true},{"content":"The <xref href=\"System.Security.AccessControl.AccessRule\"></xref> object that this method creates.","nodes":[{"pos":[0,98],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.AccessRule\"&gt;&lt;/xref&gt;</ph> object that this method creates.","source":"The <xref href=\"System.Security.AccessControl.AccessRule\"></xref> object that this method creates."}],"pos":[17754,17853],"yaml":true},{"content":"Gets the <xref href=\"System.Type\"></xref> of the object associated with the access rules of this <xref href=\"System.Security.AccessControl.CryptoKeySecurity\"></xref> object. The <xref href=\"System.Type\"></xref> object must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object.","nodes":[{"pos":[0,331],"content":"Gets the <xref href=\"System.Type\"></xref> of the object associated with the access rules of this <xref href=\"System.Security.AccessControl.CryptoKeySecurity\"></xref> object. The <xref href=\"System.Type\"></xref> object must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object.","nodes":[{"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> of the object associated with the access rules of this <ph id=\"ph2\">&lt;xref href=\"System.Security.AccessControl.CryptoKeySecurity\"&gt;&lt;/xref&gt;</ph> object.","pos":[0,173],"source":"Gets the <xref href=\"System.Type\"></xref> of the object associated with the access rules of this <xref href=\"System.Security.AccessControl.CryptoKeySecurity\"></xref> object."},{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> object must be an object that can be cast as a <ph id=\"ph2\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;&lt;/xref&gt;</ph> object.","pos":[174,331],"source":" The <xref href=\"System.Type\"></xref> object must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object."}]}],"pos":[19080,19412],"yaml":true},{"content":"The type of the object associated with the access rules of this <xref href=\"System.Security.AccessControl.CryptoKeySecurity\"></xref> object.","nodes":[{"pos":[0,140],"content":"The type of the object associated with the access rules of this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.CryptoKeySecurity\"&gt;&lt;/xref&gt;</ph> object.","source":"The type of the object associated with the access rules of this <xref href=\"System.Security.AccessControl.CryptoKeySecurity\"></xref> object."}],"pos":[19535,19676],"yaml":true},{"content":"Adds the specified access rule to the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.CryptoKeySecurity\"></xref> object.","nodes":[{"pos":[0,176],"content":"Adds the specified access rule to the Discretionary Access Control List (DACL) associated with this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.CryptoKeySecurity\"&gt;&lt;/xref&gt;</ph> object.","source":"Adds the specified access rule to the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.CryptoKeySecurity\"></xref> object."}],"pos":[21108,21285],"yaml":true},{"content":"Adding an access rule might cause existing access rules in the DACL to be merged.","nodes":[{"pos":[0,81],"content":"Adding an access rule might cause existing access rules in the DACL to be merged.","nodes":[{"content":"Adding an access rule might cause existing access rules in the DACL to be merged.","pos":[0,81]}]}],"pos":[21296,21378],"yaml":true,"extradata":"MT"},{"content":"The access rule to add.","nodes":[{"pos":[0,23],"content":"The access rule to add.","nodes":[{"content":"The access rule to add.","pos":[0,23]}]}],"pos":[21597,21621],"yaml":true},{"content":"Adds the specified audit rule to the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.CryptoKeySecurity\"></xref> object.","nodes":[{"pos":[0,168],"content":"Adds the specified audit rule to the System Access Control List (SACL) associated with this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.CryptoKeySecurity\"&gt;&lt;/xref&gt;</ph> object.","source":"Adds the specified audit rule to the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.CryptoKeySecurity\"></xref> object."}],"pos":[23040,23209],"yaml":true},{"content":"Adding an audit rule might cause existing access rules in the SACL to be merged.","nodes":[{"pos":[0,80],"content":"Adding an audit rule might cause existing access rules in the SACL to be merged.","nodes":[{"content":"Adding an audit rule might cause existing access rules in the SACL to be merged.","pos":[0,80]}]}],"pos":[23220,23301],"yaml":true,"extradata":"MT"},{"content":"The audit rule to add.","nodes":[{"pos":[0,22],"content":"The audit rule to add.","nodes":[{"content":"The audit rule to add.","pos":[0,22]}]}],"pos":[23517,23540],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.AuditRule\"></xref> class with the specified values.","nodes":[{"pos":[0,127],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.AuditRule\"&gt;&lt;/xref&gt;</ph> class with the specified values.","source":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.AuditRule\"></xref> class with the specified values."}],"pos":[25645,25773],"yaml":true},{"content":"The identity to which the audit rule applies.  It must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>.","nodes":[{"pos":[0,156],"content":"The identity to which the audit rule applies.  It must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>.","nodes":[{"content":"The identity to which the audit rule applies.","pos":[0,45]},{"content":"It must be an object that can be cast as a <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;&lt;/xref&gt;</ph>.","pos":[47,156],"source":"  It must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>."}]}],"pos":[26272,26429],"yaml":true},{"content":"The access mask of this rule. The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.","nodes":[{"pos":[0,150],"content":"The access mask of this rule. The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.","nodes":[{"content":"The access mask of this rule. The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.","pos":[0,150],"nodes":[{"content":"The access mask of this rule.","pos":[0,29]},{"content":"The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.","pos":[30,150]}]}]}],"pos":[26494,26645],"yaml":true},{"content":"`true` if this rule is inherited from a parent container.","nodes":[{"pos":[0,57],"content":"<ph id=\"ph1\">`true`</ph> if this rule is inherited from a parent container.","source":"`true` if this rule is inherited from a parent container."}],"pos":[26713,26773],"yaml":true},{"content":"Specifies the inheritance properties of the audit rule.","nodes":[{"pos":[0,55],"content":"Specifies the inheritance properties of the audit rule.","nodes":[{"content":"Specifies the inheritance properties of the audit rule.","pos":[0,55]}]}],"pos":[26878,26934],"yaml":true},{"content":"Specifies whether inherited audit rules are automatically propagated. The propagation flags are ignored if <code>inheritanceFlags</code> is set to <xref href=\"System.Security.AccessControl.InheritanceFlags.None\"></xref>.","nodes":[{"pos":[0,220],"content":"Specifies whether inherited audit rules are automatically propagated. The propagation flags are ignored if <code>inheritanceFlags</code> is set to <xref href=\"System.Security.AccessControl.InheritanceFlags.None\"></xref>.","nodes":[{"content":"Specifies whether inherited audit rules are automatically propagated.","pos":[0,69]},{"content":"The propagation flags are ignored if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">inheritanceFlags</ph><ept id=\"p1\">&lt;/code&gt;</ept> is set to <ph id=\"ph2\">&lt;xref href=\"System.Security.AccessControl.InheritanceFlags.None\"&gt;&lt;/xref&gt;</ph>.","pos":[70,220],"source":" The propagation flags are ignored if <code>inheritanceFlags</code> is set to <xref href=\"System.Security.AccessControl.InheritanceFlags.None\"></xref>."}]}],"pos":[27039,27260],"yaml":true},{"content":"Specifies the conditions for which the rule is audited.","nodes":[{"pos":[0,55],"content":"Specifies the conditions for which the rule is audited.","nodes":[{"content":"Specifies the conditions for which the rule is audited.","pos":[0,55]}]}],"pos":[27348,27404],"yaml":true},{"content":"The <xref href=\"System.Security.AccessControl.AuditRule\"></xref> object that this method creates.","nodes":[{"pos":[0,97],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.AuditRule\"&gt;&lt;/xref&gt;</ph> object that this method creates.","source":"The <xref href=\"System.Security.AccessControl.AuditRule\"></xref> object that this method creates."}],"pos":[27487,27585],"yaml":true},{"content":"Gets the <xref href=\"System.Type\"></xref> object associated with the audit rules of this <xref href=\"System.Security.AccessControl.CryptoKeySecurity\"></xref> object. The <xref href=\"System.Type\"></xref> object must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object.","nodes":[{"pos":[0,323],"content":"Gets the <xref href=\"System.Type\"></xref> object associated with the audit rules of this <xref href=\"System.Security.AccessControl.CryptoKeySecurity\"></xref> object. The <xref href=\"System.Type\"></xref> object must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object.","nodes":[{"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> object associated with the audit rules of this <ph id=\"ph2\">&lt;xref href=\"System.Security.AccessControl.CryptoKeySecurity\"&gt;&lt;/xref&gt;</ph> object.","pos":[0,165],"source":"Gets the <xref href=\"System.Type\"></xref> object associated with the audit rules of this <xref href=\"System.Security.AccessControl.CryptoKeySecurity\"></xref> object."},{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> object must be an object that can be cast as a <ph id=\"ph2\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;&lt;/xref&gt;</ph> object.","pos":[166,323],"source":" The <xref href=\"System.Type\"></xref> object must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object."}]}],"pos":[28805,29129],"yaml":true},{"content":"The type of the object associated with the audit rules of this <xref href=\"System.Security.AccessControl.CryptoKeySecurity\"></xref> object.","nodes":[{"pos":[0,139],"content":"The type of the object associated with the audit rules of this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.CryptoKeySecurity\"&gt;&lt;/xref&gt;</ph> object.","source":"The type of the object associated with the audit rules of this <xref href=\"System.Security.AccessControl.CryptoKeySecurity\"></xref> object."}],"pos":[29251,29391],"yaml":true},{"content":"Removes access rules that contain the same security identifier and access mask as the specified access rule from the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.CryptoKeySecurity\"></xref> object.","nodes":[{"pos":[0,255],"content":"Removes access rules that contain the same security identifier and access mask as the specified access rule from the Discretionary Access Control List (DACL) associated with this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.CryptoKeySecurity\"&gt;&lt;/xref&gt;</ph> object.","source":"Removes access rules that contain the same security identifier and access mask as the specified access rule from the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.CryptoKeySecurity\"></xref> object."}],"pos":[30840,31096],"yaml":true},{"content":"Access removal is accomplished by using a complex algorithm that might add access control rules in addition to removing them.  \n  \n This method fails to remove the access rule and returns `false` if the inheritance rules associated with the access rule are too complex for the removal algorithm to succeed.","nodes":[{"pos":[0,125],"content":"Access removal is accomplished by using a complex algorithm that might add access control rules in addition to removing them.","nodes":[{"content":"Access removal is accomplished by using a complex algorithm that might add access control rules in addition to removing them.","pos":[0,125]}]},{"pos":[132,306],"content":"This method fails to remove the access rule and returns <ph id=\"ph1\">`false`</ph> if the inheritance rules associated with the access rule are too complex for the removal algorithm to succeed.","source":"This method fails to remove the access rule and returns `false` if the inheritance rules associated with the access rule are too complex for the removal algorithm to succeed."}],"pos":[31107,31418],"yaml":true,"extradata":"MT"},{"content":"The access rule to remove.","nodes":[{"pos":[0,26],"content":"The access rule to remove.","nodes":[{"content":"The access rule to remove.","pos":[0,26]}]}],"pos":[31640,31667],"yaml":true},{"content":"`true` if the access rule was successfully removed; otherwise, `false`.","nodes":[{"pos":[0,71],"content":"<ph id=\"ph1\">`true`</ph> if the access rule was successfully removed; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the access rule was successfully removed; otherwise, `false`."}],"pos":[31725,31799],"yaml":true},{"content":"Removes all access rules that have the same security identifier as the specified access rule from the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.CryptoKeySecurity\"></xref> object.","nodes":[{"pos":[0,240],"content":"Removes all access rules that have the same security identifier as the specified access rule from the Discretionary Access Control List (DACL) associated with this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.CryptoKeySecurity\"&gt;&lt;/xref&gt;</ph> object.","source":"Removes all access rules that have the same security identifier as the specified access rule from the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.CryptoKeySecurity\"></xref> object."}],"pos":[33269,33510],"yaml":true},{"content":"The access rule to remove.","nodes":[{"pos":[0,26],"content":"The access rule to remove.","nodes":[{"content":"The access rule to remove.","pos":[0,26]}]}],"pos":[33735,33762],"yaml":true},{"content":"Removes all access rules that exactly match the specified access rule from the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.CryptoKeySecurity\"></xref> object.","nodes":[{"pos":[0,217],"content":"Removes all access rules that exactly match the specified access rule from the Discretionary Access Control List (DACL) associated with this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.CryptoKeySecurity\"&gt;&lt;/xref&gt;</ph> object.","source":"Removes all access rules that exactly match the specified access rule from the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.CryptoKeySecurity\"></xref> object."}],"pos":[35265,35483],"yaml":true},{"content":"The access rule to remove.","nodes":[{"pos":[0,26],"content":"The access rule to remove.","nodes":[{"content":"The access rule to remove.","pos":[0,26]}]}],"pos":[35713,35740],"yaml":true},{"content":"Removes audit rules that contain the same security identifier and access mask as the specified audit rule from the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.CryptoKeySecurity\"></xref> object.","nodes":[{"pos":[0,246],"content":"Removes audit rules that contain the same security identifier and access mask as the specified audit rule from the System Access Control List (SACL) associated with this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.CryptoKeySecurity\"&gt;&lt;/xref&gt;</ph> object.","source":"Removes audit rules that contain the same security identifier and access mask as the specified audit rule from the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.CryptoKeySecurity\"></xref> object."}],"pos":[37188,37435],"yaml":true},{"content":"Audit removal is accomplished by using a complex algorithm that might add audit control rules in addition to removing them.  \n  \n This method fails to remove the audit rule and returns `false` if the inheritance rules associated with the audit rule are too complex for the removal algorithm to succeed.","nodes":[{"pos":[0,123],"content":"Audit removal is accomplished by using a complex algorithm that might add audit control rules in addition to removing them.","nodes":[{"content":"Audit removal is accomplished by using a complex algorithm that might add audit control rules in addition to removing them.","pos":[0,123]}]},{"pos":[130,302],"content":"This method fails to remove the audit rule and returns <ph id=\"ph1\">`false`</ph> if the inheritance rules associated with the audit rule are too complex for the removal algorithm to succeed.","source":"This method fails to remove the audit rule and returns `false` if the inheritance rules associated with the audit rule are too complex for the removal algorithm to succeed."}],"pos":[37446,37753],"yaml":true,"extradata":"MT"},{"content":"The audit rule to remove.","nodes":[{"pos":[0,25],"content":"The audit rule to remove.","nodes":[{"content":"The audit rule to remove.","pos":[0,25]}]}],"pos":[37972,37998],"yaml":true},{"content":"`true` if the audit rule was successfully removed; otherwise, `false`.","nodes":[{"pos":[0,70],"content":"<ph id=\"ph1\">`true`</ph> if the audit rule was successfully removed; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the audit rule was successfully removed; otherwise, `false`."}],"pos":[38056,38129],"yaml":true},{"content":"Removes all audit rules that have the same security identifier as the specified audit rule from the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.CryptoKeySecurity\"></xref> object.","nodes":[{"pos":[0,231],"content":"Removes all audit rules that have the same security identifier as the specified audit rule from the System Access Control List (SACL) associated with this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.CryptoKeySecurity\"&gt;&lt;/xref&gt;</ph> object.","source":"Removes all audit rules that have the same security identifier as the specified audit rule from the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.CryptoKeySecurity\"></xref> object."}],"pos":[39586,39818],"yaml":true},{"content":"The audit rule to remove.","nodes":[{"pos":[0,25],"content":"The audit rule to remove.","nodes":[{"content":"The audit rule to remove.","pos":[0,25]}]}],"pos":[40040,40066],"yaml":true},{"content":"Removes all audit rules that exactly match the specified audit rule from the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.CryptoKeySecurity\"></xref> object.","nodes":[{"pos":[0,208],"content":"Removes all audit rules that exactly match the specified audit rule from the System Access Control List (SACL) associated with this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.CryptoKeySecurity\"&gt;&lt;/xref&gt;</ph> object.","source":"Removes all audit rules that exactly match the specified audit rule from the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.CryptoKeySecurity\"></xref> object."}],"pos":[41556,41765],"yaml":true},{"content":"The audit rule to remove.","nodes":[{"pos":[0,25],"content":"The audit rule to remove.","nodes":[{"content":"The audit rule to remove.","pos":[0,25]}]}],"pos":[41992,42018],"yaml":true},{"content":"Removes all access rules in the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.CryptoKeySecurity\"></xref> object and then adds the specified access rule.","nodes":[{"pos":[0,210],"content":"Removes all access rules in the Discretionary Access Control List (DACL) associated with this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.CryptoKeySecurity\"&gt;&lt;/xref&gt;</ph> object and then adds the specified access rule.","source":"Removes all access rules in the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.CryptoKeySecurity\"></xref> object and then adds the specified access rule."}],"pos":[43471,43682],"yaml":true},{"content":"The access rule to reset.","nodes":[{"pos":[0,25],"content":"The access rule to reset.","nodes":[{"content":"The access rule to reset.","pos":[0,25]}]}],"pos":[43903,43929],"yaml":true},{"content":"Removes all access rules that contain the same security identifier and qualifier as the specified access rule in the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.CryptoKeySecurity\"></xref> object and then adds the specified access rule.","nodes":[{"pos":[0,295],"content":"Removes all access rules that contain the same security identifier and qualifier as the specified access rule in the Discretionary Access Control List (DACL) associated with this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.CryptoKeySecurity\"&gt;&lt;/xref&gt;</ph> object and then adds the specified access rule.","source":"Removes all access rules that contain the same security identifier and qualifier as the specified access rule in the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.CryptoKeySecurity\"></xref> object and then adds the specified access rule."}],"pos":[45362,45658],"yaml":true},{"content":"The access rule to set.","nodes":[{"pos":[0,23],"content":"The access rule to set.","nodes":[{"content":"The access rule to set.","pos":[0,23]}]}],"pos":[45877,45901],"yaml":true},{"content":"Removes all audit rules that contain the same security identifier and qualifier as the specified audit rule in the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.CryptoKeySecurity\"></xref> object and then adds the specified audit rule.","nodes":[{"pos":[0,285],"content":"Removes all audit rules that contain the same security identifier and qualifier as the specified audit rule in the System Access Control List (SACL) associated with this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.CryptoKeySecurity\"&gt;&lt;/xref&gt;</ph> object and then adds the specified audit rule.","source":"Removes all audit rules that contain the same security identifier and qualifier as the specified audit rule in the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.CryptoKeySecurity\"></xref> object and then adds the specified audit rule."}],"pos":[47320,47606],"yaml":true},{"content":"The audit rule to set.","nodes":[{"pos":[0,22],"content":"The audit rule to set.","nodes":[{"content":"The audit rule to set.","pos":[0,22]}]}],"pos":[47822,47845],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.AccessControl.CryptoKeySecurity\n  commentId: T:System.Security.AccessControl.CryptoKeySecurity\n  id: CryptoKeySecurity\n  children:\n  - System.Security.AccessControl.CryptoKeySecurity.#ctor\n  - System.Security.AccessControl.CryptoKeySecurity.#ctor(System.Security.AccessControl.CommonSecurityDescriptor)\n  - System.Security.AccessControl.CryptoKeySecurity.AccessRightType\n  - System.Security.AccessControl.CryptoKeySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  - System.Security.AccessControl.CryptoKeySecurity.AccessRuleType\n  - System.Security.AccessControl.CryptoKeySecurity.AddAccessRule(System.Security.AccessControl.CryptoKeyAccessRule)\n  - System.Security.AccessControl.CryptoKeySecurity.AddAuditRule(System.Security.AccessControl.CryptoKeyAuditRule)\n  - System.Security.AccessControl.CryptoKeySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  - System.Security.AccessControl.CryptoKeySecurity.AuditRuleType\n  - System.Security.AccessControl.CryptoKeySecurity.RemoveAccessRule(System.Security.AccessControl.CryptoKeyAccessRule)\n  - System.Security.AccessControl.CryptoKeySecurity.RemoveAccessRuleAll(System.Security.AccessControl.CryptoKeyAccessRule)\n  - System.Security.AccessControl.CryptoKeySecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.CryptoKeyAccessRule)\n  - System.Security.AccessControl.CryptoKeySecurity.RemoveAuditRule(System.Security.AccessControl.CryptoKeyAuditRule)\n  - System.Security.AccessControl.CryptoKeySecurity.RemoveAuditRuleAll(System.Security.AccessControl.CryptoKeyAuditRule)\n  - System.Security.AccessControl.CryptoKeySecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.CryptoKeyAuditRule)\n  - System.Security.AccessControl.CryptoKeySecurity.ResetAccessRule(System.Security.AccessControl.CryptoKeyAccessRule)\n  - System.Security.AccessControl.CryptoKeySecurity.SetAccessRule(System.Security.AccessControl.CryptoKeyAccessRule)\n  - System.Security.AccessControl.CryptoKeySecurity.SetAuditRule(System.Security.AccessControl.CryptoKeyAuditRule)\n  langs:\n  - csharp\n  name: CryptoKeySecurity\n  nameWithType: CryptoKeySecurity\n  fullName: System.Security.AccessControl.CryptoKeySecurity\n  type: Class\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Provides the ability to control access to a cryptographic key object without direct manipulation of  an Access Control List (ACL).\n  syntax:\n    content: 'public sealed class CryptoKeySecurity : System.Security.AccessControl.NativeObjectSecurity'\n  inheritance:\n  - System.Object\n  - System.Security.AccessControl.ObjectSecurity\n  - System.Security.AccessControl.CommonObjectSecurity\n  - System.Security.AccessControl.NativeObjectSecurity\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)\n  - System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)\n  - System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)\n  - System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)\n  - System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  - System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)\n  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)\n  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)\n  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)\n  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)\n  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)\n  - System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)\n  - System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)\n  - System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)\n  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Object)\n  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections,System.Object)\n  - System.Security.AccessControl.ObjectSecurity.AccessRulesModified\n  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical\n  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected\n  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical\n  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected\n  - System.Security.AccessControl.ObjectSecurity.AuditRulesModified\n  - System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)\n  - System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)\n  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm\n  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.GroupModified\n  - System.Security.AccessControl.ObjectSecurity.IsContainer\n  - System.Security.AccessControl.ObjectSecurity.IsDS\n  - System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported\n  - System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  - System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  - System.Security.AccessControl.ObjectSecurity.OwnerModified\n  - System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)\n  - System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)\n  - System.Security.AccessControl.ObjectSecurity.ReadLock\n  - System.Security.AccessControl.ObjectSecurity.ReadUnlock\n  - System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)\n  - System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)\n  - System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)\n  - System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.WriteLock\n  - System.Security.AccessControl.ObjectSecurity.WriteUnlock\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/CryptoKeySecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.CryptoKeySecurity.#ctor\n  commentId: M:System.Security.AccessControl.CryptoKeySecurity.#ctor\n  id: '#ctor'\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  langs:\n  - csharp\n  name: CryptoKeySecurity()\n  nameWithType: CryptoKeySecurity.CryptoKeySecurity()\n  fullName: CryptoKeySecurity.CryptoKeySecurity()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Initializes a new instance of the <xref href=\"System.Security.AccessControl.CryptoKeySecurity\"></xref> class.\n  syntax:\n    content: public CryptoKeySecurity ();\n    parameters: []\n  overload: System.Security.AccessControl.CryptoKeySecurity.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/CryptoKeySecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.CryptoKeySecurity.#ctor(System.Security.AccessControl.CommonSecurityDescriptor)\n  commentId: M:System.Security.AccessControl.CryptoKeySecurity.#ctor(System.Security.AccessControl.CommonSecurityDescriptor)\n  id: '#ctor(System.Security.AccessControl.CommonSecurityDescriptor)'\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  langs:\n  - csharp\n  name: CryptoKeySecurity(CommonSecurityDescriptor)\n  nameWithType: CryptoKeySecurity.CryptoKeySecurity(CommonSecurityDescriptor)\n  fullName: CryptoKeySecurity.CryptoKeySecurity(CommonSecurityDescriptor)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Initializes a new instance of the <xref href=\"System.Security.AccessControl.CryptoKeySecurity\"></xref> class by using the specified security descriptor.\n  syntax:\n    content: public CryptoKeySecurity (System.Security.AccessControl.CommonSecurityDescriptor securityDescriptor);\n    parameters:\n    - id: securityDescriptor\n      type: System.Security.AccessControl.CommonSecurityDescriptor\n      description: The security descriptor from which to create the new <xref href=\"System.Security.AccessControl.CryptoKeySecurity\"></xref> object.\n  overload: System.Security.AccessControl.CryptoKeySecurity.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/CryptoKeySecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.CryptoKeySecurity.AccessRightType\n  commentId: P:System.Security.AccessControl.CryptoKeySecurity.AccessRightType\n  id: AccessRightType\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  langs:\n  - csharp\n  name: AccessRightType\n  nameWithType: CryptoKeySecurity.AccessRightType\n  fullName: CryptoKeySecurity.AccessRightType\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets the <xref href=\"System.Type\"></xref> of the securable object associated with this <xref href=\"System.Security.AccessControl.CryptoKeySecurity\"></xref> object.\n  syntax:\n    content: public override Type AccessRightType { get; }\n    return:\n      type: System.Type\n      description: The type of the securable object associated with this <xref href=\"System.Security.AccessControl.CryptoKeySecurity\"></xref> object.\n  overload: System.Security.AccessControl.CryptoKeySecurity.AccessRightType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/CryptoKeySecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.CryptoKeySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  commentId: M:System.Security.AccessControl.CryptoKeySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  id: AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  langs:\n  - csharp\n  name: AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)\n  nameWithType: CryptoKeySecurity.AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)\n  fullName: CryptoKeySecurity.AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Initializes a new instance of the <xref href=\"System.Security.AccessControl.AccessRule\"></xref> class with the specified values.\n  syntax:\n    content: public override sealed System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);\n    parameters:\n    - id: identityReference\n      type: System.Security.Principal.IdentityReference\n      description: The identity to which the access rule applies.  It must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>.\n    - id: accessMask\n      type: System.Int32\n      description: The access mask of this rule. The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.\n    - id: isInherited\n      type: System.Boolean\n      description: true if this rule is inherited from a parent container.\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: Specifies the inheritance properties of the access rule.\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: Specifies whether inherited access rules are automatically propagated. The propagation flags are ignored if <code>inheritanceFlags</code> is set to <xref href=\"System.Security.AccessControl.InheritanceFlags.None\"></xref>.\n    - id: type\n      type: System.Security.AccessControl.AccessControlType\n      description: Specifies the valid access control type.\n    return:\n      type: System.Security.AccessControl.AccessRule\n      description: The <xref href=\"System.Security.AccessControl.AccessRule\"></xref> object that this method creates.\n  overload: System.Security.AccessControl.CryptoKeySecurity.AccessRuleFactory*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/CryptoKeySecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.CryptoKeySecurity.AccessRuleType\n  commentId: P:System.Security.AccessControl.CryptoKeySecurity.AccessRuleType\n  id: AccessRuleType\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  langs:\n  - csharp\n  name: AccessRuleType\n  nameWithType: CryptoKeySecurity.AccessRuleType\n  fullName: CryptoKeySecurity.AccessRuleType\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets the <xref href=\"System.Type\"></xref> of the object associated with the access rules of this <xref href=\"System.Security.AccessControl.CryptoKeySecurity\"></xref> object. The <xref href=\"System.Type\"></xref> object must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object.\n  syntax:\n    content: public override Type AccessRuleType { get; }\n    return:\n      type: System.Type\n      description: The type of the object associated with the access rules of this <xref href=\"System.Security.AccessControl.CryptoKeySecurity\"></xref> object.\n  overload: System.Security.AccessControl.CryptoKeySecurity.AccessRuleType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/CryptoKeySecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.CryptoKeySecurity.AddAccessRule(System.Security.AccessControl.CryptoKeyAccessRule)\n  commentId: M:System.Security.AccessControl.CryptoKeySecurity.AddAccessRule(System.Security.AccessControl.CryptoKeyAccessRule)\n  id: AddAccessRule(System.Security.AccessControl.CryptoKeyAccessRule)\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  langs:\n  - csharp\n  name: AddAccessRule(CryptoKeyAccessRule)\n  nameWithType: CryptoKeySecurity.AddAccessRule(CryptoKeyAccessRule)\n  fullName: CryptoKeySecurity.AddAccessRule(CryptoKeyAccessRule)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Adds the specified access rule to the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.CryptoKeySecurity\"></xref> object.\n  remarks: Adding an access rule might cause existing access rules in the DACL to be merged.\n  syntax:\n    content: public void AddAccessRule (System.Security.AccessControl.CryptoKeyAccessRule rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.CryptoKeyAccessRule\n      description: The access rule to add.\n  overload: System.Security.AccessControl.CryptoKeySecurity.AddAccessRule*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/CryptoKeySecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.CryptoKeySecurity.AddAuditRule(System.Security.AccessControl.CryptoKeyAuditRule)\n  commentId: M:System.Security.AccessControl.CryptoKeySecurity.AddAuditRule(System.Security.AccessControl.CryptoKeyAuditRule)\n  id: AddAuditRule(System.Security.AccessControl.CryptoKeyAuditRule)\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  langs:\n  - csharp\n  name: AddAuditRule(CryptoKeyAuditRule)\n  nameWithType: CryptoKeySecurity.AddAuditRule(CryptoKeyAuditRule)\n  fullName: CryptoKeySecurity.AddAuditRule(CryptoKeyAuditRule)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Adds the specified audit rule to the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.CryptoKeySecurity\"></xref> object.\n  remarks: Adding an audit rule might cause existing access rules in the SACL to be merged.\n  syntax:\n    content: public void AddAuditRule (System.Security.AccessControl.CryptoKeyAuditRule rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.CryptoKeyAuditRule\n      description: The audit rule to add.\n  overload: System.Security.AccessControl.CryptoKeySecurity.AddAuditRule*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/CryptoKeySecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.CryptoKeySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  commentId: M:System.Security.AccessControl.CryptoKeySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  id: AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  langs:\n  - csharp\n  name: AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)\n  nameWithType: CryptoKeySecurity.AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)\n  fullName: CryptoKeySecurity.AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Initializes a new instance of the <xref href=\"System.Security.AccessControl.AuditRule\"></xref> class with the specified values.\n  syntax:\n    content: public override sealed System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);\n    parameters:\n    - id: identityReference\n      type: System.Security.Principal.IdentityReference\n      description: The identity to which the audit rule applies.  It must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>.\n    - id: accessMask\n      type: System.Int32\n      description: The access mask of this rule. The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.\n    - id: isInherited\n      type: System.Boolean\n      description: '`true` if this rule is inherited from a parent container.'\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: Specifies the inheritance properties of the audit rule.\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: Specifies whether inherited audit rules are automatically propagated. The propagation flags are ignored if <code>inheritanceFlags</code> is set to <xref href=\"System.Security.AccessControl.InheritanceFlags.None\"></xref>.\n    - id: flags\n      type: System.Security.AccessControl.AuditFlags\n      description: Specifies the conditions for which the rule is audited.\n    return:\n      type: System.Security.AccessControl.AuditRule\n      description: The <xref href=\"System.Security.AccessControl.AuditRule\"></xref> object that this method creates.\n  overload: System.Security.AccessControl.CryptoKeySecurity.AuditRuleFactory*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/CryptoKeySecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.CryptoKeySecurity.AuditRuleType\n  commentId: P:System.Security.AccessControl.CryptoKeySecurity.AuditRuleType\n  id: AuditRuleType\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  langs:\n  - csharp\n  name: AuditRuleType\n  nameWithType: CryptoKeySecurity.AuditRuleType\n  fullName: CryptoKeySecurity.AuditRuleType\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets the <xref href=\"System.Type\"></xref> object associated with the audit rules of this <xref href=\"System.Security.AccessControl.CryptoKeySecurity\"></xref> object. The <xref href=\"System.Type\"></xref> object must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object.\n  syntax:\n    content: public override Type AuditRuleType { get; }\n    return:\n      type: System.Type\n      description: The type of the object associated with the audit rules of this <xref href=\"System.Security.AccessControl.CryptoKeySecurity\"></xref> object.\n  overload: System.Security.AccessControl.CryptoKeySecurity.AuditRuleType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/CryptoKeySecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.CryptoKeySecurity.RemoveAccessRule(System.Security.AccessControl.CryptoKeyAccessRule)\n  commentId: M:System.Security.AccessControl.CryptoKeySecurity.RemoveAccessRule(System.Security.AccessControl.CryptoKeyAccessRule)\n  id: RemoveAccessRule(System.Security.AccessControl.CryptoKeyAccessRule)\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  langs:\n  - csharp\n  name: RemoveAccessRule(CryptoKeyAccessRule)\n  nameWithType: CryptoKeySecurity.RemoveAccessRule(CryptoKeyAccessRule)\n  fullName: CryptoKeySecurity.RemoveAccessRule(CryptoKeyAccessRule)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Removes access rules that contain the same security identifier and access mask as the specified access rule from the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.CryptoKeySecurity\"></xref> object.\n  remarks: \"Access removal is accomplished by using a complex algorithm that might add access control rules in addition to removing them.  \\n  \\n This method fails to remove the access rule and returns `false` if the inheritance rules associated with the access rule are too complex for the removal algorithm to succeed.\"\n  syntax:\n    content: public bool RemoveAccessRule (System.Security.AccessControl.CryptoKeyAccessRule rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.CryptoKeyAccessRule\n      description: The access rule to remove.\n    return:\n      type: System.Boolean\n      description: '`true` if the access rule was successfully removed; otherwise, `false`.'\n  overload: System.Security.AccessControl.CryptoKeySecurity.RemoveAccessRule*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/CryptoKeySecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.CryptoKeySecurity.RemoveAccessRuleAll(System.Security.AccessControl.CryptoKeyAccessRule)\n  commentId: M:System.Security.AccessControl.CryptoKeySecurity.RemoveAccessRuleAll(System.Security.AccessControl.CryptoKeyAccessRule)\n  id: RemoveAccessRuleAll(System.Security.AccessControl.CryptoKeyAccessRule)\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  langs:\n  - csharp\n  name: RemoveAccessRuleAll(CryptoKeyAccessRule)\n  nameWithType: CryptoKeySecurity.RemoveAccessRuleAll(CryptoKeyAccessRule)\n  fullName: CryptoKeySecurity.RemoveAccessRuleAll(CryptoKeyAccessRule)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Removes all access rules that have the same security identifier as the specified access rule from the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.CryptoKeySecurity\"></xref> object.\n  syntax:\n    content: public void RemoveAccessRuleAll (System.Security.AccessControl.CryptoKeyAccessRule rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.CryptoKeyAccessRule\n      description: The access rule to remove.\n  overload: System.Security.AccessControl.CryptoKeySecurity.RemoveAccessRuleAll*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/CryptoKeySecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.CryptoKeySecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.CryptoKeyAccessRule)\n  commentId: M:System.Security.AccessControl.CryptoKeySecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.CryptoKeyAccessRule)\n  id: RemoveAccessRuleSpecific(System.Security.AccessControl.CryptoKeyAccessRule)\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  langs:\n  - csharp\n  name: RemoveAccessRuleSpecific(CryptoKeyAccessRule)\n  nameWithType: CryptoKeySecurity.RemoveAccessRuleSpecific(CryptoKeyAccessRule)\n  fullName: CryptoKeySecurity.RemoveAccessRuleSpecific(CryptoKeyAccessRule)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Removes all access rules that exactly match the specified access rule from the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.CryptoKeySecurity\"></xref> object.\n  syntax:\n    content: public void RemoveAccessRuleSpecific (System.Security.AccessControl.CryptoKeyAccessRule rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.CryptoKeyAccessRule\n      description: The access rule to remove.\n  overload: System.Security.AccessControl.CryptoKeySecurity.RemoveAccessRuleSpecific*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/CryptoKeySecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.CryptoKeySecurity.RemoveAuditRule(System.Security.AccessControl.CryptoKeyAuditRule)\n  commentId: M:System.Security.AccessControl.CryptoKeySecurity.RemoveAuditRule(System.Security.AccessControl.CryptoKeyAuditRule)\n  id: RemoveAuditRule(System.Security.AccessControl.CryptoKeyAuditRule)\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  langs:\n  - csharp\n  name: RemoveAuditRule(CryptoKeyAuditRule)\n  nameWithType: CryptoKeySecurity.RemoveAuditRule(CryptoKeyAuditRule)\n  fullName: CryptoKeySecurity.RemoveAuditRule(CryptoKeyAuditRule)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Removes audit rules that contain the same security identifier and access mask as the specified audit rule from the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.CryptoKeySecurity\"></xref> object.\n  remarks: \"Audit removal is accomplished by using a complex algorithm that might add audit control rules in addition to removing them.  \\n  \\n This method fails to remove the audit rule and returns `false` if the inheritance rules associated with the audit rule are too complex for the removal algorithm to succeed.\"\n  syntax:\n    content: public bool RemoveAuditRule (System.Security.AccessControl.CryptoKeyAuditRule rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.CryptoKeyAuditRule\n      description: The audit rule to remove.\n    return:\n      type: System.Boolean\n      description: '`true` if the audit rule was successfully removed; otherwise, `false`.'\n  overload: System.Security.AccessControl.CryptoKeySecurity.RemoveAuditRule*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/CryptoKeySecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.CryptoKeySecurity.RemoveAuditRuleAll(System.Security.AccessControl.CryptoKeyAuditRule)\n  commentId: M:System.Security.AccessControl.CryptoKeySecurity.RemoveAuditRuleAll(System.Security.AccessControl.CryptoKeyAuditRule)\n  id: RemoveAuditRuleAll(System.Security.AccessControl.CryptoKeyAuditRule)\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  langs:\n  - csharp\n  name: RemoveAuditRuleAll(CryptoKeyAuditRule)\n  nameWithType: CryptoKeySecurity.RemoveAuditRuleAll(CryptoKeyAuditRule)\n  fullName: CryptoKeySecurity.RemoveAuditRuleAll(CryptoKeyAuditRule)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Removes all audit rules that have the same security identifier as the specified audit rule from the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.CryptoKeySecurity\"></xref> object.\n  syntax:\n    content: public void RemoveAuditRuleAll (System.Security.AccessControl.CryptoKeyAuditRule rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.CryptoKeyAuditRule\n      description: The audit rule to remove.\n  overload: System.Security.AccessControl.CryptoKeySecurity.RemoveAuditRuleAll*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/CryptoKeySecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.CryptoKeySecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.CryptoKeyAuditRule)\n  commentId: M:System.Security.AccessControl.CryptoKeySecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.CryptoKeyAuditRule)\n  id: RemoveAuditRuleSpecific(System.Security.AccessControl.CryptoKeyAuditRule)\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  langs:\n  - csharp\n  name: RemoveAuditRuleSpecific(CryptoKeyAuditRule)\n  nameWithType: CryptoKeySecurity.RemoveAuditRuleSpecific(CryptoKeyAuditRule)\n  fullName: CryptoKeySecurity.RemoveAuditRuleSpecific(CryptoKeyAuditRule)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Removes all audit rules that exactly match the specified audit rule from the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.CryptoKeySecurity\"></xref> object.\n  syntax:\n    content: public void RemoveAuditRuleSpecific (System.Security.AccessControl.CryptoKeyAuditRule rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.CryptoKeyAuditRule\n      description: The audit rule to remove.\n  overload: System.Security.AccessControl.CryptoKeySecurity.RemoveAuditRuleSpecific*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/CryptoKeySecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.CryptoKeySecurity.ResetAccessRule(System.Security.AccessControl.CryptoKeyAccessRule)\n  commentId: M:System.Security.AccessControl.CryptoKeySecurity.ResetAccessRule(System.Security.AccessControl.CryptoKeyAccessRule)\n  id: ResetAccessRule(System.Security.AccessControl.CryptoKeyAccessRule)\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  langs:\n  - csharp\n  name: ResetAccessRule(CryptoKeyAccessRule)\n  nameWithType: CryptoKeySecurity.ResetAccessRule(CryptoKeyAccessRule)\n  fullName: CryptoKeySecurity.ResetAccessRule(CryptoKeyAccessRule)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Removes all access rules in the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.CryptoKeySecurity\"></xref> object and then adds the specified access rule.\n  syntax:\n    content: public void ResetAccessRule (System.Security.AccessControl.CryptoKeyAccessRule rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.CryptoKeyAccessRule\n      description: The access rule to reset.\n  overload: System.Security.AccessControl.CryptoKeySecurity.ResetAccessRule*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/CryptoKeySecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.CryptoKeySecurity.SetAccessRule(System.Security.AccessControl.CryptoKeyAccessRule)\n  commentId: M:System.Security.AccessControl.CryptoKeySecurity.SetAccessRule(System.Security.AccessControl.CryptoKeyAccessRule)\n  id: SetAccessRule(System.Security.AccessControl.CryptoKeyAccessRule)\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  langs:\n  - csharp\n  name: SetAccessRule(CryptoKeyAccessRule)\n  nameWithType: CryptoKeySecurity.SetAccessRule(CryptoKeyAccessRule)\n  fullName: CryptoKeySecurity.SetAccessRule(CryptoKeyAccessRule)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Removes all access rules that contain the same security identifier and qualifier as the specified access rule in the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.CryptoKeySecurity\"></xref> object and then adds the specified access rule.\n  syntax:\n    content: public void SetAccessRule (System.Security.AccessControl.CryptoKeyAccessRule rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.CryptoKeyAccessRule\n      description: The access rule to set.\n  overload: System.Security.AccessControl.CryptoKeySecurity.SetAccessRule*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/CryptoKeySecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.CryptoKeySecurity.SetAuditRule(System.Security.AccessControl.CryptoKeyAuditRule)\n  commentId: M:System.Security.AccessControl.CryptoKeySecurity.SetAuditRule(System.Security.AccessControl.CryptoKeyAuditRule)\n  id: SetAuditRule(System.Security.AccessControl.CryptoKeyAuditRule)\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  langs:\n  - csharp\n  name: SetAuditRule(CryptoKeyAuditRule)\n  nameWithType: CryptoKeySecurity.SetAuditRule(CryptoKeyAuditRule)\n  fullName: CryptoKeySecurity.SetAuditRule(CryptoKeyAuditRule)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Removes all audit rules that contain the same security identifier and qualifier as the specified audit rule in the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.CryptoKeySecurity\"></xref> object and then adds the specified audit rule.\n  syntax:\n    content: public void SetAuditRule (System.Security.AccessControl.CryptoKeyAuditRule rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.CryptoKeyAuditRule\n      description: The audit rule to set.\n  overload: System.Security.AccessControl.CryptoKeySecurity.SetAuditRule*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/CryptoKeySecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Security.AccessControl.NativeObjectSecurity\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: NativeObjectSecurity\n  nameWithType: NativeObjectSecurity\n  fullName: System.Security.AccessControl.NativeObjectSecurity\n- uid: System.Security.AccessControl.CryptoKeySecurity.#ctor\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  isExternal: false\n  name: CryptoKeySecurity()\n  nameWithType: CryptoKeySecurity.CryptoKeySecurity()\n  fullName: CryptoKeySecurity.CryptoKeySecurity()\n- uid: System.Security.AccessControl.CryptoKeySecurity.#ctor(System.Security.AccessControl.CommonSecurityDescriptor)\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  isExternal: false\n  name: CryptoKeySecurity(CommonSecurityDescriptor)\n  nameWithType: CryptoKeySecurity.CryptoKeySecurity(CommonSecurityDescriptor)\n  fullName: CryptoKeySecurity.CryptoKeySecurity(CommonSecurityDescriptor)\n- uid: System.Security.AccessControl.CommonSecurityDescriptor\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: CommonSecurityDescriptor\n  nameWithType: CommonSecurityDescriptor\n  fullName: System.Security.AccessControl.CommonSecurityDescriptor\n- uid: System.Security.AccessControl.CryptoKeySecurity.AccessRightType\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  isExternal: false\n  name: AccessRightType\n  nameWithType: CryptoKeySecurity.AccessRightType\n  fullName: CryptoKeySecurity.AccessRightType\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Security.AccessControl.CryptoKeySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  isExternal: false\n  name: AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)\n  nameWithType: CryptoKeySecurity.AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)\n  fullName: CryptoKeySecurity.AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)\n- uid: System.Security.AccessControl.AccessRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessRule\n  nameWithType: AccessRule\n  fullName: System.Security.AccessControl.AccessRule\n- uid: System.Security.Principal.IdentityReference\n  parent: System.Security.Principal\n  isExternal: false\n  name: IdentityReference\n  nameWithType: IdentityReference\n  fullName: System.Security.Principal.IdentityReference\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.AccessControl.InheritanceFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: InheritanceFlags\n  nameWithType: InheritanceFlags\n  fullName: System.Security.AccessControl.InheritanceFlags\n- uid: System.Security.AccessControl.PropagationFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: PropagationFlags\n  nameWithType: PropagationFlags\n  fullName: System.Security.AccessControl.PropagationFlags\n- uid: System.Security.AccessControl.AccessControlType\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessControlType\n  nameWithType: AccessControlType\n  fullName: System.Security.AccessControl.AccessControlType\n- uid: System.Security.AccessControl.CryptoKeySecurity.AccessRuleType\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  isExternal: false\n  name: AccessRuleType\n  nameWithType: CryptoKeySecurity.AccessRuleType\n  fullName: CryptoKeySecurity.AccessRuleType\n- uid: System.Security.AccessControl.CryptoKeySecurity.AddAccessRule(System.Security.AccessControl.CryptoKeyAccessRule)\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  isExternal: false\n  name: AddAccessRule(CryptoKeyAccessRule)\n  nameWithType: CryptoKeySecurity.AddAccessRule(CryptoKeyAccessRule)\n  fullName: CryptoKeySecurity.AddAccessRule(CryptoKeyAccessRule)\n- uid: System.Security.AccessControl.CryptoKeyAccessRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: CryptoKeyAccessRule\n  nameWithType: CryptoKeyAccessRule\n  fullName: System.Security.AccessControl.CryptoKeyAccessRule\n- uid: System.Security.AccessControl.CryptoKeySecurity.AddAuditRule(System.Security.AccessControl.CryptoKeyAuditRule)\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  isExternal: false\n  name: AddAuditRule(CryptoKeyAuditRule)\n  nameWithType: CryptoKeySecurity.AddAuditRule(CryptoKeyAuditRule)\n  fullName: CryptoKeySecurity.AddAuditRule(CryptoKeyAuditRule)\n- uid: System.Security.AccessControl.CryptoKeyAuditRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: CryptoKeyAuditRule\n  nameWithType: CryptoKeyAuditRule\n  fullName: System.Security.AccessControl.CryptoKeyAuditRule\n- uid: System.Security.AccessControl.CryptoKeySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  isExternal: false\n  name: AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)\n  nameWithType: CryptoKeySecurity.AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)\n  fullName: CryptoKeySecurity.AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)\n- uid: System.Security.AccessControl.AuditRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AuditRule\n  nameWithType: AuditRule\n  fullName: System.Security.AccessControl.AuditRule\n- uid: System.Security.AccessControl.AuditFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AuditFlags\n  nameWithType: AuditFlags\n  fullName: System.Security.AccessControl.AuditFlags\n- uid: System.Security.AccessControl.CryptoKeySecurity.AuditRuleType\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  isExternal: false\n  name: AuditRuleType\n  nameWithType: CryptoKeySecurity.AuditRuleType\n  fullName: CryptoKeySecurity.AuditRuleType\n- uid: System.Security.AccessControl.CryptoKeySecurity.RemoveAccessRule(System.Security.AccessControl.CryptoKeyAccessRule)\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  isExternal: false\n  name: RemoveAccessRule(CryptoKeyAccessRule)\n  nameWithType: CryptoKeySecurity.RemoveAccessRule(CryptoKeyAccessRule)\n  fullName: CryptoKeySecurity.RemoveAccessRule(CryptoKeyAccessRule)\n- uid: System.Security.AccessControl.CryptoKeySecurity.RemoveAccessRuleAll(System.Security.AccessControl.CryptoKeyAccessRule)\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  isExternal: false\n  name: RemoveAccessRuleAll(CryptoKeyAccessRule)\n  nameWithType: CryptoKeySecurity.RemoveAccessRuleAll(CryptoKeyAccessRule)\n  fullName: CryptoKeySecurity.RemoveAccessRuleAll(CryptoKeyAccessRule)\n- uid: System.Security.AccessControl.CryptoKeySecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.CryptoKeyAccessRule)\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  isExternal: false\n  name: RemoveAccessRuleSpecific(CryptoKeyAccessRule)\n  nameWithType: CryptoKeySecurity.RemoveAccessRuleSpecific(CryptoKeyAccessRule)\n  fullName: CryptoKeySecurity.RemoveAccessRuleSpecific(CryptoKeyAccessRule)\n- uid: System.Security.AccessControl.CryptoKeySecurity.RemoveAuditRule(System.Security.AccessControl.CryptoKeyAuditRule)\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  isExternal: false\n  name: RemoveAuditRule(CryptoKeyAuditRule)\n  nameWithType: CryptoKeySecurity.RemoveAuditRule(CryptoKeyAuditRule)\n  fullName: CryptoKeySecurity.RemoveAuditRule(CryptoKeyAuditRule)\n- uid: System.Security.AccessControl.CryptoKeySecurity.RemoveAuditRuleAll(System.Security.AccessControl.CryptoKeyAuditRule)\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  isExternal: false\n  name: RemoveAuditRuleAll(CryptoKeyAuditRule)\n  nameWithType: CryptoKeySecurity.RemoveAuditRuleAll(CryptoKeyAuditRule)\n  fullName: CryptoKeySecurity.RemoveAuditRuleAll(CryptoKeyAuditRule)\n- uid: System.Security.AccessControl.CryptoKeySecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.CryptoKeyAuditRule)\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  isExternal: false\n  name: RemoveAuditRuleSpecific(CryptoKeyAuditRule)\n  nameWithType: CryptoKeySecurity.RemoveAuditRuleSpecific(CryptoKeyAuditRule)\n  fullName: CryptoKeySecurity.RemoveAuditRuleSpecific(CryptoKeyAuditRule)\n- uid: System.Security.AccessControl.CryptoKeySecurity.ResetAccessRule(System.Security.AccessControl.CryptoKeyAccessRule)\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  isExternal: false\n  name: ResetAccessRule(CryptoKeyAccessRule)\n  nameWithType: CryptoKeySecurity.ResetAccessRule(CryptoKeyAccessRule)\n  fullName: CryptoKeySecurity.ResetAccessRule(CryptoKeyAccessRule)\n- uid: System.Security.AccessControl.CryptoKeySecurity.SetAccessRule(System.Security.AccessControl.CryptoKeyAccessRule)\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  isExternal: false\n  name: SetAccessRule(CryptoKeyAccessRule)\n  nameWithType: CryptoKeySecurity.SetAccessRule(CryptoKeyAccessRule)\n  fullName: CryptoKeySecurity.SetAccessRule(CryptoKeyAccessRule)\n- uid: System.Security.AccessControl.CryptoKeySecurity.SetAuditRule(System.Security.AccessControl.CryptoKeyAuditRule)\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  isExternal: false\n  name: SetAuditRule(CryptoKeyAuditRule)\n  nameWithType: CryptoKeySecurity.SetAuditRule(CryptoKeyAuditRule)\n  fullName: CryptoKeySecurity.SetAuditRule(CryptoKeyAuditRule)\n- uid: System.Security.AccessControl.CryptoKeySecurity.#ctor*\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  isExternal: false\n  name: CryptoKeySecurity\n  nameWithType: CryptoKeySecurity.CryptoKeySecurity\n  fullName: CryptoKeySecurity.CryptoKeySecurity\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/CryptoKeySecurity.xml\n- uid: System.Security.AccessControl.CryptoKeySecurity.AccessRightType*\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  isExternal: false\n  name: AccessRightType\n  nameWithType: CryptoKeySecurity.AccessRightType\n  fullName: CryptoKeySecurity.AccessRightType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/CryptoKeySecurity.xml\n- uid: System.Security.AccessControl.CryptoKeySecurity.AccessRuleFactory*\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  isExternal: false\n  name: AccessRuleFactory\n  nameWithType: CryptoKeySecurity.AccessRuleFactory\n  fullName: CryptoKeySecurity.AccessRuleFactory\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/CryptoKeySecurity.xml\n- uid: System.Security.AccessControl.CryptoKeySecurity.AccessRuleType*\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  isExternal: false\n  name: AccessRuleType\n  nameWithType: CryptoKeySecurity.AccessRuleType\n  fullName: CryptoKeySecurity.AccessRuleType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/CryptoKeySecurity.xml\n- uid: System.Security.AccessControl.CryptoKeySecurity.AddAccessRule*\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  isExternal: false\n  name: AddAccessRule\n  nameWithType: CryptoKeySecurity.AddAccessRule\n  fullName: CryptoKeySecurity.AddAccessRule\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/CryptoKeySecurity.xml\n- uid: System.Security.AccessControl.CryptoKeySecurity.AddAuditRule*\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  isExternal: false\n  name: AddAuditRule\n  nameWithType: CryptoKeySecurity.AddAuditRule\n  fullName: CryptoKeySecurity.AddAuditRule\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/CryptoKeySecurity.xml\n- uid: System.Security.AccessControl.CryptoKeySecurity.AuditRuleFactory*\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  isExternal: false\n  name: AuditRuleFactory\n  nameWithType: CryptoKeySecurity.AuditRuleFactory\n  fullName: CryptoKeySecurity.AuditRuleFactory\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/CryptoKeySecurity.xml\n- uid: System.Security.AccessControl.CryptoKeySecurity.AuditRuleType*\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  isExternal: false\n  name: AuditRuleType\n  nameWithType: CryptoKeySecurity.AuditRuleType\n  fullName: CryptoKeySecurity.AuditRuleType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/CryptoKeySecurity.xml\n- uid: System.Security.AccessControl.CryptoKeySecurity.RemoveAccessRule*\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  isExternal: false\n  name: RemoveAccessRule\n  nameWithType: CryptoKeySecurity.RemoveAccessRule\n  fullName: CryptoKeySecurity.RemoveAccessRule\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/CryptoKeySecurity.xml\n- uid: System.Security.AccessControl.CryptoKeySecurity.RemoveAccessRuleAll*\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  isExternal: false\n  name: RemoveAccessRuleAll\n  nameWithType: CryptoKeySecurity.RemoveAccessRuleAll\n  fullName: CryptoKeySecurity.RemoveAccessRuleAll\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/CryptoKeySecurity.xml\n- uid: System.Security.AccessControl.CryptoKeySecurity.RemoveAccessRuleSpecific*\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  isExternal: false\n  name: RemoveAccessRuleSpecific\n  nameWithType: CryptoKeySecurity.RemoveAccessRuleSpecific\n  fullName: CryptoKeySecurity.RemoveAccessRuleSpecific\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/CryptoKeySecurity.xml\n- uid: System.Security.AccessControl.CryptoKeySecurity.RemoveAuditRule*\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  isExternal: false\n  name: RemoveAuditRule\n  nameWithType: CryptoKeySecurity.RemoveAuditRule\n  fullName: CryptoKeySecurity.RemoveAuditRule\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/CryptoKeySecurity.xml\n- uid: System.Security.AccessControl.CryptoKeySecurity.RemoveAuditRuleAll*\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  isExternal: false\n  name: RemoveAuditRuleAll\n  nameWithType: CryptoKeySecurity.RemoveAuditRuleAll\n  fullName: CryptoKeySecurity.RemoveAuditRuleAll\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/CryptoKeySecurity.xml\n- uid: System.Security.AccessControl.CryptoKeySecurity.RemoveAuditRuleSpecific*\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  isExternal: false\n  name: RemoveAuditRuleSpecific\n  nameWithType: CryptoKeySecurity.RemoveAuditRuleSpecific\n  fullName: CryptoKeySecurity.RemoveAuditRuleSpecific\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/CryptoKeySecurity.xml\n- uid: System.Security.AccessControl.CryptoKeySecurity.ResetAccessRule*\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  isExternal: false\n  name: ResetAccessRule\n  nameWithType: CryptoKeySecurity.ResetAccessRule\n  fullName: CryptoKeySecurity.ResetAccessRule\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/CryptoKeySecurity.xml\n- uid: System.Security.AccessControl.CryptoKeySecurity.SetAccessRule*\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  isExternal: false\n  name: SetAccessRule\n  nameWithType: CryptoKeySecurity.SetAccessRule\n  fullName: CryptoKeySecurity.SetAccessRule\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/CryptoKeySecurity.xml\n- uid: System.Security.AccessControl.CryptoKeySecurity.SetAuditRule*\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  isExternal: false\n  name: SetAuditRule\n  nameWithType: CryptoKeySecurity.SetAuditRule\n  fullName: CryptoKeySecurity.SetAuditRule\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/CryptoKeySecurity.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Security.AccessControl.ObjectSecurity.AccessRulesModified\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AccessRulesModified\n  nameWithType: ObjectSecurity.AccessRulesModified\n  fullName: ObjectSecurity.AccessRulesModified\n- uid: System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AreAccessRulesCanonical\n  nameWithType: ObjectSecurity.AreAccessRulesCanonical\n  fullName: ObjectSecurity.AreAccessRulesCanonical\n- uid: System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AreAccessRulesProtected\n  nameWithType: ObjectSecurity.AreAccessRulesProtected\n  fullName: ObjectSecurity.AreAccessRulesProtected\n- uid: System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AreAuditRulesCanonical\n  nameWithType: ObjectSecurity.AreAuditRulesCanonical\n  fullName: ObjectSecurity.AreAuditRulesCanonical\n- uid: System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AreAuditRulesProtected\n  nameWithType: ObjectSecurity.AreAuditRulesProtected\n  fullName: ObjectSecurity.AreAuditRulesProtected\n- uid: System.Security.AccessControl.ObjectSecurity.AuditRulesModified\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AuditRulesModified\n  nameWithType: ObjectSecurity.AuditRulesModified\n  fullName: ObjectSecurity.AuditRulesModified\n- uid: System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: GetGroup(Type)\n  nameWithType: ObjectSecurity.GetGroup(Type)\n  fullName: ObjectSecurity.GetGroup(Type)\n- uid: System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: GetOwner(Type)\n  nameWithType: ObjectSecurity.GetOwner(Type)\n  fullName: ObjectSecurity.GetOwner(Type)\n- uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: GetSecurityDescriptorBinaryForm()\n  nameWithType: ObjectSecurity.GetSecurityDescriptorBinaryForm()\n  fullName: ObjectSecurity.GetSecurityDescriptorBinaryForm()\n- uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: GetSecurityDescriptorSddlForm(AccessControlSections)\n  nameWithType: ObjectSecurity.GetSecurityDescriptorSddlForm(AccessControlSections)\n  fullName: ObjectSecurity.GetSecurityDescriptorSddlForm(AccessControlSections)\n- uid: System.Security.AccessControl.ObjectSecurity.GroupModified\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: GroupModified\n  nameWithType: ObjectSecurity.GroupModified\n  fullName: ObjectSecurity.GroupModified\n- uid: System.Security.AccessControl.ObjectSecurity.IsContainer\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: IsContainer\n  nameWithType: ObjectSecurity.IsContainer\n  fullName: ObjectSecurity.IsContainer\n- uid: System.Security.AccessControl.ObjectSecurity.IsDS\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: IsDS\n  nameWithType: ObjectSecurity.IsDS\n  fullName: ObjectSecurity.IsDS\n- uid: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: IsSddlConversionSupported()\n  nameWithType: ObjectSecurity.IsSddlConversionSupported()\n  fullName: ObjectSecurity.IsSddlConversionSupported()\n- uid: System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: ModifyAccess(AccessControlModification, AccessRule, Boolean)\n  nameWithType: CommonObjectSecurity.ModifyAccess(AccessControlModification, AccessRule, Boolean)\n  fullName: CommonObjectSecurity.ModifyAccess(AccessControlModification, AccessRule, Boolean)\n- uid: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: ModifyAccessRule(AccessControlModification, AccessRule, Boolean)\n  nameWithType: ObjectSecurity.ModifyAccessRule(AccessControlModification, AccessRule, Boolean)\n  fullName: ObjectSecurity.ModifyAccessRule(AccessControlModification, AccessRule, Boolean)\n- uid: System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: ModifyAudit(AccessControlModification, AuditRule, Boolean)\n  nameWithType: CommonObjectSecurity.ModifyAudit(AccessControlModification, AuditRule, Boolean)\n  fullName: CommonObjectSecurity.ModifyAudit(AccessControlModification, AuditRule, Boolean)\n- uid: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: ModifyAuditRule(AccessControlModification, AuditRule, Boolean)\n  nameWithType: ObjectSecurity.ModifyAuditRule(AccessControlModification, AuditRule, Boolean)\n  fullName: ObjectSecurity.ModifyAuditRule(AccessControlModification, AuditRule, Boolean)\n- uid: System.Security.AccessControl.ObjectSecurity.OwnerModified\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: OwnerModified\n  nameWithType: ObjectSecurity.OwnerModified\n  fullName: ObjectSecurity.OwnerModified\n- uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.NativeObjectSecurity\n  isExternal: false\n  name: Persist(SafeHandle, AccessControlSections)\n  nameWithType: NativeObjectSecurity.Persist(SafeHandle, AccessControlSections)\n  fullName: NativeObjectSecurity.Persist(SafeHandle, AccessControlSections)\n- uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.NativeObjectSecurity\n  isExternal: false\n  name: Persist(String, AccessControlSections)\n  nameWithType: NativeObjectSecurity.Persist(String, AccessControlSections)\n  fullName: NativeObjectSecurity.Persist(String, AccessControlSections)\n- uid: System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: Persist(Boolean, String, AccessControlSections)\n  nameWithType: ObjectSecurity.Persist(Boolean, String, AccessControlSections)\n  fullName: ObjectSecurity.Persist(Boolean, String, AccessControlSections)\n- uid: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: PurgeAccessRules(IdentityReference)\n  nameWithType: ObjectSecurity.PurgeAccessRules(IdentityReference)\n  fullName: ObjectSecurity.PurgeAccessRules(IdentityReference)\n- uid: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: PurgeAuditRules(IdentityReference)\n  nameWithType: ObjectSecurity.PurgeAuditRules(IdentityReference)\n  fullName: ObjectSecurity.PurgeAuditRules(IdentityReference)\n- uid: System.Security.AccessControl.ObjectSecurity.ReadLock\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: ReadLock()\n  nameWithType: ObjectSecurity.ReadLock()\n  fullName: ObjectSecurity.ReadLock()\n- uid: System.Security.AccessControl.ObjectSecurity.ReadUnlock\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: ReadUnlock()\n  nameWithType: ObjectSecurity.ReadUnlock()\n  fullName: ObjectSecurity.ReadUnlock()\n- uid: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetAccessRuleProtection(Boolean, Boolean)\n  nameWithType: ObjectSecurity.SetAccessRuleProtection(Boolean, Boolean)\n  fullName: ObjectSecurity.SetAccessRuleProtection(Boolean, Boolean)\n- uid: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetAuditRuleProtection(Boolean, Boolean)\n  nameWithType: ObjectSecurity.SetAuditRuleProtection(Boolean, Boolean)\n  fullName: ObjectSecurity.SetAuditRuleProtection(Boolean, Boolean)\n- uid: System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetGroup(IdentityReference)\n  nameWithType: ObjectSecurity.SetGroup(IdentityReference)\n  fullName: ObjectSecurity.SetGroup(IdentityReference)\n- uid: System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetOwner(IdentityReference)\n  nameWithType: ObjectSecurity.SetOwner(IdentityReference)\n  fullName: ObjectSecurity.SetOwner(IdentityReference)\n- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetSecurityDescriptorBinaryForm(Byte[])\n  nameWithType: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte[])\n  fullName: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte[])\n- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetSecurityDescriptorBinaryForm(Byte[], AccessControlSections)\n  nameWithType: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte[], AccessControlSections)\n  fullName: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte[], AccessControlSections)\n- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetSecurityDescriptorSddlForm(String)\n  nameWithType: ObjectSecurity.SetSecurityDescriptorSddlForm(String)\n  fullName: ObjectSecurity.SetSecurityDescriptorSddlForm(String)\n- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetSecurityDescriptorSddlForm(String, AccessControlSections)\n  nameWithType: ObjectSecurity.SetSecurityDescriptorSddlForm(String, AccessControlSections)\n  fullName: ObjectSecurity.SetSecurityDescriptorSddlForm(String, AccessControlSections)\n- uid: System.Security.AccessControl.ObjectSecurity.WriteLock\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: WriteLock()\n  nameWithType: ObjectSecurity.WriteLock()\n  fullName: ObjectSecurity.WriteLock()\n- uid: System.Security.AccessControl.ObjectSecurity.WriteUnlock\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: WriteUnlock()\n  nameWithType: ObjectSecurity.WriteUnlock()\n  fullName: ObjectSecurity.WriteUnlock()\n- uid: System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: AddAccessRule(AccessRule)\n  nameWithType: CommonObjectSecurity.AddAccessRule(AccessRule)\n  fullName: CommonObjectSecurity.AddAccessRule(AccessRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: AddAuditRule(AuditRule)\n  nameWithType: CommonObjectSecurity.AddAuditRule(AuditRule)\n  fullName: CommonObjectSecurity.AddAuditRule(AuditRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: GetAccessRules(Boolean, Boolean, Type)\n  nameWithType: CommonObjectSecurity.GetAccessRules(Boolean, Boolean, Type)\n  fullName: CommonObjectSecurity.GetAccessRules(Boolean, Boolean, Type)\n- uid: System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: GetAuditRules(Boolean, Boolean, Type)\n  nameWithType: CommonObjectSecurity.GetAuditRules(Boolean, Boolean, Type)\n  fullName: CommonObjectSecurity.GetAuditRules(Boolean, Boolean, Type)\n- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: RemoveAccessRule(AccessRule)\n  nameWithType: CommonObjectSecurity.RemoveAccessRule(AccessRule)\n  fullName: CommonObjectSecurity.RemoveAccessRule(AccessRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: RemoveAccessRuleAll(AccessRule)\n  nameWithType: CommonObjectSecurity.RemoveAccessRuleAll(AccessRule)\n  fullName: CommonObjectSecurity.RemoveAccessRuleAll(AccessRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: RemoveAccessRuleSpecific(AccessRule)\n  nameWithType: CommonObjectSecurity.RemoveAccessRuleSpecific(AccessRule)\n  fullName: CommonObjectSecurity.RemoveAccessRuleSpecific(AccessRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: RemoveAuditRule(AuditRule)\n  nameWithType: CommonObjectSecurity.RemoveAuditRule(AuditRule)\n  fullName: CommonObjectSecurity.RemoveAuditRule(AuditRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: RemoveAuditRuleAll(AuditRule)\n  nameWithType: CommonObjectSecurity.RemoveAuditRuleAll(AuditRule)\n  fullName: CommonObjectSecurity.RemoveAuditRuleAll(AuditRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: RemoveAuditRuleSpecific(AuditRule)\n  nameWithType: CommonObjectSecurity.RemoveAuditRuleSpecific(AuditRule)\n  fullName: CommonObjectSecurity.RemoveAuditRuleSpecific(AuditRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: ResetAccessRule(AccessRule)\n  nameWithType: CommonObjectSecurity.ResetAccessRule(AccessRule)\n  fullName: CommonObjectSecurity.ResetAccessRule(AccessRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: SetAccessRule(AccessRule)\n  nameWithType: CommonObjectSecurity.SetAccessRule(AccessRule)\n  fullName: CommonObjectSecurity.SetAccessRule(AccessRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: SetAuditRule(AuditRule)\n  nameWithType: CommonObjectSecurity.SetAuditRule(AuditRule)\n  fullName: CommonObjectSecurity.SetAuditRule(AuditRule)\n- uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Object)\n  parent: System.Security.AccessControl.NativeObjectSecurity\n  isExternal: false\n  name: Persist(SafeHandle, AccessControlSections, Object)\n  nameWithType: NativeObjectSecurity.Persist(SafeHandle, AccessControlSections, Object)\n  fullName: NativeObjectSecurity.Persist(SafeHandle, AccessControlSections, Object)\n- uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections,System.Object)\n  parent: System.Security.AccessControl.NativeObjectSecurity\n  isExternal: false\n  name: Persist(String, AccessControlSections, Object)\n  nameWithType: NativeObjectSecurity.Persist(String, AccessControlSections, Object)\n  fullName: NativeObjectSecurity.Persist(String, AccessControlSections, Object)\n"}