{"nodes":[{"content":"Keeps track of objects as they are deserialized.","nodes":[{"pos":[0,48],"content":"Keeps track of objects as they are deserialized.","nodes":[{"content":"Keeps track of objects as they are deserialized.","pos":[0,48]}]}],"pos":[1939,1988],"yaml":true},{"content":"During deserialization, the <xref:System.Runtime.Serialization.Formatter> queries the <xref:System.Runtime.Serialization.ObjectManager> to determine whether a reference to an object in the serialized stream refers to an object that has already been deserialized (a backward reference), or to an object that has not yet been deserialized (a forward reference). If the reference in the serialized stream is a forward reference, then the <xref:System.Runtime.Serialization.Formatter> can register a fixup with the <xref:System.Runtime.Serialization.ObjectManager>. If the reference in the serialized stream is a backward reference, the <xref:System.Runtime.Serialization.Formatter> immediately completes the reference. Fixup refers to the process of finalizing object references not already completed during the object deserialization process. After the required object has been deserialized, the <xref:System.Runtime.Serialization.ObjectManager> will complete the reference.  \n  \n The <xref:System.Runtime.Serialization.ObjectManager> follows a set of rules that dictate the fixup order. All objects that implement <xref:System.Runtime.Serialization.ISerializable> or have a <xref:System.Runtime.Serialization.ISerializationSurrogate> can expect to have all the objects that they transmitted through <xref:System.Runtime.Serialization.SerializationInfo> available when the object tree is deserialized. However, a parent object cannot presume that all its child objects will be fully completed when it is fully deserialized. All child objects will be present but not all the grandchild objects will necessarily be present. If an object needs to take certain actions that depend on executing code on its child objects, it can delay these actions, implement the <xref:System.Runtime.Serialization.IDeserializationCallback> interface, and execute the code only when it is called back on this interface.","nodes":[{"pos":[0,972],"content":"During deserialization, the <xref:System.Runtime.Serialization.Formatter> queries the <xref:System.Runtime.Serialization.ObjectManager> to determine whether a reference to an object in the serialized stream refers to an object that has already been deserialized (a backward reference), or to an object that has not yet been deserialized (a forward reference). If the reference in the serialized stream is a forward reference, then the <xref:System.Runtime.Serialization.Formatter> can register a fixup with the <xref:System.Runtime.Serialization.ObjectManager>. If the reference in the serialized stream is a backward reference, the <xref:System.Runtime.Serialization.Formatter> immediately completes the reference. Fixup refers to the process of finalizing object references not already completed during the object deserialization process. After the required object has been deserialized, the <xref:System.Runtime.Serialization.ObjectManager> will complete the reference.","nodes":[{"content":"During deserialization, the <xref:System.Runtime.Serialization.Formatter> queries the <xref:System.Runtime.Serialization.ObjectManager> to determine whether a reference to an object in the serialized stream refers to an object that has already been deserialized (a backward reference), or to an object that has not yet been deserialized (a forward reference). If the reference in the serialized stream is a forward reference, then the <xref:System.Runtime.Serialization.Formatter> can register a fixup with the <xref:System.Runtime.Serialization.ObjectManager>. If the reference in the serialized stream is a backward reference, the <xref:System.Runtime.Serialization.Formatter> immediately completes the reference. Fixup refers to the process of finalizing object references not already completed during the object deserialization process. After the required object has been deserialized, the <xref:System.Runtime.Serialization.ObjectManager> will complete the reference.","pos":[0,972],"nodes":[{"content":"During deserialization, the <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.Formatter&gt;</ph> queries the <ph id=\"ph2\">&lt;xref:System.Runtime.Serialization.ObjectManager&gt;</ph> to determine whether a reference to an object in the serialized stream refers to an object that has already been deserialized (a backward reference), or to an object that has not yet been deserialized (a forward reference).","pos":[0,359],"source":"During deserialization, the <xref:System.Runtime.Serialization.Formatter> queries the <xref:System.Runtime.Serialization.ObjectManager> to determine whether a reference to an object in the serialized stream refers to an object that has already been deserialized (a backward reference), or to an object that has not yet been deserialized (a forward reference)."},{"content":"If the reference in the serialized stream is a forward reference, then the <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.Formatter&gt;</ph> can register a fixup with the <ph id=\"ph2\">&lt;xref:System.Runtime.Serialization.ObjectManager&gt;</ph>.","pos":[360,561],"source":" If the reference in the serialized stream is a forward reference, then the <xref:System.Runtime.Serialization.Formatter> can register a fixup with the <xref:System.Runtime.Serialization.ObjectManager>."},{"content":"If the reference in the serialized stream is a backward reference, the <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.Formatter&gt;</ph> immediately completes the reference.","pos":[562,715],"source":" If the reference in the serialized stream is a backward reference, the <xref:System.Runtime.Serialization.Formatter> immediately completes the reference."},{"content":"Fixup refers to the process of finalizing object references not already completed during the object deserialization process.","pos":[716,840]},{"content":"After the required object has been deserialized, the <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.ObjectManager&gt;</ph> will complete the reference.","pos":[841,972],"source":" After the required object has been deserialized, the <xref:System.Runtime.Serialization.ObjectManager> will complete the reference."}]}]},{"pos":[979,1896],"content":"The <xref:System.Runtime.Serialization.ObjectManager> follows a set of rules that dictate the fixup order. All objects that implement <xref:System.Runtime.Serialization.ISerializable> or have a <xref:System.Runtime.Serialization.ISerializationSurrogate> can expect to have all the objects that they transmitted through <xref:System.Runtime.Serialization.SerializationInfo> available when the object tree is deserialized. However, a parent object cannot presume that all its child objects will be fully completed when it is fully deserialized. All child objects will be present but not all the grandchild objects will necessarily be present. If an object needs to take certain actions that depend on executing code on its child objects, it can delay these actions, implement the <xref:System.Runtime.Serialization.IDeserializationCallback> interface, and execute the code only when it is called back on this interface.","nodes":[{"content":"The <xref:System.Runtime.Serialization.ObjectManager> follows a set of rules that dictate the fixup order. All objects that implement <xref:System.Runtime.Serialization.ISerializable> or have a <xref:System.Runtime.Serialization.ISerializationSurrogate> can expect to have all the objects that they transmitted through <xref:System.Runtime.Serialization.SerializationInfo> available when the object tree is deserialized. However, a parent object cannot presume that all its child objects will be fully completed when it is fully deserialized. All child objects will be present but not all the grandchild objects will necessarily be present. If an object needs to take certain actions that depend on executing code on its child objects, it can delay these actions, implement the <xref:System.Runtime.Serialization.IDeserializationCallback> interface, and execute the code only when it is called back on this interface.","pos":[0,917],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.ObjectManager&gt;</ph> follows a set of rules that dictate the fixup order.","pos":[0,106],"source":"The <xref:System.Runtime.Serialization.ObjectManager> follows a set of rules that dictate the fixup order."},{"content":"All objects that implement <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> or have a <ph id=\"ph2\">&lt;xref:System.Runtime.Serialization.ISerializationSurrogate&gt;</ph> can expect to have all the objects that they transmitted through <ph id=\"ph3\">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> available when the object tree is deserialized.","pos":[107,420],"source":" All objects that implement <xref:System.Runtime.Serialization.ISerializable> or have a <xref:System.Runtime.Serialization.ISerializationSurrogate> can expect to have all the objects that they transmitted through <xref:System.Runtime.Serialization.SerializationInfo> available when the object tree is deserialized."},{"content":"However, a parent object cannot presume that all its child objects will be fully completed when it is fully deserialized.","pos":[421,542]},{"content":"All child objects will be present but not all the grandchild objects will necessarily be present.","pos":[543,640]},{"content":"If an object needs to take certain actions that depend on executing code on its child objects, it can delay these actions, implement the <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.IDeserializationCallback&gt;</ph> interface, and execute the code only when it is called back on this interface.","pos":[641,917],"source":" If an object needs to take certain actions that depend on executing code on its child objects, it can delay these actions, implement the <xref:System.Runtime.Serialization.IDeserializationCallback> interface, and execute the code only when it is called back on this interface."}]}]}],"pos":[1999,3900],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Runtime.Serialization.ObjectManager\"></xref> class.","nodes":[{"pos":[0,104],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.ObjectManager\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Runtime.Serialization.ObjectManager\"></xref> class."}],"pos":[6315,6420],"yaml":true},{"content":"The surrogate selector to use. The <xref href=\"System.Runtime.Serialization.ISurrogateSelector\"></xref> determines the correct surrogate to use when deserializing objects of a given type. At deserialization time, the surrogate selector creates a new instance of the object from the information transmitted on the stream.","nodes":[{"pos":[0,320],"content":"The surrogate selector to use. The <xref href=\"System.Runtime.Serialization.ISurrogateSelector\"></xref> determines the correct surrogate to use when deserializing objects of a given type. At deserialization time, the surrogate selector creates a new instance of the object from the information transmitted on the stream.","nodes":[{"content":"The surrogate selector to use.","pos":[0,30]},{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.ISurrogateSelector\"&gt;&lt;/xref&gt;</ph> determines the correct surrogate to use when deserializing objects of a given type.","pos":[31,187],"source":" The <xref href=\"System.Runtime.Serialization.ISurrogateSelector\"></xref> determines the correct surrogate to use when deserializing objects of a given type."},{"content":"At deserialization time, the surrogate selector creates a new instance of the object from the information transmitted on the stream.","pos":[188,320]}]}],"pos":[6693,7014],"yaml":true},{"content":"The streaming context. The <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref> is not used by `ObjectManager`, but is passed as a parameter to any objects implementing <xref href=\"System.Runtime.Serialization.ISerializable\"></xref> or having a <xref href=\"System.Runtime.Serialization.ISerializationSurrogate\"></xref>. These objects can take specific actions depending on the source of the information to deserialize.","nodes":[{"pos":[0,432],"content":"The streaming context. The <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref> is not used by `ObjectManager`, but is passed as a parameter to any objects implementing <xref href=\"System.Runtime.Serialization.ISerializable\"></xref> or having a <xref href=\"System.Runtime.Serialization.ISerializationSurrogate\"></xref>. These objects can take specific actions depending on the source of the information to deserialize.","nodes":[{"content":"The streaming context.","pos":[0,22]},{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.StreamingContext\"&gt;&lt;/xref&gt;</ph> is not used by <ph id=\"ph2\">`ObjectManager`</ph>, but is passed as a parameter to any objects implementing <ph id=\"ph3\">&lt;xref href=\"System.Runtime.Serialization.ISerializable\"&gt;&lt;/xref&gt;</ph> or having a <ph id=\"ph4\">&lt;xref href=\"System.Runtime.Serialization.ISerializationSurrogate\"&gt;&lt;/xref&gt;</ph>.","pos":[23,333],"source":" The <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref> is not used by `ObjectManager`, but is passed as a parameter to any objects implementing <xref href=\"System.Runtime.Serialization.ISerializable\"></xref> or having a <xref href=\"System.Runtime.Serialization.ISerializationSurrogate\"></xref>."},{"content":"These objects can take specific actions depending on the source of the information to deserialize.","pos":[334,432]}]}],"pos":[7109,7542],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[7730,7780],"yaml":true},{"content":"Performs all the recorded fixups.","nodes":[{"pos":[0,33],"content":"Performs all the recorded fixups.","nodes":[{"content":"Performs all the recorded fixups.","pos":[0,33]}]}],"pos":[8960,8994],"yaml":true},{"content":"The fixups are carried out by any appropriate surrogate, the object itself (if it implements <xref:System.Runtime.Serialization.ISerializable>), or the default implementation.","nodes":[{"pos":[0,175],"content":"The fixups are carried out by any appropriate surrogate, the object itself (if it implements <xref:System.Runtime.Serialization.ISerializable>), or the default implementation.","nodes":[{"content":"The fixups are carried out by any appropriate surrogate, the object itself (if it implements <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph>), or the default implementation.","pos":[0,175],"source":"The fixups are carried out by any appropriate surrogate, the object itself (if it implements <xref:System.Runtime.Serialization.ISerializable>), or the default implementation."}]}],"pos":[9005,9181],"yaml":true,"extradata":"MT"},{"content":"A fixup was not successfully completed.","nodes":[{"pos":[0,39],"content":"A fixup was not successfully completed.","nodes":[{"content":"A fixup was not successfully completed.","pos":[0,39]}]}],"pos":[9483,9523],"yaml":true},{"content":"Returns the object with the specified object ID.","nodes":[{"pos":[0,48],"content":"Returns the object with the specified object ID.","nodes":[{"content":"Returns the object with the specified object ID.","pos":[0,48]}]}],"pos":[10766,10815],"yaml":true},{"content":"An object can be registered and issued an object ID with a call to the <xref:System.Runtime.Serialization.ObjectManager.RegisterObject%2A> method.","nodes":[{"pos":[0,146],"content":"An object can be registered and issued an object ID with a call to the <xref:System.Runtime.Serialization.ObjectManager.RegisterObject%2A> method.","nodes":[{"content":"An object can be registered and issued an object ID with a call to the <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.ObjectManager.RegisterObject%2A&gt;</ph> method.","pos":[0,146],"source":"An object can be registered and issued an object ID with a call to the <xref:System.Runtime.Serialization.ObjectManager.RegisterObject%2A> method."}]}],"pos":[10826,10973],"yaml":true,"extradata":"MT"},{"content":"The ID of the requested object.","nodes":[{"pos":[0,31],"content":"The ID of the requested object.","nodes":[{"content":"The ID of the requested object.","pos":[0,31]}]}],"pos":[11124,11156],"yaml":true},{"content":"The object with the specified object ID if it has been previously stored or `null` if no such object has been registered.","nodes":[{"pos":[0,121],"content":"The object with the specified object ID if it has been previously stored or <ph id=\"ph1\">`null`</ph> if no such object has been registered.","source":"The object with the specified object ID if it has been previously stored or `null` if no such object has been registered."}],"pos":[11213,11335],"yaml":true},{"content":"The <code>objectID</code> parameter is less than or equal to zero.","nodes":[{"pos":[0,66],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">objectID</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is less than or equal to zero.","source":"The <code>objectID</code> parameter is less than or equal to zero."}],"pos":[11529,11596],"yaml":true},{"content":"Raises the deserialization event to any registered object that implements <xref href=\"System.Runtime.Serialization.IDeserializationCallback\"></xref>.","nodes":[{"pos":[0,149],"content":"Raises the deserialization event to any registered object that implements <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.IDeserializationCallback\"&gt;&lt;/xref&gt;</ph>.","source":"Raises the deserialization event to any registered object that implements <xref href=\"System.Runtime.Serialization.IDeserializationCallback\"></xref>."}],"pos":[12861,13011],"yaml":true},{"content":"Invokes the method marked with the <xref href=\"System.Runtime.Serialization.OnDeserializingAttribute\"></xref>.","nodes":[{"pos":[0,110],"content":"Invokes the method marked with the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.OnDeserializingAttribute\"&gt;&lt;/xref&gt;</ph>.","source":"Invokes the method marked with the <xref href=\"System.Runtime.Serialization.OnDeserializingAttribute\"></xref>."}],"pos":[14530,14641],"yaml":true},{"content":"The instance of the type that contains the method to be invoked.","nodes":[{"pos":[0,64],"content":"The instance of the type that contains the method to be invoked.","nodes":[{"content":"The instance of the type that contains the method to be invoked.","pos":[0,64]}]}],"pos":[14791,14856],"yaml":true},{"content":"Records a fixup for one element in an array.","nodes":[{"pos":[0,44],"content":"Records a fixup for one element in an array.","nodes":[{"content":"Records a fixup for one element in an array.","pos":[0,44]}]}],"pos":[16385,16430],"yaml":true},{"content":"The fixup is for a specified element of a specified array. The value used during the fixup process is provided in the `objectRequired` parameter.","nodes":[{"pos":[0,145],"content":"The fixup is for a specified element of a specified array. The value used during the fixup process is provided in the `objectRequired` parameter.","nodes":[{"content":"The fixup is for a specified element of a specified array.","pos":[0,58]},{"content":"The value used during the fixup process is provided in the <ph id=\"ph1\">`objectRequired`</ph> parameter.","pos":[59,145],"source":" The value used during the fixup process is provided in the `objectRequired` parameter."}]}],"pos":[16441,16587],"yaml":true,"extradata":"MT"},{"content":"The ID of the array used to record a fixup.","nodes":[{"pos":[0,43],"content":"The ID of the array used to record a fixup.","nodes":[{"content":"The ID of the array used to record a fixup.","pos":[0,43]}]}],"pos":[16794,16838],"yaml":true},{"content":"The index within <code>arrayFixup</code> that a fixup is requested for.","nodes":[{"pos":[0,71],"content":"The index within <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">arrayFixup</ph><ept id=\"p1\">&lt;/code&gt;</ept> that a fixup is requested for.","source":"The index within <code>arrayFixup</code> that a fixup is requested for."}],"pos":[16898,16970],"yaml":true},{"content":"The ID of the object that the current array element will point to after fixup is completed.","nodes":[{"pos":[0,91],"content":"The ID of the object that the current array element will point to after fixup is completed.","nodes":[{"content":"The ID of the object that the current array element will point to after fixup is completed.","pos":[0,91]}]}],"pos":[17039,17131],"yaml":true},{"content":"The <code>arrayToBeFixed</code> or <code>objectRequired</code> parameter is less than or equal to zero.","nodes":[{"pos":[0,103],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">arrayToBeFixed</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">objectRequired</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter is less than or equal to zero.","source":"The <code>arrayToBeFixed</code> or <code>objectRequired</code> parameter is less than or equal to zero."}],"pos":[17339,17443],"yaml":true},{"content":"The <code>index</code> parameter is `null`.","nodes":[{"pos":[0,43],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>index</code> parameter is `null`."}],"pos":[17545,17589],"yaml":true},{"content":"Records fixups for the specified elements in an array, to be executed later.","nodes":[{"pos":[0,76],"content":"Records fixups for the specified elements in an array, to be executed later.","nodes":[{"content":"Records fixups for the specified elements in an array, to be executed later.","pos":[0,76]}]}],"pos":[19031,19108],"yaml":true},{"content":"The fixup is for specified elements of a specified array. The value used during the fixup process is provided in the `objectRequired` parameter.","nodes":[{"pos":[0,144],"content":"The fixup is for specified elements of a specified array. The value used during the fixup process is provided in the `objectRequired` parameter.","nodes":[{"content":"The fixup is for specified elements of a specified array.","pos":[0,57]},{"content":"The value used during the fixup process is provided in the <ph id=\"ph1\">`objectRequired`</ph> parameter.","pos":[58,144],"source":" The value used during the fixup process is provided in the `objectRequired` parameter."}]}],"pos":[19119,19264],"yaml":true,"extradata":"MT"},{"content":"The ID of the array used to record a fixup.","nodes":[{"pos":[0,43],"content":"The ID of the array used to record a fixup.","nodes":[{"content":"The ID of the array used to record a fixup.","pos":[0,43]}]}],"pos":[19475,19519],"yaml":true},{"content":"The indexes within the multidimensional array that a fixup is requested for.","nodes":[{"pos":[0,76],"content":"The indexes within the multidimensional array that a fixup is requested for.","nodes":[{"content":"The indexes within the multidimensional array that a fixup is requested for.","pos":[0,76]}]}],"pos":[19583,19660],"yaml":true},{"content":"The ID of the object the array elements will point to after fixup is completed.","nodes":[{"pos":[0,79],"content":"The ID of the object the array elements will point to after fixup is completed.","nodes":[{"content":"The ID of the object the array elements will point to after fixup is completed.","pos":[0,79]}]}],"pos":[19729,19809],"yaml":true},{"content":"The <code>arrayToBeFixed</code> or <code>objectRequired</code> parameter is less than or equal to zero.","nodes":[{"pos":[0,103],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">arrayToBeFixed</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">objectRequired</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter is less than or equal to zero.","source":"The <code>arrayToBeFixed</code> or <code>objectRequired</code> parameter is less than or equal to zero."}],"pos":[20017,20121],"yaml":true},{"content":"The <code>indices</code> parameter is `null`.","nodes":[{"pos":[0,45],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">indices</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>indices</code> parameter is `null`."}],"pos":[20223,20269],"yaml":true},{"content":"Records a fixup for an object member, to be executed later.","nodes":[{"pos":[0,59],"content":"Records a fixup for an object member, to be executed later.","nodes":[{"content":"Records a fixup for an object member, to be executed later.","pos":[0,59]}]}],"pos":[21675,21735],"yaml":true},{"content":"The fixup is for a specified member of a specified object. The value to be used during the fixup process is provided as the `objectRequired` argument.","nodes":[{"pos":[0,150],"content":"The fixup is for a specified member of a specified object. The value to be used during the fixup process is provided as the `objectRequired` argument.","nodes":[{"content":"The fixup is for a specified member of a specified object.","pos":[0,58]},{"content":"The value to be used during the fixup process is provided as the <ph id=\"ph1\">`objectRequired`</ph> argument.","pos":[59,150],"source":" The value to be used during the fixup process is provided as the `objectRequired` argument."}]}],"pos":[21746,21897],"yaml":true,"extradata":"MT"},{"content":"The ID of the object that needs the reference to <code>objectRequired</code>.","nodes":[{"pos":[0,77],"content":"The ID of the object that needs the reference to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">objectRequired</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The ID of the object that needs the reference to <code>objectRequired</code>."}],"pos":[22109,22187],"yaml":true},{"content":"The member name of <code>objectToBeFixed</code> where the fixup will be performed.","nodes":[{"pos":[0,82],"content":"The member name of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">objectToBeFixed</ph><ept id=\"p1\">&lt;/code&gt;</ept> where the fixup will be performed.","source":"The member name of <code>objectToBeFixed</code> where the fixup will be performed."}],"pos":[22253,22336],"yaml":true},{"content":"The ID of the object required by <code>objectToBeFixed</code>.","nodes":[{"pos":[0,62],"content":"The ID of the object required by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">objectToBeFixed</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The ID of the object required by <code>objectToBeFixed</code>."}],"pos":[22405,22468],"yaml":true},{"content":"<code>objectToBeFixed</code> or <code>objectRequired</code> parameter is less than or equal to zero.","nodes":[{"pos":[0,100],"content":"<ph id=\"ph1\">&lt;code&gt;objectToBeFixed&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;objectRequired&lt;/code&gt;</ph> parameter is less than or equal to zero.","source":"<code>objectToBeFixed</code> or <code>objectRequired</code> parameter is less than or equal to zero."}],"pos":[22671,22772],"yaml":true},{"content":"The <code>memberName</code> parameter is `null`.","nodes":[{"pos":[0,48],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">memberName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>memberName</code> parameter is `null`."}],"pos":[22874,22923],"yaml":true},{"content":"Records a fixup for a member of an object, to be executed later.","nodes":[{"pos":[0,64],"content":"Records a fixup for a member of an object, to be executed later.","nodes":[{"content":"Records a fixup for a member of an object, to be executed later.","pos":[0,64]}]}],"pos":[24344,24409],"yaml":true},{"content":"The fixup is for a specified member of a specified object. The value to be used during the fixup process is provided as the `objectRequired` parameter.","nodes":[{"pos":[0,151],"content":"The fixup is for a specified member of a specified object. The value to be used during the fixup process is provided as the `objectRequired` parameter.","nodes":[{"content":"The fixup is for a specified member of a specified object.","pos":[0,58]},{"content":"The value to be used during the fixup process is provided as the <ph id=\"ph1\">`objectRequired`</ph> parameter.","pos":[59,151],"source":" The value to be used during the fixup process is provided as the `objectRequired` parameter."}]}],"pos":[24420,24572],"yaml":true,"extradata":"MT"},{"content":"The ID of the object that needs the reference to the <code>objectRequired</code> object.","nodes":[{"pos":[0,88],"content":"The ID of the object that needs the reference to the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">objectRequired</ph><ept id=\"p1\">&lt;/code&gt;</ept> object.","source":"The ID of the object that needs the reference to the <code>objectRequired</code> object."}],"pos":[24795,24884],"yaml":true},{"content":"The member of <code>objectToBeFixed</code> where the fixup will be performed.","nodes":[{"pos":[0,77],"content":"The member of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">objectToBeFixed</ph><ept id=\"p1\">&lt;/code&gt;</ept> where the fixup will be performed.","source":"The member of <code>objectToBeFixed</code> where the fixup will be performed."}],"pos":[24961,25039],"yaml":true},{"content":"The ID of the object required by <code>objectToBeFixed</code>.","nodes":[{"pos":[0,62],"content":"The ID of the object required by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">objectToBeFixed</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The ID of the object required by <code>objectToBeFixed</code>."}],"pos":[25108,25171],"yaml":true},{"content":"The <code>objectToBeFixed</code> or <code>objectRequired</code> parameter is less than or equal to zero.","nodes":[{"pos":[0,104],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">objectToBeFixed</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">objectRequired</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter is less than or equal to zero.","source":"The <code>objectToBeFixed</code> or <code>objectRequired</code> parameter is less than or equal to zero."}],"pos":[25367,25472],"yaml":true},{"content":"The <code>member</code> parameter is `null`.","nodes":[{"pos":[0,44],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">member</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>member</code> parameter is `null`."}],"pos":[25574,25619],"yaml":true},{"content":"Registers an object as it is deserialized, associating it with <code>objectID</code>.","nodes":[{"pos":[0,85],"content":"Registers an object as it is deserialized, associating it with <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">objectID</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"Registers an object as it is deserialized, associating it with <code>objectID</code>."}],"pos":[26941,27027],"yaml":true},{"content":"<xref:System.Runtime.Serialization.ObjectManager> retains information about both the object and its ID. Later during deserialization, <xref:System.Runtime.Serialization.ObjectManager.GetObject%2A> can be used to determine whether a particular object ID has already been deserialized, or whether it is a forward reference to an object that has not yet been deserialized.","nodes":[{"pos":[0,369],"content":"<xref:System.Runtime.Serialization.ObjectManager> retains information about both the object and its ID. Later during deserialization, <xref:System.Runtime.Serialization.ObjectManager.GetObject%2A> can be used to determine whether a particular object ID has already been deserialized, or whether it is a forward reference to an object that has not yet been deserialized.","nodes":[{"content":"<xref:System.Runtime.Serialization.ObjectManager> retains information about both the object and its ID. Later during deserialization, <xref:System.Runtime.Serialization.ObjectManager.GetObject%2A> can be used to determine whether a particular object ID has already been deserialized, or whether it is a forward reference to an object that has not yet been deserialized.","pos":[0,369],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.ObjectManager&gt;</ph> retains information about both the object and its ID.","pos":[0,103],"source":"<xref:System.Runtime.Serialization.ObjectManager> retains information about both the object and its ID."},{"content":"Later during deserialization, <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.ObjectManager.GetObject%2A&gt;</ph> can be used to determine whether a particular object ID has already been deserialized, or whether it is a forward reference to an object that has not yet been deserialized.","pos":[104,369],"source":" Later during deserialization, <xref:System.Runtime.Serialization.ObjectManager.GetObject%2A> can be used to determine whether a particular object ID has already been deserialized, or whether it is a forward reference to an object that has not yet been deserialized."}]}]}],"pos":[27038,27408],"yaml":true,"extradata":"MT"},{"content":"The object to register.","nodes":[{"pos":[0,23],"content":"The object to register.","nodes":[{"content":"The object to register.","pos":[0,23]}]}],"pos":[27621,27645],"yaml":true},{"content":"The ID of the object to register.","nodes":[{"pos":[0,33],"content":"The ID of the object to register.","nodes":[{"content":"The ID of the object to register.","pos":[0,33]}]}],"pos":[27708,27742],"yaml":true},{"content":"The <code>obj</code> parameter is `null`.","nodes":[{"pos":[0,41],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>obj</code> parameter is `null`."}],"pos":[27929,27971],"yaml":true},{"content":"The <code>objectID</code> parameter is less than or equal to zero.","nodes":[{"pos":[0,66],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">objectID</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is less than or equal to zero.","source":"The <code>objectID</code> parameter is less than or equal to zero."}],"pos":[28085,28152],"yaml":true},{"content":"The <code>objectID</code> has already been registered for an object other than <code>obj</code>.","nodes":[{"pos":[0,96],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">objectID</ph><ept id=\"p1\">&lt;/code&gt;</ept> has already been registered for an object other than <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">obj</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The <code>objectID</code> has already been registered for an object other than <code>obj</code>."}],"pos":[28300,28397],"yaml":true},{"content":"Registers an object as it is deserialized, associating it with <code>objectID</code>, and recording the <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> used with it.","nodes":[{"pos":[0,185],"content":"Registers an object as it is deserialized, associating it with <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">objectID</ph><ept id=\"p1\">&lt;/code&gt;</ept>, and recording the <ph id=\"ph2\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;&lt;/xref&gt;</ph> used with it.","source":"Registers an object as it is deserialized, associating it with <code>objectID</code>, and recording the <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> used with it."}],"pos":[29983,30169],"yaml":true},{"content":"<xref:System.Runtime.Serialization.ObjectManager> retains the information about both the object and its ID. Later during deserialization, you can use <xref:System.Runtime.Serialization.ObjectManager.GetObject%2A> to discover whether a particular object ID has already been deserialized, or if it is a forward reference to an object that has not yet been deserialized.","nodes":[{"pos":[0,367],"content":"<xref:System.Runtime.Serialization.ObjectManager> retains the information about both the object and its ID. Later during deserialization, you can use <xref:System.Runtime.Serialization.ObjectManager.GetObject%2A> to discover whether a particular object ID has already been deserialized, or if it is a forward reference to an object that has not yet been deserialized.","nodes":[{"content":"<xref:System.Runtime.Serialization.ObjectManager> retains the information about both the object and its ID. Later during deserialization, you can use <xref:System.Runtime.Serialization.ObjectManager.GetObject%2A> to discover whether a particular object ID has already been deserialized, or if it is a forward reference to an object that has not yet been deserialized.","pos":[0,367],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.ObjectManager&gt;</ph> retains the information about both the object and its ID.","pos":[0,107],"source":"<xref:System.Runtime.Serialization.ObjectManager> retains the information about both the object and its ID."},{"content":"Later during deserialization, you can use <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.ObjectManager.GetObject%2A&gt;</ph> to discover whether a particular object ID has already been deserialized, or if it is a forward reference to an object that has not yet been deserialized.","pos":[108,367],"source":" Later during deserialization, you can use <xref:System.Runtime.Serialization.ObjectManager.GetObject%2A> to discover whether a particular object ID has already been deserialized, or if it is a forward reference to an object that has not yet been deserialized."}]}]}],"pos":[30180,30548],"yaml":true,"extradata":"MT"},{"content":"The object to register.","nodes":[{"pos":[0,23],"content":"The object to register.","nodes":[{"content":"The object to register.","pos":[0,23]}]}],"pos":[30806,30830],"yaml":true},{"content":"The ID of the object to register.","nodes":[{"pos":[0,33],"content":"The ID of the object to register.","nodes":[{"content":"The ID of the object to register.","pos":[0,33]}]}],"pos":[30893,30927],"yaml":true},{"content":"The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> used if <code>obj</code> implements <xref href=\"System.Runtime.Serialization.ISerializable\"></xref> or has a <xref href=\"System.Runtime.Serialization.ISerializationSurrogate\"></xref>. <code>info</code> will be completed with any required fixup information and then passed to the required object when that object is completed.","nodes":[{"pos":[0,397],"content":"The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> used if <code>obj</code> implements <xref href=\"System.Runtime.Serialization.ISerializable\"></xref> or has a <xref href=\"System.Runtime.Serialization.ISerializationSurrogate\"></xref>. <code>info</code> will be completed with any required fixup information and then passed to the required object when that object is completed.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;&lt;/xref&gt;</ph> used if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> implements <ph id=\"ph3\">&lt;xref href=\"System.Runtime.Serialization.ISerializable\"&gt;&lt;/xref&gt;</ph> or has a <ph id=\"ph4\">&lt;xref href=\"System.Runtime.Serialization.ISerializationSurrogate\"&gt;&lt;/xref&gt;</ph>.","pos":[0,255],"source":"The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> used if <code>obj</code> implements <xref href=\"System.Runtime.Serialization.ISerializable\"></xref> or has a <xref href=\"System.Runtime.Serialization.ISerializationSurrogate\"></xref>."},{"content":"<bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">info</ph><ept id=\"p1\">&lt;/code&gt;</ept> will be completed with any required fixup information and then passed to the required object when that object is completed.","pos":[256,397],"source":"<code>info</code> will be completed with any required fixup information and then passed to the required object when that object is completed."}]}],"pos":[31020,31418],"yaml":true},{"content":"The <code>obj</code> parameter is `null`.","nodes":[{"pos":[0,41],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>obj</code> parameter is `null`."}],"pos":[31605,31647],"yaml":true},{"content":"The <code>objectID</code> parameter is less than or equal to zero.","nodes":[{"pos":[0,66],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">objectID</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is less than or equal to zero.","source":"The <code>objectID</code> parameter is less than or equal to zero."}],"pos":[31761,31828],"yaml":true},{"content":"The <code>objectID</code> has already been registered for an object other than <code>obj</code>.","nodes":[{"pos":[0,96],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">objectID</ph><ept id=\"p1\">&lt;/code&gt;</ept> has already been registered for an object other than <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">obj</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The <code>objectID</code> has already been registered for an object other than <code>obj</code>."}],"pos":[31976,32073],"yaml":true},{"content":"Registers a member of an object as it is deserialized, associating it with <code>objectID</code>, and recording the <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref>.","nodes":[{"pos":[0,184],"content":"Registers a member of an object as it is deserialized, associating it with <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">objectID</ph><ept id=\"p1\">&lt;/code&gt;</ept>, and recording the <ph id=\"ph2\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;&lt;/xref&gt;</ph>.","source":"Registers a member of an object as it is deserialized, associating it with <code>objectID</code>, and recording the <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref>."}],"pos":[33842,34027],"yaml":true},{"content":"You need to provide the `member` and `idOfContainingObj` parameters if `obj` is a <xref:System.ValueType> because of the way fixups are performed on <xref:System.ValueType> objects. The space to store the information for a <xref:System.ValueType> is allocated inline with its containing object. However, when the <xref:System.ValueType> is boxed to be registered with the <xref:System.Runtime.Serialization.ObjectManager>, it loses the connection with its containing object. To guarantee that fixups occur in the instance of the <xref:System.ValueType> stored in the containing object and not in the boxed instance, the <xref:System.Runtime.Serialization.ObjectManager> retains some additional information.  \n  \n <xref:System.Runtime.Serialization.ObjectManager> retains information about both the object and its ID. Later during deserialization, <xref:System.Runtime.Serialization.ObjectManager.GetObject%2A> can be used to discover whether a particular object ID has already been deserialized, or whether it is a forward reference to an object not yet deserialized.","nodes":[{"pos":[0,706],"content":"You need to provide the `member` and `idOfContainingObj` parameters if `obj` is a <xref:System.ValueType> because of the way fixups are performed on <xref:System.ValueType> objects. The space to store the information for a <xref:System.ValueType> is allocated inline with its containing object. However, when the <xref:System.ValueType> is boxed to be registered with the <xref:System.Runtime.Serialization.ObjectManager>, it loses the connection with its containing object. To guarantee that fixups occur in the instance of the <xref:System.ValueType> stored in the containing object and not in the boxed instance, the <xref:System.Runtime.Serialization.ObjectManager> retains some additional information.","nodes":[{"content":"You need to provide the <ph id=\"ph1\">`member`</ph> and <ph id=\"ph2\">`idOfContainingObj`</ph> parameters if <ph id=\"ph3\">`obj`</ph> is a <ph id=\"ph4\">&lt;xref:System.ValueType&gt;</ph> because of the way fixups are performed on <ph id=\"ph5\">&lt;xref:System.ValueType&gt;</ph> objects.","pos":[0,181],"source":"You need to provide the `member` and `idOfContainingObj` parameters if `obj` is a <xref:System.ValueType> because of the way fixups are performed on <xref:System.ValueType> objects."},{"content":"The space to store the information for a <ph id=\"ph1\">&lt;xref:System.ValueType&gt;</ph> is allocated inline with its containing object.","pos":[182,294],"source":" The space to store the information for a <xref:System.ValueType> is allocated inline with its containing object."},{"content":"However, when the <ph id=\"ph1\">&lt;xref:System.ValueType&gt;</ph> is boxed to be registered with the <ph id=\"ph2\">&lt;xref:System.Runtime.Serialization.ObjectManager&gt;</ph>, it loses the connection with its containing object.","pos":[295,474],"source":" However, when the <xref:System.ValueType> is boxed to be registered with the <xref:System.Runtime.Serialization.ObjectManager>, it loses the connection with its containing object."},{"content":"To guarantee that fixups occur in the instance of the <ph id=\"ph1\">&lt;xref:System.ValueType&gt;</ph> stored in the containing object and not in the boxed instance, the <ph id=\"ph2\">&lt;xref:System.Runtime.Serialization.ObjectManager&gt;</ph> retains some additional information.","pos":[475,706],"source":" To guarantee that fixups occur in the instance of the <xref:System.ValueType> stored in the containing object and not in the boxed instance, the <xref:System.Runtime.Serialization.ObjectManager> retains some additional information."}]},{"pos":[713,1067],"content":"<xref:System.Runtime.Serialization.ObjectManager> retains information about both the object and its ID. Later during deserialization, <xref:System.Runtime.Serialization.ObjectManager.GetObject%2A> can be used to discover whether a particular object ID has already been deserialized, or whether it is a forward reference to an object not yet deserialized.","nodes":[{"content":"<xref:System.Runtime.Serialization.ObjectManager> retains information about both the object and its ID. Later during deserialization, <xref:System.Runtime.Serialization.ObjectManager.GetObject%2A> can be used to discover whether a particular object ID has already been deserialized, or whether it is a forward reference to an object not yet deserialized.","pos":[0,354],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.ObjectManager&gt;</ph> retains information about both the object and its ID.","pos":[0,103],"source":"<xref:System.Runtime.Serialization.ObjectManager> retains information about both the object and its ID."},{"content":"Later during deserialization, <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.ObjectManager.GetObject%2A&gt;</ph> can be used to discover whether a particular object ID has already been deserialized, or whether it is a forward reference to an object not yet deserialized.","pos":[104,354],"source":" Later during deserialization, <xref:System.Runtime.Serialization.ObjectManager.GetObject%2A> can be used to discover whether a particular object ID has already been deserialized, or whether it is a forward reference to an object not yet deserialized."}]}]}],"pos":[34038,35110],"yaml":true,"extradata":"MT"},{"content":"The object to register.","nodes":[{"pos":[0,23],"content":"The object to register.","nodes":[{"content":"The object to register.","pos":[0,23]}]}],"pos":[35429,35453],"yaml":true},{"content":"The ID of the object to register.","nodes":[{"pos":[0,33],"content":"The ID of the object to register.","nodes":[{"content":"The ID of the object to register.","pos":[0,33]}]}],"pos":[35516,35550],"yaml":true},{"content":"The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> used if <code>obj</code> implements <xref href=\"System.Runtime.Serialization.ISerializable\"></xref> or has a <xref href=\"System.Runtime.Serialization.ISerializationSurrogate\"></xref>. <code>info</code> will be completed with any required fixup information and then passed to the required object when that object is completed.","nodes":[{"pos":[0,397],"content":"The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> used if <code>obj</code> implements <xref href=\"System.Runtime.Serialization.ISerializable\"></xref> or has a <xref href=\"System.Runtime.Serialization.ISerializationSurrogate\"></xref>. <code>info</code> will be completed with any required fixup information and then passed to the required object when that object is completed.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;&lt;/xref&gt;</ph> used if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> implements <ph id=\"ph3\">&lt;xref href=\"System.Runtime.Serialization.ISerializable\"&gt;&lt;/xref&gt;</ph> or has a <ph id=\"ph4\">&lt;xref href=\"System.Runtime.Serialization.ISerializationSurrogate\"&gt;&lt;/xref&gt;</ph>.","pos":[0,255],"source":"The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> used if <code>obj</code> implements <xref href=\"System.Runtime.Serialization.ISerializable\"></xref> or has a <xref href=\"System.Runtime.Serialization.ISerializationSurrogate\"></xref>."},{"content":"<bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">info</ph><ept id=\"p1\">&lt;/code&gt;</ept> will be completed with any required fixup information and then passed to the required object when that object is completed.","pos":[256,397],"source":"<code>info</code> will be completed with any required fixup information and then passed to the required object when that object is completed."}]}],"pos":[35643,36041],"yaml":true},{"content":"The ID of the object that contains <code>obj</code>. This parameter is required only if <code>obj</code> is a value type.","nodes":[{"pos":[0,121],"content":"The ID of the object that contains <code>obj</code>. This parameter is required only if <code>obj</code> is a value type.","nodes":[{"content":"The ID of the object that contains <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[0,52],"source":"The ID of the object that contains <code>obj</code>."},{"content":"This parameter is required only if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> is a value type.","pos":[53,121],"source":" This parameter is required only if <code>obj</code> is a value type."}]}],"pos":[36113,36235],"yaml":true},{"content":"The field in the containing object where <code>obj</code> exists. This parameter has meaning only if <code>obj</code> is a value type.","nodes":[{"pos":[0,134],"content":"The field in the containing object where <code>obj</code> exists. This parameter has meaning only if <code>obj</code> is a value type.","nodes":[{"content":"The field in the containing object where <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> exists.","pos":[0,65],"source":"The field in the containing object where <code>obj</code> exists."},{"content":"This parameter has meaning only if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> is a value type.","pos":[66,134],"source":" This parameter has meaning only if <code>obj</code> is a value type."}]}],"pos":[36312,36447],"yaml":true},{"content":"The <code>obj</code> parameter is `null`.","nodes":[{"pos":[0,41],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>obj</code> parameter is `null`."}],"pos":[36634,36676],"yaml":true},{"content":"The <code>objectID</code> parameter is less than or equal to zero.","nodes":[{"pos":[0,66],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">objectID</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is less than or equal to zero.","source":"The <code>objectID</code> parameter is less than or equal to zero."}],"pos":[36790,36857],"yaml":true},{"content":"The <code>objectID</code> has already been registered for an object other than <code>obj</code>, or <code>member</code> is not a <xref href=\"System.Reflection.FieldInfo\"></xref> and <code>member</code> is not `null`.","nodes":[{"pos":[0,216],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">objectID</ph><ept id=\"p1\">&lt;/code&gt;</ept> has already been registered for an object other than <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">obj</ph><ept id=\"p2\">&lt;/code&gt;</ept>, or <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">member</ph><ept id=\"p3\">&lt;/code&gt;</ept> is not a <ph id=\"ph4\">&lt;xref href=\"System.Reflection.FieldInfo\"&gt;&lt;/xref&gt;</ph> and <bpt id=\"p4\">&lt;code&gt;</bpt><ph id=\"ph5\">member</ph><ept id=\"p4\">&lt;/code&gt;</ept> is not <ph id=\"ph6\">`null`</ph>.","source":"The <code>objectID</code> has already been registered for an object other than <code>obj</code>, or <code>member</code> is not a <xref href=\"System.Reflection.FieldInfo\"></xref> and <code>member</code> is not `null`."}],"pos":[37005,37222],"yaml":true},{"content":"Registers a member of an array contained in an object while it is deserialized, associating it with <code>objectID</code>, and recording the <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref>.","nodes":[{"pos":[0,209],"content":"Registers a member of an array contained in an object while it is deserialized, associating it with <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">objectID</ph><ept id=\"p1\">&lt;/code&gt;</ept>, and recording the <ph id=\"ph2\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;&lt;/xref&gt;</ph>.","source":"Registers a member of an array contained in an object while it is deserialized, associating it with <code>objectID</code>, and recording the <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref>."}],"pos":[39063,39273],"yaml":true},{"content":"You need to provide the `member` and `idOfContainingObj` parameters if `obj` is a <xref:System.ValueType> because of the way fixups are performed on <xref:System.ValueType> objects. The space to store the information for a <xref:System.ValueType> is allocated inline with its containing object. However, when the <xref:System.ValueType> is boxed to be registered with the <xref:System.Runtime.Serialization.ObjectManager>, it loses the connection with its containing object. To guarantee that fixups occur in the instance of the <xref:System.ValueType> stored in the containing object and not in the boxed instance, the <xref:System.Runtime.Serialization.ObjectManager> retains some additional information.  \n  \n <xref:System.Runtime.Serialization.ObjectManager> retains information about both the object and its ID. Later during deserialization, <xref:System.Runtime.Serialization.ObjectManager.GetObject%2A> can be used to discover whether a particular object ID has already been deserialized, or whether it is a forward reference to an object not yet deserialized.","nodes":[{"pos":[0,706],"content":"You need to provide the `member` and `idOfContainingObj` parameters if `obj` is a <xref:System.ValueType> because of the way fixups are performed on <xref:System.ValueType> objects. The space to store the information for a <xref:System.ValueType> is allocated inline with its containing object. However, when the <xref:System.ValueType> is boxed to be registered with the <xref:System.Runtime.Serialization.ObjectManager>, it loses the connection with its containing object. To guarantee that fixups occur in the instance of the <xref:System.ValueType> stored in the containing object and not in the boxed instance, the <xref:System.Runtime.Serialization.ObjectManager> retains some additional information.","nodes":[{"content":"You need to provide the <ph id=\"ph1\">`member`</ph> and <ph id=\"ph2\">`idOfContainingObj`</ph> parameters if <ph id=\"ph3\">`obj`</ph> is a <ph id=\"ph4\">&lt;xref:System.ValueType&gt;</ph> because of the way fixups are performed on <ph id=\"ph5\">&lt;xref:System.ValueType&gt;</ph> objects.","pos":[0,181],"source":"You need to provide the `member` and `idOfContainingObj` parameters if `obj` is a <xref:System.ValueType> because of the way fixups are performed on <xref:System.ValueType> objects."},{"content":"The space to store the information for a <ph id=\"ph1\">&lt;xref:System.ValueType&gt;</ph> is allocated inline with its containing object.","pos":[182,294],"source":" The space to store the information for a <xref:System.ValueType> is allocated inline with its containing object."},{"content":"However, when the <ph id=\"ph1\">&lt;xref:System.ValueType&gt;</ph> is boxed to be registered with the <ph id=\"ph2\">&lt;xref:System.Runtime.Serialization.ObjectManager&gt;</ph>, it loses the connection with its containing object.","pos":[295,474],"source":" However, when the <xref:System.ValueType> is boxed to be registered with the <xref:System.Runtime.Serialization.ObjectManager>, it loses the connection with its containing object."},{"content":"To guarantee that fixups occur in the instance of the <ph id=\"ph1\">&lt;xref:System.ValueType&gt;</ph> stored in the containing object and not in the boxed instance, the <ph id=\"ph2\">&lt;xref:System.Runtime.Serialization.ObjectManager&gt;</ph> retains some additional information.","pos":[475,706],"source":" To guarantee that fixups occur in the instance of the <xref:System.ValueType> stored in the containing object and not in the boxed instance, the <xref:System.Runtime.Serialization.ObjectManager> retains some additional information."}]},{"pos":[713,1067],"content":"<xref:System.Runtime.Serialization.ObjectManager> retains information about both the object and its ID. Later during deserialization, <xref:System.Runtime.Serialization.ObjectManager.GetObject%2A> can be used to discover whether a particular object ID has already been deserialized, or whether it is a forward reference to an object not yet deserialized.","nodes":[{"content":"<xref:System.Runtime.Serialization.ObjectManager> retains information about both the object and its ID. Later during deserialization, <xref:System.Runtime.Serialization.ObjectManager.GetObject%2A> can be used to discover whether a particular object ID has already been deserialized, or whether it is a forward reference to an object not yet deserialized.","pos":[0,354],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.ObjectManager&gt;</ph> retains information about both the object and its ID.","pos":[0,103],"source":"<xref:System.Runtime.Serialization.ObjectManager> retains information about both the object and its ID."},{"content":"Later during deserialization, <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.ObjectManager.GetObject%2A&gt;</ph> can be used to discover whether a particular object ID has already been deserialized, or whether it is a forward reference to an object not yet deserialized.","pos":[104,354],"source":" Later during deserialization, <xref:System.Runtime.Serialization.ObjectManager.GetObject%2A> can be used to discover whether a particular object ID has already been deserialized, or whether it is a forward reference to an object not yet deserialized."}]}]}],"pos":[39284,40356],"yaml":true,"extradata":"MT"},{"content":"The object to register.","nodes":[{"pos":[0,23],"content":"The object to register.","nodes":[{"content":"The object to register.","pos":[0,23]}]}],"pos":[40693,40717],"yaml":true},{"content":"The ID of the object to register.","nodes":[{"pos":[0,33],"content":"The ID of the object to register.","nodes":[{"content":"The ID of the object to register.","pos":[0,33]}]}],"pos":[40780,40814],"yaml":true},{"content":"The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> used if <code>obj</code> implements <xref href=\"System.Runtime.Serialization.ISerializable\"></xref> or has a <xref href=\"System.Runtime.Serialization.ISerializationSurrogate\"></xref>. <code>info</code> will be completed with any required fixup information and then passed to the required object when that object is completed.","nodes":[{"pos":[0,397],"content":"The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> used if <code>obj</code> implements <xref href=\"System.Runtime.Serialization.ISerializable\"></xref> or has a <xref href=\"System.Runtime.Serialization.ISerializationSurrogate\"></xref>. <code>info</code> will be completed with any required fixup information and then passed to the required object when that object is completed.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;&lt;/xref&gt;</ph> used if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> implements <ph id=\"ph3\">&lt;xref href=\"System.Runtime.Serialization.ISerializable\"&gt;&lt;/xref&gt;</ph> or has a <ph id=\"ph4\">&lt;xref href=\"System.Runtime.Serialization.ISerializationSurrogate\"&gt;&lt;/xref&gt;</ph>.","pos":[0,255],"source":"The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> used if <code>obj</code> implements <xref href=\"System.Runtime.Serialization.ISerializable\"></xref> or has a <xref href=\"System.Runtime.Serialization.ISerializationSurrogate\"></xref>."},{"content":"<bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">info</ph><ept id=\"p1\">&lt;/code&gt;</ept> will be completed with any required fixup information and then passed to the required object when that object is completed.","pos":[256,397],"source":"<code>info</code> will be completed with any required fixup information and then passed to the required object when that object is completed."}]}],"pos":[40907,41305],"yaml":true},{"content":"The ID of the object that contains <code>obj</code>. This parameter is required only if <code>obj</code> is a value type.","nodes":[{"pos":[0,121],"content":"The ID of the object that contains <code>obj</code>. This parameter is required only if <code>obj</code> is a value type.","nodes":[{"content":"The ID of the object that contains <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[0,52],"source":"The ID of the object that contains <code>obj</code>."},{"content":"This parameter is required only if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> is a value type.","pos":[53,121],"source":" This parameter is required only if <code>obj</code> is a value type."}]}],"pos":[41377,41499],"yaml":true},{"content":"The field in the containing object where <code>obj</code> exists. This parameter has meaning only if <code>obj</code> is a value type.","nodes":[{"pos":[0,134],"content":"The field in the containing object where <code>obj</code> exists. This parameter has meaning only if <code>obj</code> is a value type.","nodes":[{"content":"The field in the containing object where <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> exists.","pos":[0,65],"source":"The field in the containing object where <code>obj</code> exists."},{"content":"This parameter has meaning only if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> is a value type.","pos":[66,134],"source":" This parameter has meaning only if <code>obj</code> is a value type."}]}],"pos":[41576,41711],"yaml":true},{"content":"If <code>obj</code> is a <xref href=\"System.ValueType\"></xref> and a member of an array, <code>arrayIndex</code> contains the index within that array where <code>obj</code> exists. <code>arrayIndex</code> is ignored if <code>obj</code> is not both a <xref href=\"System.ValueType\"></xref> and a member of an array.","nodes":[{"pos":[0,313],"content":"If <code>obj</code> is a <xref href=\"System.ValueType\"></xref> and a member of an array, <code>arrayIndex</code> contains the index within that array where <code>obj</code> exists. <code>arrayIndex</code> is ignored if <code>obj</code> is not both a <xref href=\"System.ValueType\"></xref> and a member of an array.","nodes":[{"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> is a <ph id=\"ph2\">&lt;xref href=\"System.ValueType\"&gt;&lt;/xref&gt;</ph> and a member of an array, <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">arrayIndex</ph><ept id=\"p2\">&lt;/code&gt;</ept> contains the index within that array where <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph4\">obj</ph><ept id=\"p3\">&lt;/code&gt;</ept> exists.","pos":[0,180],"source":"If <code>obj</code> is a <xref href=\"System.ValueType\"></xref> and a member of an array, <code>arrayIndex</code> contains the index within that array where <code>obj</code> exists."},{"content":"<bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">arrayIndex</ph><ept id=\"p1\">&lt;/code&gt;</ept> is ignored if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">obj</ph><ept id=\"p2\">&lt;/code&gt;</ept> is not both a <ph id=\"ph3\">&lt;xref href=\"System.ValueType\"&gt;&lt;/xref&gt;</ph> and a member of an array.","pos":[181,313],"source":"<code>arrayIndex</code> is ignored if <code>obj</code> is not both a <xref href=\"System.ValueType\"></xref> and a member of an array."}]}],"pos":[41778,42092],"yaml":true},{"content":"The <code>obj</code> parameter is `null`.","nodes":[{"pos":[0,41],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>obj</code> parameter is `null`."}],"pos":[42279,42321],"yaml":true},{"content":"The <code>objectID</code> parameter is less than or equal to zero.","nodes":[{"pos":[0,66],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">objectID</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is less than or equal to zero.","source":"The <code>objectID</code> parameter is less than or equal to zero."}],"pos":[42435,42502],"yaml":true},{"content":"The <code>objectID</code> has already been registered for an object other than <code>obj</code>, or <code>member</code> is not a <xref href=\"System.Reflection.FieldInfo\"></xref> and <code>member</code> isn't `null`.","nodes":[{"pos":[0,215],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">objectID</ph><ept id=\"p1\">&lt;/code&gt;</ept> has already been registered for an object other than <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">obj</ph><ept id=\"p2\">&lt;/code&gt;</ept>, or <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">member</ph><ept id=\"p3\">&lt;/code&gt;</ept> is not a <ph id=\"ph4\">&lt;xref href=\"System.Reflection.FieldInfo\"&gt;&lt;/xref&gt;</ph> and <bpt id=\"p4\">&lt;code&gt;</bpt><ph id=\"ph5\">member</ph><ept id=\"p4\">&lt;/code&gt;</ept> isn't <ph id=\"ph6\">`null`</ph>.","source":"The <code>objectID</code> has already been registered for an object other than <code>obj</code>, or <code>member</code> is not a <xref href=\"System.Reflection.FieldInfo\"></xref> and <code>member</code> isn't `null`."}],"pos":[42650,42866],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.Serialization.ObjectManager\n  commentId: T:System.Runtime.Serialization.ObjectManager\n  id: ObjectManager\n  children:\n  - System.Runtime.Serialization.ObjectManager.#ctor(System.Runtime.Serialization.ISurrogateSelector,System.Runtime.Serialization.StreamingContext)\n  - System.Runtime.Serialization.ObjectManager.DoFixups\n  - System.Runtime.Serialization.ObjectManager.GetObject(System.Int64)\n  - System.Runtime.Serialization.ObjectManager.RaiseDeserializationEvent\n  - System.Runtime.Serialization.ObjectManager.RaiseOnDeserializingEvent(System.Object)\n  - System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup(System.Int64,System.Int32,System.Int64)\n  - System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup(System.Int64,System.Int32[],System.Int64)\n  - System.Runtime.Serialization.ObjectManager.RecordDelayedFixup(System.Int64,System.String,System.Int64)\n  - System.Runtime.Serialization.ObjectManager.RecordFixup(System.Int64,System.Reflection.MemberInfo,System.Int64)\n  - System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64)\n  - System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo)\n  - System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo,System.Int64,System.Reflection.MemberInfo)\n  - System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo,System.Int64,System.Reflection.MemberInfo,System.Int32[])\n  langs:\n  - csharp\n  name: ObjectManager\n  nameWithType: ObjectManager\n  fullName: System.Runtime.Serialization.ObjectManager\n  type: Class\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime.Serialization.Formatters\n  namespace: System.Runtime.Serialization\n  summary: Keeps track of objects as they are deserialized.\n  remarks: \"During deserialization, the <xref:System.Runtime.Serialization.Formatter> queries the <xref:System.Runtime.Serialization.ObjectManager> to determine whether a reference to an object in the serialized stream refers to an object that has already been deserialized (a backward reference), or to an object that has not yet been deserialized (a forward reference). If the reference in the serialized stream is a forward reference, then the <xref:System.Runtime.Serialization.Formatter> can register a fixup with the <xref:System.Runtime.Serialization.ObjectManager>. If the reference in the serialized stream is a backward reference, the <xref:System.Runtime.Serialization.Formatter> immediately completes the reference. Fixup refers to the process of finalizing object references not already completed during the object deserialization process. After the required object has been deserialized, the <xref:System.Runtime.Serialization.ObjectManager> will complete the reference.  \\n  \\n The <xref:System.Runtime.Serialization.ObjectManager> follows a set of rules that dictate the fixup order. All objects that implement <xref:System.Runtime.Serialization.ISerializable> or have a <xref:System.Runtime.Serialization.ISerializationSurrogate> can expect to have all the objects that they transmitted through <xref:System.Runtime.Serialization.SerializationInfo> available when the object tree is deserialized. However, a parent object cannot presume that all its child objects will be fully completed when it is fully deserialized. All child objects will be present but not all the grandchild objects will necessarily be present. If an object needs to take certain actions that depend on executing code on its child objects, it can delay these actions, implement the <xref:System.Runtime.Serialization.IDeserializationCallback> interface, and execute the code only when it is called back on this interface.\"\n  example:\n  - \"The following code example shows how to use the <xref:System.Runtime.Serialization.ObjectManager> class to walk through an object graph, traversing to each object only once.  \\n  \\n [!code-csharp[ObjectManager#1](~/samples/snippets/csharp/VS_Snippets_Misc/ObjectManager/CS/ObjectManager.cs#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class ObjectManager\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/ObjectManager.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Serialization.ObjectManager.#ctor(System.Runtime.Serialization.ISurrogateSelector,System.Runtime.Serialization.StreamingContext)\n  commentId: M:System.Runtime.Serialization.ObjectManager.#ctor(System.Runtime.Serialization.ISurrogateSelector,System.Runtime.Serialization.StreamingContext)\n  id: '#ctor(System.Runtime.Serialization.ISurrogateSelector,System.Runtime.Serialization.StreamingContext)'\n  parent: System.Runtime.Serialization.ObjectManager\n  langs:\n  - csharp\n  name: ObjectManager(ISurrogateSelector, StreamingContext)\n  nameWithType: ObjectManager.ObjectManager(ISurrogateSelector, StreamingContext)\n  fullName: ObjectManager.ObjectManager(ISurrogateSelector, StreamingContext)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime.Serialization.Formatters\n  namespace: System.Runtime.Serialization\n  summary: Initializes a new instance of the <xref href=\"System.Runtime.Serialization.ObjectManager\"></xref> class.\n  syntax:\n    content: public ObjectManager (System.Runtime.Serialization.ISurrogateSelector selector, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: selector\n      type: System.Runtime.Serialization.ISurrogateSelector\n      description: The surrogate selector to use. The <xref href=\"System.Runtime.Serialization.ISurrogateSelector\"></xref> determines the correct surrogate to use when deserializing objects of a given type. At deserialization time, the surrogate selector creates a new instance of the object from the information transmitted on the stream.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: The streaming context. The <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref> is not used by `ObjectManager`, but is passed as a parameter to any objects implementing <xref href=\"System.Runtime.Serialization.ISerializable\"></xref> or having a <xref href=\"System.Runtime.Serialization.ISerializationSurrogate\"></xref>. These objects can take specific actions depending on the source of the information to deserialize.\n  overload: System.Runtime.Serialization.ObjectManager.#ctor*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  attributes: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/ObjectManager.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Serialization.ObjectManager.DoFixups\n  commentId: M:System.Runtime.Serialization.ObjectManager.DoFixups\n  id: DoFixups\n  parent: System.Runtime.Serialization.ObjectManager\n  langs:\n  - csharp\n  name: DoFixups()\n  nameWithType: ObjectManager.DoFixups()\n  fullName: ObjectManager.DoFixups()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime.Serialization.Formatters\n  namespace: System.Runtime.Serialization\n  summary: Performs all the recorded fixups.\n  remarks: The fixups are carried out by any appropriate surrogate, the object itself (if it implements <xref:System.Runtime.Serialization.ISerializable>), or the default implementation.\n  syntax:\n    content: public virtual void DoFixups ();\n    parameters: []\n  overload: System.Runtime.Serialization.ObjectManager.DoFixups*\n  exceptions:\n  - type: System.Runtime.Serialization.SerializationException\n    commentId: T:System.Runtime.Serialization.SerializationException\n    description: A fixup was not successfully completed.\n  attributes: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/ObjectManager.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Serialization.ObjectManager.GetObject(System.Int64)\n  commentId: M:System.Runtime.Serialization.ObjectManager.GetObject(System.Int64)\n  id: GetObject(System.Int64)\n  parent: System.Runtime.Serialization.ObjectManager\n  langs:\n  - csharp\n  name: GetObject(Int64)\n  nameWithType: ObjectManager.GetObject(Int64)\n  fullName: ObjectManager.GetObject(Int64)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime.Serialization.Formatters\n  namespace: System.Runtime.Serialization\n  summary: Returns the object with the specified object ID.\n  remarks: An object can be registered and issued an object ID with a call to the <xref:System.Runtime.Serialization.ObjectManager.RegisterObject%2A> method.\n  syntax:\n    content: public virtual object GetObject (long objectID);\n    parameters:\n    - id: objectID\n      type: System.Int64\n      description: The ID of the requested object.\n    return:\n      type: System.Object\n      description: The object with the specified object ID if it has been previously stored or `null` if no such object has been registered.\n  overload: System.Runtime.Serialization.ObjectManager.GetObject*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The <code>objectID</code> parameter is less than or equal to zero.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/ObjectManager.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Serialization.ObjectManager.RaiseDeserializationEvent\n  commentId: M:System.Runtime.Serialization.ObjectManager.RaiseDeserializationEvent\n  id: RaiseDeserializationEvent\n  parent: System.Runtime.Serialization.ObjectManager\n  langs:\n  - csharp\n  name: RaiseDeserializationEvent()\n  nameWithType: ObjectManager.RaiseDeserializationEvent()\n  fullName: ObjectManager.RaiseDeserializationEvent()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime.Serialization.Formatters\n  namespace: System.Runtime.Serialization\n  summary: Raises the deserialization event to any registered object that implements <xref href=\"System.Runtime.Serialization.IDeserializationCallback\"></xref>.\n  syntax:\n    content: public virtual void RaiseDeserializationEvent ();\n    parameters: []\n  overload: System.Runtime.Serialization.ObjectManager.RaiseDeserializationEvent*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/ObjectManager.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Serialization.ObjectManager.RaiseOnDeserializingEvent(System.Object)\n  commentId: M:System.Runtime.Serialization.ObjectManager.RaiseOnDeserializingEvent(System.Object)\n  id: RaiseOnDeserializingEvent(System.Object)\n  parent: System.Runtime.Serialization.ObjectManager\n  langs:\n  - csharp\n  name: RaiseOnDeserializingEvent(Object)\n  nameWithType: ObjectManager.RaiseOnDeserializingEvent(Object)\n  fullName: ObjectManager.RaiseOnDeserializingEvent(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime.Serialization.Formatters\n  namespace: System.Runtime.Serialization\n  summary: Invokes the method marked with the <xref href=\"System.Runtime.Serialization.OnDeserializingAttribute\"></xref>.\n  syntax:\n    content: public void RaiseOnDeserializingEvent (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The instance of the type that contains the method to be invoked.\n  overload: System.Runtime.Serialization.ObjectManager.RaiseOnDeserializingEvent*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/ObjectManager.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup(System.Int64,System.Int32,System.Int64)\n  commentId: M:System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup(System.Int64,System.Int32,System.Int64)\n  id: RecordArrayElementFixup(System.Int64,System.Int32,System.Int64)\n  parent: System.Runtime.Serialization.ObjectManager\n  langs:\n  - csharp\n  name: RecordArrayElementFixup(Int64, Int32, Int64)\n  nameWithType: ObjectManager.RecordArrayElementFixup(Int64, Int32, Int64)\n  fullName: ObjectManager.RecordArrayElementFixup(Int64, Int32, Int64)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime.Serialization.Formatters\n  namespace: System.Runtime.Serialization\n  summary: Records a fixup for one element in an array.\n  remarks: The fixup is for a specified element of a specified array. The value used during the fixup process is provided in the `objectRequired` parameter.\n  syntax:\n    content: public virtual void RecordArrayElementFixup (long arrayToBeFixed, int index, long objectRequired);\n    parameters:\n    - id: arrayToBeFixed\n      type: System.Int64\n      description: The ID of the array used to record a fixup.\n    - id: index\n      type: System.Int32\n      description: The index within <code>arrayFixup</code> that a fixup is requested for.\n    - id: objectRequired\n      type: System.Int64\n      description: The ID of the object that the current array element will point to after fixup is completed.\n  overload: System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The <code>arrayToBeFixed</code> or <code>objectRequired</code> parameter is less than or equal to zero.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>index</code> parameter is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/ObjectManager.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup(System.Int64,System.Int32[],System.Int64)\n  commentId: M:System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup(System.Int64,System.Int32[],System.Int64)\n  id: RecordArrayElementFixup(System.Int64,System.Int32[],System.Int64)\n  parent: System.Runtime.Serialization.ObjectManager\n  langs:\n  - csharp\n  name: RecordArrayElementFixup(Int64, Int32[], Int64)\n  nameWithType: ObjectManager.RecordArrayElementFixup(Int64, Int32[], Int64)\n  fullName: ObjectManager.RecordArrayElementFixup(Int64, Int32[], Int64)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime.Serialization.Formatters\n  namespace: System.Runtime.Serialization\n  summary: Records fixups for the specified elements in an array, to be executed later.\n  remarks: The fixup is for specified elements of a specified array. The value used during the fixup process is provided in the `objectRequired` parameter.\n  syntax:\n    content: public virtual void RecordArrayElementFixup (long arrayToBeFixed, int[] indices, long objectRequired);\n    parameters:\n    - id: arrayToBeFixed\n      type: System.Int64\n      description: The ID of the array used to record a fixup.\n    - id: indices\n      type: System.Int32[]\n      description: The indexes within the multidimensional array that a fixup is requested for.\n    - id: objectRequired\n      type: System.Int64\n      description: The ID of the object the array elements will point to after fixup is completed.\n  overload: System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The <code>arrayToBeFixed</code> or <code>objectRequired</code> parameter is less than or equal to zero.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>indices</code> parameter is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/ObjectManager.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Serialization.ObjectManager.RecordDelayedFixup(System.Int64,System.String,System.Int64)\n  commentId: M:System.Runtime.Serialization.ObjectManager.RecordDelayedFixup(System.Int64,System.String,System.Int64)\n  id: RecordDelayedFixup(System.Int64,System.String,System.Int64)\n  parent: System.Runtime.Serialization.ObjectManager\n  langs:\n  - csharp\n  name: RecordDelayedFixup(Int64, String, Int64)\n  nameWithType: ObjectManager.RecordDelayedFixup(Int64, String, Int64)\n  fullName: ObjectManager.RecordDelayedFixup(Int64, String, Int64)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime.Serialization.Formatters\n  namespace: System.Runtime.Serialization\n  summary: Records a fixup for an object member, to be executed later.\n  remarks: The fixup is for a specified member of a specified object. The value to be used during the fixup process is provided as the `objectRequired` argument.\n  syntax:\n    content: public virtual void RecordDelayedFixup (long objectToBeFixed, string memberName, long objectRequired);\n    parameters:\n    - id: objectToBeFixed\n      type: System.Int64\n      description: The ID of the object that needs the reference to <code>objectRequired</code>.\n    - id: memberName\n      type: System.String\n      description: The member name of <code>objectToBeFixed</code> where the fixup will be performed.\n    - id: objectRequired\n      type: System.Int64\n      description: The ID of the object required by <code>objectToBeFixed</code>.\n  overload: System.Runtime.Serialization.ObjectManager.RecordDelayedFixup*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>objectToBeFixed</code> or <code>objectRequired</code> parameter is less than or equal to zero.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>memberName</code> parameter is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/ObjectManager.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Serialization.ObjectManager.RecordFixup(System.Int64,System.Reflection.MemberInfo,System.Int64)\n  commentId: M:System.Runtime.Serialization.ObjectManager.RecordFixup(System.Int64,System.Reflection.MemberInfo,System.Int64)\n  id: RecordFixup(System.Int64,System.Reflection.MemberInfo,System.Int64)\n  parent: System.Runtime.Serialization.ObjectManager\n  langs:\n  - csharp\n  name: RecordFixup(Int64, MemberInfo, Int64)\n  nameWithType: ObjectManager.RecordFixup(Int64, MemberInfo, Int64)\n  fullName: ObjectManager.RecordFixup(Int64, MemberInfo, Int64)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime.Serialization.Formatters\n  namespace: System.Runtime.Serialization\n  summary: Records a fixup for a member of an object, to be executed later.\n  remarks: The fixup is for a specified member of a specified object. The value to be used during the fixup process is provided as the `objectRequired` parameter.\n  syntax:\n    content: public virtual void RecordFixup (long objectToBeFixed, System.Reflection.MemberInfo member, long objectRequired);\n    parameters:\n    - id: objectToBeFixed\n      type: System.Int64\n      description: The ID of the object that needs the reference to the <code>objectRequired</code> object.\n    - id: member\n      type: System.Reflection.MemberInfo\n      description: The member of <code>objectToBeFixed</code> where the fixup will be performed.\n    - id: objectRequired\n      type: System.Int64\n      description: The ID of the object required by <code>objectToBeFixed</code>.\n  overload: System.Runtime.Serialization.ObjectManager.RecordFixup*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The <code>objectToBeFixed</code> or <code>objectRequired</code> parameter is less than or equal to zero.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>member</code> parameter is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/ObjectManager.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64)\n  commentId: M:System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64)\n  id: RegisterObject(System.Object,System.Int64)\n  parent: System.Runtime.Serialization.ObjectManager\n  langs:\n  - csharp\n  name: RegisterObject(Object, Int64)\n  nameWithType: ObjectManager.RegisterObject(Object, Int64)\n  fullName: ObjectManager.RegisterObject(Object, Int64)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime.Serialization.Formatters\n  namespace: System.Runtime.Serialization\n  summary: Registers an object as it is deserialized, associating it with <code>objectID</code>.\n  remarks: <xref:System.Runtime.Serialization.ObjectManager> retains information about both the object and its ID. Later during deserialization, <xref:System.Runtime.Serialization.ObjectManager.GetObject%2A> can be used to determine whether a particular object ID has already been deserialized, or whether it is a forward reference to an object that has not yet been deserialized.\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      public virtual void RegisterObject (object obj, long objectID);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object to register.\n    - id: objectID\n      type: System.Int64\n      description: The ID of the object to register.\n  overload: System.Runtime.Serialization.ObjectManager.RegisterObject*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>obj</code> parameter is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The <code>objectID</code> parameter is less than or equal to zero.\n  - type: System.Runtime.Serialization.SerializationException\n    commentId: T:System.Runtime.Serialization.SerializationException\n    description: The <code>objectID</code> has already been registered for an object other than <code>obj</code>.\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/ObjectManager.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo)\n  commentId: M:System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo)\n  id: RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo)\n  parent: System.Runtime.Serialization.ObjectManager\n  langs:\n  - csharp\n  name: RegisterObject(Object, Int64, SerializationInfo)\n  nameWithType: ObjectManager.RegisterObject(Object, Int64, SerializationInfo)\n  fullName: ObjectManager.RegisterObject(Object, Int64, SerializationInfo)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime.Serialization.Formatters\n  namespace: System.Runtime.Serialization\n  summary: Registers an object as it is deserialized, associating it with <code>objectID</code>, and recording the <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> used with it.\n  remarks: <xref:System.Runtime.Serialization.ObjectManager> retains the information about both the object and its ID. Later during deserialization, you can use <xref:System.Runtime.Serialization.ObjectManager.GetObject%2A> to discover whether a particular object ID has already been deserialized, or if it is a forward reference to an object that has not yet been deserialized.\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      public void RegisterObject (object obj, long objectID, System.Runtime.Serialization.SerializationInfo info);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object to register.\n    - id: objectID\n      type: System.Int64\n      description: The ID of the object to register.\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> used if <code>obj</code> implements <xref href=\"System.Runtime.Serialization.ISerializable\"></xref> or has a <xref href=\"System.Runtime.Serialization.ISerializationSurrogate\"></xref>. <code>info</code> will be completed with any required fixup information and then passed to the required object when that object is completed.\n  overload: System.Runtime.Serialization.ObjectManager.RegisterObject*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>obj</code> parameter is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The <code>objectID</code> parameter is less than or equal to zero.\n  - type: System.Runtime.Serialization.SerializationException\n    commentId: T:System.Runtime.Serialization.SerializationException\n    description: The <code>objectID</code> has already been registered for an object other than <code>obj</code>.\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/ObjectManager.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo,System.Int64,System.Reflection.MemberInfo)\n  commentId: M:System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo,System.Int64,System.Reflection.MemberInfo)\n  id: RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo,System.Int64,System.Reflection.MemberInfo)\n  parent: System.Runtime.Serialization.ObjectManager\n  langs:\n  - csharp\n  name: RegisterObject(Object, Int64, SerializationInfo, Int64, MemberInfo)\n  nameWithType: ObjectManager.RegisterObject(Object, Int64, SerializationInfo, Int64, MemberInfo)\n  fullName: ObjectManager.RegisterObject(Object, Int64, SerializationInfo, Int64, MemberInfo)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime.Serialization.Formatters\n  namespace: System.Runtime.Serialization\n  summary: Registers a member of an object as it is deserialized, associating it with <code>objectID</code>, and recording the <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref>.\n  remarks: \"You need to provide the `member` and `idOfContainingObj` parameters if `obj` is a <xref:System.ValueType> because of the way fixups are performed on <xref:System.ValueType> objects. The space to store the information for a <xref:System.ValueType> is allocated inline with its containing object. However, when the <xref:System.ValueType> is boxed to be registered with the <xref:System.Runtime.Serialization.ObjectManager>, it loses the connection with its containing object. To guarantee that fixups occur in the instance of the <xref:System.ValueType> stored in the containing object and not in the boxed instance, the <xref:System.Runtime.Serialization.ObjectManager> retains some additional information.  \\n  \\n <xref:System.Runtime.Serialization.ObjectManager> retains information about both the object and its ID. Later during deserialization, <xref:System.Runtime.Serialization.ObjectManager.GetObject%2A> can be used to discover whether a particular object ID has already been deserialized, or whether it is a forward reference to an object not yet deserialized.\"\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      public void RegisterObject (object obj, long objectID, System.Runtime.Serialization.SerializationInfo info, long idOfContainingObj, System.Reflection.MemberInfo member);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object to register.\n    - id: objectID\n      type: System.Int64\n      description: The ID of the object to register.\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> used if <code>obj</code> implements <xref href=\"System.Runtime.Serialization.ISerializable\"></xref> or has a <xref href=\"System.Runtime.Serialization.ISerializationSurrogate\"></xref>. <code>info</code> will be completed with any required fixup information and then passed to the required object when that object is completed.\n    - id: idOfContainingObj\n      type: System.Int64\n      description: The ID of the object that contains <code>obj</code>. This parameter is required only if <code>obj</code> is a value type.\n    - id: member\n      type: System.Reflection.MemberInfo\n      description: The field in the containing object where <code>obj</code> exists. This parameter has meaning only if <code>obj</code> is a value type.\n  overload: System.Runtime.Serialization.ObjectManager.RegisterObject*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>obj</code> parameter is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The <code>objectID</code> parameter is less than or equal to zero.\n  - type: System.Runtime.Serialization.SerializationException\n    commentId: T:System.Runtime.Serialization.SerializationException\n    description: The <code>objectID</code> has already been registered for an object other than <code>obj</code>, or <code>member</code> is not a <xref href=\"System.Reflection.FieldInfo\"></xref> and <code>member</code> is not `null`.\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/ObjectManager.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo,System.Int64,System.Reflection.MemberInfo,System.Int32[])\n  commentId: M:System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo,System.Int64,System.Reflection.MemberInfo,System.Int32[])\n  id: RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo,System.Int64,System.Reflection.MemberInfo,System.Int32[])\n  parent: System.Runtime.Serialization.ObjectManager\n  langs:\n  - csharp\n  name: RegisterObject(Object, Int64, SerializationInfo, Int64, MemberInfo, Int32[])\n  nameWithType: ObjectManager.RegisterObject(Object, Int64, SerializationInfo, Int64, MemberInfo, Int32[])\n  fullName: ObjectManager.RegisterObject(Object, Int64, SerializationInfo, Int64, MemberInfo, Int32[])\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime.Serialization.Formatters\n  namespace: System.Runtime.Serialization\n  summary: Registers a member of an array contained in an object while it is deserialized, associating it with <code>objectID</code>, and recording the <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref>.\n  remarks: \"You need to provide the `member` and `idOfContainingObj` parameters if `obj` is a <xref:System.ValueType> because of the way fixups are performed on <xref:System.ValueType> objects. The space to store the information for a <xref:System.ValueType> is allocated inline with its containing object. However, when the <xref:System.ValueType> is boxed to be registered with the <xref:System.Runtime.Serialization.ObjectManager>, it loses the connection with its containing object. To guarantee that fixups occur in the instance of the <xref:System.ValueType> stored in the containing object and not in the boxed instance, the <xref:System.Runtime.Serialization.ObjectManager> retains some additional information.  \\n  \\n <xref:System.Runtime.Serialization.ObjectManager> retains information about both the object and its ID. Later during deserialization, <xref:System.Runtime.Serialization.ObjectManager.GetObject%2A> can be used to discover whether a particular object ID has already been deserialized, or whether it is a forward reference to an object not yet deserialized.\"\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      public void RegisterObject (object obj, long objectID, System.Runtime.Serialization.SerializationInfo info, long idOfContainingObj, System.Reflection.MemberInfo member, int[] arrayIndex);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object to register.\n    - id: objectID\n      type: System.Int64\n      description: The ID of the object to register.\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> used if <code>obj</code> implements <xref href=\"System.Runtime.Serialization.ISerializable\"></xref> or has a <xref href=\"System.Runtime.Serialization.ISerializationSurrogate\"></xref>. <code>info</code> will be completed with any required fixup information and then passed to the required object when that object is completed.\n    - id: idOfContainingObj\n      type: System.Int64\n      description: The ID of the object that contains <code>obj</code>. This parameter is required only if <code>obj</code> is a value type.\n    - id: member\n      type: System.Reflection.MemberInfo\n      description: The field in the containing object where <code>obj</code> exists. This parameter has meaning only if <code>obj</code> is a value type.\n    - id: arrayIndex\n      type: System.Int32[]\n      description: If <code>obj</code> is a <xref href=\"System.ValueType\"></xref> and a member of an array, <code>arrayIndex</code> contains the index within that array where <code>obj</code> exists. <code>arrayIndex</code> is ignored if <code>obj</code> is not both a <xref href=\"System.ValueType\"></xref> and a member of an array.\n  overload: System.Runtime.Serialization.ObjectManager.RegisterObject*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>obj</code> parameter is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The <code>objectID</code> parameter is less than or equal to zero.\n  - type: System.Runtime.Serialization.SerializationException\n    commentId: T:System.Runtime.Serialization.SerializationException\n    description: The <code>objectID</code> has already been registered for an object other than <code>obj</code>, or <code>member</code> is not a <xref href=\"System.Reflection.FieldInfo\"></xref> and <code>member</code> isn't `null`.\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/ObjectManager.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Security.SecurityException\n  parent: System.Security\n  isExternal: false\n  name: SecurityException\n  nameWithType: SecurityException\n  fullName: System.Security.SecurityException\n- uid: System.Runtime.Serialization.SerializationException\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationException\n  nameWithType: SerializationException\n  fullName: System.Runtime.Serialization.SerializationException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Runtime.Serialization.ObjectManager.#ctor(System.Runtime.Serialization.ISurrogateSelector,System.Runtime.Serialization.StreamingContext)\n  parent: System.Runtime.Serialization.ObjectManager\n  isExternal: false\n  name: ObjectManager(ISurrogateSelector, StreamingContext)\n  nameWithType: ObjectManager.ObjectManager(ISurrogateSelector, StreamingContext)\n  fullName: ObjectManager.ObjectManager(ISurrogateSelector, StreamingContext)\n- uid: System.Runtime.Serialization.ISurrogateSelector\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: ISurrogateSelector\n  nameWithType: ISurrogateSelector\n  fullName: System.Runtime.Serialization.ISurrogateSelector\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.Runtime.Serialization.ObjectManager.DoFixups\n  parent: System.Runtime.Serialization.ObjectManager\n  isExternal: false\n  name: DoFixups()\n  nameWithType: ObjectManager.DoFixups()\n  fullName: ObjectManager.DoFixups()\n- uid: System.Runtime.Serialization.ObjectManager.GetObject(System.Int64)\n  parent: System.Runtime.Serialization.ObjectManager\n  isExternal: false\n  name: GetObject(Int64)\n  nameWithType: ObjectManager.GetObject(Int64)\n  fullName: ObjectManager.GetObject(Int64)\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Runtime.Serialization.ObjectManager.RaiseDeserializationEvent\n  parent: System.Runtime.Serialization.ObjectManager\n  isExternal: false\n  name: RaiseDeserializationEvent()\n  nameWithType: ObjectManager.RaiseDeserializationEvent()\n  fullName: ObjectManager.RaiseDeserializationEvent()\n- uid: System.Runtime.Serialization.ObjectManager.RaiseOnDeserializingEvent(System.Object)\n  parent: System.Runtime.Serialization.ObjectManager\n  isExternal: false\n  name: RaiseOnDeserializingEvent(Object)\n  nameWithType: ObjectManager.RaiseOnDeserializingEvent(Object)\n  fullName: ObjectManager.RaiseOnDeserializingEvent(Object)\n- uid: System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup(System.Int64,System.Int32,System.Int64)\n  parent: System.Runtime.Serialization.ObjectManager\n  isExternal: false\n  name: RecordArrayElementFixup(Int64, Int32, Int64)\n  nameWithType: ObjectManager.RecordArrayElementFixup(Int64, Int32, Int64)\n  fullName: ObjectManager.RecordArrayElementFixup(Int64, Int32, Int64)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup(System.Int64,System.Int32[],System.Int64)\n  parent: System.Runtime.Serialization.ObjectManager\n  isExternal: false\n  name: RecordArrayElementFixup(Int64, Int32[], Int64)\n  nameWithType: ObjectManager.RecordArrayElementFixup(Int64, Int32[], Int64)\n  fullName: ObjectManager.RecordArrayElementFixup(Int64, Int32[], Int64)\n- uid: System.Int32[]\n  parent: System\n  isExternal: false\n  name: Int32[]\n  nameWithType: Int32[]\n  fullName: System.Int32[]\n  spec.csharp:\n  - uid: System.Int32\n    name: Int32\n    nameWithType: Int32\n    fullName: System.Int32\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Runtime.Serialization.ObjectManager.RecordDelayedFixup(System.Int64,System.String,System.Int64)\n  parent: System.Runtime.Serialization.ObjectManager\n  isExternal: false\n  name: RecordDelayedFixup(Int64, String, Int64)\n  nameWithType: ObjectManager.RecordDelayedFixup(Int64, String, Int64)\n  fullName: ObjectManager.RecordDelayedFixup(Int64, String, Int64)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Runtime.Serialization.ObjectManager.RecordFixup(System.Int64,System.Reflection.MemberInfo,System.Int64)\n  parent: System.Runtime.Serialization.ObjectManager\n  isExternal: false\n  name: RecordFixup(Int64, MemberInfo, Int64)\n  nameWithType: ObjectManager.RecordFixup(Int64, MemberInfo, Int64)\n  fullName: ObjectManager.RecordFixup(Int64, MemberInfo, Int64)\n- uid: System.Reflection.MemberInfo\n  parent: System.Reflection\n  isExternal: false\n  name: MemberInfo\n  nameWithType: MemberInfo\n  fullName: System.Reflection.MemberInfo\n- uid: System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64)\n  parent: System.Runtime.Serialization.ObjectManager\n  isExternal: false\n  name: RegisterObject(Object, Int64)\n  nameWithType: ObjectManager.RegisterObject(Object, Int64)\n  fullName: ObjectManager.RegisterObject(Object, Int64)\n- uid: System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo)\n  parent: System.Runtime.Serialization.ObjectManager\n  isExternal: false\n  name: RegisterObject(Object, Int64, SerializationInfo)\n  nameWithType: ObjectManager.RegisterObject(Object, Int64, SerializationInfo)\n  fullName: ObjectManager.RegisterObject(Object, Int64, SerializationInfo)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo,System.Int64,System.Reflection.MemberInfo)\n  parent: System.Runtime.Serialization.ObjectManager\n  isExternal: false\n  name: RegisterObject(Object, Int64, SerializationInfo, Int64, MemberInfo)\n  nameWithType: ObjectManager.RegisterObject(Object, Int64, SerializationInfo, Int64, MemberInfo)\n  fullName: ObjectManager.RegisterObject(Object, Int64, SerializationInfo, Int64, MemberInfo)\n- uid: System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo,System.Int64,System.Reflection.MemberInfo,System.Int32[])\n  parent: System.Runtime.Serialization.ObjectManager\n  isExternal: false\n  name: RegisterObject(Object, Int64, SerializationInfo, Int64, MemberInfo, Int32[])\n  nameWithType: ObjectManager.RegisterObject(Object, Int64, SerializationInfo, Int64, MemberInfo, Int32[])\n  fullName: ObjectManager.RegisterObject(Object, Int64, SerializationInfo, Int64, MemberInfo, Int32[])\n- uid: System.Runtime.Serialization.ObjectManager.#ctor*\n  parent: System.Runtime.Serialization.ObjectManager\n  isExternal: false\n  name: ObjectManager\n  nameWithType: ObjectManager.ObjectManager\n  fullName: ObjectManager.ObjectManager\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/ObjectManager.xml\n- uid: System.Runtime.Serialization.ObjectManager.DoFixups*\n  parent: System.Runtime.Serialization.ObjectManager\n  isExternal: false\n  name: DoFixups\n  nameWithType: ObjectManager.DoFixups\n  fullName: ObjectManager.DoFixups\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/ObjectManager.xml\n- uid: System.Runtime.Serialization.ObjectManager.GetObject*\n  parent: System.Runtime.Serialization.ObjectManager\n  isExternal: false\n  name: GetObject\n  nameWithType: ObjectManager.GetObject\n  fullName: ObjectManager.GetObject\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/ObjectManager.xml\n- uid: System.Runtime.Serialization.ObjectManager.RaiseDeserializationEvent*\n  parent: System.Runtime.Serialization.ObjectManager\n  isExternal: false\n  name: RaiseDeserializationEvent\n  nameWithType: ObjectManager.RaiseDeserializationEvent\n  fullName: ObjectManager.RaiseDeserializationEvent\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/ObjectManager.xml\n- uid: System.Runtime.Serialization.ObjectManager.RaiseOnDeserializingEvent*\n  parent: System.Runtime.Serialization.ObjectManager\n  isExternal: false\n  name: RaiseOnDeserializingEvent\n  nameWithType: ObjectManager.RaiseOnDeserializingEvent\n  fullName: ObjectManager.RaiseOnDeserializingEvent\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/ObjectManager.xml\n- uid: System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup*\n  parent: System.Runtime.Serialization.ObjectManager\n  isExternal: false\n  name: RecordArrayElementFixup\n  nameWithType: ObjectManager.RecordArrayElementFixup\n  fullName: ObjectManager.RecordArrayElementFixup\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/ObjectManager.xml\n- uid: System.Runtime.Serialization.ObjectManager.RecordDelayedFixup*\n  parent: System.Runtime.Serialization.ObjectManager\n  isExternal: false\n  name: RecordDelayedFixup\n  nameWithType: ObjectManager.RecordDelayedFixup\n  fullName: ObjectManager.RecordDelayedFixup\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/ObjectManager.xml\n- uid: System.Runtime.Serialization.ObjectManager.RecordFixup*\n  parent: System.Runtime.Serialization.ObjectManager\n  isExternal: false\n  name: RecordFixup\n  nameWithType: ObjectManager.RecordFixup\n  fullName: ObjectManager.RecordFixup\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/ObjectManager.xml\n- uid: System.Runtime.Serialization.ObjectManager.RegisterObject*\n  parent: System.Runtime.Serialization.ObjectManager\n  isExternal: false\n  name: RegisterObject\n  nameWithType: ObjectManager.RegisterObject\n  fullName: ObjectManager.RegisterObject\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization/ObjectManager.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}