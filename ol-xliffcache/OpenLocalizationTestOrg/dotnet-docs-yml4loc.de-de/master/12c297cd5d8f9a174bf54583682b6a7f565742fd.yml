### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.ServiceHostBase
  commentId: T:System.ServiceModel.ServiceHostBase
  id: ServiceHostBase
  children:
  - System.ServiceModel.ServiceHostBase.#ctor
  - System.ServiceModel.ServiceHostBase.AddBaseAddress(System.Uri)
  - System.ServiceModel.ServiceHostBase.AddDefaultEndpoints
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)
  - System.ServiceModel.ServiceHostBase.ApplyConfiguration
  - System.ServiceModel.ServiceHostBase.Authentication
  - System.ServiceModel.ServiceHostBase.Authorization
  - System.ServiceModel.ServiceHostBase.BaseAddresses
  - System.ServiceModel.ServiceHostBase.ChannelDispatchers
  - System.ServiceModel.ServiceHostBase.CloseTimeout
  - System.ServiceModel.ServiceHostBase.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)
  - System.ServiceModel.ServiceHostBase.Credentials
  - System.ServiceModel.ServiceHostBase.DefaultCloseTimeout
  - System.ServiceModel.ServiceHostBase.DefaultOpenTimeout
  - System.ServiceModel.ServiceHostBase.Description
  - System.ServiceModel.ServiceHostBase.Extensions
  - System.ServiceModel.ServiceHostBase.ImplementedContracts
  - System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit(System.Int32)
  - System.ServiceModel.ServiceHostBase.InitializeDescription(System.ServiceModel.UriSchemeKeyedCollection)
  - System.ServiceModel.ServiceHostBase.InitializeRuntime
  - System.ServiceModel.ServiceHostBase.LoadConfigurationSection(System.ServiceModel.Configuration.ServiceElement)
  - System.ServiceModel.ServiceHostBase.ManualFlowControlLimit
  - System.ServiceModel.ServiceHostBase.OnAbort
  - System.ServiceModel.ServiceHostBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.ServiceHostBase.OnClose(System.TimeSpan)
  - System.ServiceModel.ServiceHostBase.OnClosed
  - System.ServiceModel.ServiceHostBase.OnEndClose(System.IAsyncResult)
  - System.ServiceModel.ServiceHostBase.OnEndOpen(System.IAsyncResult)
  - System.ServiceModel.ServiceHostBase.OnOpen(System.TimeSpan)
  - System.ServiceModel.ServiceHostBase.OnOpened
  - System.ServiceModel.ServiceHostBase.OpenTimeout
  - System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters
  - System.ServiceModel.ServiceHostBase.SetEndpointAddress(System.ServiceModel.Description.ServiceEndpoint,System.String)
  - System.ServiceModel.ServiceHostBase.UnknownMessageReceived
  - System.ServiceModel.ServiceHostBase.System#IDisposable#Dispose
  langs:
  - csharp
  name: ServiceHostBase
  nameWithType: ServiceHostBase
  fullName: System.ServiceModel.ServiceHostBase
  type: Class
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Extends the <xref href="System.ServiceModel.ServiceHostBase"></xref> class to implement hosts that expose custom programming models.
  remarks: "Use the <xref:System.ServiceModel.ServiceHostBase> class to create hosts that provide a custom programming model. The [!INCLUDE[indigo1](~/includes/indigo1-md.md)] service programming model uses the <xref:System.ServiceModel.ServiceHost> class.  \n  \n Special note for Managed C++ users deriving from this class:  \n  \n-   Put your cleanup code in (On)(Begin)Close (and/or OnAbort), not in a destructor.  \n  \n-   Avoid destructors; they cause the compiler to auto-generate <xref:System.IDisposable>.  \n  \n-   Avoid non-reference members; they can cause the compiler to auto-generate <xref:System.IDisposable>.  \n  \n-   Avoid finalizers; but if you include one, you should suppress the build warning and call <xref:System.GC.SuppressFinalize%28System.Object%29> and the finalizer itself from (On)(Begin)Close (and/or OnAbort) to emulate what would have been the auto-generated <xref:System.IDisposable> behavior."
  example:
  - "This sample uses the <xref:System.ServiceModel.ServiceHost> class, which is derived from <xref:System.ServiceModel.ServiceHostBase>.  \n  \n [!code-csharp[S_SelfHost#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_selfhost/cs/wholeenchilada.cs#1)]\n [!code-vb[S_SelfHost#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_selfhost/vb/wholeenchilada.vb#1)]"
  syntax:
    content: 'public abstract class ServiceHostBase : System.ServiceModel.Channels.CommunicationObject, IDisposable, System.ServiceModel.IExtensibleObject<System.ServiceModel.ServiceHostBase>'
  inheritance:
  - System.Object
  - System.ServiceModel.Channels.CommunicationObject
  derivedClasses:
  - System.ServiceModel.ServiceHost
  - System.ServiceModel.WorkflowServiceHost
  - System.ServiceModel.Activities.WorkflowServiceHost
  implements:
  - System.IDisposable
  - System.ServiceModel.IExtensibleObject{System.ServiceModel.ServiceHostBase}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  - System.ServiceModel.Channels.CommunicationObject.Abort
  - System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.CommunicationObject.Close
  - System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)
  - System.ServiceModel.Channels.CommunicationObject.Closed
  - System.ServiceModel.Channels.CommunicationObject.Closing
  - System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)
  - System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)
  - System.ServiceModel.Channels.CommunicationObject.Fault
  - System.ServiceModel.Channels.CommunicationObject.Faulted
  - System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType
  - System.ServiceModel.Channels.CommunicationObject.IsDisposed
  - System.ServiceModel.Channels.CommunicationObject.OnClosing
  - System.ServiceModel.Channels.CommunicationObject.OnFaulted
  - System.ServiceModel.Channels.CommunicationObject.OnOpening
  - System.ServiceModel.Channels.CommunicationObject.Open
  - System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)
  - System.ServiceModel.Channels.CommunicationObject.Opened
  - System.ServiceModel.Channels.CommunicationObject.Opening
  - System.ServiceModel.Channels.CommunicationObject.State
  - System.ServiceModel.Channels.CommunicationObject.ThisLock
  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed
  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable
  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.ServiceHostBase.#ctor
  commentId: M:System.ServiceModel.ServiceHostBase.#ctor
  id: '#ctor'
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: ServiceHostBase()
  nameWithType: ServiceHostBase.ServiceHostBase()
  fullName: ServiceHostBase.ServiceHostBase()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Initializes a new instance of the <xref href="System.ServiceModel.ServiceHostBase"></xref> class.
  remarks: ''
  example:
  - '[!code-csharp[S_SelfHost#30](~/samples/snippets/csharp/VS_Snippets_CFX/s_selfhost/cs/wholeenchilada.cs#30)]'
  syntax:
    content: protected ServiceHostBase ();
    parameters: []
  overload: System.ServiceModel.ServiceHostBase.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.ServiceHostBase.AddBaseAddress(System.Uri)
  commentId: M:System.ServiceModel.ServiceHostBase.AddBaseAddress(System.Uri)
  id: AddBaseAddress(System.Uri)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: AddBaseAddress(Uri)
  nameWithType: ServiceHostBase.AddBaseAddress(Uri)
  fullName: ServiceHostBase.AddBaseAddress(Uri)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Adds a base address to the service host.
  remarks: This property allows users extending <xref:System.ServiceModel.ServiceHostBase> to provide the base address after the host is constructed. <xref:System.ServiceModel.ServiceHostBase.AddBaseAddress%28System.Uri%29> can be used to add base addresses to an existing host, but throws an exception if the description is already initialized.
  syntax:
    content: protected void AddBaseAddress (Uri baseAddress);
    parameters:
    - id: baseAddress
      type: System.Uri
      description: A <xref href="System.Uri"></xref> that contains the base address for services hosted on the current host.
  overload: System.ServiceModel.ServiceHostBase.AddBaseAddress*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The <code>baseAddress</code> cannot be called.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.ServiceHostBase.AddDefaultEndpoints
  commentId: M:System.ServiceModel.ServiceHostBase.AddDefaultEndpoints
  id: AddDefaultEndpoints
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: AddDefaultEndpoints()
  nameWithType: ServiceHostBase.AddDefaultEndpoints()
  fullName: ServiceHostBase.AddDefaultEndpoints()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Adds service endpoints for all base addresses in each contract found in the service host with the default binding.
  syntax:
    content: public virtual System.Collections.ObjectModel.ReadOnlyCollection<System.ServiceModel.Description.ServiceEndpoint> AddDefaultEndpoints ();
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.ServiceModel.Description.ServiceEndpoint}
      description: A read-only collection of default endpoints.
  overload: System.ServiceModel.ServiceHostBase.AddDefaultEndpoints*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)
  commentId: M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)
  id: AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: AddServiceEndpoint(ServiceEndpoint)
  nameWithType: ServiceHostBase.AddServiceEndpoint(ServiceEndpoint)
  fullName: ServiceHostBase.AddServiceEndpoint(ServiceEndpoint)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Adds the specified service endpoint to the hosted service.
  remarks: "When using the method, the service host does a \"by-configuration-name\" validation on the contract description. In other words, the host verifies that <xref:System.ServiceModel.Description.ContractDescription.ConfigurationName%2A> exists in the list of configuration names of the service contracts implemented by the service. If the validation passes, the description in the <xref:System.ServiceModel.Description.ServiceEndpoint> is used as it is, even if the <xref:System.ServiceModel.Description.ContractDescription> reflected from the service is different.  \n  \n As an example, assume that the description in the ServiceEndpoint and the contract description reflected from the service have the same name, but different operation behaviors. The implication of only \"by-configuration-name\" validation is that there is no validation that the behaviors are the same and there are one updates to one description because of another description.  \n  \n If the `address` is a relative URI, one of the base addresses of the <xref:System.ServiceModel.ServiceHost> (depending on the binding protocol) is used as the endpoint's base address."
  syntax:
    content: public virtual void AddServiceEndpoint (System.ServiceModel.Description.ServiceEndpoint endpoint);
    parameters:
    - id: endpoint
      type: System.ServiceModel.Description.ServiceEndpoint
      description: The service endpoint.
  overload: System.ServiceModel.ServiceHostBase.AddServiceEndpoint*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>Endpoint</code> is `null`.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The host is not in a Created or an Opening state or there is no <xref href="System.ServiceModel.Description.ServiceDescription"></xref> for the hosted service.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The <code>Address</code>, <code>Binding</code>, or <code>Contract</code> property is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)
  commentId: M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)
  id: AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: AddServiceEndpoint(String, Binding, String)
  nameWithType: ServiceHostBase.AddServiceEndpoint(String, Binding, String)
  fullName: ServiceHostBase.AddServiceEndpoint(String, Binding, String)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Adds a service endpoint to the hosted service with a specified contract, binding, and endpoint address.
  remarks: ''
  example:
  - '[!code-csharp[S_SelfHost#40](~/samples/snippets/csharp/VS_Snippets_CFX/s_selfhost/cs/wholeenchilada.cs#40)]'
  syntax:
    content: public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (string implementedContract, System.ServiceModel.Channels.Binding binding, string address);
    parameters:
    - id: implementedContract
      type: System.String
      description: The contract implemented by the endpoint.
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: The <xref href="System.ServiceModel.Channels.Binding"></xref> for the endpoint added.
    - id: address
      type: System.String
      description: The address for the endpoint added. This can be an absolute or relative URI. If it is a relative URI, one of the base address of the <xref href="System.ServiceModel.ServiceHost"></xref> (depending on the binding protocol) is used as the endpoint's base address.
    return:
      type: System.ServiceModel.Description.ServiceEndpoint
      description: The <xref href="System.ServiceModel.Description.ServiceEndpoint"></xref> added to the hosted service.
  overload: System.ServiceModel.ServiceHostBase.AddServiceEndpoint*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>implementedContract</code> or <code>binding</code> or <code>address</code> or is `null`.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The host is not in a <xref href="System.ServiceModel.CommunicationState.Created"></xref> or an <xref href="System.ServiceModel.CommunicationState.Opening"></xref> state or there is no <xref href="System.ServiceModel.Description.ServiceDescription"></xref> for the hosted service and so an endpoint cannot be added or the binding lacks a transport of binding scheme.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)
  commentId: M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)
  id: AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: AddServiceEndpoint(String, Binding, Uri)
  nameWithType: ServiceHostBase.AddServiceEndpoint(String, Binding, Uri)
  fullName: ServiceHostBase.AddServiceEndpoint(String, Binding, Uri)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Adds a service endpoint to the hosted service with a specified contract, binding, and a URI that contains the endpoint address.
  syntax:
    content: public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (string implementedContract, System.ServiceModel.Channels.Binding binding, Uri address);
    parameters:
    - id: implementedContract
      type: System.String
      description: The contract implemented by the endpoint.
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: The <xref href="System.ServiceModel.Channels.Binding"></xref> for the endpoint added.
    - id: address
      type: System.Uri
      description: The <xref href="System.Uri"></xref> that contains the address for the endpoint added. This can be an absolute or relative URI. If it is a relative URI, one of the base address of the <xref href="System.ServiceModel.ServiceHost"></xref> (depending on the binding protocol) is used as the endpoint's base address.
    return:
      type: System.ServiceModel.Description.ServiceEndpoint
      description: The <xref href="System.ServiceModel.Description.ServiceEndpoint"></xref> added to the hosted service.
  overload: System.ServiceModel.ServiceHostBase.AddServiceEndpoint*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>implementedContract</code> or <code>binding</code> or <code>address</code> or is `null`.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The host is not in a <xref href="System.ServiceModel.CommunicationState.Created"></xref> or an <xref href="System.ServiceModel.CommunicationState.Opening"></xref> state or there is no <xref href="System.ServiceModel.Description.ServiceDescription"></xref> for the hosted service and so an endpoint cannot be added.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)
  commentId: M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)
  id: AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: AddServiceEndpoint(String, Binding, String, Uri)
  nameWithType: ServiceHostBase.AddServiceEndpoint(String, Binding, String, Uri)
  fullName: ServiceHostBase.AddServiceEndpoint(String, Binding, String, Uri)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Adds a service endpoint to the hosted service with a specified contract, binding, endpoint address and URI that contains the address at which it listens.
  remarks: If the `address` is a relative URI, one of the base addresses of the <xref:System.ServiceModel.ServiceHost> (depending on the binding protocol) is used as the endpoint's base address.
  syntax:
    content: public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (string implementedContract, System.ServiceModel.Channels.Binding binding, string address, Uri listenUri);
    parameters:
    - id: implementedContract
      type: System.String
      description: The contract implemented by the endpoint.
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: The <xref href="System.ServiceModel.Channels.Binding"></xref> for the endpoint added.
    - id: address
      type: System.String
      description: The address for the endpoint added. This address can be an absolute or relative URI. If it is a relative URI, one of the base address of the <xref href="System.ServiceModel.ServiceHost"></xref> (depending on the binding protocol) is used as the endpoint's base address.
    - id: listenUri
      type: System.Uri
      description: The <xref href="System.Uri"></xref> that contains the address which the endpoint listens to for incoming messages. This URI can be relative or absolute.
    return:
      type: System.ServiceModel.Description.ServiceEndpoint
      description: The <xref href="System.ServiceModel.Description.ServiceEndpoint"></xref> added to the hosted service.
  overload: System.ServiceModel.ServiceHostBase.AddServiceEndpoint*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>implementedContract</code> or <code>binding</code> or <code>address</code> or is `null`.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The host is not in a <xref href="System.ServiceModel.CommunicationState.Created"></xref> or an <xref href="System.ServiceModel.CommunicationState.Opening"></xref> state or there is no <xref href="System.ServiceModel.Description.ServiceDescription"></xref> for the hosted service and so an endpoint cannot be added.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)
  commentId: M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)
  id: AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: AddServiceEndpoint(String, Binding, Uri, Uri)
  nameWithType: ServiceHostBase.AddServiceEndpoint(String, Binding, Uri, Uri)
  fullName: ServiceHostBase.AddServiceEndpoint(String, Binding, Uri, Uri)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Adds a service endpoint to the hosted service with the specified contract, binding, and URIs that contain the endpoint and listening addresses.
  syntax:
    content: public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (string implementedContract, System.ServiceModel.Channels.Binding binding, Uri address, Uri listenUri);
    parameters:
    - id: implementedContract
      type: System.String
      description: The contract implemented by the endpoint.
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: The <xref href="System.ServiceModel.Channels.Binding"></xref> for the endpoint added.
    - id: address
      type: System.Uri
      description: The <xref href="System.Uri"></xref> that contains the address for the endpoint added. If it is a relative URI, one of the base address of the <xref href="System.ServiceModel.ServiceHost"></xref> (depending on the binding protocol) is used as the endpoint's base address.
    - id: listenUri
      type: System.Uri
      description: The <xref href="System.Uri"></xref> that contains the address at which the endpoint listens for incoming messages.
    return:
      type: System.ServiceModel.Description.ServiceEndpoint
      description: The <xref href="System.ServiceModel.Description.ServiceEndpoint"></xref> added to the hosted service. This URI can be absolute or relative.
  overload: System.ServiceModel.ServiceHostBase.AddServiceEndpoint*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>implementedContract</code> or <code>binding</code> or <code>address</code> or is `null`.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The host is not in a <xref href="System.ServiceModel.CommunicationState.Created"></xref> or an <xref href="System.ServiceModel.CommunicationState.Opening"></xref> state or there is no <xref href="System.ServiceModel.Description.ServiceDescription"></xref> for the hosted service and so an endpoint cannot be added.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.ServiceHostBase.ApplyConfiguration
  commentId: M:System.ServiceModel.ServiceHostBase.ApplyConfiguration
  id: ApplyConfiguration
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: ApplyConfiguration()
  nameWithType: ServiceHostBase.ApplyConfiguration()
  fullName: ServiceHostBase.ApplyConfiguration()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Loads the service description information from the configuration file and applies it to the runtime being constructed.
  syntax:
    content: protected virtual void ApplyConfiguration ();
    parameters: []
  overload: System.ServiceModel.ServiceHostBase.ApplyConfiguration*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The description of the service hosted is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.ServiceHostBase.Authentication
  commentId: P:System.ServiceModel.ServiceHostBase.Authentication
  id: Authentication
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: Authentication
  nameWithType: ServiceHostBase.Authentication
  fullName: ServiceHostBase.Authentication
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets the service authentication behavior.
  syntax:
    content: public System.ServiceModel.Description.ServiceAuthenticationBehavior Authentication { get; }
    return:
      type: System.ServiceModel.Description.ServiceAuthenticationBehavior
      description: The service authentication behavior.
  overload: System.ServiceModel.ServiceHostBase.Authentication*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.ServiceHostBase.Authorization
  commentId: P:System.ServiceModel.ServiceHostBase.Authorization
  id: Authorization
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: Authorization
  nameWithType: ServiceHostBase.Authorization
  fullName: ServiceHostBase.Authorization
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets the authorization behavior for the service hosted.
  remarks: ''
  example:
  - '[!code-csharp[S_SelfHost#36](~/samples/snippets/csharp/VS_Snippets_CFX/s_selfhost/cs/wholeenchilada.cs#36)]'
  syntax:
    content: public System.ServiceModel.Description.ServiceAuthorizationBehavior Authorization { get; }
    return:
      type: System.ServiceModel.Description.ServiceAuthorizationBehavior
      description: The <xref href="System.ServiceModel.Description.ServiceAuthorizationBehavior"></xref> for the service hosted.
  overload: System.ServiceModel.ServiceHostBase.Authorization*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.ServiceHostBase.BaseAddresses
  commentId: P:System.ServiceModel.ServiceHostBase.BaseAddresses
  id: BaseAddresses
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: BaseAddresses
  nameWithType: ServiceHostBase.BaseAddresses
  fullName: ServiceHostBase.BaseAddresses
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets the base addresses used by the hosted service.
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<Uri> BaseAddresses { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Uri}
      description: A <xref href="System.Collections.ObjectModel.ReadOnlyCollection`1"></xref> of type <xref href="System.Uri"></xref> that contains the base addresses for the hosted service.
  overload: System.ServiceModel.ServiceHostBase.BaseAddresses*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.ServiceHostBase.ChannelDispatchers
  commentId: P:System.ServiceModel.ServiceHostBase.ChannelDispatchers
  id: ChannelDispatchers
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: ChannelDispatchers
  nameWithType: ServiceHostBase.ChannelDispatchers
  fullName: ServiceHostBase.ChannelDispatchers
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets the collection of channel dispatchers used by the service host.
  syntax:
    content: public System.ServiceModel.Dispatcher.ChannelDispatcherCollection ChannelDispatchers { get; }
    return:
      type: System.ServiceModel.Dispatcher.ChannelDispatcherCollection
      description: The <xref href="System.ServiceModel.Dispatcher.ChannelDispatcherCollection"></xref> that contains the channel dispatchers used by the service host.
  overload: System.ServiceModel.ServiceHostBase.ChannelDispatchers*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.ServiceHostBase.CloseTimeout
  commentId: P:System.ServiceModel.ServiceHostBase.CloseTimeout
  id: CloseTimeout
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: CloseTimeout
  nameWithType: ServiceHostBase.CloseTimeout
  fullName: ServiceHostBase.CloseTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets or sets the interval of time allowed for the service host to close.
  remarks: ''
  example:
  - '[!code-csharp[S_SelfHost#33](~/samples/snippets/csharp/VS_Snippets_CFX/s_selfhost/cs/wholeenchilada.cs#33)]'
  syntax:
    content: public TimeSpan CloseTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: The <xref href="System.TimeSpan"></xref> that specifies the interval of time allowed for the service host to close.
  overload: System.ServiceModel.ServiceHostBase.CloseTimeout*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The value, in milliseconds, is less than zero or is larger than <xref href="System.Int32.MaxValue"></xref> (2,147,483,647 or, in hexadecimal notation, 0X7FFFFFFF).
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The host is in an <xref href="System.ServiceModel.CommunicationState.Opening"></xref> or <xref href="System.ServiceModel.CommunicationState.Closing"></xref> state and cannot be modified.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The host is already in a <xref href="System.ServiceModel.CommunicationState.Closed"></xref> state and cannot be modified.
  - type: System.ServiceModel.CommunicationObjectFaultedException
    commentId: T:System.ServiceModel.CommunicationObjectFaultedException
    description: The host is in a <xref href="System.ServiceModel.CommunicationState.Faulted"></xref> state and cannot be modified.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.ServiceHostBase.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)
  commentId: M:System.ServiceModel.ServiceHostBase.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)
  id: CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: CreateDescription(IDictionary<String,ContractDescription>)
  nameWithType: ServiceHostBase.CreateDescription(IDictionary<String,ContractDescription>)
  fullName: ServiceHostBase.CreateDescription(IDictionary<String,ContractDescription>)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: When implemented in a derived class, creates the description of the hosted service.
  remarks: ''
  example:
  - '[!code-csharp[S_SelfHost#41](~/samples/snippets/csharp/VS_Snippets_CFX/s_selfhost/cs/wholeenchilada.cs#41)]'
  syntax:
    content: protected abstract System.ServiceModel.Description.ServiceDescription CreateDescription (out System.Collections.Generic.IDictionary<string,System.ServiceModel.Description.ContractDescription> implementedContracts);
    parameters:
    - id: implementedContracts
      type: System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}
      description: The <xref href="System.Collections.Generic.IDictionary`2"></xref> that contains the <xref href="System.ServiceModel.Description.ContractDescription"></xref> objects for the service.
    return:
      type: System.ServiceModel.Description.ServiceDescription
      description: The <xref href="System.ServiceModel.Description.ServiceDescription"></xref> for the hosted service.
  overload: System.ServiceModel.ServiceHostBase.CreateDescription*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.ServiceHostBase.Credentials
  commentId: P:System.ServiceModel.ServiceHostBase.Credentials
  id: Credentials
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: Credentials
  nameWithType: ServiceHostBase.Credentials
  fullName: ServiceHostBase.Credentials
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets the credential for the service hosted.
  remarks: ''
  example:
  - '[!code-csharp[S_SelfHost#37](~/samples/snippets/csharp/VS_Snippets_CFX/s_selfhost/cs/wholeenchilada.cs#37)]'
  syntax:
    content: public System.ServiceModel.Description.ServiceCredentials Credentials { get; }
    return:
      type: System.ServiceModel.Description.ServiceCredentials
      description: The <xref href="System.ServiceModel.Description.ServiceCredentials"></xref> for the service hosted.
  overload: System.ServiceModel.ServiceHostBase.Credentials*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.ServiceHostBase.DefaultCloseTimeout
  commentId: P:System.ServiceModel.ServiceHostBase.DefaultCloseTimeout
  id: DefaultCloseTimeout
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: DefaultCloseTimeout
  nameWithType: ServiceHostBase.DefaultCloseTimeout
  fullName: ServiceHostBase.DefaultCloseTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets the default interval of time allowed for the service host to close.
  syntax:
    content: protected override TimeSpan DefaultCloseTimeout { get; }
    return:
      type: System.TimeSpan
      description: The <xref href="System.TimeSpan"></xref> that specifies the default interval of time allowed for the service host to close.
  overload: System.ServiceModel.ServiceHostBase.DefaultCloseTimeout*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.ServiceHostBase.DefaultOpenTimeout
  commentId: P:System.ServiceModel.ServiceHostBase.DefaultOpenTimeout
  id: DefaultOpenTimeout
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: DefaultOpenTimeout
  nameWithType: ServiceHostBase.DefaultOpenTimeout
  fullName: ServiceHostBase.DefaultOpenTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets the default interval of time allowed for the service host to open.
  remarks: ''
  example:
  - '[!code-csharp[S_SelfHost#35](~/samples/snippets/csharp/VS_Snippets_CFX/s_selfhost/cs/wholeenchilada.cs#35)]'
  syntax:
    content: protected override TimeSpan DefaultOpenTimeout { get; }
    return:
      type: System.TimeSpan
      description: The <xref href="System.TimeSpan"></xref> that specifies the default interval of time allowed for the service host to open.
  overload: System.ServiceModel.ServiceHostBase.DefaultOpenTimeout*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.ServiceHostBase.Description
  commentId: P:System.ServiceModel.ServiceHostBase.Description
  id: Description
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: Description
  nameWithType: ServiceHostBase.Description
  fullName: ServiceHostBase.Description
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets the description of the service hosted.
  remarks: ''
  example:
  - '[!code-csharp[S_SelfHost#38](~/samples/snippets/csharp/VS_Snippets_CFX/s_selfhost/cs/wholeenchilada.cs#38)]'
  syntax:
    content: public System.ServiceModel.Description.ServiceDescription Description { get; }
    return:
      type: System.ServiceModel.Description.ServiceDescription
      description: The <xref href="System.ServiceModel.Description.ServiceDescription"></xref> for the hosted service.
  overload: System.ServiceModel.ServiceHostBase.Description*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.ServiceHostBase.Extensions
  commentId: P:System.ServiceModel.ServiceHostBase.Extensions
  id: Extensions
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: Extensions
  nameWithType: ServiceHostBase.Extensions
  fullName: ServiceHostBase.Extensions
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets the extensions for the current specified service host.
  syntax:
    content: public System.ServiceModel.IExtensionCollection<System.ServiceModel.ServiceHostBase> Extensions { get; }
    return:
      type: System.ServiceModel.IExtensionCollection{System.ServiceModel.ServiceHostBase}
      description: An <xref href="System.ServiceModel.IExtensionCollection`1"></xref> of type <xref href="System.ServiceModel.ServiceHostBase"></xref>.
  overload: System.ServiceModel.ServiceHostBase.Extensions*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.ServiceHostBase.ImplementedContracts
  commentId: P:System.ServiceModel.ServiceHostBase.ImplementedContracts
  id: ImplementedContracts
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: ImplementedContracts
  nameWithType: ServiceHostBase.ImplementedContracts
  fullName: ServiceHostBase.ImplementedContracts
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Retrieves the contracts implemented by the service hosted.
  syntax:
    content: protected System.Collections.Generic.IDictionary<string,System.ServiceModel.Description.ContractDescription> ImplementedContracts { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}
      description: The <xref href="System.Collections.Generic.IDictionary`2"></xref> that contains the <xref href="System.ServiceModel.Description.ContractDescription"></xref> objects for the service.
  overload: System.ServiceModel.ServiceHostBase.ImplementedContracts*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit(System.Int32)
  commentId: M:System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit(System.Int32)
  id: IncrementManualFlowControlLimit(System.Int32)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: IncrementManualFlowControlLimit(Int32)
  nameWithType: ServiceHostBase.IncrementManualFlowControlLimit(Int32)
  fullName: ServiceHostBase.IncrementManualFlowControlLimit(Int32)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Increases the limit on the flow rate of messages to the hosted service by a specified increment.
  remarks: This limit can be accessed using the <xref:System.ServiceModel.ServiceHostBase.ManualFlowControlLimit%2A> property.
  example:
  - '[!code-csharp[S_SelfHost#42](~/samples/snippets/csharp/VS_Snippets_CFX/s_selfhost/cs/wholeenchilada.cs#42)]'
  syntax:
    content: public int IncrementManualFlowControlLimit (int incrementBy);
    parameters:
    - id: incrementBy
      type: System.Int32
      description: The number of messages by which to increase the flow control limit.
    return:
      type: System.Int32
      description: The new limit after the increment is added.
  overload: System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The value is less than zero.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.ServiceHostBase.InitializeDescription(System.ServiceModel.UriSchemeKeyedCollection)
  commentId: M:System.ServiceModel.ServiceHostBase.InitializeDescription(System.ServiceModel.UriSchemeKeyedCollection)
  id: InitializeDescription(System.ServiceModel.UriSchemeKeyedCollection)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: InitializeDescription(UriSchemeKeyedCollection)
  nameWithType: ServiceHostBase.InitializeDescription(UriSchemeKeyedCollection)
  fullName: ServiceHostBase.InitializeDescription(UriSchemeKeyedCollection)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Creates and initializes the service host with the contract and service descriptions.
  syntax:
    content: protected void InitializeDescription (System.ServiceModel.UriSchemeKeyedCollection baseAddresses);
    parameters:
    - id: baseAddresses
      type: System.ServiceModel.UriSchemeKeyedCollection
      description: A <xref href="System.ServiceModel.UriSchemeKeyedCollection"></xref> that contains the base addresses for the service hosted.
  overload: System.ServiceModel.ServiceHostBase.InitializeDescription*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.ServiceHostBase.InitializeRuntime
  commentId: M:System.ServiceModel.ServiceHostBase.InitializeRuntime
  id: InitializeRuntime
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: InitializeRuntime()
  nameWithType: ServiceHostBase.InitializeRuntime()
  fullName: ServiceHostBase.InitializeRuntime()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Initializes the runtime for the service host.
  syntax:
    content: protected virtual void InitializeRuntime ();
    parameters: []
  overload: System.ServiceModel.ServiceHostBase.InitializeRuntime*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The description of the service hosted is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.ServiceHostBase.LoadConfigurationSection(System.ServiceModel.Configuration.ServiceElement)
  commentId: M:System.ServiceModel.ServiceHostBase.LoadConfigurationSection(System.ServiceModel.Configuration.ServiceElement)
  id: LoadConfigurationSection(System.ServiceModel.Configuration.ServiceElement)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: LoadConfigurationSection(ServiceElement)
  nameWithType: ServiceHostBase.LoadConfigurationSection(ServiceElement)
  fullName: ServiceHostBase.LoadConfigurationSection(ServiceElement)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Loads the service element from the configuration file of the hosted service.
  syntax:
    content: protected void LoadConfigurationSection (System.ServiceModel.Configuration.ServiceElement serviceSection);
    parameters:
    - id: serviceSection
      type: System.ServiceModel.Configuration.ServiceElement
      description: The <xref href="System.ServiceModel.Configuration.ServiceElement"></xref> to be loaded from configuration.
  overload: System.ServiceModel.ServiceHostBase.LoadConfigurationSection*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>serviceSection</code> is `null`.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The description of the service hosted is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.ServiceHostBase.ManualFlowControlLimit
  commentId: P:System.ServiceModel.ServiceHostBase.ManualFlowControlLimit
  id: ManualFlowControlLimit
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: ManualFlowControlLimit
  nameWithType: ServiceHostBase.ManualFlowControlLimit
  fullName: ServiceHostBase.ManualFlowControlLimit
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets or sets the flow control limit for messages received by the service hosted.
  remarks: This limit can be incremented using the <xref:System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit%28System.Int32%29> method.
  example:
  - '[!code-csharp[S_SelfHost#39](~/samples/snippets/csharp/VS_Snippets_CFX/s_selfhost/cs/wholeenchilada.cs#39)]'
  syntax:
    content: public int ManualFlowControlLimit { get; set; }
    return:
      type: System.Int32
      description: The flow control limit for messages received by the service hosted.
  overload: System.ServiceModel.ServiceHostBase.ManualFlowControlLimit*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The value is less than zero.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.ServiceHostBase.OnAbort
  commentId: M:System.ServiceModel.ServiceHostBase.OnAbort
  id: OnAbort
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: OnAbort()
  nameWithType: ServiceHostBase.OnAbort()
  fullName: ServiceHostBase.OnAbort()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Aborts the service.
  syntax:
    content: protected override void OnAbort ();
    parameters: []
  overload: System.ServiceModel.ServiceHostBase.OnAbort*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.ServiceHostBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.ServiceHostBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: OnBeginClose(TimeSpan, AsyncCallback, Object)
  nameWithType: ServiceHostBase.OnBeginClose(TimeSpan, AsyncCallback, Object)
  fullName: ServiceHostBase.OnBeginClose(TimeSpan, AsyncCallback, Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Begins an asynchronous operation invoked on the close of the service host.
  syntax:
    content: protected override IAsyncResult OnBeginClose (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: The <xref href="System.TimeSpan"></xref> that specifies how long the on-close operation has to complete before timing out.
    - id: callback
      type: System.AsyncCallback
      description: The <xref href="System.AsyncCallback"></xref> delegate that receives the notification of the asynchronous operation on-close completion.
    - id: state
      type: System.Object
      description: An object, specified by the application, that contains state information associated with the asynchronous on-close operation.
    return:
      type: System.IAsyncResult
      description: The <xref href="System.IAsyncResult"></xref> that references the asynchronous on-close operation.
  overload: System.ServiceModel.ServiceHostBase.OnBeginClose*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: OnBeginOpen(TimeSpan, AsyncCallback, Object)
  nameWithType: ServiceHostBase.OnBeginOpen(TimeSpan, AsyncCallback, Object)
  fullName: ServiceHostBase.OnBeginOpen(TimeSpan, AsyncCallback, Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Begins an asynchronous operation invoked on the opening of the service host.
  syntax:
    content: protected override IAsyncResult OnBeginOpen (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: The <xref href="System.TimeSpan"></xref> that specifies how long the on-open operation has to complete before timing out.
    - id: callback
      type: System.AsyncCallback
      description: The <xref href="System.AsyncCallback"></xref> delegate that receives the notification of the asynchronous operation on-open completion.
    - id: state
      type: System.Object
      description: An object, specified by the application, that contains state information associated with the asynchronous on-open operation.
    return:
      type: System.IAsyncResult
      description: The <xref href="System.IAsyncResult"></xref> that references the asynchronous on-open operation.
  overload: System.ServiceModel.ServiceHostBase.OnBeginOpen*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.ServiceHostBase.OnClose(System.TimeSpan)
  commentId: M:System.ServiceModel.ServiceHostBase.OnClose(System.TimeSpan)
  id: OnClose(System.TimeSpan)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: OnClose(TimeSpan)
  nameWithType: ServiceHostBase.OnClose(TimeSpan)
  fullName: ServiceHostBase.OnClose(TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Closes down the hosted service, including their channel dispatchers and associated instance contexts and listeners.
  remarks: "Calling <xref:System.ServiceModel.ServiceHostBase.OnClose%28System.TimeSpan%29> does the following:  \n  \n-   Closes all input to <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>, which also closes their associated <xref:System.ServiceModel.Channels.IChannelListener> instances. This stops any new channels from being accepting.  \n  \n-   Calls <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.CloseInput%2A> on all <xref:System.ServiceModel.InstanceContext> objects, which mean they stop accepting new messages.  \n  \n-   Waits for all <xref:System.ServiceModel.InstanceContext> objects to close down, which happens when their associated channels finish sending all pending messages.  \n  \n-   Closes the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> objects associated with the host."
  syntax:
    content: protected override void OnClose (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: The <xref href="System.TimeSpan"></xref> that specifies how long the on-close operation has to complete before timing out.
  overload: System.ServiceModel.ServiceHostBase.OnClose*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.ServiceHostBase.OnClosed
  commentId: M:System.ServiceModel.ServiceHostBase.OnClosed
  id: OnClosed
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: OnClosed()
  nameWithType: ServiceHostBase.OnClosed()
  fullName: ServiceHostBase.OnClosed()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Releases resources used by the service host.
  syntax:
    content: protected override void OnClosed ();
    parameters: []
  overload: System.ServiceModel.ServiceHostBase.OnClosed*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.ServiceHostBase.OnEndClose(System.IAsyncResult)
  commentId: M:System.ServiceModel.ServiceHostBase.OnEndClose(System.IAsyncResult)
  id: OnEndClose(System.IAsyncResult)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: OnEndClose(IAsyncResult)
  nameWithType: ServiceHostBase.OnEndClose(IAsyncResult)
  fullName: ServiceHostBase.OnEndClose(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Completes an asynchronous operation invoked on the closing of the service host.
  syntax:
    content: protected override void OnEndClose (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: The <xref href="System.IAsyncResult"></xref> returned by a call to the <xref href="System.ServiceModel.ServiceHostBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)"></xref> method.
  overload: System.ServiceModel.ServiceHostBase.OnEndClose*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.ServiceHostBase.OnEndOpen(System.IAsyncResult)
  commentId: M:System.ServiceModel.ServiceHostBase.OnEndOpen(System.IAsyncResult)
  id: OnEndOpen(System.IAsyncResult)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: OnEndOpen(IAsyncResult)
  nameWithType: ServiceHostBase.OnEndOpen(IAsyncResult)
  fullName: ServiceHostBase.OnEndOpen(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Completes an asynchronous operation invoked on the opening of the service host.
  syntax:
    content: protected override void OnEndOpen (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: The <xref href="System.IAsyncResult"></xref> returned by a call to the <xref href="System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)"></xref> method.
  overload: System.ServiceModel.ServiceHostBase.OnEndOpen*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.ServiceHostBase.OnOpen(System.TimeSpan)
  commentId: M:System.ServiceModel.ServiceHostBase.OnOpen(System.TimeSpan)
  id: OnOpen(System.TimeSpan)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: OnOpen(TimeSpan)
  nameWithType: ServiceHostBase.OnOpen(TimeSpan)
  fullName: ServiceHostBase.OnOpen(TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Opens the channel dispatchers.
  syntax:
    content: protected override void OnOpen (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: The <xref href="System.TimeSpan"></xref> that specifies how long the on-open operation has to complete before timing out.
  overload: System.ServiceModel.ServiceHostBase.OnOpen*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.ServiceHostBase.OnOpened
  commentId: M:System.ServiceModel.ServiceHostBase.OnOpened
  id: OnOpened
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: OnOpened()
  nameWithType: ServiceHostBase.OnOpened()
  fullName: ServiceHostBase.OnOpened()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets the service credentials,service authentication and authorization behavior for the hosted service.
  remarks: Once these behaviors are initialized when opening the service, they cannot be changed.
  syntax:
    content: protected override void OnOpened ();
    parameters: []
  overload: System.ServiceModel.ServiceHostBase.OnOpened*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.ServiceHostBase.OpenTimeout
  commentId: P:System.ServiceModel.ServiceHostBase.OpenTimeout
  id: OpenTimeout
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: OpenTimeout
  nameWithType: ServiceHostBase.OpenTimeout
  fullName: ServiceHostBase.OpenTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets or sets the interval of time allowed for the service host to open.
  syntax:
    content: public TimeSpan OpenTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: The <xref href="System.TimeSpan"></xref> that specifies the interval of time allowed for the service host to open.
  overload: System.ServiceModel.ServiceHostBase.OpenTimeout*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The value is less than zero or is larger than <xref href="System.Int32.MaxValue"></xref> (2,147,483,647 or, in hexadecimal notation, 0X7FFFFFFF).
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The host is in an <xref href="System.ServiceModel.CommunicationState.Opening"></xref> or <xref href="System.ServiceModel.CommunicationState.Closing"></xref> state and cannot be modified.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The host is already in a <xref href="System.ServiceModel.CommunicationState.Closed"></xref> state and cannot be modified.
  - type: System.ServiceModel.CommunicationObjectFaultedException
    commentId: T:System.ServiceModel.CommunicationObjectFaultedException
    description: The host is in a <xref href="System.ServiceModel.CommunicationState.Faulted"></xref> state and cannot be modified.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters
  commentId: M:System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters
  id: ReleasePerformanceCounters
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: ReleasePerformanceCounters()
  nameWithType: ServiceHostBase.ReleasePerformanceCounters()
  fullName: ServiceHostBase.ReleasePerformanceCounters()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Releases the service and channel dispatcher performance counters for the hosted service.
  remarks: "This method is invoked when calling <xref:System.ServiceModel.ServiceHostBase.OnClose%28System.TimeSpan%29> and  \n  \n <xref:System.ServiceModel.ServiceHostBase.OnEndClose%28System.IAsyncResult%29>."
  syntax:
    content: protected void ReleasePerformanceCounters ();
    parameters: []
  overload: System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.ServiceHostBase.SetEndpointAddress(System.ServiceModel.Description.ServiceEndpoint,System.String)
  commentId: M:System.ServiceModel.ServiceHostBase.SetEndpointAddress(System.ServiceModel.Description.ServiceEndpoint,System.String)
  id: SetEndpointAddress(System.ServiceModel.Description.ServiceEndpoint,System.String)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: SetEndpointAddress(ServiceEndpoint, String)
  nameWithType: ServiceHostBase.SetEndpointAddress(ServiceEndpoint, String)
  fullName: ServiceHostBase.SetEndpointAddress(ServiceEndpoint, String)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Sets the endpoint address of the specified endpoint to the specified address.
  syntax:
    content: public void SetEndpointAddress (System.ServiceModel.Description.ServiceEndpoint endpoint, string relativeAddress);
    parameters:
    - id: endpoint
      type: System.ServiceModel.Description.ServiceEndpoint
      description: The service endpoint.
    - id: relativeAddress
      type: System.String
      description: The endpoint address.
  overload: System.ServiceModel.ServiceHostBase.SetEndpointAddress*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.ServiceHostBase.UnknownMessageReceived
  commentId: E:System.ServiceModel.ServiceHostBase.UnknownMessageReceived
  id: UnknownMessageReceived
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: UnknownMessageReceived
  nameWithType: ServiceHostBase.UnknownMessageReceived
  fullName: ServiceHostBase.UnknownMessageReceived
  type: Event
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Occurs when an unknown message is received.
  remarks: >-
    > [!WARNING]

    >  When using <xref:System.ServiceModel.WorkflowServiceHost>, exposing a hosting endpoint, and a <xref:System.ServiceModel.ServiceHostBase.UnknownMessageReceived> exception is thrown, the host passes the message to the event handler. If an attempt is made to read this message an <xref:System.InvalidOperationException> is thrown. The description of the exception will say "This message cannot support the operation because it has been read."  The WCF infrastructure reads the message while extracting the message parameters. This message is then passed to the event handler and any attempt to read it causes an exception. If you need to access message parameters in your <xref:System.InvalidOperationException> handler from a hosting endpoint, define the hosting endpoint contract using MessageContract and place the needed data into a message header. [!INCLUDE[crabout](~/includes/crabout-md.md)] hosting endpoints see [Workflow Service Host Extensibility](~/docs/framework/wcf/feature-details/workflow-service-host-extensibility.md)
  syntax:
    content: public event EventHandler<System.ServiceModel.UnknownMessageReceivedEventArgs> UnknownMessageReceived;
    return:
      type: System.EventHandler{System.ServiceModel.UnknownMessageReceivedEventArgs}
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.ServiceHostBase.System#IDisposable#Dispose
  commentId: M:System.ServiceModel.ServiceHostBase.System#IDisposable#Dispose
  id: System#IDisposable#Dispose
  isEii: true
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: IDisposable.Dispose()
  nameWithType: ServiceHostBase.IDisposable.Dispose()
  fullName: ServiceHostBase.IDisposable.Dispose()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Closes the service host.
  syntax:
    content: void IDisposable.Dispose ();
    parameters: []
  overload: System.ServiceModel.ServiceHostBase.System#IDisposable#Dispose*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
references:
- uid: System.ServiceModel.Channels.CommunicationObject
  parent: System.ServiceModel.Channels
  isExternal: false
  name: CommunicationObject
  nameWithType: CommunicationObject
  fullName: System.ServiceModel.Channels.CommunicationObject
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  parent: System
  isExternal: false
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.ObjectDisposedException
  parent: System
  isExternal: false
  name: ObjectDisposedException
  nameWithType: ObjectDisposedException
  fullName: System.ObjectDisposedException
- uid: System.ServiceModel.CommunicationObjectFaultedException
  parent: System.ServiceModel
  isExternal: false
  name: CommunicationObjectFaultedException
  nameWithType: CommunicationObjectFaultedException
  fullName: System.ServiceModel.CommunicationObjectFaultedException
- uid: System.ServiceModel.ServiceHostBase.#ctor
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: ServiceHostBase()
  nameWithType: ServiceHostBase.ServiceHostBase()
  fullName: ServiceHostBase.ServiceHostBase()
- uid: System.ServiceModel.ServiceHostBase.AddBaseAddress(System.Uri)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: AddBaseAddress(Uri)
  nameWithType: ServiceHostBase.AddBaseAddress(Uri)
  fullName: ServiceHostBase.AddBaseAddress(Uri)
- uid: System.Uri
  parent: System
  isExternal: false
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.ServiceHostBase.AddDefaultEndpoints
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: AddDefaultEndpoints()
  nameWithType: ServiceHostBase.AddDefaultEndpoints()
  fullName: ServiceHostBase.AddDefaultEndpoints()
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  name: ReadOnlyCollection<T>
  nameWithType: ReadOnlyCollection<T>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>
- uid: System.ServiceModel.Description.ServiceEndpoint
  name: ServiceEndpoint
  nameWithType: ServiceEndpoint
  fullName: System.ServiceModel.Description.ServiceEndpoint
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.ServiceModel.Description.ServiceEndpoint}
  parent: System.Collections.ObjectModel
  isExternal: false
  name: ReadOnlyCollection<ServiceEndpoint>
  nameWithType: ReadOnlyCollection<ServiceEndpoint>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.ServiceModel.Description.ServiceEndpoint>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Description.ServiceEndpoint
    name: ServiceEndpoint
    nameWithType: ServiceEndpoint
    fullName: System.ServiceModel.Description.ServiceEndpoint
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: AddServiceEndpoint(ServiceEndpoint)
  nameWithType: ServiceHostBase.AddServiceEndpoint(ServiceEndpoint)
  fullName: ServiceHostBase.AddServiceEndpoint(ServiceEndpoint)
- uid: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: AddServiceEndpoint(String, Binding, String)
  nameWithType: ServiceHostBase.AddServiceEndpoint(String, Binding, String)
  fullName: ServiceHostBase.AddServiceEndpoint(String, Binding, String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Channels.Binding
  parent: System.ServiceModel.Channels
  isExternal: false
  name: Binding
  nameWithType: Binding
  fullName: System.ServiceModel.Channels.Binding
- uid: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: AddServiceEndpoint(String, Binding, Uri)
  nameWithType: ServiceHostBase.AddServiceEndpoint(String, Binding, Uri)
  fullName: ServiceHostBase.AddServiceEndpoint(String, Binding, Uri)
- uid: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: AddServiceEndpoint(String, Binding, String, Uri)
  nameWithType: ServiceHostBase.AddServiceEndpoint(String, Binding, String, Uri)
  fullName: ServiceHostBase.AddServiceEndpoint(String, Binding, String, Uri)
- uid: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: AddServiceEndpoint(String, Binding, Uri, Uri)
  nameWithType: ServiceHostBase.AddServiceEndpoint(String, Binding, Uri, Uri)
  fullName: ServiceHostBase.AddServiceEndpoint(String, Binding, Uri, Uri)
- uid: System.ServiceModel.ServiceHostBase.ApplyConfiguration
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: ApplyConfiguration()
  nameWithType: ServiceHostBase.ApplyConfiguration()
  fullName: ServiceHostBase.ApplyConfiguration()
- uid: System.ServiceModel.ServiceHostBase.Authentication
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: Authentication
  nameWithType: ServiceHostBase.Authentication
  fullName: ServiceHostBase.Authentication
- uid: System.ServiceModel.Description.ServiceAuthenticationBehavior
  parent: System.ServiceModel.Description
  isExternal: false
  name: ServiceAuthenticationBehavior
  nameWithType: ServiceAuthenticationBehavior
  fullName: System.ServiceModel.Description.ServiceAuthenticationBehavior
- uid: System.ServiceModel.ServiceHostBase.Authorization
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: Authorization
  nameWithType: ServiceHostBase.Authorization
  fullName: ServiceHostBase.Authorization
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior
  parent: System.ServiceModel.Description
  isExternal: false
  name: ServiceAuthorizationBehavior
  nameWithType: ServiceAuthorizationBehavior
  fullName: System.ServiceModel.Description.ServiceAuthorizationBehavior
- uid: System.ServiceModel.ServiceHostBase.BaseAddresses
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: BaseAddresses
  nameWithType: ServiceHostBase.BaseAddresses
  fullName: ServiceHostBase.BaseAddresses
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Uri}
  parent: System.Collections.ObjectModel
  isExternal: false
  name: ReadOnlyCollection<Uri>
  nameWithType: ReadOnlyCollection<Uri>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Uri>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.ServiceHostBase.ChannelDispatchers
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: ChannelDispatchers
  nameWithType: ServiceHostBase.ChannelDispatchers
  fullName: ServiceHostBase.ChannelDispatchers
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherCollection
  parent: System.ServiceModel.Dispatcher
  isExternal: false
  name: ChannelDispatcherCollection
  nameWithType: ChannelDispatcherCollection
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherCollection
- uid: System.ServiceModel.ServiceHostBase.CloseTimeout
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: CloseTimeout
  nameWithType: ServiceHostBase.CloseTimeout
  fullName: ServiceHostBase.CloseTimeout
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.ServiceModel.ServiceHostBase.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: CreateDescription(IDictionary<String,ContractDescription>)
  nameWithType: ServiceHostBase.CreateDescription(IDictionary<String,ContractDescription>)
  fullName: ServiceHostBase.CreateDescription(IDictionary<String,ContractDescription>)
- uid: System.ServiceModel.Description.ServiceDescription
  parent: System.ServiceModel.Description
  isExternal: false
  name: ServiceDescription
  nameWithType: ServiceDescription
  fullName: System.ServiceModel.Description.ServiceDescription
- uid: System.Collections.Generic.IDictionary`2
  name: IDictionary<TKey,TValue>
  nameWithType: IDictionary<TKey,TValue>
  fullName: System.Collections.Generic.IDictionary<TKey,TValue>
- uid: System.ServiceModel.Description.ContractDescription
  name: ContractDescription
  nameWithType: ContractDescription
  fullName: System.ServiceModel.Description.ContractDescription
- uid: System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}
  parent: System.Collections.Generic
  isExternal: false
  name: IDictionary<String,ContractDescription>
  nameWithType: IDictionary<String,ContractDescription>
  fullName: System.Collections.Generic.IDictionary<System.String,System.ServiceModel.Description.ContractDescription>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.ServiceModel.Description.ContractDescription
    name: ContractDescription
    nameWithType: ContractDescription
    fullName: System.ServiceModel.Description.ContractDescription
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.ServiceHostBase.Credentials
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: Credentials
  nameWithType: ServiceHostBase.Credentials
  fullName: ServiceHostBase.Credentials
- uid: System.ServiceModel.Description.ServiceCredentials
  parent: System.ServiceModel.Description
  isExternal: false
  name: ServiceCredentials
  nameWithType: ServiceCredentials
  fullName: System.ServiceModel.Description.ServiceCredentials
- uid: System.ServiceModel.ServiceHostBase.DefaultCloseTimeout
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: DefaultCloseTimeout
  nameWithType: ServiceHostBase.DefaultCloseTimeout
  fullName: ServiceHostBase.DefaultCloseTimeout
- uid: System.ServiceModel.ServiceHostBase.DefaultOpenTimeout
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: DefaultOpenTimeout
  nameWithType: ServiceHostBase.DefaultOpenTimeout
  fullName: ServiceHostBase.DefaultOpenTimeout
- uid: System.ServiceModel.ServiceHostBase.Description
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: Description
  nameWithType: ServiceHostBase.Description
  fullName: ServiceHostBase.Description
- uid: System.ServiceModel.ServiceHostBase.Extensions
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: Extensions
  nameWithType: ServiceHostBase.Extensions
  fullName: ServiceHostBase.Extensions
- uid: System.ServiceModel.IExtensionCollection`1
  name: IExtensionCollection<T>
  nameWithType: IExtensionCollection<T>
  fullName: System.ServiceModel.IExtensionCollection<T>
- uid: System.ServiceModel.ServiceHostBase
  name: ServiceHostBase
  nameWithType: ServiceHostBase
  fullName: System.ServiceModel.ServiceHostBase
- uid: System.ServiceModel.IExtensionCollection{System.ServiceModel.ServiceHostBase}
  parent: System.ServiceModel
  isExternal: false
  name: IExtensionCollection<ServiceHostBase>
  nameWithType: IExtensionCollection<ServiceHostBase>
  fullName: System.ServiceModel.IExtensionCollection<System.ServiceModel.ServiceHostBase>
  spec.csharp:
  - uid: System.ServiceModel.IExtensionCollection`1
    name: IExtensionCollection
    nameWithType: IExtensionCollection
    fullName: System.ServiceModel.IExtensionCollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.ServiceHostBase
    name: ServiceHostBase
    nameWithType: ServiceHostBase
    fullName: System.ServiceModel.ServiceHostBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.ServiceHostBase.ImplementedContracts
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: ImplementedContracts
  nameWithType: ServiceHostBase.ImplementedContracts
  fullName: ServiceHostBase.ImplementedContracts
- uid: System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit(System.Int32)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: IncrementManualFlowControlLimit(Int32)
  nameWithType: ServiceHostBase.IncrementManualFlowControlLimit(Int32)
  fullName: ServiceHostBase.IncrementManualFlowControlLimit(Int32)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ServiceModel.ServiceHostBase.InitializeDescription(System.ServiceModel.UriSchemeKeyedCollection)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: InitializeDescription(UriSchemeKeyedCollection)
  nameWithType: ServiceHostBase.InitializeDescription(UriSchemeKeyedCollection)
  fullName: ServiceHostBase.InitializeDescription(UriSchemeKeyedCollection)
- uid: System.ServiceModel.UriSchemeKeyedCollection
  parent: System.ServiceModel
  isExternal: false
  name: UriSchemeKeyedCollection
  nameWithType: UriSchemeKeyedCollection
  fullName: System.ServiceModel.UriSchemeKeyedCollection
- uid: System.ServiceModel.ServiceHostBase.InitializeRuntime
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: InitializeRuntime()
  nameWithType: ServiceHostBase.InitializeRuntime()
  fullName: ServiceHostBase.InitializeRuntime()
- uid: System.ServiceModel.ServiceHostBase.LoadConfigurationSection(System.ServiceModel.Configuration.ServiceElement)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: LoadConfigurationSection(ServiceElement)
  nameWithType: ServiceHostBase.LoadConfigurationSection(ServiceElement)
  fullName: ServiceHostBase.LoadConfigurationSection(ServiceElement)
- uid: System.ServiceModel.Configuration.ServiceElement
  parent: System.ServiceModel.Configuration
  isExternal: false
  name: ServiceElement
  nameWithType: ServiceElement
  fullName: System.ServiceModel.Configuration.ServiceElement
- uid: System.ServiceModel.ServiceHostBase.ManualFlowControlLimit
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: ManualFlowControlLimit
  nameWithType: ServiceHostBase.ManualFlowControlLimit
  fullName: ServiceHostBase.ManualFlowControlLimit
- uid: System.ServiceModel.ServiceHostBase.OnAbort
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnAbort()
  nameWithType: ServiceHostBase.OnAbort()
  fullName: ServiceHostBase.OnAbort()
- uid: System.ServiceModel.ServiceHostBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnBeginClose(TimeSpan, AsyncCallback, Object)
  nameWithType: ServiceHostBase.OnBeginClose(TimeSpan, AsyncCallback, Object)
  fullName: ServiceHostBase.OnBeginClose(TimeSpan, AsyncCallback, Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: false
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: false
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnBeginOpen(TimeSpan, AsyncCallback, Object)
  nameWithType: ServiceHostBase.OnBeginOpen(TimeSpan, AsyncCallback, Object)
  fullName: ServiceHostBase.OnBeginOpen(TimeSpan, AsyncCallback, Object)
- uid: System.ServiceModel.ServiceHostBase.OnClose(System.TimeSpan)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnClose(TimeSpan)
  nameWithType: ServiceHostBase.OnClose(TimeSpan)
  fullName: ServiceHostBase.OnClose(TimeSpan)
- uid: System.ServiceModel.ServiceHostBase.OnClosed
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnClosed()
  nameWithType: ServiceHostBase.OnClosed()
  fullName: ServiceHostBase.OnClosed()
- uid: System.ServiceModel.ServiceHostBase.OnEndClose(System.IAsyncResult)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnEndClose(IAsyncResult)
  nameWithType: ServiceHostBase.OnEndClose(IAsyncResult)
  fullName: ServiceHostBase.OnEndClose(IAsyncResult)
- uid: System.ServiceModel.ServiceHostBase.OnEndOpen(System.IAsyncResult)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnEndOpen(IAsyncResult)
  nameWithType: ServiceHostBase.OnEndOpen(IAsyncResult)
  fullName: ServiceHostBase.OnEndOpen(IAsyncResult)
- uid: System.ServiceModel.ServiceHostBase.OnOpen(System.TimeSpan)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnOpen(TimeSpan)
  nameWithType: ServiceHostBase.OnOpen(TimeSpan)
  fullName: ServiceHostBase.OnOpen(TimeSpan)
- uid: System.ServiceModel.ServiceHostBase.OnOpened
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnOpened()
  nameWithType: ServiceHostBase.OnOpened()
  fullName: ServiceHostBase.OnOpened()
- uid: System.ServiceModel.ServiceHostBase.OpenTimeout
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OpenTimeout
  nameWithType: ServiceHostBase.OpenTimeout
  fullName: ServiceHostBase.OpenTimeout
- uid: System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: ReleasePerformanceCounters()
  nameWithType: ServiceHostBase.ReleasePerformanceCounters()
  fullName: ServiceHostBase.ReleasePerformanceCounters()
- uid: System.ServiceModel.ServiceHostBase.SetEndpointAddress(System.ServiceModel.Description.ServiceEndpoint,System.String)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: SetEndpointAddress(ServiceEndpoint, String)
  nameWithType: ServiceHostBase.SetEndpointAddress(ServiceEndpoint, String)
  fullName: ServiceHostBase.SetEndpointAddress(ServiceEndpoint, String)
- uid: System.ServiceModel.ServiceHostBase.UnknownMessageReceived
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: UnknownMessageReceived
  nameWithType: ServiceHostBase.UnknownMessageReceived
  fullName: ServiceHostBase.UnknownMessageReceived
- uid: System.EventHandler`1
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
- uid: System.ServiceModel.UnknownMessageReceivedEventArgs
  name: UnknownMessageReceivedEventArgs
  nameWithType: UnknownMessageReceivedEventArgs
  fullName: System.ServiceModel.UnknownMessageReceivedEventArgs
- uid: System.EventHandler{System.ServiceModel.UnknownMessageReceivedEventArgs}
  parent: System
  isExternal: false
  name: EventHandler<UnknownMessageReceivedEventArgs>
  nameWithType: EventHandler<UnknownMessageReceivedEventArgs>
  fullName: System.EventHandler<System.ServiceModel.UnknownMessageReceivedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.UnknownMessageReceivedEventArgs
    name: UnknownMessageReceivedEventArgs
    nameWithType: UnknownMessageReceivedEventArgs
    fullName: System.ServiceModel.UnknownMessageReceivedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.ServiceHostBase.System#IDisposable#Dispose
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: IDisposable.Dispose()
  nameWithType: ServiceHostBase.IDisposable.Dispose()
  fullName: ServiceHostBase.IDisposable.Dispose()
- uid: System.ServiceModel.ServiceHostBase.#ctor*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: ServiceHostBase
  nameWithType: ServiceHostBase.ServiceHostBase
  fullName: ServiceHostBase.ServiceHostBase
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
- uid: System.ServiceModel.ServiceHostBase.AddBaseAddress*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: AddBaseAddress
  nameWithType: ServiceHostBase.AddBaseAddress
  fullName: ServiceHostBase.AddBaseAddress
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
- uid: System.ServiceModel.ServiceHostBase.AddDefaultEndpoints*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: AddDefaultEndpoints
  nameWithType: ServiceHostBase.AddDefaultEndpoints
  fullName: ServiceHostBase.AddDefaultEndpoints
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
- uid: System.ServiceModel.ServiceHostBase.AddServiceEndpoint*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: AddServiceEndpoint
  nameWithType: ServiceHostBase.AddServiceEndpoint
  fullName: ServiceHostBase.AddServiceEndpoint
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
- uid: System.ServiceModel.ServiceHostBase.ApplyConfiguration*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: ApplyConfiguration
  nameWithType: ServiceHostBase.ApplyConfiguration
  fullName: ServiceHostBase.ApplyConfiguration
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
- uid: System.ServiceModel.ServiceHostBase.Authentication*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: Authentication
  nameWithType: ServiceHostBase.Authentication
  fullName: ServiceHostBase.Authentication
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
- uid: System.ServiceModel.ServiceHostBase.Authorization*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: Authorization
  nameWithType: ServiceHostBase.Authorization
  fullName: ServiceHostBase.Authorization
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
- uid: System.ServiceModel.ServiceHostBase.BaseAddresses*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: BaseAddresses
  nameWithType: ServiceHostBase.BaseAddresses
  fullName: ServiceHostBase.BaseAddresses
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
- uid: System.ServiceModel.ServiceHostBase.ChannelDispatchers*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: ChannelDispatchers
  nameWithType: ServiceHostBase.ChannelDispatchers
  fullName: ServiceHostBase.ChannelDispatchers
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
- uid: System.ServiceModel.ServiceHostBase.CloseTimeout*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: CloseTimeout
  nameWithType: ServiceHostBase.CloseTimeout
  fullName: ServiceHostBase.CloseTimeout
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
- uid: System.ServiceModel.ServiceHostBase.CreateDescription*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: CreateDescription
  nameWithType: ServiceHostBase.CreateDescription
  fullName: ServiceHostBase.CreateDescription
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
- uid: System.ServiceModel.ServiceHostBase.Credentials*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: Credentials
  nameWithType: ServiceHostBase.Credentials
  fullName: ServiceHostBase.Credentials
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
- uid: System.ServiceModel.ServiceHostBase.DefaultCloseTimeout*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: DefaultCloseTimeout
  nameWithType: ServiceHostBase.DefaultCloseTimeout
  fullName: ServiceHostBase.DefaultCloseTimeout
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
- uid: System.ServiceModel.ServiceHostBase.DefaultOpenTimeout*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: DefaultOpenTimeout
  nameWithType: ServiceHostBase.DefaultOpenTimeout
  fullName: ServiceHostBase.DefaultOpenTimeout
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
- uid: System.ServiceModel.ServiceHostBase.Description*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: Description
  nameWithType: ServiceHostBase.Description
  fullName: ServiceHostBase.Description
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
- uid: System.ServiceModel.ServiceHostBase.Extensions*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: Extensions
  nameWithType: ServiceHostBase.Extensions
  fullName: ServiceHostBase.Extensions
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
- uid: System.ServiceModel.ServiceHostBase.ImplementedContracts*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: ImplementedContracts
  nameWithType: ServiceHostBase.ImplementedContracts
  fullName: ServiceHostBase.ImplementedContracts
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
- uid: System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: IncrementManualFlowControlLimit
  nameWithType: ServiceHostBase.IncrementManualFlowControlLimit
  fullName: ServiceHostBase.IncrementManualFlowControlLimit
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
- uid: System.ServiceModel.ServiceHostBase.InitializeDescription*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: InitializeDescription
  nameWithType: ServiceHostBase.InitializeDescription
  fullName: ServiceHostBase.InitializeDescription
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
- uid: System.ServiceModel.ServiceHostBase.InitializeRuntime*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: InitializeRuntime
  nameWithType: ServiceHostBase.InitializeRuntime
  fullName: ServiceHostBase.InitializeRuntime
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
- uid: System.ServiceModel.ServiceHostBase.LoadConfigurationSection*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: LoadConfigurationSection
  nameWithType: ServiceHostBase.LoadConfigurationSection
  fullName: ServiceHostBase.LoadConfigurationSection
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
- uid: System.ServiceModel.ServiceHostBase.ManualFlowControlLimit*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: ManualFlowControlLimit
  nameWithType: ServiceHostBase.ManualFlowControlLimit
  fullName: ServiceHostBase.ManualFlowControlLimit
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
- uid: System.ServiceModel.ServiceHostBase.OnAbort*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnAbort
  nameWithType: ServiceHostBase.OnAbort
  fullName: ServiceHostBase.OnAbort
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
- uid: System.ServiceModel.ServiceHostBase.OnBeginClose*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnBeginClose
  nameWithType: ServiceHostBase.OnBeginClose
  fullName: ServiceHostBase.OnBeginClose
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
- uid: System.ServiceModel.ServiceHostBase.OnBeginOpen*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnBeginOpen
  nameWithType: ServiceHostBase.OnBeginOpen
  fullName: ServiceHostBase.OnBeginOpen
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
- uid: System.ServiceModel.ServiceHostBase.OnClose*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnClose
  nameWithType: ServiceHostBase.OnClose
  fullName: ServiceHostBase.OnClose
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
- uid: System.ServiceModel.ServiceHostBase.OnClosed*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnClosed
  nameWithType: ServiceHostBase.OnClosed
  fullName: ServiceHostBase.OnClosed
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
- uid: System.ServiceModel.ServiceHostBase.OnEndClose*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnEndClose
  nameWithType: ServiceHostBase.OnEndClose
  fullName: ServiceHostBase.OnEndClose
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
- uid: System.ServiceModel.ServiceHostBase.OnEndOpen*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnEndOpen
  nameWithType: ServiceHostBase.OnEndOpen
  fullName: ServiceHostBase.OnEndOpen
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
- uid: System.ServiceModel.ServiceHostBase.OnOpen*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnOpen
  nameWithType: ServiceHostBase.OnOpen
  fullName: ServiceHostBase.OnOpen
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
- uid: System.ServiceModel.ServiceHostBase.OnOpened*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnOpened
  nameWithType: ServiceHostBase.OnOpened
  fullName: ServiceHostBase.OnOpened
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
- uid: System.ServiceModel.ServiceHostBase.OpenTimeout*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OpenTimeout
  nameWithType: ServiceHostBase.OpenTimeout
  fullName: ServiceHostBase.OpenTimeout
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
- uid: System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: ReleasePerformanceCounters
  nameWithType: ServiceHostBase.ReleasePerformanceCounters
  fullName: ServiceHostBase.ReleasePerformanceCounters
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
- uid: System.ServiceModel.ServiceHostBase.SetEndpointAddress*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: SetEndpointAddress
  nameWithType: ServiceHostBase.SetEndpointAddress
  fullName: ServiceHostBase.SetEndpointAddress
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
- uid: System.ServiceModel.ServiceHostBase.System#IDisposable#Dispose*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: System.IDisposable.Dispose
  nameWithType: ServiceHostBase.System.IDisposable.Dispose
  fullName: ServiceHostBase.System.IDisposable.Dispose
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/ServiceHostBase.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.ServiceModel.Channels.CommunicationObject.Abort
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Abort()
  nameWithType: CommunicationObject.Abort()
  fullName: CommunicationObject.Abort()
- uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: BeginClose(AsyncCallback, Object)
  nameWithType: CommunicationObject.BeginClose(AsyncCallback, Object)
  fullName: CommunicationObject.BeginClose(AsyncCallback, Object)
- uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: BeginClose(TimeSpan, AsyncCallback, Object)
  nameWithType: CommunicationObject.BeginClose(TimeSpan, AsyncCallback, Object)
  fullName: CommunicationObject.BeginClose(TimeSpan, AsyncCallback, Object)
- uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: BeginOpen(AsyncCallback, Object)
  nameWithType: CommunicationObject.BeginOpen(AsyncCallback, Object)
  fullName: CommunicationObject.BeginOpen(AsyncCallback, Object)
- uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: BeginOpen(TimeSpan, AsyncCallback, Object)
  nameWithType: CommunicationObject.BeginOpen(TimeSpan, AsyncCallback, Object)
  fullName: CommunicationObject.BeginOpen(TimeSpan, AsyncCallback, Object)
- uid: System.ServiceModel.Channels.CommunicationObject.Close
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Close()
  nameWithType: CommunicationObject.Close()
  fullName: CommunicationObject.Close()
- uid: System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Close(TimeSpan)
  nameWithType: CommunicationObject.Close(TimeSpan)
  fullName: CommunicationObject.Close(TimeSpan)
- uid: System.ServiceModel.Channels.CommunicationObject.Closed
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Closed
  nameWithType: CommunicationObject.Closed
  fullName: CommunicationObject.Closed
- uid: System.ServiceModel.Channels.CommunicationObject.Closing
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Closing
  nameWithType: CommunicationObject.Closing
  fullName: CommunicationObject.Closing
- uid: System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: EndClose(IAsyncResult)
  nameWithType: CommunicationObject.EndClose(IAsyncResult)
  fullName: CommunicationObject.EndClose(IAsyncResult)
- uid: System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: EndOpen(IAsyncResult)
  nameWithType: CommunicationObject.EndOpen(IAsyncResult)
  fullName: CommunicationObject.EndOpen(IAsyncResult)
- uid: System.ServiceModel.Channels.CommunicationObject.Fault
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Fault()
  nameWithType: CommunicationObject.Fault()
  fullName: CommunicationObject.Fault()
- uid: System.ServiceModel.Channels.CommunicationObject.Faulted
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Faulted
  nameWithType: CommunicationObject.Faulted
  fullName: CommunicationObject.Faulted
- uid: System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: GetCommunicationObjectType()
  nameWithType: CommunicationObject.GetCommunicationObjectType()
  fullName: CommunicationObject.GetCommunicationObjectType()
- uid: System.ServiceModel.Channels.CommunicationObject.IsDisposed
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: IsDisposed
  nameWithType: CommunicationObject.IsDisposed
  fullName: CommunicationObject.IsDisposed
- uid: System.ServiceModel.Channels.CommunicationObject.OnClosing
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: OnClosing()
  nameWithType: CommunicationObject.OnClosing()
  fullName: CommunicationObject.OnClosing()
- uid: System.ServiceModel.Channels.CommunicationObject.OnFaulted
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: OnFaulted()
  nameWithType: CommunicationObject.OnFaulted()
  fullName: CommunicationObject.OnFaulted()
- uid: System.ServiceModel.Channels.CommunicationObject.OnOpening
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: OnOpening()
  nameWithType: CommunicationObject.OnOpening()
  fullName: CommunicationObject.OnOpening()
- uid: System.ServiceModel.Channels.CommunicationObject.Open
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Open()
  nameWithType: CommunicationObject.Open()
  fullName: CommunicationObject.Open()
- uid: System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Open(TimeSpan)
  nameWithType: CommunicationObject.Open(TimeSpan)
  fullName: CommunicationObject.Open(TimeSpan)
- uid: System.ServiceModel.Channels.CommunicationObject.Opened
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Opened
  nameWithType: CommunicationObject.Opened
  fullName: CommunicationObject.Opened
- uid: System.ServiceModel.Channels.CommunicationObject.Opening
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Opening
  nameWithType: CommunicationObject.Opening
  fullName: CommunicationObject.Opening
- uid: System.ServiceModel.Channels.CommunicationObject.State
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: State
  nameWithType: CommunicationObject.State
  fullName: CommunicationObject.State
- uid: System.ServiceModel.Channels.CommunicationObject.ThisLock
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: ThisLock
  nameWithType: CommunicationObject.ThisLock
  fullName: CommunicationObject.ThisLock
- uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: ThrowIfDisposed()
  nameWithType: CommunicationObject.ThrowIfDisposed()
  fullName: CommunicationObject.ThrowIfDisposed()
- uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: ThrowIfDisposedOrImmutable()
  nameWithType: CommunicationObject.ThrowIfDisposedOrImmutable()
  fullName: CommunicationObject.ThrowIfDisposedOrImmutable()
- uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: ThrowIfDisposedOrNotOpen()
  nameWithType: CommunicationObject.ThrowIfDisposedOrNotOpen()
  fullName: CommunicationObject.ThrowIfDisposedOrNotOpen()
- uid: System.IDisposable
  parent: System
  isExternal: false
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.ServiceModel.IExtensibleObject`1
  name: IExtensibleObject<T>
  nameWithType: IExtensibleObject<T>
  fullName: System.ServiceModel.IExtensibleObject<T>
- uid: System.ServiceModel.IExtensibleObject{System.ServiceModel.ServiceHostBase}
  parent: System.ServiceModel
  isExternal: false
  name: IExtensibleObject<ServiceHostBase>
  nameWithType: IExtensibleObject<ServiceHostBase>
  fullName: System.ServiceModel.IExtensibleObject<System.ServiceModel.ServiceHostBase>
  spec.csharp:
  - uid: System.ServiceModel.IExtensibleObject`1
    name: IExtensibleObject
    nameWithType: IExtensibleObject
    fullName: System.ServiceModel.IExtensibleObject
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.ServiceHostBase
    name: ServiceHostBase
    nameWithType: ServiceHostBase
    fullName: System.ServiceModel.ServiceHostBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
