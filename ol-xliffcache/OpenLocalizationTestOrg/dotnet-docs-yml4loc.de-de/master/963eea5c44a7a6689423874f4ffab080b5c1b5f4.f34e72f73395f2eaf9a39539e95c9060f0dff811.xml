{"nodes":[{"content":"Enables a .NET Framework data provider to help ensure that a user has a security level adequate for accessing data.","nodes":[{"pos":[0,115],"content":"Enables a .NET Framework data provider to help ensure that a user has a security level adequate for accessing data.","nodes":[{"content":"Enables a .NET Framework data provider to help ensure that a user has a security level adequate for accessing data.","pos":[0,115]}]}],"pos":[1557,1673],"yaml":true},{"content":"Initializes a new instance of a `DBDataPermission` class.","nodes":[{"pos":[0,57],"content":"Initializes a new instance of a <ph id=\"ph1\">`DBDataPermission`</ph> class.","source":"Initializes a new instance of a `DBDataPermission` class."}],"pos":[4392,4450],"yaml":true},{"content":"Initializes a new instance of a `DBDataPermission` class using an existing `DBDataPermission`.","nodes":[{"pos":[0,94],"content":"Initializes a new instance of a <ph id=\"ph1\">`DBDataPermission`</ph> class using an existing <ph id=\"ph2\">`DBDataPermission`</ph>.","source":"Initializes a new instance of a `DBDataPermission` class using an existing `DBDataPermission`."}],"pos":[6124,6219],"yaml":true},{"content":"An existing `DBDataPermission` used to create a new `DBDataPermission`.","nodes":[{"pos":[0,71],"content":"An existing <ph id=\"ph1\">`DBDataPermission`</ph> used to create a new <ph id=\"ph2\">`DBDataPermission`</ph>.","source":"An existing `DBDataPermission` used to create a new `DBDataPermission`."}],"pos":[6423,6495],"yaml":true},{"content":"Initializes a new instance of a `DBDataPermission` class with the specified `DBDataPermissionAttribute`.","nodes":[{"pos":[0,104],"content":"Initializes a new instance of a <ph id=\"ph1\">`DBDataPermission`</ph> class with the specified <ph id=\"ph2\">`DBDataPermissionAttribute`</ph>.","source":"Initializes a new instance of a `DBDataPermission` class with the specified `DBDataPermissionAttribute`."}],"pos":[7911,8016],"yaml":true},{"content":"A security action associated with a custom security attribute.","nodes":[{"pos":[0,62],"content":"A security action associated with a custom security attribute.","nodes":[{"content":"A security action associated with a custom security attribute.","pos":[0,62]}]}],"pos":[8256,8319],"yaml":true},{"content":"Initializes a new instance of a `DBDataPermission` class with the specified <xref href=\"System.Security.Permissions.PermissionState\"></xref> value.","nodes":[{"pos":[0,147],"content":"Initializes a new instance of a <ph id=\"ph1\">`DBDataPermission`</ph> class with the specified <ph id=\"ph2\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;&lt;/xref&gt;</ph> value.","source":"Initializes a new instance of a `DBDataPermission` class with the specified <xref href=\"System.Security.Permissions.PermissionState\"></xref> value."}],"pos":[9702,9850],"yaml":true},{"content":"One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values.","nodes":[{"pos":[0,83],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values."}],"pos":[10060,10144],"yaml":true},{"content":"Initializes a new instance of a `DBDataPermission` class with the specified <xref href=\"System.Security.Permissions.PermissionState\"></xref> value, and a value indicating whether a blank password is allowed.","nodes":[{"pos":[0,207],"content":"Initializes a new instance of a <ph id=\"ph1\">`DBDataPermission`</ph> class with the specified <ph id=\"ph2\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;&lt;/xref&gt;</ph> value, and a value indicating whether a blank password is allowed.","source":"Initializes a new instance of a `DBDataPermission` class with the specified <xref href=\"System.Security.Permissions.PermissionState\"></xref> value, and a value indicating whether a blank password is allowed."}],"pos":[11599,11807],"yaml":true},{"content":"The <xref:System.Security.Permissions.PermissionState> enumeration takes precedence over the <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> property. Therefore, if you set <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> to `false`, you must also set <xref:System.Security.Permissions.PermissionState> to `None` to prevent a user from making a connection using a blank password.","nodes":[{"pos":[0,412],"content":"The <xref:System.Security.Permissions.PermissionState> enumeration takes precedence over the <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> property. Therefore, if you set <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> to `false`, you must also set <xref:System.Security.Permissions.PermissionState> to `None` to prevent a user from making a connection using a blank password.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> enumeration takes precedence over the <ph id=\"ph2\">&lt;xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A&gt;</ph> property.","pos":[0,167],"source":"The <xref:System.Security.Permissions.PermissionState> enumeration takes precedence over the <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> property."},{"content":"Therefore, if you set <ph id=\"ph1\">&lt;xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A&gt;</ph> to <ph id=\"ph2\">`false`</ph>, you must also set <ph id=\"ph3\">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> to <ph id=\"ph4\">`None`</ph> to prevent a user from making a connection using a blank password.","pos":[168,412],"source":" Therefore, if you set <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> to `false`, you must also set <xref:System.Security.Permissions.PermissionState> to `None` to prevent a user from making a connection using a blank password."}]}],"pos":[11818,12231],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values.","nodes":[{"pos":[0,83],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values."}],"pos":[12704,12788],"yaml":true},{"content":"Indicates whether a blank password is allowed.","nodes":[{"pos":[0,46],"content":"Indicates whether a blank password is allowed.","nodes":[{"content":"Indicates whether a blank password is allowed.","pos":[0,46]}]}],"pos":[12863,12910],"yaml":true},{"content":"Adds access for the specified connection string to the existing state of the `DBDataPermission`.","nodes":[{"pos":[0,96],"content":"Adds access for the specified connection string to the existing state of the <ph id=\"ph1\">`DBDataPermission`</ph>.","source":"Adds access for the specified connection string to the existing state of the `DBDataPermission`."}],"pos":[14416,14513],"yaml":true},{"content":"This method can be useful when implementing:  \n  \n-   A .NET framework data provider.  \n  \n-   An API that must assert for data access permission.  \n  \n-   An administrative tool or installation program that must modify security policy.  \n  \n-   When more than one rule is specified, the more restrictive rule is selected.","nodes":[{"pos":[0,44],"content":"This method can be useful when implementing:","nodes":[{"content":"This method can be useful when implementing:","pos":[0,44]}]},{"pos":[54,85],"content":"A .NET framework data provider.","nodes":[{"content":"A .NET framework data provider.","pos":[0,31]}]},{"pos":[95,146],"content":"An API that must assert for data access permission.","nodes":[{"content":"An API that must assert for data access permission.","pos":[0,51]}]},{"pos":[156,236],"content":"An administrative tool or installation program that must modify security policy.","nodes":[{"content":"An administrative tool or installation program that must modify security policy.","pos":[0,80]}]},{"pos":[246,322],"content":"When more than one rule is specified, the more restrictive rule is selected.","nodes":[{"content":"When more than one rule is specified, the more restrictive rule is selected.","pos":[0,76]}]}],"pos":[14524,14857],"yaml":true,"extradata":"MT"},{"content":"A permitted connection string.","nodes":[{"pos":[0,30],"content":"A permitted connection string.","nodes":[{"content":"A permitted connection string.","pos":[0,30]}]}],"pos":[15085,15116],"yaml":true},{"content":"String that identifies connection string parameters that are allowed or disallowed.","nodes":[{"pos":[0,83],"content":"String that identifies connection string parameters that are allowed or disallowed.","nodes":[{"content":"String that identifies connection string parameters that are allowed or disallowed.","pos":[0,83]}]}],"pos":[15184,15268],"yaml":true},{"content":"One of the <xref href=\"System.Data.KeyRestrictionBehavior\"></xref> properties.","nodes":[{"pos":[0,78],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Data.KeyRestrictionBehavior\"&gt;&lt;/xref&gt;</ph> properties.","source":"One of the <xref href=\"System.Data.KeyRestrictionBehavior\"></xref> properties."}],"pos":[15353,15432],"yaml":true},{"content":"Gets a value indicating whether a blank password is allowed.","nodes":[{"pos":[0,60],"content":"Gets a value indicating whether a blank password is allowed.","nodes":[{"content":"Gets a value indicating whether a blank password is allowed.","pos":[0,60]}]}],"pos":[16667,16728],"yaml":true},{"content":"The <xref:System.Security.Permissions.PermissionState> enumeration takes precedence over the <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> property. Therefore, if you set <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> to `false`, you must also set <xref:System.Security.Permissions.PermissionState> to `None` to prevent a user from making a connection using a blank password.","nodes":[{"pos":[0,412],"content":"The <xref:System.Security.Permissions.PermissionState> enumeration takes precedence over the <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> property. Therefore, if you set <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> to `false`, you must also set <xref:System.Security.Permissions.PermissionState> to `None` to prevent a user from making a connection using a blank password.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> enumeration takes precedence over the <ph id=\"ph2\">&lt;xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A&gt;</ph> property.","pos":[0,167],"source":"The <xref:System.Security.Permissions.PermissionState> enumeration takes precedence over the <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> property."},{"content":"Therefore, if you set <ph id=\"ph1\">&lt;xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A&gt;</ph> to <ph id=\"ph2\">`false`</ph>, you must also set <ph id=\"ph3\">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> to <ph id=\"ph4\">`None`</ph> to prevent a user from making a connection using a blank password.","pos":[168,412],"source":" Therefore, if you set <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> to `false`, you must also set <xref:System.Security.Permissions.PermissionState> to `None` to prevent a user from making a connection using a blank password."}]}],"pos":[16739,17152],"yaml":true,"extradata":"MT"},{"content":"`true` if a blank password is allowed, otherwise, `false`.","nodes":[{"pos":[0,58],"content":"<ph id=\"ph1\">`true`</ph> if a blank password is allowed, otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if a blank password is allowed, otherwise, `false`."}],"pos":[17278,17339],"yaml":true},{"content":"Removes all permissions that were previous added using the <xref href=\"System.Data.Common.DBDataPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)\"></xref> method.","nodes":[{"pos":[0,191],"content":"Removes all permissions that were previous added using the <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.DBDataPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)\"&gt;&lt;/xref&gt;</ph> method.","source":"Removes all permissions that were previous added using the <xref href=\"System.Data.Common.DBDataPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)\"></xref> method."}],"pos":[18515,18707],"yaml":true},{"content":"Creates and returns an identical copy of the current permission object.","nodes":[{"pos":[0,71],"content":"Creates and returns an identical copy of the current permission object.","nodes":[{"content":"Creates and returns an identical copy of the current permission object.","pos":[0,71]}]}],"pos":[19931,20003],"yaml":true},{"content":"A copy of a permission object represents the same access to resources as the original permission object.","nodes":[{"pos":[0,104],"content":"A copy of a permission object represents the same access to resources as the original permission object.","nodes":[{"content":"A copy of a permission object represents the same access to resources as the original permission object.","pos":[0,104]}]}],"pos":[20014,20119],"yaml":true,"extradata":"MT"},{"content":"A copy of the current permission object.","nodes":[{"pos":[0,40],"content":"A copy of the current permission object.","nodes":[{"content":"A copy of the current permission object.","pos":[0,40]}]}],"pos":[20285,20326],"yaml":true},{"content":"Creates a new instance of the `DBDataPermission` class.","nodes":[{"pos":[0,55],"content":"Creates a new instance of the <ph id=\"ph1\">`DBDataPermission`</ph> class.","source":"Creates a new instance of the `DBDataPermission` class."}],"pos":[21542,21598],"yaml":true},{"content":"A new `DBDataPermission` object.","nodes":[{"pos":[0,32],"content":"A new <ph id=\"ph1\">`DBDataPermission`</ph> object.","source":"A new `DBDataPermission` object."}],"pos":[21792,21825],"yaml":true},{"content":"Reconstructs a security object with a specified state from an XML encoding.","nodes":[{"pos":[0,75],"content":"Reconstructs a security object with a specified state from an XML encoding.","nodes":[{"content":"Reconstructs a security object with a specified state from an XML encoding.","pos":[0,75]}]}],"pos":[23153,23229],"yaml":true},{"content":"Custom code that extends security objects needs to implement the `ToXml` and `FromXml` methods to make the objects security encodable.","nodes":[{"pos":[0,134],"content":"Custom code that extends security objects needs to implement the <ph id=\"ph1\">`ToXml`</ph> and <ph id=\"ph2\">`FromXml`</ph> methods to make the objects security encodable.","source":"Custom code that extends security objects needs to implement the `ToXml` and `FromXml` methods to make the objects security encodable."}],"pos":[23240,23375],"yaml":true,"extradata":"MT"},{"content":"The XML encoding to use to reconstruct the security object.","nodes":[{"pos":[0,59],"content":"The XML encoding to use to reconstruct the security object.","nodes":[{"content":"The XML encoding to use to reconstruct the security object.","pos":[0,59]}]}],"pos":[23583,23643],"yaml":true},{"content":"Returns a new permission object representing the intersection of the current permission object and the specified permission object.","nodes":[{"pos":[0,131],"content":"Returns a new permission object representing the intersection of the current permission object and the specified permission object.","nodes":[{"content":"Returns a new permission object representing the intersection of the current permission object and the specified permission object.","pos":[0,131]}]}],"pos":[24952,25084],"yaml":true},{"content":"The intersection of two permissions is a permission that describes the set of operations they both describe. Only a demand that passes both original permissions will pass the intersection.","nodes":[{"pos":[0,188],"content":"The intersection of two permissions is a permission that describes the set of operations they both describe. Only a demand that passes both original permissions will pass the intersection.","nodes":[{"content":"The intersection of two permissions is a permission that describes the set of operations they both describe. Only a demand that passes both original permissions will pass the intersection.","pos":[0,188],"nodes":[{"content":"The intersection of two permissions is a permission that describes the set of operations they both describe.","pos":[0,108]},{"content":"Only a demand that passes both original permissions will pass the intersection.","pos":[109,188]}]}]}],"pos":[25095,25284],"yaml":true,"extradata":"MT"},{"content":"A permission object to intersect with the current permission object. It must be of the same type as the current permission object.","nodes":[{"pos":[0,130],"content":"A permission object to intersect with the current permission object. It must be of the same type as the current permission object.","nodes":[{"content":"A permission object to intersect with the current permission object. It must be of the same type as the current permission object.","pos":[0,130],"nodes":[{"content":"A permission object to intersect with the current permission object.","pos":[0,68]},{"content":"It must be of the same type as the current permission object.","pos":[69,130]}]}]}],"pos":[25491,25622],"yaml":true},{"content":"A new permission object that represents the intersection of the current permission object and the specified permission object. This new permission object is a null reference (`Nothing` in Visual Basic) if the intersection is empty.","nodes":[{"pos":[0,231],"content":"A new permission object that represents the intersection of the current permission object and the specified permission object. This new permission object is a null reference (`Nothing` in Visual Basic) if the intersection is empty.","nodes":[{"content":"A new permission object that represents the intersection of the current permission object and the specified permission object.","pos":[0,126]},{"content":"This new permission object is a null reference (<ph id=\"ph1\">`Nothing`</ph> in Visual Basic) if the intersection is empty.","pos":[127,231],"source":" This new permission object is a null reference (`Nothing` in Visual Basic) if the intersection is empty."}]}],"pos":[25693,25925],"yaml":true},{"content":"The <code>target</code> parameter is not a null reference (`Nothing` in Visual Basic) and is not an instance of the same class as the current permission object.","nodes":[{"pos":[0,160],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">target</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not a null reference (<ph id=\"ph2\">`Nothing`</ph> in Visual Basic) and is not an instance of the same class as the current permission object.","source":"The <code>target</code> parameter is not a null reference (`Nothing` in Visual Basic) and is not an instance of the same class as the current permission object."}],"pos":[26092,26253],"yaml":true},{"content":"Returns a value indicating whether the current permission object is a subset of the specified permission object.","nodes":[{"pos":[0,112],"content":"Returns a value indicating whether the current permission object is a subset of the specified permission object.","nodes":[{"content":"Returns a value indicating whether the current permission object is a subset of the specified permission object.","pos":[0,112]}]}],"pos":[27494,27607],"yaml":true},{"content":"The current permission object is a subset of the specified permission object if the current permission object specifies a set of operations that is wholly contained by the specified permission object. For example, a permission that represents access to C:\\example.txt is a subset of a permission that represents access to C:\\\\. If this method returns `true`, the current permission object represents no more access to the protected resource than does the specified permission object.","nodes":[{"pos":[0,483],"content":"The current permission object is a subset of the specified permission object if the current permission object specifies a set of operations that is wholly contained by the specified permission object. For example, a permission that represents access to C:\\example.txt is a subset of a permission that represents access to C:\\\\. If this method returns `true`, the current permission object represents no more access to the protected resource than does the specified permission object.","nodes":[{"content":"The current permission object is a subset of the specified permission object if the current permission object specifies a set of operations that is wholly contained by the specified permission object.","pos":[0,200]},{"content":"For example, a permission that represents access to C:\\example.txt is a subset of a permission that represents access to C:<ph id=\"ph1\">\\\\</ph>.","pos":[201,327],"source":" For example, a permission that represents access to C:\\example.txt is a subset of a permission that represents access to C:\\\\."},{"content":"If this method returns <ph id=\"ph1\">`true`</ph>, the current permission object represents no more access to the protected resource than does the specified permission object.","pos":[328,483],"source":" If this method returns `true`, the current permission object represents no more access to the protected resource than does the specified permission object."}]}],"pos":[27618,28102],"yaml":true,"extradata":"MT"},{"content":"A permission object that is to be tested for the subset relationship. This object must be of the same type as the current permission object.","nodes":[{"pos":[0,140],"content":"A permission object that is to be tested for the subset relationship. This object must be of the same type as the current permission object.","nodes":[{"content":"A permission object that is to be tested for the subset relationship. This object must be of the same type as the current permission object.","pos":[0,140],"nodes":[{"content":"A permission object that is to be tested for the subset relationship.","pos":[0,69]},{"content":"This object must be of the same type as the current permission object.","pos":[70,140]}]}]}],"pos":[28287,28428],"yaml":true},{"content":"`true` if the current permission object is a subset of the specified permission object, otherwise `false`.","nodes":[{"pos":[0,106],"content":"<ph id=\"ph1\">`true`</ph> if the current permission object is a subset of the specified permission object, otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if the current permission object is a subset of the specified permission object, otherwise `false`."}],"pos":[28486,28595],"yaml":true},{"content":"The <code>target</code> parameter is an object that is not of the same type as the current permission object.","nodes":[{"pos":[0,109],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">target</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is an object that is not of the same type as the current permission object.","source":"The <code>target</code> parameter is an object that is not of the same type as the current permission object."}],"pos":[28763,28873],"yaml":true},{"content":"Returns a value indicating whether the permission can be represented as unrestricted without any knowledge of the permission semantics.","nodes":[{"pos":[0,135],"content":"Returns a value indicating whether the permission can be represented as unrestricted without any knowledge of the permission semantics.","nodes":[{"content":"Returns a value indicating whether the permission can be represented as unrestricted without any knowledge of the permission semantics.","pos":[0,135]}]}],"pos":[30018,30154],"yaml":true},{"content":"`true` if the permission can be represented as unrestricted.","nodes":[{"pos":[0,60],"content":"<ph id=\"ph1\">`true`</ph> if the permission can be represented as unrestricted.","source":"`true` if the permission can be represented as unrestricted."}],"pos":[30285,30348],"yaml":true},{"content":"Creates an XML encoding of the security object and its current state.","nodes":[{"pos":[0,69],"content":"Creates an XML encoding of the security object and its current state.","nodes":[{"content":"Creates an XML encoding of the security object and its current state.","pos":[0,69]}]}],"pos":[31520,31590],"yaml":true},{"content":"Custom code that extends security objects must implement the <xref:System.Data.Common.DBDataPermission.ToXml%2A> and <xref:System.Data.Common.DBDataPermission.FromXml%2A> methods to make the objects security encodable.","nodes":[{"pos":[0,218],"content":"Custom code that extends security objects must implement the <xref:System.Data.Common.DBDataPermission.ToXml%2A> and <xref:System.Data.Common.DBDataPermission.FromXml%2A> methods to make the objects security encodable.","nodes":[{"content":"Custom code that extends security objects must implement the <ph id=\"ph1\">&lt;xref:System.Data.Common.DBDataPermission.ToXml%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Data.Common.DBDataPermission.FromXml%2A&gt;</ph> methods to make the objects security encodable.","pos":[0,218],"source":"Custom code that extends security objects must implement the <xref:System.Data.Common.DBDataPermission.ToXml%2A> and <xref:System.Data.Common.DBDataPermission.FromXml%2A> methods to make the objects security encodable."}]}],"pos":[31601,31820],"yaml":true,"extradata":"MT"},{"content":"An XML encoding of the security object, including any state information.","nodes":[{"pos":[0,72],"content":"An XML encoding of the security object, including any state information.","nodes":[{"content":"An XML encoding of the security object, including any state information.","pos":[0,72]}]}],"pos":[31995,32068],"yaml":true},{"content":"Returns a new permission object that is the union of the current and specified permission objects.","nodes":[{"pos":[0,98],"content":"Returns a new permission object that is the union of the current and specified permission objects.","nodes":[{"content":"Returns a new permission object that is the union of the current and specified permission objects.","pos":[0,98]}]}],"pos":[33351,33450],"yaml":true},{"content":"The result of a call to <xref:System.Data.Common.DBDataPermission.Union%2A> is a permission that represents all the operations permitted by both the current permission object and the specified permission object. Any demand that passes either permission passes their union.","nodes":[{"pos":[0,272],"content":"The result of a call to <xref:System.Data.Common.DBDataPermission.Union%2A> is a permission that represents all the operations permitted by both the current permission object and the specified permission object. Any demand that passes either permission passes their union.","nodes":[{"content":"The result of a call to <xref:System.Data.Common.DBDataPermission.Union%2A> is a permission that represents all the operations permitted by both the current permission object and the specified permission object. Any demand that passes either permission passes their union.","pos":[0,272],"nodes":[{"content":"The result of a call to <ph id=\"ph1\">&lt;xref:System.Data.Common.DBDataPermission.Union%2A&gt;</ph> is a permission that represents all the operations permitted by both the current permission object and the specified permission object.","pos":[0,211],"source":"The result of a call to <xref:System.Data.Common.DBDataPermission.Union%2A> is a permission that represents all the operations permitted by both the current permission object and the specified permission object."},{"content":"Any demand that passes either permission passes their union.","pos":[212,272]}]}]}],"pos":[33461,33734],"yaml":true,"extradata":"MT"},{"content":"A permission object to combine with the current permission object. It must be of the same type as the current permission object.","nodes":[{"pos":[0,128],"content":"A permission object to combine with the current permission object. It must be of the same type as the current permission object.","nodes":[{"content":"A permission object to combine with the current permission object. It must be of the same type as the current permission object.","pos":[0,128],"nodes":[{"content":"A permission object to combine with the current permission object.","pos":[0,66]},{"content":"It must be of the same type as the current permission object.","pos":[67,128]}]}]}],"pos":[33937,34066],"yaml":true},{"content":"A new permission object that represents the union of the current permission object and the specified permission object.","nodes":[{"pos":[0,119],"content":"A new permission object that represents the union of the current permission object and the specified permission object.","nodes":[{"content":"A new permission object that represents the union of the current permission object and the specified permission object.","pos":[0,119]}]}],"pos":[34137,34257],"yaml":true},{"content":"The <code>target</code> object is not the same type as the current permission object.","nodes":[{"pos":[0,85],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">target</ph><ept id=\"p1\">&lt;/code&gt;</ept> object is not the same type as the current permission object.","source":"The <code>target</code> object is not the same type as the current permission object."}],"pos":[34420,34506],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Common.DBDataPermission\n  commentId: T:System.Data.Common.DBDataPermission\n  id: DBDataPermission\n  children:\n  - System.Data.Common.DBDataPermission.#ctor\n  - System.Data.Common.DBDataPermission.#ctor(System.Data.Common.DBDataPermission)\n  - System.Data.Common.DBDataPermission.#ctor(System.Data.Common.DBDataPermissionAttribute)\n  - System.Data.Common.DBDataPermission.#ctor(System.Security.Permissions.PermissionState)\n  - System.Data.Common.DBDataPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)\n  - System.Data.Common.DBDataPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)\n  - System.Data.Common.DBDataPermission.AllowBlankPassword\n  - System.Data.Common.DBDataPermission.Clear\n  - System.Data.Common.DBDataPermission.Copy\n  - System.Data.Common.DBDataPermission.CreateInstance\n  - System.Data.Common.DBDataPermission.FromXml(System.Security.SecurityElement)\n  - System.Data.Common.DBDataPermission.Intersect(System.Security.IPermission)\n  - System.Data.Common.DBDataPermission.IsSubsetOf(System.Security.IPermission)\n  - System.Data.Common.DBDataPermission.IsUnrestricted\n  - System.Data.Common.DBDataPermission.ToXml\n  - System.Data.Common.DBDataPermission.Union(System.Security.IPermission)\n  langs:\n  - csharp\n  name: DBDataPermission\n  nameWithType: DBDataPermission\n  fullName: System.Data.Common.DBDataPermission\n  type: Class\n  assemblies:\n  - System.Data\n  - System.Security.Permissions\n  namespace: System.Data.Common\n  summary: Enables a .NET Framework data provider to help ensure that a user has a security level adequate for accessing data.\n  syntax:\n    content: 'public abstract class DBDataPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission'\n  inheritance:\n  - System.Object\n  - System.Security.CodeAccessPermission\n  derivedClasses:\n  - System.Data.Odbc.OdbcPermission\n  - System.Data.OleDb.OleDbPermission\n  - System.Data.SqlClient.SqlClientPermission\n  implements:\n  - System.Security.Permissions.IUnrestrictedPermission\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Security.CodeAccessPermission.Assert\n  - System.Security.CodeAccessPermission.Demand\n  - System.Security.CodeAccessPermission.Deny\n  - System.Security.CodeAccessPermission.Equals(System.Object)\n  - System.Security.CodeAccessPermission.GetHashCode\n  - System.Security.CodeAccessPermission.PermitOnly\n  - System.Security.CodeAccessPermission.RevertAll\n  - System.Security.CodeAccessPermission.RevertAssert\n  - System.Security.CodeAccessPermission.RevertDeny\n  - System.Security.CodeAccessPermission.RevertPermitOnly\n  - System.Security.CodeAccessPermission.System#Security#IPermission#Demand\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#Assert\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#Demand\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#Deny\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#PermitOnly\n  - System.Security.CodeAccessPermission.ToString\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DBDataPermission.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DBDataPermission.#ctor\n  commentId: M:System.Data.Common.DBDataPermission.#ctor\n  id: '#ctor'\n  parent: System.Data.Common.DBDataPermission\n  langs:\n  - csharp\n  name: DBDataPermission()\n  nameWithType: DBDataPermission.DBDataPermission()\n  fullName: DBDataPermission.DBDataPermission()\n  type: Constructor\n  assemblies:\n  - System.Data\n  - System.Security.Permissions\n  namespace: System.Data.Common\n  summary: Initializes a new instance of a `DBDataPermission` class.\n  syntax:\n    content: >-\n      [System.Obsolete(\"DBDataPermission() has been deprecated.  Use the DBDataPermission(PermissionState.None) constructor.  http://go.microsoft.com/fwlink/?linkid=14202\", true)]\n\n      protected DBDataPermission ();\n    parameters: []\n  overload: System.Data.Common.DBDataPermission.#ctor*\n  exceptions: []\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DBDataPermission.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DBDataPermission.#ctor(System.Data.Common.DBDataPermission)\n  commentId: M:System.Data.Common.DBDataPermission.#ctor(System.Data.Common.DBDataPermission)\n  id: '#ctor(System.Data.Common.DBDataPermission)'\n  parent: System.Data.Common.DBDataPermission\n  langs:\n  - csharp\n  name: DBDataPermission(DBDataPermission)\n  nameWithType: DBDataPermission.DBDataPermission(DBDataPermission)\n  fullName: DBDataPermission.DBDataPermission(DBDataPermission)\n  type: Constructor\n  assemblies:\n  - System.Data\n  - System.Security.Permissions\n  namespace: System.Data.Common\n  summary: Initializes a new instance of a `DBDataPermission` class using an existing `DBDataPermission`.\n  syntax:\n    content: protected DBDataPermission (System.Data.Common.DBDataPermission permission);\n    parameters:\n    - id: permission\n      type: System.Data.Common.DBDataPermission\n      description: An existing `DBDataPermission` used to create a new `DBDataPermission`.\n  overload: System.Data.Common.DBDataPermission.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DBDataPermission.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DBDataPermission.#ctor(System.Data.Common.DBDataPermissionAttribute)\n  commentId: M:System.Data.Common.DBDataPermission.#ctor(System.Data.Common.DBDataPermissionAttribute)\n  id: '#ctor(System.Data.Common.DBDataPermissionAttribute)'\n  parent: System.Data.Common.DBDataPermission\n  langs:\n  - csharp\n  name: DBDataPermission(DBDataPermissionAttribute)\n  nameWithType: DBDataPermission.DBDataPermission(DBDataPermissionAttribute)\n  fullName: DBDataPermission.DBDataPermission(DBDataPermissionAttribute)\n  type: Constructor\n  assemblies:\n  - System.Data\n  - System.Security.Permissions\n  namespace: System.Data.Common\n  summary: Initializes a new instance of a `DBDataPermission` class with the specified `DBDataPermissionAttribute`.\n  syntax:\n    content: protected DBDataPermission (System.Data.Common.DBDataPermissionAttribute permissionAttribute);\n    parameters:\n    - id: permissionAttribute\n      type: System.Data.Common.DBDataPermissionAttribute\n      description: A security action associated with a custom security attribute.\n  overload: System.Data.Common.DBDataPermission.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DBDataPermission.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DBDataPermission.#ctor(System.Security.Permissions.PermissionState)\n  commentId: M:System.Data.Common.DBDataPermission.#ctor(System.Security.Permissions.PermissionState)\n  id: '#ctor(System.Security.Permissions.PermissionState)'\n  parent: System.Data.Common.DBDataPermission\n  langs:\n  - csharp\n  name: DBDataPermission(PermissionState)\n  nameWithType: DBDataPermission.DBDataPermission(PermissionState)\n  fullName: DBDataPermission.DBDataPermission(PermissionState)\n  type: Constructor\n  assemblies:\n  - System.Data\n  - System.Security.Permissions\n  namespace: System.Data.Common\n  summary: Initializes a new instance of a `DBDataPermission` class with the specified <xref href=\"System.Security.Permissions.PermissionState\"></xref> value.\n  syntax:\n    content: protected DBDataPermission (System.Security.Permissions.PermissionState state);\n    parameters:\n    - id: state\n      type: System.Security.Permissions.PermissionState\n      description: One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values.\n  overload: System.Data.Common.DBDataPermission.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DBDataPermission.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DBDataPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)\n  commentId: M:System.Data.Common.DBDataPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)\n  id: '#ctor(System.Security.Permissions.PermissionState,System.Boolean)'\n  parent: System.Data.Common.DBDataPermission\n  langs:\n  - csharp\n  name: DBDataPermission(PermissionState, Boolean)\n  nameWithType: DBDataPermission.DBDataPermission(PermissionState, Boolean)\n  fullName: DBDataPermission.DBDataPermission(PermissionState, Boolean)\n  type: Constructor\n  assemblies:\n  - System.Data\n  - System.Security.Permissions\n  namespace: System.Data.Common\n  summary: Initializes a new instance of a `DBDataPermission` class with the specified <xref href=\"System.Security.Permissions.PermissionState\"></xref> value, and a value indicating whether a blank password is allowed.\n  remarks: The <xref:System.Security.Permissions.PermissionState> enumeration takes precedence over the <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> property. Therefore, if you set <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> to `false`, you must also set <xref:System.Security.Permissions.PermissionState> to `None` to prevent a user from making a connection using a blank password.\n  syntax:\n    content: >-\n      [System.Obsolete(\"DBDataPermission(PermissionState state,Boolean allowBlankPassword) has been deprecated.  Use the DBDataPermission(PermissionState.None) constructor.  http://go.microsoft.com/fwlink/?linkid=14202\", true)]\n\n      protected DBDataPermission (System.Security.Permissions.PermissionState state, bool allowBlankPassword);\n    parameters:\n    - id: state\n      type: System.Security.Permissions.PermissionState\n      description: One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values.\n    - id: allowBlankPassword\n      type: System.Boolean\n      description: Indicates whether a blank password is allowed.\n  overload: System.Data.Common.DBDataPermission.#ctor*\n  exceptions: []\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DBDataPermission.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DBDataPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)\n  commentId: M:System.Data.Common.DBDataPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)\n  id: Add(System.String,System.String,System.Data.KeyRestrictionBehavior)\n  parent: System.Data.Common.DBDataPermission\n  langs:\n  - csharp\n  name: Add(String, String, KeyRestrictionBehavior)\n  nameWithType: DBDataPermission.Add(String, String, KeyRestrictionBehavior)\n  fullName: DBDataPermission.Add(String, String, KeyRestrictionBehavior)\n  type: Method\n  assemblies:\n  - System.Data\n  - System.Security.Permissions\n  namespace: System.Data.Common\n  summary: Adds access for the specified connection string to the existing state of the `DBDataPermission`.\n  remarks: \"This method can be useful when implementing:  \\n  \\n-   A .NET framework data provider.  \\n  \\n-   An API that must assert for data access permission.  \\n  \\n-   An administrative tool or installation program that must modify security policy.  \\n  \\n-   When more than one rule is specified, the more restrictive rule is selected.\"\n  syntax:\n    content: public virtual void Add (string connectionString, string restrictions, System.Data.KeyRestrictionBehavior behavior);\n    parameters:\n    - id: connectionString\n      type: System.String\n      description: A permitted connection string.\n    - id: restrictions\n      type: System.String\n      description: String that identifies connection string parameters that are allowed or disallowed.\n    - id: behavior\n      type: System.Data.KeyRestrictionBehavior\n      description: One of the <xref href=\"System.Data.KeyRestrictionBehavior\"></xref> properties.\n  overload: System.Data.Common.DBDataPermission.Add*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DBDataPermission.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DBDataPermission.AllowBlankPassword\n  commentId: P:System.Data.Common.DBDataPermission.AllowBlankPassword\n  id: AllowBlankPassword\n  parent: System.Data.Common.DBDataPermission\n  langs:\n  - csharp\n  name: AllowBlankPassword\n  nameWithType: DBDataPermission.AllowBlankPassword\n  fullName: DBDataPermission.AllowBlankPassword\n  type: Property\n  assemblies:\n  - System.Data\n  - System.Security.Permissions\n  namespace: System.Data.Common\n  summary: Gets a value indicating whether a blank password is allowed.\n  remarks: The <xref:System.Security.Permissions.PermissionState> enumeration takes precedence over the <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> property. Therefore, if you set <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> to `false`, you must also set <xref:System.Security.Permissions.PermissionState> to `None` to prevent a user from making a connection using a blank password.\n  syntax:\n    content: public bool AllowBlankPassword { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if a blank password is allowed, otherwise, `false`.'\n  overload: System.Data.Common.DBDataPermission.AllowBlankPassword*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DBDataPermission.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DBDataPermission.Clear\n  commentId: M:System.Data.Common.DBDataPermission.Clear\n  id: Clear\n  parent: System.Data.Common.DBDataPermission\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: DBDataPermission.Clear()\n  fullName: DBDataPermission.Clear()\n  type: Method\n  assemblies:\n  - System.Data\n  - System.Security.Permissions\n  namespace: System.Data.Common\n  summary: Removes all permissions that were previous added using the <xref href=\"System.Data.Common.DBDataPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)\"></xref> method.\n  syntax:\n    content: protected void Clear ();\n    parameters: []\n  overload: System.Data.Common.DBDataPermission.Clear*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DBDataPermission.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DBDataPermission.Copy\n  commentId: M:System.Data.Common.DBDataPermission.Copy\n  id: Copy\n  parent: System.Data.Common.DBDataPermission\n  langs:\n  - csharp\n  name: Copy()\n  nameWithType: DBDataPermission.Copy()\n  fullName: DBDataPermission.Copy()\n  type: Method\n  assemblies:\n  - System.Data\n  - System.Security.Permissions\n  namespace: System.Data.Common\n  summary: Creates and returns an identical copy of the current permission object.\n  remarks: A copy of a permission object represents the same access to resources as the original permission object.\n  syntax:\n    content: public override System.Security.IPermission Copy ();\n    parameters: []\n    return:\n      type: System.Security.IPermission\n      description: A copy of the current permission object.\n  overload: System.Data.Common.DBDataPermission.Copy*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DBDataPermission.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DBDataPermission.CreateInstance\n  commentId: M:System.Data.Common.DBDataPermission.CreateInstance\n  id: CreateInstance\n  parent: System.Data.Common.DBDataPermission\n  langs:\n  - csharp\n  name: CreateInstance()\n  nameWithType: DBDataPermission.CreateInstance()\n  fullName: DBDataPermission.CreateInstance()\n  type: Method\n  assemblies:\n  - System.Data\n  - System.Security.Permissions\n  namespace: System.Data.Common\n  summary: Creates a new instance of the `DBDataPermission` class.\n  syntax:\n    content: protected virtual System.Data.Common.DBDataPermission CreateInstance ();\n    parameters: []\n    return:\n      type: System.Data.Common.DBDataPermission\n      description: A new `DBDataPermission` object.\n  overload: System.Data.Common.DBDataPermission.CreateInstance*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DBDataPermission.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DBDataPermission.FromXml(System.Security.SecurityElement)\n  commentId: M:System.Data.Common.DBDataPermission.FromXml(System.Security.SecurityElement)\n  id: FromXml(System.Security.SecurityElement)\n  parent: System.Data.Common.DBDataPermission\n  langs:\n  - csharp\n  name: FromXml(SecurityElement)\n  nameWithType: DBDataPermission.FromXml(SecurityElement)\n  fullName: DBDataPermission.FromXml(SecurityElement)\n  type: Method\n  assemblies:\n  - System.Data\n  - System.Security.Permissions\n  namespace: System.Data.Common\n  summary: Reconstructs a security object with a specified state from an XML encoding.\n  remarks: Custom code that extends security objects needs to implement the `ToXml` and `FromXml` methods to make the objects security encodable.\n  syntax:\n    content: public override void FromXml (System.Security.SecurityElement securityElement);\n    parameters:\n    - id: securityElement\n      type: System.Security.SecurityElement\n      description: The XML encoding to use to reconstruct the security object.\n  overload: System.Data.Common.DBDataPermission.FromXml*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DBDataPermission.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DBDataPermission.Intersect(System.Security.IPermission)\n  commentId: M:System.Data.Common.DBDataPermission.Intersect(System.Security.IPermission)\n  id: Intersect(System.Security.IPermission)\n  parent: System.Data.Common.DBDataPermission\n  langs:\n  - csharp\n  name: Intersect(IPermission)\n  nameWithType: DBDataPermission.Intersect(IPermission)\n  fullName: DBDataPermission.Intersect(IPermission)\n  type: Method\n  assemblies:\n  - System.Data\n  - System.Security.Permissions\n  namespace: System.Data.Common\n  summary: Returns a new permission object representing the intersection of the current permission object and the specified permission object.\n  remarks: The intersection of two permissions is a permission that describes the set of operations they both describe. Only a demand that passes both original permissions will pass the intersection.\n  syntax:\n    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission object to intersect with the current permission object. It must be of the same type as the current permission object.\n    return:\n      type: System.Security.IPermission\n      description: A new permission object that represents the intersection of the current permission object and the specified permission object. This new permission object is a null reference (`Nothing` in Visual Basic) if the intersection is empty.\n  overload: System.Data.Common.DBDataPermission.Intersect*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>target</code> parameter is not a null reference (`Nothing` in Visual Basic) and is not an instance of the same class as the current permission object.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DBDataPermission.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DBDataPermission.IsSubsetOf(System.Security.IPermission)\n  commentId: M:System.Data.Common.DBDataPermission.IsSubsetOf(System.Security.IPermission)\n  id: IsSubsetOf(System.Security.IPermission)\n  parent: System.Data.Common.DBDataPermission\n  langs:\n  - csharp\n  name: IsSubsetOf(IPermission)\n  nameWithType: DBDataPermission.IsSubsetOf(IPermission)\n  fullName: DBDataPermission.IsSubsetOf(IPermission)\n  type: Method\n  assemblies:\n  - System.Data\n  - System.Security.Permissions\n  namespace: System.Data.Common\n  summary: Returns a value indicating whether the current permission object is a subset of the specified permission object.\n  remarks: The current permission object is a subset of the specified permission object if the current permission object specifies a set of operations that is wholly contained by the specified permission object. For example, a permission that represents access to C:\\example.txt is a subset of a permission that represents access to C:\\\\. If this method returns `true`, the current permission object represents no more access to the protected resource than does the specified permission object.\n  syntax:\n    content: public override bool IsSubsetOf (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission object that is to be tested for the subset relationship. This object must be of the same type as the current permission object.\n    return:\n      type: System.Boolean\n      description: '`true` if the current permission object is a subset of the specified permission object, otherwise `false`.'\n  overload: System.Data.Common.DBDataPermission.IsSubsetOf*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>target</code> parameter is an object that is not of the same type as the current permission object.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DBDataPermission.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DBDataPermission.IsUnrestricted\n  commentId: M:System.Data.Common.DBDataPermission.IsUnrestricted\n  id: IsUnrestricted\n  parent: System.Data.Common.DBDataPermission\n  langs:\n  - csharp\n  name: IsUnrestricted()\n  nameWithType: DBDataPermission.IsUnrestricted()\n  fullName: DBDataPermission.IsUnrestricted()\n  type: Method\n  assemblies:\n  - System.Data\n  - System.Security.Permissions\n  namespace: System.Data.Common\n  summary: Returns a value indicating whether the permission can be represented as unrestricted without any knowledge of the permission semantics.\n  syntax:\n    content: public bool IsUnrestricted ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the permission can be represented as unrestricted.'\n  overload: System.Data.Common.DBDataPermission.IsUnrestricted*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DBDataPermission.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DBDataPermission.ToXml\n  commentId: M:System.Data.Common.DBDataPermission.ToXml\n  id: ToXml\n  parent: System.Data.Common.DBDataPermission\n  langs:\n  - csharp\n  name: ToXml()\n  nameWithType: DBDataPermission.ToXml()\n  fullName: DBDataPermission.ToXml()\n  type: Method\n  assemblies:\n  - System.Data\n  - System.Security.Permissions\n  namespace: System.Data.Common\n  summary: Creates an XML encoding of the security object and its current state.\n  remarks: Custom code that extends security objects must implement the <xref:System.Data.Common.DBDataPermission.ToXml%2A> and <xref:System.Data.Common.DBDataPermission.FromXml%2A> methods to make the objects security encodable.\n  syntax:\n    content: public override System.Security.SecurityElement ToXml ();\n    parameters: []\n    return:\n      type: System.Security.SecurityElement\n      description: An XML encoding of the security object, including any state information.\n  overload: System.Data.Common.DBDataPermission.ToXml*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DBDataPermission.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DBDataPermission.Union(System.Security.IPermission)\n  commentId: M:System.Data.Common.DBDataPermission.Union(System.Security.IPermission)\n  id: Union(System.Security.IPermission)\n  parent: System.Data.Common.DBDataPermission\n  langs:\n  - csharp\n  name: Union(IPermission)\n  nameWithType: DBDataPermission.Union(IPermission)\n  fullName: DBDataPermission.Union(IPermission)\n  type: Method\n  assemblies:\n  - System.Data\n  - System.Security.Permissions\n  namespace: System.Data.Common\n  summary: Returns a new permission object that is the union of the current and specified permission objects.\n  remarks: The result of a call to <xref:System.Data.Common.DBDataPermission.Union%2A> is a permission that represents all the operations permitted by both the current permission object and the specified permission object. Any demand that passes either permission passes their union.\n  syntax:\n    content: public override System.Security.IPermission Union (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission object to combine with the current permission object. It must be of the same type as the current permission object.\n    return:\n      type: System.Security.IPermission\n      description: A new permission object that represents the union of the current permission object and the specified permission object.\n  overload: System.Data.Common.DBDataPermission.Union*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>target</code> object is not the same type as the current permission object.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DBDataPermission.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\nreferences:\n- uid: System.Security.CodeAccessPermission\n  parent: System.Security\n  isExternal: false\n  name: CodeAccessPermission\n  nameWithType: CodeAccessPermission\n  fullName: System.Security.CodeAccessPermission\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.Data.Common.DBDataPermission.#ctor\n  parent: System.Data.Common.DBDataPermission\n  isExternal: false\n  name: DBDataPermission()\n  nameWithType: DBDataPermission.DBDataPermission()\n  fullName: DBDataPermission.DBDataPermission()\n- uid: System.Data.Common.DBDataPermission.#ctor(System.Data.Common.DBDataPermission)\n  parent: System.Data.Common.DBDataPermission\n  isExternal: false\n  name: DBDataPermission(DBDataPermission)\n  nameWithType: DBDataPermission.DBDataPermission(DBDataPermission)\n  fullName: DBDataPermission.DBDataPermission(DBDataPermission)\n- uid: System.Data.Common.DBDataPermission\n  parent: System.Data.Common\n  isExternal: false\n  name: DBDataPermission\n  nameWithType: DBDataPermission\n  fullName: System.Data.Common.DBDataPermission\n- uid: System.Data.Common.DBDataPermission.#ctor(System.Data.Common.DBDataPermissionAttribute)\n  parent: System.Data.Common.DBDataPermission\n  isExternal: false\n  name: DBDataPermission(DBDataPermissionAttribute)\n  nameWithType: DBDataPermission.DBDataPermission(DBDataPermissionAttribute)\n  fullName: DBDataPermission.DBDataPermission(DBDataPermissionAttribute)\n- uid: System.Data.Common.DBDataPermissionAttribute\n  parent: System.Data.Common\n  isExternal: false\n  name: DBDataPermissionAttribute\n  nameWithType: DBDataPermissionAttribute\n  fullName: System.Data.Common.DBDataPermissionAttribute\n- uid: System.Data.Common.DBDataPermission.#ctor(System.Security.Permissions.PermissionState)\n  parent: System.Data.Common.DBDataPermission\n  isExternal: false\n  name: DBDataPermission(PermissionState)\n  nameWithType: DBDataPermission.DBDataPermission(PermissionState)\n  fullName: DBDataPermission.DBDataPermission(PermissionState)\n- uid: System.Security.Permissions.PermissionState\n  parent: System.Security.Permissions\n  isExternal: false\n  name: PermissionState\n  nameWithType: PermissionState\n  fullName: System.Security.Permissions.PermissionState\n- uid: System.Data.Common.DBDataPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)\n  parent: System.Data.Common.DBDataPermission\n  isExternal: false\n  name: DBDataPermission(PermissionState, Boolean)\n  nameWithType: DBDataPermission.DBDataPermission(PermissionState, Boolean)\n  fullName: DBDataPermission.DBDataPermission(PermissionState, Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.Common.DBDataPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)\n  parent: System.Data.Common.DBDataPermission\n  isExternal: false\n  name: Add(String, String, KeyRestrictionBehavior)\n  nameWithType: DBDataPermission.Add(String, String, KeyRestrictionBehavior)\n  fullName: DBDataPermission.Add(String, String, KeyRestrictionBehavior)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.KeyRestrictionBehavior\n  parent: System.Data\n  isExternal: false\n  name: KeyRestrictionBehavior\n  nameWithType: KeyRestrictionBehavior\n  fullName: System.Data.KeyRestrictionBehavior\n- uid: System.Data.Common.DBDataPermission.AllowBlankPassword\n  parent: System.Data.Common.DBDataPermission\n  isExternal: false\n  name: AllowBlankPassword\n  nameWithType: DBDataPermission.AllowBlankPassword\n  fullName: DBDataPermission.AllowBlankPassword\n- uid: System.Data.Common.DBDataPermission.Clear\n  parent: System.Data.Common.DBDataPermission\n  isExternal: false\n  name: Clear()\n  nameWithType: DBDataPermission.Clear()\n  fullName: DBDataPermission.Clear()\n- uid: System.Data.Common.DBDataPermission.Copy\n  parent: System.Data.Common.DBDataPermission\n  isExternal: false\n  name: Copy()\n  nameWithType: DBDataPermission.Copy()\n  fullName: DBDataPermission.Copy()\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Data.Common.DBDataPermission.CreateInstance\n  parent: System.Data.Common.DBDataPermission\n  isExternal: false\n  name: CreateInstance()\n  nameWithType: DBDataPermission.CreateInstance()\n  fullName: DBDataPermission.CreateInstance()\n- uid: System.Data.Common.DBDataPermission.FromXml(System.Security.SecurityElement)\n  parent: System.Data.Common.DBDataPermission\n  isExternal: false\n  name: FromXml(SecurityElement)\n  nameWithType: DBDataPermission.FromXml(SecurityElement)\n  fullName: DBDataPermission.FromXml(SecurityElement)\n- uid: System.Security.SecurityElement\n  parent: System.Security\n  isExternal: false\n  name: SecurityElement\n  nameWithType: SecurityElement\n  fullName: System.Security.SecurityElement\n- uid: System.Data.Common.DBDataPermission.Intersect(System.Security.IPermission)\n  parent: System.Data.Common.DBDataPermission\n  isExternal: false\n  name: Intersect(IPermission)\n  nameWithType: DBDataPermission.Intersect(IPermission)\n  fullName: DBDataPermission.Intersect(IPermission)\n- uid: System.Data.Common.DBDataPermission.IsSubsetOf(System.Security.IPermission)\n  parent: System.Data.Common.DBDataPermission\n  isExternal: false\n  name: IsSubsetOf(IPermission)\n  nameWithType: DBDataPermission.IsSubsetOf(IPermission)\n  fullName: DBDataPermission.IsSubsetOf(IPermission)\n- uid: System.Data.Common.DBDataPermission.IsUnrestricted\n  parent: System.Data.Common.DBDataPermission\n  isExternal: false\n  name: IsUnrestricted()\n  nameWithType: DBDataPermission.IsUnrestricted()\n  fullName: DBDataPermission.IsUnrestricted()\n- uid: System.Data.Common.DBDataPermission.ToXml\n  parent: System.Data.Common.DBDataPermission\n  isExternal: false\n  name: ToXml()\n  nameWithType: DBDataPermission.ToXml()\n  fullName: DBDataPermission.ToXml()\n- uid: System.Data.Common.DBDataPermission.Union(System.Security.IPermission)\n  parent: System.Data.Common.DBDataPermission\n  isExternal: false\n  name: Union(IPermission)\n  nameWithType: DBDataPermission.Union(IPermission)\n  fullName: DBDataPermission.Union(IPermission)\n- uid: System.Data.Common.DBDataPermission.#ctor*\n  parent: System.Data.Common.DBDataPermission\n  isExternal: false\n  name: DBDataPermission\n  nameWithType: DBDataPermission.DBDataPermission\n  fullName: DBDataPermission.DBDataPermission\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DBDataPermission.xml\n- uid: System.Data.Common.DBDataPermission.Add*\n  parent: System.Data.Common.DBDataPermission\n  isExternal: false\n  name: Add\n  nameWithType: DBDataPermission.Add\n  fullName: DBDataPermission.Add\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DBDataPermission.xml\n- uid: System.Data.Common.DBDataPermission.AllowBlankPassword*\n  parent: System.Data.Common.DBDataPermission\n  isExternal: false\n  name: AllowBlankPassword\n  nameWithType: DBDataPermission.AllowBlankPassword\n  fullName: DBDataPermission.AllowBlankPassword\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DBDataPermission.xml\n- uid: System.Data.Common.DBDataPermission.Clear*\n  parent: System.Data.Common.DBDataPermission\n  isExternal: false\n  name: Clear\n  nameWithType: DBDataPermission.Clear\n  fullName: DBDataPermission.Clear\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DBDataPermission.xml\n- uid: System.Data.Common.DBDataPermission.Copy*\n  parent: System.Data.Common.DBDataPermission\n  isExternal: false\n  name: Copy\n  nameWithType: DBDataPermission.Copy\n  fullName: DBDataPermission.Copy\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DBDataPermission.xml\n- uid: System.Data.Common.DBDataPermission.CreateInstance*\n  parent: System.Data.Common.DBDataPermission\n  isExternal: false\n  name: CreateInstance\n  nameWithType: DBDataPermission.CreateInstance\n  fullName: DBDataPermission.CreateInstance\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DBDataPermission.xml\n- uid: System.Data.Common.DBDataPermission.FromXml*\n  parent: System.Data.Common.DBDataPermission\n  isExternal: false\n  name: FromXml\n  nameWithType: DBDataPermission.FromXml\n  fullName: DBDataPermission.FromXml\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DBDataPermission.xml\n- uid: System.Data.Common.DBDataPermission.Intersect*\n  parent: System.Data.Common.DBDataPermission\n  isExternal: false\n  name: Intersect\n  nameWithType: DBDataPermission.Intersect\n  fullName: DBDataPermission.Intersect\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DBDataPermission.xml\n- uid: System.Data.Common.DBDataPermission.IsSubsetOf*\n  parent: System.Data.Common.DBDataPermission\n  isExternal: false\n  name: IsSubsetOf\n  nameWithType: DBDataPermission.IsSubsetOf\n  fullName: DBDataPermission.IsSubsetOf\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DBDataPermission.xml\n- uid: System.Data.Common.DBDataPermission.IsUnrestricted*\n  parent: System.Data.Common.DBDataPermission\n  isExternal: false\n  name: IsUnrestricted\n  nameWithType: DBDataPermission.IsUnrestricted\n  fullName: DBDataPermission.IsUnrestricted\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DBDataPermission.xml\n- uid: System.Data.Common.DBDataPermission.ToXml*\n  parent: System.Data.Common.DBDataPermission\n  isExternal: false\n  name: ToXml\n  nameWithType: DBDataPermission.ToXml\n  fullName: DBDataPermission.ToXml\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DBDataPermission.xml\n- uid: System.Data.Common.DBDataPermission.Union*\n  parent: System.Data.Common.DBDataPermission\n  isExternal: false\n  name: Union\n  nameWithType: DBDataPermission.Union\n  fullName: DBDataPermission.Union\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DBDataPermission.xml\n- uid: System.Security.CodeAccessPermission.Equals(System.Object)\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: CodeAccessPermission.Equals(Object)\n  fullName: CodeAccessPermission.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Security.CodeAccessPermission.GetHashCode\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: CodeAccessPermission.GetHashCode()\n  fullName: CodeAccessPermission.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Security.CodeAccessPermission.ToString\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: ToString()\n  nameWithType: CodeAccessPermission.ToString()\n  fullName: CodeAccessPermission.ToString()\n- uid: System.Security.CodeAccessPermission.Assert\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Assert()\n  nameWithType: CodeAccessPermission.Assert()\n  fullName: CodeAccessPermission.Assert()\n- uid: System.Security.CodeAccessPermission.Demand\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Demand()\n  nameWithType: CodeAccessPermission.Demand()\n  fullName: CodeAccessPermission.Demand()\n- uid: System.Security.CodeAccessPermission.Deny\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Deny()\n  nameWithType: CodeAccessPermission.Deny()\n  fullName: CodeAccessPermission.Deny()\n- uid: System.Security.CodeAccessPermission.PermitOnly\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: PermitOnly()\n  nameWithType: CodeAccessPermission.PermitOnly()\n  fullName: CodeAccessPermission.PermitOnly()\n- uid: System.Security.CodeAccessPermission.RevertAll\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertAll()\n  nameWithType: CodeAccessPermission.RevertAll()\n  fullName: CodeAccessPermission.RevertAll()\n- uid: System.Security.CodeAccessPermission.RevertAssert\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertAssert()\n  nameWithType: CodeAccessPermission.RevertAssert()\n  fullName: CodeAccessPermission.RevertAssert()\n- uid: System.Security.CodeAccessPermission.RevertDeny\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertDeny()\n  nameWithType: CodeAccessPermission.RevertDeny()\n  fullName: CodeAccessPermission.RevertDeny()\n- uid: System.Security.CodeAccessPermission.RevertPermitOnly\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertPermitOnly()\n  nameWithType: CodeAccessPermission.RevertPermitOnly()\n  fullName: CodeAccessPermission.RevertPermitOnly()\n- uid: System.Security.CodeAccessPermission.System#Security#IPermission#Demand\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IPermission.Demand()\n  nameWithType: CodeAccessPermission.IPermission.Demand()\n  fullName: CodeAccessPermission.IPermission.Demand()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#Assert\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.Assert()\n  nameWithType: CodeAccessPermission.IStackWalk.Assert()\n  fullName: CodeAccessPermission.IStackWalk.Assert()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#Demand\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.Demand()\n  nameWithType: CodeAccessPermission.IStackWalk.Demand()\n  fullName: CodeAccessPermission.IStackWalk.Demand()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#Deny\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.Deny()\n  nameWithType: CodeAccessPermission.IStackWalk.Deny()\n  fullName: CodeAccessPermission.IStackWalk.Deny()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#PermitOnly\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.PermitOnly()\n  nameWithType: CodeAccessPermission.IStackWalk.PermitOnly()\n  fullName: CodeAccessPermission.IStackWalk.PermitOnly()\n- uid: System.Security.Permissions.IUnrestrictedPermission\n  parent: System.Security.Permissions\n  isExternal: false\n  name: IUnrestrictedPermission\n  nameWithType: IUnrestrictedPermission\n  fullName: System.Security.Permissions.IUnrestrictedPermission\n"}