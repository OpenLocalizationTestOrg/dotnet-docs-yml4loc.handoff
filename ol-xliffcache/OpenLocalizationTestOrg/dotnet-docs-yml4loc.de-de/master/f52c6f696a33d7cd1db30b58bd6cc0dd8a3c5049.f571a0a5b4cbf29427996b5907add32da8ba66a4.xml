{"nodes":[{"content":"Represents a set of types that are either allowed or disallowed in compiled workflows by the workflow compiler (depending on the value of the <xref href=\"System.Workflow.ComponentModel.Compiler.AuthorizedType.Authorized\"></xref> property). This class cannot be inherited.","nodes":[{"pos":[0,271],"content":"Represents a set of types that are either allowed or disallowed in compiled workflows by the workflow compiler (depending on the value of the <xref href=\"System.Workflow.ComponentModel.Compiler.AuthorizedType.Authorized\"></xref> property). This class cannot be inherited.","nodes":[{"content":"Represents a set of types that are either allowed or disallowed in compiled workflows by the workflow compiler (depending on the value of the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.Compiler.AuthorizedType.Authorized\"&gt;&lt;/xref&gt;</ph> property).","pos":[0,239],"source":"Represents a set of types that are either allowed or disallowed in compiled workflows by the workflow compiler (depending on the value of the <xref href=\"System.Workflow.ComponentModel.Compiler.AuthorizedType.Authorized\"></xref> property)."},{"content":"This class cannot be inherited.","pos":[240,271]}]}],"pos":[886,1158],"yaml":true},{"content":"> [!NOTE]\n>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  \n  \n During the validation phase of workflow compilation, a workflow source document is rejected if it or the companion rules file directly references any .NET Framework types not present on a list of authorized types. The list of authorized types is an XML document where each entry indicates an `Assembly`, a `Namespace`, a `TypeName`, and an Authorized {`true`&#124;`false`} indicator. This class corresponds to an entry on the list. Also note that wildcard character designations are allowed, to include or exclude complete namespaces. For example, using `Type=\"System.*\"` includes all types in <xref:System>, including types contained in child namespaces.  \n  \n The use of a list of authorized types is controlled by the <xref:System.Workflow.ComponentModel.Compiler.WorkflowCompiler> option `'/checktypes'`","nodes":[{"pos":[2,78],"content":"[!NOTE]\n [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]","leadings":["","> "],"nodes":[]},{"pos":[85,740],"content":"During the validation phase of workflow compilation, a workflow source document is rejected if it or the companion rules file directly references any .NET Framework types not present on a list of authorized types. The list of authorized types is an XML document where each entry indicates an `Assembly`, a `Namespace`, a `TypeName`, and an Authorized {`true`&#124;`false`} indicator. This class corresponds to an entry on the list. Also note that wildcard character designations are allowed, to include or exclude complete namespaces. For example, using `Type=\"System.*\"` includes all types in <xref:System>, including types contained in child namespaces.","nodes":[{"content":"During the validation phase of workflow compilation, a workflow source document is rejected if it or the companion rules file directly references any .NET Framework types not present on a list of authorized types.","pos":[0,213]},{"content":"The list of authorized types is an XML document where each entry indicates an <ph id=\"ph1\">`Assembly`</ph>, a <ph id=\"ph2\">`Namespace`</ph>, a <ph id=\"ph3\">`TypeName`</ph>, and an Authorized {<ph id=\"ph4\">`true`</ph>&amp;#124;<ph id=\"ph5\">`false`</ph>} indicator.","pos":[214,383],"source":" The list of authorized types is an XML document where each entry indicates an `Assembly`, a `Namespace`, a `TypeName`, and an Authorized {`true`&#124;`false`} indicator."},{"content":"This class corresponds to an entry on the list.","pos":[384,431]},{"content":"Also note that wildcard character designations are allowed, to include or exclude complete namespaces.","pos":[432,534]},{"content":"For example, using <ph id=\"ph1\">`Type=\"System.*\"`</ph> includes all types in <ph id=\"ph2\">&lt;xref:System&gt;</ph>, including types contained in child namespaces.","pos":[535,655],"source":" For example, using `Type=\"System.*\"` includes all types in <xref:System>, including types contained in child namespaces."}]},{"pos":[747,892],"content":"The use of a list of authorized types is controlled by the <ph id=\"ph1\">&lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowCompiler&gt;</ph> option <ph id=\"ph2\">`'/checktypes'`</ph>","source":"The use of a list of authorized types is controlled by the <xref:System.Workflow.ComponentModel.Compiler.WorkflowCompiler> option `'/checktypes'`"}],"pos":[1169,2071],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Workflow.ComponentModel.Compiler.AuthorizedType\"></xref> class.","nodes":[{"pos":[0,116],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.Compiler.AuthorizedType\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Workflow.ComponentModel.Compiler.AuthorizedType\"></xref> class."}],"pos":[3669,3786],"yaml":true},{"content":"Gets or sets the name of the assembly that contains the type(s) represented by this class.","nodes":[{"pos":[0,90],"content":"Gets or sets the name of the assembly that contains the type(s) represented by this class.","nodes":[{"content":"Gets or sets the name of the assembly that contains the type(s) represented by this class.","pos":[0,90]}]}],"pos":[4931,5022],"yaml":true},{"content":"The name of the assembly.","nodes":[{"pos":[0,25],"content":"The name of the assembly.","nodes":[{"content":"The name of the assembly.","pos":[0,25]}]}],"pos":[5139,5165],"yaml":true},{"content":"Gets or sets the value that indicates whether the type designated by this class is authorized to participate in a workflow compilation.","nodes":[{"pos":[0,135],"content":"Gets or sets the value that indicates whether the type designated by this class is authorized to participate in a workflow compilation.","nodes":[{"content":"Gets or sets the value that indicates whether the type designated by this class is authorized to participate in a workflow compilation.","pos":[0,135]}]}],"pos":[6274,6410],"yaml":true},{"content":"`true` if authorized to participate in a workflow compilation; otherwise, `false`.","nodes":[{"pos":[0,82],"content":"<ph id=\"ph1\">`true`</ph> if authorized to participate in a workflow compilation; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if authorized to participate in a workflow compilation; otherwise, `false`."}],"pos":[6529,6614],"yaml":true},{"content":"Gets or sets the name of the namespace of the type represented in this instance.","nodes":[{"pos":[0,80],"content":"Gets or sets the name of the namespace of the type represented in this instance.","nodes":[{"content":"Gets or sets the name of the namespace of the type represented in this instance.","pos":[0,80]}]}],"pos":[7719,7800],"yaml":true},{"content":"The name of the namespace of the <xref href=\"System.Type\"></xref> represented in this instance.","nodes":[{"pos":[0,95],"content":"The name of the namespace of the <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> represented in this instance.","source":"The name of the namespace of the <xref href=\"System.Type\"></xref> represented in this instance."}],"pos":[7918,8014],"yaml":true},{"content":"Gets the <xref href=\"System.Text.RegularExpressions.Regex\"></xref> associated with this instance.","nodes":[{"pos":[0,97],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Text.RegularExpressions.Regex\"&gt;&lt;/xref&gt;</ph> associated with this instance.","source":"Gets the <xref href=\"System.Text.RegularExpressions.Regex\"></xref> associated with this instance."}],"pos":[9166,9264],"yaml":true},{"content":"Because wildcard naming is supported, there is an implicitly created <xref:System.Text.RegularExpressions.Regex> when wildcard naming is used. This property provides direct access to that <xref:System.Text.RegularExpressions.Regex> .","nodes":[{"pos":[0,233],"content":"Because wildcard naming is supported, there is an implicitly created <xref:System.Text.RegularExpressions.Regex> when wildcard naming is used. This property provides direct access to that <xref:System.Text.RegularExpressions.Regex> .","nodes":[{"content":"Because wildcard naming is supported, there is an implicitly created <xref:System.Text.RegularExpressions.Regex> when wildcard naming is used. This property provides direct access to that <xref:System.Text.RegularExpressions.Regex> .","pos":[0,233],"nodes":[{"content":"Because wildcard naming is supported, there is an implicitly created <ph id=\"ph1\">&lt;xref:System.Text.RegularExpressions.Regex&gt;</ph> when wildcard naming is used.","pos":[0,142],"source":"Because wildcard naming is supported, there is an implicitly created <xref:System.Text.RegularExpressions.Regex> when wildcard naming is used."},{"content":"This property provides direct access to that <ph id=\"ph1\">&lt;xref:System.Text.RegularExpressions.Regex&gt;</ph> .","pos":[143,233],"source":" This property provides direct access to that <xref:System.Text.RegularExpressions.Regex> ."}]}]}],"pos":[9275,9509],"yaml":true,"extradata":"MT"},{"content":"The regular expression associated with this instance.","nodes":[{"pos":[0,53],"content":"The regular expression associated with this instance.","nodes":[{"content":"The regular expression associated with this instance.","pos":[0,53]}]}],"pos":[9683,9737],"yaml":true},{"content":"Gets or sets the name of the type being represented by this instance.","nodes":[{"pos":[0,69],"content":"Gets or sets the name of the type being represented by this instance.","nodes":[{"content":"Gets or sets the name of the type being represented by this instance.","pos":[0,69]}]}],"pos":[10843,10913],"yaml":true},{"content":"The name of the <xref href=\"System.Type\"></xref> being represented by this instance.","nodes":[{"pos":[0,84],"content":"The name of the <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> being represented by this instance.","source":"The name of the <xref href=\"System.Type\"></xref> being represented by this instance."}],"pos":[11030,11115],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType\n  commentId: T:System.Workflow.ComponentModel.Compiler.AuthorizedType\n  id: AuthorizedType\n  children:\n  - System.Workflow.ComponentModel.Compiler.AuthorizedType.#ctor\n  - System.Workflow.ComponentModel.Compiler.AuthorizedType.Assembly\n  - System.Workflow.ComponentModel.Compiler.AuthorizedType.Authorized\n  - System.Workflow.ComponentModel.Compiler.AuthorizedType.Namespace\n  - System.Workflow.ComponentModel.Compiler.AuthorizedType.RegularExpression\n  - System.Workflow.ComponentModel.Compiler.AuthorizedType.TypeName\n  langs:\n  - csharp\n  name: AuthorizedType\n  nameWithType: AuthorizedType\n  fullName: System.Workflow.ComponentModel.Compiler.AuthorizedType\n  type: Class\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel.Compiler\n  summary: Represents a set of types that are either allowed or disallowed in compiled workflows by the workflow compiler (depending on the value of the <xref href=\"System.Workflow.ComponentModel.Compiler.AuthorizedType.Authorized\"></xref> property). This class cannot be inherited.\n  remarks: \"> [!NOTE]\\n>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  \\n  \\n During the validation phase of workflow compilation, a workflow source document is rejected if it or the companion rules file directly references any .NET Framework types not present on a list of authorized types. The list of authorized types is an XML document where each entry indicates an `Assembly`, a `Namespace`, a `TypeName`, and an Authorized {`true`&#124;`false`} indicator. This class corresponds to an entry on the list. Also note that wildcard character designations are allowed, to include or exclude complete namespaces. For example, using `Type=\\\"System.*\\\"` includes all types in <xref:System>, including types contained in child namespaces.  \\n  \\n The use of a list of authorized types is controlled by the <xref:System.Workflow.ComponentModel.Compiler.WorkflowCompiler> option `'/checktypes'`\"\n  syntax:\n    content: >-\n      [System.Obsolete(\"The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*\")]\n\n      public sealed class AuthorizedType\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel.Compiler/AuthorizedType.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.#ctor\n  commentId: M:System.Workflow.ComponentModel.Compiler.AuthorizedType.#ctor\n  id: '#ctor'\n  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType\n  langs:\n  - csharp\n  name: AuthorizedType()\n  nameWithType: AuthorizedType.AuthorizedType()\n  fullName: AuthorizedType.AuthorizedType()\n  type: Constructor\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel.Compiler\n  summary: Initializes a new instance of the <xref href=\"System.Workflow.ComponentModel.Compiler.AuthorizedType\"></xref> class.\n  syntax:\n    content: public AuthorizedType ();\n    parameters: []\n  overload: System.Workflow.ComponentModel.Compiler.AuthorizedType.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel.Compiler/AuthorizedType.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.Assembly\n  commentId: P:System.Workflow.ComponentModel.Compiler.AuthorizedType.Assembly\n  id: Assembly\n  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType\n  langs:\n  - csharp\n  name: Assembly\n  nameWithType: AuthorizedType.Assembly\n  fullName: AuthorizedType.Assembly\n  type: Property\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel.Compiler\n  summary: Gets or sets the name of the assembly that contains the type(s) represented by this class.\n  syntax:\n    content: public string Assembly { get; set; }\n    return:\n      type: System.String\n      description: The name of the assembly.\n  overload: System.Workflow.ComponentModel.Compiler.AuthorizedType.Assembly*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel.Compiler/AuthorizedType.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.Authorized\n  commentId: P:System.Workflow.ComponentModel.Compiler.AuthorizedType.Authorized\n  id: Authorized\n  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType\n  langs:\n  - csharp\n  name: Authorized\n  nameWithType: AuthorizedType.Authorized\n  fullName: AuthorizedType.Authorized\n  type: Property\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel.Compiler\n  summary: Gets or sets the value that indicates whether the type designated by this class is authorized to participate in a workflow compilation.\n  syntax:\n    content: public string Authorized { get; set; }\n    return:\n      type: System.String\n      description: '`true` if authorized to participate in a workflow compilation; otherwise, `false`.'\n  overload: System.Workflow.ComponentModel.Compiler.AuthorizedType.Authorized*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel.Compiler/AuthorizedType.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.Namespace\n  commentId: P:System.Workflow.ComponentModel.Compiler.AuthorizedType.Namespace\n  id: Namespace\n  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType\n  langs:\n  - csharp\n  name: Namespace\n  nameWithType: AuthorizedType.Namespace\n  fullName: AuthorizedType.Namespace\n  type: Property\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel.Compiler\n  summary: Gets or sets the name of the namespace of the type represented in this instance.\n  syntax:\n    content: public string Namespace { get; set; }\n    return:\n      type: System.String\n      description: The name of the namespace of the <xref href=\"System.Type\"></xref> represented in this instance.\n  overload: System.Workflow.ComponentModel.Compiler.AuthorizedType.Namespace*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel.Compiler/AuthorizedType.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.RegularExpression\n  commentId: P:System.Workflow.ComponentModel.Compiler.AuthorizedType.RegularExpression\n  id: RegularExpression\n  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType\n  langs:\n  - csharp\n  name: RegularExpression\n  nameWithType: AuthorizedType.RegularExpression\n  fullName: AuthorizedType.RegularExpression\n  type: Property\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel.Compiler\n  summary: Gets the <xref href=\"System.Text.RegularExpressions.Regex\"></xref> associated with this instance.\n  remarks: Because wildcard naming is supported, there is an implicitly created <xref:System.Text.RegularExpressions.Regex> when wildcard naming is used. This property provides direct access to that <xref:System.Text.RegularExpressions.Regex> .\n  syntax:\n    content: public System.Text.RegularExpressions.Regex RegularExpression { get; }\n    return:\n      type: System.Text.RegularExpressions.Regex\n      description: The regular expression associated with this instance.\n  overload: System.Workflow.ComponentModel.Compiler.AuthorizedType.RegularExpression*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel.Compiler/AuthorizedType.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.TypeName\n  commentId: P:System.Workflow.ComponentModel.Compiler.AuthorizedType.TypeName\n  id: TypeName\n  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType\n  langs:\n  - csharp\n  name: TypeName\n  nameWithType: AuthorizedType.TypeName\n  fullName: AuthorizedType.TypeName\n  type: Property\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel.Compiler\n  summary: Gets or sets the name of the type being represented by this instance.\n  syntax:\n    content: public string TypeName { get; set; }\n    return:\n      type: System.String\n      description: The name of the <xref href=\"System.Type\"></xref> being represented by this instance.\n  overload: System.Workflow.ComponentModel.Compiler.AuthorizedType.TypeName*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel.Compiler/AuthorizedType.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.#ctor\n  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType\n  isExternal: false\n  name: AuthorizedType()\n  nameWithType: AuthorizedType.AuthorizedType()\n  fullName: AuthorizedType.AuthorizedType()\n- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.Assembly\n  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType\n  isExternal: false\n  name: Assembly\n  nameWithType: AuthorizedType.Assembly\n  fullName: AuthorizedType.Assembly\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.Authorized\n  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType\n  isExternal: false\n  name: Authorized\n  nameWithType: AuthorizedType.Authorized\n  fullName: AuthorizedType.Authorized\n- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.Namespace\n  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType\n  isExternal: false\n  name: Namespace\n  nameWithType: AuthorizedType.Namespace\n  fullName: AuthorizedType.Namespace\n- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.RegularExpression\n  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType\n  isExternal: false\n  name: RegularExpression\n  nameWithType: AuthorizedType.RegularExpression\n  fullName: AuthorizedType.RegularExpression\n- uid: System.Text.RegularExpressions.Regex\n  parent: System.Text.RegularExpressions\n  isExternal: false\n  name: Regex\n  nameWithType: Regex\n  fullName: System.Text.RegularExpressions.Regex\n- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.TypeName\n  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType\n  isExternal: false\n  name: TypeName\n  nameWithType: AuthorizedType.TypeName\n  fullName: AuthorizedType.TypeName\n- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.#ctor*\n  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType\n  isExternal: false\n  name: AuthorizedType\n  nameWithType: AuthorizedType.AuthorizedType\n  fullName: AuthorizedType.AuthorizedType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel.Compiler/AuthorizedType.xml\n- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.Assembly*\n  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType\n  isExternal: false\n  name: Assembly\n  nameWithType: AuthorizedType.Assembly\n  fullName: AuthorizedType.Assembly\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel.Compiler/AuthorizedType.xml\n- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.Authorized*\n  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType\n  isExternal: false\n  name: Authorized\n  nameWithType: AuthorizedType.Authorized\n  fullName: AuthorizedType.Authorized\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel.Compiler/AuthorizedType.xml\n- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.Namespace*\n  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType\n  isExternal: false\n  name: Namespace\n  nameWithType: AuthorizedType.Namespace\n  fullName: AuthorizedType.Namespace\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel.Compiler/AuthorizedType.xml\n- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.RegularExpression*\n  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType\n  isExternal: false\n  name: RegularExpression\n  nameWithType: AuthorizedType.RegularExpression\n  fullName: AuthorizedType.RegularExpression\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel.Compiler/AuthorizedType.xml\n- uid: System.Workflow.ComponentModel.Compiler.AuthorizedType.TypeName*\n  parent: System.Workflow.ComponentModel.Compiler.AuthorizedType\n  isExternal: false\n  name: TypeName\n  nameWithType: AuthorizedType.TypeName\n  fullName: AuthorizedType.TypeName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel.Compiler/AuthorizedType.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}