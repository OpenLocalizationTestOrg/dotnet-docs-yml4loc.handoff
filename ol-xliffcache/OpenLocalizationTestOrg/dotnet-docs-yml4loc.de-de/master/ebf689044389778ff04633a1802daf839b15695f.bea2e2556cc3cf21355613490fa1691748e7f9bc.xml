{"nodes":[{"content":"The exception that is thrown when recursive entry into a lock is not compatible with the recursion policy for the lock.","nodes":[{"pos":[0,119],"content":"The exception that is thrown when recursive entry into a lock is not compatible with the recursion policy for the lock.","nodes":[{"content":"The exception that is thrown when recursive entry into a lock is not compatible with the recursion policy for the lock.","pos":[0,119]}]}],"pos":[781,901],"yaml":true},{"content":"<xref:System.Threading.LockRecursionException> is thrown for several reasons, including the following:  \n  \n-   If a thread tries to enter an instance of <xref:System.Threading.ReaderWriterLockSlim> recursively, but the instance does not support recursion.  \n  \n-   If a thread tries to enter a <xref:System.Threading.ReaderWriterLockSlim> instance in write mode or upgradeable mode when the thread initially entered the lock in read mode. This represents a potential deadlock and therefore is not allowed.  \n  \n-   If allowing one more level of recursion would exceed the maximum value for the internal storage counter used to track recursions. This limit is so large that applications should never encounter it.","nodes":[{"pos":[0,102],"content":"<xref:System.Threading.LockRecursionException> is thrown for several reasons, including the following:","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Threading.LockRecursionException&gt;</ph> is thrown for several reasons, including the following:","pos":[0,102],"source":"<xref:System.Threading.LockRecursionException> is thrown for several reasons, including the following:"}]},{"pos":[112,256],"content":"If a thread tries to enter an instance of <xref:System.Threading.ReaderWriterLockSlim> recursively, but the instance does not support recursion.","nodes":[{"content":"If a thread tries to enter an instance of <ph id=\"ph1\">&lt;xref:System.Threading.ReaderWriterLockSlim&gt;</ph> recursively, but the instance does not support recursion.","pos":[0,144],"source":"If a thread tries to enter an instance of <xref:System.Threading.ReaderWriterLockSlim> recursively, but the instance does not support recursion."}]},{"pos":[266,506],"content":"If a thread tries to enter a <xref:System.Threading.ReaderWriterLockSlim> instance in write mode or upgradeable mode when the thread initially entered the lock in read mode. This represents a potential deadlock and therefore is not allowed.","nodes":[{"content":"If a thread tries to enter a <xref:System.Threading.ReaderWriterLockSlim> instance in write mode or upgradeable mode when the thread initially entered the lock in read mode. This represents a potential deadlock and therefore is not allowed.","pos":[0,240],"nodes":[{"content":"If a thread tries to enter a <ph id=\"ph1\">&lt;xref:System.Threading.ReaderWriterLockSlim&gt;</ph> instance in write mode or upgradeable mode when the thread initially entered the lock in read mode.","pos":[0,173],"source":"If a thread tries to enter a <xref:System.Threading.ReaderWriterLockSlim> instance in write mode or upgradeable mode when the thread initially entered the lock in read mode."},{"content":"This represents a potential deadlock and therefore is not allowed.","pos":[174,240]}]}]},{"pos":[516,713],"content":"If allowing one more level of recursion would exceed the maximum value for the internal storage counter used to track recursions. This limit is so large that applications should never encounter it.","nodes":[{"content":"If allowing one more level of recursion would exceed the maximum value for the internal storage counter used to track recursions. This limit is so large that applications should never encounter it.","pos":[0,197],"nodes":[{"content":"If allowing one more level of recursion would exceed the maximum value for the internal storage counter used to track recursions.","pos":[0,129]},{"content":"This limit is so large that applications should never encounter it.","pos":[130,197]}]}]}],"pos":[912,1634],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Threading.LockRecursionException\"></xref> class with a system-supplied message that describes the error.","nodes":[{"pos":[0,157],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Threading.LockRecursionException\"&gt;&lt;/xref&gt;</ph> class with a system-supplied message that describes the error.","source":"Initializes a new instance of the <xref href=\"System.Threading.LockRecursionException\"></xref> class with a system-supplied message that describes the error."}],"pos":[5007,5165],"yaml":true},{"content":"This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as \"Recursive read lock acquisitions not allowed in this mode.\" This message takes the current system culture into account.  \n  \n The following table shows the initial property values for an instance of <xref:System.InsufficientMemoryException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|`null`.|  \n|<xref:System.Exception.Message%2A>|The localized error message string.|","nodes":[{"pos":[0,280],"content":"This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as \"Recursive read lock acquisitions not allowed in this mode.\" This message takes the current system culture into account.","nodes":[{"content":"This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as \"Recursive read lock acquisitions not allowed in this mode.\" This message takes the current system culture into account.","pos":[0,280],"nodes":[{"content":"This constructor initializes the <ph id=\"ph1\">&lt;xref:System.Exception.Message%2A&gt;</ph> property of the new instance to a system-supplied message that describes the error, such as \"Recursive read lock acquisitions not allowed in this mode.\"","pos":[0,220],"source":"This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as \"Recursive read lock acquisitions not allowed in this mode.\""},{"content":"This message takes the current system culture into account.","pos":[221,280]}]}]},{"pos":[287,402],"content":"The following table shows the initial property values for an instance of <xref:System.InsufficientMemoryException>.","nodes":[{"content":"The following table shows the initial property values for an instance of <ph id=\"ph1\">&lt;xref:System.InsufficientMemoryException&gt;</ph>.","pos":[0,115],"source":"The following table shows the initial property values for an instance of <xref:System.InsufficientMemoryException>."}]},{"pos":[409,417],"content":"Property","nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[418,423],"content":"Value","nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[459,500],"content":"<xref:System.Exception.InnerException%2A>","nodes":[]},{"pos":[501,508],"content":"<ph id=\"ph1\">`null`</ph>.","source":"`null`."},{"pos":[513,547],"content":"<xref:System.Exception.Message%2A>","nodes":[]},{"pos":[548,583],"content":"The localized error message string.","nodes":[{"content":"The localized error message string.","pos":[0,35]}]}],"pos":[5176,5772],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Threading.LockRecursionException\"></xref> class with a specified message that describes the error.","nodes":[{"pos":[0,151],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Threading.LockRecursionException\"&gt;&lt;/xref&gt;</ph> class with a specified message that describes the error.","source":"Initializes a new instance of the <xref href=\"System.Threading.LockRecursionException\"></xref> class with a specified message that describes the error."}],"pos":[7507,7659],"yaml":true},{"content":"This constructor initializes the <xref:System.Exception.Message%2A?displayProperty=fullName> property of the new exception with the `message` parameter. The content of `message` is intended to be understood by humans. The caller of this constructor must make sure that this string has been localized for the current system culture.  \n  \n The following table shows the initial property values for an instance of <xref:System.Threading.LockRecursionException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|`null`.|  \n|<xref:System.Exception.Message%2A>|The error message string.|","nodes":[{"pos":[0,331],"content":"This constructor initializes the <xref:System.Exception.Message%2A?displayProperty=fullName> property of the new exception with the `message` parameter. The content of `message` is intended to be understood by humans. The caller of this constructor must make sure that this string has been localized for the current system culture.","nodes":[{"content":"This constructor initializes the <ph id=\"ph1\">&lt;xref:System.Exception.Message%2A?displayProperty=fullName&gt;</ph> property of the new exception with the <ph id=\"ph2\">`message`</ph> parameter.","pos":[0,152],"source":"This constructor initializes the <xref:System.Exception.Message%2A?displayProperty=fullName> property of the new exception with the `message` parameter."},{"content":"The content of <ph id=\"ph1\">`message`</ph> is intended to be understood by humans.","pos":[153,217],"source":" The content of `message` is intended to be understood by humans."},{"content":"The caller of this constructor must make sure that this string has been localized for the current system culture.","pos":[218,331]}]},{"pos":[338,458],"content":"The following table shows the initial property values for an instance of <xref:System.Threading.LockRecursionException>.","nodes":[{"content":"The following table shows the initial property values for an instance of <ph id=\"ph1\">&lt;xref:System.Threading.LockRecursionException&gt;</ph>.","pos":[0,120],"source":"The following table shows the initial property values for an instance of <xref:System.Threading.LockRecursionException>."}]},{"pos":[465,473],"content":"Property","nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[474,479],"content":"Value","nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[515,556],"content":"<xref:System.Exception.InnerException%2A>","nodes":[]},{"pos":[557,564],"content":"<ph id=\"ph1\">`null`</ph>.","source":"`null`."},{"pos":[569,603],"content":"<xref:System.Exception.Message%2A>","nodes":[]},{"pos":[604,629],"content":"The error message string.","nodes":[{"content":"The error message string.","pos":[0,25]}]}],"pos":[7670,8310],"yaml":true,"extradata":"MT"},{"content":"The message that describes the exception. The caller of this constructor must make sure that this string has been localized for the current system culture.","nodes":[{"pos":[0,155],"content":"The message that describes the exception. The caller of this constructor must make sure that this string has been localized for the current system culture.","nodes":[{"content":"The message that describes the exception. The caller of this constructor must make sure that this string has been localized for the current system culture.","pos":[0,155],"nodes":[{"content":"The message that describes the exception.","pos":[0,41]},{"content":"The caller of this constructor must make sure that this string has been localized for the current system culture.","pos":[42,155]}]}]}],"pos":[8460,8616],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Threading.LockRecursionException\"></xref> class with serialized data.","nodes":[{"pos":[0,122],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Threading.LockRecursionException\"&gt;&lt;/xref&gt;</ph> class with serialized data.","source":"Initializes a new instance of the <xref href=\"System.Threading.LockRecursionException\"></xref> class with serialized data."}],"pos":[10599,10722],"yaml":true},{"content":"This constructor is called during deserialization to reconstitute an exception object that is transmitted over a stream. For more information, see [XML and SOAP Serialization](~/docs/framework/serialization/xml-and-soap-serialization.md).","nodes":[{"pos":[0,238],"content":"This constructor is called during deserialization to reconstitute an exception object that is transmitted over a stream. For more information, see [XML and SOAP Serialization](~/docs/framework/serialization/xml-and-soap-serialization.md).","nodes":[{"content":"This constructor is called during deserialization to reconstitute an exception object that is transmitted over a stream.","pos":[0,120]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>XML and SOAP Serialization<ept id=\"p1\">](~/docs/framework/serialization/xml-and-soap-serialization.md)</ept>.","pos":[121,238],"source":" For more information, see [XML and SOAP Serialization](~/docs/framework/serialization/xml-and-soap-serialization.md)."}]}],"pos":[10733,10972],"yaml":true,"extradata":"MT"},{"content":"The object that holds the serialized object data.","nodes":[{"pos":[0,49],"content":"The object that holds the serialized object data.","nodes":[{"content":"The object that holds the serialized object data.","pos":[0,49]}]}],"pos":[11247,11297],"yaml":true},{"content":"The contextual information about the source or destination.","nodes":[{"pos":[0,59],"content":"The contextual information about the source or destination.","nodes":[{"content":"The contextual information about the source or destination.","pos":[0,59]}]}],"pos":[11392,11452],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Threading.LockRecursionException\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception.","nodes":[{"pos":[0,207],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Threading.LockRecursionException\"&gt;&lt;/xref&gt;</ph> class with a specified error message and a reference to the inner exception that is the cause of this exception.","source":"Initializes a new instance of the <xref href=\"System.Threading.LockRecursionException\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception."}],"pos":[12891,13099],"yaml":true},{"content":"An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.  \n  \n The following table shows the initial property values for an instance of <xref:System.Threading.LockRecursionException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|The exception specified in `innerException`.|  \n|<xref:System.Exception.Message%2A>|The error message string specified in `message`.|","nodes":[{"pos":[0,427],"content":"An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.","nodes":[{"content":"An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <ph id=\"ph1\">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.","pos":[0,182],"source":"An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or <ph id=\"ph2\">`null`</ph> if the <ph id=\"ph3\">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.","pos":[183,427],"source":" The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor."}]},{"pos":[434,554],"content":"The following table shows the initial property values for an instance of <xref:System.Threading.LockRecursionException>.","nodes":[{"content":"The following table shows the initial property values for an instance of <ph id=\"ph1\">&lt;xref:System.Threading.LockRecursionException&gt;</ph>.","pos":[0,120],"source":"The following table shows the initial property values for an instance of <xref:System.Threading.LockRecursionException>."}]},{"pos":[561,569],"content":"Property","nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[570,575],"content":"Value","nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[611,652],"content":"<xref:System.Exception.InnerException%2A>","nodes":[]},{"pos":[653,697],"content":"The exception specified in <ph id=\"ph1\">`innerException`</ph>.","source":"The exception specified in `innerException`."},{"pos":[702,736],"content":"<xref:System.Exception.Message%2A>","nodes":[]},{"pos":[737,785],"content":"The error message string specified in <ph id=\"ph1\">`message`</ph>.","source":"The error message string specified in `message`."}],"pos":[13110,13906],"yaml":true,"extradata":"MT"},{"content":"The message that describes the exception. The caller of this constructor must make sure that this string has been localized for the current system culture.","nodes":[{"pos":[0,155],"content":"The message that describes the exception. The caller of this constructor must make sure that this string has been localized for the current system culture.","nodes":[{"content":"The message that describes the exception. The caller of this constructor must make sure that this string has been localized for the current system culture.","pos":[0,155],"nodes":[{"content":"The message that describes the exception.","pos":[0,41]},{"content":"The caller of this constructor must make sure that this string has been localized for the current system culture.","pos":[42,155]}]}]}],"pos":[14082,14238],"yaml":true},{"content":"The exception that caused the current exception. If the <code>innerException</code> parameter is not `null`, the current exception is raised in a `catch` block that handles the inner exception.","nodes":[{"pos":[0,193],"content":"The exception that caused the current exception. If the <code>innerException</code> parameter is not `null`, the current exception is raised in a `catch` block that handles the inner exception.","nodes":[{"content":"The exception that caused the current exception.","pos":[0,48]},{"content":"If the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">innerException</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not <ph id=\"ph2\">`null`</ph>, the current exception is raised in a <ph id=\"ph3\">`catch`</ph> block that handles the inner exception.","pos":[49,193],"source":" If the <code>innerException</code> parameter is not `null`, the current exception is raised in a `catch` block that handles the inner exception."}]}],"pos":[14311,14505],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Threading.LockRecursionException\n  commentId: T:System.Threading.LockRecursionException\n  id: LockRecursionException\n  children:\n  - System.Threading.LockRecursionException.#ctor\n  - System.Threading.LockRecursionException.#ctor(System.String)\n  - System.Threading.LockRecursionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Threading.LockRecursionException.#ctor(System.String,System.Exception)\n  langs:\n  - csharp\n  name: LockRecursionException\n  nameWithType: LockRecursionException\n  fullName: System.Threading.LockRecursionException\n  type: Class\n  assemblies:\n  - System.Threading\n  - mscorlib\n  - netstandard\n  namespace: System.Threading\n  summary: The exception that is thrown when recursive entry into a lock is not compatible with the recursion policy for the lock.\n  remarks: \"<xref:System.Threading.LockRecursionException> is thrown for several reasons, including the following:  \\n  \\n-   If a thread tries to enter an instance of <xref:System.Threading.ReaderWriterLockSlim> recursively, but the instance does not support recursion.  \\n  \\n-   If a thread tries to enter a <xref:System.Threading.ReaderWriterLockSlim> instance in write mode or upgradeable mode when the thread initially entered the lock in read mode. This represents a potential deadlock and therefore is not allowed.  \\n  \\n-   If allowing one more level of recursion would exceed the maximum value for the internal storage counter used to track recursions. This limit is so large that applications should never encounter it.\"\n  example:\n  - \"The following example shows two causes of <xref:System.Threading.LockRecursionException> when using the <xref:System.Threading.ReaderWriterLockSlim> class. The program creates a <xref:System.Threading.ReaderWriterLockSlim> by using the default constructor, which disallows recursion. The program then starts a thread that enters the lock in read mode. The thread tries to enter the lock recursively in read mode, and catches the resulting exception. Finally, the thread tries to enter write mode, which would create a potential for deadlocks. The thread catches the resulting exception.  \\n  \\n [!code-csharp[System.Threading.LockRecursionException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.LockRecursionException/cs/source.cs#1)]\\n [!code-vb[System.Threading.LockRecursionException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.LockRecursionException/vb/source.vb#1)]\"\n  syntax:\n    content: 'public class LockRecursionException : Exception'\n  inheritance:\n  - System.Object\n  - System.Exception\n  implements: []\n  inheritedMembers:\n  - System.Exception.Data\n  - System.Exception.GetBaseException\n  - System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Exception.GetType\n  - System.Exception.HelpLink\n  - System.Exception.HResult\n  - System.Exception.InnerException\n  - System.Exception.Message\n  - System.Exception.SerializeObjectState\n  - System.Exception.Source\n  - System.Exception.StackTrace\n  - System.Exception.TargetSite\n  - System.Exception.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/LockRecursionException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.LockRecursionException.#ctor\n  commentId: M:System.Threading.LockRecursionException.#ctor\n  id: '#ctor'\n  parent: System.Threading.LockRecursionException\n  langs:\n  - csharp\n  name: LockRecursionException()\n  nameWithType: LockRecursionException.LockRecursionException()\n  fullName: LockRecursionException.LockRecursionException()\n  type: Constructor\n  assemblies:\n  - System.Threading\n  - mscorlib\n  - netstandard\n  namespace: System.Threading\n  summary: Initializes a new instance of the <xref href=\"System.Threading.LockRecursionException\"></xref> class with a system-supplied message that describes the error.\n  remarks: \"This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as \\\"Recursive read lock acquisitions not allowed in this mode.\\\" This message takes the current system culture into account.  \\n  \\n The following table shows the initial property values for an instance of <xref:System.InsufficientMemoryException>.  \\n  \\n|Property|Value|  \\n|--------------|-----------|  \\n|<xref:System.Exception.InnerException%2A>|`null`.|  \\n|<xref:System.Exception.Message%2A>|The localized error message string.|\"\n  syntax:\n    content: public LockRecursionException ();\n    parameters: []\n  overload: System.Threading.LockRecursionException.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/LockRecursionException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.LockRecursionException.#ctor(System.String)\n  commentId: M:System.Threading.LockRecursionException.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Threading.LockRecursionException\n  langs:\n  - csharp\n  name: LockRecursionException(String)\n  nameWithType: LockRecursionException.LockRecursionException(String)\n  fullName: LockRecursionException.LockRecursionException(String)\n  type: Constructor\n  assemblies:\n  - System.Threading\n  - mscorlib\n  - netstandard\n  namespace: System.Threading\n  summary: Initializes a new instance of the <xref href=\"System.Threading.LockRecursionException\"></xref> class with a specified message that describes the error.\n  remarks: \"This constructor initializes the <xref:System.Exception.Message%2A?displayProperty=fullName> property of the new exception with the `message` parameter. The content of `message` is intended to be understood by humans. The caller of this constructor must make sure that this string has been localized for the current system culture.  \\n  \\n The following table shows the initial property values for an instance of <xref:System.Threading.LockRecursionException>.  \\n  \\n|Property|Value|  \\n|--------------|-----------|  \\n|<xref:System.Exception.InnerException%2A>|`null`.|  \\n|<xref:System.Exception.Message%2A>|The error message string.|\"\n  syntax:\n    content: public LockRecursionException (string message);\n    parameters:\n    - id: message\n      type: System.String\n      description: The message that describes the exception. The caller of this constructor must make sure that this string has been localized for the current system culture.\n  overload: System.Threading.LockRecursionException.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/LockRecursionException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.LockRecursionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  commentId: M:System.Threading.LockRecursionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'\n  parent: System.Threading.LockRecursionException\n  langs:\n  - csharp\n  name: LockRecursionException(SerializationInfo, StreamingContext)\n  nameWithType: LockRecursionException.LockRecursionException(SerializationInfo, StreamingContext)\n  fullName: LockRecursionException.LockRecursionException(SerializationInfo, StreamingContext)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Threading\n  namespace: System.Threading\n  summary: Initializes a new instance of the <xref href=\"System.Threading.LockRecursionException\"></xref> class with serialized data.\n  remarks: This constructor is called during deserialization to reconstitute an exception object that is transmitted over a stream. For more information, see [XML and SOAP Serialization](~/docs/framework/serialization/xml-and-soap-serialization.md).\n  syntax:\n    content: protected LockRecursionException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: The object that holds the serialized object data.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: The contextual information about the source or destination.\n  overload: System.Threading.LockRecursionException.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/LockRecursionException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.LockRecursionException.#ctor(System.String,System.Exception)\n  commentId: M:System.Threading.LockRecursionException.#ctor(System.String,System.Exception)\n  id: '#ctor(System.String,System.Exception)'\n  parent: System.Threading.LockRecursionException\n  langs:\n  - csharp\n  name: LockRecursionException(String, Exception)\n  nameWithType: LockRecursionException.LockRecursionException(String, Exception)\n  fullName: LockRecursionException.LockRecursionException(String, Exception)\n  type: Constructor\n  assemblies:\n  - System.Threading\n  - mscorlib\n  - netstandard\n  namespace: System.Threading\n  summary: Initializes a new instance of the <xref href=\"System.Threading.LockRecursionException\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception.\n  remarks: \"An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.  \\n  \\n The following table shows the initial property values for an instance of <xref:System.Threading.LockRecursionException>.  \\n  \\n|Property|Value|  \\n|--------------|-----------|  \\n|<xref:System.Exception.InnerException%2A>|The exception specified in `innerException`.|  \\n|<xref:System.Exception.Message%2A>|The error message string specified in `message`.|\"\n  syntax:\n    content: public LockRecursionException (string message, Exception innerException);\n    parameters:\n    - id: message\n      type: System.String\n      description: The message that describes the exception. The caller of this constructor must make sure that this string has been localized for the current system culture.\n    - id: innerException\n      type: System.Exception\n      description: The exception that caused the current exception. If the <code>innerException</code> parameter is not `null`, the current exception is raised in a `catch` block that handles the inner exception.\n  overload: System.Threading.LockRecursionException.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/LockRecursionException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.Threading.LockRecursionException.#ctor\n  parent: System.Threading.LockRecursionException\n  isExternal: false\n  name: LockRecursionException()\n  nameWithType: LockRecursionException.LockRecursionException()\n  fullName: LockRecursionException.LockRecursionException()\n- uid: System.Threading.LockRecursionException.#ctor(System.String)\n  parent: System.Threading.LockRecursionException\n  isExternal: false\n  name: LockRecursionException(String)\n  nameWithType: LockRecursionException.LockRecursionException(String)\n  fullName: LockRecursionException.LockRecursionException(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Threading.LockRecursionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Threading.LockRecursionException\n  isExternal: false\n  name: LockRecursionException(SerializationInfo, StreamingContext)\n  nameWithType: LockRecursionException.LockRecursionException(SerializationInfo, StreamingContext)\n  fullName: LockRecursionException.LockRecursionException(SerializationInfo, StreamingContext)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.Threading.LockRecursionException.#ctor(System.String,System.Exception)\n  parent: System.Threading.LockRecursionException\n  isExternal: false\n  name: LockRecursionException(String, Exception)\n  nameWithType: LockRecursionException.LockRecursionException(String, Exception)\n  fullName: LockRecursionException.LockRecursionException(String, Exception)\n- uid: System.Threading.LockRecursionException.#ctor*\n  parent: System.Threading.LockRecursionException\n  isExternal: false\n  name: LockRecursionException\n  nameWithType: LockRecursionException.LockRecursionException\n  fullName: LockRecursionException.LockRecursionException\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/LockRecursionException.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Exception.GetType\n  parent: System.Exception\n  isExternal: false\n  name: GetType()\n  nameWithType: Exception.GetType()\n  fullName: Exception.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Exception.ToString\n  parent: System.Exception\n  isExternal: false\n  name: ToString()\n  nameWithType: Exception.ToString()\n  fullName: Exception.ToString()\n- uid: System.Exception.Data\n  parent: System.Exception\n  isExternal: false\n  name: Data\n  nameWithType: Exception.Data\n  fullName: Exception.Data\n- uid: System.Exception.GetBaseException\n  parent: System.Exception\n  isExternal: false\n  name: GetBaseException()\n  nameWithType: Exception.GetBaseException()\n  fullName: Exception.GetBaseException()\n- uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Exception\n  isExternal: false\n  name: GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: Exception.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: Exception.GetObjectData(SerializationInfo, StreamingContext)\n- uid: System.Exception.HelpLink\n  parent: System.Exception\n  isExternal: false\n  name: HelpLink\n  nameWithType: Exception.HelpLink\n  fullName: Exception.HelpLink\n- uid: System.Exception.HResult\n  parent: System.Exception\n  isExternal: false\n  name: HResult\n  nameWithType: Exception.HResult\n  fullName: Exception.HResult\n- uid: System.Exception.InnerException\n  parent: System.Exception\n  isExternal: false\n  name: InnerException\n  nameWithType: Exception.InnerException\n  fullName: Exception.InnerException\n- uid: System.Exception.Message\n  parent: System.Exception\n  isExternal: false\n  name: Message\n  nameWithType: Exception.Message\n  fullName: Exception.Message\n- uid: System.Exception.SerializeObjectState\n  parent: System.Exception\n  isExternal: false\n  name: SerializeObjectState\n  nameWithType: Exception.SerializeObjectState\n  fullName: Exception.SerializeObjectState\n- uid: System.Exception.Source\n  parent: System.Exception\n  isExternal: false\n  name: Source\n  nameWithType: Exception.Source\n  fullName: Exception.Source\n- uid: System.Exception.StackTrace\n  parent: System.Exception\n  isExternal: false\n  name: StackTrace\n  nameWithType: Exception.StackTrace\n  fullName: Exception.StackTrace\n- uid: System.Exception.TargetSite\n  parent: System.Exception\n  isExternal: false\n  name: TargetSite\n  nameWithType: Exception.TargetSite\n  fullName: Exception.TargetSite\n"}