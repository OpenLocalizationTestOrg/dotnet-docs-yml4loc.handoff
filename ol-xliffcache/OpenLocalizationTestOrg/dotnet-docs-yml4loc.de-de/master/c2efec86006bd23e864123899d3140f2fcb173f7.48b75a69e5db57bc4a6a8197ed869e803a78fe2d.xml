{"nodes":[{"content":"Contains values passed to the ASP.NET compiler during precompilation.","nodes":[{"pos":[0,69],"content":"Contains values passed to the ASP.NET compiler during precompilation.","nodes":[{"content":"Contains values passed to the ASP.NET compiler during precompilation.","pos":[0,69]}]}],"pos":[822,892],"yaml":true},{"content":"ASP.NET Web pages and code files can be precompiled to facilitate a faster response for users and allow for the deployment of the site without deploying the source code. For more information on precompiling an ASP.NET Web site, see [ASP.NET Web Site Project Precompilation Overview](http://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a).  \n  \n The <xref:System.Web.Compilation.ClientBuildManagerParameter> class stores values that are used during precompilation. The <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> property determines how the assembly will be built. For example, you can set <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> to <xref:System.Web.Compilation.PrecompilationFlags.Clean> to recompile any previously compiled components, or set it to <xref:System.Web.Compilation.PrecompilationFlags.OverwriteTarget> to permit the resulting assembly to overwrite any components in the target directory. The <xref:System.Web.Compilation.PrecompilationFlags> enumerator has a <xref:System.FlagsAttribute> attribute that allows a bitwise combination of its member values. The <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> property can contain more than one value from the <xref:System.Web.Compilation.PrecompilationFlags> enumeration to specify a combination of precompilation behaviors.  \n  \n Either the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> property or the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> property is assigned a value to create a strong-named assembly. Both values do not need to be set to create a strong-named assembly.  \n  \n A <xref:System.Web.Compilation.ClientBuildManagerParameter> object is passed to the <xref:System.Web.Compilation.ClientBuildManager> object through the <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> constructor.","nodes":[{"pos":[0,355],"content":"ASP.NET Web pages and code files can be precompiled to facilitate a faster response for users and allow for the deployment of the site without deploying the source code. For more information on precompiling an ASP.NET Web site, see [ASP.NET Web Site Project Precompilation Overview](http://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a).","nodes":[{"content":"ASP.NET Web pages and code files can be precompiled to facilitate a faster response for users and allow for the deployment of the site without deploying the source code.","pos":[0,169]},{"content":"For more information on precompiling an ASP.NET Web site, see <bpt id=\"p1\">[</bpt>ASP.NET Web Site Project Precompilation Overview<ept id=\"p1\">](http://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a)</ept>.","pos":[170,355],"source":" For more information on precompiling an ASP.NET Web site, see [ASP.NET Web Site Project Precompilation Overview](http://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a)."}]},{"pos":[362,1413],"content":"The <xref:System.Web.Compilation.ClientBuildManagerParameter> class stores values that are used during precompilation. The <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> property determines how the assembly will be built. For example, you can set <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> to <xref:System.Web.Compilation.PrecompilationFlags.Clean> to recompile any previously compiled components, or set it to <xref:System.Web.Compilation.PrecompilationFlags.OverwriteTarget> to permit the resulting assembly to overwrite any components in the target directory. The <xref:System.Web.Compilation.PrecompilationFlags> enumerator has a <xref:System.FlagsAttribute> attribute that allows a bitwise combination of its member values. The <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> property can contain more than one value from the <xref:System.Web.Compilation.PrecompilationFlags> enumeration to specify a combination of precompilation behaviors.","nodes":[{"content":"The <xref:System.Web.Compilation.ClientBuildManagerParameter> class stores values that are used during precompilation. The <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> property determines how the assembly will be built. For example, you can set <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> to <xref:System.Web.Compilation.PrecompilationFlags.Clean> to recompile any previously compiled components, or set it to <xref:System.Web.Compilation.PrecompilationFlags.OverwriteTarget> to permit the resulting assembly to overwrite any components in the target directory. The <xref:System.Web.Compilation.PrecompilationFlags> enumerator has a <xref:System.FlagsAttribute> attribute that allows a bitwise combination of its member values. The <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> property can contain more than one value from the <xref:System.Web.Compilation.PrecompilationFlags> enumeration to specify a combination of precompilation behaviors.","pos":[0,1051],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter&gt;</ph> class stores values that are used during precompilation.","pos":[0,118],"source":"The <xref:System.Web.Compilation.ClientBuildManagerParameter> class stores values that are used during precompilation."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A&gt;</ph> property determines how the assembly will be built.","pos":[119,255],"source":" The <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> property determines how the assembly will be built."},{"content":"For example, you can set <ph id=\"ph1\">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A&gt;</ph> to <ph id=\"ph2\">&lt;xref:System.Web.Compilation.PrecompilationFlags.Clean&gt;</ph> to recompile any previously compiled components, or set it to <ph id=\"ph3\">&lt;xref:System.Web.Compilation.PrecompilationFlags.OverwriteTarget&gt;</ph> to permit the resulting assembly to overwrite any components in the target directory.","pos":[256,634],"source":" For example, you can set <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> to <xref:System.Web.Compilation.PrecompilationFlags.Clean> to recompile any previously compiled components, or set it to <xref:System.Web.Compilation.PrecompilationFlags.OverwriteTarget> to permit the resulting assembly to overwrite any components in the target directory."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Compilation.PrecompilationFlags&gt;</ph> enumerator has a <ph id=\"ph2\">&lt;xref:System.FlagsAttribute&gt;</ph> attribute that allows a bitwise combination of its member values.","pos":[635,800],"source":" The <xref:System.Web.Compilation.PrecompilationFlags> enumerator has a <xref:System.FlagsAttribute> attribute that allows a bitwise combination of its member values."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A&gt;</ph> property can contain more than one value from the <ph id=\"ph2\">&lt;xref:System.Web.Compilation.PrecompilationFlags&gt;</ph> enumeration to specify a combination of precompilation behaviors.","pos":[801,1051],"source":" The <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> property can contain more than one value from the <xref:System.Web.Compilation.PrecompilationFlags> enumeration to specify a combination of precompilation behaviors."}]}]},{"pos":[1420,1742],"content":"Either the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> property or the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> property is assigned a value to create a strong-named assembly. Both values do not need to be set to create a strong-named assembly.","nodes":[{"content":"Either the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> property or the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> property is assigned a value to create a strong-named assembly. Both values do not need to be set to create a strong-named assembly.","pos":[0,322],"nodes":[{"content":"Either the <ph id=\"ph1\">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A&gt;</ph> property or the <ph id=\"ph2\">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A&gt;</ph> property is assigned a value to create a strong-named assembly.","pos":[0,253],"source":"Either the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> property or the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> property is assigned a value to create a strong-named assembly."},{"content":"Both values do not need to be set to create a strong-named assembly.","pos":[254,322]}]}]},{"pos":[1749,1973],"content":"A <xref:System.Web.Compilation.ClientBuildManagerParameter> object is passed to the <xref:System.Web.Compilation.ClientBuildManager> object through the <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> constructor.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter&gt;</ph> object is passed to the <ph id=\"ph2\">&lt;xref:System.Web.Compilation.ClientBuildManager&gt;</ph> object through the <ph id=\"ph3\">&lt;xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A&gt;</ph> constructor.","pos":[0,224],"source":"A <xref:System.Web.Compilation.ClientBuildManagerParameter> object is passed to the <xref:System.Web.Compilation.ClientBuildManager> object through the <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> constructor."}]}],"pos":[903,2885],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Web.Compilation.ClientBuildManagerParameter\"></xref> class.","nodes":[{"pos":[0,112],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Web.Compilation.ClientBuildManagerParameter\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Web.Compilation.ClientBuildManagerParameter\"></xref> class."}],"pos":[5135,5248],"yaml":true},{"content":"This constructor does not initialize any property values. Those values must be set through the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A>, <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A>, and <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> properties after the object has been created.","nodes":[{"pos":[0,390],"content":"This constructor does not initialize any property values. Those values must be set through the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A>, <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A>, and <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> properties after the object has been created.","nodes":[{"content":"This constructor does not initialize any property values. Those values must be set through the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A>, <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A>, and <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> properties after the object has been created.","pos":[0,390],"nodes":[{"content":"This constructor does not initialize any property values.","pos":[0,57]},{"content":"Those values must be set through the <ph id=\"ph1\">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A&gt;</ph>, and <ph id=\"ph3\">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A&gt;</ph> properties after the object has been created.","pos":[58,390],"source":" Those values must be set through the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A>, <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A>, and <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> properties after the object has been created."}]}]}],"pos":[5259,5650],"yaml":true,"extradata":"MT"},{"content":"Gets or sets excluded virtual paths.","nodes":[{"pos":[0,36],"content":"Gets or sets excluded virtual paths.","nodes":[{"content":"Gets or sets excluded virtual paths.","pos":[0,36]}]}],"pos":[7673,7710],"yaml":true},{"content":"Excluded virtual paths.","nodes":[{"pos":[0,23],"content":"Excluded virtual paths.","nodes":[{"content":"Excluded virtual paths.","pos":[0,23]}]}],"pos":[7900,7924],"yaml":true},{"content":"Gets or sets the flags that determine precompilation behavior.","nodes":[{"pos":[0,62],"content":"Gets or sets the flags that determine precompilation behavior.","nodes":[{"content":"Gets or sets the flags that determine precompilation behavior.","pos":[0,62]}]}],"pos":[9094,9157],"yaml":true},{"content":"The <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> property determines how the assembly will be built. For example, you can set <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> to <xref:System.Web.Compilation.PrecompilationFlags.Clean> to recompile any previously compiled components, or set it to <xref:System.Web.Compilation.PrecompilationFlags.OverwriteTarget> to permit the resulting assembly to overwrite any components in the target directory. The <xref:System.Web.Compilation.PrecompilationFlags> enumerator has a <xref:System.FlagsAttribute> attribute that allows a bitwise combination of its member values. The <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> property can contain more than one value from the <xref:System.Web.Compilation.PrecompilationFlags> enumeration to specify a combination of precompilation behaviors.","nodes":[{"pos":[0,932],"content":"The <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> property determines how the assembly will be built. For example, you can set <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> to <xref:System.Web.Compilation.PrecompilationFlags.Clean> to recompile any previously compiled components, or set it to <xref:System.Web.Compilation.PrecompilationFlags.OverwriteTarget> to permit the resulting assembly to overwrite any components in the target directory. The <xref:System.Web.Compilation.PrecompilationFlags> enumerator has a <xref:System.FlagsAttribute> attribute that allows a bitwise combination of its member values. The <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> property can contain more than one value from the <xref:System.Web.Compilation.PrecompilationFlags> enumeration to specify a combination of precompilation behaviors.","nodes":[{"content":"The <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> property determines how the assembly will be built. For example, you can set <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> to <xref:System.Web.Compilation.PrecompilationFlags.Clean> to recompile any previously compiled components, or set it to <xref:System.Web.Compilation.PrecompilationFlags.OverwriteTarget> to permit the resulting assembly to overwrite any components in the target directory. The <xref:System.Web.Compilation.PrecompilationFlags> enumerator has a <xref:System.FlagsAttribute> attribute that allows a bitwise combination of its member values. The <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> property can contain more than one value from the <xref:System.Web.Compilation.PrecompilationFlags> enumeration to specify a combination of precompilation behaviors.","pos":[0,932],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A&gt;</ph> property determines how the assembly will be built.","pos":[0,136],"source":"The <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> property determines how the assembly will be built."},{"content":"For example, you can set <ph id=\"ph1\">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A&gt;</ph> to <ph id=\"ph2\">&lt;xref:System.Web.Compilation.PrecompilationFlags.Clean&gt;</ph> to recompile any previously compiled components, or set it to <ph id=\"ph3\">&lt;xref:System.Web.Compilation.PrecompilationFlags.OverwriteTarget&gt;</ph> to permit the resulting assembly to overwrite any components in the target directory.","pos":[137,515],"source":" For example, you can set <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> to <xref:System.Web.Compilation.PrecompilationFlags.Clean> to recompile any previously compiled components, or set it to <xref:System.Web.Compilation.PrecompilationFlags.OverwriteTarget> to permit the resulting assembly to overwrite any components in the target directory."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Compilation.PrecompilationFlags&gt;</ph> enumerator has a <ph id=\"ph2\">&lt;xref:System.FlagsAttribute&gt;</ph> attribute that allows a bitwise combination of its member values.","pos":[516,681],"source":" The <xref:System.Web.Compilation.PrecompilationFlags> enumerator has a <xref:System.FlagsAttribute> attribute that allows a bitwise combination of its member values."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A&gt;</ph> property can contain more than one value from the <ph id=\"ph2\">&lt;xref:System.Web.Compilation.PrecompilationFlags&gt;</ph> enumeration to specify a combination of precompilation behaviors.","pos":[682,932],"source":" The <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> property can contain more than one value from the <xref:System.Web.Compilation.PrecompilationFlags> enumeration to specify a combination of precompilation behaviors."}]}]}],"pos":[9168,10101],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Web.Compilation.PrecompilationFlags\"></xref> for a client build.","nodes":[{"pos":[0,87],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.Compilation.PrecompilationFlags\"&gt;&lt;/xref&gt;</ph> for a client build.","source":"The <xref href=\"System.Web.Compilation.PrecompilationFlags\"></xref> for a client build."}],"pos":[11075,11163],"yaml":true},{"content":"Gets or sets the key container used during compilation.","nodes":[{"pos":[0,55],"content":"Gets or sets the key container used during compilation.","nodes":[{"content":"Gets or sets the key container used during compilation.","pos":[0,55]}]}],"pos":[12350,12406],"yaml":true},{"content":"Either the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> property or the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> property is assigned a value to create a strong-named assembly. Both values do not need to be set to create a strong-named assembly.","nodes":[{"pos":[0,322],"content":"Either the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> property or the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> property is assigned a value to create a strong-named assembly. Both values do not need to be set to create a strong-named assembly.","nodes":[{"content":"Either the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> property or the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> property is assigned a value to create a strong-named assembly. Both values do not need to be set to create a strong-named assembly.","pos":[0,322],"nodes":[{"content":"Either the <ph id=\"ph1\">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A&gt;</ph> property or the <ph id=\"ph2\">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A&gt;</ph> property is assigned a value to create a strong-named assembly.","pos":[0,253],"source":"Either the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> property or the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> property is assigned a value to create a strong-named assembly."},{"content":"Both values do not need to be set to create a strong-named assembly.","pos":[254,322]}]}]}],"pos":[12417,12740],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> of the value for the key container.","nodes":[{"pos":[0,72],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> of the value for the key container.","source":"A <xref href=\"System.String\"></xref> of the value for the key container."}],"pos":[13567,13640],"yaml":true},{"content":"Gets or sets the key file used during compilation.","nodes":[{"pos":[0,50],"content":"Gets or sets the key file used during compilation.","nodes":[{"content":"Gets or sets the key file used during compilation.","pos":[0,50]}]}],"pos":[14800,14851],"yaml":true},{"content":"Either the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> property or the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> property is assigned a value to create a strong-named assembly. Both values do not need to be set to create a strong-named assembly.","nodes":[{"pos":[0,322],"content":"Either the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> property or the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> property is assigned a value to create a strong-named assembly. Both values do not need to be set to create a strong-named assembly.","nodes":[{"content":"Either the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> property or the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> property is assigned a value to create a strong-named assembly. Both values do not need to be set to create a strong-named assembly.","pos":[0,322],"nodes":[{"content":"Either the <ph id=\"ph1\">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A&gt;</ph> property or the <ph id=\"ph2\">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A&gt;</ph> property is assigned a value to create a strong-named assembly.","pos":[0,253],"source":"Either the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> property or the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> property is assigned a value to create a strong-named assembly."},{"content":"Both values do not need to be set to create a strong-named assembly.","pos":[254,322]}]}]}],"pos":[14862,15185],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> of the value for the key file.","nodes":[{"pos":[0,67],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> of the value for the key file.","source":"A <xref href=\"System.String\"></xref> of the value for the key file."}],"pos":[16092,16160],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Compilation.ClientBuildManagerParameter\n  commentId: T:System.Web.Compilation.ClientBuildManagerParameter\n  id: ClientBuildManagerParameter\n  children:\n  - System.Web.Compilation.ClientBuildManagerParameter.#ctor\n  - System.Web.Compilation.ClientBuildManagerParameter.ExcludedVirtualPaths\n  - System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags\n  - System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer\n  - System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile\n  langs:\n  - csharp\n  name: ClientBuildManagerParameter\n  nameWithType: ClientBuildManagerParameter\n  fullName: System.Web.Compilation.ClientBuildManagerParameter\n  type: Class\n  assemblies:\n  - System.Web\n  namespace: System.Web.Compilation\n  summary: Contains values passed to the ASP.NET compiler during precompilation.\n  remarks: \"ASP.NET Web pages and code files can be precompiled to facilitate a faster response for users and allow for the deployment of the site without deploying the source code. For more information on precompiling an ASP.NET Web site, see [ASP.NET Web Site Project Precompilation Overview](http://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a).  \\n  \\n The <xref:System.Web.Compilation.ClientBuildManagerParameter> class stores values that are used during precompilation. The <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> property determines how the assembly will be built. For example, you can set <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> to <xref:System.Web.Compilation.PrecompilationFlags.Clean> to recompile any previously compiled components, or set it to <xref:System.Web.Compilation.PrecompilationFlags.OverwriteTarget> to permit the resulting assembly to overwrite any components in the target directory. The <xref:System.Web.Compilation.PrecompilationFlags> enumerator has a <xref:System.FlagsAttribute> attribute that allows a bitwise combination of its member values. The <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> property can contain more than one value from the <xref:System.Web.Compilation.PrecompilationFlags> enumeration to specify a combination of precompilation behaviors.  \\n  \\n Either the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> property or the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> property is assigned a value to create a strong-named assembly. Both values do not need to be set to create a strong-named assembly.  \\n  \\n A <xref:System.Web.Compilation.ClientBuildManagerParameter> object is passed to the <xref:System.Web.Compilation.ClientBuildManager> object through the <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> constructor.\"\n  example:\n  - \"The following code example is part of a code example found in the <xref:System.Web.Compilation.ClientBuildManager> class overview. In the example, a <xref:System.Web.Compilation.ClientBuildManagerParameter> object is created and its values set. The resulting assembly will have a strong name based on the provided key file and will precompile according to the provided <xref:System.Web.Compilation.PrecompilationFlags> values.  \\n  \\n [!code-csharp[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/CS/source.cs#2)]\\n [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/VB/source.vb#2)]\"\n  syntax:\n    content: public class ClientBuildManagerParameter\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Compilation/ClientBuildManagerParameter.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Compilation.ClientBuildManagerParameter.#ctor\n  commentId: M:System.Web.Compilation.ClientBuildManagerParameter.#ctor\n  id: '#ctor'\n  parent: System.Web.Compilation.ClientBuildManagerParameter\n  langs:\n  - csharp\n  name: ClientBuildManagerParameter()\n  nameWithType: ClientBuildManagerParameter.ClientBuildManagerParameter()\n  fullName: ClientBuildManagerParameter.ClientBuildManagerParameter()\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.Compilation\n  summary: Initializes a new instance of the <xref href=\"System.Web.Compilation.ClientBuildManagerParameter\"></xref> class.\n  remarks: This constructor does not initialize any property values. Those values must be set through the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A>, <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A>, and <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> properties after the object has been created.\n  example:\n  - \"The following code example is part of a code example found in the <xref:System.Web.Compilation.ClientBuildManager> class overview. In the example, a <xref:System.Web.Compilation.ClientBuildManagerParameter> object is created and its values set. The resulting assembly will have a strong name based on the provided key file and will precompile according to the provided <xref:System.Web.Compilation.PrecompilationFlags> values.  \\n  \\n [!code-csharp[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/CS/source.cs#2)]\\n [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/VB/source.vb#2)]\"\n  syntax:\n    content: public ClientBuildManagerParameter ();\n    parameters: []\n  overload: System.Web.Compilation.ClientBuildManagerParameter.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Compilation/ClientBuildManagerParameter.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Compilation.ClientBuildManagerParameter.ExcludedVirtualPaths\n  commentId: P:System.Web.Compilation.ClientBuildManagerParameter.ExcludedVirtualPaths\n  id: ExcludedVirtualPaths\n  parent: System.Web.Compilation.ClientBuildManagerParameter\n  langs:\n  - csharp\n  name: ExcludedVirtualPaths\n  nameWithType: ClientBuildManagerParameter.ExcludedVirtualPaths\n  fullName: ClientBuildManagerParameter.ExcludedVirtualPaths\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Compilation\n  summary: Gets or sets excluded virtual paths.\n  syntax:\n    content: public System.Collections.Generic.List<string> ExcludedVirtualPaths { get; }\n    return:\n      type: System.Collections.Generic.List{System.String}\n      description: Excluded virtual paths.\n  overload: System.Web.Compilation.ClientBuildManagerParameter.ExcludedVirtualPaths*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Compilation/ClientBuildManagerParameter.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags\n  commentId: P:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags\n  id: PrecompilationFlags\n  parent: System.Web.Compilation.ClientBuildManagerParameter\n  langs:\n  - csharp\n  name: PrecompilationFlags\n  nameWithType: ClientBuildManagerParameter.PrecompilationFlags\n  fullName: ClientBuildManagerParameter.PrecompilationFlags\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Compilation\n  summary: Gets or sets the flags that determine precompilation behavior.\n  remarks: The <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> property determines how the assembly will be built. For example, you can set <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> to <xref:System.Web.Compilation.PrecompilationFlags.Clean> to recompile any previously compiled components, or set it to <xref:System.Web.Compilation.PrecompilationFlags.OverwriteTarget> to permit the resulting assembly to overwrite any components in the target directory. The <xref:System.Web.Compilation.PrecompilationFlags> enumerator has a <xref:System.FlagsAttribute> attribute that allows a bitwise combination of its member values. The <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> property can contain more than one value from the <xref:System.Web.Compilation.PrecompilationFlags> enumeration to specify a combination of precompilation behaviors.\n  example:\n  - \"The following code example is part of a code example found in the <xref:System.Web.Compilation.ClientBuildManager> class overview. In the example, a <xref:System.Web.Compilation.ClientBuildManagerParameter> object is created and its values set. The resulting assembly will have a strong name based on the provided key file and will precompile according to the provided <xref:System.Web.Compilation.PrecompilationFlags> values.  \\n  \\n [!code-csharp[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/CS/source.cs#2)]\\n [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/VB/source.vb#2)]\"\n  syntax:\n    content: public System.Web.Compilation.PrecompilationFlags PrecompilationFlags { get; set; }\n    return:\n      type: System.Web.Compilation.PrecompilationFlags\n      description: The <xref href=\"System.Web.Compilation.PrecompilationFlags\"></xref> for a client build.\n  overload: System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Compilation/ClientBuildManagerParameter.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer\n  commentId: P:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer\n  id: StrongNameKeyContainer\n  parent: System.Web.Compilation.ClientBuildManagerParameter\n  langs:\n  - csharp\n  name: StrongNameKeyContainer\n  nameWithType: ClientBuildManagerParameter.StrongNameKeyContainer\n  fullName: ClientBuildManagerParameter.StrongNameKeyContainer\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Compilation\n  summary: Gets or sets the key container used during compilation.\n  remarks: Either the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> property or the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> property is assigned a value to create a strong-named assembly. Both values do not need to be set to create a strong-named assembly.\n  example:\n  - \"The following code example is similar to the code example found in the <xref:System.Web.Compilation.ClientBuildManager> class overview except that the resulting assembly will have a strong name based on the provided key container. It will precompile according to the provided <xref:System.Web.Compilation.PrecompilationFlags> values.  \\n  \\n [!code-csharp[System.Web.Compilation.ClientBuildManager_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager_2/CS/source.cs#1)]\\n [!code-vb[System.Web.Compilation.ClientBuildManager_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager_2/VB/source.vb#1)]\"\n  syntax:\n    content: public string StrongNameKeyContainer { get; set; }\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> of the value for the key container.\n  overload: System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Compilation/ClientBuildManagerParameter.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile\n  commentId: P:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile\n  id: StrongNameKeyFile\n  parent: System.Web.Compilation.ClientBuildManagerParameter\n  langs:\n  - csharp\n  name: StrongNameKeyFile\n  nameWithType: ClientBuildManagerParameter.StrongNameKeyFile\n  fullName: ClientBuildManagerParameter.StrongNameKeyFile\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Compilation\n  summary: Gets or sets the key file used during compilation.\n  remarks: Either the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> property or the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> property is assigned a value to create a strong-named assembly. Both values do not need to be set to create a strong-named assembly.\n  example:\n  - \"The following code example is part of a code example found in the <xref:System.Web.Compilation.ClientBuildManager> class overview. In the example, a <xref:System.Web.Compilation.ClientBuildManagerParameter> object is created and its values set. The resulting assembly will have a strong name based on the provided key file and will precompile according to the provided <xref:System.Web.Compilation.PrecompilationFlags> values.  \\n  \\n [!code-csharp[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/CS/source.cs#2)]\\n [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/VB/source.vb#2)]\"\n  syntax:\n    content: public string StrongNameKeyFile { get; set; }\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> of the value for the key file.\n  overload: System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Compilation/ClientBuildManagerParameter.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Web.Compilation.ClientBuildManagerParameter.#ctor\n  parent: System.Web.Compilation.ClientBuildManagerParameter\n  isExternal: false\n  name: ClientBuildManagerParameter()\n  nameWithType: ClientBuildManagerParameter.ClientBuildManagerParameter()\n  fullName: ClientBuildManagerParameter.ClientBuildManagerParameter()\n- uid: System.Web.Compilation.ClientBuildManagerParameter.ExcludedVirtualPaths\n  parent: System.Web.Compilation.ClientBuildManagerParameter\n  isExternal: false\n  name: ExcludedVirtualPaths\n  nameWithType: ClientBuildManagerParameter.ExcludedVirtualPaths\n  fullName: ClientBuildManagerParameter.ExcludedVirtualPaths\n- uid: System.Collections.Generic.List`1\n  name: List<T>\n  nameWithType: List<T>\n  fullName: System.Collections.Generic.List<T>\n- uid: System.String\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Collections.Generic.List{System.String}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: List<String>\n  nameWithType: List<String>\n  fullName: System.Collections.Generic.List<System.String>\n  spec.csharp:\n  - uid: System.Collections.Generic.List`1\n    name: List\n    nameWithType: List\n    fullName: System.Collections.Generic.List\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags\n  parent: System.Web.Compilation.ClientBuildManagerParameter\n  isExternal: false\n  name: PrecompilationFlags\n  nameWithType: ClientBuildManagerParameter.PrecompilationFlags\n  fullName: ClientBuildManagerParameter.PrecompilationFlags\n- uid: System.Web.Compilation.PrecompilationFlags\n  parent: System.Web.Compilation\n  isExternal: false\n  name: PrecompilationFlags\n  nameWithType: PrecompilationFlags\n  fullName: System.Web.Compilation.PrecompilationFlags\n- uid: System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer\n  parent: System.Web.Compilation.ClientBuildManagerParameter\n  isExternal: false\n  name: StrongNameKeyContainer\n  nameWithType: ClientBuildManagerParameter.StrongNameKeyContainer\n  fullName: ClientBuildManagerParameter.StrongNameKeyContainer\n- uid: System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile\n  parent: System.Web.Compilation.ClientBuildManagerParameter\n  isExternal: false\n  name: StrongNameKeyFile\n  nameWithType: ClientBuildManagerParameter.StrongNameKeyFile\n  fullName: ClientBuildManagerParameter.StrongNameKeyFile\n- uid: System.Web.Compilation.ClientBuildManagerParameter.#ctor*\n  parent: System.Web.Compilation.ClientBuildManagerParameter\n  isExternal: false\n  name: ClientBuildManagerParameter\n  nameWithType: ClientBuildManagerParameter.ClientBuildManagerParameter\n  fullName: ClientBuildManagerParameter.ClientBuildManagerParameter\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Compilation/ClientBuildManagerParameter.xml\n- uid: System.Web.Compilation.ClientBuildManagerParameter.ExcludedVirtualPaths*\n  parent: System.Web.Compilation.ClientBuildManagerParameter\n  isExternal: false\n  name: ExcludedVirtualPaths\n  nameWithType: ClientBuildManagerParameter.ExcludedVirtualPaths\n  fullName: ClientBuildManagerParameter.ExcludedVirtualPaths\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Compilation/ClientBuildManagerParameter.xml\n- uid: System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags*\n  parent: System.Web.Compilation.ClientBuildManagerParameter\n  isExternal: false\n  name: PrecompilationFlags\n  nameWithType: ClientBuildManagerParameter.PrecompilationFlags\n  fullName: ClientBuildManagerParameter.PrecompilationFlags\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Compilation/ClientBuildManagerParameter.xml\n- uid: System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer*\n  parent: System.Web.Compilation.ClientBuildManagerParameter\n  isExternal: false\n  name: StrongNameKeyContainer\n  nameWithType: ClientBuildManagerParameter.StrongNameKeyContainer\n  fullName: ClientBuildManagerParameter.StrongNameKeyContainer\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Compilation/ClientBuildManagerParameter.xml\n- uid: System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile*\n  parent: System.Web.Compilation.ClientBuildManagerParameter\n  isExternal: false\n  name: StrongNameKeyFile\n  nameWithType: ClientBuildManagerParameter.StrongNameKeyFile\n  fullName: ClientBuildManagerParameter.StrongNameKeyFile\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Compilation/ClientBuildManagerParameter.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}