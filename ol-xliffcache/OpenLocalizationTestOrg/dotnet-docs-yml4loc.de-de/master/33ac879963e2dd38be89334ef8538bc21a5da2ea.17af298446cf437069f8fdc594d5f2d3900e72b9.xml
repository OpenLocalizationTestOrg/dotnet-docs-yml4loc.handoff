{"nodes":[{"content":"Controls the marshaling behavior of a delegate signature passed as an unmanaged function pointer to or from unmanaged code. This class cannot be inherited.","nodes":[{"pos":[0,155],"content":"Controls the marshaling behavior of a delegate signature passed as an unmanaged function pointer to or from unmanaged code. This class cannot be inherited.","nodes":[{"content":"Controls the marshaling behavior of a delegate signature passed as an unmanaged function pointer to or from unmanaged code. This class cannot be inherited.","pos":[0,155],"nodes":[{"content":"Controls the marshaling behavior of a delegate signature passed as an unmanaged function pointer to or from unmanaged code.","pos":[0,123]},{"content":"This class cannot be inherited.","pos":[124,155]}]}]}],"pos":[1122,1278],"yaml":true},{"content":"The fields of the <xref:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute> attribute control various aspects of the transition of a delegate to an unmanaged function pointer, and are the same as the fields with identical names in the <xref:System.Runtime.InteropServices.DllImportAttribute> attribute. These fields are optional, but if you do not specify a field name, <xref:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute> is ignored.  \n  \n For more information about using attributes, see [Attributes](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87).","nodes":[{"pos":[0,467],"content":"The fields of the <xref:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute> attribute control various aspects of the transition of a delegate to an unmanaged function pointer, and are the same as the fields with identical names in the <xref:System.Runtime.InteropServices.DllImportAttribute> attribute. These fields are optional, but if you do not specify a field name, <xref:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute> is ignored.","nodes":[{"content":"The fields of the <xref:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute> attribute control various aspects of the transition of a delegate to an unmanaged function pointer, and are the same as the fields with identical names in the <xref:System.Runtime.InteropServices.DllImportAttribute> attribute. These fields are optional, but if you do not specify a field name, <xref:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute> is ignored.","pos":[0,467],"nodes":[{"content":"The fields of the <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute&gt;</ph> attribute control various aspects of the transition of a delegate to an unmanaged function pointer, and are the same as the fields with identical names in the <ph id=\"ph2\">&lt;xref:System.Runtime.InteropServices.DllImportAttribute&gt;</ph> attribute.","pos":[0,316],"source":"The fields of the <xref:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute> attribute control various aspects of the transition of a delegate to an unmanaged function pointer, and are the same as the fields with identical names in the <xref:System.Runtime.InteropServices.DllImportAttribute> attribute."},{"content":"These fields are optional, but if you do not specify a field name, <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute&gt;</ph> is ignored.","pos":[317,467],"source":" These fields are optional, but if you do not specify a field name, <xref:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute> is ignored."}]}]},{"pos":[474,608],"content":"For more information about using attributes, see <bpt id=\"p1\">[</bpt>Attributes<ept id=\"p1\">](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87)</ept>.","source":"For more information about using attributes, see [Attributes](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87)."}],"pos":[1289,1902],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute\"></xref> class with the specified calling convention.","nodes":[{"pos":[0,164],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute\"&gt;&lt;/xref&gt;</ph> class with the specified calling convention.","source":"Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute\"></xref> class with the specified calling convention."}],"pos":[7891,8056],"yaml":true},{"content":"This method specifies the calling convention for the delegate in unmanaged code and is the most common use of the <xref:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute> attribute. You can set the `callingConvention` parameter to one of the values in the <xref:System.Runtime.InteropServices.CallingConvention> enumeration.","nodes":[{"pos":[0,339],"content":"This method specifies the calling convention for the delegate in unmanaged code and is the most common use of the <xref:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute> attribute. You can set the `callingConvention` parameter to one of the values in the <xref:System.Runtime.InteropServices.CallingConvention> enumeration.","nodes":[{"content":"This method specifies the calling convention for the delegate in unmanaged code and is the most common use of the <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute&gt;</ph> attribute.","pos":[0,196],"source":"This method specifies the calling convention for the delegate in unmanaged code and is the most common use of the <xref:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute> attribute."},{"content":"You can set the <ph id=\"ph1\">`callingConvention`</ph> parameter to one of the values in the <ph id=\"ph2\">&lt;xref:System.Runtime.InteropServices.CallingConvention&gt;</ph> enumeration.","pos":[197,339],"source":" You can set the `callingConvention` parameter to one of the values in the <xref:System.Runtime.InteropServices.CallingConvention> enumeration."}]}],"pos":[8067,8407],"yaml":true,"extradata":"MT"},{"content":"The specified calling convention.","nodes":[{"pos":[0,33],"content":"The specified calling convention.","nodes":[{"content":"The specified calling convention.","pos":[0,33]}]}],"pos":[8665,8699],"yaml":true},{"content":"Enables or disables best-fit mapping behavior when converting Unicode characters to ANSI characters.","nodes":[{"pos":[0,100],"content":"Enables or disables best-fit mapping behavior when converting Unicode characters to ANSI characters.","nodes":[{"content":"Enables or disables best-fit mapping behavior when converting Unicode characters to ANSI characters.","pos":[0,100]}]}],"pos":[10459,10560],"yaml":true},{"content":"The <xref:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.BestFitMapping> field is `true` by default, which means that best-fit mapping behavior is enabled. If the field is `false`, best-fit mapping is disabled. Settings for this field override any level settings for the <xref:System.Runtime.InteropServices.BestFitMappingAttribute> attribute.  \n  \n For more information, see <xref:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping>.","nodes":[{"pos":[0,361],"content":"The <xref:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.BestFitMapping> field is `true` by default, which means that best-fit mapping behavior is enabled. If the field is `false`, best-fit mapping is disabled. Settings for this field override any level settings for the <xref:System.Runtime.InteropServices.BestFitMappingAttribute> attribute.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.BestFitMapping&gt;</ph> field is <ph id=\"ph2\">`true`</ph> by default, which means that best-fit mapping behavior is enabled.","pos":[0,173],"source":"The <xref:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.BestFitMapping> field is `true` by default, which means that best-fit mapping behavior is enabled."},{"content":"If the field is <ph id=\"ph1\">`false`</ph>, best-fit mapping is disabled.","pos":[174,228],"source":" If the field is `false`, best-fit mapping is disabled."},{"content":"Settings for this field override any level settings for the <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.BestFitMappingAttribute&gt;</ph> attribute.","pos":[229,361],"source":" Settings for this field override any level settings for the <xref:System.Runtime.InteropServices.BestFitMappingAttribute> attribute."}]},{"pos":[368,466],"content":"For more information, see <xref:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping>.","nodes":[{"content":"For more information, see <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping&gt;</ph>.","pos":[0,98],"source":"For more information, see <xref:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping>."}]}],"pos":[10571,11042],"yaml":true,"extradata":"MT"},{"content":"Gets the value of the calling convention.","nodes":[{"pos":[0,41],"content":"Gets the value of the calling convention.","nodes":[{"content":"Gets the value of the calling convention.","pos":[0,41]}]}],"pos":[12851,12893],"yaml":true},{"content":"The value of the calling convention specified by the <xref href=\"System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.#ctor(System.Runtime.InteropServices.CallingConvention)\"></xref> constructor.","nodes":[{"pos":[0,207],"content":"The value of the calling convention specified by the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.#ctor(System.Runtime.InteropServices.CallingConvention)\"&gt;&lt;/xref&gt;</ph> constructor.","source":"The value of the calling convention specified by the <xref href=\"System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.#ctor(System.Runtime.InteropServices.CallingConvention)\"></xref> constructor."}],"pos":[13091,13299],"yaml":true},{"content":"Indicates how to marshal string parameters to the method, and controls name mangling.","nodes":[{"pos":[0,85],"content":"Indicates how to marshal string parameters to the method, and controls name mangling.","nodes":[{"content":"Indicates how to marshal string parameters to the method, and controls name mangling.","pos":[0,85]}]}],"pos":[15029,15115],"yaml":true},{"content":"Use this field with a member of the <xref:System.Runtime.InteropServices.CharSet> enumeration to specify the marshaling behavior of string parameters and to specify which entry-point name to invoke (the exact name given or a name ending with \"A\" or \"W\").  \n  \n For more information, see <xref:System.Runtime.InteropServices.DllImportAttribute.CharSet>.","nodes":[{"pos":[0,254],"content":"Use this field with a member of the <xref:System.Runtime.InteropServices.CharSet> enumeration to specify the marshaling behavior of string parameters and to specify which entry-point name to invoke (the exact name given or a name ending with \"A\" or \"W\").","nodes":[{"content":"Use this field with a member of the <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.CharSet&gt;</ph> enumeration to specify the marshaling behavior of string parameters and to specify which entry-point name to invoke (the exact name given or a name ending with \"A\" or \"W\").","pos":[0,254],"source":"Use this field with a member of the <xref:System.Runtime.InteropServices.CharSet> enumeration to specify the marshaling behavior of string parameters and to specify which entry-point name to invoke (the exact name given or a name ending with \"A\" or \"W\")."}]},{"pos":[261,352],"content":"For more information, see <xref:System.Runtime.InteropServices.DllImportAttribute.CharSet>.","nodes":[{"content":"For more information, see <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.DllImportAttribute.CharSet&gt;</ph>.","pos":[0,91],"source":"For more information, see <xref:System.Runtime.InteropServices.DllImportAttribute.CharSet>."}]}],"pos":[15126,15487],"yaml":true,"extradata":"MT"},{"content":"Indicates whether the callee calls the `SetLastError` Win32 API function before returning from the attributed method.","nodes":[{"pos":[0,117],"content":"Indicates whether the callee calls the <ph id=\"ph1\">`SetLastError`</ph> Win32 API function before returning from the attributed method.","source":"Indicates whether the callee calls the `SetLastError` Win32 API function before returning from the attributed method."}],"pos":[17314,17432],"yaml":true},{"content":"The <xref:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.SetLastError> field is `false` by default, which means the caller calls `SetLastError`. Set this field to `true` to indicate that the callee calls `SetLastError` before returning from the attributed method.  \n  \n For more information, see <xref:System.Runtime.InteropServices.DllImportAttribute.SetLastError>.","nodes":[{"pos":[0,281],"content":"The <xref:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.SetLastError> field is `false` by default, which means the caller calls `SetLastError`. Set this field to `true` to indicate that the callee calls `SetLastError` before returning from the attributed method.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.SetLastError&gt;</ph> field is <ph id=\"ph2\">`false`</ph> by default, which means the caller calls <ph id=\"ph3\">`SetLastError`</ph>.","pos":[0,162],"source":"The <xref:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.SetLastError> field is `false` by default, which means the caller calls `SetLastError`."},{"content":"Set this field to <ph id=\"ph1\">`true`</ph> to indicate that the callee calls <ph id=\"ph2\">`SetLastError`</ph> before returning from the attributed method.","pos":[163,281],"source":" Set this field to `true` to indicate that the callee calls `SetLastError` before returning from the attributed method."}]},{"pos":[288,384],"content":"For more information, see <xref:System.Runtime.InteropServices.DllImportAttribute.SetLastError>.","nodes":[{"content":"For more information, see <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.DllImportAttribute.SetLastError&gt;</ph>.","pos":[0,96],"source":"For more information, see <xref:System.Runtime.InteropServices.DllImportAttribute.SetLastError>."}]}],"pos":[17443,17832],"yaml":true,"extradata":"MT"},{"content":"Enables or disables the throwing of an exception on an unmappable Unicode character that is converted to an ANSI \"?\" character.","nodes":[{"pos":[0,127],"content":"Enables or disables the throwing of an exception on an unmappable Unicode character that is converted to an ANSI \"?\" character.","nodes":[{"content":"Enables or disables the throwing of an exception on an unmappable Unicode character that is converted to an ANSI \"?\" character.","pos":[0,127]}]}],"pos":[19660,19788],"yaml":true},{"content":"The <xref:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.ThrowOnUnmappableChar> field is `false` by default, which means that the field is disabled. Set this field to `true` to indicate that an exception is thrown each time the interop marshaler converts an unmappable character.  \n  \n For more information, see <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar>.","nodes":[{"pos":[0,297],"content":"The <xref:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.ThrowOnUnmappableChar> field is `false` by default, which means that the field is disabled. Set this field to `true` to indicate that an exception is thrown each time the interop marshaler converts an unmappable character.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.ThrowOnUnmappableChar&gt;</ph> field is <ph id=\"ph2\">`false`</ph> by default, which means that the field is disabled.","pos":[0,166],"source":"The <xref:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.ThrowOnUnmappableChar> field is `false` by default, which means that the field is disabled."},{"content":"Set this field to <ph id=\"ph1\">`true`</ph> to indicate that an exception is thrown each time the interop marshaler converts an unmappable character.","pos":[167,297],"source":" Set this field to `true` to indicate that an exception is thrown each time the interop marshaler converts an unmappable character."}]},{"pos":[304,409],"content":"For more information, see <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar>.","nodes":[{"content":"For more information, see <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar&gt;</ph>.","pos":[0,105],"source":"For more information, see <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar>."}]}],"pos":[19799,20213],"yaml":true,"extradata":"MT"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute\n  commentId: T:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute\n  id: UnmanagedFunctionPointerAttribute\n  children:\n  - System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.#ctor(System.Runtime.InteropServices.CallingConvention)\n  - System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.BestFitMapping\n  - System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.CallingConvention\n  - System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.CharSet\n  - System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.SetLastError\n  - System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.ThrowOnUnmappableChar\n  langs:\n  - csharp\n  name: UnmanagedFunctionPointerAttribute\n  nameWithType: UnmanagedFunctionPointerAttribute\n  fullName: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute\n  type: Class\n  assemblies:\n  - System.Runtime.InteropServices\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: Controls the marshaling behavior of a delegate signature passed as an unmanaged function pointer to or from unmanaged code. This class cannot be inherited.\n  remarks: \"The fields of the <xref:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute> attribute control various aspects of the transition of a delegate to an unmanaged function pointer, and are the same as the fields with identical names in the <xref:System.Runtime.InteropServices.DllImportAttribute> attribute. These fields are optional, but if you do not specify a field name, <xref:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute> is ignored.  \\n  \\n For more information about using attributes, see [Attributes](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87).\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Delegate, AllowMultiple=false, Inherited=false)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class UnmanagedFunctionPointerAttribute : Attribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  implements: []\n  inheritedMembers:\n  - System.Attribute.Equals(System.Object)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetHashCode\n  - System.Attribute.IsDefaultAttribute\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.Match(System.Object)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Attribute.TypeId\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.AttributeUsageAttribute\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/UnmanagedFunctionPointerAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.#ctor(System.Runtime.InteropServices.CallingConvention)\n  commentId: M:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.#ctor(System.Runtime.InteropServices.CallingConvention)\n  id: '#ctor(System.Runtime.InteropServices.CallingConvention)'\n  parent: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute\n  langs:\n  - csharp\n  name: UnmanagedFunctionPointerAttribute(CallingConvention)\n  nameWithType: UnmanagedFunctionPointerAttribute.UnmanagedFunctionPointerAttribute(CallingConvention)\n  fullName: UnmanagedFunctionPointerAttribute.UnmanagedFunctionPointerAttribute(CallingConvention)\n  type: Constructor\n  assemblies:\n  - System.Runtime.InteropServices\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute\"></xref> class with the specified calling convention.\n  remarks: This method specifies the calling convention for the delegate in unmanaged code and is the most common use of the <xref:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute> attribute. You can set the `callingConvention` parameter to one of the values in the <xref:System.Runtime.InteropServices.CallingConvention> enumeration.\n  syntax:\n    content: public UnmanagedFunctionPointerAttribute (System.Runtime.InteropServices.CallingConvention callingConvention);\n    parameters:\n    - id: callingConvention\n      type: System.Runtime.InteropServices.CallingConvention\n      description: The specified calling convention.\n  overload: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/UnmanagedFunctionPointerAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.BestFitMapping\n  commentId: F:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.BestFitMapping\n  id: BestFitMapping\n  parent: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute\n  langs:\n  - csharp\n  name: BestFitMapping\n  nameWithType: UnmanagedFunctionPointerAttribute.BestFitMapping\n  fullName: UnmanagedFunctionPointerAttribute.BestFitMapping\n  type: Field\n  assemblies:\n  - System.Runtime.InteropServices\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: Enables or disables best-fit mapping behavior when converting Unicode characters to ANSI characters.\n  remarks: \"The <xref:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.BestFitMapping> field is `true` by default, which means that best-fit mapping behavior is enabled. If the field is `false`, best-fit mapping is disabled. Settings for this field override any level settings for the <xref:System.Runtime.InteropServices.BestFitMappingAttribute> attribute.  \\n  \\n For more information, see <xref:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping>.\"\n  syntax:\n    content: public bool BestFitMapping;\n    return:\n      type: System.Boolean\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/UnmanagedFunctionPointerAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.CallingConvention\n  commentId: P:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.CallingConvention\n  id: CallingConvention\n  parent: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute\n  langs:\n  - csharp\n  name: CallingConvention\n  nameWithType: UnmanagedFunctionPointerAttribute.CallingConvention\n  fullName: UnmanagedFunctionPointerAttribute.CallingConvention\n  type: Property\n  assemblies:\n  - System.Runtime.InteropServices\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: Gets the value of the calling convention.\n  syntax:\n    content: public System.Runtime.InteropServices.CallingConvention CallingConvention { get; }\n    return:\n      type: System.Runtime.InteropServices.CallingConvention\n      description: The value of the calling convention specified by the <xref href=\"System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.#ctor(System.Runtime.InteropServices.CallingConvention)\"></xref> constructor.\n  overload: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.CallingConvention*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/UnmanagedFunctionPointerAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.CharSet\n  commentId: F:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.CharSet\n  id: CharSet\n  parent: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute\n  langs:\n  - csharp\n  name: CharSet\n  nameWithType: UnmanagedFunctionPointerAttribute.CharSet\n  fullName: UnmanagedFunctionPointerAttribute.CharSet\n  type: Field\n  assemblies:\n  - System.Runtime.InteropServices\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: Indicates how to marshal string parameters to the method, and controls name mangling.\n  remarks: \"Use this field with a member of the <xref:System.Runtime.InteropServices.CharSet> enumeration to specify the marshaling behavior of string parameters and to specify which entry-point name to invoke (the exact name given or a name ending with \\\"A\\\" or \\\"W\\\").  \\n  \\n For more information, see <xref:System.Runtime.InteropServices.DllImportAttribute.CharSet>.\"\n  syntax:\n    content: public System.Runtime.InteropServices.CharSet CharSet;\n    return:\n      type: System.Runtime.InteropServices.CharSet\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/UnmanagedFunctionPointerAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.SetLastError\n  commentId: F:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.SetLastError\n  id: SetLastError\n  parent: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute\n  langs:\n  - csharp\n  name: SetLastError\n  nameWithType: UnmanagedFunctionPointerAttribute.SetLastError\n  fullName: UnmanagedFunctionPointerAttribute.SetLastError\n  type: Field\n  assemblies:\n  - System.Runtime.InteropServices\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: Indicates whether the callee calls the `SetLastError` Win32 API function before returning from the attributed method.\n  remarks: \"The <xref:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.SetLastError> field is `false` by default, which means the caller calls `SetLastError`. Set this field to `true` to indicate that the callee calls `SetLastError` before returning from the attributed method.  \\n  \\n For more information, see <xref:System.Runtime.InteropServices.DllImportAttribute.SetLastError>.\"\n  syntax:\n    content: public bool SetLastError;\n    return:\n      type: System.Boolean\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/UnmanagedFunctionPointerAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.ThrowOnUnmappableChar\n  commentId: F:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.ThrowOnUnmappableChar\n  id: ThrowOnUnmappableChar\n  parent: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute\n  langs:\n  - csharp\n  name: ThrowOnUnmappableChar\n  nameWithType: UnmanagedFunctionPointerAttribute.ThrowOnUnmappableChar\n  fullName: UnmanagedFunctionPointerAttribute.ThrowOnUnmappableChar\n  type: Field\n  assemblies:\n  - System.Runtime.InteropServices\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: Enables or disables the throwing of an exception on an unmappable Unicode character that is converted to an ANSI \"?\" character.\n  remarks: \"The <xref:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.ThrowOnUnmappableChar> field is `false` by default, which means that the field is disabled. Set this field to `true` to indicate that an exception is thrown each time the interop marshaler converts an unmappable character.  \\n  \\n For more information, see <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar>.\"\n  syntax:\n    content: public bool ThrowOnUnmappableChar;\n    return:\n      type: System.Boolean\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/UnmanagedFunctionPointerAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Attribute\n  parent: System\n  isExternal: false\n  name: Attribute\n  nameWithType: Attribute\n  fullName: System.Attribute\n- uid: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.#ctor(System.Runtime.InteropServices.CallingConvention)\n  parent: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute\n  isExternal: false\n  name: UnmanagedFunctionPointerAttribute(CallingConvention)\n  nameWithType: UnmanagedFunctionPointerAttribute.UnmanagedFunctionPointerAttribute(CallingConvention)\n  fullName: UnmanagedFunctionPointerAttribute.UnmanagedFunctionPointerAttribute(CallingConvention)\n- uid: System.Runtime.InteropServices.CallingConvention\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: CallingConvention\n  nameWithType: CallingConvention\n  fullName: System.Runtime.InteropServices.CallingConvention\n- uid: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.BestFitMapping\n  parent: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute\n  isExternal: false\n  name: BestFitMapping\n  nameWithType: UnmanagedFunctionPointerAttribute.BestFitMapping\n  fullName: UnmanagedFunctionPointerAttribute.BestFitMapping\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.CallingConvention\n  parent: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute\n  isExternal: false\n  name: CallingConvention\n  nameWithType: UnmanagedFunctionPointerAttribute.CallingConvention\n  fullName: UnmanagedFunctionPointerAttribute.CallingConvention\n- uid: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.CharSet\n  parent: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute\n  isExternal: false\n  name: CharSet\n  nameWithType: UnmanagedFunctionPointerAttribute.CharSet\n  fullName: UnmanagedFunctionPointerAttribute.CharSet\n- uid: System.Runtime.InteropServices.CharSet\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: CharSet\n  nameWithType: CharSet\n  fullName: System.Runtime.InteropServices.CharSet\n- uid: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.SetLastError\n  parent: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute\n  isExternal: false\n  name: SetLastError\n  nameWithType: UnmanagedFunctionPointerAttribute.SetLastError\n  fullName: UnmanagedFunctionPointerAttribute.SetLastError\n- uid: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.ThrowOnUnmappableChar\n  parent: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute\n  isExternal: false\n  name: ThrowOnUnmappableChar\n  nameWithType: UnmanagedFunctionPointerAttribute.ThrowOnUnmappableChar\n  fullName: UnmanagedFunctionPointerAttribute.ThrowOnUnmappableChar\n- uid: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.#ctor*\n  parent: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute\n  isExternal: false\n  name: UnmanagedFunctionPointerAttribute\n  nameWithType: UnmanagedFunctionPointerAttribute.UnmanagedFunctionPointerAttribute\n  fullName: UnmanagedFunctionPointerAttribute.UnmanagedFunctionPointerAttribute\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/UnmanagedFunctionPointerAttribute.xml\n- uid: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.CallingConvention*\n  parent: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute\n  isExternal: false\n  name: CallingConvention\n  nameWithType: UnmanagedFunctionPointerAttribute.CallingConvention\n  fullName: UnmanagedFunctionPointerAttribute.CallingConvention\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/UnmanagedFunctionPointerAttribute.xml\n- uid: System.Attribute.Equals(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Attribute.Equals(Object)\n  fullName: Attribute.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Attribute.GetHashCode\n  parent: System.Attribute\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Attribute.GetHashCode()\n  fullName: Attribute.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type)\n  fullName: Attribute.GetCustomAttribute(Module, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type)\n  fullName: Attribute.GetCustomAttributes(Module, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module)\n  nameWithType: Attribute.GetCustomAttributes(Module)\n  fullName: Attribute.GetCustomAttributes(Module)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo)\n  fullName: Attribute.GetCustomAttributes(MemberInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly)\n  nameWithType: Attribute.GetCustomAttributes(Assembly)\n  fullName: Attribute.GetCustomAttributes(Assembly)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type)\n- uid: System.Attribute.IsDefaultAttribute\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefaultAttribute()\n  nameWithType: Attribute.IsDefaultAttribute()\n  fullName: Attribute.IsDefaultAttribute()\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Module, Type, Boolean)\n  fullName: Attribute.IsDefined(Module, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(MemberInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)\n  fullName: Attribute.IsDefined(Assembly, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type)\n  fullName: Attribute.IsDefined(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type)\n  nameWithType: Attribute.IsDefined(Module, Type)\n  fullName: Attribute.IsDefined(Module, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type)\n  nameWithType: Attribute.IsDefined(Assembly, Type)\n  fullName: Attribute.IsDefined(Assembly, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type)\n  fullName: Attribute.IsDefined(ParameterInfo, Type)\n- uid: System.Attribute.Match(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Match(Object)\n  nameWithType: Attribute.Match(Object)\n  fullName: Attribute.Match(Object)\n- uid: System.Attribute.TypeId\n  parent: System.Attribute\n  isExternal: false\n  name: TypeId\n  nameWithType: Attribute.TypeId\n  fullName: Attribute.TypeId\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfoCount(UInt32)\n  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)\n  fullName: Attribute._Attribute.GetTypeInfoCount(UInt32)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n"}