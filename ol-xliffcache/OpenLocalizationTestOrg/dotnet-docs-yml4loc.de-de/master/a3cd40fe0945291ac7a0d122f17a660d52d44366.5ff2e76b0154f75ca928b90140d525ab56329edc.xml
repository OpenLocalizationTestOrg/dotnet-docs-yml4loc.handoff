{"nodes":[{"content":"Uses the Windows 2000 and Windows NT access format to specify a set of common access rights that Message Queuing maps to both standard and object-specific access rights for reading, writing, and executing.","nodes":[{"pos":[0,205],"content":"Uses the Windows 2000 and Windows NT access format to specify a set of common access rights that Message Queuing maps to both standard and object-specific access rights for reading, writing, and executing.","nodes":[{"content":"Uses the Windows 2000 and Windows NT access format to specify a set of common access rights that Message Queuing maps to both standard and object-specific access rights for reading, writing, and executing.","pos":[0,205]}]}],"pos":[625,831],"yaml":true},{"content":"The <xref:System.Messaging.GenericAccessRights> enumeration provides less detail in what you can specify, but is typically simpler than specifying all the corresponding standard and specific rights. Each object type can map generic access rights to a set of standard (common to most types of securable objects) and object-specific rights.  \n  \n For example, giving a user Read and Write access to a message queue enables sending, peeking, and receiving messages from a queue. However, for finer access rights control, you can use the <xref:System.Messaging.StandardAccessRights> and the <xref:System.Messaging.MessageQueueAccessRights> enumeration to specify, for example, that a user can peek but not receive messages, can delete queues or messages, or can set queue properties.","nodes":[{"pos":[0,338],"content":"The <xref:System.Messaging.GenericAccessRights> enumeration provides less detail in what you can specify, but is typically simpler than specifying all the corresponding standard and specific rights. Each object type can map generic access rights to a set of standard (common to most types of securable objects) and object-specific rights.","nodes":[{"content":"The <xref:System.Messaging.GenericAccessRights> enumeration provides less detail in what you can specify, but is typically simpler than specifying all the corresponding standard and specific rights. Each object type can map generic access rights to a set of standard (common to most types of securable objects) and object-specific rights.","pos":[0,338],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Messaging.GenericAccessRights&gt;</ph> enumeration provides less detail in what you can specify, but is typically simpler than specifying all the corresponding standard and specific rights.","pos":[0,198],"source":"The <xref:System.Messaging.GenericAccessRights> enumeration provides less detail in what you can specify, but is typically simpler than specifying all the corresponding standard and specific rights."},{"content":"Each object type can map generic access rights to a set of standard (common to most types of securable objects) and object-specific rights.","pos":[199,338]}]}]},{"pos":[345,779],"content":"For example, giving a user Read and Write access to a message queue enables sending, peeking, and receiving messages from a queue. However, for finer access rights control, you can use the <xref:System.Messaging.StandardAccessRights> and the <xref:System.Messaging.MessageQueueAccessRights> enumeration to specify, for example, that a user can peek but not receive messages, can delete queues or messages, or can set queue properties.","nodes":[{"content":"For example, giving a user Read and Write access to a message queue enables sending, peeking, and receiving messages from a queue. However, for finer access rights control, you can use the <xref:System.Messaging.StandardAccessRights> and the <xref:System.Messaging.MessageQueueAccessRights> enumeration to specify, for example, that a user can peek but not receive messages, can delete queues or messages, or can set queue properties.","pos":[0,434],"nodes":[{"content":"For example, giving a user Read and Write access to a message queue enables sending, peeking, and receiving messages from a queue.","pos":[0,130]},{"content":"However, for finer access rights control, you can use the <ph id=\"ph1\">&lt;xref:System.Messaging.StandardAccessRights&gt;</ph> and the <ph id=\"ph2\">&lt;xref:System.Messaging.MessageQueueAccessRights&gt;</ph> enumeration to specify, for example, that a user can peek but not receive messages, can delete queues or messages, or can set queue properties.","pos":[131,434],"source":" However, for finer access rights control, you can use the <xref:System.Messaging.StandardAccessRights> and the <xref:System.Messaging.MessageQueueAccessRights> enumeration to specify, for example, that a user can peek but not receive messages, can delete queues or messages, or can set queue properties."}]}]}],"pos":[842,1626],"yaml":true,"extradata":"MT"},{"content":"Read, write, and execute access.","nodes":[{"pos":[0,32],"content":"Read, write, and execute access.","nodes":[{"content":"Read, write, and execute access.","pos":[0,32]}]}],"pos":[2720,2753],"yaml":true},{"content":"Execute access.","nodes":[{"pos":[0,15],"content":"Execute access.","nodes":[{"content":"Execute access.","pos":[0,15]}]}],"pos":[3741,3757],"yaml":true},{"content":"No access.","nodes":[{"pos":[0,10],"content":"No access.","nodes":[{"content":"No access.","pos":[0,10]}]}],"pos":[4731,4742],"yaml":true},{"content":"Read access.","nodes":[{"pos":[0,12],"content":"Read access.","nodes":[{"content":"Read access.","pos":[0,12]}]}],"pos":[5713,5726],"yaml":true},{"content":"Write access.","nodes":[{"pos":[0,13],"content":"Write access.","nodes":[{"content":"Write access.","pos":[0,13]}]}],"pos":[6703,6717],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Messaging.GenericAccessRights\n  commentId: T:System.Messaging.GenericAccessRights\n  id: GenericAccessRights\n  children:\n  - System.Messaging.GenericAccessRights.All\n  - System.Messaging.GenericAccessRights.Execute\n  - System.Messaging.GenericAccessRights.None\n  - System.Messaging.GenericAccessRights.Read\n  - System.Messaging.GenericAccessRights.Write\n  langs:\n  - csharp\n  name: GenericAccessRights\n  nameWithType: GenericAccessRights\n  fullName: System.Messaging.GenericAccessRights\n  type: Enum\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Uses the Windows 2000 and Windows NT access format to specify a set of common access rights that Message Queuing maps to both standard and object-specific access rights for reading, writing, and executing.\n  remarks: \"The <xref:System.Messaging.GenericAccessRights> enumeration provides less detail in what you can specify, but is typically simpler than specifying all the corresponding standard and specific rights. Each object type can map generic access rights to a set of standard (common to most types of securable objects) and object-specific rights.  \\n  \\n For example, giving a user Read and Write access to a message queue enables sending, peeking, and receiving messages from a queue. However, for finer access rights control, you can use the <xref:System.Messaging.StandardAccessRights> and the <xref:System.Messaging.MessageQueueAccessRights> enumeration to specify, for example, that a user can peek but not receive messages, can delete queues or messages, or can set queue properties.\"\n  syntax:\n    content: >-\n      [System.Flags]\n\n      public enum GenericAccessRights\n  inheritance:\n  - System.Object\n  - System.ValueType\n  - System.Enum\n  attributes:\n  - type: System.FlagsAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/GenericAccessRights.xml\n  ms.technology:\n  - dotnet-standard\n  manager: tyoung\n- uid: System.Messaging.GenericAccessRights.All\n  commentId: F:System.Messaging.GenericAccessRights.All\n  id: All\n  parent: System.Messaging.GenericAccessRights\n  langs:\n  - csharp\n  name: All\n  nameWithType: GenericAccessRights.All\n  fullName: GenericAccessRights.All\n  type: Field\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Read, write, and execute access.\n  syntax:\n    content: All\n    return:\n      type: System.Messaging.GenericAccessRights\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/GenericAccessRights.xml\n- uid: System.Messaging.GenericAccessRights.Execute\n  commentId: F:System.Messaging.GenericAccessRights.Execute\n  id: Execute\n  parent: System.Messaging.GenericAccessRights\n  langs:\n  - csharp\n  name: Execute\n  nameWithType: GenericAccessRights.Execute\n  fullName: GenericAccessRights.Execute\n  type: Field\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Execute access.\n  syntax:\n    content: Execute\n    return:\n      type: System.Messaging.GenericAccessRights\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/GenericAccessRights.xml\n- uid: System.Messaging.GenericAccessRights.None\n  commentId: F:System.Messaging.GenericAccessRights.None\n  id: None\n  parent: System.Messaging.GenericAccessRights\n  langs:\n  - csharp\n  name: None\n  nameWithType: GenericAccessRights.None\n  fullName: GenericAccessRights.None\n  type: Field\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: No access.\n  syntax:\n    content: None\n    return:\n      type: System.Messaging.GenericAccessRights\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/GenericAccessRights.xml\n- uid: System.Messaging.GenericAccessRights.Read\n  commentId: F:System.Messaging.GenericAccessRights.Read\n  id: Read\n  parent: System.Messaging.GenericAccessRights\n  langs:\n  - csharp\n  name: Read\n  nameWithType: GenericAccessRights.Read\n  fullName: GenericAccessRights.Read\n  type: Field\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Read access.\n  syntax:\n    content: Read\n    return:\n      type: System.Messaging.GenericAccessRights\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/GenericAccessRights.xml\n- uid: System.Messaging.GenericAccessRights.Write\n  commentId: F:System.Messaging.GenericAccessRights.Write\n  id: Write\n  parent: System.Messaging.GenericAccessRights\n  langs:\n  - csharp\n  name: Write\n  nameWithType: GenericAccessRights.Write\n  fullName: GenericAccessRights.Write\n  type: Field\n  assemblies:\n  - System.Messaging\n  namespace: System.Messaging\n  summary: Write access.\n  syntax:\n    content: Write\n    return:\n      type: System.Messaging.GenericAccessRights\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/GenericAccessRights.xml\nreferences:\n- uid: System.Enum\n  parent: System\n  isExternal: false\n  name: Enum\n  nameWithType: Enum\n  fullName: System.Enum\n- uid: System.Messaging.GenericAccessRights.All\n  parent: System.Messaging.GenericAccessRights\n  isExternal: false\n  name: All\n  nameWithType: GenericAccessRights.All\n  fullName: GenericAccessRights.All\n- uid: System.Messaging.GenericAccessRights\n  parent: System.Messaging\n  isExternal: false\n  name: GenericAccessRights\n  nameWithType: GenericAccessRights\n  fullName: System.Messaging.GenericAccessRights\n- uid: System.Messaging.GenericAccessRights.Execute\n  parent: System.Messaging.GenericAccessRights\n  isExternal: false\n  name: Execute\n  nameWithType: GenericAccessRights.Execute\n  fullName: GenericAccessRights.Execute\n- uid: System.Messaging.GenericAccessRights.None\n  parent: System.Messaging.GenericAccessRights\n  isExternal: false\n  name: None\n  nameWithType: GenericAccessRights.None\n  fullName: GenericAccessRights.None\n- uid: System.Messaging.GenericAccessRights.Read\n  parent: System.Messaging.GenericAccessRights\n  isExternal: false\n  name: Read\n  nameWithType: GenericAccessRights.Read\n  fullName: GenericAccessRights.Read\n- uid: System.Messaging.GenericAccessRights.Write\n  parent: System.Messaging.GenericAccessRights\n  isExternal: false\n  name: Write\n  nameWithType: GenericAccessRights.Write\n  fullName: GenericAccessRights.Write\n"}