{"nodes":[{"content":"An immutable class that implements the basic functionality for the Query, Insert, Update, Delete, and function invocation command tree types.","nodes":[{"pos":[0,141],"content":"An immutable class that implements the basic functionality for the Query, Insert, Update, Delete, and function invocation command tree types.","nodes":[{"content":"An immutable class that implements the basic functionality for the Query, Insert, Update, Delete, and function invocation command tree types.","pos":[0,141]}]}],"pos":[480,622],"yaml":true},{"content":"A <xref:System.Data.Common.CommandTrees.DbCommandTree> is an abstract class that is used to represent queries, Data Manipulation Language (DML) operations and function/procedure invocations.","nodes":[{"pos":[0,190],"content":"A <xref:System.Data.Common.CommandTrees.DbCommandTree> is an abstract class that is used to represent queries, Data Manipulation Language (DML) operations and function/procedure invocations.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Data.Common.CommandTrees.DbCommandTree&gt;</ph> is an abstract class that is used to represent queries, Data Manipulation Language (DML) operations and function/procedure invocations.","pos":[0,190],"source":"A <xref:System.Data.Common.CommandTrees.DbCommandTree> is an abstract class that is used to represent queries, Data Manipulation Language (DML) operations and function/procedure invocations."}]}],"pos":[633,824],"yaml":true,"extradata":"MT"},{"content":"Gets the name and corresponding type of each parameter that can be referenced within this <xref href=\"System.Data.Common.CommandTrees.DbCommandTree\"></xref>.","nodes":[{"pos":[0,157],"content":"Gets the name and corresponding type of each parameter that can be referenced within this <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbCommandTree\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the name and corresponding type of each parameter that can be referenced within this <xref href=\"System.Data.Common.CommandTrees.DbCommandTree\"></xref>."}],"pos":[2403,2561],"yaml":true},{"content":"The name and corresponding type of each parameter that can be referenced within this <xref href=\"System.Data.Common.CommandTrees.DbCommandTree\"></xref>.","nodes":[{"pos":[0,152],"content":"The name and corresponding type of each parameter that can be referenced within this <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbCommandTree\"&gt;&lt;/xref&gt;</ph>.","source":"The name and corresponding type of each parameter that can be referenced within this <xref href=\"System.Data.Common.CommandTrees.DbCommandTree\"></xref>."}],"pos":[2907,3060],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Common.CommandTrees.DbCommandTree\n  commentId: T:System.Data.Common.CommandTrees.DbCommandTree\n  id: DbCommandTree\n  children:\n  - System.Data.Common.CommandTrees.DbCommandTree.Parameters\n  langs:\n  - csharp\n  name: DbCommandTree\n  nameWithType: DbCommandTree\n  fullName: System.Data.Common.CommandTrees.DbCommandTree\n  type: Class\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: An immutable class that implements the basic functionality for the Query, Insert, Update, Delete, and function invocation command tree types.\n  remarks: A <xref:System.Data.Common.CommandTrees.DbCommandTree> is an abstract class that is used to represent queries, Data Manipulation Language (DML) operations and function/procedure invocations.\n  syntax:\n    content: public abstract class DbCommandTree\n  inheritance:\n  - System.Object\n  derivedClasses:\n  - System.Data.Common.CommandTrees.DbFunctionCommandTree\n  - System.Data.Common.CommandTrees.DbModificationCommandTree\n  - System.Data.Common.CommandTrees.DbQueryCommandTree\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DbCommandTree.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.DbCommandTree.Parameters\n  commentId: P:System.Data.Common.CommandTrees.DbCommandTree.Parameters\n  id: Parameters\n  parent: System.Data.Common.CommandTrees.DbCommandTree\n  langs:\n  - csharp\n  name: Parameters\n  nameWithType: DbCommandTree.Parameters\n  fullName: DbCommandTree.Parameters\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  summary: Gets the name and corresponding type of each parameter that can be referenced within this <xref href=\"System.Data.Common.CommandTrees.DbCommandTree\"></xref>.\n  syntax:\n    content: public System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,System.Data.Metadata.Edm.TypeUsage>> Parameters { get; }\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Metadata.Edm.TypeUsage}}\n      description: The name and corresponding type of each parameter that can be referenced within this <xref href=\"System.Data.Common.CommandTrees.DbCommandTree\"></xref>.\n  overload: System.Data.Common.CommandTrees.DbCommandTree.Parameters*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DbCommandTree.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Data.Common.CommandTrees.DbCommandTree.Parameters\n  parent: System.Data.Common.CommandTrees.DbCommandTree\n  isExternal: false\n  name: Parameters\n  nameWithType: DbCommandTree.Parameters\n  fullName: DbCommandTree.Parameters\n- uid: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Collections.Generic.KeyValuePair`2\n  name: KeyValuePair<TKey,TValue>\n  nameWithType: KeyValuePair<TKey,TValue>\n  fullName: System.Collections.Generic.KeyValuePair<TKey,TValue>\n- uid: System.String\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.Metadata.Edm.TypeUsage\n  name: TypeUsage\n  nameWithType: TypeUsage\n  fullName: System.Data.Metadata.Edm.TypeUsage\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Metadata.Edm.TypeUsage}}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<KeyValuePair<String,TypeUsage>>\n  nameWithType: IEnumerable<KeyValuePair<String,TypeUsage>>\n  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Data.Metadata.Edm.TypeUsage>>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    nameWithType: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Data.Metadata.Edm.TypeUsage\n    name: TypeUsage\n    nameWithType: TypeUsage\n    fullName: System.Data.Metadata.Edm.TypeUsage\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Common.CommandTrees.DbCommandTree.Parameters*\n  parent: System.Data.Common.CommandTrees.DbCommandTree\n  isExternal: false\n  name: Parameters\n  nameWithType: DbCommandTree.Parameters\n  fullName: DbCommandTree.Parameters\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees/DbCommandTree.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}