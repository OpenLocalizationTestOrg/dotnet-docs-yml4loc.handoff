{"nodes":[{"content":"Provides a property and methods for writing event and exception information to the application's log listeners.","nodes":[{"pos":[0,111],"content":"Provides a property and methods for writing event and exception information to the application's log listeners.","nodes":[{"content":"Provides a property and methods for writing event and exception information to the application's log listeners.","pos":[0,111]}]}],"pos":[564,676],"yaml":true},{"content":"The `My.Application.Log` object provides a straightforward entry point from which to access the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]'s logging services. The `WriteEntry` and `WriteException` methods write messages to the application's log listeners. The listeners can be configured by the application's configuration file. For more information, see [Walkthrough: Changing Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md) and [Working with Application Logs](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md).  \n  \n The `My.Application.Log` object is available only for client applications. For Web applications, use `My.Log`. For more information, see <xref:Microsoft.VisualBasic.Logging.Log?displayProperty=fullName>.  \n  \n The following table lists examples of tasks involving the `My.Application.Log` object.  \n  \n|To|See|  \n|--------|---------|  \n|Write event information to the application's log listeners|[How to: Write Log Messages](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md)|  \n|Write exception information to the application's log listeners|[How to: Log Exceptions](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md)|  \n|Determine where `My.Application.Log` writes information|[Walkthrough: Determining Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)|","nodes":[{"pos":[0,687],"content":"The `My.Application.Log` object provides a straightforward entry point from which to access the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]'s logging services. The `WriteEntry` and `WriteException` methods write messages to the application's log listeners. The listeners can be configured by the application's configuration file. For more information, see [Walkthrough: Changing Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md) and [Working with Application Logs](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md).","nodes":[{"content":"The <ph id=\"ph1\">`My.Application.Log`</ph> object provides a straightforward entry point from which to access the <ph id=\"ph2\">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>'s logging services.","pos":[0,169],"source":"The `My.Application.Log` object provides a straightforward entry point from which to access the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]'s logging services."},{"content":"The <ph id=\"ph1\">`WriteEntry`</ph> and <ph id=\"ph2\">`WriteException`</ph> methods write messages to the application's log listeners.","pos":[170,266],"source":" The `WriteEntry` and `WriteException` methods write messages to the application's log listeners."},{"content":"The listeners can be configured by the application's configuration file.","pos":[267,339]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Walkthrough: Changing Where My.Application.Log Writes Information<ept id=\"p1\">](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md)</ept> and <bpt id=\"p2\">[</bpt>Working with Application Logs<ept id=\"p2\">](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md)</ept>.","pos":[340,687],"source":" For more information, see [Walkthrough: Changing Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md) and [Working with Application Logs](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md)."}]},{"pos":[694,897],"content":"The `My.Application.Log` object is available only for client applications. For Web applications, use `My.Log`. For more information, see <xref:Microsoft.VisualBasic.Logging.Log?displayProperty=fullName>.","nodes":[{"content":"The <ph id=\"ph1\">`My.Application.Log`</ph> object is available only for client applications.","pos":[0,74],"source":"The `My.Application.Log` object is available only for client applications."},{"content":"For Web applications, use <ph id=\"ph1\">`My.Log`</ph>.","pos":[75,110],"source":" For Web applications, use `My.Log`."},{"content":"For more information, see <ph id=\"ph1\">&lt;xref:Microsoft.VisualBasic.Logging.Log?displayProperty=fullName&gt;</ph>.","pos":[111,203],"source":" For more information, see <xref:Microsoft.VisualBasic.Logging.Log?displayProperty=fullName>."}]},{"pos":[904,990],"content":"The following table lists examples of tasks involving the <ph id=\"ph1\">`My.Application.Log`</ph> object.","source":"The following table lists examples of tasks involving the `My.Application.Log` object."},{"pos":[997,999],"content":"To","nodes":[{"content":"To","pos":[0,2]}]},{"pos":[1000,1003],"content":"See","nodes":[{"content":"See","pos":[0,3]}]},{"pos":[1031,1089],"content":"Write event information to the application's log listeners","nodes":[{"content":"Write event information to the application's log listeners","pos":[0,58]}]},{"pos":[1090,1205],"content":"<bpt id=\"p1\">[</bpt>How to: Write Log Messages<ept id=\"p1\">](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md)</ept>","source":"[How to: Write Log Messages](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md)"},{"pos":[1210,1272],"content":"Write exception information to the application's log listeners","nodes":[{"content":"Write exception information to the application's log listeners","pos":[0,62]}]},{"pos":[1273,1380],"content":"<bpt id=\"p1\">[</bpt>How to: Log Exceptions<ept id=\"p1\">](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md)</ept>","source":"[How to: Log Exceptions](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md)"},{"pos":[1385,1440],"content":"Determine where <ph id=\"ph1\">`My.Application.Log`</ph> writes information","source":"Determine where `My.Application.Log` writes information"},{"pos":[1441,1640],"content":"<bpt id=\"p1\">[</bpt>Walkthrough: Determining Where My.Application.Log Writes Information<ept id=\"p1\">](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)</ept>","source":"[Walkthrough: Determining Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)"}],"pos":[687,2341],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"Microsoft.VisualBasic.Logging.AspLog\"></xref> class.","nodes":[{"pos":[0,98],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"Microsoft.VisualBasic.Logging.AspLog\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"Microsoft.VisualBasic.Logging.AspLog\"></xref> class."}],"pos":[4787,4886],"yaml":true},{"content":"The `My.Log` object provides a straightforward entry point from which to access the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]'s logging services. The `WriteEntry` and `WriteException` methods write messages to the application's log listeners. The listeners can be configured by the application's configuration file. For more information, see [Walkthrough: Changing Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md) and [Working with Application Logs](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md).","nodes":[{"pos":[0,675],"content":"The `My.Log` object provides a straightforward entry point from which to access the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]'s logging services. The `WriteEntry` and `WriteException` methods write messages to the application's log listeners. The listeners can be configured by the application's configuration file. For more information, see [Walkthrough: Changing Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md) and [Working with Application Logs](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md).","nodes":[{"content":"The <ph id=\"ph1\">`My.Log`</ph> object provides a straightforward entry point from which to access the <ph id=\"ph2\">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>'s logging services.","pos":[0,157],"source":"The `My.Log` object provides a straightforward entry point from which to access the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]'s logging services."},{"content":"The <ph id=\"ph1\">`WriteEntry`</ph> and <ph id=\"ph2\">`WriteException`</ph> methods write messages to the application's log listeners.","pos":[158,254],"source":" The `WriteEntry` and `WriteException` methods write messages to the application's log listeners."},{"content":"The listeners can be configured by the application's configuration file.","pos":[255,327]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Walkthrough: Changing Where My.Application.Log Writes Information<ept id=\"p1\">](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md)</ept> and <bpt id=\"p2\">[</bpt>Working with Application Logs<ept id=\"p2\">](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md)</ept>.","pos":[328,675],"source":" For more information, see [Walkthrough: Changing Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md) and [Working with Application Logs](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md)."}]}],"pos":[4897,5575],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"Microsoft.VisualBasic.Logging.AspLog\"></xref> class.","nodes":[{"pos":[0,98],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"Microsoft.VisualBasic.Logging.AspLog\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"Microsoft.VisualBasic.Logging.AspLog\"></xref> class."}],"pos":[6650,6749],"yaml":true},{"content":"The `My.Log` object provides a straightforward entry point from which to access the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]'s logging services. The `WriteEntry` and `WriteException` methods write messages to the application's log listeners. The listeners can be configured by the application's configuration file. For more information, see [Walkthrough: Changing Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md) and [Working with Application Logs](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md).","nodes":[{"pos":[0,675],"content":"The `My.Log` object provides a straightforward entry point from which to access the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]'s logging services. The `WriteEntry` and `WriteException` methods write messages to the application's log listeners. The listeners can be configured by the application's configuration file. For more information, see [Walkthrough: Changing Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md) and [Working with Application Logs](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md).","nodes":[{"content":"The <ph id=\"ph1\">`My.Log`</ph> object provides a straightforward entry point from which to access the <ph id=\"ph2\">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>'s logging services.","pos":[0,157],"source":"The `My.Log` object provides a straightforward entry point from which to access the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]'s logging services."},{"content":"The <ph id=\"ph1\">`WriteEntry`</ph> and <ph id=\"ph2\">`WriteException`</ph> methods write messages to the application's log listeners.","pos":[158,254],"source":" The `WriteEntry` and `WriteException` methods write messages to the application's log listeners."},{"content":"The listeners can be configured by the application's configuration file.","pos":[255,327]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Walkthrough: Changing Where My.Application.Log Writes Information<ept id=\"p1\">](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md)</ept> and <bpt id=\"p2\">[</bpt>Working with Application Logs<ept id=\"p2\">](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md)</ept>.","pos":[328,675],"source":" For more information, see [Walkthrough: Changing Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md) and [Working with Application Logs](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md)."}]}],"pos":[6760,7438],"yaml":true,"extradata":"MT"},{"content":"<xref href=\"System.String\"></xref>. The name to give to the <xref href=\"Microsoft.VisualBasic.Logging.Log.TraceSource\"></xref> property object.","nodes":[{"pos":[0,143],"content":"<xref href=\"System.String\"></xref>. The name to give to the <xref href=\"Microsoft.VisualBasic.Logging.Log.TraceSource\"></xref> property object.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph>.","pos":[0,35],"source":"<xref href=\"System.String\"></xref>."},{"content":"The name to give to the <ph id=\"ph1\">&lt;xref href=\"Microsoft.VisualBasic.Logging.Log.TraceSource\"&gt;&lt;/xref&gt;</ph> property object.","pos":[36,143],"source":" The name to give to the <xref href=\"Microsoft.VisualBasic.Logging.Log.TraceSource\"></xref> property object."}]}],"pos":[7566,7710],"yaml":true},{"content":"Creates a new <xref href=\"Microsoft.VisualBasic.Logging.FileLogTraceListener\"></xref> and adds it to the <xref href=\"System.Diagnostics.TraceSource.Listeners\"></xref> collection.","nodes":[{"pos":[0,178],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"Microsoft.VisualBasic.Logging.FileLogTraceListener\"&gt;&lt;/xref&gt;</ph> and adds it to the <ph id=\"ph2\">&lt;xref href=\"System.Diagnostics.TraceSource.Listeners\"&gt;&lt;/xref&gt;</ph> collection.","source":"Creates a new <xref href=\"Microsoft.VisualBasic.Logging.FileLogTraceListener\"></xref> and adds it to the <xref href=\"System.Diagnostics.TraceSource.Listeners\"></xref> collection."}],"pos":[8885,9064],"yaml":true},{"content":"This method creates a new <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>, sets its name to `FileLog`, and configures it to log messages with severity level <xref:System.Diagnostics.SourceLevels.Information> and greater. The new <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> object is then added to the <xref:System.Diagnostics.TraceSource.Listeners%2A> collection.  \n  \n The <xref:Microsoft.VisualBasic.Logging.Log.%23ctor%2A> calls the method if the <xref:Microsoft.VisualBasic.Logging.Log.TraceSource%2A> property has not been configured. The trace source can be configured in the application's configuration file.","nodes":[{"pos":[0,387],"content":"This method creates a new <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>, sets its name to `FileLog`, and configures it to log messages with severity level <xref:System.Diagnostics.SourceLevels.Information> and greater. The new <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> object is then added to the <xref:System.Diagnostics.TraceSource.Listeners%2A> collection.","nodes":[{"content":"This method creates a new <ph id=\"ph1\">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph>, sets its name to <ph id=\"ph2\">`FileLog`</ph>, and configures it to log messages with severity level <ph id=\"ph3\">&lt;xref:System.Diagnostics.SourceLevels.Information&gt;</ph> and greater.","pos":[0,230],"source":"This method creates a new <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>, sets its name to `FileLog`, and configures it to log messages with severity level <xref:System.Diagnostics.SourceLevels.Information> and greater."},{"content":"The new <ph id=\"ph1\">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> object is then added to the <ph id=\"ph2\">&lt;xref:System.Diagnostics.TraceSource.Listeners%2A&gt;</ph> collection.","pos":[231,387],"source":" The new <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> object is then added to the <xref:System.Diagnostics.TraceSource.Listeners%2A> collection."}]},{"pos":[394,639],"content":"The <xref:Microsoft.VisualBasic.Logging.Log.%23ctor%2A> calls the method if the <xref:Microsoft.VisualBasic.Logging.Log.TraceSource%2A> property has not been configured. The trace source can be configured in the application's configuration file.","nodes":[{"content":"The <xref:Microsoft.VisualBasic.Logging.Log.%23ctor%2A> calls the method if the <xref:Microsoft.VisualBasic.Logging.Log.TraceSource%2A> property has not been configured. The trace source can be configured in the application's configuration file.","pos":[0,245],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:Microsoft.VisualBasic.Logging.Log.%23ctor%2A&gt;</ph> calls the method if the <ph id=\"ph2\">&lt;xref:Microsoft.VisualBasic.Logging.Log.TraceSource%2A&gt;</ph> property has not been configured.","pos":[0,169],"source":"The <xref:Microsoft.VisualBasic.Logging.Log.%23ctor%2A> calls the method if the <xref:Microsoft.VisualBasic.Logging.Log.TraceSource%2A> property has not been configured."},{"content":"The trace source can be configured in the application's configuration file.","pos":[170,245]}]}]}],"pos":[9075,9719],"yaml":true,"extradata":"MT"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.VisualBasic.Logging.AspLog\n  commentId: T:Microsoft.VisualBasic.Logging.AspLog\n  id: AspLog\n  children:\n  - Microsoft.VisualBasic.Logging.AspLog.#ctor\n  - Microsoft.VisualBasic.Logging.AspLog.#ctor(System.String)\n  - Microsoft.VisualBasic.Logging.AspLog.InitializeWithDefaultsSinceNoConfigExists\n  langs:\n  - csharp\n  name: AspLog\n  nameWithType: AspLog\n  fullName: Microsoft.VisualBasic.Logging.AspLog\n  type: Class\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Logging\n  summary: Provides a property and methods for writing event and exception information to the application's log listeners.\n  remarks: \"The `My.Application.Log` object provides a straightforward entry point from which to access the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]'s logging services. The `WriteEntry` and `WriteException` methods write messages to the application's log listeners. The listeners can be configured by the application's configuration file. For more information, see [Walkthrough: Changing Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md) and [Working with Application Logs](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md).  \\n  \\n The `My.Application.Log` object is available only for client applications. For Web applications, use `My.Log`. For more information, see <xref:Microsoft.VisualBasic.Logging.Log?displayProperty=fullName>.  \\n  \\n The following table lists examples of tasks involving the `My.Application.Log` object.  \\n  \\n|To|See|  \\n|--------|---------|  \\n|Write event information to the application's log listeners|[How to: Write Log Messages](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md)|  \\n|Write exception information to the application's log listeners|[How to: Log Exceptions](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md)|  \\n|Determine where `My.Application.Log` writes information|[Walkthrough: Determining Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)|\"\n  example:\n  - \"This example shows how to use the `My.Application.Log.WriteEntry` method to log tracing information. For more information, see [How to: Write Log Messages](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md).  \\n  \\n [!code-vb[VbVbalrMyApplicationLog#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplicationLog/VB/Form1.vb#11)]\"\n  syntax:\n    content: 'public class AspLog : Microsoft.VisualBasic.Logging.Log'\n  inheritance:\n  - System.Object\n  - Microsoft.VisualBasic.Logging.Log\n  implements: []\n  inheritedMembers:\n  - Microsoft.VisualBasic.Logging.Log.DefaultFileLogWriter\n  - Microsoft.VisualBasic.Logging.Log.TraceSource\n  - Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)\n  - Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)\n  - Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)\n  - Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)\n  - Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)\n  - Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Logging/AspLog.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.Logging.AspLog.#ctor\n  commentId: M:Microsoft.VisualBasic.Logging.AspLog.#ctor\n  id: '#ctor'\n  parent: Microsoft.VisualBasic.Logging.AspLog\n  langs:\n  - csharp\n  name: AspLog()\n  nameWithType: AspLog.AspLog()\n  fullName: AspLog.AspLog()\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Logging\n  summary: Initializes a new instance of the <xref href=\"Microsoft.VisualBasic.Logging.AspLog\"></xref> class.\n  remarks: \"The `My.Log` object provides a straightforward entry point from which to access the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]'s logging services. The `WriteEntry` and `WriteException` methods write messages to the application's log listeners. The listeners can be configured by the application's configuration file. For more information, see [Walkthrough: Changing Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md) and [Working with Application Logs](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md).\"\n  syntax:\n    content: public AspLog ();\n    parameters: []\n  overload: Microsoft.VisualBasic.Logging.AspLog.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Logging/AspLog.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.Logging.AspLog.#ctor(System.String)\n  commentId: M:Microsoft.VisualBasic.Logging.AspLog.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: Microsoft.VisualBasic.Logging.AspLog\n  langs:\n  - csharp\n  name: AspLog(String)\n  nameWithType: AspLog.AspLog(String)\n  fullName: AspLog.AspLog(String)\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Logging\n  summary: Initializes a new instance of the <xref href=\"Microsoft.VisualBasic.Logging.AspLog\"></xref> class.\n  remarks: \"The `My.Log` object provides a straightforward entry point from which to access the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]'s logging services. The `WriteEntry` and `WriteException` methods write messages to the application's log listeners. The listeners can be configured by the application's configuration file. For more information, see [Walkthrough: Changing Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md) and [Working with Application Logs](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md).\"\n  syntax:\n    content: public AspLog (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: <xref href=\"System.String\"></xref>. The name to give to the <xref href=\"Microsoft.VisualBasic.Logging.Log.TraceSource\"></xref> property object.\n  overload: Microsoft.VisualBasic.Logging.AspLog.#ctor*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Logging/AspLog.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.Logging.AspLog.InitializeWithDefaultsSinceNoConfigExists\n  commentId: M:Microsoft.VisualBasic.Logging.AspLog.InitializeWithDefaultsSinceNoConfigExists\n  id: InitializeWithDefaultsSinceNoConfigExists\n  parent: Microsoft.VisualBasic.Logging.AspLog\n  langs:\n  - csharp\n  name: InitializeWithDefaultsSinceNoConfigExists()\n  nameWithType: AspLog.InitializeWithDefaultsSinceNoConfigExists()\n  fullName: AspLog.InitializeWithDefaultsSinceNoConfigExists()\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Logging\n  summary: Creates a new <xref href=\"Microsoft.VisualBasic.Logging.FileLogTraceListener\"></xref> and adds it to the <xref href=\"System.Diagnostics.TraceSource.Listeners\"></xref> collection.\n  remarks: \"This method creates a new <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>, sets its name to `FileLog`, and configures it to log messages with severity level <xref:System.Diagnostics.SourceLevels.Information> and greater. The new <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> object is then added to the <xref:System.Diagnostics.TraceSource.Listeners%2A> collection.  \\n  \\n The <xref:Microsoft.VisualBasic.Logging.Log.%23ctor%2A> calls the method if the <xref:Microsoft.VisualBasic.Logging.Log.TraceSource%2A> property has not been configured. The trace source can be configured in the application's configuration file.\"\n  syntax:\n    content: protected override void InitializeWithDefaultsSinceNoConfigExists ();\n    parameters: []\n  overload: Microsoft.VisualBasic.Logging.AspLog.InitializeWithDefaultsSinceNoConfigExists*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Logging/AspLog.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: Microsoft.VisualBasic.Logging.Log\n  parent: Microsoft.VisualBasic.Logging\n  isExternal: false\n  name: Log\n  nameWithType: Log\n  fullName: Microsoft.VisualBasic.Logging.Log\n- uid: Microsoft.VisualBasic.Logging.AspLog.#ctor\n  parent: Microsoft.VisualBasic.Logging.AspLog\n  isExternal: false\n  name: AspLog()\n  nameWithType: AspLog.AspLog()\n  fullName: AspLog.AspLog()\n- uid: Microsoft.VisualBasic.Logging.AspLog.#ctor(System.String)\n  parent: Microsoft.VisualBasic.Logging.AspLog\n  isExternal: false\n  name: AspLog(String)\n  nameWithType: AspLog.AspLog(String)\n  fullName: AspLog.AspLog(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: Microsoft.VisualBasic.Logging.AspLog.InitializeWithDefaultsSinceNoConfigExists\n  parent: Microsoft.VisualBasic.Logging.AspLog\n  isExternal: false\n  name: InitializeWithDefaultsSinceNoConfigExists()\n  nameWithType: AspLog.InitializeWithDefaultsSinceNoConfigExists()\n  fullName: AspLog.InitializeWithDefaultsSinceNoConfigExists()\n- uid: Microsoft.VisualBasic.Logging.AspLog.#ctor*\n  parent: Microsoft.VisualBasic.Logging.AspLog\n  isExternal: false\n  name: AspLog\n  nameWithType: AspLog.AspLog\n  fullName: AspLog.AspLog\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Logging/AspLog.xml\n- uid: Microsoft.VisualBasic.Logging.AspLog.InitializeWithDefaultsSinceNoConfigExists*\n  parent: Microsoft.VisualBasic.Logging.AspLog\n  isExternal: false\n  name: InitializeWithDefaultsSinceNoConfigExists\n  nameWithType: AspLog.InitializeWithDefaultsSinceNoConfigExists\n  fullName: AspLog.InitializeWithDefaultsSinceNoConfigExists\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Logging/AspLog.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: Microsoft.VisualBasic.Logging.Log.DefaultFileLogWriter\n  parent: Microsoft.VisualBasic.Logging.Log\n  isExternal: false\n  name: DefaultFileLogWriter\n  nameWithType: Log.DefaultFileLogWriter\n  fullName: Log.DefaultFileLogWriter\n- uid: Microsoft.VisualBasic.Logging.Log.TraceSource\n  parent: Microsoft.VisualBasic.Logging.Log\n  isExternal: false\n  name: TraceSource\n  nameWithType: Log.TraceSource\n  fullName: Log.TraceSource\n- uid: Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)\n  parent: Microsoft.VisualBasic.Logging.Log\n  isExternal: false\n  name: WriteEntry(String)\n  nameWithType: Log.WriteEntry(String)\n  fullName: Log.WriteEntry(String)\n- uid: Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)\n  parent: Microsoft.VisualBasic.Logging.Log\n  isExternal: false\n  name: WriteEntry(String, TraceEventType)\n  nameWithType: Log.WriteEntry(String, TraceEventType)\n  fullName: Log.WriteEntry(String, TraceEventType)\n- uid: Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)\n  parent: Microsoft.VisualBasic.Logging.Log\n  isExternal: false\n  name: WriteEntry(String, TraceEventType, Int32)\n  nameWithType: Log.WriteEntry(String, TraceEventType, Int32)\n  fullName: Log.WriteEntry(String, TraceEventType, Int32)\n- uid: Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)\n  parent: Microsoft.VisualBasic.Logging.Log\n  isExternal: false\n  name: WriteException(Exception)\n  nameWithType: Log.WriteException(Exception)\n  fullName: Log.WriteException(Exception)\n- uid: Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)\n  parent: Microsoft.VisualBasic.Logging.Log\n  isExternal: false\n  name: WriteException(Exception, TraceEventType, String)\n  nameWithType: Log.WriteException(Exception, TraceEventType, String)\n  fullName: Log.WriteException(Exception, TraceEventType, String)\n- uid: Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)\n  parent: Microsoft.VisualBasic.Logging.Log\n  isExternal: false\n  name: WriteException(Exception, TraceEventType, String, Int32)\n  nameWithType: Log.WriteException(Exception, TraceEventType, String, Int32)\n  fullName: Log.WriteException(Exception, TraceEventType, String, Int32)\n"}