{"nodes":[{"content":"Represents a generic array of <xref href=\"System.AddIn.Contract.IContract\"></xref> objects.","nodes":[{"pos":[0,91],"content":"Represents a generic array of <ph id=\"ph1\">&lt;xref href=\"System.AddIn.Contract.IContract\"&gt;&lt;/xref&gt;</ph> objects.","source":"Represents a generic array of <xref href=\"System.AddIn.Contract.IContract\"></xref> objects."}],"pos":[676,768],"yaml":true},{"content":"Use an <xref:System.AddIn.Contract.Collections.IArrayContract%601> to pass an array of <xref:System.AddIn.Contract.IContract> objects between contracts by reference.  \n  \n An <xref:System.AddIn.Contract.Collections.IArrayContract%601> does not dynamically resize itself.","nodes":[{"pos":[0,165],"content":"Use an <xref:System.AddIn.Contract.Collections.IArrayContract%601> to pass an array of <xref:System.AddIn.Contract.IContract> objects between contracts by reference.","nodes":[{"content":"Use an <ph id=\"ph1\">&lt;xref:System.AddIn.Contract.Collections.IArrayContract%601&gt;</ph> to pass an array of <ph id=\"ph2\">&lt;xref:System.AddIn.Contract.IContract&gt;</ph> objects between contracts by reference.","pos":[0,165],"source":"Use an <xref:System.AddIn.Contract.Collections.IArrayContract%601> to pass an array of <xref:System.AddIn.Contract.IContract> objects between contracts by reference."}]},{"pos":[172,270],"content":"An <xref:System.AddIn.Contract.Collections.IArrayContract%601> does not dynamically resize itself.","nodes":[{"content":"An <ph id=\"ph1\">&lt;xref:System.AddIn.Contract.Collections.IArrayContract%601&gt;</ph> does not dynamically resize itself.","pos":[0,98],"source":"An <xref:System.AddIn.Contract.Collections.IArrayContract%601> does not dynamically resize itself."}]}],"pos":[779,1054],"yaml":true,"extradata":"MT"},{"content":"The type of elements in the array. <code>C</code> must implement the <xref href=\"System.AddIn.Contract.IContract\"></xref> interface.","nodes":[{"pos":[0,132],"content":"The type of elements in the array. <code>C</code> must implement the <xref href=\"System.AddIn.Contract.IContract\"></xref> interface.","nodes":[{"content":"The type of elements in the array.","pos":[0,34]},{"content":"<bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">C</ph><ept id=\"p1\">&lt;/code&gt;</ept> must implement the <ph id=\"ph2\">&lt;xref href=\"System.AddIn.Contract.IContract\"&gt;&lt;/xref&gt;</ph> interface.","pos":[35,132],"source":"<code>C</code> must implement the <xref href=\"System.AddIn.Contract.IContract\"></xref> interface."}]}],"pos":[1244,1377],"yaml":true},{"content":"Returns the number of elements contained in the <xref href=\"System.AddIn.Contract.Collections.IArrayContract`1\"></xref>.","nodes":[{"pos":[0,120],"content":"Returns the number of elements contained in the <ph id=\"ph1\">&lt;xref href=\"System.AddIn.Contract.Collections.IArrayContract`1\"&gt;&lt;/xref&gt;</ph>.","source":"Returns the number of elements contained in the <xref href=\"System.AddIn.Contract.Collections.IArrayContract`1\"></xref>."}],"pos":[2459,2580],"yaml":true},{"content":"The number of elements contained in the <xref href=\"System.AddIn.Contract.Collections.IArrayContract`1\"></xref>.","nodes":[{"pos":[0,112],"content":"The number of elements contained in the <ph id=\"ph1\">&lt;xref href=\"System.AddIn.Contract.Collections.IArrayContract`1\"&gt;&lt;/xref&gt;</ph>.","source":"The number of elements contained in the <xref href=\"System.AddIn.Contract.Collections.IArrayContract`1\"></xref>."}],"pos":[2702,2815],"yaml":true},{"content":"Returns the element at the specified index.","nodes":[{"pos":[0,43],"content":"Returns the element at the specified index.","nodes":[{"content":"Returns the element at the specified index.","pos":[0,43]}]}],"pos":[3963,4007],"yaml":true},{"content":"The zero-based index of the element to return.","nodes":[{"pos":[0,46],"content":"The zero-based index of the element to return.","nodes":[{"content":"The zero-based index of the element to return.","pos":[0,46]}]}],"pos":[4136,4183],"yaml":true},{"content":"The element at the specified index.","nodes":[{"pos":[0,35],"content":"The element at the specified index.","nodes":[{"content":"The element at the specified index.","pos":[0,35]}]}],"pos":[4228,4264],"yaml":true},{"content":"<code>index</code> is less than zero.  \n  \n -or-  \n  \n <code>index</code> is equal to or greater than the return value of <xref href=\"System.AddIn.Contract.Collections.IArrayContract`1.GetCount\"></xref>.","nodes":[{"pos":[0,37],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.","source":"<code>index</code> is less than zero."},{"pos":[44,48],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[55,203],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is equal to or greater than the return value of <ph id=\"ph2\">&lt;xref href=\"System.AddIn.Contract.Collections.IArrayContract`1.GetCount\"&gt;&lt;/xref&gt;</ph>.","source":"<code>index</code> is equal to or greater than the return value of <xref href=\"System.AddIn.Contract.Collections.IArrayContract`1.GetCount\"></xref>."}],"pos":[4458,4670],"yaml":true},{"content":"Replaces the element at the specified index with the specified <xref href=\"System.AddIn.Contract.IContract\"></xref>.","nodes":[{"pos":[0,116],"content":"Replaces the element at the specified index with the specified <ph id=\"ph1\">&lt;xref href=\"System.AddIn.Contract.IContract\"&gt;&lt;/xref&gt;</ph>.","source":"Replaces the element at the specified index with the specified <xref href=\"System.AddIn.Contract.IContract\"></xref>."}],"pos":[5746,5863],"yaml":true},{"content":"The zero-based index of the element to replace.","nodes":[{"pos":[0,47],"content":"The zero-based index of the element to replace.","nodes":[{"content":"The zero-based index of the element to replace.","pos":[0,47]}]}],"pos":[6004,6052],"yaml":true},{"content":"The new value for the element at the specified index.","nodes":[{"pos":[0,53],"content":"The new value for the element at the specified index.","nodes":[{"content":"The new value for the element at the specified index.","pos":[0,53]}]}],"pos":[6101,6155],"yaml":true},{"content":"<code>index</code> is less than zero.  \n  \n -or-  \n  \n <code>index</code> is equal to or greater than the return value of <xref href=\"System.AddIn.Contract.Collections.IArrayContract`1.GetCount\"></xref>.","nodes":[{"pos":[0,37],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.","source":"<code>index</code> is less than zero."},{"pos":[44,48],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[55,203],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is equal to or greater than the return value of <ph id=\"ph2\">&lt;xref href=\"System.AddIn.Contract.Collections.IArrayContract`1.GetCount\"&gt;&lt;/xref&gt;</ph>.","source":"<code>index</code> is equal to or greater than the return value of <xref href=\"System.AddIn.Contract.Collections.IArrayContract`1.GetCount\"></xref>."}],"pos":[6349,6561],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.AddIn.Contract.Collections.IArrayContract`1\n  commentId: T:System.AddIn.Contract.Collections.IArrayContract`1\n  id: IArrayContract`1\n  children:\n  - System.AddIn.Contract.Collections.IArrayContract`1.GetCount\n  - System.AddIn.Contract.Collections.IArrayContract`1.GetItem(System.Int32)\n  - System.AddIn.Contract.Collections.IArrayContract`1.SetItem(System.Int32,`0)\n  langs:\n  - csharp\n  name: IArrayContract<C>\n  nameWithType: IArrayContract<C>\n  fullName: System.AddIn.Contract.Collections.IArrayContract<C>\n  type: Interface\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract.Collections\n  summary: Represents a generic array of <xref href=\"System.AddIn.Contract.IContract\"></xref> objects.\n  remarks: \"Use an <xref:System.AddIn.Contract.Collections.IArrayContract%601> to pass an array of <xref:System.AddIn.Contract.IContract> objects between contracts by reference.  \\n  \\n An <xref:System.AddIn.Contract.Collections.IArrayContract%601> does not dynamically resize itself.\"\n  syntax:\n    content: 'public interface IArrayContract<C> : System.AddIn.Contract.Collections.IEnumerableContract<C> where C : IContract'\n    typeParameters:\n    - id: C\n      description: The type of elements in the array. <code>C</code> must implement the <xref href=\"System.AddIn.Contract.IContract\"></xref> interface.\n  implements:\n  - System.AddIn.Contract.Collections.IEnumerableContract{C}\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract.Collections/IArrayContract`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Contract.Collections.IArrayContract`1.GetCount\n  commentId: M:System.AddIn.Contract.Collections.IArrayContract`1.GetCount\n  id: GetCount\n  parent: System.AddIn.Contract.Collections.IArrayContract`1\n  langs:\n  - csharp\n  name: GetCount()\n  nameWithType: IArrayContract<C>.GetCount()\n  fullName: IArrayContract<C>.GetCount()\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract.Collections\n  summary: Returns the number of elements contained in the <xref href=\"System.AddIn.Contract.Collections.IArrayContract`1\"></xref>.\n  syntax:\n    content: public int GetCount ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The number of elements contained in the <xref href=\"System.AddIn.Contract.Collections.IArrayContract`1\"></xref>.\n  overload: System.AddIn.Contract.Collections.IArrayContract`1.GetCount*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract.Collections/IArrayContract`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Contract.Collections.IArrayContract`1.GetItem(System.Int32)\n  commentId: M:System.AddIn.Contract.Collections.IArrayContract`1.GetItem(System.Int32)\n  id: GetItem(System.Int32)\n  parent: System.AddIn.Contract.Collections.IArrayContract`1\n  langs:\n  - csharp\n  name: GetItem(Int32)\n  nameWithType: IArrayContract<C>.GetItem(Int32)\n  fullName: IArrayContract<C>.GetItem(Int32)\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract.Collections\n  summary: Returns the element at the specified index.\n  syntax:\n    content: public C GetItem (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the element to return.\n    return:\n      type: C\n      description: The element at the specified index.\n  overload: System.AddIn.Contract.Collections.IArrayContract`1.GetItem*\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: \"<code>index</code> is less than zero.  \\n  \\n -or-  \\n  \\n <code>index</code> is equal to or greater than the return value of <xref href=\\\"System.AddIn.Contract.Collections.IArrayContract`1.GetCount\\\"></xref>.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract.Collections/IArrayContract`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Contract.Collections.IArrayContract`1.SetItem(System.Int32,`0)\n  commentId: M:System.AddIn.Contract.Collections.IArrayContract`1.SetItem(System.Int32,`0)\n  id: SetItem(System.Int32,`0)\n  parent: System.AddIn.Contract.Collections.IArrayContract`1\n  langs:\n  - csharp\n  name: SetItem(Int32, C)\n  nameWithType: IArrayContract<C>.SetItem(Int32, C)\n  fullName: IArrayContract<C>.SetItem(Int32, C)\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract.Collections\n  summary: Replaces the element at the specified index with the specified <xref href=\"System.AddIn.Contract.IContract\"></xref>.\n  syntax:\n    content: public void SetItem (int index, C value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the element to replace.\n    - id: value\n      type: C\n      description: The new value for the element at the specified index.\n  overload: System.AddIn.Contract.Collections.IArrayContract`1.SetItem*\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: \"<code>index</code> is less than zero.  \\n  \\n -or-  \\n  \\n <code>index</code> is equal to or greater than the return value of <xref href=\\\"System.AddIn.Contract.Collections.IArrayContract`1.GetCount\\\"></xref>.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract.Collections/IArrayContract`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.IndexOutOfRangeException\n  parent: System\n  isExternal: false\n  name: IndexOutOfRangeException\n  nameWithType: IndexOutOfRangeException\n  fullName: System.IndexOutOfRangeException\n- uid: System.AddIn.Contract.Collections.IArrayContract`1.GetCount\n  parent: System.AddIn.Contract.Collections.IArrayContract`1\n  isExternal: false\n  name: GetCount()\n  nameWithType: IArrayContract<C>.GetCount()\n  fullName: IArrayContract<C>.GetCount()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.AddIn.Contract.Collections.IArrayContract`1.GetItem(System.Int32)\n  parent: System.AddIn.Contract.Collections.IArrayContract`1\n  isExternal: false\n  name: GetItem(Int32)\n  nameWithType: IArrayContract<C>.GetItem(Int32)\n  fullName: IArrayContract<C>.GetItem(Int32)\n- uid: C\n  isExternal: true\n  name: C\n  nameWithType: C\n  fullName: C\n- uid: System.AddIn.Contract.Collections.IArrayContract`1.SetItem(System.Int32,`0)\n  parent: System.AddIn.Contract.Collections.IArrayContract`1\n  isExternal: false\n  name: SetItem(Int32, C)\n  nameWithType: IArrayContract<C>.SetItem(Int32, C)\n  fullName: IArrayContract<C>.SetItem(Int32, C)\n- uid: System.AddIn.Contract.Collections.IArrayContract`1.GetCount*\n  parent: System.AddIn.Contract.Collections.IArrayContract`1\n  isExternal: false\n  name: GetCount\n  nameWithType: IArrayContract<C>.GetCount\n  fullName: IArrayContract<C>.GetCount\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract.Collections/IArrayContract`1.xml\n- uid: System.AddIn.Contract.Collections.IArrayContract`1.GetItem*\n  parent: System.AddIn.Contract.Collections.IArrayContract`1\n  isExternal: false\n  name: GetItem\n  nameWithType: IArrayContract<C>.GetItem\n  fullName: IArrayContract<C>.GetItem\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract.Collections/IArrayContract`1.xml\n- uid: System.AddIn.Contract.Collections.IArrayContract`1.SetItem*\n  parent: System.AddIn.Contract.Collections.IArrayContract`1\n  isExternal: false\n  name: SetItem\n  nameWithType: IArrayContract<C>.SetItem\n  fullName: IArrayContract<C>.SetItem\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract.Collections/IArrayContract`1.xml\n- uid: System.AddIn.Contract.Collections.IEnumerableContract`1\n  parent: System.AddIn.Contract.Collections\n  isExternal: false\n  name: IEnumerableContract<C>\n  nameWithType: IEnumerableContract<C>\n  fullName: System.AddIn.Contract.Collections.IEnumerableContract<C>\n"}