{"nodes":[{"content":"Describes an assembly's unique identity in full.","nodes":[{"pos":[0,48],"content":"Describes an assembly's unique identity in full.","nodes":[{"content":"Describes an assembly's unique identity in full.","pos":[0,48]}]}],"pos":[2439,2488],"yaml":true},{"content":"The <xref:System.Reflection.AssemblyName> object contains information about an assembly, which you can use to bind to that assembly. An assembly's identity consists of the following:  \n  \n-   Simple name.  \n  \n-   Version number.  \n  \n-   Cryptographic key pair.  \n  \n-   Supported culture.  \n  \n The simple name is typically the file name for the manifest file without its extension. The key pair includes a public and private key, used to create strong-name signatures for assemblies.  \n  \n All compilers that support the common language runtime will emit the simple name of a nested class, and reflection constructs a mangled name when queried, in accordance with the following conventions.  \n  \n|Delimiter|Meaning|  \n|---------------|-------------|  \n|Backslash (\\\\)|Escape character.|  \n|Comma (,)|Precedes the assembly name.|  \n|Plus sign (+)|Precedes a nested class.|  \n  \n For example, the fully qualified name for a class might look like this:  \n  \n ContainingClass+NestedClass,MyAssembly  \n  \n A \"++\" becomes \"\\\\+\\\\+\", and a \"\\\\\" becomes \"\\\\\\\\\".  \n  \n This qualified name can be persisted and later used to load the <xref:System.Type>. To search for and load a <xref:System.Type>, use <xref:System.Type.GetType%2A> either with the type name only or with the assembly qualified type name. <xref:System.Type.GetType%2A> with the type name only will look for the <xref:System.Type> in the caller's assembly and then in the System assembly. <xref:System.Type.GetType%2A> with the assembly qualified type name will look for the <xref:System.Type> in any assembly.  \n  \n A fully specified <xref:System.Reflection.AssemblyName> must have the name, culture, public key or public key token, major version, minor version, build number, and revision number parameters. The last four are packaged in the <xref:System.Version> type.  \n  \n To create a simple name, create an <xref:System.Reflection.AssemblyName> object using the default constructor and set the <xref:System.Reflection.AssemblyName.Name%2A>. The other properties are optional.  \n  \n To create a full strong name, create an <xref:System.Reflection.AssemblyName> object using the default constructor and set the <xref:System.Reflection.AssemblyName.Name%2A> and <xref:System.Reflection.AssemblyName.KeyPair%2A>. The other properties are optional. Use <xref:System.Reflection.AssemblyName.SetPublicKey%2A> and <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> to set the public key and the strong name. The strong name signing always uses the <xref:System.Security.Cryptography.SHA1> hash algorithm.  \n  \n To ensure that the names are constructed correctly, use the following properties:  \n  \n-   <xref:System.Reflection.Assembly.FullName%2A?displayProperty=fullName>  \n  \n-   <xref:System.Reflection.AssemblyName.FullName%2A?displayProperty=fullName>  \n  \n-   <xref:System.Type.AssemblyQualifiedName%2A?displayProperty=fullName>  \n  \n You can also get the name by using the `/l` option with the [Gacutil.exe (Global Assembly Cache Tool)](~/docs/framework/tools/gacutil-exe-gac-tool.md)  \n  \n For a partially specified strong name, create an <xref:System.Reflection.AssemblyName> object using the default constructor and set the name and public key. An assembly created using such an <xref:System.Reflection.AssemblyName> can be signed later using the Assembly Linker (Al.exe).  \n  \n It is possible to specify a public key and a <xref:System.Reflection.AssemblyName.KeyPair%2A> with inconsistent values. This can be useful in developer scenarios. In this case, the public key retrieved with <xref:System.Reflection.AssemblyName.GetPublicKey%2A> specifies the correct public key, while the <xref:System.Reflection.AssemblyName.KeyPair%2A> specifies the public and private keys used during development. When the runtime detects a mismatch between the <xref:System.Reflection.AssemblyName.KeyPair%2A> and the public key, it looks up in the registry the correct key that matches the public key.  \n  \n The format of the display name of an <xref:System.Reflection.AssemblyName> is a comma-delimited Unicode string that begins with the name, as follows:  \n  \n `Name <,Culture = CultureInfo> <,Version = Major.Minor.Build.Revision> <, StrongName> <,PublicKeyToken> '\\0'`  \n  \n `Name` is the textual name of the assembly. `CultureInfo` is the RFC1766-format-defined culture. `Major`, `Minor`, `Build`, and `Revision` are the major version, minor version, build number, and revision number of the assembly. `StrongName` is the hexadecimal-encoded low-order 64 bits of the hash value of the public key generated using the SHA-1 hashing algorithm and the public key specified by <xref:System.Reflection.AssemblyName.SetPublicKey%2A>. `PublicKeyToken` is the hexadecimal-encoded public key specified by <xref:System.Reflection.AssemblyName.SetPublicKey%2A>.  \n  \n Hexadecimal encoding is defined as the conversion of each byte of a binary object to two hexadecimal characters, progressing from least to most significant byte. Additional display values will be added as deemed necessary.  \n  \n If the full public key is known, then PublicKey may be substituted for StrongName.  \n  \n Also note that except for `Name`, which must come first, the lexical order of parameters is unimportant. However, any parameter (`Version`, `Culture`, `StrongName` or `PublicKey`) not specifically set is considered to be omitted, and the <xref:System.Reflection.AssemblyName> is then considered partial. When specifying partial information, Name parameters must be specified in the order described above.  \n  \n When supplying a display name, the convention `StrongName =null` or `PublicKey= null` indicates that binding and matching against a simply named assembly is required. Additionally, the convention `Culture= \"\"` (double quote representing an empty string) indicates matching against the default culture.  \n  \n The following example shows an <xref:System.Reflection.AssemblyName> for a simply named assembly with default culture.  \n  \n```  \nExampleAssembly, Culture=\"\"  \n```  \n  \n The following example shows a fully specified reference for a strongly named assembly with culture \"en\".  \n  \n```  \nExampleAssembly, Version=1.0.0.0, Culture=en, PublicKeyToken=a5d015c7d5a0b012  \n```","nodes":[{"pos":[0,182],"content":"The <xref:System.Reflection.AssemblyName> object contains information about an assembly, which you can use to bind to that assembly. An assembly's identity consists of the following:","nodes":[{"content":"The <xref:System.Reflection.AssemblyName> object contains information about an assembly, which you can use to bind to that assembly. An assembly's identity consists of the following:","pos":[0,182],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.AssemblyName&gt;</ph> object contains information about an assembly, which you can use to bind to that assembly.","pos":[0,132],"source":"The <xref:System.Reflection.AssemblyName> object contains information about an assembly, which you can use to bind to that assembly."},{"content":"An assembly's identity consists of the following:","pos":[133,182]}]}]},{"pos":[192,204],"content":"Simple name.","nodes":[{"content":"Simple name.","pos":[0,12]}]},{"pos":[214,229],"content":"Version number.","nodes":[{"content":"Version number.","pos":[0,15]}]},{"pos":[239,262],"content":"Cryptographic key pair.","nodes":[{"content":"Cryptographic key pair.","pos":[0,23]}]},{"pos":[272,290],"content":"Supported culture.","nodes":[{"content":"Supported culture.","pos":[0,18]}]},{"pos":[297,486],"content":"The simple name is typically the file name for the manifest file without its extension. The key pair includes a public and private key, used to create strong-name signatures for assemblies.","nodes":[{"content":"The simple name is typically the file name for the manifest file without its extension. The key pair includes a public and private key, used to create strong-name signatures for assemblies.","pos":[0,189],"nodes":[{"content":"The simple name is typically the file name for the manifest file without its extension.","pos":[0,87]},{"content":"The key pair includes a public and private key, used to create strong-name signatures for assemblies.","pos":[88,189]}]}]},{"pos":[493,693],"content":"All compilers that support the common language runtime will emit the simple name of a nested class, and reflection constructs a mangled name when queried, in accordance with the following conventions.","nodes":[{"content":"All compilers that support the common language runtime will emit the simple name of a nested class, and reflection constructs a mangled name when queried, in accordance with the following conventions.","pos":[0,200]}]},{"pos":[700,709],"content":"Delimiter","nodes":[{"content":"Delimiter","pos":[0,9]}]},{"pos":[710,717],"content":"Meaning","nodes":[{"content":"Meaning","pos":[0,7]}]},{"pos":[756,770],"content":"Backslash (\\\\)","nodes":[{"content":"Backslash (<ph id=\"ph1\">\\\\</ph>)","pos":[0,14],"source":"Backslash (\\\\)"}]},{"pos":[771,788],"content":"Escape character.","nodes":[{"content":"Escape character.","pos":[0,17]}]},{"pos":[793,802],"content":"Comma (,)","nodes":[{"content":"Comma (,)","pos":[0,9]}]},{"pos":[803,830],"content":"Precedes the assembly name.","nodes":[{"content":"Precedes the assembly name.","pos":[0,27]}]},{"pos":[835,848],"content":"Plus sign (+)","nodes":[{"content":"Plus sign (+)","pos":[0,13]}]},{"pos":[849,873],"content":"Precedes a nested class.","nodes":[{"content":"Precedes a nested class.","pos":[0,24]}]},{"pos":[881,952],"content":"For example, the fully qualified name for a class might look like this:","nodes":[{"content":"For example, the fully qualified name for a class might look like this:","pos":[0,71]}]},{"pos":[959,997],"content":"ContainingClass+NestedClass,MyAssembly","nodes":[{"content":"ContainingClass+NestedClass,MyAssembly","pos":[0,38]}]},{"pos":[1004,1055],"content":"A \"++\" becomes \"\\\\+\\\\+\", and a \"\\\\\" becomes \"\\\\\\\\\".","nodes":[{"content":"A \"++\" becomes \"<ph id=\"ph1\">\\\\</ph><ph id=\"ph2\">+</ph><ph id=\"ph3\">\\\\</ph>+\", and a \"<ph id=\"ph4\">\\\\</ph>\" becomes \"<ph id=\"ph5\">\\\\</ph><ph id=\"ph6\">\\\\</ph>\".","pos":[0,51],"source":"A \"++\" becomes \"\\\\+\\\\+\", and a \"\\\\\" becomes \"\\\\\\\\\"."}]},{"pos":[1062,1568],"content":"This qualified name can be persisted and later used to load the <xref:System.Type>. To search for and load a <xref:System.Type>, use <xref:System.Type.GetType%2A> either with the type name only or with the assembly qualified type name. <xref:System.Type.GetType%2A> with the type name only will look for the <xref:System.Type> in the caller's assembly and then in the System assembly. <xref:System.Type.GetType%2A> with the assembly qualified type name will look for the <xref:System.Type> in any assembly.","nodes":[{"content":"This qualified name can be persisted and later used to load the <xref:System.Type>. To search for and load a <xref:System.Type>, use <xref:System.Type.GetType%2A> either with the type name only or with the assembly qualified type name. <xref:System.Type.GetType%2A> with the type name only will look for the <xref:System.Type> in the caller's assembly and then in the System assembly. <xref:System.Type.GetType%2A> with the assembly qualified type name will look for the <xref:System.Type> in any assembly.","pos":[0,506],"nodes":[{"content":"This qualified name can be persisted and later used to load the <ph id=\"ph1\">&lt;xref:System.Type&gt;</ph>.","pos":[0,83],"source":"This qualified name can be persisted and later used to load the <xref:System.Type>."},{"content":"To search for and load a <ph id=\"ph1\">&lt;xref:System.Type&gt;</ph>, use <ph id=\"ph2\">&lt;xref:System.Type.GetType%2A&gt;</ph> either with the type name only or with the assembly qualified type name.","pos":[84,235],"source":" To search for and load a <xref:System.Type>, use <xref:System.Type.GetType%2A> either with the type name only or with the assembly qualified type name."},{"content":"<ph id=\"ph1\">&lt;xref:System.Type.GetType%2A&gt;</ph> with the type name only will look for the <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph> in the caller's assembly and then in the System assembly.","pos":[236,384],"source":" <xref:System.Type.GetType%2A> with the type name only will look for the <xref:System.Type> in the caller's assembly and then in the System assembly."},{"content":"<ph id=\"ph1\">&lt;xref:System.Type.GetType%2A&gt;</ph> with the assembly qualified type name will look for the <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph> in any assembly.","pos":[385,506],"source":" <xref:System.Type.GetType%2A> with the assembly qualified type name will look for the <xref:System.Type> in any assembly."}]}]},{"pos":[1575,1829],"content":"A fully specified <xref:System.Reflection.AssemblyName> must have the name, culture, public key or public key token, major version, minor version, build number, and revision number parameters. The last four are packaged in the <xref:System.Version> type.","nodes":[{"content":"A fully specified <xref:System.Reflection.AssemblyName> must have the name, culture, public key or public key token, major version, minor version, build number, and revision number parameters. The last four are packaged in the <xref:System.Version> type.","pos":[0,254],"nodes":[{"content":"A fully specified <ph id=\"ph1\">&lt;xref:System.Reflection.AssemblyName&gt;</ph> must have the name, culture, public key or public key token, major version, minor version, build number, and revision number parameters.","pos":[0,192],"source":"A fully specified <xref:System.Reflection.AssemblyName> must have the name, culture, public key or public key token, major version, minor version, build number, and revision number parameters."},{"content":"The last four are packaged in the <ph id=\"ph1\">&lt;xref:System.Version&gt;</ph> type.","pos":[193,254],"source":" The last four are packaged in the <xref:System.Version> type."}]}]},{"pos":[1836,2039],"content":"To create a simple name, create an <xref:System.Reflection.AssemblyName> object using the default constructor and set the <xref:System.Reflection.AssemblyName.Name%2A>. The other properties are optional.","nodes":[{"content":"To create a simple name, create an <xref:System.Reflection.AssemblyName> object using the default constructor and set the <xref:System.Reflection.AssemblyName.Name%2A>. The other properties are optional.","pos":[0,203],"nodes":[{"content":"To create a simple name, create an <ph id=\"ph1\">&lt;xref:System.Reflection.AssemblyName&gt;</ph> object using the default constructor and set the <ph id=\"ph2\">&lt;xref:System.Reflection.AssemblyName.Name%2A&gt;</ph>.","pos":[0,168],"source":"To create a simple name, create an <xref:System.Reflection.AssemblyName> object using the default constructor and set the <xref:System.Reflection.AssemblyName.Name%2A>."},{"content":"The other properties are optional.","pos":[169,203]}]}]},{"pos":[2046,2568],"content":"To create a full strong name, create an <xref:System.Reflection.AssemblyName> object using the default constructor and set the <xref:System.Reflection.AssemblyName.Name%2A> and <xref:System.Reflection.AssemblyName.KeyPair%2A>. The other properties are optional. Use <xref:System.Reflection.AssemblyName.SetPublicKey%2A> and <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> to set the public key and the strong name. The strong name signing always uses the <xref:System.Security.Cryptography.SHA1> hash algorithm.","nodes":[{"content":"To create a full strong name, create an <xref:System.Reflection.AssemblyName> object using the default constructor and set the <xref:System.Reflection.AssemblyName.Name%2A> and <xref:System.Reflection.AssemblyName.KeyPair%2A>. The other properties are optional. Use <xref:System.Reflection.AssemblyName.SetPublicKey%2A> and <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> to set the public key and the strong name. The strong name signing always uses the <xref:System.Security.Cryptography.SHA1> hash algorithm.","pos":[0,522],"nodes":[{"content":"To create a full strong name, create an <ph id=\"ph1\">&lt;xref:System.Reflection.AssemblyName&gt;</ph> object using the default constructor and set the <ph id=\"ph2\">&lt;xref:System.Reflection.AssemblyName.Name%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Reflection.AssemblyName.KeyPair%2A&gt;</ph>.","pos":[0,226],"source":"To create a full strong name, create an <xref:System.Reflection.AssemblyName> object using the default constructor and set the <xref:System.Reflection.AssemblyName.Name%2A> and <xref:System.Reflection.AssemblyName.KeyPair%2A>."},{"content":"The other properties are optional.","pos":[227,261]},{"content":"Use <ph id=\"ph1\">&lt;xref:System.Reflection.AssemblyName.SetPublicKey%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A&gt;</ph> to set the public key and the strong name.","pos":[262,425],"source":" Use <xref:System.Reflection.AssemblyName.SetPublicKey%2A> and <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> to set the public key and the strong name."},{"content":"The strong name signing always uses the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.SHA1&gt;</ph> hash algorithm.","pos":[426,522],"source":" The strong name signing always uses the <xref:System.Security.Cryptography.SHA1> hash algorithm."}]}]},{"pos":[2575,2656],"content":"To ensure that the names are constructed correctly, use the following properties:","nodes":[{"content":"To ensure that the names are constructed correctly, use the following properties:","pos":[0,81]}]},{"pos":[2666,2736],"content":"<xref:System.Reflection.Assembly.FullName%2A?displayProperty=fullName>","nodes":[]},{"pos":[2746,2820],"content":"<xref:System.Reflection.AssemblyName.FullName%2A?displayProperty=fullName>","nodes":[]},{"pos":[2830,2898],"content":"<xref:System.Type.AssemblyQualifiedName%2A?displayProperty=fullName>","nodes":[]},{"pos":[2905,3055],"content":"You can also get the name by using the <ph id=\"ph1\">`/l`</ph> option with the <bpt id=\"p1\">[</bpt>Gacutil.exe (Global Assembly Cache Tool)<ept id=\"p1\">](~/docs/framework/tools/gacutil-exe-gac-tool.md)</ept>","source":"You can also get the name by using the `/l` option with the [Gacutil.exe (Global Assembly Cache Tool)](~/docs/framework/tools/gacutil-exe-gac-tool.md)"},{"pos":[3062,3346],"content":"For a partially specified strong name, create an <xref:System.Reflection.AssemblyName> object using the default constructor and set the name and public key. An assembly created using such an <xref:System.Reflection.AssemblyName> can be signed later using the Assembly Linker (Al.exe).","nodes":[{"content":"For a partially specified strong name, create an <xref:System.Reflection.AssemblyName> object using the default constructor and set the name and public key. An assembly created using such an <xref:System.Reflection.AssemblyName> can be signed later using the Assembly Linker (Al.exe).","pos":[0,284],"nodes":[{"content":"For a partially specified strong name, create an <ph id=\"ph1\">&lt;xref:System.Reflection.AssemblyName&gt;</ph> object using the default constructor and set the name and public key.","pos":[0,156],"source":"For a partially specified strong name, create an <xref:System.Reflection.AssemblyName> object using the default constructor and set the name and public key."},{"content":"An assembly created using such an <ph id=\"ph1\">&lt;xref:System.Reflection.AssemblyName&gt;</ph> can be signed later using the Assembly Linker (Al.exe).","pos":[157,284],"source":" An assembly created using such an <xref:System.Reflection.AssemblyName> can be signed later using the Assembly Linker (Al.exe)."}]}]},{"pos":[3353,3959],"content":"It is possible to specify a public key and a <xref:System.Reflection.AssemblyName.KeyPair%2A> with inconsistent values. This can be useful in developer scenarios. In this case, the public key retrieved with <xref:System.Reflection.AssemblyName.GetPublicKey%2A> specifies the correct public key, while the <xref:System.Reflection.AssemblyName.KeyPair%2A> specifies the public and private keys used during development. When the runtime detects a mismatch between the <xref:System.Reflection.AssemblyName.KeyPair%2A> and the public key, it looks up in the registry the correct key that matches the public key.","nodes":[{"content":"It is possible to specify a public key and a <xref:System.Reflection.AssemblyName.KeyPair%2A> with inconsistent values. This can be useful in developer scenarios. In this case, the public key retrieved with <xref:System.Reflection.AssemblyName.GetPublicKey%2A> specifies the correct public key, while the <xref:System.Reflection.AssemblyName.KeyPair%2A> specifies the public and private keys used during development. When the runtime detects a mismatch between the <xref:System.Reflection.AssemblyName.KeyPair%2A> and the public key, it looks up in the registry the correct key that matches the public key.","pos":[0,606],"nodes":[{"content":"It is possible to specify a public key and a <ph id=\"ph1\">&lt;xref:System.Reflection.AssemblyName.KeyPair%2A&gt;</ph> with inconsistent values.","pos":[0,119],"source":"It is possible to specify a public key and a <xref:System.Reflection.AssemblyName.KeyPair%2A> with inconsistent values."},{"content":"This can be useful in developer scenarios.","pos":[120,162]},{"content":"In this case, the public key retrieved with <ph id=\"ph1\">&lt;xref:System.Reflection.AssemblyName.GetPublicKey%2A&gt;</ph> specifies the correct public key, while the <ph id=\"ph2\">&lt;xref:System.Reflection.AssemblyName.KeyPair%2A&gt;</ph> specifies the public and private keys used during development.","pos":[163,416],"source":" In this case, the public key retrieved with <xref:System.Reflection.AssemblyName.GetPublicKey%2A> specifies the correct public key, while the <xref:System.Reflection.AssemblyName.KeyPair%2A> specifies the public and private keys used during development."},{"content":"When the runtime detects a mismatch between the <ph id=\"ph1\">&lt;xref:System.Reflection.AssemblyName.KeyPair%2A&gt;</ph> and the public key, it looks up in the registry the correct key that matches the public key.","pos":[417,606],"source":" When the runtime detects a mismatch between the <xref:System.Reflection.AssemblyName.KeyPair%2A> and the public key, it looks up in the registry the correct key that matches the public key."}]}]},{"pos":[3966,4115],"content":"The format of the display name of an <xref:System.Reflection.AssemblyName> is a comma-delimited Unicode string that begins with the name, as follows:","nodes":[{"content":"The format of the display name of an <ph id=\"ph1\">&lt;xref:System.Reflection.AssemblyName&gt;</ph> is a comma-delimited Unicode string that begins with the name, as follows:","pos":[0,149],"source":"The format of the display name of an <xref:System.Reflection.AssemblyName> is a comma-delimited Unicode string that begins with the name, as follows:"}]},{"pos":[4238,4813],"content":"`Name` is the textual name of the assembly. `CultureInfo` is the RFC1766-format-defined culture. `Major`, `Minor`, `Build`, and `Revision` are the major version, minor version, build number, and revision number of the assembly. `StrongName` is the hexadecimal-encoded low-order 64 bits of the hash value of the public key generated using the SHA-1 hashing algorithm and the public key specified by <xref:System.Reflection.AssemblyName.SetPublicKey%2A>. `PublicKeyToken` is the hexadecimal-encoded public key specified by <xref:System.Reflection.AssemblyName.SetPublicKey%2A>.","nodes":[{"content":"<ph id=\"ph1\">`Name`</ph> is the textual name of the assembly.","pos":[0,43],"source":"`Name` is the textual name of the assembly."},{"content":"<ph id=\"ph1\">`CultureInfo`</ph> is the RFC1766-format-defined culture.","pos":[44,96],"source":"`CultureInfo` is the RFC1766-format-defined culture."},{"content":"<ph id=\"ph1\">`Major`</ph>, <ph id=\"ph2\">`Minor`</ph>, <ph id=\"ph3\">`Build`</ph>, and <ph id=\"ph4\">`Revision`</ph> are the major version, minor version, build number, and revision number of the assembly.","pos":[97,227],"source":"`Major`, `Minor`, `Build`, and `Revision` are the major version, minor version, build number, and revision number of the assembly."},{"content":"<ph id=\"ph1\">`StrongName`</ph> is the hexadecimal-encoded low-order 64 bits of the hash value of the public key generated using the SHA-1 hashing algorithm and the public key specified by <ph id=\"ph2\">&lt;xref:System.Reflection.AssemblyName.SetPublicKey%2A&gt;</ph>.","pos":[228,452],"source":"`StrongName` is the hexadecimal-encoded low-order 64 bits of the hash value of the public key generated using the SHA-1 hashing algorithm and the public key specified by <xref:System.Reflection.AssemblyName.SetPublicKey%2A>."},{"content":"<ph id=\"ph1\">`PublicKeyToken`</ph> is the hexadecimal-encoded public key specified by <ph id=\"ph2\">&lt;xref:System.Reflection.AssemblyName.SetPublicKey%2A&gt;</ph>.","pos":[453,575],"source":"`PublicKeyToken` is the hexadecimal-encoded public key specified by <xref:System.Reflection.AssemblyName.SetPublicKey%2A>."}]},{"pos":[4820,5042],"content":"Hexadecimal encoding is defined as the conversion of each byte of a binary object to two hexadecimal characters, progressing from least to most significant byte. Additional display values will be added as deemed necessary.","nodes":[{"content":"Hexadecimal encoding is defined as the conversion of each byte of a binary object to two hexadecimal characters, progressing from least to most significant byte. Additional display values will be added as deemed necessary.","pos":[0,222],"nodes":[{"content":"Hexadecimal encoding is defined as the conversion of each byte of a binary object to two hexadecimal characters, progressing from least to most significant byte.","pos":[0,161]},{"content":"Additional display values will be added as deemed necessary.","pos":[162,222]}]}]},{"pos":[5049,5131],"content":"If the full public key is known, then PublicKey may be substituted for StrongName.","nodes":[{"content":"If the full public key is known, then PublicKey may be substituted for StrongName.","pos":[0,82]}]},{"pos":[5138,5542],"content":"Also note that except for `Name`, which must come first, the lexical order of parameters is unimportant. However, any parameter (`Version`, `Culture`, `StrongName` or `PublicKey`) not specifically set is considered to be omitted, and the <xref:System.Reflection.AssemblyName> is then considered partial. When specifying partial information, Name parameters must be specified in the order described above.","nodes":[{"content":"Also note that except for <ph id=\"ph1\">`Name`</ph>, which must come first, the lexical order of parameters is unimportant.","pos":[0,104],"source":"Also note that except for `Name`, which must come first, the lexical order of parameters is unimportant."},{"content":"However, any parameter (<ph id=\"ph1\">`Version`</ph>, <ph id=\"ph2\">`Culture`</ph>, <ph id=\"ph3\">`StrongName`</ph> or <ph id=\"ph4\">`PublicKey`</ph>) not specifically set is considered to be omitted, and the <ph id=\"ph5\">&lt;xref:System.Reflection.AssemblyName&gt;</ph> is then considered partial.","pos":[105,303],"source":" However, any parameter (`Version`, `Culture`, `StrongName` or `PublicKey`) not specifically set is considered to be omitted, and the <xref:System.Reflection.AssemblyName> is then considered partial."},{"content":"When specifying partial information, Name parameters must be specified in the order described above.","pos":[304,404]}]},{"pos":[5549,5850],"content":"When supplying a display name, the convention `StrongName =null` or `PublicKey= null` indicates that binding and matching against a simply named assembly is required. Additionally, the convention `Culture= \"\"` (double quote representing an empty string) indicates matching against the default culture.","nodes":[{"content":"When supplying a display name, the convention <ph id=\"ph1\">`StrongName =null`</ph> or <ph id=\"ph2\">`PublicKey= null`</ph> indicates that binding and matching against a simply named assembly is required.","pos":[0,166],"source":"When supplying a display name, the convention `StrongName =null` or `PublicKey= null` indicates that binding and matching against a simply named assembly is required."},{"content":"Additionally, the convention <ph id=\"ph1\">`Culture= \"\"`</ph> (double quote representing an empty string) indicates matching against the default culture.","pos":[167,301],"source":" Additionally, the convention `Culture= \"\"` (double quote representing an empty string) indicates matching against the default culture."}]},{"pos":[5857,5975],"content":"The following example shows an <xref:System.Reflection.AssemblyName> for a simply named assembly with default culture.","nodes":[{"content":"The following example shows an <ph id=\"ph1\">&lt;xref:System.Reflection.AssemblyName&gt;</ph> for a simply named assembly with default culture.","pos":[0,118],"source":"The following example shows an <xref:System.Reflection.AssemblyName> for a simply named assembly with default culture."}]},{"pos":[6027,6131],"content":"The following example shows a fully specified reference for a strongly named assembly with culture \"en\".","nodes":[{"content":"The following example shows a fully specified reference for a strongly named assembly with culture \"en\".","pos":[0,104]}]}],"pos":[2499,8827],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Reflection.AssemblyName\"></xref> class.","nodes":[{"pos":[0,92],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.AssemblyName\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Reflection.AssemblyName\"></xref> class."}],"pos":[11782,11875],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Reflection.AssemblyName\"></xref> class with the specified display name.","nodes":[{"pos":[0,124],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.AssemblyName\"&gt;&lt;/xref&gt;</ph> class with the specified display name.","source":"Initializes a new instance of the <xref href=\"System.Reflection.AssemblyName\"></xref> class with the specified display name."}],"pos":[14304,14429],"yaml":true},{"content":"The supplied `assemblyName` is parsed, and the appropriate fields of the new <xref:System.Reflection.AssemblyName> are initialized with values from the display name. This is the recommended way of parsing display names. Writing your own code to parse display names is not recommended.","nodes":[{"pos":[0,284],"content":"The supplied `assemblyName` is parsed, and the appropriate fields of the new <xref:System.Reflection.AssemblyName> are initialized with values from the display name. This is the recommended way of parsing display names. Writing your own code to parse display names is not recommended.","nodes":[{"content":"The supplied <ph id=\"ph1\">`assemblyName`</ph> is parsed, and the appropriate fields of the new <ph id=\"ph2\">&lt;xref:System.Reflection.AssemblyName&gt;</ph> are initialized with values from the display name.","pos":[0,165],"source":"The supplied `assemblyName` is parsed, and the appropriate fields of the new <xref:System.Reflection.AssemblyName> are initialized with values from the display name."},{"content":"This is the recommended way of parsing display names.","pos":[166,219]},{"content":"Writing your own code to parse display names is not recommended.","pos":[220,284]}]}],"pos":[14440,14725],"yaml":true,"extradata":"MT"},{"content":"The display name of the assembly, as returned by the <xref href=\"System.Reflection.AssemblyName.FullName\"></xref> property.","nodes":[{"pos":[0,123],"content":"The display name of the assembly, as returned by the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.AssemblyName.FullName\"&gt;&lt;/xref&gt;</ph> property.","source":"The display name of the assembly, as returned by the <xref href=\"System.Reflection.AssemblyName.FullName\"></xref> property."}],"pos":[15531,15655],"yaml":true},{"content":"<code>assemblyName</code> is `null`.","nodes":[{"pos":[0,36],"content":"<ph id=\"ph1\">&lt;code&gt;assemblyName&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>assemblyName</code> is `null`."}],"pos":[15821,15858],"yaml":true},{"content":"<code>assemblyName</code> is a zero length string.","nodes":[{"pos":[0,50],"content":"<ph id=\"ph1\">&lt;code&gt;assemblyName&lt;/code&gt;</ph> is a zero length string.","source":"<code>assemblyName</code> is a zero length string."}],"pos":[15952,16003],"yaml":true},{"content":"<block subset=\"none\" type=\"note\">\n      <p>  \n In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <xref href=\"System.IO.IOException\"></xref>, instead.  \n  \n</p>\n    </block>  \n  \n The referenced assembly could not be found, or could not be loaded.","nodes":[{"pos":[0,342],"content":"<block subset=\"none\" type=\"note\">\n      <p>  \n In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <xref href=\"System.IO.IOException\"></xref>, instead.","nodes":[{"content":"In the <bpt id=\"p1\">[</bpt>.NET for Windows Store apps<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkID=247912)</ept> or the <bpt id=\"p2\">[</bpt>Portable Class Library<ept id=\"p2\">](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)</ept>, catch the base class exception, <ph id=\"ph1\">&lt;xref href=\"System.IO.IOException\"&gt;&lt;/xref&gt;</ph>, instead.","pos":[47,342],"source":" In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <xref href=\"System.IO.IOException\"></xref>, instead."}]},{"pos":[348,365],"content":"</p>\n    </block>","nodes":[]},{"pos":[372,439],"content":"The referenced assembly could not be found, or could not be loaded.","nodes":[{"content":"The referenced assembly could not be found, or could not be loaded.","pos":[0,67]}]}],"pos":[16103,16558],"yaml":true},{"content":"Makes a copy of this <xref href=\"System.Reflection.AssemblyName\"></xref> object.","nodes":[{"pos":[0,80],"content":"Makes a copy of this <ph id=\"ph1\">&lt;xref href=\"System.Reflection.AssemblyName\"&gt;&lt;/xref&gt;</ph> object.","source":"Makes a copy of this <xref href=\"System.Reflection.AssemblyName\"></xref> object."}],"pos":[18003,18084],"yaml":true},{"content":"A new object is created, identical to the original.","nodes":[{"pos":[0,51],"content":"A new object is created, identical to the original.","nodes":[{"content":"A new object is created, identical to the original.","pos":[0,51]}]}],"pos":[18095,18147],"yaml":true,"extradata":"MT"},{"content":"An object that is a copy of this <xref href=\"System.Reflection.AssemblyName\"></xref> object.","nodes":[{"pos":[0,92],"content":"An object that is a copy of this <ph id=\"ph1\">&lt;xref href=\"System.Reflection.AssemblyName\"&gt;&lt;/xref&gt;</ph> object.","source":"An object that is a copy of this <xref href=\"System.Reflection.AssemblyName\"></xref> object."}],"pos":[18270,18363],"yaml":true},{"content":"Gets or sets the location of the assembly as a URL.","nodes":[{"pos":[0,51],"content":"Gets or sets the location of the assembly as a URL.","nodes":[{"content":"Gets or sets the location of the assembly as a URL.","pos":[0,51]}]}],"pos":[19545,19597],"yaml":true},{"content":"When an assembly is loaded, this value can also be obtained using the <xref:System.Reflection.Assembly.CodeBase%2A?displayProperty=fullName> property.  \n  \n If the assembly was loaded as a byte array, this property returns the location of the caller of the <xref:System.Reflection.Assembly.Load%28System.Byte%5B%5D%29> method overload, not the location of the loaded assembly.  \n  \n> [!NOTE]\n>  Do not use an <xref:System.Reflection.AssemblyName> with only the <xref:System.Reflection.AssemblyName.CodeBase%2A> property set. The <xref:System.Reflection.AssemblyName.CodeBase%2A> property does not supply any elements of the assembly identity (such as name or version), so loading does not occur according to load-by-identity rules, as you would expect from the <xref:System.Reflection.Assembly.Load%2A> method. Instead, the assembly is loaded using load-from rules. For information about the disadvantages of using the load-from context, see the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=fullName> method overload or [Best Practices for Assembly Loading](~/docs/framework/deployment/best-practices-for-assembly-loading.md).","nodes":[{"pos":[0,150],"content":"When an assembly is loaded, this value can also be obtained using the <xref:System.Reflection.Assembly.CodeBase%2A?displayProperty=fullName> property.","nodes":[{"content":"When an assembly is loaded, this value can also be obtained using the <ph id=\"ph1\">&lt;xref:System.Reflection.Assembly.CodeBase%2A?displayProperty=fullName&gt;</ph> property.","pos":[0,150],"source":"When an assembly is loaded, this value can also be obtained using the <xref:System.Reflection.Assembly.CodeBase%2A?displayProperty=fullName> property."}]},{"pos":[157,376],"content":"If the assembly was loaded as a byte array, this property returns the location of the caller of the <xref:System.Reflection.Assembly.Load%28System.Byte%5B%5D%29> method overload, not the location of the loaded assembly.","nodes":[{"content":"If the assembly was loaded as a byte array, this property returns the location of the caller of the <ph id=\"ph1\">&lt;xref:System.Reflection.Assembly.Load%28System.Byte%5B%5D%29&gt;</ph> method overload, not the location of the loaded assembly.","pos":[0,219],"source":"If the assembly was loaded as a byte array, this property returns the location of the caller of the <xref:System.Reflection.Assembly.Load%28System.Byte%5B%5D%29> method overload, not the location of the loaded assembly."}]},{"pos":[384,1142],"content":"[!NOTE]\n Do not use an <xref:System.Reflection.AssemblyName> with only the <xref:System.Reflection.AssemblyName.CodeBase%2A> property set. The <xref:System.Reflection.AssemblyName.CodeBase%2A> property does not supply any elements of the assembly identity (such as name or version), so loading does not occur according to load-by-identity rules, as you would expect from the <xref:System.Reflection.Assembly.Load%2A> method. Instead, the assembly is loaded using load-from rules. For information about the disadvantages of using the load-from context, see the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=fullName> method overload or [Best Practices for Assembly Loading](~/docs/framework/deployment/best-practices-for-assembly-loading.md).","leadings":["","> "],"nodes":[{"content":" Do not use an <xref:System.Reflection.AssemblyName> with only the <xref:System.Reflection.AssemblyName.CodeBase%2A> property set. The <xref:System.Reflection.AssemblyName.CodeBase%2A> property does not supply any elements of the assembly identity (such as name or version), so loading does not occur according to load-by-identity rules, as you would expect from the <xref:System.Reflection.Assembly.Load%2A> method. Instead, the assembly is loaded using load-from rules. For information about the disadvantages of using the load-from context, see the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=fullName> method overload or [Best Practices for Assembly Loading](~/docs/framework/deployment/best-practices-for-assembly-loading.md).","pos":[8,756],"nodes":[{"content":"Do not use an <ph id=\"ph1\">&lt;xref:System.Reflection.AssemblyName&gt;</ph> with only the <ph id=\"ph2\">&lt;xref:System.Reflection.AssemblyName.CodeBase%2A&gt;</ph> property set.","pos":[1,130],"source":" Do not use an <xref:System.Reflection.AssemblyName> with only the <xref:System.Reflection.AssemblyName.CodeBase%2A> property set."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.AssemblyName.CodeBase%2A&gt;</ph> property does not supply any elements of the assembly identity (such as name or version), so loading does not occur according to load-by-identity rules, as you would expect from the <ph id=\"ph2\">&lt;xref:System.Reflection.Assembly.Load%2A&gt;</ph> method.","pos":[131,416],"source":" The <xref:System.Reflection.AssemblyName.CodeBase%2A> property does not supply any elements of the assembly identity (such as name or version), so loading does not occur according to load-by-identity rules, as you would expect from the <xref:System.Reflection.Assembly.Load%2A> method."},{"content":"Instead, the assembly is loaded using load-from rules.","pos":[417,471]},{"content":"For information about the disadvantages of using the load-from context, see the <ph id=\"ph1\">&lt;xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=fullName&gt;</ph> method overload or <bpt id=\"p1\">[</bpt>Best Practices for Assembly Loading<ept id=\"p1\">](~/docs/framework/deployment/best-practices-for-assembly-loading.md)</ept>.","pos":[472,748],"source":" For information about the disadvantages of using the load-from context, see the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=fullName> method overload or [Best Practices for Assembly Loading](~/docs/framework/deployment/best-practices-for-assembly-loading.md)."}]}]}],"pos":[19608,20758],"yaml":true,"extradata":"MT"},{"content":"A string that is the URL location of the assembly.","nodes":[{"pos":[0,50],"content":"A string that is the URL location of the assembly.","nodes":[{"content":"A string that is the URL location of the assembly.","pos":[0,50]}]}],"pos":[21547,21598],"yaml":true},{"content":"Gets or sets a value that indicates what type of content the assembly contains.","nodes":[{"pos":[0,79],"content":"Gets or sets a value that indicates what type of content the assembly contains.","nodes":[{"content":"Gets or sets a value that indicates what type of content the assembly contains.","pos":[0,79]}]}],"pos":[22823,22903],"yaml":true},{"content":"A value that indicates what type of content the assembly contains.","nodes":[{"pos":[0,66],"content":"A value that indicates what type of content the assembly contains.","nodes":[{"content":"A value that indicates what type of content the assembly contains.","pos":[0,66]}]}],"pos":[23145,23212],"yaml":true},{"content":"Gets or sets the culture supported by the assembly.","nodes":[{"pos":[0,51],"content":"Gets or sets the culture supported by the assembly.","nodes":[{"content":"Gets or sets the culture supported by the assembly.","pos":[0,51]}]}],"pos":[24837,24889],"yaml":true},{"content":"An object that represents the culture supported by the assembly.","nodes":[{"pos":[0,64],"content":"An object that represents the culture supported by the assembly.","nodes":[{"content":"An object that represents the culture supported by the assembly.","pos":[0,64]}]}],"pos":[25759,25824],"yaml":true},{"content":"Gets or sets the name of the culture associated with the assembly.","nodes":[{"pos":[0,66],"content":"Gets or sets the name of the culture associated with the assembly.","nodes":[{"content":"Gets or sets the name of the culture associated with the assembly.","pos":[0,66]}]}],"pos":[27052,27119],"yaml":true},{"content":"The culture name.","nodes":[{"pos":[0,17],"content":"The culture name.","nodes":[{"content":"The culture name.","pos":[0,17]}]}],"pos":[27239,27257],"yaml":true},{"content":"Gets the URI, including escape characters, that represents the codebase.","nodes":[{"pos":[0,72],"content":"Gets the URI, including escape characters, that represents the codebase.","nodes":[{"content":"Gets the URI, including escape characters, that represents the codebase.","pos":[0,72]}]}],"pos":[28831,28904],"yaml":true},{"content":"A URI with escape characters.","nodes":[{"pos":[0,29],"content":"A URI with escape characters.","nodes":[{"content":"A URI with escape characters.","pos":[0,29]}]}],"pos":[29023,29053],"yaml":true},{"content":"Gets or sets the attributes of the assembly.","nodes":[{"pos":[0,44],"content":"Gets or sets the attributes of the assembly.","nodes":[{"content":"Gets or sets the attributes of the assembly.","pos":[0,44]}]}],"pos":[30249,30294],"yaml":true},{"content":"A value that represents the attributes of the assembly.","nodes":[{"pos":[0,55],"content":"A value that represents the attributes of the assembly.","nodes":[{"content":"A value that represents the attributes of the assembly.","pos":[0,55]}]}],"pos":[31126,31182],"yaml":true},{"content":"Gets the full name of the assembly, also known as the display name.","nodes":[{"pos":[0,67],"content":"Gets the full name of the assembly, also known as the display name.","nodes":[{"content":"Gets the full name of the assembly, also known as the display name.","pos":[0,67]}]}],"pos":[32730,32798],"yaml":true},{"content":"The display name typically consists of the simple name, version number, supported culture, and public key. For example:  \n  \n```  \nmylib, Version=1.2.1900.0, Culture=neutral, PublicKeyToken=a14f3033def15840  \n```  \n  \n Writing your own code to parse display names is not recommended. Instead, pass the display name to the <xref:System.Reflection.AssemblyName.%23ctor%2A> constructor, which parses it and populates the appropriate fields of the new <xref:System.Reflection.AssemblyName>.  \n  \n When an assembly is loaded, this value can also be obtained using the <xref:System.Reflection.Assembly.FullName%2A?displayProperty=fullName> property.","nodes":[{"pos":[0,119],"content":"The display name typically consists of the simple name, version number, supported culture, and public key. For example:","nodes":[{"content":"The display name typically consists of the simple name, version number, supported culture, and public key. For example:","pos":[0,119],"nodes":[{"content":"The display name typically consists of the simple name, version number, supported culture, and public key.","pos":[0,106]},{"content":"For example:","pos":[107,119]}]}]},{"pos":[219,486],"content":"Writing your own code to parse display names is not recommended. Instead, pass the display name to the <xref:System.Reflection.AssemblyName.%23ctor%2A> constructor, which parses it and populates the appropriate fields of the new <xref:System.Reflection.AssemblyName>.","nodes":[{"content":"Writing your own code to parse display names is not recommended. Instead, pass the display name to the <xref:System.Reflection.AssemblyName.%23ctor%2A> constructor, which parses it and populates the appropriate fields of the new <xref:System.Reflection.AssemblyName>.","pos":[0,267],"nodes":[{"content":"Writing your own code to parse display names is not recommended.","pos":[0,64]},{"content":"Instead, pass the display name to the <ph id=\"ph1\">&lt;xref:System.Reflection.AssemblyName.%23ctor%2A&gt;</ph> constructor, which parses it and populates the appropriate fields of the new <ph id=\"ph2\">&lt;xref:System.Reflection.AssemblyName&gt;</ph>.","pos":[65,267],"source":" Instead, pass the display name to the <xref:System.Reflection.AssemblyName.%23ctor%2A> constructor, which parses it and populates the appropriate fields of the new <xref:System.Reflection.AssemblyName>."}]}]},{"pos":[493,643],"content":"When an assembly is loaded, this value can also be obtained using the <xref:System.Reflection.Assembly.FullName%2A?displayProperty=fullName> property.","nodes":[{"content":"When an assembly is loaded, this value can also be obtained using the <ph id=\"ph1\">&lt;xref:System.Reflection.Assembly.FullName%2A?displayProperty=fullName&gt;</ph> property.","pos":[0,150],"source":"When an assembly is loaded, this value can also be obtained using the <xref:System.Reflection.Assembly.FullName%2A?displayProperty=fullName> property."}]}],"pos":[32809,33463],"yaml":true,"extradata":"MT"},{"content":"A string that is the full name of the assembly, also known as the display name.","nodes":[{"pos":[0,79],"content":"A string that is the full name of the assembly, also known as the display name.","nodes":[{"content":"A string that is the full name of the assembly, also known as the display name.","pos":[0,79]}]}],"pos":[34536,34616],"yaml":true},{"content":"Gets the <xref href=\"System.Reflection.AssemblyName\"></xref> for a given file.","nodes":[{"pos":[0,78],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.AssemblyName\"&gt;&lt;/xref&gt;</ph> for a given file.","source":"Gets the <xref href=\"System.Reflection.AssemblyName\"></xref> for a given file."}],"pos":[36254,36333],"yaml":true},{"content":"This will only work if the file contains an assembly manifest. This method causes the file to be opened and closed, but the assembly is not added to this domain.","nodes":[{"pos":[0,161],"content":"This will only work if the file contains an assembly manifest. This method causes the file to be opened and closed, but the assembly is not added to this domain.","nodes":[{"content":"This will only work if the file contains an assembly manifest. This method causes the file to be opened and closed, but the assembly is not added to this domain.","pos":[0,161],"nodes":[{"content":"This will only work if the file contains an assembly manifest.","pos":[0,62]},{"content":"This method causes the file to be opened and closed, but the assembly is not added to this domain.","pos":[63,161]}]}]}],"pos":[36344,36506],"yaml":true,"extradata":"MT"},{"content":"The path for the assembly whose <xref href=\"System.Reflection.AssemblyName\"></xref> is to be returned.","nodes":[{"pos":[0,102],"content":"The path for the assembly whose <ph id=\"ph1\">&lt;xref href=\"System.Reflection.AssemblyName\"&gt;&lt;/xref&gt;</ph> is to be returned.","source":"The path for the assembly whose <xref href=\"System.Reflection.AssemblyName\"></xref> is to be returned."}],"pos":[37505,37608],"yaml":true},{"content":"An object that represents the given assembly file.","nodes":[{"pos":[0,50],"content":"An object that represents the given assembly file.","nodes":[{"content":"An object that represents the given assembly file.","pos":[0,50]}]}],"pos":[37682,37733],"yaml":true},{"content":"<code>assemblyFile</code> is `null`.","nodes":[{"pos":[0,36],"content":"<ph id=\"ph1\">&lt;code&gt;assemblyFile&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>assemblyFile</code> is `null`."}],"pos":[37909,37946],"yaml":true},{"content":"<code>assemblyFile</code> is invalid, such as an assembly with an invalid culture.","nodes":[{"pos":[0,82],"content":"<ph id=\"ph1\">&lt;code&gt;assemblyFile&lt;/code&gt;</ph> is invalid, such as an assembly with an invalid culture.","source":"<code>assemblyFile</code> is invalid, such as an assembly with an invalid culture."}],"pos":[38040,38123],"yaml":true},{"content":"<code>assemblyFile</code> is not found.","nodes":[{"pos":[0,39],"content":"<ph id=\"ph1\">&lt;code&gt;assemblyFile&lt;/code&gt;</ph> is not found.","source":"<code>assemblyFile</code> is not found."}],"pos":[38231,38271],"yaml":true},{"content":"The caller does not have path discovery permission.","nodes":[{"pos":[0,51],"content":"The caller does not have path discovery permission.","nodes":[{"content":"The caller does not have path discovery permission.","pos":[0,51]}]}],"pos":[38383,38435],"yaml":true},{"content":"<code>assemblyFile</code> is not a valid assembly.","nodes":[{"pos":[0,50],"content":"<ph id=\"ph1\">&lt;code&gt;assemblyFile&lt;/code&gt;</ph> is not a valid assembly.","source":"<code>assemblyFile</code> is not a valid assembly."}],"pos":[38541,38592],"yaml":true},{"content":"An assembly or module was loaded twice with two different sets of evidence.","nodes":[{"pos":[0,75],"content":"An assembly or module was loaded twice with two different sets of evidence.","nodes":[{"content":"An assembly or module was loaded twice with two different sets of evidence.","pos":[0,75]}]}],"pos":[38692,38768],"yaml":true},{"content":"Gets serialization information with all the data needed to recreate an instance of this `AssemblyName`.","nodes":[{"pos":[0,103],"content":"Gets serialization information with all the data needed to recreate an instance of this <ph id=\"ph1\">`AssemblyName`</ph>.","source":"Gets serialization information with all the data needed to recreate an instance of this `AssemblyName`."}],"pos":[40304,40408],"yaml":true},{"content":"The object to be populated with serialization information.","nodes":[{"pos":[0,58],"content":"The object to be populated with serialization information.","nodes":[{"content":"The object to be populated with serialization information.","pos":[0,58]}]}],"pos":[40676,40735],"yaml":true},{"content":"The destination context of the serialization.","nodes":[{"pos":[0,45],"content":"The destination context of the serialization.","nodes":[{"content":"The destination context of the serialization.","pos":[0,45]}]}],"pos":[40830,40876],"yaml":true},{"content":"<code>info</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;info&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>info</code> is `null`."}],"pos":[41050,41079],"yaml":true},{"content":"Gets the public key of the assembly.","nodes":[{"pos":[0,36],"content":"Gets the public key of the assembly.","nodes":[{"content":"Gets the public key of the assembly.","pos":[0,36]}]}],"pos":[42244,42281],"yaml":true},{"content":"A byte array that contains the public key of the assembly.","nodes":[{"pos":[0,58],"content":"A byte array that contains the public key of the assembly.","nodes":[{"content":"A byte array that contains the public key of the assembly.","pos":[0,58]}]}],"pos":[43212,43271],"yaml":true},{"content":"A public key was provided (for example, by using the <xref href=\"System.Reflection.AssemblyName.SetPublicKey(System.Byte[])\"></xref> method), but no public key token was provided.","nodes":[{"pos":[0,179],"content":"A public key was provided (for example, by using the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.AssemblyName.SetPublicKey(System.Byte[])\"&gt;&lt;/xref&gt;</ph> method), but no public key token was provided.","source":"A public key was provided (for example, by using the <xref href=\"System.Reflection.AssemblyName.SetPublicKey(System.Byte[])\"></xref> method), but no public key token was provided."}],"pos":[43454,43634],"yaml":true},{"content":"Gets the public key token, which is the last 8 bytes of the SHA-1 hash of the public key under which the application or assembly is signed.","nodes":[{"pos":[0,139],"content":"Gets the public key token, which is the last 8 bytes of the SHA-1 hash of the public key under which the application or assembly is signed.","nodes":[{"content":"Gets the public key token, which is the last 8 bytes of the SHA-1 hash of the public key under which the application or assembly is signed.","pos":[0,139]}]}],"pos":[45173,45313],"yaml":true},{"content":"A byte array that contains the public key token.","nodes":[{"pos":[0,48],"content":"A byte array that contains the public key token.","nodes":[{"content":"A byte array that contains the public key token.","pos":[0,48]}]}],"pos":[46270,46319],"yaml":true},{"content":"Gets or sets the hash algorithm used by the assembly manifest.","nodes":[{"pos":[0,62],"content":"Gets or sets the hash algorithm used by the assembly manifest.","nodes":[{"content":"Gets or sets the hash algorithm used by the assembly manifest.","pos":[0,62]}]}],"pos":[47887,47950],"yaml":true},{"content":"> [!IMPORTANT]\n>  Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.Reflection.AssemblyName.HashAlgorithm%2A> property of an <xref:System.Reflection.AssemblyName> object that is returned by the <xref:System.Reflection.Assembly.GetReferencedAssemblies%2A?displayProperty=fullName> method is <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm?displayProperty=fullName> if there is no hash algorithm for the referenced assembly, or if the hash algorithm of the referenced assembly is not identified by the <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm?displayProperty=fullName> enumeration. In previous versions of the .NET Framework, the <xref:System.Reflection.AssemblyName.HashAlgorithm%2A> property returned <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm?displayProperty=fullName> in this situation.","nodes":[{"pos":[2,878],"content":"[!IMPORTANT]\n Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.Reflection.AssemblyName.HashAlgorithm%2A> property of an <xref:System.Reflection.AssemblyName> object that is returned by the <xref:System.Reflection.Assembly.GetReferencedAssemblies%2A?displayProperty=fullName> method is <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm?displayProperty=fullName> if there is no hash algorithm for the referenced assembly, or if the hash algorithm of the referenced assembly is not identified by the <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm?displayProperty=fullName> enumeration. In previous versions of the .NET Framework, the <xref:System.Reflection.AssemblyName.HashAlgorithm%2A> property returned <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm?displayProperty=fullName> in this situation.","leadings":["","> "],"nodes":[{"content":" Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.Reflection.AssemblyName.HashAlgorithm%2A> property of an <xref:System.Reflection.AssemblyName> object that is returned by the <xref:System.Reflection.Assembly.GetReferencedAssemblies%2A?displayProperty=fullName> method is <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm?displayProperty=fullName> if there is no hash algorithm for the referenced assembly, or if the hash algorithm of the referenced assembly is not identified by the <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm?displayProperty=fullName> enumeration. In previous versions of the .NET Framework, the <xref:System.Reflection.AssemblyName.HashAlgorithm%2A> property returned <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm?displayProperty=fullName> in this situation.","pos":[13,874],"nodes":[{"content":"Starting with the <ph id=\"ph1\">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, the <ph id=\"ph2\">&lt;xref:System.Reflection.AssemblyName.HashAlgorithm%2A&gt;</ph> property of an <ph id=\"ph3\">&lt;xref:System.Reflection.AssemblyName&gt;</ph> object that is returned by the <ph id=\"ph4\">&lt;xref:System.Reflection.Assembly.GetReferencedAssemblies%2A?displayProperty=fullName&gt;</ph> method is <ph id=\"ph5\">&lt;xref:System.Configuration.Assemblies.AssemblyHashAlgorithm?displayProperty=fullName&gt;</ph> if there is no hash algorithm for the referenced assembly, or if the hash algorithm of the referenced assembly is not identified by the <ph id=\"ph6\">&lt;xref:System.Configuration.Assemblies.AssemblyHashAlgorithm?displayProperty=fullName&gt;</ph> enumeration.","pos":[1,635],"source":" Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.Reflection.AssemblyName.HashAlgorithm%2A> property of an <xref:System.Reflection.AssemblyName> object that is returned by the <xref:System.Reflection.Assembly.GetReferencedAssemblies%2A?displayProperty=fullName> method is <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm?displayProperty=fullName> if there is no hash algorithm for the referenced assembly, or if the hash algorithm of the referenced assembly is not identified by the <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm?displayProperty=fullName> enumeration."},{"content":"In previous versions of the .NET Framework, the <ph id=\"ph1\">&lt;xref:System.Reflection.AssemblyName.HashAlgorithm%2A&gt;</ph> property returned <ph id=\"ph2\">&lt;xref:System.Configuration.Assemblies.AssemblyHashAlgorithm?displayProperty=fullName&gt;</ph> in this situation.","pos":[636,861],"source":" In previous versions of the .NET Framework, the <xref:System.Reflection.AssemblyName.HashAlgorithm%2A> property returned <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm?displayProperty=fullName> in this situation."}]}]}],"pos":[47961,48852],"yaml":true,"extradata":"MT"},{"content":"The hash algorithm used by the assembly manifest.","nodes":[{"pos":[0,49],"content":"The hash algorithm used by the assembly manifest.","nodes":[{"content":"The hash algorithm used by the assembly manifest.","pos":[0,49]}]}],"pos":[49737,49787],"yaml":true},{"content":"Gets or sets the public and private cryptographic key pair that is used to create a strong name signature for the assembly.","nodes":[{"pos":[0,123],"content":"Gets or sets the public and private cryptographic key pair that is used to create a strong name signature for the assembly.","nodes":[{"content":"Gets or sets the public and private cryptographic key pair that is used to create a strong name signature for the assembly.","pos":[0,123]}]}],"pos":[50971,51095],"yaml":true},{"content":"When the runtime loads an assembly, it does not set the <xref:System.Reflection.AssemblyName.KeyPair%2A> property. The getter for the property is only useful if the user set the property before using the <xref:System.Reflection.AssemblyName> object to create a dynamic assembly, and subsequently wants to retrieve the key pair.","nodes":[{"pos":[0,327],"content":"When the runtime loads an assembly, it does not set the <xref:System.Reflection.AssemblyName.KeyPair%2A> property. The getter for the property is only useful if the user set the property before using the <xref:System.Reflection.AssemblyName> object to create a dynamic assembly, and subsequently wants to retrieve the key pair.","nodes":[{"content":"When the runtime loads an assembly, it does not set the <xref:System.Reflection.AssemblyName.KeyPair%2A> property. The getter for the property is only useful if the user set the property before using the <xref:System.Reflection.AssemblyName> object to create a dynamic assembly, and subsequently wants to retrieve the key pair.","pos":[0,327],"nodes":[{"content":"When the runtime loads an assembly, it does not set the <ph id=\"ph1\">&lt;xref:System.Reflection.AssemblyName.KeyPair%2A&gt;</ph> property.","pos":[0,114],"source":"When the runtime loads an assembly, it does not set the <xref:System.Reflection.AssemblyName.KeyPair%2A> property."},{"content":"The getter for the property is only useful if the user set the property before using the <ph id=\"ph1\">&lt;xref:System.Reflection.AssemblyName&gt;</ph> object to create a dynamic assembly, and subsequently wants to retrieve the key pair.","pos":[115,327],"source":" The getter for the property is only useful if the user set the property before using the <xref:System.Reflection.AssemblyName> object to create a dynamic assembly, and subsequently wants to retrieve the key pair."}]}]}],"pos":[51106,51434],"yaml":true,"extradata":"MT"},{"content":"The public and private cryptographic key pair to be used to create a strong name for the assembly.","nodes":[{"pos":[0,98],"content":"The public and private cryptographic key pair to be used to create a strong name for the assembly.","nodes":[{"content":"The public and private cryptographic key pair to be used to create a strong name for the assembly.","pos":[0,98]}]}],"pos":[52272,52371],"yaml":true},{"content":"Gets or sets the simple name of the assembly. This is usually, but not necessarily, the file name of the manifest file of the assembly, minus its extension.","nodes":[{"pos":[0,156],"content":"Gets or sets the simple name of the assembly. This is usually, but not necessarily, the file name of the manifest file of the assembly, minus its extension.","nodes":[{"content":"Gets or sets the simple name of the assembly. This is usually, but not necessarily, the file name of the manifest file of the assembly, minus its extension.","pos":[0,156],"nodes":[{"content":"Gets or sets the simple name of the assembly.","pos":[0,45]},{"content":"This is usually, but not necessarily, the file name of the manifest file of the assembly, minus its extension.","pos":[46,156]}]}]}],"pos":[53553,53710],"yaml":true},{"content":"The manifest file is the file that contains the assembly manifest.  \n  \n For example, the simple name of a single-file assembly named \"MyAssembly.dll\" is \"MyAssembly\".","nodes":[{"pos":[0,66],"content":"The manifest file is the file that contains the assembly manifest.","nodes":[{"content":"The manifest file is the file that contains the assembly manifest.","pos":[0,66]}]},{"pos":[73,167],"content":"For example, the simple name of a single-file assembly named \"MyAssembly.dll\" is \"MyAssembly\".","nodes":[{"content":"For example, the simple name of a single-file assembly named \"MyAssembly.dll\" is \"MyAssembly\".","pos":[0,94]}]}],"pos":[53721,53897],"yaml":true,"extradata":"MT"},{"content":"The simple name of the assembly.","nodes":[{"pos":[0,32],"content":"The simple name of the assembly.","nodes":[{"content":"The simple name of the assembly.","pos":[0,32]}]}],"pos":[54699,54732],"yaml":true},{"content":"Implements the <xref href=\"System.Runtime.Serialization.ISerializable\"></xref> interface and is called back by the deserialization event when deserialization is complete.","nodes":[{"pos":[0,170],"content":"Implements the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.ISerializable\"&gt;&lt;/xref&gt;</ph> interface and is called back by the deserialization event when deserialization is complete.","source":"Implements the <xref href=\"System.Runtime.Serialization.ISerializable\"></xref> interface and is called back by the deserialization event when deserialization is complete."}],"pos":[56378,56549],"yaml":true},{"content":"The source of the deserialization event.","nodes":[{"pos":[0,40],"content":"The source of the deserialization event.","nodes":[{"content":"The source of the deserialization event.","pos":[0,40]}]}],"pos":[56697,56738],"yaml":true},{"content":"Gets or sets a value that identifies the processor and bits-per-word of the platform targeted by an executable.","nodes":[{"pos":[0,111],"content":"Gets or sets a value that identifies the processor and bits-per-word of the platform targeted by an executable.","nodes":[{"content":"Gets or sets a value that identifies the processor and bits-per-word of the platform targeted by an executable.","pos":[0,111]}]}],"pos":[58032,58144],"yaml":true},{"content":"Beginning with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], this property always returns <xref:System.Reflection.ProcessorArchitecture?displayProperty=fullName> for reference assemblies.","nodes":[{"pos":[0,202],"content":"Beginning with the <ph id=\"ph1\">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, this property always returns <ph id=\"ph2\">&lt;xref:System.Reflection.ProcessorArchitecture?displayProperty=fullName&gt;</ph> for reference assemblies.","source":"Beginning with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], this property always returns <xref:System.Reflection.ProcessorArchitecture?displayProperty=fullName> for reference assemblies."}],"pos":[58155,58358],"yaml":true,"extradata":"MT"},{"content":"One of the enumeration values that identifies the processor and bits-per-word of the platform targeted by an executable.","nodes":[{"pos":[0,120],"content":"One of the enumeration values that identifies the processor and bits-per-word of the platform targeted by an executable.","nodes":[{"content":"One of the enumeration values that identifies the processor and bits-per-word of the platform targeted by an executable.","pos":[0,120]}]}],"pos":[58547,58668],"yaml":true},{"content":"Returns a value indicating whether two assembly names are the same. The comparison is based on the simple assembly names.","nodes":[{"pos":[0,121],"content":"Returns a value indicating whether two assembly names are the same. The comparison is based on the simple assembly names.","nodes":[{"content":"Returns a value indicating whether two assembly names are the same. The comparison is based on the simple assembly names.","pos":[0,121],"nodes":[{"content":"Returns a value indicating whether two assembly names are the same.","pos":[0,67]},{"content":"The comparison is based on the simple assembly names.","pos":[68,121]}]}]}],"pos":[60469,60591],"yaml":true},{"content":"The comparison depends only on the simple assembly name. It ignores version, culture, and public key token.","nodes":[{"pos":[0,107],"content":"The comparison depends only on the simple assembly name. It ignores version, culture, and public key token.","nodes":[{"content":"The comparison depends only on the simple assembly name. It ignores version, culture, and public key token.","pos":[0,107],"nodes":[{"content":"The comparison depends only on the simple assembly name.","pos":[0,56]},{"content":"It ignores version, culture, and public key token.","pos":[57,107]}]}]}],"pos":[60602,60710],"yaml":true,"extradata":"MT"},{"content":"The reference assembly name.","nodes":[{"pos":[0,28],"content":"The reference assembly name.","nodes":[{"content":"The reference assembly name.","pos":[0,28]}]}],"pos":[60964,60993],"yaml":true},{"content":"The assembly name that is compared to the reference assembly.","nodes":[{"pos":[0,61],"content":"The assembly name that is compared to the reference assembly.","nodes":[{"content":"The assembly name that is compared to the reference assembly.","pos":[0,61]}]}],"pos":[61076,61138],"yaml":true},{"content":"`true` if the simple assembly names are the same; otherwise, `false`.","nodes":[{"pos":[0,69],"content":"<ph id=\"ph1\">`true`</ph> if the simple assembly names are the same; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the simple assembly names are the same; otherwise, `false`."}],"pos":[61196,61268],"yaml":true},{"content":"Sets the public key identifying the assembly.","nodes":[{"pos":[0,45],"content":"Sets the public key identifying the assembly.","nodes":[{"content":"Sets the public key identifying the assembly.","pos":[0,45]}]}],"pos":[62584,62630],"yaml":true},{"content":"You must also use the <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> method to provide a public key token. Otherwise, a <xref:System.Security.SecurityException> is thrown when the <xref:System.Reflection.AssemblyName.GetPublicKey%2A> method is called.","nodes":[{"pos":[0,263],"content":"You must also use the <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> method to provide a public key token. Otherwise, a <xref:System.Security.SecurityException> is thrown when the <xref:System.Reflection.AssemblyName.GetPublicKey%2A> method is called.","nodes":[{"content":"You must also use the <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> method to provide a public key token. Otherwise, a <xref:System.Security.SecurityException> is thrown when the <xref:System.Reflection.AssemblyName.GetPublicKey%2A> method is called.","pos":[0,263],"nodes":[{"content":"You must also use the <ph id=\"ph1\">&lt;xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A&gt;</ph> method to provide a public key token.","pos":[0,118],"source":"You must also use the <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> method to provide a public key token."},{"content":"Otherwise, a <ph id=\"ph1\">&lt;xref:System.Security.SecurityException&gt;</ph> is thrown when the <ph id=\"ph2\">&lt;xref:System.Reflection.AssemblyName.GetPublicKey%2A&gt;</ph> method is called.","pos":[119,263],"source":" Otherwise, a <xref:System.Security.SecurityException> is thrown when the <xref:System.Reflection.AssemblyName.GetPublicKey%2A> method is called."}]}]}],"pos":[62641,62905],"yaml":true,"extradata":"MT"},{"content":"A byte array containing the public key of the assembly.","nodes":[{"pos":[0,55],"content":"A byte array containing the public key of the assembly.","nodes":[{"content":"A byte array containing the public key of the assembly.","pos":[0,55]}]}],"pos":[63886,63942],"yaml":true},{"content":"Sets the public key token, which is the last 8 bytes of the SHA-1 hash of the public key under which the application or assembly is signed.","nodes":[{"pos":[0,139],"content":"Sets the public key token, which is the last 8 bytes of the SHA-1 hash of the public key under which the application or assembly is signed.","nodes":[{"content":"Sets the public key token, which is the last 8 bytes of the SHA-1 hash of the public key under which the application or assembly is signed.","pos":[0,139]}]}],"pos":[65618,65758],"yaml":true},{"content":"When you set the public key by calling the <xref:System.Reflection.AssemblyName.SetPublicKey%2A> method, you must also use the <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> method to provide a public key token. Otherwise, a <xref:System.Security.SecurityException> is thrown when the <xref:System.Reflection.AssemblyName.GetPublicKey%2A> method is called.","nodes":[{"pos":[0,368],"content":"When you set the public key by calling the <xref:System.Reflection.AssemblyName.SetPublicKey%2A> method, you must also use the <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> method to provide a public key token. Otherwise, a <xref:System.Security.SecurityException> is thrown when the <xref:System.Reflection.AssemblyName.GetPublicKey%2A> method is called.","nodes":[{"content":"When you set the public key by calling the <xref:System.Reflection.AssemblyName.SetPublicKey%2A> method, you must also use the <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> method to provide a public key token. Otherwise, a <xref:System.Security.SecurityException> is thrown when the <xref:System.Reflection.AssemblyName.GetPublicKey%2A> method is called.","pos":[0,368],"nodes":[{"content":"When you set the public key by calling the <ph id=\"ph1\">&lt;xref:System.Reflection.AssemblyName.SetPublicKey%2A&gt;</ph> method, you must also use the <ph id=\"ph2\">&lt;xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A&gt;</ph> method to provide a public key token.","pos":[0,223],"source":"When you set the public key by calling the <xref:System.Reflection.AssemblyName.SetPublicKey%2A> method, you must also use the <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> method to provide a public key token."},{"content":"Otherwise, a <ph id=\"ph1\">&lt;xref:System.Security.SecurityException&gt;</ph> is thrown when the <ph id=\"ph2\">&lt;xref:System.Reflection.AssemblyName.GetPublicKey%2A&gt;</ph> method is called.","pos":[224,368],"source":" Otherwise, a <xref:System.Security.SecurityException> is thrown when the <xref:System.Reflection.AssemblyName.GetPublicKey%2A> method is called."}]}]}],"pos":[65769,66138],"yaml":true,"extradata":"MT"},{"content":"A byte array containing the public key token of the assembly.","nodes":[{"pos":[0,61],"content":"A byte array containing the public key token of the assembly.","nodes":[{"content":"A byte array containing the public key token of the assembly.","pos":[0,61]}]}],"pos":[67155,67217],"yaml":true},{"content":"Returns the full name of the assembly, also known as the display name.","nodes":[{"pos":[0,70],"content":"Returns the full name of the assembly, also known as the display name.","nodes":[{"content":"Returns the full name of the assembly, also known as the display name.","pos":[0,70]}]}],"pos":[68781,68852],"yaml":true},{"content":"See the description of <xref:System.Reflection.AssemblyName> for the format of the returned string.","nodes":[{"pos":[0,99],"content":"See the description of <xref:System.Reflection.AssemblyName> for the format of the returned string.","nodes":[{"content":"See the description of <ph id=\"ph1\">&lt;xref:System.Reflection.AssemblyName&gt;</ph> for the format of the returned string.","pos":[0,99],"source":"See the description of <xref:System.Reflection.AssemblyName> for the format of the returned string."}]}],"pos":[68863,68963],"yaml":true,"extradata":"MT"},{"content":"The full name of the assembly, or the class name if the full name cannot be determined.","nodes":[{"pos":[0,87],"content":"The full name of the assembly, or the class name if the full name cannot be determined.","nodes":[{"content":"The full name of the assembly, or the class name if the full name cannot be determined.","pos":[0,87]}]}],"pos":[69841,69929],"yaml":true},{"content":"Gets or sets the major, minor, build, and revision numbers of the assembly.","nodes":[{"pos":[0,75],"content":"Gets or sets the major, minor, build, and revision numbers of the assembly.","nodes":[{"content":"Gets or sets the major, minor, build, and revision numbers of the assembly.","pos":[0,75]}]}],"pos":[71474,71550],"yaml":true},{"content":"All components of the version must be integers greater than or equal to zero. Metadata restricts the major, minor, build, and revision components for an assembly to a maximum value of <xref:System.UInt16.MaxValue?displayProperty=fullName> - 1. If a component exceeds this value, no error is thrown; however, in a dynamic assembly, that component is zero.","nodes":[{"pos":[0,354],"content":"All components of the version must be integers greater than or equal to zero. Metadata restricts the major, minor, build, and revision components for an assembly to a maximum value of <xref:System.UInt16.MaxValue?displayProperty=fullName> - 1. If a component exceeds this value, no error is thrown; however, in a dynamic assembly, that component is zero.","nodes":[{"content":"All components of the version must be integers greater than or equal to zero. Metadata restricts the major, minor, build, and revision components for an assembly to a maximum value of <xref:System.UInt16.MaxValue?displayProperty=fullName> - 1. If a component exceeds this value, no error is thrown; however, in a dynamic assembly, that component is zero.","pos":[0,354],"nodes":[{"content":"All components of the version must be integers greater than or equal to zero.","pos":[0,77]},{"content":"Metadata restricts the major, minor, build, and revision components for an assembly to a maximum value of <ph id=\"ph1\">&lt;xref:System.UInt16.MaxValue?displayProperty=fullName&gt;</ph> - 1.","pos":[78,243],"source":" Metadata restricts the major, minor, build, and revision components for an assembly to a maximum value of <xref:System.UInt16.MaxValue?displayProperty=fullName> - 1."},{"content":"If a component exceeds this value, no error is thrown; however, in a dynamic assembly, that component is zero.","pos":[244,354]}]}]}],"pos":[71561,71916],"yaml":true,"extradata":"MT"},{"content":"An object that represents the major, minor, build, and revision numbers of the assembly.","nodes":[{"pos":[0,88],"content":"An object that represents the major, minor, build, and revision numbers of the assembly.","nodes":[{"content":"An object that represents the major, minor, build, and revision numbers of the assembly.","pos":[0,88]}]}],"pos":[73606,73695],"yaml":true},{"content":"Gets or sets the information related to the assembly's compatibility with other assemblies.","nodes":[{"pos":[0,91],"content":"Gets or sets the information related to the assembly's compatibility with other assemblies.","nodes":[{"content":"Gets or sets the information related to the assembly's compatibility with other assemblies.","pos":[0,91]}]}],"pos":[75295,75387],"yaml":true},{"content":"<xref:System.Reflection.AssemblyName.VersionCompatibility%2A> information indicates, for example, that the assembly cannot execute side-by-side with other versions due to conflicts over a device driver.  \n  \n Currently, <xref:System.Reflection.AssemblyName.VersionCompatibility%2A> always returns <xref:System.Configuration.Assemblies.AssemblyVersionCompatibility?displayProperty=fullName>, and is not used by the loader. This property is reserved for a future feature.","nodes":[{"pos":[0,202],"content":"<xref:System.Reflection.AssemblyName.VersionCompatibility%2A> information indicates, for example, that the assembly cannot execute side-by-side with other versions due to conflicts over a device driver.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Reflection.AssemblyName.VersionCompatibility%2A&gt;</ph> information indicates, for example, that the assembly cannot execute side-by-side with other versions due to conflicts over a device driver.","pos":[0,202],"source":"<xref:System.Reflection.AssemblyName.VersionCompatibility%2A> information indicates, for example, that the assembly cannot execute side-by-side with other versions due to conflicts over a device driver."}]},{"pos":[209,469],"content":"Currently, <xref:System.Reflection.AssemblyName.VersionCompatibility%2A> always returns <xref:System.Configuration.Assemblies.AssemblyVersionCompatibility?displayProperty=fullName>, and is not used by the loader. This property is reserved for a future feature.","nodes":[{"content":"Currently, <xref:System.Reflection.AssemblyName.VersionCompatibility%2A> always returns <xref:System.Configuration.Assemblies.AssemblyVersionCompatibility?displayProperty=fullName>, and is not used by the loader. This property is reserved for a future feature.","pos":[0,260],"nodes":[{"content":"Currently, <ph id=\"ph1\">&lt;xref:System.Reflection.AssemblyName.VersionCompatibility%2A&gt;</ph> always returns <ph id=\"ph2\">&lt;xref:System.Configuration.Assemblies.AssemblyVersionCompatibility?displayProperty=fullName&gt;</ph>, and is not used by the loader.","pos":[0,212],"source":"Currently, <xref:System.Reflection.AssemblyName.VersionCompatibility%2A> always returns <xref:System.Configuration.Assemblies.AssemblyVersionCompatibility?displayProperty=fullName>, and is not used by the loader."},{"content":"This property is reserved for a future feature.","pos":[213,260]}]}]}],"pos":[75398,75872],"yaml":true,"extradata":"MT"},{"content":"A value that represents information about the assembly's compatibility with other assemblies.","nodes":[{"pos":[0,93],"content":"A value that represents information about the assembly's compatibility with other assemblies.","nodes":[{"content":"A value that represents information about the assembly's compatibility with other assemblies.","pos":[0,93]}]}],"pos":[76102,76196],"yaml":true},{"content":"Maps a set of names to a corresponding set of dispatch identifiers.","nodes":[{"pos":[0,67],"content":"Maps a set of names to a corresponding set of dispatch identifiers.","nodes":[{"content":"Maps a set of names to a corresponding set of dispatch identifiers.","pos":[0,67]}]}],"pos":[77901,77969],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.","nodes":[{"pos":[0,186],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"For more information about <ph id=\"ph1\">`IDispatch::GetIDsOfNames`</ph>, see the MSDN Library.","pos":[110,186],"source":" For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library."}]}],"pos":[77980,78167],"yaml":true,"extradata":"MT"},{"content":"Reserved for future use. Must be IID_NULL.","nodes":[{"pos":[0,42],"content":"Reserved for future use. Must be IID_NULL.","nodes":[{"content":"Reserved for future use. Must be IID_NULL.","pos":[0,42],"nodes":[{"content":"Reserved for future use.","pos":[0,24]},{"content":"Must be IID_NULL.","pos":[25,42]}]}]}],"pos":[78373,78416],"yaml":true},{"content":"Passed-in array of names to be mapped.","nodes":[{"pos":[0,38],"content":"Passed-in array of names to be mapped.","nodes":[{"content":"Passed-in array of names to be mapped.","pos":[0,38]}]}],"pos":[78481,78520],"yaml":true},{"content":"Count of the names to be mapped.","nodes":[{"pos":[0,32],"content":"Count of the names to be mapped.","nodes":[{"content":"Count of the names to be mapped.","pos":[0,32]}]}],"pos":[78582,78615],"yaml":true},{"content":"The locale context in which to interpret the names.","nodes":[{"pos":[0,51],"content":"The locale context in which to interpret the names.","nodes":[{"content":"The locale context in which to interpret the names.","pos":[0,51]}]}],"pos":[78675,78727],"yaml":true},{"content":"Caller-allocated array that receives the IDs corresponding to the names.","nodes":[{"pos":[0,72],"content":"Caller-allocated array that receives the IDs corresponding to the names.","nodes":[{"content":"Caller-allocated array that receives the IDs corresponding to the names.","pos":[0,72]}]}],"pos":[78791,78864],"yaml":true},{"content":"Late-bound access using the COM <code>IDispatch</code> interface is not supported.","nodes":[{"pos":[0,82],"content":"Late-bound access using the COM <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">IDispatch</ph><ept id=\"p1\">&lt;/code&gt;</ept> interface is not supported.","source":"Late-bound access using the COM <code>IDispatch</code> interface is not supported."}],"pos":[79087,79170],"yaml":true},{"content":"Retrieves the type information for an object, which can then be used to get the type information for an interface.","nodes":[{"pos":[0,114],"content":"Retrieves the type information for an object, which can then be used to get the type information for an interface.","nodes":[{"content":"Retrieves the type information for an object, which can then be used to get the type information for an interface.","pos":[0,114]}]}],"pos":[80500,80615],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.","nodes":[{"pos":[0,184],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"For more information about <ph id=\"ph1\">`IDispatch::GetTypeInfo`</ph>, see the MSDN Library.","pos":[110,184],"source":" For more information about `IDispatch::GetTypeInfo`, see the MSDN Library."}]}],"pos":[80626,80811],"yaml":true,"extradata":"MT"},{"content":"The type information to return.","nodes":[{"pos":[0,31],"content":"The type information to return.","nodes":[{"content":"The type information to return.","pos":[0,31]}]}],"pos":[80985,81017],"yaml":true},{"content":"The locale identifier for the type information.","nodes":[{"pos":[0,47],"content":"The locale identifier for the type information.","nodes":[{"content":"The locale identifier for the type information.","pos":[0,47]}]}],"pos":[81077,81125],"yaml":true},{"content":"Receives a pointer to the requested type information object.","nodes":[{"pos":[0,60],"content":"Receives a pointer to the requested type information object.","nodes":[{"content":"Receives a pointer to the requested type information object.","pos":[0,60]}]}],"pos":[81188,81249],"yaml":true},{"content":"Late-bound access using the COM <code>IDispatch</code> interface is not supported.","nodes":[{"pos":[0,82],"content":"Late-bound access using the COM <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">IDispatch</ph><ept id=\"p1\">&lt;/code&gt;</ept> interface is not supported.","source":"Late-bound access using the COM <code>IDispatch</code> interface is not supported."}],"pos":[81470,81553],"yaml":true},{"content":"Retrieves the number of type information interfaces that an object provides (either 0 or 1).","nodes":[{"pos":[0,92],"content":"Retrieves the number of type information interfaces that an object provides (either 0 or 1).","nodes":[{"content":"Retrieves the number of type information interfaces that an object provides (either 0 or 1).","pos":[0,92]}]}],"pos":[82784,82877],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.","nodes":[{"pos":[0,189],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"For more information about <ph id=\"ph1\">`IDispatch::GetTypeInfoCount`</ph>, see the MSDN Library.","pos":[110,189],"source":" For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library."}]}],"pos":[82888,83078],"yaml":true,"extradata":"MT"},{"content":"Points to a location that receives the number of type information interfaces provided by the object.","nodes":[{"pos":[0,100],"content":"Points to a location that receives the number of type information interfaces provided by the object.","nodes":[{"content":"Points to a location that receives the number of type information interfaces provided by the object.","pos":[0,100]}]}],"pos":[83236,83337],"yaml":true},{"content":"Late-bound access using the COM <code>IDispatch</code> interface is not supported.","nodes":[{"pos":[0,82],"content":"Late-bound access using the COM <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">IDispatch</ph><ept id=\"p1\">&lt;/code&gt;</ept> interface is not supported.","source":"Late-bound access using the COM <code>IDispatch</code> interface is not supported."}],"pos":[83563,83646],"yaml":true},{"content":"Provides access to properties and methods exposed by an object.","nodes":[{"pos":[0,63],"content":"Provides access to properties and methods exposed by an object.","nodes":[{"content":"Provides access to properties and methods exposed by an object.","pos":[0,63]}]}],"pos":[85261,85325],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::Invoke`, see the MSDN Library.","nodes":[{"pos":[0,179],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::Invoke`, see the MSDN Library.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"For more information about <ph id=\"ph1\">`IDispatch::Invoke`</ph>, see the MSDN Library.","pos":[110,179],"source":" For more information about `IDispatch::Invoke`, see the MSDN Library."}]}],"pos":[85336,85516],"yaml":true,"extradata":"MT"},{"content":"Identifies the member.","nodes":[{"pos":[0,22],"content":"Identifies the member.","nodes":[{"content":"Identifies the member.","pos":[0,22]}]}],"pos":[85785,85808],"yaml":true},{"content":"Reserved for future use. Must be IID_NULL.","nodes":[{"pos":[0,42],"content":"Reserved for future use. Must be IID_NULL.","nodes":[{"content":"Reserved for future use. Must be IID_NULL.","pos":[0,42],"nodes":[{"content":"Reserved for future use.","pos":[0,24]},{"content":"Must be IID_NULL.","pos":[25,42]}]}]}],"pos":[85866,85909],"yaml":true},{"content":"The locale context in which to interpret arguments.","nodes":[{"pos":[0,51],"content":"The locale context in which to interpret arguments.","nodes":[{"content":"The locale context in which to interpret arguments.","pos":[0,51]}]}],"pos":[85969,86021],"yaml":true},{"content":"Flags describing the context of the call.","nodes":[{"pos":[0,41],"content":"Flags describing the context of the call.","nodes":[{"content":"Flags describing the context of the call.","pos":[0,41]}]}],"pos":[86082,86124],"yaml":true},{"content":"Pointer to a structure containing an array of arguments, an array of argument DispIDs for named arguments, and counts for the number of elements in the arrays.","nodes":[{"pos":[0,159],"content":"Pointer to a structure containing an array of arguments, an array of argument DispIDs for named arguments, and counts for the number of elements in the arrays.","nodes":[{"content":"Pointer to a structure containing an array of arguments, an array of argument DispIDs for named arguments, and counts for the number of elements in the arrays.","pos":[0,159]}]}],"pos":[86191,86351],"yaml":true},{"content":"Pointer to the location where the result is to be stored.","nodes":[{"pos":[0,57],"content":"Pointer to the location where the result is to be stored.","nodes":[{"content":"Pointer to the location where the result is to be stored.","pos":[0,57]}]}],"pos":[86417,86475],"yaml":true},{"content":"Pointer to a structure that contains exception information.","nodes":[{"pos":[0,59],"content":"Pointer to a structure that contains exception information.","nodes":[{"content":"Pointer to a structure that contains exception information.","pos":[0,59]}]}],"pos":[86541,86601],"yaml":true},{"content":"The index of the first argument that has an error.","nodes":[{"pos":[0,50],"content":"The index of the first argument that has an error.","nodes":[{"content":"The index of the first argument that has an error.","pos":[0,50]}]}],"pos":[86665,86716],"yaml":true},{"content":"Late-bound access using the COM <code>IDispatch</code> interface is not supported.","nodes":[{"pos":[0,82],"content":"Late-bound access using the COM <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">IDispatch</ph><ept id=\"p1\">&lt;/code&gt;</ept> interface is not supported.","source":"Late-bound access using the COM <code>IDispatch</code> interface is not supported."}],"pos":[86932,87015],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Reflection.AssemblyName\n  commentId: T:System.Reflection.AssemblyName\n  id: AssemblyName\n  children:\n  - System.Reflection.AssemblyName.#ctor\n  - System.Reflection.AssemblyName.#ctor(System.String)\n  - System.Reflection.AssemblyName.Clone\n  - System.Reflection.AssemblyName.CodeBase\n  - System.Reflection.AssemblyName.ContentType\n  - System.Reflection.AssemblyName.CultureInfo\n  - System.Reflection.AssemblyName.CultureName\n  - System.Reflection.AssemblyName.EscapedCodeBase\n  - System.Reflection.AssemblyName.Flags\n  - System.Reflection.AssemblyName.FullName\n  - System.Reflection.AssemblyName.GetAssemblyName(System.String)\n  - System.Reflection.AssemblyName.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Reflection.AssemblyName.GetPublicKey\n  - System.Reflection.AssemblyName.GetPublicKeyToken\n  - System.Reflection.AssemblyName.HashAlgorithm\n  - System.Reflection.AssemblyName.KeyPair\n  - System.Reflection.AssemblyName.Name\n  - System.Reflection.AssemblyName.OnDeserialization(System.Object)\n  - System.Reflection.AssemblyName.ProcessorArchitecture\n  - System.Reflection.AssemblyName.ReferenceMatchesDefinition(System.Reflection.AssemblyName,System.Reflection.AssemblyName)\n  - System.Reflection.AssemblyName.SetPublicKey(System.Byte[])\n  - System.Reflection.AssemblyName.SetPublicKeyToken(System.Byte[])\n  - System.Reflection.AssemblyName.ToString\n  - System.Reflection.AssemblyName.Version\n  - System.Reflection.AssemblyName.VersionCompatibility\n  - System.Reflection.AssemblyName.System#Runtime#InteropServices#_AssemblyName#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.AssemblyName.System#Runtime#InteropServices#_AssemblyName#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.AssemblyName.System#Runtime#InteropServices#_AssemblyName#GetTypeInfoCount(System.UInt32@)\n  - System.Reflection.AssemblyName.System#Runtime#InteropServices#_AssemblyName#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  langs:\n  - csharp\n  name: AssemblyName\n  nameWithType: AssemblyName\n  fullName: System.Reflection.AssemblyName\n  type: Class\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Describes an assembly's unique identity in full.\n  remarks: \"The <xref:System.Reflection.AssemblyName> object contains information about an assembly, which you can use to bind to that assembly. An assembly's identity consists of the following:  \\n  \\n-   Simple name.  \\n  \\n-   Version number.  \\n  \\n-   Cryptographic key pair.  \\n  \\n-   Supported culture.  \\n  \\n The simple name is typically the file name for the manifest file without its extension. The key pair includes a public and private key, used to create strong-name signatures for assemblies.  \\n  \\n All compilers that support the common language runtime will emit the simple name of a nested class, and reflection constructs a mangled name when queried, in accordance with the following conventions.  \\n  \\n|Delimiter|Meaning|  \\n|---------------|-------------|  \\n|Backslash (\\\\\\\\)|Escape character.|  \\n|Comma (,)|Precedes the assembly name.|  \\n|Plus sign (+)|Precedes a nested class.|  \\n  \\n For example, the fully qualified name for a class might look like this:  \\n  \\n ContainingClass+NestedClass,MyAssembly  \\n  \\n A \\\"++\\\" becomes \\\"\\\\\\\\+\\\\\\\\+\\\", and a \\\"\\\\\\\\\\\" becomes \\\"\\\\\\\\\\\\\\\\\\\".  \\n  \\n This qualified name can be persisted and later used to load the <xref:System.Type>. To search for and load a <xref:System.Type>, use <xref:System.Type.GetType%2A> either with the type name only or with the assembly qualified type name. <xref:System.Type.GetType%2A> with the type name only will look for the <xref:System.Type> in the caller's assembly and then in the System assembly. <xref:System.Type.GetType%2A> with the assembly qualified type name will look for the <xref:System.Type> in any assembly.  \\n  \\n A fully specified <xref:System.Reflection.AssemblyName> must have the name, culture, public key or public key token, major version, minor version, build number, and revision number parameters. The last four are packaged in the <xref:System.Version> type.  \\n  \\n To create a simple name, create an <xref:System.Reflection.AssemblyName> object using the default constructor and set the <xref:System.Reflection.AssemblyName.Name%2A>. The other properties are optional.  \\n  \\n To create a full strong name, create an <xref:System.Reflection.AssemblyName> object using the default constructor and set the <xref:System.Reflection.AssemblyName.Name%2A> and <xref:System.Reflection.AssemblyName.KeyPair%2A>. The other properties are optional. Use <xref:System.Reflection.AssemblyName.SetPublicKey%2A> and <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> to set the public key and the strong name. The strong name signing always uses the <xref:System.Security.Cryptography.SHA1> hash algorithm.  \\n  \\n To ensure that the names are constructed correctly, use the following properties:  \\n  \\n-   <xref:System.Reflection.Assembly.FullName%2A?displayProperty=fullName>  \\n  \\n-   <xref:System.Reflection.AssemblyName.FullName%2A?displayProperty=fullName>  \\n  \\n-   <xref:System.Type.AssemblyQualifiedName%2A?displayProperty=fullName>  \\n  \\n You can also get the name by using the `/l` option with the [Gacutil.exe (Global Assembly Cache Tool)](~/docs/framework/tools/gacutil-exe-gac-tool.md)  \\n  \\n For a partially specified strong name, create an <xref:System.Reflection.AssemblyName> object using the default constructor and set the name and public key. An assembly created using such an <xref:System.Reflection.AssemblyName> can be signed later using the Assembly Linker (Al.exe).  \\n  \\n It is possible to specify a public key and a <xref:System.Reflection.AssemblyName.KeyPair%2A> with inconsistent values. This can be useful in developer scenarios. In this case, the public key retrieved with <xref:System.Reflection.AssemblyName.GetPublicKey%2A> specifies the correct public key, while the <xref:System.Reflection.AssemblyName.KeyPair%2A> specifies the public and private keys used during development. When the runtime detects a mismatch between the <xref:System.Reflection.AssemblyName.KeyPair%2A> and the public key, it looks up in the registry the correct key that matches the public key.  \\n  \\n The format of the display name of an <xref:System.Reflection.AssemblyName> is a comma-delimited Unicode string that begins with the name, as follows:  \\n  \\n `Name <,Culture = CultureInfo> <,Version = Major.Minor.Build.Revision> <, StrongName> <,PublicKeyToken> '\\\\0'`  \\n  \\n `Name` is the textual name of the assembly. `CultureInfo` is the RFC1766-format-defined culture. `Major`, `Minor`, `Build`, and `Revision` are the major version, minor version, build number, and revision number of the assembly. `StrongName` is the hexadecimal-encoded low-order 64 bits of the hash value of the public key generated using the SHA-1 hashing algorithm and the public key specified by <xref:System.Reflection.AssemblyName.SetPublicKey%2A>. `PublicKeyToken` is the hexadecimal-encoded public key specified by <xref:System.Reflection.AssemblyName.SetPublicKey%2A>.  \\n  \\n Hexadecimal encoding is defined as the conversion of each byte of a binary object to two hexadecimal characters, progressing from least to most significant byte. Additional display values will be added as deemed necessary.  \\n  \\n If the full public key is known, then PublicKey may be substituted for StrongName.  \\n  \\n Also note that except for `Name`, which must come first, the lexical order of parameters is unimportant. However, any parameter (`Version`, `Culture`, `StrongName` or `PublicKey`) not specifically set is considered to be omitted, and the <xref:System.Reflection.AssemblyName> is then considered partial. When specifying partial information, Name parameters must be specified in the order described above.  \\n  \\n When supplying a display name, the convention `StrongName =null` or `PublicKey= null` indicates that binding and matching against a simply named assembly is required. Additionally, the convention `Culture= \\\"\\\"` (double quote representing an empty string) indicates matching against the default culture.  \\n  \\n The following example shows an <xref:System.Reflection.AssemblyName> for a simply named assembly with default culture.  \\n  \\n```  \\nExampleAssembly, Culture=\\\"\\\"  \\n```  \\n  \\n The following example shows a fully specified reference for a strongly named assembly with culture \\\"en\\\".  \\n  \\n```  \\nExampleAssembly, Version=1.0.0.0, Culture=en, PublicKeyToken=a5d015c7d5a0b012  \\n```\"\n  example:\n  - \"This example shows how to use various reflection classes to analyze the metadata contained in an assembly.  \\n  \\n [!code-cpp[Reflection#1](~/samples/snippets/cpp/VS_Snippets_CLR/Reflection/CPP/reflection.cpp#1)]\\n [!code-csharp[Reflection#1](~/samples/snippets/csharp/VS_Snippets_CLR/Reflection/CS/Reflection.cs#1)]\\n [!code-vb[Reflection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Reflection/VB/Reflection.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class AssemblyName : ICloneable, System.Runtime.InteropServices._AssemblyName, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable\n  inheritance:\n  - System.Object\n  implements:\n  - System.ICloneable\n  - System.Runtime.InteropServices._AssemblyName\n  - System.Runtime.Serialization.IDeserializationCallback\n  - System.Runtime.Serialization.ISerializable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  attributes:\n  - type: System.Runtime.InteropServices.ClassInterfaceAttribute\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyName.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.AssemblyName.#ctor\n  commentId: M:System.Reflection.AssemblyName.#ctor\n  id: '#ctor'\n  parent: System.Reflection.AssemblyName\n  langs:\n  - csharp\n  name: AssemblyName()\n  nameWithType: AssemblyName.AssemblyName()\n  fullName: AssemblyName.AssemblyName()\n  type: Constructor\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Initializes a new instance of the <xref href=\"System.Reflection.AssemblyName\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following example creates a dynamic assembly named `MyAssembly.exe` and saves it to your hard disk. After running the example, you can use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the assembly metadata.  \\n  \\n [!code-cpp[AssemblyName_Constructor#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_Constructor/CPP/assemblyname_constructor.cpp#1)]\\n [!code-csharp[AssemblyName_Constructor#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_Constructor/CS/assemblyname_constructor.cs#1)]\\n [!code-vb[AssemblyName_Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_Constructor/VB/assemblyname_constructor.vb#1)]\"\n  syntax:\n    content: public AssemblyName ();\n    parameters: []\n  overload: System.Reflection.AssemblyName.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyName.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.AssemblyName.#ctor(System.String)\n  commentId: M:System.Reflection.AssemblyName.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Reflection.AssemblyName\n  langs:\n  - csharp\n  name: AssemblyName(String)\n  nameWithType: AssemblyName.AssemblyName(String)\n  fullName: AssemblyName.AssemblyName(String)\n  type: Constructor\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Initializes a new instance of the <xref href=\"System.Reflection.AssemblyName\"></xref> class with the specified display name.\n  remarks: The supplied `assemblyName` is parsed, and the appropriate fields of the new <xref:System.Reflection.AssemblyName> are initialized with values from the display name. This is the recommended way of parsing display names. Writing your own code to parse display names is not recommended.\n  example:\n  - \"The following example creates an instance of <xref:System.Reflection.AssemblyName> from a display name. The individual elements of the display name are output to the console as properties of the <xref:System.Reflection.AssemblyName>object.  \\n  \\n [!code-cpp[AssemblyName_Constructor_2#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_Constructor_2/CPP/source.cpp#1)]\\n [!code-csharp[AssemblyName_Constructor_2#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_Constructor_2/CS/source.cs#1)]\\n [!code-vb[AssemblyName_Constructor_2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_Constructor_2/VB/source.vb#1)]\"\n  syntax:\n    content: public AssemblyName (string assemblyName);\n    parameters:\n    - id: assemblyName\n      type: System.String\n      description: The display name of the assembly, as returned by the <xref href=\"System.Reflection.AssemblyName.FullName\"></xref> property.\n  overload: System.Reflection.AssemblyName.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>assemblyName</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>assemblyName</code> is a zero length string.\n  - type: System.IO.FileLoadException\n    commentId: T:System.IO.FileLoadException\n    description: \"<block subset=\\\"none\\\" type=\\\"note\\\">\\n      <p>  \\n In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <xref href=\\\"System.IO.IOException\\\"></xref>, instead.  \\n  \\n</p>\\n    </block>  \\n  \\n The referenced assembly could not be found, or could not be loaded.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyName.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.AssemblyName.Clone\n  commentId: M:System.Reflection.AssemblyName.Clone\n  id: Clone\n  parent: System.Reflection.AssemblyName\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: AssemblyName.Clone()\n  fullName: AssemblyName.Clone()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Makes a copy of this <xref href=\"System.Reflection.AssemblyName\"></xref> object.\n  remarks: A new object is created, identical to the original.\n  syntax:\n    content: public object Clone ();\n    parameters: []\n    return:\n      type: System.Object\n      description: An object that is a copy of this <xref href=\"System.Reflection.AssemblyName\"></xref> object.\n  overload: System.Reflection.AssemblyName.Clone*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyName.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.AssemblyName.CodeBase\n  commentId: P:System.Reflection.AssemblyName.CodeBase\n  id: CodeBase\n  parent: System.Reflection.AssemblyName\n  langs:\n  - csharp\n  name: CodeBase\n  nameWithType: AssemblyName.CodeBase\n  fullName: AssemblyName.CodeBase\n  type: Property\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Gets or sets the location of the assembly as a URL.\n  remarks: \"When an assembly is loaded, this value can also be obtained using the <xref:System.Reflection.Assembly.CodeBase%2A?displayProperty=fullName> property.  \\n  \\n If the assembly was loaded as a byte array, this property returns the location of the caller of the <xref:System.Reflection.Assembly.Load%28System.Byte%5B%5D%29> method overload, not the location of the loaded assembly.  \\n  \\n> [!NOTE]\\n>  Do not use an <xref:System.Reflection.AssemblyName> with only the <xref:System.Reflection.AssemblyName.CodeBase%2A> property set. The <xref:System.Reflection.AssemblyName.CodeBase%2A> property does not supply any elements of the assembly identity (such as name or version), so loading does not occur according to load-by-identity rules, as you would expect from the <xref:System.Reflection.Assembly.Load%2A> method. Instead, the assembly is loaded using load-from rules. For information about the disadvantages of using the load-from context, see the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=fullName> method overload or [Best Practices for Assembly Loading](~/docs/framework/deployment/best-practices-for-assembly-loading.md).\"\n  example:\n  - \"The following example emits a dynamic assembly and saves it to the current directory. When the assembly is created, the <xref:System.Reflection.AssemblyName.CodeBase%2A> property is used to specify the directory where the assembly is saved.  \\n  \\n [!code-cpp[AssemblyName_CodeBase#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_CodeBase/CPP/assemblyname_codebase.cpp#1)]\\n [!code-csharp[AssemblyName_CodeBase#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_CodeBase/CS/assemblyname_codebase.cs#1)]\\n [!code-vb[AssemblyName_CodeBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_CodeBase/VB/assemblyname_codebase.vb#1)]\"\n  syntax:\n    content: public string CodeBase { get; set; }\n    return:\n      type: System.String\n      description: A string that is the URL location of the assembly.\n  overload: System.Reflection.AssemblyName.CodeBase*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyName.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.AssemblyName.ContentType\n  commentId: P:System.Reflection.AssemblyName.ContentType\n  id: ContentType\n  parent: System.Reflection.AssemblyName\n  langs:\n  - csharp\n  name: ContentType\n  nameWithType: AssemblyName.ContentType\n  fullName: AssemblyName.ContentType\n  type: Property\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Gets or sets a value that indicates what type of content the assembly contains.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public System.Reflection.AssemblyContentType ContentType { get; set; }\n    return:\n      type: System.Reflection.AssemblyContentType\n      description: A value that indicates what type of content the assembly contains.\n  overload: System.Reflection.AssemblyName.ContentType*\n  exceptions: []\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyName.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.AssemblyName.CultureInfo\n  commentId: P:System.Reflection.AssemblyName.CultureInfo\n  id: CultureInfo\n  parent: System.Reflection.AssemblyName\n  langs:\n  - csharp\n  name: CultureInfo\n  nameWithType: AssemblyName.CultureInfo\n  fullName: AssemblyName.CultureInfo\n  type: Property\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Gets or sets the culture supported by the assembly.\n  remarks: ''\n  example:\n  - \"The following example emits a dynamic assembly and saves it to the current directory. When the assembly is created, the <xref:System.Reflection.AssemblyName.CultureInfo%2A> property is used to specify the culture, which is part of the assembly's display name.  \\n  \\n [!code-cpp[AssemblyName_CodeBase#2](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_CodeBase/CPP/assemblyname_codebase.cpp#2)]\\n [!code-csharp[AssemblyName_CodeBase#2](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_CodeBase/CS/assemblyname_codebase.cs#2)]\\n [!code-vb[AssemblyName_CodeBase#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_CodeBase/VB/assemblyname_codebase.vb#2)]\"\n  syntax:\n    content: public System.Globalization.CultureInfo CultureInfo { get; set; }\n    return:\n      type: System.Globalization.CultureInfo\n      description: An object that represents the culture supported by the assembly.\n  overload: System.Reflection.AssemblyName.CultureInfo*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyName.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.AssemblyName.CultureName\n  commentId: P:System.Reflection.AssemblyName.CultureName\n  id: CultureName\n  parent: System.Reflection.AssemblyName\n  langs:\n  - csharp\n  name: CultureName\n  nameWithType: AssemblyName.CultureName\n  fullName: AssemblyName.CultureName\n  type: Property\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Gets or sets the name of the culture associated with the assembly.\n  syntax:\n    content: public string CultureName { get; set; }\n    return:\n      type: System.String\n      description: The culture name.\n  overload: System.Reflection.AssemblyName.CultureName*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyName.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.AssemblyName.EscapedCodeBase\n  commentId: P:System.Reflection.AssemblyName.EscapedCodeBase\n  id: EscapedCodeBase\n  parent: System.Reflection.AssemblyName\n  langs:\n  - csharp\n  name: EscapedCodeBase\n  nameWithType: AssemblyName.EscapedCodeBase\n  fullName: AssemblyName.EscapedCodeBase\n  type: Property\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Gets the URI, including escape characters, that represents the codebase.\n  syntax:\n    content: public string EscapedCodeBase { get; }\n    return:\n      type: System.String\n      description: A URI with escape characters.\n  overload: System.Reflection.AssemblyName.EscapedCodeBase*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyName.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.AssemblyName.Flags\n  commentId: P:System.Reflection.AssemblyName.Flags\n  id: Flags\n  parent: System.Reflection.AssemblyName\n  langs:\n  - csharp\n  name: Flags\n  nameWithType: AssemblyName.Flags\n  fullName: AssemblyName.Flags\n  type: Property\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Gets or sets the attributes of the assembly.\n  remarks: ''\n  example:\n  - \"The following example emits a dynamic assembly and saves it to the current directory. When the assembly is created, the <xref:System.Reflection.AssemblyName.Flags%2A> property is used to specify that the assembly has a public key.  \\n  \\n [!code-cpp[AssemblyName_KeyPair#4](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_KeyPair/CPP/assemblyname_keypair.cpp#4)]\\n [!code-csharp[AssemblyName_KeyPair#4](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_KeyPair/CS/assemblyname_keypair.cs#4)]\\n [!code-vb[AssemblyName_KeyPair#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_KeyPair/VB/assemblyname_keypair.vb#4)]\"\n  syntax:\n    content: public System.Reflection.AssemblyNameFlags Flags { get; set; }\n    return:\n      type: System.Reflection.AssemblyNameFlags\n      description: A value that represents the attributes of the assembly.\n  overload: System.Reflection.AssemblyName.Flags*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyName.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.AssemblyName.FullName\n  commentId: P:System.Reflection.AssemblyName.FullName\n  id: FullName\n  parent: System.Reflection.AssemblyName\n  langs:\n  - csharp\n  name: FullName\n  nameWithType: AssemblyName.FullName\n  fullName: AssemblyName.FullName\n  type: Property\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Gets the full name of the assembly, also known as the display name.\n  remarks: \"The display name typically consists of the simple name, version number, supported culture, and public key. For example:  \\n  \\n```  \\nmylib, Version=1.2.1900.0, Culture=neutral, PublicKeyToken=a14f3033def15840  \\n```  \\n  \\n Writing your own code to parse display names is not recommended. Instead, pass the display name to the <xref:System.Reflection.AssemblyName.%23ctor%2A> constructor, which parses it and populates the appropriate fields of the new <xref:System.Reflection.AssemblyName>.  \\n  \\n When an assembly is loaded, this value can also be obtained using the <xref:System.Reflection.Assembly.FullName%2A?displayProperty=fullName> property.\"\n  example:\n  - \"The following example emits a dynamic assembly and saves it to the current directory. When the assembly is created, the code example sets the <xref:System.Reflection.AssemblyName.Name%2A>, <xref:System.Reflection.AssemblyName.Version%2A>, <xref:System.Reflection.AssemblyName.CultureInfo%2A>, and <xref:System.Reflection.AssemblyName.KeyPair%2A> properties, which together comprise an assembly's full name, or display name. The <xref:System.Reflection.AssemblyName.FullName%2A> property is then used to retrieve the display name.  \\n  \\n [!code-cpp[AssemblyName_CodeBase#4](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_CodeBase/CPP/assemblyname_codebase.cpp#4)]\\n [!code-csharp[AssemblyName_CodeBase#4](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_CodeBase/CS/assemblyname_codebase.cs#4)]\\n [!code-vb[AssemblyName_CodeBase#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_CodeBase/VB/assemblyname_codebase.vb#4)]\"\n  syntax:\n    content: public string FullName { get; }\n    return:\n      type: System.String\n      description: A string that is the full name of the assembly, also known as the display name.\n  overload: System.Reflection.AssemblyName.FullName*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyName.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.AssemblyName.GetAssemblyName(System.String)\n  commentId: M:System.Reflection.AssemblyName.GetAssemblyName(System.String)\n  id: GetAssemblyName(System.String)\n  parent: System.Reflection.AssemblyName\n  langs:\n  - csharp\n  name: GetAssemblyName(String)\n  nameWithType: AssemblyName.GetAssemblyName(String)\n  fullName: AssemblyName.GetAssemblyName(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Gets the <xref href=\"System.Reflection.AssemblyName\"></xref> for a given file.\n  remarks: This will only work if the file contains an assembly manifest. This method causes the file to be opened and closed, but the assembly is not added to this domain.\n  example:\n  - \"The following example gets the <xref:System.Reflection.AssemblyName> for an assembly on disk. It will not run unless you replace the string \\\"MyAssembly.exe\\\" with the file name of an assembly (including the path, if necessary) on your hard disk. Alternatively, you can compile this example as \\\"MyAssembly.exe\\\".  \\n  \\n [!code-cpp[AssemblyName_GetAssemblyName#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_GetAssemblyName/CPP/assemblyname_getassemblyname.cpp#1)]\\n [!code-csharp[AssemblyName_GetAssemblyName#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_GetAssemblyName/CS/assemblyname_getassemblyname.cs#1)]\\n [!code-vb[AssemblyName_GetAssemblyName#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_GetAssemblyName/VB/assemblyname_getassemblyname.vb#1)]\"\n  syntax:\n    content: public static System.Reflection.AssemblyName GetAssemblyName (string assemblyFile);\n    parameters:\n    - id: assemblyFile\n      type: System.String\n      description: The path for the assembly whose <xref href=\"System.Reflection.AssemblyName\"></xref> is to be returned.\n    return:\n      type: System.Reflection.AssemblyName\n      description: An object that represents the given assembly file.\n  overload: System.Reflection.AssemblyName.GetAssemblyName*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>assemblyFile</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>assemblyFile</code> is invalid, such as an assembly with an invalid culture.\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: <code>assemblyFile</code> is not found.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have path discovery permission.\n  - type: System.BadImageFormatException\n    commentId: T:System.BadImageFormatException\n    description: <code>assemblyFile</code> is not a valid assembly.\n  - type: System.IO.FileLoadException\n    commentId: T:System.IO.FileLoadException\n    description: An assembly or module was loaded twice with two different sets of evidence.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyName.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.AssemblyName.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  commentId: M:System.Reflection.AssemblyName.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Reflection.AssemblyName\n  langs:\n  - csharp\n  name: GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: AssemblyName.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: AssemblyName.GetObjectData(SerializationInfo, StreamingContext)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Gets serialization information with all the data needed to recreate an instance of this `AssemblyName`.\n  syntax:\n    content: public void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: The object to be populated with serialization information.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: The destination context of the serialization.\n  overload: System.Reflection.AssemblyName.GetObjectData*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>info</code> is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyName.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.AssemblyName.GetPublicKey\n  commentId: M:System.Reflection.AssemblyName.GetPublicKey\n  id: GetPublicKey\n  parent: System.Reflection.AssemblyName\n  langs:\n  - csharp\n  name: GetPublicKey()\n  nameWithType: AssemblyName.GetPublicKey()\n  fullName: AssemblyName.GetPublicKey()\n  type: Method\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Gets the public key of the assembly.\n  remarks: ''\n  example:\n  - \"The following example emits a dynamic assembly and saves it to the current directory. When the assembly is created, the <xref:System.Reflection.AssemblyName.SetPublicKey%2A> method is used to give the assembly a public key. The <xref:System.Reflection.AssemblyName.GetPublicKey%2A> method is then used to retrieve the public key, which is displayed to the console.  \\n  \\n [!code-cpp[AssemblyName_KeyPair#2](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_KeyPair/CPP/assemblyname_keypair.cpp#2)]\\n [!code-csharp[AssemblyName_KeyPair#2](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_KeyPair/CS/assemblyname_keypair.cs#2)]\\n [!code-vb[AssemblyName_KeyPair#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_KeyPair/VB/assemblyname_keypair.vb#2)]\"\n  syntax:\n    content: public byte[] GetPublicKey ();\n    parameters: []\n    return:\n      type: System.Byte[]\n      description: A byte array that contains the public key of the assembly.\n  overload: System.Reflection.AssemblyName.GetPublicKey*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: A public key was provided (for example, by using the <xref href=\"System.Reflection.AssemblyName.SetPublicKey(System.Byte[])\"></xref> method), but no public key token was provided.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyName.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.AssemblyName.GetPublicKeyToken\n  commentId: M:System.Reflection.AssemblyName.GetPublicKeyToken\n  id: GetPublicKeyToken\n  parent: System.Reflection.AssemblyName\n  langs:\n  - csharp\n  name: GetPublicKeyToken()\n  nameWithType: AssemblyName.GetPublicKeyToken()\n  fullName: AssemblyName.GetPublicKeyToken()\n  type: Method\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Gets the public key token, which is the last 8 bytes of the SHA-1 hash of the public key under which the application or assembly is signed.\n  remarks: ''\n  example:\n  - \"The following example emits a dynamic assembly and saves it to the current directory. When the assembly is created, the <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> method is used to set the assembly's public key token. The <xref:System.Reflection.AssemblyName.GetPublicKeyToken%2A> method is then used to retrieve the public key token, which is displayed to the console.  \\n  \\n [!code-cpp[AssemblyName_KeyPair#3](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_KeyPair/CPP/assemblyname_keypair.cpp#3)]\\n [!code-csharp[AssemblyName_KeyPair#3](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_KeyPair/CS/assemblyname_keypair.cs#3)]\\n [!code-vb[AssemblyName_KeyPair#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_KeyPair/VB/assemblyname_keypair.vb#3)]\"\n  syntax:\n    content: public byte[] GetPublicKeyToken ();\n    parameters: []\n    return:\n      type: System.Byte[]\n      description: A byte array that contains the public key token.\n  overload: System.Reflection.AssemblyName.GetPublicKeyToken*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyName.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.AssemblyName.HashAlgorithm\n  commentId: P:System.Reflection.AssemblyName.HashAlgorithm\n  id: HashAlgorithm\n  parent: System.Reflection.AssemblyName\n  langs:\n  - csharp\n  name: HashAlgorithm\n  nameWithType: AssemblyName.HashAlgorithm\n  fullName: AssemblyName.HashAlgorithm\n  type: Property\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Gets or sets the hash algorithm used by the assembly manifest.\n  remarks: >-\n    > [!IMPORTANT]\n\n    >  Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.Reflection.AssemblyName.HashAlgorithm%2A> property of an <xref:System.Reflection.AssemblyName> object that is returned by the <xref:System.Reflection.Assembly.GetReferencedAssemblies%2A?displayProperty=fullName> method is <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm?displayProperty=fullName> if there is no hash algorithm for the referenced assembly, or if the hash algorithm of the referenced assembly is not identified by the <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm?displayProperty=fullName> enumeration. In previous versions of the .NET Framework, the <xref:System.Reflection.AssemblyName.HashAlgorithm%2A> property returned <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm?displayProperty=fullName> in this situation.\n  example:\n  - \"The following example emits a dynamic assembly and saves it to the current directory. When the assembly is created, the <xref:System.Reflection.AssemblyName.HashAlgorithm%2A> property is used to set the hash algorithm for the assembly manifest.  \\n  \\n [!code-cpp[AssemblyName_CodeBase#3](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_CodeBase/CPP/assemblyname_codebase.cpp#3)]\\n [!code-csharp[AssemblyName_CodeBase#3](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_CodeBase/CS/assemblyname_codebase.cs#3)]\\n [!code-vb[AssemblyName_CodeBase#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_CodeBase/VB/assemblyname_codebase.vb#3)]\"\n  syntax:\n    content: public System.Configuration.Assemblies.AssemblyHashAlgorithm HashAlgorithm { get; set; }\n    return:\n      type: System.Configuration.Assemblies.AssemblyHashAlgorithm\n      description: The hash algorithm used by the assembly manifest.\n  overload: System.Reflection.AssemblyName.HashAlgorithm*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyName.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.AssemblyName.KeyPair\n  commentId: P:System.Reflection.AssemblyName.KeyPair\n  id: KeyPair\n  parent: System.Reflection.AssemblyName\n  langs:\n  - csharp\n  name: KeyPair\n  nameWithType: AssemblyName.KeyPair\n  fullName: AssemblyName.KeyPair\n  type: Property\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Gets or sets the public and private cryptographic key pair that is used to create a strong name signature for the assembly.\n  remarks: When the runtime loads an assembly, it does not set the <xref:System.Reflection.AssemblyName.KeyPair%2A> property. The getter for the property is only useful if the user set the property before using the <xref:System.Reflection.AssemblyName> object to create a dynamic assembly, and subsequently wants to retrieve the key pair.\n  example:\n  - \"The following example emits a dynamic assembly and saves it to the current directory. When the assembly is created, the <xref:System.Reflection.AssemblyName.KeyPair%2A> property is used to set the assembly's public and private cryptographic keys. .  \\n  \\n [!code-cpp[AssemblyName_KeyPair#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_KeyPair/CPP/assemblyname_keypair.cpp#1)]\\n [!code-csharp[AssemblyName_KeyPair#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_KeyPair/CS/assemblyname_keypair.cs#1)]\\n [!code-vb[AssemblyName_KeyPair#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_KeyPair/VB/assemblyname_keypair.vb#1)]\"\n  syntax:\n    content: public System.Reflection.StrongNameKeyPair KeyPair { get; set; }\n    return:\n      type: System.Reflection.StrongNameKeyPair\n      description: The public and private cryptographic key pair to be used to create a strong name for the assembly.\n  overload: System.Reflection.AssemblyName.KeyPair*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyName.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.AssemblyName.Name\n  commentId: P:System.Reflection.AssemblyName.Name\n  id: Name\n  parent: System.Reflection.AssemblyName\n  langs:\n  - csharp\n  name: Name\n  nameWithType: AssemblyName.Name\n  fullName: AssemblyName.Name\n  type: Property\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Gets or sets the simple name of the assembly. This is usually, but not necessarily, the file name of the manifest file of the assembly, minus its extension.\n  remarks: \"The manifest file is the file that contains the assembly manifest.  \\n  \\n For example, the simple name of a single-file assembly named \\\"MyAssembly.dll\\\" is \\\"MyAssembly\\\".\"\n  example:\n  - \"The following example emits a dynamic assembly and saves it to the current directory. When the assembly is created, the <xref:System.Reflection.AssemblyName.Name%2A> property is used to set the simple name of the dynamic assembly.  \\n  \\n [!code-cpp[AssemblyName_Constructor#2](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_Constructor/CPP/assemblyname_constructor.cpp#2)]\\n [!code-csharp[AssemblyName_Constructor#2](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_Constructor/CS/assemblyname_constructor.cs#2)]\\n [!code-vb[AssemblyName_Constructor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_Constructor/VB/assemblyname_constructor.vb#2)]\"\n  syntax:\n    content: public string Name { get; set; }\n    return:\n      type: System.String\n      description: The simple name of the assembly.\n  overload: System.Reflection.AssemblyName.Name*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyName.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.AssemblyName.OnDeserialization(System.Object)\n  commentId: M:System.Reflection.AssemblyName.OnDeserialization(System.Object)\n  id: OnDeserialization(System.Object)\n  parent: System.Reflection.AssemblyName\n  langs:\n  - csharp\n  name: OnDeserialization(Object)\n  nameWithType: AssemblyName.OnDeserialization(Object)\n  fullName: AssemblyName.OnDeserialization(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Implements the <xref href=\"System.Runtime.Serialization.ISerializable\"></xref> interface and is called back by the deserialization event when deserialization is complete.\n  syntax:\n    content: public void OnDeserialization (object sender);\n    parameters:\n    - id: sender\n      type: System.Object\n      description: The source of the deserialization event.\n  overload: System.Reflection.AssemblyName.OnDeserialization*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyName.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.AssemblyName.ProcessorArchitecture\n  commentId: P:System.Reflection.AssemblyName.ProcessorArchitecture\n  id: ProcessorArchitecture\n  parent: System.Reflection.AssemblyName\n  langs:\n  - csharp\n  name: ProcessorArchitecture\n  nameWithType: AssemblyName.ProcessorArchitecture\n  fullName: AssemblyName.ProcessorArchitecture\n  type: Property\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Gets or sets a value that identifies the processor and bits-per-word of the platform targeted by an executable.\n  remarks: Beginning with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], this property always returns <xref:System.Reflection.ProcessorArchitecture?displayProperty=fullName> for reference assemblies.\n  syntax:\n    content: public System.Reflection.ProcessorArchitecture ProcessorArchitecture { get; set; }\n    return:\n      type: System.Reflection.ProcessorArchitecture\n      description: One of the enumeration values that identifies the processor and bits-per-word of the platform targeted by an executable.\n  overload: System.Reflection.AssemblyName.ProcessorArchitecture*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyName.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.AssemblyName.ReferenceMatchesDefinition(System.Reflection.AssemblyName,System.Reflection.AssemblyName)\n  commentId: M:System.Reflection.AssemblyName.ReferenceMatchesDefinition(System.Reflection.AssemblyName,System.Reflection.AssemblyName)\n  id: ReferenceMatchesDefinition(System.Reflection.AssemblyName,System.Reflection.AssemblyName)\n  parent: System.Reflection.AssemblyName\n  langs:\n  - csharp\n  name: ReferenceMatchesDefinition(AssemblyName, AssemblyName)\n  nameWithType: AssemblyName.ReferenceMatchesDefinition(AssemblyName, AssemblyName)\n  fullName: AssemblyName.ReferenceMatchesDefinition(AssemblyName, AssemblyName)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Returns a value indicating whether two assembly names are the same. The comparison is based on the simple assembly names.\n  remarks: The comparison depends only on the simple assembly name. It ignores version, culture, and public key token.\n  syntax:\n    content: public static bool ReferenceMatchesDefinition (System.Reflection.AssemblyName reference, System.Reflection.AssemblyName definition);\n    parameters:\n    - id: reference\n      type: System.Reflection.AssemblyName\n      description: The reference assembly name.\n    - id: definition\n      type: System.Reflection.AssemblyName\n      description: The assembly name that is compared to the reference assembly.\n    return:\n      type: System.Boolean\n      description: '`true` if the simple assembly names are the same; otherwise, `false`.'\n  overload: System.Reflection.AssemblyName.ReferenceMatchesDefinition*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyName.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.AssemblyName.SetPublicKey(System.Byte[])\n  commentId: M:System.Reflection.AssemblyName.SetPublicKey(System.Byte[])\n  id: SetPublicKey(System.Byte[])\n  parent: System.Reflection.AssemblyName\n  langs:\n  - csharp\n  name: SetPublicKey(Byte[])\n  nameWithType: AssemblyName.SetPublicKey(Byte[])\n  fullName: AssemblyName.SetPublicKey(Byte[])\n  type: Method\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Sets the public key identifying the assembly.\n  remarks: You must also use the <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> method to provide a public key token. Otherwise, a <xref:System.Security.SecurityException> is thrown when the <xref:System.Reflection.AssemblyName.GetPublicKey%2A> method is called.\n  example:\n  - \"The following example emits a dynamic assembly and saves it to the current directory. When the assembly is created, the <xref:System.Reflection.AssemblyName.SetPublicKey%2A> method is used to give the assembly a public key. The <xref:System.Reflection.AssemblyName.GetPublicKey%2A> method is then used to retrieve the public key, which is displayed to the console.  \\n  \\n [!code-cpp[AssemblyName_SetPublicKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_SetPublicKey/CPP/assemblyname_setpublickey.cpp#1)]\\n [!code-csharp[AssemblyName_SetPublicKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_SetPublicKey/CS/assemblyname_setpublickey.cs#1)]\\n [!code-vb[AssemblyName_SetPublicKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_SetPublicKey/VB/assemblyname_setpublickey.vb#1)]\"\n  syntax:\n    content: public void SetPublicKey (byte[] publicKey);\n    parameters:\n    - id: publicKey\n      type: System.Byte[]\n      description: A byte array containing the public key of the assembly.\n  overload: System.Reflection.AssemblyName.SetPublicKey*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyName.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.AssemblyName.SetPublicKeyToken(System.Byte[])\n  commentId: M:System.Reflection.AssemblyName.SetPublicKeyToken(System.Byte[])\n  id: SetPublicKeyToken(System.Byte[])\n  parent: System.Reflection.AssemblyName\n  langs:\n  - csharp\n  name: SetPublicKeyToken(Byte[])\n  nameWithType: AssemblyName.SetPublicKeyToken(Byte[])\n  fullName: AssemblyName.SetPublicKeyToken(Byte[])\n  type: Method\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Sets the public key token, which is the last 8 bytes of the SHA-1 hash of the public key under which the application or assembly is signed.\n  remarks: When you set the public key by calling the <xref:System.Reflection.AssemblyName.SetPublicKey%2A> method, you must also use the <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> method to provide a public key token. Otherwise, a <xref:System.Security.SecurityException> is thrown when the <xref:System.Reflection.AssemblyName.GetPublicKey%2A> method is called.\n  example:\n  - \"The following example emits a dynamic assembly and saves it to the current directory. When the assembly is created, the <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> method is used to set the assembly's public key token. The <xref:System.Reflection.AssemblyName.GetPublicKeyToken%2A> method is then used to retrieve the public key token, which is displayed to the console.  \\n  \\n [!code-cpp[AssemblyName_SetPublicKey#2](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_SetPublicKey/CPP/assemblyname_setpublickey.cpp#2)]\\n [!code-csharp[AssemblyName_SetPublicKey#2](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_SetPublicKey/CS/assemblyname_setpublickey.cs#2)]\\n [!code-vb[AssemblyName_SetPublicKey#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_SetPublicKey/VB/assemblyname_setpublickey.vb#2)]\"\n  syntax:\n    content: public void SetPublicKeyToken (byte[] publicKeyToken);\n    parameters:\n    - id: publicKeyToken\n      type: System.Byte[]\n      description: A byte array containing the public key token of the assembly.\n  overload: System.Reflection.AssemblyName.SetPublicKeyToken*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyName.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.AssemblyName.ToString\n  commentId: M:System.Reflection.AssemblyName.ToString\n  id: ToString\n  parent: System.Reflection.AssemblyName\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: AssemblyName.ToString()\n  fullName: AssemblyName.ToString()\n  type: Method\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Returns the full name of the assembly, also known as the display name.\n  remarks: See the description of <xref:System.Reflection.AssemblyName> for the format of the returned string.\n  example:\n  - \"The following example gets an <xref:System.Reflection.AssemblyName> object for a hypothetical `MyAssembly.exe` assembly, and then uses the <xref:System.Reflection.AssemblyName.ToString%2A> method to retrieve the full assembly name, or display name.  \\n  \\n [!code-cpp[AssemblyName_GetAssemblyName#2](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_GetAssemblyName/CPP/assemblyname_getassemblyname.cpp#2)]\\n [!code-csharp[AssemblyName_GetAssemblyName#2](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_GetAssemblyName/CS/assemblyname_getassemblyname.cs#2)]\\n [!code-vb[AssemblyName_GetAssemblyName#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_GetAssemblyName/VB/assemblyname_getassemblyname.vb#2)]\"\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: The full name of the assembly, or the class name if the full name cannot be determined.\n  overload: System.Reflection.AssemblyName.ToString*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyName.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.AssemblyName.Version\n  commentId: P:System.Reflection.AssemblyName.Version\n  id: Version\n  parent: System.Reflection.AssemblyName\n  langs:\n  - csharp\n  name: Version\n  nameWithType: AssemblyName.Version\n  fullName: AssemblyName.Version\n  type: Property\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Gets or sets the major, minor, build, and revision numbers of the assembly.\n  remarks: All components of the version must be integers greater than or equal to zero. Metadata restricts the major, minor, build, and revision components for an assembly to a maximum value of <xref:System.UInt16.MaxValue?displayProperty=fullName> - 1. If a component exceeds this value, no error is thrown; however, in a dynamic assembly, that component is zero.\n  example:\n  - \"This section contains two examples. The first example shows how to retrieve the version of the currently executing assembly. The second example shows how to use the <xref:System.Reflection.AssemblyName.Version%2A> property to specify the assembly version when you emit a dynamic assembly.  \\n  \\n **Example 1**  \\n  \\n The following example retrieves and displays the version numbers of the currently executing assembly and the assembly that contains the <xref:System.String> class.  \\n  \\n [!code-cpp[AssemblyName.Version#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName.Version/cpp/Example.cpp#1)]\\n [!code-csharp[AssemblyName.Version#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName.Version/cs/Example.cs#1)]\\n [!code-vb[AssemblyName.Version#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName.Version/vb/Example.vb#1)]  \\n  \\n **Example 2**  \\n  \\n The following example emits a dynamic assembly and saves it to the current directory. When the assembly is created, the <xref:System.Reflection.AssemblyName.Version%2A> property is used to specify version information for the assembly.  \\n  \\n [!code-cpp[AssemblyName_Constructor#3](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_Constructor/CPP/assemblyname_constructor.cpp#3)]\\n [!code-csharp[AssemblyName_Constructor#3](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_Constructor/CS/assemblyname_constructor.cs#3)]\\n [!code-vb[AssemblyName_Constructor#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_Constructor/VB/assemblyname_constructor.vb#3)]\"\n  syntax:\n    content: public Version Version { get; set; }\n    return:\n      type: System.Version\n      description: An object that represents the major, minor, build, and revision numbers of the assembly.\n  overload: System.Reflection.AssemblyName.Version*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyName.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.AssemblyName.VersionCompatibility\n  commentId: P:System.Reflection.AssemblyName.VersionCompatibility\n  id: VersionCompatibility\n  parent: System.Reflection.AssemblyName\n  langs:\n  - csharp\n  name: VersionCompatibility\n  nameWithType: AssemblyName.VersionCompatibility\n  fullName: AssemblyName.VersionCompatibility\n  type: Property\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Gets or sets the information related to the assembly's compatibility with other assemblies.\n  remarks: \"<xref:System.Reflection.AssemblyName.VersionCompatibility%2A> information indicates, for example, that the assembly cannot execute side-by-side with other versions due to conflicts over a device driver.  \\n  \\n Currently, <xref:System.Reflection.AssemblyName.VersionCompatibility%2A> always returns <xref:System.Configuration.Assemblies.AssemblyVersionCompatibility?displayProperty=fullName>, and is not used by the loader. This property is reserved for a future feature.\"\n  syntax:\n    content: public System.Configuration.Assemblies.AssemblyVersionCompatibility VersionCompatibility { get; set; }\n    return:\n      type: System.Configuration.Assemblies.AssemblyVersionCompatibility\n      description: A value that represents information about the assembly's compatibility with other assemblies.\n  overload: System.Reflection.AssemblyName.VersionCompatibility*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyName.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.AssemblyName.System#Runtime#InteropServices#_AssemblyName#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  commentId: M:System.Reflection.AssemblyName.System#Runtime#InteropServices#_AssemblyName#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  id: System#Runtime#InteropServices#_AssemblyName#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  isEii: true\n  parent: System.Reflection.AssemblyName\n  langs:\n  - csharp\n  name: _AssemblyName.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: AssemblyName._AssemblyName.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: AssemblyName._AssemblyName.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  summary: Maps a set of names to a corresponding set of dispatch identifiers.\n  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.\n  syntax:\n    content: void _AssemblyName.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);\n    parameters:\n    - id: riid\n      type: System.Guid\n      description: Reserved for future use. Must be IID_NULL.\n    - id: rgszNames\n      type: System.IntPtr\n      description: Passed-in array of names to be mapped.\n    - id: cNames\n      type: System.UInt32\n      description: Count of the names to be mapped.\n    - id: lcid\n      type: System.UInt32\n      description: The locale context in which to interpret the names.\n    - id: rgDispId\n      type: System.IntPtr\n      description: Caller-allocated array that receives the IDs corresponding to the names.\n  overload: System.Reflection.AssemblyName.System#Runtime#InteropServices#_AssemblyName#GetIDsOfNames*\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: Late-bound access using the COM <code>IDispatch</code> interface is not supported.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyName.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.AssemblyName.System#Runtime#InteropServices#_AssemblyName#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  commentId: M:System.Reflection.AssemblyName.System#Runtime#InteropServices#_AssemblyName#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  id: System#Runtime#InteropServices#_AssemblyName#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  isEii: true\n  parent: System.Reflection.AssemblyName\n  langs:\n  - csharp\n  name: _AssemblyName.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: AssemblyName._AssemblyName.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: AssemblyName._AssemblyName.GetTypeInfo(UInt32, UInt32, IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  summary: Retrieves the type information for an object, which can then be used to get the type information for an interface.\n  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.\n  syntax:\n    content: void _AssemblyName.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);\n    parameters:\n    - id: iTInfo\n      type: System.UInt32\n      description: The type information to return.\n    - id: lcid\n      type: System.UInt32\n      description: The locale identifier for the type information.\n    - id: ppTInfo\n      type: System.IntPtr\n      description: Receives a pointer to the requested type information object.\n  overload: System.Reflection.AssemblyName.System#Runtime#InteropServices#_AssemblyName#GetTypeInfo*\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: Late-bound access using the COM <code>IDispatch</code> interface is not supported.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyName.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.AssemblyName.System#Runtime#InteropServices#_AssemblyName#GetTypeInfoCount(System.UInt32@)\n  commentId: M:System.Reflection.AssemblyName.System#Runtime#InteropServices#_AssemblyName#GetTypeInfoCount(System.UInt32@)\n  id: System#Runtime#InteropServices#_AssemblyName#GetTypeInfoCount(System.UInt32@)\n  isEii: true\n  parent: System.Reflection.AssemblyName\n  langs:\n  - csharp\n  name: _AssemblyName.GetTypeInfoCount(UInt32)\n  nameWithType: AssemblyName._AssemblyName.GetTypeInfoCount(UInt32)\n  fullName: AssemblyName._AssemblyName.GetTypeInfoCount(UInt32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  summary: Retrieves the number of type information interfaces that an object provides (either 0 or 1).\n  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.\n  syntax:\n    content: void _AssemblyName.GetTypeInfoCount (out uint pcTInfo);\n    parameters:\n    - id: pcTInfo\n      type: System.UInt32\n      description: Points to a location that receives the number of type information interfaces provided by the object.\n  overload: System.Reflection.AssemblyName.System#Runtime#InteropServices#_AssemblyName#GetTypeInfoCount*\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: Late-bound access using the COM <code>IDispatch</code> interface is not supported.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyName.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.AssemblyName.System#Runtime#InteropServices#_AssemblyName#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  commentId: M:System.Reflection.AssemblyName.System#Runtime#InteropServices#_AssemblyName#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  id: System#Runtime#InteropServices#_AssemblyName#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  isEii: true\n  parent: System.Reflection.AssemblyName\n  langs:\n  - csharp\n  name: _AssemblyName.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: AssemblyName._AssemblyName.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: AssemblyName._AssemblyName.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  summary: Provides access to properties and methods exposed by an object.\n  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::Invoke`, see the MSDN Library.\n  syntax:\n    content: void _AssemblyName.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);\n    parameters:\n    - id: dispIdMember\n      type: System.UInt32\n      description: Identifies the member.\n    - id: riid\n      type: System.Guid\n      description: Reserved for future use. Must be IID_NULL.\n    - id: lcid\n      type: System.UInt32\n      description: The locale context in which to interpret arguments.\n    - id: wFlags\n      type: System.Int16\n      description: Flags describing the context of the call.\n    - id: pDispParams\n      type: System.IntPtr\n      description: Pointer to a structure containing an array of arguments, an array of argument DispIDs for named arguments, and counts for the number of elements in the arrays.\n    - id: pVarResult\n      type: System.IntPtr\n      description: Pointer to the location where the result is to be stored.\n    - id: pExcepInfo\n      type: System.IntPtr\n      description: Pointer to a structure that contains exception information.\n    - id: puArgErr\n      type: System.IntPtr\n      description: The index of the first argument that has an error.\n  overload: System.Reflection.AssemblyName.System#Runtime#InteropServices#_AssemblyName#Invoke*\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: Late-bound access using the COM <code>IDispatch</code> interface is not supported.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyName.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.IO.FileLoadException\n  parent: System.IO\n  isExternal: false\n  name: FileLoadException\n  nameWithType: FileLoadException\n  fullName: System.IO.FileLoadException\n- uid: System.IO.FileNotFoundException\n  parent: System.IO\n  isExternal: false\n  name: FileNotFoundException\n  nameWithType: FileNotFoundException\n  fullName: System.IO.FileNotFoundException\n- uid: System.Security.SecurityException\n  parent: System.Security\n  isExternal: false\n  name: SecurityException\n  nameWithType: SecurityException\n  fullName: System.Security.SecurityException\n- uid: System.BadImageFormatException\n  parent: System\n  isExternal: false\n  name: BadImageFormatException\n  nameWithType: BadImageFormatException\n  fullName: System.BadImageFormatException\n- uid: System.NotImplementedException\n  parent: System\n  isExternal: false\n  name: NotImplementedException\n  nameWithType: NotImplementedException\n  fullName: System.NotImplementedException\n- uid: System.Reflection.AssemblyName.#ctor\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: AssemblyName()\n  nameWithType: AssemblyName.AssemblyName()\n  fullName: AssemblyName.AssemblyName()\n- uid: System.Reflection.AssemblyName.#ctor(System.String)\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: AssemblyName(String)\n  nameWithType: AssemblyName.AssemblyName(String)\n  fullName: AssemblyName.AssemblyName(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.AssemblyName.Clone\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: Clone()\n  nameWithType: AssemblyName.Clone()\n  fullName: AssemblyName.Clone()\n- uid: System.Reflection.AssemblyName.CodeBase\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: CodeBase\n  nameWithType: AssemblyName.CodeBase\n  fullName: AssemblyName.CodeBase\n- uid: System.Reflection.AssemblyName.ContentType\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: ContentType\n  nameWithType: AssemblyName.ContentType\n  fullName: AssemblyName.ContentType\n- uid: System.Reflection.AssemblyContentType\n  parent: System.Reflection\n  isExternal: false\n  name: AssemblyContentType\n  nameWithType: AssemblyContentType\n  fullName: System.Reflection.AssemblyContentType\n- uid: System.Reflection.AssemblyName.CultureInfo\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: CultureInfo\n  nameWithType: AssemblyName.CultureInfo\n  fullName: AssemblyName.CultureInfo\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Reflection.AssemblyName.CultureName\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: CultureName\n  nameWithType: AssemblyName.CultureName\n  fullName: AssemblyName.CultureName\n- uid: System.Reflection.AssemblyName.EscapedCodeBase\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: EscapedCodeBase\n  nameWithType: AssemblyName.EscapedCodeBase\n  fullName: AssemblyName.EscapedCodeBase\n- uid: System.Reflection.AssemblyName.Flags\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: Flags\n  nameWithType: AssemblyName.Flags\n  fullName: AssemblyName.Flags\n- uid: System.Reflection.AssemblyNameFlags\n  parent: System.Reflection\n  isExternal: false\n  name: AssemblyNameFlags\n  nameWithType: AssemblyNameFlags\n  fullName: System.Reflection.AssemblyNameFlags\n- uid: System.Reflection.AssemblyName.FullName\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: FullName\n  nameWithType: AssemblyName.FullName\n  fullName: AssemblyName.FullName\n- uid: System.Reflection.AssemblyName.GetAssemblyName(System.String)\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: GetAssemblyName(String)\n  nameWithType: AssemblyName.GetAssemblyName(String)\n  fullName: AssemblyName.GetAssemblyName(String)\n- uid: System.Reflection.AssemblyName\n  parent: System.Reflection\n  isExternal: false\n  name: AssemblyName\n  nameWithType: AssemblyName\n  fullName: System.Reflection.AssemblyName\n- uid: System.Reflection.AssemblyName.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: AssemblyName.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: AssemblyName.GetObjectData(SerializationInfo, StreamingContext)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.Reflection.AssemblyName.GetPublicKey\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: GetPublicKey()\n  nameWithType: AssemblyName.GetPublicKey()\n  fullName: AssemblyName.GetPublicKey()\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Reflection.AssemblyName.GetPublicKeyToken\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: GetPublicKeyToken()\n  nameWithType: AssemblyName.GetPublicKeyToken()\n  fullName: AssemblyName.GetPublicKeyToken()\n- uid: System.Reflection.AssemblyName.HashAlgorithm\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: HashAlgorithm\n  nameWithType: AssemblyName.HashAlgorithm\n  fullName: AssemblyName.HashAlgorithm\n- uid: System.Configuration.Assemblies.AssemblyHashAlgorithm\n  parent: System.Configuration.Assemblies\n  isExternal: false\n  name: AssemblyHashAlgorithm\n  nameWithType: AssemblyHashAlgorithm\n  fullName: System.Configuration.Assemblies.AssemblyHashAlgorithm\n- uid: System.Reflection.AssemblyName.KeyPair\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: KeyPair\n  nameWithType: AssemblyName.KeyPair\n  fullName: AssemblyName.KeyPair\n- uid: System.Reflection.StrongNameKeyPair\n  parent: System.Reflection\n  isExternal: false\n  name: StrongNameKeyPair\n  nameWithType: StrongNameKeyPair\n  fullName: System.Reflection.StrongNameKeyPair\n- uid: System.Reflection.AssemblyName.Name\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: Name\n  nameWithType: AssemblyName.Name\n  fullName: AssemblyName.Name\n- uid: System.Reflection.AssemblyName.OnDeserialization(System.Object)\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: OnDeserialization(Object)\n  nameWithType: AssemblyName.OnDeserialization(Object)\n  fullName: AssemblyName.OnDeserialization(Object)\n- uid: System.Reflection.AssemblyName.ProcessorArchitecture\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: ProcessorArchitecture\n  nameWithType: AssemblyName.ProcessorArchitecture\n  fullName: AssemblyName.ProcessorArchitecture\n- uid: System.Reflection.ProcessorArchitecture\n  parent: System.Reflection\n  isExternal: false\n  name: ProcessorArchitecture\n  nameWithType: ProcessorArchitecture\n  fullName: System.Reflection.ProcessorArchitecture\n- uid: System.Reflection.AssemblyName.ReferenceMatchesDefinition(System.Reflection.AssemblyName,System.Reflection.AssemblyName)\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: ReferenceMatchesDefinition(AssemblyName, AssemblyName)\n  nameWithType: AssemblyName.ReferenceMatchesDefinition(AssemblyName, AssemblyName)\n  fullName: AssemblyName.ReferenceMatchesDefinition(AssemblyName, AssemblyName)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.AssemblyName.SetPublicKey(System.Byte[])\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: SetPublicKey(Byte[])\n  nameWithType: AssemblyName.SetPublicKey(Byte[])\n  fullName: AssemblyName.SetPublicKey(Byte[])\n- uid: System.Reflection.AssemblyName.SetPublicKeyToken(System.Byte[])\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: SetPublicKeyToken(Byte[])\n  nameWithType: AssemblyName.SetPublicKeyToken(Byte[])\n  fullName: AssemblyName.SetPublicKeyToken(Byte[])\n- uid: System.Reflection.AssemblyName.ToString\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: ToString()\n  nameWithType: AssemblyName.ToString()\n  fullName: AssemblyName.ToString()\n- uid: System.Reflection.AssemblyName.Version\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: Version\n  nameWithType: AssemblyName.Version\n  fullName: AssemblyName.Version\n- uid: System.Version\n  parent: System\n  isExternal: false\n  name: Version\n  nameWithType: Version\n  fullName: System.Version\n- uid: System.Reflection.AssemblyName.VersionCompatibility\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: VersionCompatibility\n  nameWithType: AssemblyName.VersionCompatibility\n  fullName: AssemblyName.VersionCompatibility\n- uid: System.Configuration.Assemblies.AssemblyVersionCompatibility\n  parent: System.Configuration.Assemblies\n  isExternal: false\n  name: AssemblyVersionCompatibility\n  nameWithType: AssemblyVersionCompatibility\n  fullName: System.Configuration.Assemblies.AssemblyVersionCompatibility\n- uid: System.Reflection.AssemblyName.System#Runtime#InteropServices#_AssemblyName#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: _AssemblyName.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: AssemblyName._AssemblyName.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: AssemblyName._AssemblyName.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.Reflection.AssemblyName.System#Runtime#InteropServices#_AssemblyName#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: _AssemblyName.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: AssemblyName._AssemblyName.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: AssemblyName._AssemblyName.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Reflection.AssemblyName.System#Runtime#InteropServices#_AssemblyName#GetTypeInfoCount(System.UInt32@)\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: _AssemblyName.GetTypeInfoCount(UInt32)\n  nameWithType: AssemblyName._AssemblyName.GetTypeInfoCount(UInt32)\n  fullName: AssemblyName._AssemblyName.GetTypeInfoCount(UInt32)\n- uid: System.Reflection.AssemblyName.System#Runtime#InteropServices#_AssemblyName#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: _AssemblyName.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: AssemblyName._AssemblyName.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: AssemblyName._AssemblyName.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n- uid: System.Int16\n  parent: System\n  isExternal: false\n  name: Int16\n  nameWithType: Int16\n  fullName: System.Int16\n- uid: System.Reflection.AssemblyName.#ctor*\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: AssemblyName\n  nameWithType: AssemblyName.AssemblyName\n  fullName: AssemblyName.AssemblyName\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyName.xml\n- uid: System.Reflection.AssemblyName.Clone*\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: Clone\n  nameWithType: AssemblyName.Clone\n  fullName: AssemblyName.Clone\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyName.xml\n- uid: System.Reflection.AssemblyName.CodeBase*\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: CodeBase\n  nameWithType: AssemblyName.CodeBase\n  fullName: AssemblyName.CodeBase\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyName.xml\n- uid: System.Reflection.AssemblyName.ContentType*\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: ContentType\n  nameWithType: AssemblyName.ContentType\n  fullName: AssemblyName.ContentType\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyName.xml\n- uid: System.Reflection.AssemblyName.CultureInfo*\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: CultureInfo\n  nameWithType: AssemblyName.CultureInfo\n  fullName: AssemblyName.CultureInfo\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyName.xml\n- uid: System.Reflection.AssemblyName.CultureName*\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: CultureName\n  nameWithType: AssemblyName.CultureName\n  fullName: AssemblyName.CultureName\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyName.xml\n- uid: System.Reflection.AssemblyName.EscapedCodeBase*\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: EscapedCodeBase\n  nameWithType: AssemblyName.EscapedCodeBase\n  fullName: AssemblyName.EscapedCodeBase\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyName.xml\n- uid: System.Reflection.AssemblyName.Flags*\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: Flags\n  nameWithType: AssemblyName.Flags\n  fullName: AssemblyName.Flags\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyName.xml\n- uid: System.Reflection.AssemblyName.FullName*\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: FullName\n  nameWithType: AssemblyName.FullName\n  fullName: AssemblyName.FullName\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyName.xml\n- uid: System.Reflection.AssemblyName.GetAssemblyName*\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: GetAssemblyName\n  nameWithType: AssemblyName.GetAssemblyName\n  fullName: AssemblyName.GetAssemblyName\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyName.xml\n- uid: System.Reflection.AssemblyName.GetObjectData*\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: GetObjectData\n  nameWithType: AssemblyName.GetObjectData\n  fullName: AssemblyName.GetObjectData\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyName.xml\n- uid: System.Reflection.AssemblyName.GetPublicKey*\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: GetPublicKey\n  nameWithType: AssemblyName.GetPublicKey\n  fullName: AssemblyName.GetPublicKey\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyName.xml\n- uid: System.Reflection.AssemblyName.GetPublicKeyToken*\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: GetPublicKeyToken\n  nameWithType: AssemblyName.GetPublicKeyToken\n  fullName: AssemblyName.GetPublicKeyToken\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyName.xml\n- uid: System.Reflection.AssemblyName.HashAlgorithm*\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: HashAlgorithm\n  nameWithType: AssemblyName.HashAlgorithm\n  fullName: AssemblyName.HashAlgorithm\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyName.xml\n- uid: System.Reflection.AssemblyName.KeyPair*\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: KeyPair\n  nameWithType: AssemblyName.KeyPair\n  fullName: AssemblyName.KeyPair\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyName.xml\n- uid: System.Reflection.AssemblyName.Name*\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: Name\n  nameWithType: AssemblyName.Name\n  fullName: AssemblyName.Name\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyName.xml\n- uid: System.Reflection.AssemblyName.OnDeserialization*\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: OnDeserialization\n  nameWithType: AssemblyName.OnDeserialization\n  fullName: AssemblyName.OnDeserialization\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyName.xml\n- uid: System.Reflection.AssemblyName.ProcessorArchitecture*\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: ProcessorArchitecture\n  nameWithType: AssemblyName.ProcessorArchitecture\n  fullName: AssemblyName.ProcessorArchitecture\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyName.xml\n- uid: System.Reflection.AssemblyName.ReferenceMatchesDefinition*\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: ReferenceMatchesDefinition\n  nameWithType: AssemblyName.ReferenceMatchesDefinition\n  fullName: AssemblyName.ReferenceMatchesDefinition\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyName.xml\n- uid: System.Reflection.AssemblyName.SetPublicKey*\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: SetPublicKey\n  nameWithType: AssemblyName.SetPublicKey\n  fullName: AssemblyName.SetPublicKey\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyName.xml\n- uid: System.Reflection.AssemblyName.SetPublicKeyToken*\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: SetPublicKeyToken\n  nameWithType: AssemblyName.SetPublicKeyToken\n  fullName: AssemblyName.SetPublicKeyToken\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyName.xml\n- uid: System.Reflection.AssemblyName.ToString*\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: ToString\n  nameWithType: AssemblyName.ToString\n  fullName: AssemblyName.ToString\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyName.xml\n- uid: System.Reflection.AssemblyName.Version*\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: Version\n  nameWithType: AssemblyName.Version\n  fullName: AssemblyName.Version\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyName.xml\n- uid: System.Reflection.AssemblyName.VersionCompatibility*\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: VersionCompatibility\n  nameWithType: AssemblyName.VersionCompatibility\n  fullName: AssemblyName.VersionCompatibility\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyName.xml\n- uid: System.Reflection.AssemblyName.System#Runtime#InteropServices#_AssemblyName#GetIDsOfNames*\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: System.Runtime.InteropServices._AssemblyName.GetIDsOfNames\n  nameWithType: AssemblyName.System.Runtime.InteropServices._AssemblyName.GetIDsOfNames\n  fullName: AssemblyName.System.Runtime.InteropServices._AssemblyName.GetIDsOfNames\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyName.xml\n- uid: System.Reflection.AssemblyName.System#Runtime#InteropServices#_AssemblyName#GetTypeInfo*\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: System.Runtime.InteropServices._AssemblyName.GetTypeInfo\n  nameWithType: AssemblyName.System.Runtime.InteropServices._AssemblyName.GetTypeInfo\n  fullName: AssemblyName.System.Runtime.InteropServices._AssemblyName.GetTypeInfo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyName.xml\n- uid: System.Reflection.AssemblyName.System#Runtime#InteropServices#_AssemblyName#GetTypeInfoCount*\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: System.Runtime.InteropServices._AssemblyName.GetTypeInfoCount\n  nameWithType: AssemblyName.System.Runtime.InteropServices._AssemblyName.GetTypeInfoCount\n  fullName: AssemblyName.System.Runtime.InteropServices._AssemblyName.GetTypeInfoCount\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyName.xml\n- uid: System.Reflection.AssemblyName.System#Runtime#InteropServices#_AssemblyName#Invoke*\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: System.Runtime.InteropServices._AssemblyName.Invoke\n  nameWithType: AssemblyName.System.Runtime.InteropServices._AssemblyName.Invoke\n  fullName: AssemblyName.System.Runtime.InteropServices._AssemblyName.Invoke\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyName.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.ICloneable\n  parent: System\n  isExternal: false\n  name: ICloneable\n  nameWithType: ICloneable\n  fullName: System.ICloneable\n- uid: System.Runtime.InteropServices._AssemblyName\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: _AssemblyName\n  nameWithType: _AssemblyName\n  fullName: System.Runtime.InteropServices._AssemblyName\n- uid: System.Runtime.Serialization.IDeserializationCallback\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: IDeserializationCallback\n  nameWithType: IDeserializationCallback\n  fullName: System.Runtime.Serialization.IDeserializationCallback\n- uid: System.Runtime.Serialization.ISerializable\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: ISerializable\n  nameWithType: ISerializable\n  fullName: System.Runtime.Serialization.ISerializable\n"}