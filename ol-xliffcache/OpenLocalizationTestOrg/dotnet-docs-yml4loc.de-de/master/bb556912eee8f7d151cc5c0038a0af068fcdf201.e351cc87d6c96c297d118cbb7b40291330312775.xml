{"nodes":[{"content":"Implements the <code>AssignCulture</code> task. Use the <code>AssignCulture</code> element in your project file to create and execute this task. For usage and parameter information, see [AssignCulture Task](http://msdn.microsoft.com/library/8f8314cc-82a6-4f16-a62d-b9f0d1d5e274).","nodes":[{"pos":[0,279],"content":"Implements the <code>AssignCulture</code> task. Use the <code>AssignCulture</code> element in your project file to create and execute this task. For usage and parameter information, see [AssignCulture Task](http://msdn.microsoft.com/library/8f8314cc-82a6-4f16-a62d-b9f0d1d5e274).","nodes":[{"content":"Implements the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">AssignCulture</ph><ept id=\"p1\">&lt;/code&gt;</ept> task.","pos":[0,47],"source":"Implements the <code>AssignCulture</code> task."},{"content":"Use the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">AssignCulture</ph><ept id=\"p1\">&lt;/code&gt;</ept> element in your project file to create and execute this task.","pos":[48,144],"source":" Use the <code>AssignCulture</code> element in your project file to create and execute this task."},{"content":"For usage and parameter information, see <bpt id=\"p1\">[</bpt>AssignCulture Task<ept id=\"p1\">](http://msdn.microsoft.com/library/8f8314cc-82a6-4f16-a62d-b9f0d1d5e274)</ept>.","pos":[145,279],"source":" For usage and parameter information, see [AssignCulture Task](http://msdn.microsoft.com/library/8f8314cc-82a6-4f16-a62d-b9f0d1d5e274)."}]}],"pos":[781,1061],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"Microsoft.Build.Tasks.AssignCulture\"></xref> class.","nodes":[{"pos":[0,97],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"Microsoft.Build.Tasks.AssignCulture\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"Microsoft.Build.Tasks.AssignCulture\"></xref> class."}],"pos":[2865,2963],"yaml":true},{"content":"Gets a list of <xref href=\"Microsoft.Build.Tasks.AssignCulture.Files\"></xref> with a <code>Culture</code> metadata entry added to each item.","nodes":[{"pos":[0,140],"content":"Gets a list of <ph id=\"ph1\">&lt;xref href=\"Microsoft.Build.Tasks.AssignCulture.Files\"&gt;&lt;/xref&gt;</ph> with a <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">Culture</ph><ept id=\"p1\">&lt;/code&gt;</ept> metadata entry added to each item.","source":"Gets a list of <xref href=\"Microsoft.Build.Tasks.AssignCulture.Files\"></xref> with a <code>Culture</code> metadata entry added to each item."}],"pos":[4027,4168],"yaml":true},{"content":"If the incoming item from the <xref:Microsoft.Build.Tasks.AssignCulture.Files%2A> property already contains a `Culture` metadata entry, the original metadata entry is used.  \n  \n The task only assigns a `Culture` metadata entry if the file name contains a valid culture identifier. The culture identifier must be between the last two dots in the filename.","nodes":[{"pos":[0,172],"content":"If the incoming item from the <ph id=\"ph1\">&lt;xref:Microsoft.Build.Tasks.AssignCulture.Files%2A&gt;</ph> property already contains a <ph id=\"ph2\">`Culture`</ph> metadata entry, the original metadata entry is used.","source":"If the incoming item from the <xref:Microsoft.Build.Tasks.AssignCulture.Files%2A> property already contains a `Culture` metadata entry, the original metadata entry is used."},{"pos":[179,355],"content":"The task only assigns a `Culture` metadata entry if the file name contains a valid culture identifier. The culture identifier must be between the last two dots in the filename.","nodes":[{"content":"The task only assigns a <ph id=\"ph1\">`Culture`</ph> metadata entry if the file name contains a valid culture identifier.","pos":[0,102],"source":"The task only assigns a `Culture` metadata entry if the file name contains a valid culture identifier."},{"content":"The culture identifier must be between the last two dots in the filename.","pos":[103,176]}]}],"pos":[4179,4539],"yaml":true,"extradata":"MT"},{"content":"The list of <xref href=\"Microsoft.Build.Tasks.AssignCulture.Files\"></xref>, with a <code>Culture</code> metadata entry added to each item.","nodes":[{"pos":[0,138],"content":"The list of <ph id=\"ph1\">&lt;xref href=\"Microsoft.Build.Tasks.AssignCulture.Files\"&gt;&lt;/xref&gt;</ph>, with a <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">Culture</ph><ept id=\"p1\">&lt;/code&gt;</ept> metadata entry added to each item.","source":"The list of <xref href=\"Microsoft.Build.Tasks.AssignCulture.Files\"></xref>, with a <code>Culture</code> metadata entry added to each item."}],"pos":[4762,4901],"yaml":true},{"content":"Gets a subset of <xref href=\"Microsoft.Build.Tasks.AssignCulture.AssignedFiles\"></xref> that have a <code>Culture</code> metadata entry.","nodes":[{"pos":[0,136],"content":"Gets a subset of <ph id=\"ph1\">&lt;xref href=\"Microsoft.Build.Tasks.AssignCulture.AssignedFiles\"&gt;&lt;/xref&gt;</ph> that have a <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">Culture</ph><ept id=\"p1\">&lt;/code&gt;</ept> metadata entry.","source":"Gets a subset of <xref href=\"Microsoft.Build.Tasks.AssignCulture.AssignedFiles\"></xref> that have a <code>Culture</code> metadata entry."}],"pos":[6038,6175],"yaml":true},{"content":"A subset of <xref href=\"Microsoft.Build.Tasks.AssignCulture.AssignedFiles\"></xref> that have a <code>Culture</code> metadata entry.","nodes":[{"pos":[0,131],"content":"A subset of <ph id=\"ph1\">&lt;xref href=\"Microsoft.Build.Tasks.AssignCulture.AssignedFiles\"&gt;&lt;/xref&gt;</ph> that have a <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">Culture</ph><ept id=\"p1\">&lt;/code&gt;</ept> metadata entry.","source":"A subset of <xref href=\"Microsoft.Build.Tasks.AssignCulture.AssignedFiles\"></xref> that have a <code>Culture</code> metadata entry."}],"pos":[6409,6541],"yaml":true},{"content":"Gets a subset of <xref href=\"Microsoft.Build.Tasks.AssignCulture.AssignedFiles\"></xref> that do not have a <code>Culture</code> metadata entry.","nodes":[{"pos":[0,143],"content":"Gets a subset of <ph id=\"ph1\">&lt;xref href=\"Microsoft.Build.Tasks.AssignCulture.AssignedFiles\"&gt;&lt;/xref&gt;</ph> that do not have a <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">Culture</ph><ept id=\"p1\">&lt;/code&gt;</ept> metadata entry.","source":"Gets a subset of <xref href=\"Microsoft.Build.Tasks.AssignCulture.AssignedFiles\"></xref> that do not have a <code>Culture</code> metadata entry."}],"pos":[7701,7845],"yaml":true},{"content":"A subset of <xref href=\"Microsoft.Build.Tasks.AssignCulture.AssignedFiles\"></xref> that do not have a <code>Culture</code> metadata entry.","nodes":[{"pos":[0,138],"content":"A subset of <ph id=\"ph1\">&lt;xref href=\"Microsoft.Build.Tasks.AssignCulture.AssignedFiles\"&gt;&lt;/xref&gt;</ph> that do not have a <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">Culture</ph><ept id=\"p1\">&lt;/code&gt;</ept> metadata entry.","source":"A subset of <xref href=\"Microsoft.Build.Tasks.AssignCulture.AssignedFiles\"></xref> that do not have a <code>Culture</code> metadata entry."}],"pos":[8081,8220],"yaml":true},{"content":"Gets a subset of <xref href=\"Microsoft.Build.Tasks.AssignCulture.AssignedFiles\"></xref> that do not have a <code>Culture</code> metadata entry.","nodes":[{"pos":[0,143],"content":"Gets a subset of <ph id=\"ph1\">&lt;xref href=\"Microsoft.Build.Tasks.AssignCulture.AssignedFiles\"&gt;&lt;/xref&gt;</ph> that do not have a <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">Culture</ph><ept id=\"p1\">&lt;/code&gt;</ept> metadata entry.","source":"Gets a subset of <xref href=\"Microsoft.Build.Tasks.AssignCulture.AssignedFiles\"></xref> that do not have a <code>Culture</code> metadata entry."}],"pos":[9388,9532],"yaml":true},{"content":"A subset of <xref href=\"Microsoft.Build.Tasks.AssignCulture.AssignedFiles\"></xref> that do not have a <code>Culture</code> metadata entry.","nodes":[{"pos":[0,138],"content":"A subset of <ph id=\"ph1\">&lt;xref href=\"Microsoft.Build.Tasks.AssignCulture.AssignedFiles\"&gt;&lt;/xref&gt;</ph> that do not have a <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">Culture</ph><ept id=\"p1\">&lt;/code&gt;</ept> metadata entry.","source":"A subset of <xref href=\"Microsoft.Build.Tasks.AssignCulture.AssignedFiles\"></xref> that do not have a <code>Culture</code> metadata entry."}],"pos":[9769,9908],"yaml":true},{"content":"Executes the <code>AssignCulture</code> task.","nodes":[{"pos":[0,45],"content":"Executes the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">AssignCulture</ph><ept id=\"p1\">&lt;/code&gt;</ept> task.","source":"Executes the <code>AssignCulture</code> task."}],"pos":[10961,11007],"yaml":true},{"content":"`true` if task execution succeeded; otherwise, `false`.","nodes":[{"pos":[0,55],"content":"<ph id=\"ph1\">`true`</ph> if task execution succeeded; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if task execution succeeded; otherwise, `false`."}],"pos":[11140,11198],"yaml":true},{"content":"Gets or sets a list of files with embedded culture names to assign a culture to.","nodes":[{"pos":[0,80],"content":"Gets or sets a list of files with embedded culture names to assign a culture to.","nodes":[{"content":"Gets or sets a list of files with embedded culture names to assign a culture to.","pos":[0,80]}]}],"pos":[12149,12230],"yaml":true},{"content":"The list of files with embedded culture names to assign a culture to.","nodes":[{"pos":[0,69],"content":"The list of files with embedded culture names to assign a culture to.","nodes":[{"content":"The list of files with embedded culture names to assign a culture to.","pos":[0,69]}]}],"pos":[12452,12522],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.Build.Tasks.AssignCulture\n  commentId: T:Microsoft.Build.Tasks.AssignCulture\n  id: AssignCulture\n  children:\n  - Microsoft.Build.Tasks.AssignCulture.#ctor\n  - Microsoft.Build.Tasks.AssignCulture.AssignedFiles\n  - Microsoft.Build.Tasks.AssignCulture.AssignedFilesWithCulture\n  - Microsoft.Build.Tasks.AssignCulture.AssignedFilesWithNoCulture\n  - Microsoft.Build.Tasks.AssignCulture.CultureNeutralAssignedFiles\n  - Microsoft.Build.Tasks.AssignCulture.Execute\n  - Microsoft.Build.Tasks.AssignCulture.Files\n  langs:\n  - csharp\n  name: AssignCulture\n  nameWithType: AssignCulture\n  fullName: Microsoft.Build.Tasks.AssignCulture\n  type: Class\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Implements the <code>AssignCulture</code> task. Use the <code>AssignCulture</code> element in your project file to create and execute this task. For usage and parameter information, see [AssignCulture Task](http://msdn.microsoft.com/library/8f8314cc-82a6-4f16-a62d-b9f0d1d5e274).\n  syntax:\n    content: 'public class AssignCulture : Microsoft.Build.Tasks.TaskExtension'\n  inheritance:\n  - System.Object\n  - Microsoft.Build.Utilities.Task\n  - Microsoft.Build.Tasks.TaskExtension\n  implements: []\n  inheritedMembers:\n  - Microsoft.Build.Tasks.TaskExtension.Log\n  - Microsoft.Build.Utilities.Task.BuildEngine\n  - Microsoft.Build.Utilities.Task.BuildEngine2\n  - Microsoft.Build.Utilities.Task.BuildEngine3\n  - Microsoft.Build.Utilities.Task.BuildEngine4\n  - Microsoft.Build.Utilities.Task.HelpKeywordPrefix\n  - Microsoft.Build.Utilities.Task.HostObject\n  - Microsoft.Build.Utilities.Task.TaskResources\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Tasks/AssignCulture.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Tasks.AssignCulture.#ctor\n  commentId: M:Microsoft.Build.Tasks.AssignCulture.#ctor\n  id: '#ctor'\n  parent: Microsoft.Build.Tasks.AssignCulture\n  langs:\n  - csharp\n  name: AssignCulture()\n  nameWithType: AssignCulture.AssignCulture()\n  fullName: AssignCulture.AssignCulture()\n  type: Constructor\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Initializes a new instance of the <xref href=\"Microsoft.Build.Tasks.AssignCulture\"></xref> class.\n  syntax:\n    content: public AssignCulture ();\n    parameters: []\n  overload: Microsoft.Build.Tasks.AssignCulture.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Tasks/AssignCulture.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Tasks.AssignCulture.AssignedFiles\n  commentId: P:Microsoft.Build.Tasks.AssignCulture.AssignedFiles\n  id: AssignedFiles\n  parent: Microsoft.Build.Tasks.AssignCulture\n  langs:\n  - csharp\n  name: AssignedFiles\n  nameWithType: AssignCulture.AssignedFiles\n  fullName: AssignCulture.AssignedFiles\n  type: Property\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Gets a list of <xref href=\"Microsoft.Build.Tasks.AssignCulture.Files\"></xref> with a <code>Culture</code> metadata entry added to each item.\n  remarks: \"If the incoming item from the <xref:Microsoft.Build.Tasks.AssignCulture.Files%2A> property already contains a `Culture` metadata entry, the original metadata entry is used.  \\n  \\n The task only assigns a `Culture` metadata entry if the file name contains a valid culture identifier. The culture identifier must be between the last two dots in the filename.\"\n  syntax:\n    content: >-\n      [Microsoft.Build.Framework.Output]\n\n      public Microsoft.Build.Framework.ITaskItem[] AssignedFiles { get; }\n    return:\n      type: Microsoft.Build.Framework.ITaskItem[]\n      description: The list of <xref href=\"Microsoft.Build.Tasks.AssignCulture.Files\"></xref>, with a <code>Culture</code> metadata entry added to each item.\n  overload: Microsoft.Build.Tasks.AssignCulture.AssignedFiles*\n  exceptions: []\n  attributes:\n  - type: Microsoft.Build.Framework.OutputAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Tasks/AssignCulture.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Tasks.AssignCulture.AssignedFilesWithCulture\n  commentId: P:Microsoft.Build.Tasks.AssignCulture.AssignedFilesWithCulture\n  id: AssignedFilesWithCulture\n  parent: Microsoft.Build.Tasks.AssignCulture\n  langs:\n  - csharp\n  name: AssignedFilesWithCulture\n  nameWithType: AssignCulture.AssignedFilesWithCulture\n  fullName: AssignCulture.AssignedFilesWithCulture\n  type: Property\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Gets a subset of <xref href=\"Microsoft.Build.Tasks.AssignCulture.AssignedFiles\"></xref> that have a <code>Culture</code> metadata entry.\n  syntax:\n    content: >-\n      [Microsoft.Build.Framework.Output]\n\n      public Microsoft.Build.Framework.ITaskItem[] AssignedFilesWithCulture { get; }\n    return:\n      type: Microsoft.Build.Framework.ITaskItem[]\n      description: A subset of <xref href=\"Microsoft.Build.Tasks.AssignCulture.AssignedFiles\"></xref> that have a <code>Culture</code> metadata entry.\n  overload: Microsoft.Build.Tasks.AssignCulture.AssignedFilesWithCulture*\n  exceptions: []\n  attributes:\n  - type: Microsoft.Build.Framework.OutputAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Tasks/AssignCulture.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Tasks.AssignCulture.AssignedFilesWithNoCulture\n  commentId: P:Microsoft.Build.Tasks.AssignCulture.AssignedFilesWithNoCulture\n  id: AssignedFilesWithNoCulture\n  parent: Microsoft.Build.Tasks.AssignCulture\n  langs:\n  - csharp\n  name: AssignedFilesWithNoCulture\n  nameWithType: AssignCulture.AssignedFilesWithNoCulture\n  fullName: AssignCulture.AssignedFilesWithNoCulture\n  type: Property\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Gets a subset of <xref href=\"Microsoft.Build.Tasks.AssignCulture.AssignedFiles\"></xref> that do not have a <code>Culture</code> metadata entry.\n  syntax:\n    content: >-\n      [Microsoft.Build.Framework.Output]\n\n      public Microsoft.Build.Framework.ITaskItem[] AssignedFilesWithNoCulture { get; }\n    return:\n      type: Microsoft.Build.Framework.ITaskItem[]\n      description: A subset of <xref href=\"Microsoft.Build.Tasks.AssignCulture.AssignedFiles\"></xref> that do not have a <code>Culture</code> metadata entry.\n  overload: Microsoft.Build.Tasks.AssignCulture.AssignedFilesWithNoCulture*\n  exceptions: []\n  attributes:\n  - type: Microsoft.Build.Framework.OutputAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Tasks/AssignCulture.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Tasks.AssignCulture.CultureNeutralAssignedFiles\n  commentId: P:Microsoft.Build.Tasks.AssignCulture.CultureNeutralAssignedFiles\n  id: CultureNeutralAssignedFiles\n  parent: Microsoft.Build.Tasks.AssignCulture\n  langs:\n  - csharp\n  name: CultureNeutralAssignedFiles\n  nameWithType: AssignCulture.CultureNeutralAssignedFiles\n  fullName: AssignCulture.CultureNeutralAssignedFiles\n  type: Property\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Gets a subset of <xref href=\"Microsoft.Build.Tasks.AssignCulture.AssignedFiles\"></xref> that do not have a <code>Culture</code> metadata entry.\n  syntax:\n    content: >-\n      [Microsoft.Build.Framework.Output]\n\n      public Microsoft.Build.Framework.ITaskItem[] CultureNeutralAssignedFiles { get; }\n    return:\n      type: Microsoft.Build.Framework.ITaskItem[]\n      description: A subset of <xref href=\"Microsoft.Build.Tasks.AssignCulture.AssignedFiles\"></xref> that do not have a <code>Culture</code> metadata entry.\n  overload: Microsoft.Build.Tasks.AssignCulture.CultureNeutralAssignedFiles*\n  exceptions: []\n  attributes:\n  - type: Microsoft.Build.Framework.OutputAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Tasks/AssignCulture.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Tasks.AssignCulture.Execute\n  commentId: M:Microsoft.Build.Tasks.AssignCulture.Execute\n  id: Execute\n  parent: Microsoft.Build.Tasks.AssignCulture\n  langs:\n  - csharp\n  name: Execute()\n  nameWithType: AssignCulture.Execute()\n  fullName: AssignCulture.Execute()\n  type: Method\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Executes the <code>AssignCulture</code> task.\n  syntax:\n    content: public override bool Execute ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if task execution succeeded; otherwise, `false`.'\n  overload: Microsoft.Build.Tasks.AssignCulture.Execute*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Tasks/AssignCulture.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Tasks.AssignCulture.Files\n  commentId: P:Microsoft.Build.Tasks.AssignCulture.Files\n  id: Files\n  parent: Microsoft.Build.Tasks.AssignCulture\n  langs:\n  - csharp\n  name: Files\n  nameWithType: AssignCulture.Files\n  fullName: AssignCulture.Files\n  type: Property\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  summary: Gets or sets a list of files with embedded culture names to assign a culture to.\n  syntax:\n    content: >-\n      [Microsoft.Build.Framework.Required]\n\n      public Microsoft.Build.Framework.ITaskItem[] Files { get; set; }\n    return:\n      type: Microsoft.Build.Framework.ITaskItem[]\n      description: The list of files with embedded culture names to assign a culture to.\n  overload: Microsoft.Build.Tasks.AssignCulture.Files*\n  exceptions: []\n  attributes:\n  - type: Microsoft.Build.Framework.RequiredAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Tasks/AssignCulture.xml\n  ms.author: susanno\n  manager: douge\nreferences:\n- uid: Microsoft.Build.Tasks.TaskExtension\n  parent: Microsoft.Build.Tasks\n  isExternal: false\n  name: TaskExtension\n  nameWithType: TaskExtension\n  fullName: Microsoft.Build.Tasks.TaskExtension\n- uid: Microsoft.Build.Tasks.AssignCulture.#ctor\n  parent: Microsoft.Build.Tasks.AssignCulture\n  isExternal: false\n  name: AssignCulture()\n  nameWithType: AssignCulture.AssignCulture()\n  fullName: AssignCulture.AssignCulture()\n- uid: Microsoft.Build.Tasks.AssignCulture.AssignedFiles\n  parent: Microsoft.Build.Tasks.AssignCulture\n  isExternal: false\n  name: AssignedFiles\n  nameWithType: AssignCulture.AssignedFiles\n  fullName: AssignCulture.AssignedFiles\n- uid: Microsoft.Build.Framework.ITaskItem\n  name: ITaskItem\n  nameWithType: ITaskItem\n  fullName: Microsoft.Build.Framework.ITaskItem\n- uid: Microsoft.Build.Framework.ITaskItem[]\n  parent: Microsoft.Build.Framework\n  isExternal: false\n  name: ITaskItem[]\n  nameWithType: ITaskItem[]\n  fullName: Microsoft.Build.Framework.ITaskItem[]\n  spec.csharp:\n  - uid: Microsoft.Build.Framework.ITaskItem\n    name: ITaskItem\n    nameWithType: ITaskItem\n    fullName: Microsoft.Build.Framework.ITaskItem\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: Microsoft.Build.Tasks.AssignCulture.AssignedFilesWithCulture\n  parent: Microsoft.Build.Tasks.AssignCulture\n  isExternal: false\n  name: AssignedFilesWithCulture\n  nameWithType: AssignCulture.AssignedFilesWithCulture\n  fullName: AssignCulture.AssignedFilesWithCulture\n- uid: Microsoft.Build.Tasks.AssignCulture.AssignedFilesWithNoCulture\n  parent: Microsoft.Build.Tasks.AssignCulture\n  isExternal: false\n  name: AssignedFilesWithNoCulture\n  nameWithType: AssignCulture.AssignedFilesWithNoCulture\n  fullName: AssignCulture.AssignedFilesWithNoCulture\n- uid: Microsoft.Build.Tasks.AssignCulture.CultureNeutralAssignedFiles\n  parent: Microsoft.Build.Tasks.AssignCulture\n  isExternal: false\n  name: CultureNeutralAssignedFiles\n  nameWithType: AssignCulture.CultureNeutralAssignedFiles\n  fullName: AssignCulture.CultureNeutralAssignedFiles\n- uid: Microsoft.Build.Tasks.AssignCulture.Execute\n  parent: Microsoft.Build.Tasks.AssignCulture\n  isExternal: false\n  name: Execute()\n  nameWithType: AssignCulture.Execute()\n  fullName: AssignCulture.Execute()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.Build.Tasks.AssignCulture.Files\n  parent: Microsoft.Build.Tasks.AssignCulture\n  isExternal: false\n  name: Files\n  nameWithType: AssignCulture.Files\n  fullName: AssignCulture.Files\n- uid: Microsoft.Build.Tasks.AssignCulture.#ctor*\n  parent: Microsoft.Build.Tasks.AssignCulture\n  isExternal: false\n  name: AssignCulture\n  nameWithType: AssignCulture.AssignCulture\n  fullName: AssignCulture.AssignCulture\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Tasks/AssignCulture.xml\n- uid: Microsoft.Build.Tasks.AssignCulture.AssignedFiles*\n  parent: Microsoft.Build.Tasks.AssignCulture\n  isExternal: false\n  name: AssignedFiles\n  nameWithType: AssignCulture.AssignedFiles\n  fullName: AssignCulture.AssignedFiles\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Tasks/AssignCulture.xml\n- uid: Microsoft.Build.Tasks.AssignCulture.AssignedFilesWithCulture*\n  parent: Microsoft.Build.Tasks.AssignCulture\n  isExternal: false\n  name: AssignedFilesWithCulture\n  nameWithType: AssignCulture.AssignedFilesWithCulture\n  fullName: AssignCulture.AssignedFilesWithCulture\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Tasks/AssignCulture.xml\n- uid: Microsoft.Build.Tasks.AssignCulture.AssignedFilesWithNoCulture*\n  parent: Microsoft.Build.Tasks.AssignCulture\n  isExternal: false\n  name: AssignedFilesWithNoCulture\n  nameWithType: AssignCulture.AssignedFilesWithNoCulture\n  fullName: AssignCulture.AssignedFilesWithNoCulture\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Tasks/AssignCulture.xml\n- uid: Microsoft.Build.Tasks.AssignCulture.CultureNeutralAssignedFiles*\n  parent: Microsoft.Build.Tasks.AssignCulture\n  isExternal: false\n  name: CultureNeutralAssignedFiles\n  nameWithType: AssignCulture.CultureNeutralAssignedFiles\n  fullName: AssignCulture.CultureNeutralAssignedFiles\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Tasks/AssignCulture.xml\n- uid: Microsoft.Build.Tasks.AssignCulture.Execute*\n  parent: Microsoft.Build.Tasks.AssignCulture\n  isExternal: false\n  name: Execute\n  nameWithType: AssignCulture.Execute\n  fullName: AssignCulture.Execute\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Tasks/AssignCulture.xml\n- uid: Microsoft.Build.Tasks.AssignCulture.Files*\n  parent: Microsoft.Build.Tasks.AssignCulture\n  isExternal: false\n  name: Files\n  nameWithType: AssignCulture.Files\n  fullName: AssignCulture.Files\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Tasks/AssignCulture.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: Microsoft.Build.Utilities.Task.BuildEngine\n  parent: Microsoft.Build.Utilities.Task\n  isExternal: false\n  name: BuildEngine\n  nameWithType: Task.BuildEngine\n  fullName: Task.BuildEngine\n- uid: Microsoft.Build.Utilities.Task.BuildEngine2\n  parent: Microsoft.Build.Utilities.Task\n  isExternal: false\n  name: BuildEngine2\n  nameWithType: Task.BuildEngine2\n  fullName: Task.BuildEngine2\n- uid: Microsoft.Build.Utilities.Task.BuildEngine3\n  parent: Microsoft.Build.Utilities.Task\n  isExternal: false\n  name: BuildEngine3\n  nameWithType: Task.BuildEngine3\n  fullName: Task.BuildEngine3\n- uid: Microsoft.Build.Utilities.Task.BuildEngine4\n  parent: Microsoft.Build.Utilities.Task\n  isExternal: false\n  name: BuildEngine4\n  nameWithType: Task.BuildEngine4\n  fullName: Task.BuildEngine4\n- uid: Microsoft.Build.Utilities.Task.HelpKeywordPrefix\n  parent: Microsoft.Build.Utilities.Task\n  isExternal: false\n  name: HelpKeywordPrefix\n  nameWithType: Task.HelpKeywordPrefix\n  fullName: Task.HelpKeywordPrefix\n- uid: Microsoft.Build.Utilities.Task.HostObject\n  parent: Microsoft.Build.Utilities.Task\n  isExternal: false\n  name: HostObject\n  nameWithType: Task.HostObject\n  fullName: Task.HostObject\n- uid: Microsoft.Build.Tasks.TaskExtension.Log\n  parent: Microsoft.Build.Tasks.TaskExtension\n  isExternal: false\n  name: Log\n  nameWithType: TaskExtension.Log\n  fullName: TaskExtension.Log\n- uid: Microsoft.Build.Utilities.Task.TaskResources\n  parent: Microsoft.Build.Utilities.Task\n  isExternal: false\n  name: TaskResources\n  nameWithType: Task.TaskResources\n  fullName: Task.TaskResources\n"}