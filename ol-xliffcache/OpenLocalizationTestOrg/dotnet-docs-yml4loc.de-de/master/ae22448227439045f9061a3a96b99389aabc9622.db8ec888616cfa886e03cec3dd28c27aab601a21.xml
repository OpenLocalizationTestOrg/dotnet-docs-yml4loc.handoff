{"nodes":[{"content":"Contains information about a single instance of a <xref href=\"System.Windows.Data.Binding\"></xref>.","nodes":[{"pos":[0,99],"content":"Contains information about a single instance of a <ph id=\"ph1\">&lt;xref href=\"System.Windows.Data.Binding\"&gt;&lt;/xref&gt;</ph>.","source":"Contains information about a single instance of a <xref href=\"System.Windows.Data.Binding\"></xref>."}],"pos":[878,978],"yaml":true},{"content":"The <xref:System.Windows.Data.Binding> class is the high-level class for the declaration of a binding. The <xref:System.Windows.Data.BindingExpression> class is the underlying object that maintains the connection between the binding source and the binding target. A <xref:System.Windows.Data.Binding> contains all the information that can be shared across several <xref:System.Windows.Data.BindingExpression> objects. A <xref:System.Windows.Data.BindingExpression> is an instance expression that cannot be shared and that contains all the instance information about the <xref:System.Windows.Data.Binding>.  \n  \n For example, consider the following, where `myDataObject` is an instance of the `MyData` class, `myBinding` is the source <xref:System.Windows.Data.Binding> object, and `MyData` class is a defined class that contains a string property named `MyDataProperty`. This example binds the text content of `mytext`, which is an instance of <xref:System.Windows.Controls.TextBlock>, to `MyDataProperty`.  \n  \n [!code-csharp[CodeOnlyBinding#1](~/samples/snippets/csharp/VS_Snippets_Wpf/CodeOnlyBinding/CSharp/binding.cs#1)]\n [!code-vb[CodeOnlyBinding#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CodeOnlyBinding/VisualBasic/App.vb#1)]  \n  \n You can use the same `myBinding` object to create other bindings. For example, you might use the `myBinding` object to bind the text content of a check box to `MyDataProperty`. In that scenario, there will be two instances of <xref:System.Windows.Data.BindingExpression> that share the `myBinding` object.  \n  \n You can obtain a <xref:System.Windows.Data.BindingExpression> object by using the <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A> method or the <xref:System.Windows.FrameworkElement.GetBindingExpression%2A> method on a data-bound object.","nodes":[{"pos":[0,605],"content":"The <xref:System.Windows.Data.Binding> class is the high-level class for the declaration of a binding. The <xref:System.Windows.Data.BindingExpression> class is the underlying object that maintains the connection between the binding source and the binding target. A <xref:System.Windows.Data.Binding> contains all the information that can be shared across several <xref:System.Windows.Data.BindingExpression> objects. A <xref:System.Windows.Data.BindingExpression> is an instance expression that cannot be shared and that contains all the instance information about the <xref:System.Windows.Data.Binding>.","nodes":[{"content":"The <xref:System.Windows.Data.Binding> class is the high-level class for the declaration of a binding. The <xref:System.Windows.Data.BindingExpression> class is the underlying object that maintains the connection between the binding source and the binding target. A <xref:System.Windows.Data.Binding> contains all the information that can be shared across several <xref:System.Windows.Data.BindingExpression> objects. A <xref:System.Windows.Data.BindingExpression> is an instance expression that cannot be shared and that contains all the instance information about the <xref:System.Windows.Data.Binding>.","pos":[0,605],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Data.Binding&gt;</ph> class is the high-level class for the declaration of a binding.","pos":[0,102],"source":"The <xref:System.Windows.Data.Binding> class is the high-level class for the declaration of a binding."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Data.BindingExpression&gt;</ph> class is the underlying object that maintains the connection between the binding source and the binding target.","pos":[103,263],"source":" The <xref:System.Windows.Data.BindingExpression> class is the underlying object that maintains the connection between the binding source and the binding target."},{"content":"A <ph id=\"ph1\">&lt;xref:System.Windows.Data.Binding&gt;</ph> contains all the information that can be shared across several <ph id=\"ph2\">&lt;xref:System.Windows.Data.BindingExpression&gt;</ph> objects.","pos":[264,417],"source":" A <xref:System.Windows.Data.Binding> contains all the information that can be shared across several <xref:System.Windows.Data.BindingExpression> objects."},{"content":"A <ph id=\"ph1\">&lt;xref:System.Windows.Data.BindingExpression&gt;</ph> is an instance expression that cannot be shared and that contains all the instance information about the <ph id=\"ph2\">&lt;xref:System.Windows.Data.Binding&gt;</ph>.","pos":[418,605],"source":" A <xref:System.Windows.Data.BindingExpression> is an instance expression that cannot be shared and that contains all the instance information about the <xref:System.Windows.Data.Binding>."}]}]},{"pos":[612,1006],"content":"For example, consider the following, where `myDataObject` is an instance of the `MyData` class, `myBinding` is the source <xref:System.Windows.Data.Binding> object, and `MyData` class is a defined class that contains a string property named `MyDataProperty`. This example binds the text content of `mytext`, which is an instance of <xref:System.Windows.Controls.TextBlock>, to `MyDataProperty`.","nodes":[{"content":"For example, consider the following, where <ph id=\"ph1\">`myDataObject`</ph> is an instance of the <ph id=\"ph2\">`MyData`</ph> class, <ph id=\"ph3\">`myBinding`</ph> is the source <ph id=\"ph4\">&lt;xref:System.Windows.Data.Binding&gt;</ph> object, and <ph id=\"ph5\">`MyData`</ph> class is a defined class that contains a string property named <ph id=\"ph6\">`MyDataProperty`</ph>.","pos":[0,258],"source":"For example, consider the following, where `myDataObject` is an instance of the `MyData` class, `myBinding` is the source <xref:System.Windows.Data.Binding> object, and `MyData` class is a defined class that contains a string property named `MyDataProperty`."},{"content":"This example binds the text content of <ph id=\"ph1\">`mytext`</ph>, which is an instance of <ph id=\"ph2\">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph>, to <ph id=\"ph3\">`MyDataProperty`</ph>.","pos":[259,394],"source":" This example binds the text content of `mytext`, which is an instance of <xref:System.Windows.Controls.TextBlock>, to `MyDataProperty`."}]},{"pos":[1013,1241],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>CodeOnlyBinding#1<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_Wpf/CodeOnlyBinding/CSharp/binding.cs#1)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>CodeOnlyBinding#1<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CodeOnlyBinding/VisualBasic/App.vb#1)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[CodeOnlyBinding#1](~/samples/snippets/csharp/VS_Snippets_Wpf/CodeOnlyBinding/CSharp/binding.cs#1)]\n [!code-vb[CodeOnlyBinding#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CodeOnlyBinding/VisualBasic/App.vb#1)]"},{"pos":[1248,1553],"content":"You can use the same `myBinding` object to create other bindings. For example, you might use the `myBinding` object to bind the text content of a check box to `MyDataProperty`. In that scenario, there will be two instances of <xref:System.Windows.Data.BindingExpression> that share the `myBinding` object.","nodes":[{"content":"You can use the same <ph id=\"ph1\">`myBinding`</ph> object to create other bindings.","pos":[0,65],"source":"You can use the same `myBinding` object to create other bindings."},{"content":"For example, you might use the <ph id=\"ph1\">`myBinding`</ph> object to bind the text content of a check box to <ph id=\"ph2\">`MyDataProperty`</ph>.","pos":[66,176],"source":" For example, you might use the `myBinding` object to bind the text content of a check box to `MyDataProperty`."},{"content":"In that scenario, there will be two instances of <ph id=\"ph1\">&lt;xref:System.Windows.Data.BindingExpression&gt;</ph> that share the <ph id=\"ph2\">`myBinding`</ph> object.","pos":[177,305],"source":" In that scenario, there will be two instances of <xref:System.Windows.Data.BindingExpression> that share the `myBinding` object."}]},{"pos":[1560,1818],"content":"You can obtain a <xref:System.Windows.Data.BindingExpression> object by using the <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A> method or the <xref:System.Windows.FrameworkElement.GetBindingExpression%2A> method on a data-bound object.","nodes":[{"content":"You can obtain a <ph id=\"ph1\">&lt;xref:System.Windows.Data.BindingExpression&gt;</ph> object by using the <ph id=\"ph2\">&lt;xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A&gt;</ph> method or the <ph id=\"ph3\">&lt;xref:System.Windows.FrameworkElement.GetBindingExpression%2A&gt;</ph> method on a data-bound object.","pos":[0,258],"source":"You can obtain a <xref:System.Windows.Data.BindingExpression> object by using the <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A> method or the <xref:System.Windows.FrameworkElement.GetBindingExpression%2A> method on a data-bound object."}]}],"pos":[989,2819],"yaml":true,"extradata":"MT"},{"content":"Gets the binding source object that this <xref href=\"System.Windows.Data.BindingExpression\"></xref> uses.","nodes":[{"pos":[0,105],"content":"Gets the binding source object that this <ph id=\"ph1\">&lt;xref href=\"System.Windows.Data.BindingExpression\"&gt;&lt;/xref&gt;</ph> uses.","source":"Gets the binding source object that this <xref href=\"System.Windows.Data.BindingExpression\"></xref> uses."}],"pos":[4982,5088],"yaml":true},{"content":"The binding source object that this <xref href=\"System.Windows.Data.BindingExpression\"></xref> uses.","nodes":[{"pos":[0,100],"content":"The binding source object that this <ph id=\"ph1\">&lt;xref href=\"System.Windows.Data.BindingExpression\"&gt;&lt;/xref&gt;</ph> uses.","source":"The binding source object that this <xref href=\"System.Windows.Data.BindingExpression\"></xref> uses."}],"pos":[6130,6231],"yaml":true},{"content":"Returns the <xref href=\"System.Windows.Data.Binding\"></xref> object of the current <xref href=\"System.Windows.Data.BindingExpression\"></xref>.","nodes":[{"pos":[0,142],"content":"Returns the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Data.Binding\"&gt;&lt;/xref&gt;</ph> object of the current <ph id=\"ph2\">&lt;xref href=\"System.Windows.Data.BindingExpression\"&gt;&lt;/xref&gt;</ph>.","source":"Returns the <xref href=\"System.Windows.Data.Binding\"></xref> object of the current <xref href=\"System.Windows.Data.BindingExpression\"></xref>."}],"pos":[7269,7412],"yaml":true},{"content":"The <xref href=\"System.Windows.Data.Binding\"></xref> object of the current binding expression.","nodes":[{"pos":[0,94],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Data.Binding\"&gt;&lt;/xref&gt;</ph> object of the current binding expression.","source":"The <xref href=\"System.Windows.Data.Binding\"></xref> object of the current binding expression."}],"pos":[7564,7659],"yaml":true},{"content":"Gets the binding source object for this <xref href=\"System.Windows.Data.BindingExpression\"></xref>.","nodes":[{"pos":[0,99],"content":"Gets the binding source object for this <ph id=\"ph1\">&lt;xref href=\"System.Windows.Data.BindingExpression\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the binding source object for this <xref href=\"System.Windows.Data.BindingExpression\"></xref>."}],"pos":[8708,8808],"yaml":true},{"content":"The binding source object for this <xref href=\"System.Windows.Data.BindingExpression\"></xref>.","nodes":[{"pos":[0,94],"content":"The binding source object for this <ph id=\"ph1\">&lt;xref href=\"System.Windows.Data.BindingExpression\"&gt;&lt;/xref&gt;</ph>.","source":"The binding source object for this <xref href=\"System.Windows.Data.BindingExpression\"></xref>."}],"pos":[8926,9021],"yaml":true},{"content":"Gets the name of the binding source property for this <xref href=\"System.Windows.Data.BindingExpression\"></xref>.","nodes":[{"pos":[0,113],"content":"Gets the name of the binding source property for this <ph id=\"ph1\">&lt;xref href=\"System.Windows.Data.BindingExpression\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the name of the binding source property for this <xref href=\"System.Windows.Data.BindingExpression\"></xref>."}],"pos":[10143,10257],"yaml":true},{"content":"The name of the binding source property for this <xref href=\"System.Windows.Data.BindingExpression\"></xref>.","nodes":[{"pos":[0,108],"content":"The name of the binding source property for this <ph id=\"ph1\">&lt;xref href=\"System.Windows.Data.BindingExpression\"&gt;&lt;/xref&gt;</ph>.","source":"The name of the binding source property for this <xref href=\"System.Windows.Data.BindingExpression\"></xref>."}],"pos":[10387,10496],"yaml":true},{"content":"Sends the current binding target value to the binding source property in <xref href=\"System.Windows.Data.BindingMode.TwoWay\"></xref> or <xref href=\"System.Windows.Data.BindingMode.OneWayToSource\"></xref> bindings.","nodes":[{"pos":[0,213],"content":"Sends the current binding target value to the binding source property in <ph id=\"ph1\">&lt;xref href=\"System.Windows.Data.BindingMode.TwoWay\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Windows.Data.BindingMode.OneWayToSource\"&gt;&lt;/xref&gt;</ph> bindings.","source":"Sends the current binding target value to the binding source property in <xref href=\"System.Windows.Data.BindingMode.TwoWay\"></xref> or <xref href=\"System.Windows.Data.BindingMode.OneWayToSource\"></xref> bindings."}],"pos":[11550,11764],"yaml":true},{"content":"This method does nothing when the <xref:System.Windows.Data.Binding.Mode%2A> of the binding is not <xref:System.Windows.Data.BindingMode.TwoWay> or <xref:System.Windows.Data.BindingMode.OneWayToSource>.  \n  \n If the <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> value of your binding is set to <xref:System.Windows.Data.UpdateSourceTrigger.Explicit>, you must call the <xref:System.Windows.Data.BindingExpression.UpdateSource%2A> method or the changes will not propagate back to the source.","nodes":[{"pos":[0,202],"content":"This method does nothing when the <xref:System.Windows.Data.Binding.Mode%2A> of the binding is not <xref:System.Windows.Data.BindingMode.TwoWay> or <xref:System.Windows.Data.BindingMode.OneWayToSource>.","nodes":[{"content":"This method does nothing when the <ph id=\"ph1\">&lt;xref:System.Windows.Data.Binding.Mode%2A&gt;</ph> of the binding is not <ph id=\"ph2\">&lt;xref:System.Windows.Data.BindingMode.TwoWay&gt;</ph> or <ph id=\"ph3\">&lt;xref:System.Windows.Data.BindingMode.OneWayToSource&gt;</ph>.","pos":[0,202],"source":"This method does nothing when the <xref:System.Windows.Data.Binding.Mode%2A> of the binding is not <xref:System.Windows.Data.BindingMode.TwoWay> or <xref:System.Windows.Data.BindingMode.OneWayToSource>."}]},{"pos":[209,502],"content":"If the <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> value of your binding is set to <xref:System.Windows.Data.UpdateSourceTrigger.Explicit>, you must call the <xref:System.Windows.Data.BindingExpression.UpdateSource%2A> method or the changes will not propagate back to the source.","nodes":[{"content":"If the <ph id=\"ph1\">&lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt;</ph> value of your binding is set to <ph id=\"ph2\">&lt;xref:System.Windows.Data.UpdateSourceTrigger.Explicit&gt;</ph>, you must call the <ph id=\"ph3\">&lt;xref:System.Windows.Data.BindingExpression.UpdateSource%2A&gt;</ph> method or the changes will not propagate back to the source.","pos":[0,293],"source":"If the <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> value of your binding is set to <xref:System.Windows.Data.UpdateSourceTrigger.Explicit>, you must call the <xref:System.Windows.Data.BindingExpression.UpdateSource%2A> method or the changes will not propagate back to the source."}]}],"pos":[11775,12282],"yaml":true,"extradata":"MT"},{"content":"The binding has been detached from its target.","nodes":[{"pos":[0,46],"content":"The binding has been detached from its target.","nodes":[{"content":"The binding has been detached from its target.","pos":[0,46]}]}],"pos":[12550,12597],"yaml":true},{"content":"Forces a data transfer from the binding source property to the binding target property.","nodes":[{"pos":[0,87],"content":"Forces a data transfer from the binding source property to the binding target property.","nodes":[{"content":"Forces a data transfer from the binding source property to the binding target property.","pos":[0,87]}]}],"pos":[13556,13644],"yaml":true},{"content":"This method enables you to force a data transfer from the source property to the target property. If your source object implements a proper property-changed notification mechanism such as <xref:System.ComponentModel.INotifyPropertyChanged>, target updates happen automatically. However, you have the option to use this method to update the target property explicitly in cases where your source object does not provide the proper property-changed notifications. You can also use this method if your application needs to update the target properties periodically.","nodes":[{"pos":[0,561],"content":"This method enables you to force a data transfer from the source property to the target property. If your source object implements a proper property-changed notification mechanism such as <xref:System.ComponentModel.INotifyPropertyChanged>, target updates happen automatically. However, you have the option to use this method to update the target property explicitly in cases where your source object does not provide the proper property-changed notifications. You can also use this method if your application needs to update the target properties periodically.","nodes":[{"content":"This method enables you to force a data transfer from the source property to the target property. If your source object implements a proper property-changed notification mechanism such as <xref:System.ComponentModel.INotifyPropertyChanged>, target updates happen automatically. However, you have the option to use this method to update the target property explicitly in cases where your source object does not provide the proper property-changed notifications. You can also use this method if your application needs to update the target properties periodically.","pos":[0,561],"nodes":[{"content":"This method enables you to force a data transfer from the source property to the target property.","pos":[0,97]},{"content":"If your source object implements a proper property-changed notification mechanism such as <ph id=\"ph1\">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph>, target updates happen automatically.","pos":[98,277],"source":" If your source object implements a proper property-changed notification mechanism such as <xref:System.ComponentModel.INotifyPropertyChanged>, target updates happen automatically."},{"content":"However, you have the option to use this method to update the target property explicitly in cases where your source object does not provide the proper property-changed notifications.","pos":[278,460]},{"content":"You can also use this method if your application needs to update the target properties periodically.","pos":[461,561]}]}]}],"pos":[13655,14217],"yaml":true,"extradata":"MT"},{"content":"The binding has been detached from its target.","nodes":[{"pos":[0,46],"content":"The binding has been detached from its target.","nodes":[{"content":"The binding has been detached from its target.","pos":[0,46]}]}],"pos":[14485,14532],"yaml":true},{"content":"This member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.","nodes":[{"pos":[0,165],"content":"This member supports the <ph id=\"ph1\">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> infrastructure and is not intended to be used directly from your code.","source":"This member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code."}],"pos":[15867,16033],"yaml":true},{"content":"The type of the <xref href=\"System.Windows.WeakEventManager\"></xref> calling this method. This only recognizes manager objects of type <xref href=\"System.Collections.Specialized.CollectionChangedEventManager\"></xref>.","nodes":[{"pos":[0,217],"content":"The type of the <xref href=\"System.Windows.WeakEventManager\"></xref> calling this method. This only recognizes manager objects of type <xref href=\"System.Collections.Specialized.CollectionChangedEventManager\"></xref>.","nodes":[{"content":"The type of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.WeakEventManager\"&gt;&lt;/xref&gt;</ph> calling this method.","pos":[0,89],"source":"The type of the <xref href=\"System.Windows.WeakEventManager\"></xref> calling this method."},{"content":"This only recognizes manager objects of type <ph id=\"ph1\">&lt;xref href=\"System.Collections.Specialized.CollectionChangedEventManager\"&gt;&lt;/xref&gt;</ph>.","pos":[90,217],"source":" This only recognizes manager objects of type <xref href=\"System.Collections.Specialized.CollectionChangedEventManager\"></xref>."}]}],"pos":[16226,16444],"yaml":true},{"content":"Object that originated the event.","nodes":[{"pos":[0,33],"content":"Object that originated the event.","nodes":[{"content":"Object that originated the event.","pos":[0,33]}]}],"pos":[16506,16540],"yaml":true},{"content":"Event data.","nodes":[{"pos":[0,11],"content":"Event data.","nodes":[{"content":"Event data.","pos":[0,11]}]}],"pos":[16600,16612],"yaml":true},{"content":"`true` if the listener handled the event; otherwise, `false`.","nodes":[{"pos":[0,61],"content":"<ph id=\"ph1\">`true`</ph> if the listener handled the event; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the listener handled the event; otherwise, `false`."}],"pos":[16670,16734],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Data.BindingExpression\n  commentId: T:System.Windows.Data.BindingExpression\n  id: BindingExpression\n  children:\n  - System.Windows.Data.BindingExpression.DataItem\n  - System.Windows.Data.BindingExpression.ParentBinding\n  - System.Windows.Data.BindingExpression.ResolvedSource\n  - System.Windows.Data.BindingExpression.ResolvedSourcePropertyName\n  - System.Windows.Data.BindingExpression.UpdateSource\n  - System.Windows.Data.BindingExpression.UpdateTarget\n  - System.Windows.Data.BindingExpression.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)\n  langs:\n  - csharp\n  name: BindingExpression\n  nameWithType: BindingExpression\n  fullName: System.Windows.Data.BindingExpression\n  type: Class\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Data\n  summary: Contains information about a single instance of a <xref href=\"System.Windows.Data.Binding\"></xref>.\n  remarks: \"The <xref:System.Windows.Data.Binding> class is the high-level class for the declaration of a binding. The <xref:System.Windows.Data.BindingExpression> class is the underlying object that maintains the connection between the binding source and the binding target. A <xref:System.Windows.Data.Binding> contains all the information that can be shared across several <xref:System.Windows.Data.BindingExpression> objects. A <xref:System.Windows.Data.BindingExpression> is an instance expression that cannot be shared and that contains all the instance information about the <xref:System.Windows.Data.Binding>.  \\n  \\n For example, consider the following, where `myDataObject` is an instance of the `MyData` class, `myBinding` is the source <xref:System.Windows.Data.Binding> object, and `MyData` class is a defined class that contains a string property named `MyDataProperty`. This example binds the text content of `mytext`, which is an instance of <xref:System.Windows.Controls.TextBlock>, to `MyDataProperty`.  \\n  \\n [!code-csharp[CodeOnlyBinding#1](~/samples/snippets/csharp/VS_Snippets_Wpf/CodeOnlyBinding/CSharp/binding.cs#1)]\\n [!code-vb[CodeOnlyBinding#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CodeOnlyBinding/VisualBasic/App.vb#1)]  \\n  \\n You can use the same `myBinding` object to create other bindings. For example, you might use the `myBinding` object to bind the text content of a check box to `MyDataProperty`. In that scenario, there will be two instances of <xref:System.Windows.Data.BindingExpression> that share the `myBinding` object.  \\n  \\n You can obtain a <xref:System.Windows.Data.BindingExpression> object by using the <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A> method or the <xref:System.Windows.FrameworkElement.GetBindingExpression%2A> method on a data-bound object.\"\n  syntax:\n    content: 'public sealed class BindingExpression : System.Windows.Data.BindingExpressionBase, System.Windows.IWeakEventListener'\n  inheritance:\n  - System.Object\n  - System.Windows.Expression\n  - System.Windows.Data.BindingExpressionBase\n  implements:\n  - System.Windows.IWeakEventListener\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Windows.Data.BindingExpressionBase.BindingGroup\n  - System.Windows.Data.BindingExpressionBase.HasError\n  - System.Windows.Data.BindingExpressionBase.HasValidationError\n  - System.Windows.Data.BindingExpressionBase.IsDirty\n  - System.Windows.Data.BindingExpressionBase.ParentBindingBase\n  - System.Windows.Data.BindingExpressionBase.Status\n  - System.Windows.Data.BindingExpressionBase.Target\n  - System.Windows.Data.BindingExpressionBase.TargetProperty\n  - System.Windows.Data.BindingExpressionBase.ValidateWithoutUpdate\n  - System.Windows.Data.BindingExpressionBase.ValidationError\n  - System.Windows.Data.BindingExpressionBase.ValidationErrors\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/BindingExpression.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Data.BindingExpression.DataItem\n  commentId: P:System.Windows.Data.BindingExpression.DataItem\n  id: DataItem\n  parent: System.Windows.Data.BindingExpression\n  langs:\n  - csharp\n  name: DataItem\n  nameWithType: BindingExpression.DataItem\n  fullName: BindingExpression.DataItem\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Data\n  summary: Gets the binding source object that this <xref href=\"System.Windows.Data.BindingExpression\"></xref> uses.\n  remarks: ''\n  example:\n  - \"The following example shows the implementation of a <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event handler that uses the <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A> method to obtain the <xref:System.Windows.Data.BindingExpression> and then calls the <xref:System.Windows.Data.BindingExpression.DataItem%2A> property to access the binding source object.  \\n  \\n The <xref:System.Windows.Controls.TextBlock> `SavingsText` is the binding target object, and its <xref:System.Windows.Controls.TextBlock.Text%2A> property is the binding target property.  \\n  \\n [!code-csharp[DirectionalBinding#OnRentRaise](~/samples/snippets/csharp/VS_Snippets_Wpf/DirectionalBinding/CSharp/Page1.xaml.cs#onrentraise)]\\n [!code-vb[DirectionalBinding#OnRentRaise](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DirectionalBinding/VisualBasic/DirectionalBinding.vb#onrentraise)]\"\n  syntax:\n    content: public object DataItem { get; }\n    return:\n      type: System.Object\n      description: The binding source object that this <xref href=\"System.Windows.Data.BindingExpression\"></xref> uses.\n  overload: System.Windows.Data.BindingExpression.DataItem*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/BindingExpression.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Data.BindingExpression.ParentBinding\n  commentId: P:System.Windows.Data.BindingExpression.ParentBinding\n  id: ParentBinding\n  parent: System.Windows.Data.BindingExpression\n  langs:\n  - csharp\n  name: ParentBinding\n  nameWithType: BindingExpression.ParentBinding\n  fullName: BindingExpression.ParentBinding\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Data\n  summary: Returns the <xref href=\"System.Windows.Data.Binding\"></xref> object of the current <xref href=\"System.Windows.Data.BindingExpression\"></xref>.\n  syntax:\n    content: public System.Windows.Data.Binding ParentBinding { get; }\n    return:\n      type: System.Windows.Data.Binding\n      description: The <xref href=\"System.Windows.Data.Binding\"></xref> object of the current binding expression.\n  overload: System.Windows.Data.BindingExpression.ParentBinding*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/BindingExpression.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Data.BindingExpression.ResolvedSource\n  commentId: P:System.Windows.Data.BindingExpression.ResolvedSource\n  id: ResolvedSource\n  parent: System.Windows.Data.BindingExpression\n  langs:\n  - csharp\n  name: ResolvedSource\n  nameWithType: BindingExpression.ResolvedSource\n  fullName: BindingExpression.ResolvedSource\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Data\n  summary: Gets the binding source object for this <xref href=\"System.Windows.Data.BindingExpression\"></xref>.\n  syntax:\n    content: public object ResolvedSource { get; }\n    return:\n      type: System.Object\n      description: The binding source object for this <xref href=\"System.Windows.Data.BindingExpression\"></xref>.\n  overload: System.Windows.Data.BindingExpression.ResolvedSource*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/BindingExpression.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Data.BindingExpression.ResolvedSourcePropertyName\n  commentId: P:System.Windows.Data.BindingExpression.ResolvedSourcePropertyName\n  id: ResolvedSourcePropertyName\n  parent: System.Windows.Data.BindingExpression\n  langs:\n  - csharp\n  name: ResolvedSourcePropertyName\n  nameWithType: BindingExpression.ResolvedSourcePropertyName\n  fullName: BindingExpression.ResolvedSourcePropertyName\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Data\n  summary: Gets the name of the binding source property for this <xref href=\"System.Windows.Data.BindingExpression\"></xref>.\n  syntax:\n    content: public string ResolvedSourcePropertyName { get; }\n    return:\n      type: System.String\n      description: The name of the binding source property for this <xref href=\"System.Windows.Data.BindingExpression\"></xref>.\n  overload: System.Windows.Data.BindingExpression.ResolvedSourcePropertyName*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/BindingExpression.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Data.BindingExpression.UpdateSource\n  commentId: M:System.Windows.Data.BindingExpression.UpdateSource\n  id: UpdateSource\n  parent: System.Windows.Data.BindingExpression\n  langs:\n  - csharp\n  name: UpdateSource()\n  nameWithType: BindingExpression.UpdateSource()\n  fullName: BindingExpression.UpdateSource()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Data\n  summary: Sends the current binding target value to the binding source property in <xref href=\"System.Windows.Data.BindingMode.TwoWay\"></xref> or <xref href=\"System.Windows.Data.BindingMode.OneWayToSource\"></xref> bindings.\n  remarks: \"This method does nothing when the <xref:System.Windows.Data.Binding.Mode%2A> of the binding is not <xref:System.Windows.Data.BindingMode.TwoWay> or <xref:System.Windows.Data.BindingMode.OneWayToSource>.  \\n  \\n If the <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> value of your binding is set to <xref:System.Windows.Data.UpdateSourceTrigger.Explicit>, you must call the <xref:System.Windows.Data.BindingExpression.UpdateSource%2A> method or the changes will not propagate back to the source.\"\n  syntax:\n    content: public override void UpdateSource ();\n    parameters: []\n  overload: System.Windows.Data.BindingExpression.UpdateSource*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The binding has been detached from its target.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/BindingExpression.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Data.BindingExpression.UpdateTarget\n  commentId: M:System.Windows.Data.BindingExpression.UpdateTarget\n  id: UpdateTarget\n  parent: System.Windows.Data.BindingExpression\n  langs:\n  - csharp\n  name: UpdateTarget()\n  nameWithType: BindingExpression.UpdateTarget()\n  fullName: BindingExpression.UpdateTarget()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Data\n  summary: Forces a data transfer from the binding source property to the binding target property.\n  remarks: This method enables you to force a data transfer from the source property to the target property. If your source object implements a proper property-changed notification mechanism such as <xref:System.ComponentModel.INotifyPropertyChanged>, target updates happen automatically. However, you have the option to use this method to update the target property explicitly in cases where your source object does not provide the proper property-changed notifications. You can also use this method if your application needs to update the target properties periodically.\n  syntax:\n    content: public override void UpdateTarget ();\n    parameters: []\n  overload: System.Windows.Data.BindingExpression.UpdateTarget*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The binding has been detached from its target.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/BindingExpression.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Data.BindingExpression.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)\n  commentId: M:System.Windows.Data.BindingExpression.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)\n  id: System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)\n  isEii: true\n  parent: System.Windows.Data.BindingExpression\n  langs:\n  - csharp\n  name: IWeakEventListener.ReceiveWeakEvent(Type, Object, EventArgs)\n  nameWithType: BindingExpression.IWeakEventListener.ReceiveWeakEvent(Type, Object, EventArgs)\n  fullName: BindingExpression.IWeakEventListener.ReceiveWeakEvent(Type, Object, EventArgs)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Data\n  summary: This member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.\n  syntax:\n    content: bool IWeakEventListener.ReceiveWeakEvent (Type managerType, object sender, EventArgs e);\n    parameters:\n    - id: managerType\n      type: System.Type\n      description: The type of the <xref href=\"System.Windows.WeakEventManager\"></xref> calling this method. This only recognizes manager objects of type <xref href=\"System.Collections.Specialized.CollectionChangedEventManager\"></xref>.\n    - id: sender\n      type: System.Object\n      description: Object that originated the event.\n    - id: e\n      type: System.EventArgs\n      description: Event data.\n    return:\n      type: System.Boolean\n      description: '`true` if the listener handled the event; otherwise, `false`.'\n  overload: System.Windows.Data.BindingExpression.System#Windows#IWeakEventListener#ReceiveWeakEvent*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/BindingExpression.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Windows.Data.BindingExpressionBase\n  parent: System.Windows.Data\n  isExternal: false\n  name: BindingExpressionBase\n  nameWithType: BindingExpressionBase\n  fullName: System.Windows.Data.BindingExpressionBase\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.Windows.Data.BindingExpression.DataItem\n  parent: System.Windows.Data.BindingExpression\n  isExternal: false\n  name: DataItem\n  nameWithType: BindingExpression.DataItem\n  fullName: BindingExpression.DataItem\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Data.BindingExpression.ParentBinding\n  parent: System.Windows.Data.BindingExpression\n  isExternal: false\n  name: ParentBinding\n  nameWithType: BindingExpression.ParentBinding\n  fullName: BindingExpression.ParentBinding\n- uid: System.Windows.Data.Binding\n  parent: System.Windows.Data\n  isExternal: false\n  name: Binding\n  nameWithType: Binding\n  fullName: System.Windows.Data.Binding\n- uid: System.Windows.Data.BindingExpression.ResolvedSource\n  parent: System.Windows.Data.BindingExpression\n  isExternal: false\n  name: ResolvedSource\n  nameWithType: BindingExpression.ResolvedSource\n  fullName: BindingExpression.ResolvedSource\n- uid: System.Windows.Data.BindingExpression.ResolvedSourcePropertyName\n  parent: System.Windows.Data.BindingExpression\n  isExternal: false\n  name: ResolvedSourcePropertyName\n  nameWithType: BindingExpression.ResolvedSourcePropertyName\n  fullName: BindingExpression.ResolvedSourcePropertyName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Data.BindingExpression.UpdateSource\n  parent: System.Windows.Data.BindingExpression\n  isExternal: false\n  name: UpdateSource()\n  nameWithType: BindingExpression.UpdateSource()\n  fullName: BindingExpression.UpdateSource()\n- uid: System.Windows.Data.BindingExpression.UpdateTarget\n  parent: System.Windows.Data.BindingExpression\n  isExternal: false\n  name: UpdateTarget()\n  nameWithType: BindingExpression.UpdateTarget()\n  fullName: BindingExpression.UpdateTarget()\n- uid: System.Windows.Data.BindingExpression.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)\n  parent: System.Windows.Data.BindingExpression\n  isExternal: false\n  name: IWeakEventListener.ReceiveWeakEvent(Type, Object, EventArgs)\n  nameWithType: BindingExpression.IWeakEventListener.ReceiveWeakEvent(Type, Object, EventArgs)\n  fullName: BindingExpression.IWeakEventListener.ReceiveWeakEvent(Type, Object, EventArgs)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.EventArgs\n  parent: System\n  isExternal: false\n  name: EventArgs\n  nameWithType: EventArgs\n  fullName: System.EventArgs\n- uid: System.Windows.Data.BindingExpression.DataItem*\n  parent: System.Windows.Data.BindingExpression\n  isExternal: false\n  name: DataItem\n  nameWithType: BindingExpression.DataItem\n  fullName: BindingExpression.DataItem\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/BindingExpression.xml\n- uid: System.Windows.Data.BindingExpression.ParentBinding*\n  parent: System.Windows.Data.BindingExpression\n  isExternal: false\n  name: ParentBinding\n  nameWithType: BindingExpression.ParentBinding\n  fullName: BindingExpression.ParentBinding\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/BindingExpression.xml\n- uid: System.Windows.Data.BindingExpression.ResolvedSource*\n  parent: System.Windows.Data.BindingExpression\n  isExternal: false\n  name: ResolvedSource\n  nameWithType: BindingExpression.ResolvedSource\n  fullName: BindingExpression.ResolvedSource\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/BindingExpression.xml\n- uid: System.Windows.Data.BindingExpression.ResolvedSourcePropertyName*\n  parent: System.Windows.Data.BindingExpression\n  isExternal: false\n  name: ResolvedSourcePropertyName\n  nameWithType: BindingExpression.ResolvedSourcePropertyName\n  fullName: BindingExpression.ResolvedSourcePropertyName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/BindingExpression.xml\n- uid: System.Windows.Data.BindingExpression.UpdateSource*\n  parent: System.Windows.Data.BindingExpression\n  isExternal: false\n  name: UpdateSource\n  nameWithType: BindingExpression.UpdateSource\n  fullName: BindingExpression.UpdateSource\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/BindingExpression.xml\n- uid: System.Windows.Data.BindingExpression.UpdateTarget*\n  parent: System.Windows.Data.BindingExpression\n  isExternal: false\n  name: UpdateTarget\n  nameWithType: BindingExpression.UpdateTarget\n  fullName: BindingExpression.UpdateTarget\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/BindingExpression.xml\n- uid: System.Windows.Data.BindingExpression.System#Windows#IWeakEventListener#ReceiveWeakEvent*\n  parent: System.Windows.Data.BindingExpression\n  isExternal: false\n  name: System.Windows.IWeakEventListener.ReceiveWeakEvent\n  nameWithType: BindingExpression.System.Windows.IWeakEventListener.ReceiveWeakEvent\n  fullName: BindingExpression.System.Windows.IWeakEventListener.ReceiveWeakEvent\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/BindingExpression.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Windows.Data.BindingExpressionBase.BindingGroup\n  parent: System.Windows.Data.BindingExpressionBase\n  isExternal: false\n  name: BindingGroup\n  nameWithType: BindingExpressionBase.BindingGroup\n  fullName: BindingExpressionBase.BindingGroup\n- uid: System.Windows.Data.BindingExpressionBase.HasError\n  parent: System.Windows.Data.BindingExpressionBase\n  isExternal: false\n  name: HasError\n  nameWithType: BindingExpressionBase.HasError\n  fullName: BindingExpressionBase.HasError\n- uid: System.Windows.Data.BindingExpressionBase.HasValidationError\n  parent: System.Windows.Data.BindingExpressionBase\n  isExternal: false\n  name: HasValidationError\n  nameWithType: BindingExpressionBase.HasValidationError\n  fullName: BindingExpressionBase.HasValidationError\n- uid: System.Windows.Data.BindingExpressionBase.IsDirty\n  parent: System.Windows.Data.BindingExpressionBase\n  isExternal: false\n  name: IsDirty\n  nameWithType: BindingExpressionBase.IsDirty\n  fullName: BindingExpressionBase.IsDirty\n- uid: System.Windows.Data.BindingExpressionBase.ParentBindingBase\n  parent: System.Windows.Data.BindingExpressionBase\n  isExternal: false\n  name: ParentBindingBase\n  nameWithType: BindingExpressionBase.ParentBindingBase\n  fullName: BindingExpressionBase.ParentBindingBase\n- uid: System.Windows.Data.BindingExpressionBase.Status\n  parent: System.Windows.Data.BindingExpressionBase\n  isExternal: false\n  name: Status\n  nameWithType: BindingExpressionBase.Status\n  fullName: BindingExpressionBase.Status\n- uid: System.Windows.Data.BindingExpressionBase.Target\n  parent: System.Windows.Data.BindingExpressionBase\n  isExternal: false\n  name: Target\n  nameWithType: BindingExpressionBase.Target\n  fullName: BindingExpressionBase.Target\n- uid: System.Windows.Data.BindingExpressionBase.TargetProperty\n  parent: System.Windows.Data.BindingExpressionBase\n  isExternal: false\n  name: TargetProperty\n  nameWithType: BindingExpressionBase.TargetProperty\n  fullName: BindingExpressionBase.TargetProperty\n- uid: System.Windows.Data.BindingExpressionBase.ValidateWithoutUpdate\n  parent: System.Windows.Data.BindingExpressionBase\n  isExternal: false\n  name: ValidateWithoutUpdate()\n  nameWithType: BindingExpressionBase.ValidateWithoutUpdate()\n  fullName: BindingExpressionBase.ValidateWithoutUpdate()\n- uid: System.Windows.Data.BindingExpressionBase.ValidationError\n  parent: System.Windows.Data.BindingExpressionBase\n  isExternal: false\n  name: ValidationError\n  nameWithType: BindingExpressionBase.ValidationError\n  fullName: BindingExpressionBase.ValidationError\n- uid: System.Windows.Data.BindingExpressionBase.ValidationErrors\n  parent: System.Windows.Data.BindingExpressionBase\n  isExternal: false\n  name: ValidationErrors\n  nameWithType: BindingExpressionBase.ValidationErrors\n  fullName: BindingExpressionBase.ValidationErrors\n- uid: System.Windows.IWeakEventListener\n  parent: System.Windows\n  isExternal: false\n  name: IWeakEventListener\n  nameWithType: IWeakEventListener\n  fullName: System.Windows.IWeakEventListener\n"}