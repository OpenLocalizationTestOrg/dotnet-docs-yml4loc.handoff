{"nodes":[{"content":"Allows custom logic for the commitment of work batches.","nodes":[{"pos":[0,55],"content":"Allows custom logic for the commitment of work batches.","nodes":[{"content":"Allows custom logic for the commitment of work batches.","pos":[0,55]}]}],"pos":[770,826],"yaml":true},{"content":"> [!NOTE]\n>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  \n  \n When a work batch is committed the runtime calls into the <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> and gives it a delegate to call to do the actual committing of the work batch. The runtime still has the primary responsibility of committing the work batch but allows the <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> to insert itself in the process for customization around the commit process.  \n  \n This process allows custom error handling logic. If the <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> owns the transaction, which is the case when the <xref:System.Transactions.Transaction.Current%2A?displayProperty=fullName> property returns `null` therefore necessitating the need to create a new ambient transaction, it is allowed to call the delegate more than once, creating a new transaction for each call. The most common case for this for example is to handle intermittent network problems or SQL cluster failovers. If the call to the <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.CommitWorkBatchCallback> throws an exception <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> can catch this exception, start a new transaction and call the delegate again. This gives a level of resilience to workflow instance execution that otherwise would cause workflows to terminate.","nodes":[{"pos":[2,78],"content":"[!NOTE]\n [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]","leadings":["","> "],"nodes":[]},{"pos":[85,531],"content":"When a work batch is committed the runtime calls into the <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> and gives it a delegate to call to do the actual committing of the work batch. The runtime still has the primary responsibility of committing the work batch but allows the <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> to insert itself in the process for customization around the commit process.","nodes":[{"content":"When a work batch is committed the runtime calls into the <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> and gives it a delegate to call to do the actual committing of the work batch. The runtime still has the primary responsibility of committing the work batch but allows the <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> to insert itself in the process for customization around the commit process.","pos":[0,446],"nodes":[{"content":"When a work batch is committed the runtime calls into the <ph id=\"ph1\">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;</ph> and gives it a delegate to call to do the actual committing of the work batch.","pos":[0,206],"source":"When a work batch is committed the runtime calls into the <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> and gives it a delegate to call to do the actual committing of the work batch."},{"content":"The runtime still has the primary responsibility of committing the work batch but allows the <ph id=\"ph1\">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;</ph> to insert itself in the process for customization around the commit process.","pos":[207,446],"source":" The runtime still has the primary responsibility of committing the work batch but allows the <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> to insert itself in the process for customization around the commit process."}]}]},{"pos":[538,1482],"content":"This process allows custom error handling logic. If the <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> owns the transaction, which is the case when the <xref:System.Transactions.Transaction.Current%2A?displayProperty=fullName> property returns `null` therefore necessitating the need to create a new ambient transaction, it is allowed to call the delegate more than once, creating a new transaction for each call. The most common case for this for example is to handle intermittent network problems or SQL cluster failovers. If the call to the <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.CommitWorkBatchCallback> throws an exception <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> can catch this exception, start a new transaction and call the delegate again. This gives a level of resilience to workflow instance execution that otherwise would cause workflows to terminate.","nodes":[{"content":"This process allows custom error handling logic.","pos":[0,48]},{"content":"If the <ph id=\"ph1\">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;</ph> owns the transaction, which is the case when the <ph id=\"ph2\">&lt;xref:System.Transactions.Transaction.Current%2A?displayProperty=fullName&gt;</ph> property returns <ph id=\"ph3\">`null`</ph> therefore necessitating the need to create a new ambient transaction, it is allowed to call the delegate more than once, creating a new transaction for each call.","pos":[49,436],"source":" If the <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> owns the transaction, which is the case when the <xref:System.Transactions.Transaction.Current%2A?displayProperty=fullName> property returns `null` therefore necessitating the need to create a new ambient transaction, it is allowed to call the delegate more than once, creating a new transaction for each call."},{"content":"The most common case for this for example is to handle intermittent network problems or SQL cluster failovers.","pos":[437,547]},{"content":"If the call to the <ph id=\"ph1\">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.CommitWorkBatchCallback&gt;</ph> throws an exception <ph id=\"ph2\">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;</ph> can catch this exception, start a new transaction and call the delegate again.","pos":[548,829],"source":" If the call to the <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.CommitWorkBatchCallback> throws an exception <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> can catch this exception, start a new transaction and call the delegate again."},{"content":"This gives a level of resilience to workflow instance execution that otherwise would cause workflows to terminate.","pos":[830,944]}]}],"pos":[837,2327],"yaml":true,"extradata":"MT"},{"content":"When implemented in a derived class, initializes a new instance of the <xref href=\"System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService\"></xref> class.","nodes":[{"pos":[0,161],"content":"When implemented in a derived class, initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService\"&gt;&lt;/xref&gt;</ph> class.","source":"When implemented in a derived class, initializes a new instance of the <xref href=\"System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService\"></xref> class."}],"pos":[5218,5380],"yaml":true},{"content":"Called to commit the work batch.","nodes":[{"pos":[0,32],"content":"Called to commit the work batch.","nodes":[{"content":"Called to commit the work batch.","pos":[0,32]}]}],"pos":[7073,7106],"yaml":true},{"content":"The <xref href=\"System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.CommitWorkBatchCallback\"></xref> delegate to call to commit the work batch.","nodes":[{"pos":[0,154],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.CommitWorkBatchCallback\"&gt;&lt;/xref&gt;</ph> delegate to call to commit the work batch.","source":"The <xref href=\"System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.CommitWorkBatchCallback\"></xref> delegate to call to commit the work batch."}],"pos":[7450,7605],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService\n  commentId: T:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService\n  id: WorkflowCommitWorkBatchService\n  children:\n  - System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.#ctor\n  - System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.CommitWorkBatch(System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.CommitWorkBatchCallback)\n  langs:\n  - csharp\n  name: WorkflowCommitWorkBatchService\n  nameWithType: WorkflowCommitWorkBatchService\n  fullName: System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService\n  type: Class\n  assemblies:\n  - System.Workflow.Runtime\n  namespace: System.Workflow.Runtime.Hosting\n  summary: Allows custom logic for the commitment of work batches.\n  remarks: \"> [!NOTE]\\n>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  \\n  \\n When a work batch is committed the runtime calls into the <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> and gives it a delegate to call to do the actual committing of the work batch. The runtime still has the primary responsibility of committing the work batch but allows the <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> to insert itself in the process for customization around the commit process.  \\n  \\n This process allows custom error handling logic. If the <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> owns the transaction, which is the case when the <xref:System.Transactions.Transaction.Current%2A?displayProperty=fullName> property returns `null` therefore necessitating the need to create a new ambient transaction, it is allowed to call the delegate more than once, creating a new transaction for each call. The most common case for this for example is to handle intermittent network problems or SQL cluster failovers. If the call to the <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.CommitWorkBatchCallback> throws an exception <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> can catch this exception, start a new transaction and call the delegate again. This gives a level of resilience to workflow instance execution that otherwise would cause workflows to terminate.\"\n  example:\n  - \"The following example demonstrates a class that inherits from <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService>.  \\n  \\n [!code-csharp[WF_Samples#0](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#0)]\\n [!code-vb[WF_Samples#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#0)]\"\n  syntax:\n    content: >-\n      [System.Obsolete(\"The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*\")]\n\n      public abstract class WorkflowCommitWorkBatchService : System.Workflow.Runtime.Hosting.WorkflowRuntimeService\n  inheritance:\n  - System.Object\n  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService\n  derivedClasses:\n  - System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService\n  - System.Workflow.Runtime.Hosting.SharedConnectionWorkflowCommitWorkBatchService\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted\n  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped\n  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)\n  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime\n  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start\n  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State\n  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Runtime.Hosting/WorkflowCommitWorkBatchService.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.#ctor\n  commentId: M:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.#ctor\n  id: '#ctor'\n  parent: System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService\n  langs:\n  - csharp\n  name: WorkflowCommitWorkBatchService()\n  nameWithType: WorkflowCommitWorkBatchService.WorkflowCommitWorkBatchService()\n  fullName: WorkflowCommitWorkBatchService.WorkflowCommitWorkBatchService()\n  type: Constructor\n  assemblies:\n  - System.Workflow.Runtime\n  namespace: System.Workflow.Runtime.Hosting\n  summary: When implemented in a derived class, initializes a new instance of the <xref href=\"System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService\"></xref> class.\n  syntax:\n    content: protected WorkflowCommitWorkBatchService ();\n    parameters: []\n  overload: System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Runtime.Hosting/WorkflowCommitWorkBatchService.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.CommitWorkBatch(System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.CommitWorkBatchCallback)\n  commentId: M:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.CommitWorkBatch(System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.CommitWorkBatchCallback)\n  id: CommitWorkBatch(System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.CommitWorkBatchCallback)\n  parent: System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService\n  langs:\n  - csharp\n  name: CommitWorkBatch(WorkflowCommitWorkBatchService+CommitWorkBatchCallback)\n  nameWithType: WorkflowCommitWorkBatchService.CommitWorkBatch(WorkflowCommitWorkBatchService+CommitWorkBatchCallback)\n  fullName: WorkflowCommitWorkBatchService.CommitWorkBatch(WorkflowCommitWorkBatchService+CommitWorkBatchCallback)\n  type: Method\n  assemblies:\n  - System.Workflow.Runtime\n  namespace: System.Workflow.Runtime.Hosting\n  summary: Called to commit the work batch.\n  syntax:\n    content: protected virtual void CommitWorkBatch (System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.CommitWorkBatchCallback commitWorkBatchCallback);\n    parameters:\n    - id: commitWorkBatchCallback\n      type: System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService+CommitWorkBatchCallback\n      description: The <xref href=\"System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.CommitWorkBatchCallback\"></xref> delegate to call to commit the work batch.\n  overload: System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.CommitWorkBatch*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Runtime.Hosting/WorkflowCommitWorkBatchService.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService\n  parent: System.Workflow.Runtime.Hosting\n  isExternal: false\n  name: WorkflowRuntimeService\n  nameWithType: WorkflowRuntimeService\n  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService\n- uid: System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.#ctor\n  parent: System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService\n  isExternal: false\n  name: WorkflowCommitWorkBatchService()\n  nameWithType: WorkflowCommitWorkBatchService.WorkflowCommitWorkBatchService()\n  fullName: WorkflowCommitWorkBatchService.WorkflowCommitWorkBatchService()\n- uid: System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.CommitWorkBatch(System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.CommitWorkBatchCallback)\n  parent: System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService\n  isExternal: false\n  name: CommitWorkBatch(WorkflowCommitWorkBatchService+CommitWorkBatchCallback)\n  nameWithType: WorkflowCommitWorkBatchService.CommitWorkBatch(WorkflowCommitWorkBatchService+CommitWorkBatchCallback)\n  fullName: WorkflowCommitWorkBatchService.CommitWorkBatch(WorkflowCommitWorkBatchService+CommitWorkBatchCallback)\n- uid: System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService\n  parent: System.Workflow.Runtime.Hosting\n  isExternal: false\n  name: WorkflowCommitWorkBatchService\n  nameWithType: WorkflowCommitWorkBatchService\n  fullName: System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService+CommitWorkBatchCallback\n- uid: System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.#ctor*\n  parent: System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService\n  isExternal: false\n  name: WorkflowCommitWorkBatchService\n  nameWithType: WorkflowCommitWorkBatchService.WorkflowCommitWorkBatchService\n  fullName: WorkflowCommitWorkBatchService.WorkflowCommitWorkBatchService\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Runtime.Hosting/WorkflowCommitWorkBatchService.xml\n- uid: System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService.CommitWorkBatch*\n  parent: System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService\n  isExternal: false\n  name: CommitWorkBatch\n  nameWithType: WorkflowCommitWorkBatchService.CommitWorkBatch\n  fullName: WorkflowCommitWorkBatchService.CommitWorkBatch\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Runtime.Hosting/WorkflowCommitWorkBatchService.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted\n  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService\n  isExternal: false\n  name: OnStarted()\n  nameWithType: WorkflowRuntimeService.OnStarted()\n  fullName: WorkflowRuntimeService.OnStarted()\n- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped\n  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService\n  isExternal: false\n  name: OnStopped()\n  nameWithType: WorkflowRuntimeService.OnStopped()\n  fullName: WorkflowRuntimeService.OnStopped()\n- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)\n  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService\n  isExternal: false\n  name: RaiseServicesExceptionNotHandledEvent(Exception, Guid)\n  nameWithType: WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(Exception, Guid)\n  fullName: WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(Exception, Guid)\n- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime\n  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService\n  isExternal: false\n  name: Runtime\n  nameWithType: WorkflowRuntimeService.Runtime\n  fullName: WorkflowRuntimeService.Runtime\n- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start\n  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService\n  isExternal: false\n  name: Start()\n  nameWithType: WorkflowRuntimeService.Start()\n  fullName: WorkflowRuntimeService.Start()\n- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State\n  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService\n  isExternal: false\n  name: State\n  nameWithType: WorkflowRuntimeService.State\n  fullName: WorkflowRuntimeService.State\n- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop\n  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService\n  isExternal: false\n  name: Stop()\n  nameWithType: WorkflowRuntimeService.Stop()\n  fullName: WorkflowRuntimeService.Stop()\n"}