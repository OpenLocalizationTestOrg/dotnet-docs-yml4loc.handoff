{"nodes":[{"content":"Represents a value tuple with a single component.","nodes":[{"pos":[0,49],"content":"Represents a value tuple with a single component.","nodes":[{"content":"Represents a value tuple with a single component.","pos":[0,49]}]}],"pos":[1233,1283],"yaml":true},{"content":"A value tuple is a data structure that has a specific number and sequence of values. The <xref:System.ValueTuple%601> structure represents a value tuple that has one element.  \n  \n The value tuple types differ from the tuple types (such as <xref:System.Tuple%601> as follows:  \n  \n-   They are structures (value types) rather than classes (reference types).  \n  \n-   Its  <xref:System.ValueTuple%601.Item1> member is a field rather than a property.  \n  \n-   Its field is mutable rather than read-only.  \n  \n The value tuple types provide the runtime implementation that supports [tuples in C#](~/docs/csharp/tuples.md) and struct tuples in F#.  In addition to creating a <xref:System.ValueTuple%601> instance by using language syntax, you can call the <xref:System.ValueTuple.Create%60%601%28%60%600%29?displayProperty=fullName> factory method.","nodes":[{"pos":[0,174],"content":"A value tuple is a data structure that has a specific number and sequence of values. The <xref:System.ValueTuple%601> structure represents a value tuple that has one element.","nodes":[{"content":"A value tuple is a data structure that has a specific number and sequence of values. The <xref:System.ValueTuple%601> structure represents a value tuple that has one element.","pos":[0,174],"nodes":[{"content":"A value tuple is a data structure that has a specific number and sequence of values.","pos":[0,84]},{"content":"The <ph id=\"ph1\">&lt;xref:System.ValueTuple%601&gt;</ph> structure represents a value tuple that has one element.","pos":[85,174],"source":" The <xref:System.ValueTuple%601> structure represents a value tuple that has one element."}]}]},{"pos":[181,275],"content":"The value tuple types differ from the tuple types (such as <xref:System.Tuple%601> as follows:","nodes":[{"content":"The value tuple types differ from the tuple types (such as <ph id=\"ph1\">&lt;xref:System.Tuple%601&gt;</ph> as follows:","pos":[0,94],"source":"The value tuple types differ from the tuple types (such as <xref:System.Tuple%601> as follows:"}]},{"pos":[285,357],"content":"They are structures (value types) rather than classes (reference types).","nodes":[{"content":"They are structures (value types) rather than classes (reference types).","pos":[0,72]}]},{"pos":[367,448],"content":"Its  <xref:System.ValueTuple%601.Item1> member is a field rather than a property.","nodes":[{"content":"Its  <ph id=\"ph1\">&lt;xref:System.ValueTuple%601.Item1&gt;</ph> member is a field rather than a property.","pos":[0,81],"source":"Its  <xref:System.ValueTuple%601.Item1> member is a field rather than a property."}]},{"pos":[458,501],"content":"Its field is mutable rather than read-only.","nodes":[{"content":"Its field is mutable rather than read-only.","pos":[0,43]}]},{"pos":[508,844],"content":"The value tuple types provide the runtime implementation that supports [tuples in C#](~/docs/csharp/tuples.md) and struct tuples in F#.  In addition to creating a <xref:System.ValueTuple%601> instance by using language syntax, you can call the <xref:System.ValueTuple.Create%60%601%28%60%600%29?displayProperty=fullName> factory method.","nodes":[{"content":"The value tuple types provide the runtime implementation that supports <bpt id=\"p1\">[</bpt>tuples in C#<ept id=\"p1\">](~/docs/csharp/tuples.md)</ept> and struct tuples in F#.","pos":[0,135],"source":"The value tuple types provide the runtime implementation that supports [tuples in C#](~/docs/csharp/tuples.md) and struct tuples in F#."},{"content":"In addition to creating a <ph id=\"ph1\">&lt;xref:System.ValueTuple%601&gt;</ph> instance by using language syntax, you can call the <ph id=\"ph2\">&lt;xref:System.ValueTuple.Create%60%601%28%60%600%29?displayProperty=fullName&gt;</ph> factory method.","pos":[137,336],"source":"  In addition to creating a <xref:System.ValueTuple%601> instance by using language syntax, you can call the <xref:System.ValueTuple.Create%60%601%28%60%600%29?displayProperty=fullName> factory method."}]}],"pos":[1294,2151],"yaml":true,"extradata":"MT"},{"content":"The type of the value tuple's only element.","nodes":[{"pos":[0,43],"content":"The type of the value tuple's only element.","nodes":[{"content":"The type of the value tuple's only element.","pos":[0,43]}]}],"pos":[2411,2455],"yaml":true},{"content":"Initializes a new <xref href=\"System.ValueTuple`1\"></xref> instance.","nodes":[{"pos":[0,68],"content":"Initializes a new <ph id=\"ph1\">&lt;xref href=\"System.ValueTuple`1\"&gt;&lt;/xref&gt;</ph> instance.","source":"Initializes a new <xref href=\"System.ValueTuple`1\"></xref> instance."}],"pos":[3604,3673],"yaml":true},{"content":"The value tuple's first element.","nodes":[{"pos":[0,32],"content":"The value tuple's first element.","nodes":[{"content":"The value tuple's first element.","pos":[0,32]}]}],"pos":[3792,3825],"yaml":true},{"content":"Compares the current <xref href=\"System.ValueTuple`1\"></xref> instance to a specified <xref href=\"System.ValueTuple`1\"></xref> instance.","nodes":[{"pos":[0,136],"content":"Compares the current <ph id=\"ph1\">&lt;xref href=\"System.ValueTuple`1\"&gt;&lt;/xref&gt;</ph> instance to a specified <ph id=\"ph2\">&lt;xref href=\"System.ValueTuple`1\"&gt;&lt;/xref&gt;</ph> instance.","source":"Compares the current <xref href=\"System.ValueTuple`1\"></xref> instance to a specified <xref href=\"System.ValueTuple`1\"></xref> instance."}],"pos":[4760,4897],"yaml":true},{"content":"The tuple to compare with this instance.","nodes":[{"pos":[0,40],"content":"The tuple to compare with this instance.","nodes":[{"content":"The tuple to compare with this instance.","pos":[0,40]}]}],"pos":[5048,5089],"yaml":true},{"content":"A signed integer that indicates the relative position of this instance and                      <code>other</code> in the sort order, as shown in the following able.  \n  \n <table><thead><tr><th> Vaue  \n  \n </th><th> Description  \n  \n </th></tr></thead><tbody><tr><td> A negative integer  \n  \n </td><td> This instance precedes                                      <code>other</code>.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td> This instance and                                      <code>other</code> have the same position in the sort order.  \n  \n </td></tr><tr><td> A positive integer  \n  \n </td><td> This instance follows                                      <code>other</code>.  \n  \n </td></tr></tbody></table>","nodes":[{"pos":[0,165],"content":"A signed integer that indicates the relative position of this instance and                      <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">other</ph><ept id=\"p1\">&lt;/code&gt;</ept> in the sort order, as shown in the following able.","source":"A signed integer that indicates the relative position of this instance and                      <code>other</code> in the sort order, as shown in the following able."},{"pos":[172,717],"content":"<table><thead><tr><th> Vaue  \n  \n </th><th> Description  \n  \n </th></tr></thead><tbody><tr><td> A negative integer  \n  \n </td><td> This instance precedes                                      <code>other</code>.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td> This instance and                                      <code>other</code> have the same position in the sort order.  \n  \n </td></tr><tr><td> A positive integer  \n  \n </td><td> This instance follows                                      <code>other</code>.  \n  \n </td></tr></tbody></table>","nodes":[{"content":"Vaue","pos":[23,32],"source":" Vaue  \n  \n "},{"content":"Description","pos":[44,60],"source":" Description  \n  \n "},{"content":"A negative integer","pos":[96,119],"source":" A negative integer  \n  \n "},{"content":" This instance precedes                                      <code>other</code>.  \n  \n ","pos":[130,217],"nodes":[{"content":"This instance precedes                                      <ph id=\"ph1\">&lt;code&gt;other&lt;/code&gt;</ph>.","pos":[1,80],"source":" This instance precedes                                      <code>other</code>."}]},{"content":"Zero","pos":[236,245],"source":" Zero  \n  \n "},{"content":" This instance and                                      <code>other</code> have the same position in the sort order.  \n  \n ","pos":[256,379],"nodes":[{"content":"This instance and                                      <ph id=\"ph1\">&lt;code&gt;other&lt;/code&gt;</ph> have the same position in the sort order.","pos":[1,116],"source":" This instance and                                      <code>other</code> have the same position in the sort order."}]},{"content":"A positive integer","pos":[398,421],"source":" A positive integer  \n  \n "},{"content":" This instance follows                                      <code>other</code>.  \n  \n ","pos":[432,518],"nodes":[{"content":"This instance follows                                      <ph id=\"ph1\">&lt;code&gt;other&lt;/code&gt;</ph>.","pos":[1,79],"source":" This instance follows                                      <code>other</code>."}]}]}],"pos":[5145,5882],"yaml":true},{"content":"Returns a value that indicates whether the current <xref href=\"System.ValueTuple`1\"></xref> instance is equal to a specified object.","nodes":[{"pos":[0,132],"content":"Returns a value that indicates whether the current <ph id=\"ph1\">&lt;xref href=\"System.ValueTuple`1\"&gt;&lt;/xref&gt;</ph> instance is equal to a specified object.","source":"Returns a value that indicates whether the current <xref href=\"System.ValueTuple`1\"></xref> instance is equal to a specified object."}],"pos":[6755,6888],"yaml":true},{"content":"The                          `obj` argument is considered to be equal to the current instance under the following conditions:  \n  \n-   It is a                                  <xref:System.ValueTuple%601> value type.  \n  \n-   It component is of the same types as that of the current instance.  \n  \n-   Its component is equal to that of the current instance. Equality is determined by the default equality comparer for the component.","nodes":[{"pos":[0,125],"content":"The                          <ph id=\"ph1\">`obj`</ph> argument is considered to be equal to the current instance under the following conditions:","source":"The                          `obj` argument is considered to be equal to the current instance under the following conditions:"},{"pos":[135,216],"content":"It is a                                  <xref:System.ValueTuple%601> value type.","nodes":[{"content":"It is a                                  <ph id=\"ph1\">&lt;xref:System.ValueTuple%601&gt;</ph> value type.","pos":[0,81],"source":"It is a                                  <xref:System.ValueTuple%601> value type."}]},{"pos":[226,292],"content":"It component is of the same types as that of the current instance.","nodes":[{"content":"It component is of the same types as that of the current instance.","pos":[0,66]}]},{"pos":[302,432],"content":"Its component is equal to that of the current instance. Equality is determined by the default equality comparer for the component.","nodes":[{"content":"Its component is equal to that of the current instance. Equality is determined by the default equality comparer for the component.","pos":[0,130],"nodes":[{"content":"Its component is equal to that of the current instance.","pos":[0,55]},{"content":"Equality is determined by the default equality comparer for the component.","pos":[56,130]}]}]}],"pos":[6899,7340],"yaml":true,"extradata":"MT"},{"content":"The object to compare with this instance.","nodes":[{"pos":[0,41],"content":"The object to compare with this instance.","nodes":[{"content":"The object to compare with this instance.","pos":[0,41]}]}],"pos":[7480,7522],"yaml":true},{"content":"`true` if the current instance is equal to the specified object; otherwise, `false`.","nodes":[{"pos":[0,84],"content":"<ph id=\"ph1\">`true`</ph> if the current instance is equal to the specified object; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the current instance is equal to the specified object; otherwise, `false`."}],"pos":[7580,7667],"yaml":true},{"content":"Returns a value that indicates whether the current <xref href=\"System.ValueTuple`1\"></xref> instance is equal to a specified <xref href=\"System.ValueTuple`1\"></xref> instance.","nodes":[{"pos":[0,175],"content":"Returns a value that indicates whether the current <ph id=\"ph1\">&lt;xref href=\"System.ValueTuple`1\"&gt;&lt;/xref&gt;</ph> instance is equal to a specified <ph id=\"ph2\">&lt;xref href=\"System.ValueTuple`1\"&gt;&lt;/xref&gt;</ph> instance.","source":"Returns a value that indicates whether the current <xref href=\"System.ValueTuple`1\"></xref> instance is equal to a specified <xref href=\"System.ValueTuple`1\"></xref> instance."}],"pos":[8585,8761],"yaml":true},{"content":"The                          `other` argument is considered to be equal to the current instance under the following conditions:  \n  \n-   Its components are of the same types as those of the current instance.  \n  \n-   Its components are equal to those of the current instance. Equality is determined by the default equality comparer for each component.","nodes":[{"pos":[0,127],"content":"The                          <ph id=\"ph1\">`other`</ph> argument is considered to be equal to the current instance under the following conditions:","source":"The                          `other` argument is considered to be equal to the current instance under the following conditions:"},{"pos":[137,207],"content":"Its components are of the same types as those of the current instance.","nodes":[{"content":"Its components are of the same types as those of the current instance.","pos":[0,70]}]},{"pos":[217,351],"content":"Its components are equal to those of the current instance. Equality is determined by the default equality comparer for each component.","nodes":[{"content":"Its components are equal to those of the current instance. Equality is determined by the default equality comparer for each component.","pos":[0,134],"nodes":[{"content":"Its components are equal to those of the current instance.","pos":[0,58]},{"content":"Equality is determined by the default equality comparer for each component.","pos":[59,134]}]}]}],"pos":[8772,9130],"yaml":true,"extradata":"MT"},{"content":"The value tuple to compare with this instance.","nodes":[{"pos":[0,46],"content":"The value tuple to compare with this instance.","nodes":[{"content":"The value tuple to compare with this instance.","pos":[0,46]}]}],"pos":[9279,9326],"yaml":true},{"content":"`true` if the current instance is equal to the specified tuple; otherwise, `false`.","nodes":[{"pos":[0,83],"content":"<ph id=\"ph1\">`true`</ph> if the current instance is equal to the specified tuple; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the current instance is equal to the specified tuple; otherwise, `false`."}],"pos":[9384,9470],"yaml":true},{"content":"Calculates the hash code for the current <xref href=\"System.ValueTuple`1\"></xref> instance.","nodes":[{"pos":[0,91],"content":"Calculates the hash code for the current <ph id=\"ph1\">&lt;xref href=\"System.ValueTuple`1\"&gt;&lt;/xref&gt;</ph> instance.","source":"Calculates the hash code for the current <xref href=\"System.ValueTuple`1\"></xref> instance."}],"pos":[10307,10399],"yaml":true},{"content":"The hash code for the current <xref href=\"System.ValueTuple`1\"></xref> instance.","nodes":[{"pos":[0,80],"content":"The hash code for the current <ph id=\"ph1\">&lt;xref href=\"System.ValueTuple`1\"&gt;&lt;/xref&gt;</ph> instance.","source":"The hash code for the current <xref href=\"System.ValueTuple`1\"></xref> instance."}],"pos":[10533,10614],"yaml":true},{"content":"Gets the value of the current <xref href=\"System.ValueTuple`1\"></xref> instance's first element.","nodes":[{"pos":[0,96],"content":"Gets the value of the current <ph id=\"ph1\">&lt;xref href=\"System.ValueTuple`1\"&gt;&lt;/xref&gt;</ph> instance's first element.","source":"Gets the value of the current <xref href=\"System.ValueTuple`1\"></xref> instance's first element."}],"pos":[11413,11510],"yaml":true},{"content":"Returns a string that represents the value of this <xref href=\"System.ValueTuple`1\"></xref> instance.","nodes":[{"pos":[0,101],"content":"Returns a string that represents the value of this <ph id=\"ph1\">&lt;xref href=\"System.ValueTuple`1\"&gt;&lt;/xref&gt;</ph> instance.","source":"Returns a string that represents the value of this <xref href=\"System.ValueTuple`1\"></xref> instance."}],"pos":[12378,12480],"yaml":true},{"content":"The string returned by this method takes the form (*Item1*, where *Item1* represents the value of the <xref:System.ValueTuple%604.Item1> field. If the field value is `null`, it is represented as <xref:System.String.Empty?displayProperty=fullName>.","nodes":[{"pos":[0,247],"content":"The string returned by this method takes the form (*Item1*, where *Item1* represents the value of the <xref:System.ValueTuple%604.Item1> field. If the field value is `null`, it is represented as <xref:System.String.Empty?displayProperty=fullName>.","nodes":[{"content":"The string returned by this method takes the form (<bpt id=\"p1\">*</bpt>Item1<ept id=\"p1\">*</ept>, where <bpt id=\"p2\">*</bpt>Item1<ept id=\"p2\">*</ept> represents the value of the <ph id=\"ph1\">&lt;xref:System.ValueTuple%604.Item1&gt;</ph> field.","pos":[0,143],"source":"The string returned by this method takes the form (*Item1*, where *Item1* represents the value of the <xref:System.ValueTuple%604.Item1> field."},{"content":"If the field value is <ph id=\"ph1\">`null`</ph>, it is represented as <ph id=\"ph2\">&lt;xref:System.String.Empty?displayProperty=fullName&gt;</ph>.","pos":[144,247],"source":" If the field value is `null`, it is represented as <xref:System.String.Empty?displayProperty=fullName>."}]}],"pos":[12491,12739],"yaml":true,"extradata":"MT"},{"content":"The string representation of this <xref href=\"System.ValueTuple`1\"></xref> instance.","nodes":[{"pos":[0,84],"content":"The string representation of this <ph id=\"ph1\">&lt;xref href=\"System.ValueTuple`1\"&gt;&lt;/xref&gt;</ph> instance.","source":"The string representation of this <xref href=\"System.ValueTuple`1\"></xref> instance."}],"pos":[12874,12959],"yaml":true},{"content":"Compares the current <xref href=\"System.ValueTuple`1\"></xref> instance to a specified object by using a specified comparer and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.","nodes":[{"pos":[0,272],"content":"Compares the current <ph id=\"ph1\">&lt;xref href=\"System.ValueTuple`1\"&gt;&lt;/xref&gt;</ph> instance to a specified object by using a specified comparer and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.","source":"Compares the current <xref href=\"System.ValueTuple`1\"></xref> instance to a specified object by using a specified comparer and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order."}],"pos":[14172,14445],"yaml":true},{"content":"The object to compare with the current instance.","nodes":[{"pos":[0,48],"content":"The object to compare with the current instance.","nodes":[{"content":"The object to compare with the current instance.","pos":[0,48]}]}],"pos":[14636,14685],"yaml":true},{"content":"An object that provides custom rules for comparison.","nodes":[{"pos":[0,52],"content":"An object that provides custom rules for comparison.","nodes":[{"content":"An object that provides custom rules for comparison.","pos":[0,52]}]}],"pos":[14764,14817],"yaml":true},{"content":"A signed integer that indicates the relative position of this instance and <code>other</code> in the sort order, as shown in the following able.  \n  \n <table><thead><tr><th> Vaue  \n  \n </th><th> Description  \n  \n </th></tr></thead><tbody><tr><td> A negative integer  \n  \n </td><td> This instance precedes <code>other</code>.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td> This instance and <code>other</code> have the same position in the sort order.  \n  \n </td></tr><tr><td> A positive integer  \n  \n </td><td> This instance follows <code>other</code>.  \n  \n </td></tr></tbody></table>","nodes":[{"pos":[0,144],"content":"A signed integer that indicates the relative position of this instance and <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">other</ph><ept id=\"p1\">&lt;/code&gt;</ept> in the sort order, as shown in the following able.","source":"A signed integer that indicates the relative position of this instance and <code>other</code> in the sort order, as shown in the following able."},{"pos":[151,585],"content":"<table><thead><tr><th> Vaue  \n  \n </th><th> Description  \n  \n </th></tr></thead><tbody><tr><td> A negative integer  \n  \n </td><td> This instance precedes <code>other</code>.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td> This instance and <code>other</code> have the same position in the sort order.  \n  \n </td></tr><tr><td> A positive integer  \n  \n </td><td> This instance follows <code>other</code>.  \n  \n </td></tr></tbody></table>","nodes":[{"content":"Vaue","pos":[23,32],"source":" Vaue  \n  \n "},{"content":"Description","pos":[44,60],"source":" Description  \n  \n "},{"content":"A negative integer","pos":[96,119],"source":" A negative integer  \n  \n "},{"content":" This instance precedes <code>other</code>.  \n  \n ","pos":[130,180],"nodes":[{"content":"This instance precedes <ph id=\"ph1\">&lt;code&gt;other&lt;/code&gt;</ph>.","pos":[1,43],"source":" This instance precedes <code>other</code>."}]},{"content":"Zero","pos":[199,208],"source":" Zero  \n  \n "},{"content":" This instance and <code>other</code> have the same position in the sort order.  \n  \n ","pos":[219,305],"nodes":[{"content":"This instance and <ph id=\"ph1\">&lt;code&gt;other&lt;/code&gt;</ph> have the same position in the sort order.","pos":[1,79],"source":" This instance and <code>other</code> have the same position in the sort order."}]},{"content":"A positive integer","pos":[324,347],"source":" A positive integer  \n  \n "},{"content":" This instance follows <code>other</code>.  \n  \n ","pos":[358,407],"nodes":[{"content":"This instance follows <ph id=\"ph1\">&lt;code&gt;other&lt;/code&gt;</ph>.","pos":[1,42],"source":" This instance follows <code>other</code>."}]}]}],"pos":[14873,15478],"yaml":true},{"content":"Returns a value that indicates whether the current <xref href=\"System.ValueTuple`1\"></xref> instance is equal to a specified object based on a specified comparison method.","nodes":[{"pos":[0,171],"content":"Returns a value that indicates whether the current <ph id=\"ph1\">&lt;xref href=\"System.ValueTuple`1\"&gt;&lt;/xref&gt;</ph> instance is equal to a specified object based on a specified comparison method.","source":"Returns a value that indicates whether the current <xref href=\"System.ValueTuple`1\"></xref> instance is equal to a specified object based on a specified comparison method."}],"pos":[16757,16929],"yaml":true},{"content":"The object to compare with this instance.","nodes":[{"pos":[0,41],"content":"The object to compare with this instance.","nodes":[{"content":"The object to compare with this instance.","pos":[0,41]}]}],"pos":[17125,17167],"yaml":true},{"content":"An object that defines the method to use to evaluate whether the two objects are equal.","nodes":[{"pos":[0,87],"content":"An object that defines the method to use to evaluate whether the two objects are equal.","nodes":[{"content":"An object that defines the method to use to evaluate whether the two objects are equal.","pos":[0,87]}]}],"pos":[17254,17342],"yaml":true},{"content":"`true` if the current instance is equal to the specified object; otherwise, `false`.","nodes":[{"pos":[0,84],"content":"<ph id=\"ph1\">`true`</ph> if the current instance is equal to the specified object; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the current instance is equal to the specified object; otherwise, `false`."}],"pos":[17400,17487],"yaml":true},{"content":"Calculates the hash code for the current <xref href=\"System.ValueTuple`1\"></xref> instance by using a specified computation method.","nodes":[{"pos":[0,131],"content":"Calculates the hash code for the current <ph id=\"ph1\">&lt;xref href=\"System.ValueTuple`1\"&gt;&lt;/xref&gt;</ph> instance by using a specified computation method.","source":"Calculates the hash code for the current <xref href=\"System.ValueTuple`1\"></xref> instance by using a specified computation method."}],"pos":[18726,18858],"yaml":true},{"content":"An object whose <xref href=\"System.Collections.IEqualityComparer.GetHashCode(System.Object)\"></xref> method calculates the hash code of the current <xref href=\"System.ValueTuple`1\"></xref> instance.","nodes":[{"pos":[0,198],"content":"An object whose <ph id=\"ph1\">&lt;xref href=\"System.Collections.IEqualityComparer.GetHashCode(System.Object)\"&gt;&lt;/xref&gt;</ph> method calculates the hash code of the current <ph id=\"ph2\">&lt;xref href=\"System.ValueTuple`1\"&gt;&lt;/xref&gt;</ph> instance.","source":"An object whose <xref href=\"System.Collections.IEqualityComparer.GetHashCode(System.Object)\"></xref> method calculates the hash code of the current <xref href=\"System.ValueTuple`1\"></xref> instance."}],"pos":[19070,19269],"yaml":true},{"content":"A 32-bit signed integer hash code.","nodes":[{"pos":[0,34],"content":"A 32-bit signed integer hash code.","nodes":[{"content":"A 32-bit signed integer hash code.","pos":[0,34]}]}],"pos":[19325,19360],"yaml":true},{"content":"Compares the current <xref href=\"System.ValueTuple`1\"></xref> instance to a specified object by using a specified comparer and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.","nodes":[{"pos":[0,272],"content":"Compares the current <ph id=\"ph1\">&lt;xref href=\"System.ValueTuple`1\"&gt;&lt;/xref&gt;</ph> instance to a specified object by using a specified comparer and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.","source":"Compares the current <xref href=\"System.ValueTuple`1\"></xref> instance to a specified object by using a specified comparer and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order."}],"pos":[20400,20673],"yaml":true},{"content":"The object to compare with the current instance.","nodes":[{"pos":[0,48],"content":"The object to compare with the current instance.","nodes":[{"content":"The object to compare with the current instance.","pos":[0,48]}]}],"pos":[20815,20864],"yaml":true},{"content":"A signed integer that indicates the relative position of this instance and <code>obj</code> in the sort order, as shown in the following table.  \n  \n <table><thead><tr><th> Value  \n  \n </th><th> Description  \n  \n </th></tr></thead><tbody><tr><td> A negative integer  \n  \n </td><td> This instance precedes <code>other</code>.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td> This instance and <code>other</code> have the same position in the sort order.  \n  \n </td></tr><tr><td> A positive integer  \n  \n </td><td> This instance follows <code>other</code>.  \n  \n </td></tr></tbody></table>","nodes":[{"pos":[0,143],"content":"A signed integer that indicates the relative position of this instance and <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> in the sort order, as shown in the following table.","source":"A signed integer that indicates the relative position of this instance and <code>obj</code> in the sort order, as shown in the following table."},{"pos":[150,585],"content":"<table><thead><tr><th> Value  \n  \n </th><th> Description  \n  \n </th></tr></thead><tbody><tr><td> A negative integer  \n  \n </td><td> This instance precedes <code>other</code>.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td> This instance and <code>other</code> have the same position in the sort order.  \n  \n </td></tr><tr><td> A positive integer  \n  \n </td><td> This instance follows <code>other</code>.  \n  \n </td></tr></tbody></table>","nodes":[{"content":"Value","pos":[23,33],"source":" Value  \n  \n "},{"content":"Description","pos":[45,61],"source":" Description  \n  \n "},{"content":"A negative integer","pos":[97,120],"source":" A negative integer  \n  \n "},{"content":" This instance precedes <code>other</code>.  \n  \n ","pos":[131,181],"nodes":[{"content":"This instance precedes <ph id=\"ph1\">&lt;code&gt;other&lt;/code&gt;</ph>.","pos":[1,43],"source":" This instance precedes <code>other</code>."}]},{"content":"Zero","pos":[200,209],"source":" Zero  \n  \n "},{"content":" This instance and <code>other</code> have the same position in the sort order.  \n  \n ","pos":[220,306],"nodes":[{"content":"This instance and <ph id=\"ph1\">&lt;code&gt;other&lt;/code&gt;</ph> have the same position in the sort order.","pos":[1,79],"source":" This instance and <code>other</code> have the same position in the sort order."}]},{"content":"A positive integer","pos":[325,348],"source":" A positive integer  \n  \n "},{"content":" This instance follows <code>other</code>.  \n  \n ","pos":[359,408],"nodes":[{"content":"This instance follows <ph id=\"ph1\">&lt;code&gt;other&lt;/code&gt;</ph>.","pos":[1,42],"source":" This instance follows <code>other</code>."}]}]}],"pos":[20920,21525],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ValueTuple`1\n  commentId: T:System.ValueTuple`1\n  id: ValueTuple`1\n  children:\n  - System.ValueTuple`1.#ctor(`0)\n  - System.ValueTuple`1.CompareTo(System.ValueTuple{`0})\n  - System.ValueTuple`1.Equals(System.Object)\n  - System.ValueTuple`1.Equals(System.ValueTuple{`0})\n  - System.ValueTuple`1.GetHashCode\n  - System.ValueTuple`1.Item1\n  - System.ValueTuple`1.ToString\n  - System.ValueTuple`1.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\n  - System.ValueTuple`1.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\n  - System.ValueTuple`1.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)\n  - System.ValueTuple`1.System#IComparable#CompareTo(System.Object)\n  - System.ValueTuple`1.System#Runtime#CompilerServices#ITuple#Item(System.Int32)\n  - System.ValueTuple`1.System#Runtime#CompilerServices#ITuple#Length\n  langs:\n  - csharp\n  name: ValueTuple<T1>\n  nameWithType: ValueTuple<T1>\n  fullName: System.ValueTuple<T1>\n  type: Struct\n  assemblies:\n  - System.ValueTuple\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Represents a value tuple with a single component.\n  remarks: \"A value tuple is a data structure that has a specific number and sequence of values. The <xref:System.ValueTuple%601> structure represents a value tuple that has one element.  \\n  \\n The value tuple types differ from the tuple types (such as <xref:System.Tuple%601> as follows:  \\n  \\n-   They are structures (value types) rather than classes (reference types).  \\n  \\n-   Its  <xref:System.ValueTuple%601.Item1> member is a field rather than a property.  \\n  \\n-   Its field is mutable rather than read-only.  \\n  \\n The value tuple types provide the runtime implementation that supports [tuples in C#](~/docs/csharp/tuples.md) and struct tuples in F#.  In addition to creating a <xref:System.ValueTuple%601> instance by using language syntax, you can call the <xref:System.ValueTuple.Create%60%601%28%60%600%29?displayProperty=fullName> factory method.\"\n  syntax:\n    content: 'public struct ValueTuple<T1> : IComparable, IComparable<ValueTuple<T1>>, IEquatable<ValueTuple<T1>>, System.Collections.IStructuralComparable, System.Collections.IStructuralEquatable'\n    typeParameters:\n    - id: T1\n      description: The type of the value tuple's only element.\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements:\n  - System.Collections.IStructuralComparable\n  - System.Collections.IStructuralEquatable\n  - System.IComparable\n  - System.IComparable{System.ValueTuple{T1}}\n  - System.IEquatable{System.ValueTuple{T1}}\n  extensionMethods:\n  - System.TupleExtensions.ToTuple``1(System.ValueTuple{``0})\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ValueTuple`1.#ctor(`0)\n  commentId: M:System.ValueTuple`1.#ctor(`0)\n  id: '#ctor(`0)'\n  parent: System.ValueTuple`1\n  langs:\n  - csharp\n  name: ValueTuple<T1>(T1)\n  nameWithType: ValueTuple<T1>.ValueTuple<T1>(T1)\n  fullName: ValueTuple<T1>.ValueTuple<T1>(T1)\n  type: Constructor\n  assemblies:\n  - System.ValueTuple\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Initializes a new <xref href=\"System.ValueTuple`1\"></xref> instance.\n  syntax:\n    content: public ValueTuple (T1 item1);\n    parameters:\n    - id: item1\n      type: T1\n      description: The value tuple's first element.\n  overload: System.ValueTuple`1.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ValueTuple`1.CompareTo(System.ValueTuple{`0})\n  commentId: M:System.ValueTuple`1.CompareTo(System.ValueTuple{`0})\n  id: CompareTo(System.ValueTuple{`0})\n  parent: System.ValueTuple`1\n  langs:\n  - csharp\n  name: CompareTo(ValueTuple<T1>)\n  nameWithType: ValueTuple<T1>.CompareTo(ValueTuple<T1>)\n  fullName: ValueTuple<T1>.CompareTo(ValueTuple<T1>)\n  type: Method\n  assemblies:\n  - System.ValueTuple\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Compares the current <xref href=\"System.ValueTuple`1\"></xref> instance to a specified <xref href=\"System.ValueTuple`1\"></xref> instance.\n  syntax:\n    content: public int CompareTo (ValueTuple<T1> other);\n    parameters:\n    - id: other\n      type: System.ValueTuple`1\n      description: The tuple to compare with this instance.\n    return:\n      type: System.Int32\n      description: \"A signed integer that indicates the relative position of this instance and                      <code>other</code> in the sort order, as shown in the following able.  \\n  \\n <table><thead><tr><th> Vaue  \\n  \\n </th><th> Description  \\n  \\n </th></tr></thead><tbody><tr><td> A negative integer  \\n  \\n </td><td> This instance precedes                                      <code>other</code>.  \\n  \\n </td></tr><tr><td> Zero  \\n  \\n </td><td> This instance and                                      <code>other</code> have the same position in the sort order.  \\n  \\n </td></tr><tr><td> A positive integer  \\n  \\n </td><td> This instance follows                                      <code>other</code>.  \\n  \\n </td></tr></tbody></table>\"\n  overload: System.ValueTuple`1.CompareTo*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ValueTuple`1.Equals(System.Object)\n  commentId: M:System.ValueTuple`1.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.ValueTuple`1\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: ValueTuple<T1>.Equals(Object)\n  fullName: ValueTuple<T1>.Equals(Object)\n  type: Method\n  assemblies:\n  - System.ValueTuple\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Returns a value that indicates whether the current <xref href=\"System.ValueTuple`1\"></xref> instance is equal to a specified object.\n  remarks: \"The                          `obj` argument is considered to be equal to the current instance under the following conditions:  \\n  \\n-   It is a                                  <xref:System.ValueTuple%601> value type.  \\n  \\n-   It component is of the same types as that of the current instance.  \\n  \\n-   Its component is equal to that of the current instance. Equality is determined by the default equality comparer for the component.\"\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object to compare with this instance.\n    return:\n      type: System.Boolean\n      description: '`true` if the current instance is equal to the specified object; otherwise, `false`.'\n  overload: System.ValueTuple`1.Equals*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ValueTuple`1.Equals(System.ValueTuple{`0})\n  commentId: M:System.ValueTuple`1.Equals(System.ValueTuple{`0})\n  id: Equals(System.ValueTuple{`0})\n  parent: System.ValueTuple`1\n  langs:\n  - csharp\n  name: Equals(ValueTuple<T1>)\n  nameWithType: ValueTuple<T1>.Equals(ValueTuple<T1>)\n  fullName: ValueTuple<T1>.Equals(ValueTuple<T1>)\n  type: Method\n  assemblies:\n  - System.ValueTuple\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Returns a value that indicates whether the current <xref href=\"System.ValueTuple`1\"></xref> instance is equal to a specified <xref href=\"System.ValueTuple`1\"></xref> instance.\n  remarks: \"The                          `other` argument is considered to be equal to the current instance under the following conditions:  \\n  \\n-   Its components are of the same types as those of the current instance.  \\n  \\n-   Its components are equal to those of the current instance. Equality is determined by the default equality comparer for each component.\"\n  syntax:\n    content: public bool Equals (ValueTuple<T1> other);\n    parameters:\n    - id: other\n      type: System.ValueTuple`1\n      description: The value tuple to compare with this instance.\n    return:\n      type: System.Boolean\n      description: '`true` if the current instance is equal to the specified tuple; otherwise, `false`.'\n  overload: System.ValueTuple`1.Equals*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ValueTuple`1.GetHashCode\n  commentId: M:System.ValueTuple`1.GetHashCode\n  id: GetHashCode\n  parent: System.ValueTuple`1\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: ValueTuple<T1>.GetHashCode()\n  fullName: ValueTuple<T1>.GetHashCode()\n  type: Method\n  assemblies:\n  - System.ValueTuple\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Calculates the hash code for the current <xref href=\"System.ValueTuple`1\"></xref> instance.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The hash code for the current <xref href=\"System.ValueTuple`1\"></xref> instance.\n  overload: System.ValueTuple`1.GetHashCode*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ValueTuple`1.Item1\n  commentId: F:System.ValueTuple`1.Item1\n  id: Item1\n  parent: System.ValueTuple`1\n  langs:\n  - csharp\n  name: Item1\n  nameWithType: ValueTuple<T1>.Item1\n  fullName: ValueTuple<T1>.Item1\n  type: Field\n  assemblies:\n  - System.ValueTuple\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Gets the value of the current <xref href=\"System.ValueTuple`1\"></xref> instance's first element.\n  syntax:\n    content: public T1 Item1;\n    return:\n      type: T1\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ValueTuple`1.ToString\n  commentId: M:System.ValueTuple`1.ToString\n  id: ToString\n  parent: System.ValueTuple`1\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: ValueTuple<T1>.ToString()\n  fullName: ValueTuple<T1>.ToString()\n  type: Method\n  assemblies:\n  - System.ValueTuple\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Returns a string that represents the value of this <xref href=\"System.ValueTuple`1\"></xref> instance.\n  remarks: The string returned by this method takes the form (*Item1*, where *Item1* represents the value of the <xref:System.ValueTuple%604.Item1> field. If the field value is `null`, it is represented as <xref:System.String.Empty?displayProperty=fullName>.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: The string representation of this <xref href=\"System.ValueTuple`1\"></xref> instance.\n  overload: System.ValueTuple`1.ToString*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ValueTuple`1.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\n  commentId: M:System.ValueTuple`1.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\n  id: System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\n  isEii: true\n  parent: System.ValueTuple`1\n  langs:\n  - csharp\n  name: IStructuralComparable.CompareTo(Object, IComparer)\n  nameWithType: ValueTuple<T1>.IStructuralComparable.CompareTo(Object, IComparer)\n  fullName: ValueTuple<T1>.IStructuralComparable.CompareTo(Object, IComparer)\n  type: Method\n  assemblies:\n  - System.ValueTuple\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Compares the current <xref href=\"System.ValueTuple`1\"></xref> instance to a specified object by using a specified comparer and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.\n  syntax:\n    content: int IStructuralComparable.CompareTo (object other, System.Collections.IComparer comparer);\n    parameters:\n    - id: other\n      type: System.Object\n      description: The object to compare with the current instance.\n    - id: comparer\n      type: System.Collections.IComparer\n      description: An object that provides custom rules for comparison.\n    return:\n      type: System.Int32\n      description: \"A signed integer that indicates the relative position of this instance and <code>other</code> in the sort order, as shown in the following able.  \\n  \\n <table><thead><tr><th> Vaue  \\n  \\n </th><th> Description  \\n  \\n </th></tr></thead><tbody><tr><td> A negative integer  \\n  \\n </td><td> This instance precedes <code>other</code>.  \\n  \\n </td></tr><tr><td> Zero  \\n  \\n </td><td> This instance and <code>other</code> have the same position in the sort order.  \\n  \\n </td></tr><tr><td> A positive integer  \\n  \\n </td><td> This instance follows <code>other</code>.  \\n  \\n </td></tr></tbody></table>\"\n  overload: System.ValueTuple`1.System#Collections#IStructuralComparable#CompareTo*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ValueTuple`1.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\n  commentId: M:System.ValueTuple`1.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\n  id: System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\n  isEii: true\n  parent: System.ValueTuple`1\n  langs:\n  - csharp\n  name: IStructuralEquatable.Equals(Object, IEqualityComparer)\n  nameWithType: ValueTuple<T1>.IStructuralEquatable.Equals(Object, IEqualityComparer)\n  fullName: ValueTuple<T1>.IStructuralEquatable.Equals(Object, IEqualityComparer)\n  type: Method\n  assemblies:\n  - System.ValueTuple\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Returns a value that indicates whether the current <xref href=\"System.ValueTuple`1\"></xref> instance is equal to a specified object based on a specified comparison method.\n  syntax:\n    content: bool IStructuralEquatable.Equals (object other, System.Collections.IEqualityComparer comparer);\n    parameters:\n    - id: other\n      type: System.Object\n      description: The object to compare with this instance.\n    - id: comparer\n      type: System.Collections.IEqualityComparer\n      description: An object that defines the method to use to evaluate whether the two objects are equal.\n    return:\n      type: System.Boolean\n      description: '`true` if the current instance is equal to the specified object; otherwise, `false`.'\n  overload: System.ValueTuple`1.System#Collections#IStructuralEquatable#Equals*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ValueTuple`1.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)\n  commentId: M:System.ValueTuple`1.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)\n  id: System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)\n  isEii: true\n  parent: System.ValueTuple`1\n  langs:\n  - csharp\n  name: IStructuralEquatable.GetHashCode(IEqualityComparer)\n  nameWithType: ValueTuple<T1>.IStructuralEquatable.GetHashCode(IEqualityComparer)\n  fullName: ValueTuple<T1>.IStructuralEquatable.GetHashCode(IEqualityComparer)\n  type: Method\n  assemblies:\n  - System.ValueTuple\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Calculates the hash code for the current <xref href=\"System.ValueTuple`1\"></xref> instance by using a specified computation method.\n  syntax:\n    content: int IStructuralEquatable.GetHashCode (System.Collections.IEqualityComparer comparer);\n    parameters:\n    - id: comparer\n      type: System.Collections.IEqualityComparer\n      description: An object whose <xref href=\"System.Collections.IEqualityComparer.GetHashCode(System.Object)\"></xref> method calculates the hash code of the current <xref href=\"System.ValueTuple`1\"></xref> instance.\n    return:\n      type: System.Int32\n      description: A 32-bit signed integer hash code.\n  overload: System.ValueTuple`1.System#Collections#IStructuralEquatable#GetHashCode*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ValueTuple`1.System#IComparable#CompareTo(System.Object)\n  commentId: M:System.ValueTuple`1.System#IComparable#CompareTo(System.Object)\n  id: System#IComparable#CompareTo(System.Object)\n  isEii: true\n  parent: System.ValueTuple`1\n  langs:\n  - csharp\n  name: IComparable.CompareTo(Object)\n  nameWithType: ValueTuple<T1>.IComparable.CompareTo(Object)\n  fullName: ValueTuple<T1>.IComparable.CompareTo(Object)\n  type: Method\n  assemblies:\n  - System.ValueTuple\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Compares the current <xref href=\"System.ValueTuple`1\"></xref> instance to a specified object by using a specified comparer and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.\n  syntax:\n    content: int IComparable.CompareTo (object other);\n    parameters:\n    - id: other\n      type: System.Object\n      description: The object to compare with the current instance.\n    return:\n      type: System.Int32\n      description: \"A signed integer that indicates the relative position of this instance and <code>obj</code> in the sort order, as shown in the following table.  \\n  \\n <table><thead><tr><th> Value  \\n  \\n </th><th> Description  \\n  \\n </th></tr></thead><tbody><tr><td> A negative integer  \\n  \\n </td><td> This instance precedes <code>other</code>.  \\n  \\n </td></tr><tr><td> Zero  \\n  \\n </td><td> This instance and <code>other</code> have the same position in the sort order.  \\n  \\n </td></tr><tr><td> A positive integer  \\n  \\n </td><td> This instance follows <code>other</code>.  \\n  \\n </td></tr></tbody></table>\"\n  overload: System.ValueTuple`1.System#IComparable#CompareTo*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ValueTuple`1.System#Runtime#CompilerServices#ITuple#Item(System.Int32)\n  commentId: P:System.ValueTuple`1.System#Runtime#CompilerServices#ITuple#Item(System.Int32)\n  id: System#Runtime#CompilerServices#ITuple#Item(System.Int32)\n  isEii: true\n  parent: System.ValueTuple`1\n  langs:\n  - csharp\n  name: ITuple.Item(Int32)\n  nameWithType: ValueTuple<T1>.ITuple.Item(Int32)\n  fullName: ValueTuple<T1>.ITuple.Item(Int32)\n  type: Property\n  assemblies:\n  - System.Runtime\n  namespace: System\n  syntax:\n    content: object System.Runtime.CompilerServices.ITuple.Item[int index] { get; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: ''\n    return:\n      type: System.Object\n      description: ''\n  overload: System.ValueTuple`1.System#Runtime#CompilerServices#ITuple#Item*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple`1.xml\n- uid: System.ValueTuple`1.System#Runtime#CompilerServices#ITuple#Length\n  commentId: P:System.ValueTuple`1.System#Runtime#CompilerServices#ITuple#Length\n  id: System#Runtime#CompilerServices#ITuple#Length\n  isEii: true\n  parent: System.ValueTuple`1\n  langs:\n  - csharp\n  name: ITuple.Length\n  nameWithType: ValueTuple<T1>.ITuple.Length\n  fullName: ValueTuple<T1>.ITuple.Length\n  type: Property\n  assemblies:\n  - System.Runtime\n  namespace: System\n  syntax:\n    content: int System.Runtime.CompilerServices.ITuple.Length { get; }\n    return:\n      type: System.Int32\n      description: ''\n  overload: System.ValueTuple`1.System#Runtime#CompilerServices#ITuple#Length*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple`1.xml\nreferences:\n- uid: System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  nameWithType: ValueType\n  fullName: System.ValueType\n- uid: System.ValueTuple`1.#ctor(`0)\n  parent: System.ValueTuple`1\n  isExternal: false\n  name: ValueTuple<T1>(T1)\n  nameWithType: ValueTuple<T1>.ValueTuple<T1>(T1)\n  fullName: ValueTuple<T1>.ValueTuple<T1>(T1)\n- uid: T1\n  isExternal: true\n  name: T1\n  nameWithType: T1\n  fullName: T1\n- uid: System.ValueTuple`1.CompareTo(System.ValueTuple{`0})\n  parent: System.ValueTuple`1\n  isExternal: false\n  name: CompareTo(ValueTuple<T1>)\n  nameWithType: ValueTuple<T1>.CompareTo(ValueTuple<T1>)\n  fullName: ValueTuple<T1>.CompareTo(ValueTuple<T1>)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ValueTuple`1\n  parent: System\n  isExternal: false\n  name: ValueTuple<T1>\n  nameWithType: ValueTuple<T1>\n  fullName: System.ValueTuple<T1>\n- uid: System.ValueTuple`1.Equals(System.Object)\n  parent: System.ValueTuple`1\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: ValueTuple<T1>.Equals(Object)\n  fullName: ValueTuple<T1>.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ValueTuple`1.Equals(System.ValueTuple{`0})\n  parent: System.ValueTuple`1\n  isExternal: false\n  name: Equals(ValueTuple<T1>)\n  nameWithType: ValueTuple<T1>.Equals(ValueTuple<T1>)\n  fullName: ValueTuple<T1>.Equals(ValueTuple<T1>)\n- uid: System.ValueTuple`1.GetHashCode\n  parent: System.ValueTuple`1\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: ValueTuple<T1>.GetHashCode()\n  fullName: ValueTuple<T1>.GetHashCode()\n- uid: System.ValueTuple`1.Item1\n  parent: System.ValueTuple`1\n  isExternal: false\n  name: Item1\n  nameWithType: ValueTuple<T1>.Item1\n  fullName: ValueTuple<T1>.Item1\n- uid: System.ValueTuple`1.ToString\n  parent: System.ValueTuple`1\n  isExternal: false\n  name: ToString()\n  nameWithType: ValueTuple<T1>.ToString()\n  fullName: ValueTuple<T1>.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ValueTuple`1.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\n  parent: System.ValueTuple`1\n  isExternal: false\n  name: IStructuralComparable.CompareTo(Object, IComparer)\n  nameWithType: ValueTuple<T1>.IStructuralComparable.CompareTo(Object, IComparer)\n  fullName: ValueTuple<T1>.IStructuralComparable.CompareTo(Object, IComparer)\n- uid: System.Collections.IComparer\n  parent: System.Collections\n  isExternal: false\n  name: IComparer\n  nameWithType: IComparer\n  fullName: System.Collections.IComparer\n- uid: System.ValueTuple`1.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\n  parent: System.ValueTuple`1\n  isExternal: false\n  name: IStructuralEquatable.Equals(Object, IEqualityComparer)\n  nameWithType: ValueTuple<T1>.IStructuralEquatable.Equals(Object, IEqualityComparer)\n  fullName: ValueTuple<T1>.IStructuralEquatable.Equals(Object, IEqualityComparer)\n- uid: System.Collections.IEqualityComparer\n  parent: System.Collections\n  isExternal: false\n  name: IEqualityComparer\n  nameWithType: IEqualityComparer\n  fullName: System.Collections.IEqualityComparer\n- uid: System.ValueTuple`1.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)\n  parent: System.ValueTuple`1\n  isExternal: false\n  name: IStructuralEquatable.GetHashCode(IEqualityComparer)\n  nameWithType: ValueTuple<T1>.IStructuralEquatable.GetHashCode(IEqualityComparer)\n  fullName: ValueTuple<T1>.IStructuralEquatable.GetHashCode(IEqualityComparer)\n- uid: System.ValueTuple`1.System#IComparable#CompareTo(System.Object)\n  parent: System.ValueTuple`1\n  isExternal: false\n  name: IComparable.CompareTo(Object)\n  nameWithType: ValueTuple<T1>.IComparable.CompareTo(Object)\n  fullName: ValueTuple<T1>.IComparable.CompareTo(Object)\n- uid: System.ValueTuple`1.System#Runtime#CompilerServices#ITuple#Item(System.Int32)\n  parent: System.ValueTuple`1\n  isExternal: false\n  name: ITuple.Item(Int32)\n  nameWithType: ValueTuple<T1>.ITuple.Item(Int32)\n  fullName: ValueTuple<T1>.ITuple.Item(Int32)\n- uid: System.ValueTuple`1.System#Runtime#CompilerServices#ITuple#Length\n  parent: System.ValueTuple`1\n  isExternal: false\n  name: ITuple.Length\n  nameWithType: ValueTuple<T1>.ITuple.Length\n  fullName: ValueTuple<T1>.ITuple.Length\n- uid: System.ValueTuple`1.#ctor*\n  parent: System.ValueTuple`1\n  isExternal: false\n  name: ValueTuple<T1>\n  nameWithType: ValueTuple<T1>.ValueTuple<T1>\n  fullName: ValueTuple<T1>.ValueTuple<T1>\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple`1.xml\n- uid: System.ValueTuple`1.CompareTo*\n  parent: System.ValueTuple`1\n  isExternal: false\n  name: CompareTo\n  nameWithType: ValueTuple<T1>.CompareTo\n  fullName: ValueTuple<T1>.CompareTo\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple`1.xml\n- uid: System.ValueTuple`1.Equals*\n  parent: System.ValueTuple`1\n  isExternal: false\n  name: Equals\n  nameWithType: ValueTuple<T1>.Equals\n  fullName: ValueTuple<T1>.Equals\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple`1.xml\n- uid: System.ValueTuple`1.GetHashCode*\n  parent: System.ValueTuple`1\n  isExternal: false\n  name: GetHashCode\n  nameWithType: ValueTuple<T1>.GetHashCode\n  fullName: ValueTuple<T1>.GetHashCode\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple`1.xml\n- uid: System.ValueTuple`1.ToString*\n  parent: System.ValueTuple`1\n  isExternal: false\n  name: ToString\n  nameWithType: ValueTuple<T1>.ToString\n  fullName: ValueTuple<T1>.ToString\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple`1.xml\n- uid: System.ValueTuple`1.System#Collections#IStructuralComparable#CompareTo*\n  parent: System.ValueTuple`1\n  isExternal: false\n  name: System.Collections.IStructuralComparable.CompareTo\n  nameWithType: ValueTuple<T1>.System.Collections.IStructuralComparable.CompareTo\n  fullName: ValueTuple<T1>.System.Collections.IStructuralComparable.CompareTo\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple`1.xml\n- uid: System.ValueTuple`1.System#Collections#IStructuralEquatable#Equals*\n  parent: System.ValueTuple`1\n  isExternal: false\n  name: System.Collections.IStructuralEquatable.Equals\n  nameWithType: ValueTuple<T1>.System.Collections.IStructuralEquatable.Equals\n  fullName: ValueTuple<T1>.System.Collections.IStructuralEquatable.Equals\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple`1.xml\n- uid: System.ValueTuple`1.System#Collections#IStructuralEquatable#GetHashCode*\n  parent: System.ValueTuple`1\n  isExternal: false\n  name: System.Collections.IStructuralEquatable.GetHashCode\n  nameWithType: ValueTuple<T1>.System.Collections.IStructuralEquatable.GetHashCode\n  fullName: ValueTuple<T1>.System.Collections.IStructuralEquatable.GetHashCode\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple`1.xml\n- uid: System.ValueTuple`1.System#IComparable#CompareTo*\n  parent: System.ValueTuple`1\n  isExternal: false\n  name: System.IComparable.CompareTo\n  nameWithType: ValueTuple<T1>.System.IComparable.CompareTo\n  fullName: ValueTuple<T1>.System.IComparable.CompareTo\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple`1.xml\n- uid: System.ValueTuple`1.System#Runtime#CompilerServices#ITuple#Item*\n  parent: System.ValueTuple`1\n  isExternal: false\n  name: System.Runtime.CompilerServices.ITuple.Item\n  nameWithType: ValueTuple<T1>.System.Runtime.CompilerServices.ITuple.Item\n  fullName: ValueTuple<T1>.System.Runtime.CompilerServices.ITuple.Item\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple`1.xml\n- uid: System.ValueTuple`1.System#Runtime#CompilerServices#ITuple#Length*\n  parent: System.ValueTuple`1\n  isExternal: false\n  name: System.Runtime.CompilerServices.ITuple.Length\n  nameWithType: ValueTuple<T1>.System.Runtime.CompilerServices.ITuple.Length\n  fullName: ValueTuple<T1>.System.Runtime.CompilerServices.ITuple.Length\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ValueTuple`1.xml\n- uid: System.TupleExtensions.ToTuple``1(System.ValueTuple{``0})\n  parent: System.TupleExtensions\n  isExternal: false\n  name: ToTuple<T1>(ValueTuple<T1>)\n  nameWithType: TupleExtensions.ToTuple<T1>(ValueTuple<T1>)\n  fullName: TupleExtensions.ToTuple<T1>(ValueTuple<T1>)\n- uid: System.Collections.IStructuralComparable\n  parent: System.Collections\n  isExternal: false\n  name: IStructuralComparable\n  nameWithType: IStructuralComparable\n  fullName: System.Collections.IStructuralComparable\n- uid: System.Collections.IStructuralEquatable\n  parent: System.Collections\n  isExternal: false\n  name: IStructuralEquatable\n  nameWithType: IStructuralEquatable\n  fullName: System.Collections.IStructuralEquatable\n- uid: System.IComparable\n  parent: System\n  isExternal: false\n  name: IComparable\n  nameWithType: IComparable\n  fullName: System.IComparable\n- uid: System.IComparable`1\n  name: IComparable<T>\n  nameWithType: IComparable<T>\n  fullName: System.IComparable<T>\n- uid: System.IComparable{System.ValueTuple{T1}}\n  parent: System\n  isExternal: false\n  name: IComparable<ValueTuple<T1>>\n  nameWithType: IComparable<ValueTuple<T1>>\n  fullName: System.IComparable<System.ValueTuple<T1>>\n  spec.csharp:\n  - uid: System.IComparable`1\n    name: IComparable\n    nameWithType: IComparable\n    fullName: System.IComparable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ValueTuple`1\n    name: ValueTuple\n    nameWithType: ValueTuple\n    fullName: System.ValueTuple\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: T1\n    name: T1\n    nameWithType: T1\n    fullName: T1\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IEquatable`1\n  name: IEquatable<T>\n  nameWithType: IEquatable<T>\n  fullName: System.IEquatable<T>\n- uid: System.IEquatable{System.ValueTuple{T1}}\n  parent: System\n  isExternal: false\n  name: IEquatable<ValueTuple<T1>>\n  nameWithType: IEquatable<ValueTuple<T1>>\n  fullName: System.IEquatable<System.ValueTuple<T1>>\n  spec.csharp:\n  - uid: System.IEquatable`1\n    name: IEquatable\n    nameWithType: IEquatable\n    fullName: System.IEquatable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ValueTuple`1\n    name: ValueTuple\n    nameWithType: ValueTuple\n    fullName: System.ValueTuple\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: T1\n    name: T1\n    nameWithType: T1\n    fullName: T1\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n"}