{"nodes":[{"content":"Represents the security settings of the wsHttpBinding binding.","nodes":[{"pos":[0,62],"content":"Represents the security settings of the wsHttpBinding binding.","nodes":[{"content":"Represents the security settings of the wsHttpBinding binding.","pos":[0,62]}]}],"pos":[698,761],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.NonDualMessageSecurityOverHttp\"></xref> class.","nodes":[{"pos":[0,112],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.NonDualMessageSecurityOverHttp\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.NonDualMessageSecurityOverHttp\"></xref> class."}],"pos":[2810,2923],"yaml":true},{"content":"Gets or sets a value that indicates whether a security context token is established.","nodes":[{"pos":[0,84],"content":"Gets or sets a value that indicates whether a security context token is established.","nodes":[{"content":"Gets or sets a value that indicates whether a security context token is established.","pos":[0,84]}]}],"pos":[4198,4283],"yaml":true},{"content":"This property controls whether a security context token is established through a WS-SecureConversation exchange between the client and the service. Setting it to `true` requires that the remote party supports WS-SecureConversation.","nodes":[{"pos":[0,231],"content":"This property controls whether a security context token is established through a WS-SecureConversation exchange between the client and the service. Setting it to `true` requires that the remote party supports WS-SecureConversation.","nodes":[{"content":"This property controls whether a security context token is established through a WS-SecureConversation exchange between the client and the service.","pos":[0,147]},{"content":"Setting it to <ph id=\"ph1\">`true`</ph> requires that the remote party supports WS-SecureConversation.","pos":[148,231],"source":" Setting it to `true` requires that the remote party supports WS-SecureConversation."}]}],"pos":[4294,4526],"yaml":true,"extradata":"MT"},{"content":"`true` if a security context token is established; otherwise, `false`.","nodes":[{"pos":[0,70],"content":"<ph id=\"ph1\">`true`</ph> if a security context token is established; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if a security context token is established; otherwise, `false`."}],"pos":[4997,5070],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.NonDualMessageSecurityOverHttp\n  commentId: T:System.ServiceModel.NonDualMessageSecurityOverHttp\n  id: NonDualMessageSecurityOverHttp\n  children:\n  - System.ServiceModel.NonDualMessageSecurityOverHttp.#ctor\n  - System.ServiceModel.NonDualMessageSecurityOverHttp.EstablishSecurityContext\n  - System.ServiceModel.NonDualMessageSecurityOverHttp.IsSecureConversationEnabled\n  langs:\n  - csharp\n  name: NonDualMessageSecurityOverHttp\n  nameWithType: NonDualMessageSecurityOverHttp\n  fullName: System.ServiceModel.NonDualMessageSecurityOverHttp\n  type: Class\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Represents the security settings of the wsHttpBinding binding.\n  syntax:\n    content: 'public sealed class NonDualMessageSecurityOverHttp : System.ServiceModel.MessageSecurityOverHttp'\n  inheritance:\n  - System.Object\n  - System.ServiceModel.MessageSecurityOverHttp\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.ServiceModel.MessageSecurityOverHttp.AlgorithmSuite\n  - System.ServiceModel.MessageSecurityOverHttp.ClientCredentialType\n  - System.ServiceModel.MessageSecurityOverHttp.NegotiateServiceCredential\n  - System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeAlgorithmSuite\n  - System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeClientCredentialType\n  - System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NonDualMessageSecurityOverHttp.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.NonDualMessageSecurityOverHttp.#ctor\n  commentId: M:System.ServiceModel.NonDualMessageSecurityOverHttp.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.NonDualMessageSecurityOverHttp\n  langs:\n  - csharp\n  name: NonDualMessageSecurityOverHttp()\n  nameWithType: NonDualMessageSecurityOverHttp.NonDualMessageSecurityOverHttp()\n  fullName: NonDualMessageSecurityOverHttp.NonDualMessageSecurityOverHttp()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.NonDualMessageSecurityOverHttp\"></xref> class.\n  syntax:\n    content: public NonDualMessageSecurityOverHttp ();\n    parameters: []\n  overload: System.ServiceModel.NonDualMessageSecurityOverHttp.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NonDualMessageSecurityOverHttp.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.NonDualMessageSecurityOverHttp.EstablishSecurityContext\n  commentId: P:System.ServiceModel.NonDualMessageSecurityOverHttp.EstablishSecurityContext\n  id: EstablishSecurityContext\n  parent: System.ServiceModel.NonDualMessageSecurityOverHttp\n  langs:\n  - csharp\n  name: EstablishSecurityContext\n  nameWithType: NonDualMessageSecurityOverHttp.EstablishSecurityContext\n  fullName: NonDualMessageSecurityOverHttp.EstablishSecurityContext\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets or sets a value that indicates whether a security context token is established.\n  remarks: This property controls whether a security context token is established through a WS-SecureConversation exchange between the client and the service. Setting it to `true` requires that the remote party supports WS-SecureConversation.\n  example:\n  - \"The following code shows how to set this property.  \\n  \\n [!code-csharp[S_UEMessageSecurityOverTCP#8](~/samples/snippets/csharp/VS_Snippets_CFX/s_uemessagesecurityovertcp/cs/source.cs#8)]\\n [!code-vb[S_UEMessageSecurityOverTCP#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uemessagesecurityovertcp/vb/source.vb#8)]\"\n  syntax:\n    content: public bool EstablishSecurityContext { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if a security context token is established; otherwise, `false`.'\n  overload: System.ServiceModel.NonDualMessageSecurityOverHttp.EstablishSecurityContext*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NonDualMessageSecurityOverHttp.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.NonDualMessageSecurityOverHttp.IsSecureConversationEnabled\n  commentId: M:System.ServiceModel.NonDualMessageSecurityOverHttp.IsSecureConversationEnabled\n  id: IsSecureConversationEnabled\n  parent: System.ServiceModel.NonDualMessageSecurityOverHttp\n  langs:\n  - csharp\n  name: IsSecureConversationEnabled()\n  nameWithType: NonDualMessageSecurityOverHttp.IsSecureConversationEnabled()\n  fullName: NonDualMessageSecurityOverHttp.IsSecureConversationEnabled()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  syntax:\n    content: protected override bool IsSecureConversationEnabled ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: ''\n  overload: System.ServiceModel.NonDualMessageSecurityOverHttp.IsSecureConversationEnabled*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NonDualMessageSecurityOverHttp.xml\nreferences:\n- uid: System.ServiceModel.MessageSecurityOverHttp\n  parent: System.ServiceModel\n  isExternal: false\n  name: MessageSecurityOverHttp\n  nameWithType: MessageSecurityOverHttp\n  fullName: System.ServiceModel.MessageSecurityOverHttp\n- uid: System.ServiceModel.NonDualMessageSecurityOverHttp.#ctor\n  parent: System.ServiceModel.NonDualMessageSecurityOverHttp\n  isExternal: false\n  name: NonDualMessageSecurityOverHttp()\n  nameWithType: NonDualMessageSecurityOverHttp.NonDualMessageSecurityOverHttp()\n  fullName: NonDualMessageSecurityOverHttp.NonDualMessageSecurityOverHttp()\n- uid: System.ServiceModel.NonDualMessageSecurityOverHttp.EstablishSecurityContext\n  parent: System.ServiceModel.NonDualMessageSecurityOverHttp\n  isExternal: false\n  name: EstablishSecurityContext\n  nameWithType: NonDualMessageSecurityOverHttp.EstablishSecurityContext\n  fullName: NonDualMessageSecurityOverHttp.EstablishSecurityContext\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.NonDualMessageSecurityOverHttp.IsSecureConversationEnabled\n  parent: System.ServiceModel.NonDualMessageSecurityOverHttp\n  isExternal: false\n  name: IsSecureConversationEnabled()\n  nameWithType: NonDualMessageSecurityOverHttp.IsSecureConversationEnabled()\n  fullName: NonDualMessageSecurityOverHttp.IsSecureConversationEnabled()\n- uid: System.ServiceModel.NonDualMessageSecurityOverHttp.#ctor*\n  parent: System.ServiceModel.NonDualMessageSecurityOverHttp\n  isExternal: false\n  name: NonDualMessageSecurityOverHttp\n  nameWithType: NonDualMessageSecurityOverHttp.NonDualMessageSecurityOverHttp\n  fullName: NonDualMessageSecurityOverHttp.NonDualMessageSecurityOverHttp\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NonDualMessageSecurityOverHttp.xml\n- uid: System.ServiceModel.NonDualMessageSecurityOverHttp.EstablishSecurityContext*\n  parent: System.ServiceModel.NonDualMessageSecurityOverHttp\n  isExternal: false\n  name: EstablishSecurityContext\n  nameWithType: NonDualMessageSecurityOverHttp.EstablishSecurityContext\n  fullName: NonDualMessageSecurityOverHttp.EstablishSecurityContext\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NonDualMessageSecurityOverHttp.xml\n- uid: System.ServiceModel.NonDualMessageSecurityOverHttp.IsSecureConversationEnabled*\n  parent: System.ServiceModel.NonDualMessageSecurityOverHttp\n  isExternal: false\n  name: IsSecureConversationEnabled\n  nameWithType: NonDualMessageSecurityOverHttp.IsSecureConversationEnabled\n  fullName: NonDualMessageSecurityOverHttp.IsSecureConversationEnabled\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NonDualMessageSecurityOverHttp.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.ServiceModel.MessageSecurityOverHttp.AlgorithmSuite\n  parent: System.ServiceModel.MessageSecurityOverHttp\n  isExternal: false\n  name: AlgorithmSuite\n  nameWithType: MessageSecurityOverHttp.AlgorithmSuite\n  fullName: MessageSecurityOverHttp.AlgorithmSuite\n- uid: System.ServiceModel.MessageSecurityOverHttp.ClientCredentialType\n  parent: System.ServiceModel.MessageSecurityOverHttp\n  isExternal: false\n  name: ClientCredentialType\n  nameWithType: MessageSecurityOverHttp.ClientCredentialType\n  fullName: MessageSecurityOverHttp.ClientCredentialType\n- uid: System.ServiceModel.MessageSecurityOverHttp.NegotiateServiceCredential\n  parent: System.ServiceModel.MessageSecurityOverHttp\n  isExternal: false\n  name: NegotiateServiceCredential\n  nameWithType: MessageSecurityOverHttp.NegotiateServiceCredential\n  fullName: MessageSecurityOverHttp.NegotiateServiceCredential\n- uid: System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeAlgorithmSuite\n  parent: System.ServiceModel.MessageSecurityOverHttp\n  isExternal: false\n  name: ShouldSerializeAlgorithmSuite()\n  nameWithType: MessageSecurityOverHttp.ShouldSerializeAlgorithmSuite()\n  fullName: MessageSecurityOverHttp.ShouldSerializeAlgorithmSuite()\n- uid: System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeClientCredentialType\n  parent: System.ServiceModel.MessageSecurityOverHttp\n  isExternal: false\n  name: ShouldSerializeClientCredentialType()\n  nameWithType: MessageSecurityOverHttp.ShouldSerializeClientCredentialType()\n  fullName: MessageSecurityOverHttp.ShouldSerializeClientCredentialType()\n- uid: System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential\n  parent: System.ServiceModel.MessageSecurityOverHttp\n  isExternal: false\n  name: ShouldSerializeNegotiateServiceCredential()\n  nameWithType: MessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential()\n  fullName: MessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential()\n"}