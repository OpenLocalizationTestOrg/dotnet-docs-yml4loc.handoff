{"nodes":[{"content":"Provides the base class for an encoding provider, which supplies encodings that are unavailable on a particular platform.","nodes":[{"pos":[0,121],"content":"Provides the base class for an encoding provider, which supplies encodings that are unavailable on a particular platform.","nodes":[{"content":"Provides the base class for an encoding provider, which supplies encodings that are unavailable on a particular platform.","pos":[0,121]}]}],"pos":[796,918],"yaml":true},{"content":"An encoding provider supplies encodings that are not otherwise available on a particular target platform.  \n  \n The .NET Framework on the Windows desktop supports a large number of character encodings and code pages. You can get a complete list of encodings available in the .NET Framework on the Windows desktop by calling the <xref:System.Text.Encoding.GetEncodings%2A?displayProperty=fullName> method. [!INCLUDE[net_core](~/includes/net-core-md.md)], on the other hand, by default supports only the following encodings:  \n  \n-   ASCII (code page 20127), which is returned by the <xref:System.Text.Encoding.ASCII%2A?displayProperty=fullName> property.  \n  \n-   ISO-8859-1 (code page 28591).  \n  \n-   UTF-7 (code page 65000), which is returned by the <xref:System.Text.Encoding.UTF7%2A?displayProperty=fullName> property.  \n  \n-   UTF-8 (code page 65001), which is returned by the <xref:System.Text.Encoding.UTF8%2A?displayProperty=fullName> property.  \n  \n-   UTF-16 and UTF-16LE (code page 1200), which is returned by the <xref:System.Text.Encoding.Unicode%2A> property.  \n  \n-   UTF-16BE (code page 1201), which is instantiated by calling the <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=fullName> or <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=fullName> constructor with a `bigEndian` value of `true`.  \n  \n-   UTF-32 and UTF-32LE (code page 12000), which is returned by the <xref:System.Text.Encoding.UTF32%2A?displayProperty=fullName> property.  \n  \n-   UTF-32BE (code page 12001), which is instantiated by calling an <xref:System.Text.UTF32Encoding> constructor that has a `bigEndian` parameter and providing a value of `true` in the method call.  \n  \n In [!INCLUDE[net_v46](~/includes/net-v46-md.md)], <xref:System.Text.EncodingProvider> is the base class that makes otherwise unavailable encodings available to the .NET Framework. This involves the following steps:  \n  \n1.  Define a subclass of <xref:System.Text.EncodingProvider> that overrides the two abstract <xref:System.Text.EncodingProvider.GetEncoding%2A> overloads, <xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%29> and <xref:System.Text.EncodingProvider.GetEncoding%28System.String%29>. These overloads return the otherwise unsupported encoding by code page identifier and by name.  \n  \n2.  Optionally, you can override the virtual <xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> and <xref:System.Text.EncodingProvider.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> methods. In most cases, this is not necessary, since the base class provides a default implementation.  \n  \n3.  Pass the <xref:System.Text.EncodingProvider> instance to the <xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=fullName> method to make the encodings supplied by the <xref:System.Text.EncodingProvider> object available to the common language runtime.  \n  \n4.  Call an <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=fullName> overload to retrieve the encoding. The <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=fullName> method will call the corresponding <xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=fullName> to determine whether it can supply the requested encoding.  \n  \n The .NET Framework Class Library provides one static property, <xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=fullName>, that returns an <xref:System.Text.EncodingProvider> object that makes the full set of encodings available on the desktop .NET Framework Class Library available to [!INCLUDE[net_core](~/includes/net-core-md.md)] applications. In addition, you can derive from the <xref:System.Text.EncodingProvider> class to make your own encodings available.","nodes":[{"pos":[0,105],"content":"An encoding provider supplies encodings that are not otherwise available on a particular target platform.","nodes":[{"content":"An encoding provider supplies encodings that are not otherwise available on a particular target platform.","pos":[0,105]}]},{"pos":[112,522],"content":"The .NET Framework on the Windows desktop supports a large number of character encodings and code pages. You can get a complete list of encodings available in the .NET Framework on the Windows desktop by calling the <xref:System.Text.Encoding.GetEncodings%2A?displayProperty=fullName> method. [!INCLUDE[net_core](~/includes/net-core-md.md)], on the other hand, by default supports only the following encodings:","nodes":[{"content":"The .NET Framework on the Windows desktop supports a large number of character encodings and code pages.","pos":[0,104]},{"content":"You can get a complete list of encodings available in the .NET Framework on the Windows desktop by calling the <ph id=\"ph1\">&lt;xref:System.Text.Encoding.GetEncodings%2A?displayProperty=fullName&gt;</ph> method.","pos":[105,292],"source":" You can get a complete list of encodings available in the .NET Framework on the Windows desktop by calling the <xref:System.Text.Encoding.GetEncodings%2A?displayProperty=fullName> method."},{"content":"<ph id=\"ph1\">[!INCLUDE[net_core](~/includes/net-core-md.md)]</ph>, on the other hand, by default supports only the following encodings:","pos":[293,410],"source":"[!INCLUDE[net_core](~/includes/net-core-md.md)], on the other hand, by default supports only the following encodings:"}]},{"pos":[532,653],"content":"ASCII (code page 20127), which is returned by the <xref:System.Text.Encoding.ASCII%2A?displayProperty=fullName> property.","nodes":[{"content":"ASCII (code page 20127), which is returned by the <ph id=\"ph1\">&lt;xref:System.Text.Encoding.ASCII%2A?displayProperty=fullName&gt;</ph> property.","pos":[0,121],"source":"ASCII (code page 20127), which is returned by the <xref:System.Text.Encoding.ASCII%2A?displayProperty=fullName> property."}]},{"pos":[663,692],"content":"ISO-8859-1 (code page 28591).","nodes":[{"content":"ISO-8859-1 (code page 28591).","pos":[0,29]}]},{"pos":[702,822],"content":"UTF-7 (code page 65000), which is returned by the <xref:System.Text.Encoding.UTF7%2A?displayProperty=fullName> property.","nodes":[{"content":"UTF-7 (code page 65000), which is returned by the <ph id=\"ph1\">&lt;xref:System.Text.Encoding.UTF7%2A?displayProperty=fullName&gt;</ph> property.","pos":[0,120],"source":"UTF-7 (code page 65000), which is returned by the <xref:System.Text.Encoding.UTF7%2A?displayProperty=fullName> property."}]},{"pos":[832,952],"content":"UTF-8 (code page 65001), which is returned by the <xref:System.Text.Encoding.UTF8%2A?displayProperty=fullName> property.","nodes":[{"content":"UTF-8 (code page 65001), which is returned by the <ph id=\"ph1\">&lt;xref:System.Text.Encoding.UTF8%2A?displayProperty=fullName&gt;</ph> property.","pos":[0,120],"source":"UTF-8 (code page 65001), which is returned by the <xref:System.Text.Encoding.UTF8%2A?displayProperty=fullName> property."}]},{"pos":[962,1073],"content":"UTF-16 and UTF-16LE (code page 1200), which is returned by the <xref:System.Text.Encoding.Unicode%2A> property.","nodes":[{"content":"UTF-16 and UTF-16LE (code page 1200), which is returned by the <ph id=\"ph1\">&lt;xref:System.Text.Encoding.Unicode%2A&gt;</ph> property.","pos":[0,111],"source":"UTF-16 and UTF-16LE (code page 1200), which is returned by the <xref:System.Text.Encoding.Unicode%2A> property."}]},{"pos":[1083,1407],"content":"UTF-16BE (code page 1201), which is instantiated by calling the <ph id=\"ph1\">&lt;xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=fullName&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=fullName&gt;</ph> constructor with a <ph id=\"ph3\">`bigEndian`</ph> value of <ph id=\"ph4\">`true`</ph>.","source":"UTF-16BE (code page 1201), which is instantiated by calling the <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=fullName> or <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=fullName> constructor with a `bigEndian` value of `true`."},{"pos":[1417,1552],"content":"UTF-32 and UTF-32LE (code page 12000), which is returned by the <xref:System.Text.Encoding.UTF32%2A?displayProperty=fullName> property.","nodes":[{"content":"UTF-32 and UTF-32LE (code page 12000), which is returned by the <ph id=\"ph1\">&lt;xref:System.Text.Encoding.UTF32%2A?displayProperty=fullName&gt;</ph> property.","pos":[0,135],"source":"UTF-32 and UTF-32LE (code page 12000), which is returned by the <xref:System.Text.Encoding.UTF32%2A?displayProperty=fullName> property."}]},{"pos":[1562,1755],"content":"UTF-32BE (code page 12001), which is instantiated by calling an <ph id=\"ph1\">&lt;xref:System.Text.UTF32Encoding&gt;</ph> constructor that has a <ph id=\"ph2\">`bigEndian`</ph> parameter and providing a value of <ph id=\"ph3\">`true`</ph> in the method call.","source":"UTF-32BE (code page 12001), which is instantiated by calling an <xref:System.Text.UTF32Encoding> constructor that has a `bigEndian` parameter and providing a value of `true` in the method call."},{"pos":[1762,1976],"content":"In [!INCLUDE[net_v46](~/includes/net-v46-md.md)], <xref:System.Text.EncodingProvider> is the base class that makes otherwise unavailable encodings available to the .NET Framework. This involves the following steps:","nodes":[{"content":"In <ph id=\"ph1\">[!INCLUDE[net_v46](~/includes/net-v46-md.md)]</ph>, <ph id=\"ph2\">&lt;xref:System.Text.EncodingProvider&gt;</ph> is the base class that makes otherwise unavailable encodings available to the .NET Framework.","pos":[0,179],"source":"In [!INCLUDE[net_v46](~/includes/net-v46-md.md)], <xref:System.Text.EncodingProvider> is the base class that makes otherwise unavailable encodings available to the .NET Framework."},{"content":"This involves the following steps:","pos":[180,214]}]},{"pos":[1986,2369],"content":"Define a subclass of <xref:System.Text.EncodingProvider> that overrides the two abstract <xref:System.Text.EncodingProvider.GetEncoding%2A> overloads, <xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%29> and <xref:System.Text.EncodingProvider.GetEncoding%28System.String%29>. These overloads return the otherwise unsupported encoding by code page identifier and by name.","nodes":[{"content":"Define a subclass of <xref:System.Text.EncodingProvider> that overrides the two abstract <xref:System.Text.EncodingProvider.GetEncoding%2A> overloads, <xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%29> and <xref:System.Text.EncodingProvider.GetEncoding%28System.String%29>. These overloads return the otherwise unsupported encoding by code page identifier and by name.","pos":[0,383],"nodes":[{"content":"Define a subclass of <ph id=\"ph1\">&lt;xref:System.Text.EncodingProvider&gt;</ph> that overrides the two abstract <ph id=\"ph2\">&lt;xref:System.Text.EncodingProvider.GetEncoding%2A&gt;</ph> overloads, <ph id=\"ph3\">&lt;xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%29&gt;</ph> and <ph id=\"ph4\">&lt;xref:System.Text.EncodingProvider.GetEncoding%28System.String%29&gt;</ph>.","pos":[0,288],"source":"Define a subclass of <xref:System.Text.EncodingProvider> that overrides the two abstract <xref:System.Text.EncodingProvider.GetEncoding%2A> overloads, <xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%29> and <xref:System.Text.EncodingProvider.GetEncoding%28System.String%29>."},{"content":"These overloads return the otherwise unsupported encoding by code page identifier and by name.","pos":[289,383]}]}]},{"pos":[2379,2779],"content":"Optionally, you can override the virtual <xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> and <xref:System.Text.EncodingProvider.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> methods. In most cases, this is not necessary, since the base class provides a default implementation.","nodes":[{"content":"Optionally, you can override the virtual <xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> and <xref:System.Text.EncodingProvider.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> methods. In most cases, this is not necessary, since the base class provides a default implementation.","pos":[0,400],"nodes":[{"content":"Optionally, you can override the virtual <ph id=\"ph1\">&lt;xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Text.EncodingProvider.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29&gt;</ph> methods.","pos":[0,306],"source":"Optionally, you can override the virtual <xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> and <xref:System.Text.EncodingProvider.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> methods."},{"content":"In most cases, this is not necessary, since the base class provides a default implementation.","pos":[307,400]}]}]},{"pos":[2789,3052],"content":"Pass the <xref:System.Text.EncodingProvider> instance to the <xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=fullName> method to make the encodings supplied by the <xref:System.Text.EncodingProvider> object available to the common language runtime.","nodes":[{"content":"Pass the <ph id=\"ph1\">&lt;xref:System.Text.EncodingProvider&gt;</ph> instance to the <ph id=\"ph2\">&lt;xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=fullName&gt;</ph> method to make the encodings supplied by the <ph id=\"ph3\">&lt;xref:System.Text.EncodingProvider&gt;</ph> object available to the common language runtime.","pos":[0,263],"source":"Pass the <xref:System.Text.EncodingProvider> instance to the <xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=fullName> method to make the encodings supplied by the <xref:System.Text.EncodingProvider> object available to the common language runtime."}]},{"pos":[3062,3414],"content":"Call an <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=fullName> overload to retrieve the encoding. The <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=fullName> method will call the corresponding <xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=fullName> to determine whether it can supply the requested encoding.","nodes":[{"content":"Call an <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=fullName> overload to retrieve the encoding. The <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=fullName> method will call the corresponding <xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=fullName> to determine whether it can supply the requested encoding.","pos":[0,352],"nodes":[{"content":"Call an <ph id=\"ph1\">&lt;xref:System.Text.Encoding.GetEncoding%2A?displayProperty=fullName&gt;</ph> overload to retrieve the encoding.","pos":[0,110],"source":"Call an <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=fullName> overload to retrieve the encoding."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Text.Encoding.GetEncoding%2A?displayProperty=fullName&gt;</ph> method will call the corresponding <ph id=\"ph2\">&lt;xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=fullName&gt;</ph> to determine whether it can supply the requested encoding.","pos":[111,352],"source":" The <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=fullName> method will call the corresponding <xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=fullName> to determine whether it can supply the requested encoding."}]}]},{"pos":[3421,3908],"content":"The .NET Framework Class Library provides one static property, <xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=fullName>, that returns an <xref:System.Text.EncodingProvider> object that makes the full set of encodings available on the desktop .NET Framework Class Library available to [!INCLUDE[net_core](~/includes/net-core-md.md)] applications. In addition, you can derive from the <xref:System.Text.EncodingProvider> class to make your own encodings available.","nodes":[{"content":"The .NET Framework Class Library provides one static property, <ph id=\"ph1\">&lt;xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=fullName&gt;</ph>, that returns an <ph id=\"ph2\">&lt;xref:System.Text.EncodingProvider&gt;</ph> object that makes the full set of encodings available on the desktop .NET Framework Class Library available to <ph id=\"ph3\">[!INCLUDE[net_core](~/includes/net-core-md.md)]</ph> applications.","pos":[0,370],"source":"The .NET Framework Class Library provides one static property, <xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=fullName>, that returns an <xref:System.Text.EncodingProvider> object that makes the full set of encodings available on the desktop .NET Framework Class Library available to [!INCLUDE[net_core](~/includes/net-core-md.md)] applications."},{"content":"In addition, you can derive from the <ph id=\"ph1\">&lt;xref:System.Text.EncodingProvider&gt;</ph> class to make your own encodings available.","pos":[371,487],"source":" In addition, you can derive from the <xref:System.Text.EncodingProvider> class to make your own encodings available."}]}],"pos":[929,4870],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Text.EncodingProvider\"></xref> class.","nodes":[{"pos":[0,90],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Text.EncodingProvider\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Text.EncodingProvider\"></xref> class."}],"pos":[6627,6718],"yaml":true},{"content":"Returns the encoding associated with the specified code page identifier.","nodes":[{"pos":[0,72],"content":"Returns the encoding associated with the specified code page identifier.","nodes":[{"content":"Returns the encoding associated with the specified code page identifier.","pos":[0,72]}]}],"pos":[8116,8189],"yaml":true},{"content":"The code page identifier of the requested encoding.","nodes":[{"pos":[0,51],"content":"The code page identifier of the requested encoding.","nodes":[{"content":"The code page identifier of the requested encoding.","pos":[0,51]}]}],"pos":[8356,8408],"yaml":true},{"content":"The encoding that is associated with the specified code page, or `null` if this <xref href=\"System.Text.EncodingProvider\"></xref> cannot return a valid encoding that corresponds to <code>codepage</code>.","nodes":[{"pos":[0,203],"content":"The encoding that is associated with the specified code page, or <ph id=\"ph1\">`null`</ph> if this <ph id=\"ph2\">&lt;xref href=\"System.Text.EncodingProvider\"&gt;&lt;/xref&gt;</ph> cannot return a valid encoding that corresponds to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph3\">codepage</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The encoding that is associated with the specified code page, or `null` if this <xref href=\"System.Text.EncodingProvider\"></xref> cannot return a valid encoding that corresponds to <code>codepage</code>."}],"pos":[8472,8676],"yaml":true},{"content":"Returns the encoding with the specified name.","nodes":[{"pos":[0,45],"content":"Returns the encoding with the specified name.","nodes":[{"content":"Returns the encoding with the specified name.","pos":[0,45]}]}],"pos":[10016,10062],"yaml":true},{"content":"The name of the requested encoding.","nodes":[{"pos":[0,35],"content":"The name of the requested encoding.","nodes":[{"content":"The name of the requested encoding.","pos":[0,35]}]}],"pos":[10225,10261],"yaml":true},{"content":"The encoding that is associated with the specified name, or `null` if this <xref href=\"System.Text.EncodingProvider\"></xref> cannot return a valid encoding that corresponds to <code>name</code>.","nodes":[{"pos":[0,194],"content":"The encoding that is associated with the specified name, or <ph id=\"ph1\">`null`</ph> if this <ph id=\"ph2\">&lt;xref href=\"System.Text.EncodingProvider\"&gt;&lt;/xref&gt;</ph> cannot return a valid encoding that corresponds to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph3\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The encoding that is associated with the specified name, or `null` if this <xref href=\"System.Text.EncodingProvider\"></xref> cannot return a valid encoding that corresponds to <code>name</code>."}],"pos":[10325,10520],"yaml":true},{"content":"Returns the encoding associated with the specified code page identifier. Parameters specify an error handler for characters that cannot be encoded and byte sequences that cannot be decoded.","nodes":[{"pos":[0,189],"content":"Returns the encoding associated with the specified code page identifier. Parameters specify an error handler for characters that cannot be encoded and byte sequences that cannot be decoded.","nodes":[{"content":"Returns the encoding associated with the specified code page identifier. Parameters specify an error handler for characters that cannot be encoded and byte sequences that cannot be decoded.","pos":[0,189],"nodes":[{"content":"Returns the encoding associated with the specified code page identifier.","pos":[0,72]},{"content":"Parameters specify an error handler for characters that cannot be encoded and byte sequences that cannot be decoded.","pos":[73,189]}]}]}],"pos":[12124,12314],"yaml":true},{"content":"The `encoderFallback` and `decoderFallback` parameters are objects that define the fallback strategy used in the event that an encoder cannot convert a character to a sequence of bytes or a decoder cannot convert a sequence of bytes to a character. The .NET Framework provides the following fallback mechanisms:  \n  \n-   Exception fallback. If the `encoderFallback` argument is an instance of <xref:System.Text.EncoderExceptionFallback>, or the `decoderExceptionFallback` argument is an instance of <xref:System.Text.DecoderExceptionFallback>, the encoding method throws an exception if characters cannot be encoded, and the decoding method throws an exception if a byte sequence cannot be decoded.  \n  \n-   Replacement fallback. If the `encoderFallback` argument is an instance of <xref:System.Text.EncoderReplacementFallback>, or the `decoderExceptionFallback` argument is an instance of <xref:System.Text.DecoderReplacementFallback>, the encoding and decoding methods substitute a replacement string for characters that cannot be encoded and byte sequences cannot be decoded. If you instantiated the replacement fallback object by calling the default constructor, the replacement character is a \"?\". If you call the <xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=fullName> or <xref:System.Text.DecoderReplacementFallback.%23ctor%28System.String%29?displayProperty=fullName> constructor, you can specify the replacement string.  \n  \n-   Best-fit fallback. You can derive from the <xref:System.Text.EncoderFallback> or <xref:System.Text.DecoderFallback> class to implement a best-fit replacement mechanism.","nodes":[{"pos":[0,311],"content":"The `encoderFallback` and `decoderFallback` parameters are objects that define the fallback strategy used in the event that an encoder cannot convert a character to a sequence of bytes or a decoder cannot convert a sequence of bytes to a character. The .NET Framework provides the following fallback mechanisms:","nodes":[{"content":"The <ph id=\"ph1\">`encoderFallback`</ph> and <ph id=\"ph2\">`decoderFallback`</ph> parameters are objects that define the fallback strategy used in the event that an encoder cannot convert a character to a sequence of bytes or a decoder cannot convert a sequence of bytes to a character.","pos":[0,248],"source":"The `encoderFallback` and `decoderFallback` parameters are objects that define the fallback strategy used in the event that an encoder cannot convert a character to a sequence of bytes or a decoder cannot convert a sequence of bytes to a character."},{"content":"The .NET Framework provides the following fallback mechanisms:","pos":[249,311]}]},{"pos":[321,698],"content":"Exception fallback. If the `encoderFallback` argument is an instance of <xref:System.Text.EncoderExceptionFallback>, or the `decoderExceptionFallback` argument is an instance of <xref:System.Text.DecoderExceptionFallback>, the encoding method throws an exception if characters cannot be encoded, and the decoding method throws an exception if a byte sequence cannot be decoded.","nodes":[{"content":"Exception fallback.","pos":[0,19]},{"content":"If the <ph id=\"ph1\">`encoderFallback`</ph> argument is an instance of <ph id=\"ph2\">&lt;xref:System.Text.EncoderExceptionFallback&gt;</ph>, or the <ph id=\"ph3\">`decoderExceptionFallback`</ph> argument is an instance of <ph id=\"ph4\">&lt;xref:System.Text.DecoderExceptionFallback&gt;</ph>, the encoding method throws an exception if characters cannot be encoded, and the decoding method throws an exception if a byte sequence cannot be decoded.","pos":[20,377],"source":" If the `encoderFallback` argument is an instance of <xref:System.Text.EncoderExceptionFallback>, or the `decoderExceptionFallback` argument is an instance of <xref:System.Text.DecoderExceptionFallback>, the encoding method throws an exception if characters cannot be encoded, and the decoding method throws an exception if a byte sequence cannot be decoded."}]},{"pos":[708,1470],"content":"Replacement fallback. If the `encoderFallback` argument is an instance of <xref:System.Text.EncoderReplacementFallback>, or the `decoderExceptionFallback` argument is an instance of <xref:System.Text.DecoderReplacementFallback>, the encoding and decoding methods substitute a replacement string for characters that cannot be encoded and byte sequences cannot be decoded. If you instantiated the replacement fallback object by calling the default constructor, the replacement character is a \"?\". If you call the <xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=fullName> or <xref:System.Text.DecoderReplacementFallback.%23ctor%28System.String%29?displayProperty=fullName> constructor, you can specify the replacement string.","nodes":[{"content":"Replacement fallback.","pos":[0,21]},{"content":"If the <ph id=\"ph1\">`encoderFallback`</ph> argument is an instance of <ph id=\"ph2\">&lt;xref:System.Text.EncoderReplacementFallback&gt;</ph>, or the <ph id=\"ph3\">`decoderExceptionFallback`</ph> argument is an instance of <ph id=\"ph4\">&lt;xref:System.Text.DecoderReplacementFallback&gt;</ph>, the encoding and decoding methods substitute a replacement string for characters that cannot be encoded and byte sequences cannot be decoded.","pos":[22,370],"source":" If the `encoderFallback` argument is an instance of <xref:System.Text.EncoderReplacementFallback>, or the `decoderExceptionFallback` argument is an instance of <xref:System.Text.DecoderReplacementFallback>, the encoding and decoding methods substitute a replacement string for characters that cannot be encoded and byte sequences cannot be decoded."},{"content":"If you instantiated the replacement fallback object by calling the default constructor, the replacement character is a \"?\".","pos":[371,494]},{"content":"If you call the <ph id=\"ph1\">&lt;xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=fullName&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Text.DecoderReplacementFallback.%23ctor%28System.String%29?displayProperty=fullName&gt;</ph> constructor, you can specify the replacement string.","pos":[495,762],"source":" If you call the <xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=fullName> or <xref:System.Text.DecoderReplacementFallback.%23ctor%28System.String%29?displayProperty=fullName> constructor, you can specify the replacement string."}]},{"pos":[1480,1648],"content":"Best-fit fallback. You can derive from the <xref:System.Text.EncoderFallback> or <xref:System.Text.DecoderFallback> class to implement a best-fit replacement mechanism.","nodes":[{"content":"Best-fit fallback. You can derive from the <xref:System.Text.EncoderFallback> or <xref:System.Text.DecoderFallback> class to implement a best-fit replacement mechanism.","pos":[0,168],"nodes":[{"content":"Best-fit fallback.","pos":[0,18]},{"content":"You can derive from the <ph id=\"ph1\">&lt;xref:System.Text.EncoderFallback&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Text.DecoderFallback&gt;</ph> class to implement a best-fit replacement mechanism.","pos":[19,168],"source":" You can derive from the <xref:System.Text.EncoderFallback> or <xref:System.Text.DecoderFallback> class to implement a best-fit replacement mechanism."}]}]}],"pos":[12325,13984],"yaml":true,"extradata":"MT"},{"content":"The code page identifier of the requested encoding.","nodes":[{"pos":[0,51],"content":"The code page identifier of the requested encoding.","nodes":[{"content":"The code page identifier of the requested encoding.","pos":[0,51]}]}],"pos":[14240,14292],"yaml":true},{"content":"An object that provides an error-handling procedure when a character cannot be encoded with this encoding.","nodes":[{"pos":[0,106],"content":"An object that provides an error-handling procedure when a character cannot be encoded with this encoding.","nodes":[{"content":"An object that provides an error-handling procedure when a character cannot be encoded with this encoding.","pos":[0,106]}]}],"pos":[14377,14484],"yaml":true},{"content":"An object that provides an error-handling procedure when a byte sequence cannot be decoded with this encoding.","nodes":[{"pos":[0,110],"content":"An object that provides an error-handling procedure when a byte sequence cannot be decoded with this encoding.","nodes":[{"content":"An object that provides an error-handling procedure when a byte sequence cannot be decoded with this encoding.","pos":[0,110]}]}],"pos":[14569,14680],"yaml":true},{"content":"The encoding that is associated with the specified code page, or `null` if this <xref href=\"System.Text.EncodingProvider\"></xref> cannot return a valid encoding that corresponds to <code>codepage</code>.","nodes":[{"pos":[0,203],"content":"The encoding that is associated with the specified code page, or <ph id=\"ph1\">`null`</ph> if this <ph id=\"ph2\">&lt;xref href=\"System.Text.EncodingProvider\"&gt;&lt;/xref&gt;</ph> cannot return a valid encoding that corresponds to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph3\">codepage</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The encoding that is associated with the specified code page, or `null` if this <xref href=\"System.Text.EncodingProvider\"></xref> cannot return a valid encoding that corresponds to <code>codepage</code>."}],"pos":[14744,14948],"yaml":true},{"content":"Returns the encoding associated with the specified name. Parameters specify an error handler for characters that cannot be encoded and byte sequences that cannot be decoded.","nodes":[{"pos":[0,173],"content":"Returns the encoding associated with the specified name. Parameters specify an error handler for characters that cannot be encoded and byte sequences that cannot be decoded.","nodes":[{"content":"Returns the encoding associated with the specified name. Parameters specify an error handler for characters that cannot be encoded and byte sequences that cannot be decoded.","pos":[0,173],"nodes":[{"content":"Returns the encoding associated with the specified name.","pos":[0,56]},{"content":"Parameters specify an error handler for characters that cannot be encoded and byte sequences that cannot be decoded.","pos":[57,173]}]}]}],"pos":[16558,16732],"yaml":true},{"content":"The `encoderFallback` and `decoderFallback` parameters are objects that define the fallback strategy used in the event that an encoder cannot convert a character to a sequence of bytes or a decoder cannot convert a sequence of bytes to a character. The .NET Framework provides the following fallback mechanisms:  \n  \n-   Exception fallback. If the `encoderFallback` argument is an instance of <xref:System.Text.EncoderExceptionFallback>, or the `decoderExceptionFallback` argument is an instance of <xref:System.Text.DecoderExceptionFallback>, the encoding method throws an exception if characters cannot be encoded, and the decoding method throws an exception if a byte sequence cannot be decoded.  \n  \n-   Replacement fallback. If the `encoderFallback` argument is an instance of <xref:System.Text.EncoderReplacementFallback>, or the `decoderExceptionFallback` argument is an instance of <xref:System.Text.DecoderReplacementFallback>, the encoding and decoding methods substitute a replacement string for characters that cannot be encoded and byte sequences cannot be decoded. If you instantiated the replacement fallback object by calling the default constructor, the replacement character is a \"?\". If you call the <xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=fullName> or <xref:System.Text.DecoderReplacementFallback.%23ctor%28System.String%29?displayProperty=fullName> constructor, you can specify the replacement string.  \n  \n-   Best-fit fallback. You can derive from the <xref:System.Text.EncoderFallback> or <xref:System.Text.DecoderFallback> class to implement a best-fit replacement mechanism.","nodes":[{"pos":[0,311],"content":"The `encoderFallback` and `decoderFallback` parameters are objects that define the fallback strategy used in the event that an encoder cannot convert a character to a sequence of bytes or a decoder cannot convert a sequence of bytes to a character. The .NET Framework provides the following fallback mechanisms:","nodes":[{"content":"The <ph id=\"ph1\">`encoderFallback`</ph> and <ph id=\"ph2\">`decoderFallback`</ph> parameters are objects that define the fallback strategy used in the event that an encoder cannot convert a character to a sequence of bytes or a decoder cannot convert a sequence of bytes to a character.","pos":[0,248],"source":"The `encoderFallback` and `decoderFallback` parameters are objects that define the fallback strategy used in the event that an encoder cannot convert a character to a sequence of bytes or a decoder cannot convert a sequence of bytes to a character."},{"content":"The .NET Framework provides the following fallback mechanisms:","pos":[249,311]}]},{"pos":[321,698],"content":"Exception fallback. If the `encoderFallback` argument is an instance of <xref:System.Text.EncoderExceptionFallback>, or the `decoderExceptionFallback` argument is an instance of <xref:System.Text.DecoderExceptionFallback>, the encoding method throws an exception if characters cannot be encoded, and the decoding method throws an exception if a byte sequence cannot be decoded.","nodes":[{"content":"Exception fallback.","pos":[0,19]},{"content":"If the <ph id=\"ph1\">`encoderFallback`</ph> argument is an instance of <ph id=\"ph2\">&lt;xref:System.Text.EncoderExceptionFallback&gt;</ph>, or the <ph id=\"ph3\">`decoderExceptionFallback`</ph> argument is an instance of <ph id=\"ph4\">&lt;xref:System.Text.DecoderExceptionFallback&gt;</ph>, the encoding method throws an exception if characters cannot be encoded, and the decoding method throws an exception if a byte sequence cannot be decoded.","pos":[20,377],"source":" If the `encoderFallback` argument is an instance of <xref:System.Text.EncoderExceptionFallback>, or the `decoderExceptionFallback` argument is an instance of <xref:System.Text.DecoderExceptionFallback>, the encoding method throws an exception if characters cannot be encoded, and the decoding method throws an exception if a byte sequence cannot be decoded."}]},{"pos":[708,1470],"content":"Replacement fallback. If the `encoderFallback` argument is an instance of <xref:System.Text.EncoderReplacementFallback>, or the `decoderExceptionFallback` argument is an instance of <xref:System.Text.DecoderReplacementFallback>, the encoding and decoding methods substitute a replacement string for characters that cannot be encoded and byte sequences cannot be decoded. If you instantiated the replacement fallback object by calling the default constructor, the replacement character is a \"?\". If you call the <xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=fullName> or <xref:System.Text.DecoderReplacementFallback.%23ctor%28System.String%29?displayProperty=fullName> constructor, you can specify the replacement string.","nodes":[{"content":"Replacement fallback.","pos":[0,21]},{"content":"If the <ph id=\"ph1\">`encoderFallback`</ph> argument is an instance of <ph id=\"ph2\">&lt;xref:System.Text.EncoderReplacementFallback&gt;</ph>, or the <ph id=\"ph3\">`decoderExceptionFallback`</ph> argument is an instance of <ph id=\"ph4\">&lt;xref:System.Text.DecoderReplacementFallback&gt;</ph>, the encoding and decoding methods substitute a replacement string for characters that cannot be encoded and byte sequences cannot be decoded.","pos":[22,370],"source":" If the `encoderFallback` argument is an instance of <xref:System.Text.EncoderReplacementFallback>, or the `decoderExceptionFallback` argument is an instance of <xref:System.Text.DecoderReplacementFallback>, the encoding and decoding methods substitute a replacement string for characters that cannot be encoded and byte sequences cannot be decoded."},{"content":"If you instantiated the replacement fallback object by calling the default constructor, the replacement character is a \"?\".","pos":[371,494]},{"content":"If you call the <ph id=\"ph1\">&lt;xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=fullName&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Text.DecoderReplacementFallback.%23ctor%28System.String%29?displayProperty=fullName&gt;</ph> constructor, you can specify the replacement string.","pos":[495,762],"source":" If you call the <xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=fullName> or <xref:System.Text.DecoderReplacementFallback.%23ctor%28System.String%29?displayProperty=fullName> constructor, you can specify the replacement string."}]},{"pos":[1480,1648],"content":"Best-fit fallback. You can derive from the <xref:System.Text.EncoderFallback> or <xref:System.Text.DecoderFallback> class to implement a best-fit replacement mechanism.","nodes":[{"content":"Best-fit fallback. You can derive from the <xref:System.Text.EncoderFallback> or <xref:System.Text.DecoderFallback> class to implement a best-fit replacement mechanism.","pos":[0,168],"nodes":[{"content":"Best-fit fallback.","pos":[0,18]},{"content":"You can derive from the <ph id=\"ph1\">&lt;xref:System.Text.EncoderFallback&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Text.DecoderFallback&gt;</ph> class to implement a best-fit replacement mechanism.","pos":[19,168],"source":" You can derive from the <xref:System.Text.EncoderFallback> or <xref:System.Text.DecoderFallback> class to implement a best-fit replacement mechanism."}]}]}],"pos":[16743,18402],"yaml":true,"extradata":"MT"},{"content":"The name of the preferred encoding.","nodes":[{"pos":[0,35],"content":"The name of the preferred encoding.","nodes":[{"content":"The name of the preferred encoding.","pos":[0,35]}]}],"pos":[18654,18690],"yaml":true},{"content":"An object that provides an error-handling procedure when a character cannot be encoded with this encoding.","nodes":[{"pos":[0,106],"content":"An object that provides an error-handling procedure when a character cannot be encoded with this encoding.","nodes":[{"content":"An object that provides an error-handling procedure when a character cannot be encoded with this encoding.","pos":[0,106]}]}],"pos":[18775,18882],"yaml":true},{"content":"An object that provides an error-handling procedure when a byte sequence cannot be decoded with the current encoding.","nodes":[{"pos":[0,117],"content":"An object that provides an error-handling procedure when a byte sequence cannot be decoded with the current encoding.","nodes":[{"content":"An object that provides an error-handling procedure when a byte sequence cannot be decoded with the current encoding.","pos":[0,117]}]}],"pos":[18967,19085],"yaml":true},{"content":"The encoding that is associated with the specified name, or `null` if this <xref href=\"System.Text.EncodingProvider\"></xref> cannot return a valid encoding that corresponds to <code>name</code>.","nodes":[{"pos":[0,194],"content":"The encoding that is associated with the specified name, or <ph id=\"ph1\">`null`</ph> if this <ph id=\"ph2\">&lt;xref href=\"System.Text.EncodingProvider\"&gt;&lt;/xref&gt;</ph> cannot return a valid encoding that corresponds to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph3\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The encoding that is associated with the specified name, or `null` if this <xref href=\"System.Text.EncodingProvider\"></xref> cannot return a valid encoding that corresponds to <code>name</code>."}],"pos":[19149,19344],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Text.EncodingProvider\n  commentId: T:System.Text.EncodingProvider\n  id: EncodingProvider\n  children:\n  - System.Text.EncodingProvider.#ctor\n  - System.Text.EncodingProvider.GetEncoding(System.Int32)\n  - System.Text.EncodingProvider.GetEncoding(System.String)\n  - System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)\n  - System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)\n  langs:\n  - csharp\n  name: EncodingProvider\n  nameWithType: EncodingProvider\n  fullName: System.Text.EncodingProvider\n  type: Class\n  assemblies:\n  - System.Text.Encoding\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Text\n  summary: Provides the base class for an encoding provider, which supplies encodings that are unavailable on a particular platform.\n  remarks: \"An encoding provider supplies encodings that are not otherwise available on a particular target platform.  \\n  \\n The .NET Framework on the Windows desktop supports a large number of character encodings and code pages. You can get a complete list of encodings available in the .NET Framework on the Windows desktop by calling the <xref:System.Text.Encoding.GetEncodings%2A?displayProperty=fullName> method. [!INCLUDE[net_core](~/includes/net-core-md.md)], on the other hand, by default supports only the following encodings:  \\n  \\n-   ASCII (code page 20127), which is returned by the <xref:System.Text.Encoding.ASCII%2A?displayProperty=fullName> property.  \\n  \\n-   ISO-8859-1 (code page 28591).  \\n  \\n-   UTF-7 (code page 65000), which is returned by the <xref:System.Text.Encoding.UTF7%2A?displayProperty=fullName> property.  \\n  \\n-   UTF-8 (code page 65001), which is returned by the <xref:System.Text.Encoding.UTF8%2A?displayProperty=fullName> property.  \\n  \\n-   UTF-16 and UTF-16LE (code page 1200), which is returned by the <xref:System.Text.Encoding.Unicode%2A> property.  \\n  \\n-   UTF-16BE (code page 1201), which is instantiated by calling the <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=fullName> or <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=fullName> constructor with a `bigEndian` value of `true`.  \\n  \\n-   UTF-32 and UTF-32LE (code page 12000), which is returned by the <xref:System.Text.Encoding.UTF32%2A?displayProperty=fullName> property.  \\n  \\n-   UTF-32BE (code page 12001), which is instantiated by calling an <xref:System.Text.UTF32Encoding> constructor that has a `bigEndian` parameter and providing a value of `true` in the method call.  \\n  \\n In [!INCLUDE[net_v46](~/includes/net-v46-md.md)], <xref:System.Text.EncodingProvider> is the base class that makes otherwise unavailable encodings available to the .NET Framework. This involves the following steps:  \\n  \\n1.  Define a subclass of <xref:System.Text.EncodingProvider> that overrides the two abstract <xref:System.Text.EncodingProvider.GetEncoding%2A> overloads, <xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%29> and <xref:System.Text.EncodingProvider.GetEncoding%28System.String%29>. These overloads return the otherwise unsupported encoding by code page identifier and by name.  \\n  \\n2.  Optionally, you can override the virtual <xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> and <xref:System.Text.EncodingProvider.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> methods. In most cases, this is not necessary, since the base class provides a default implementation.  \\n  \\n3.  Pass the <xref:System.Text.EncodingProvider> instance to the <xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=fullName> method to make the encodings supplied by the <xref:System.Text.EncodingProvider> object available to the common language runtime.  \\n  \\n4.  Call an <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=fullName> overload to retrieve the encoding. The <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=fullName> method will call the corresponding <xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=fullName> to determine whether it can supply the requested encoding.  \\n  \\n The .NET Framework Class Library provides one static property, <xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=fullName>, that returns an <xref:System.Text.EncodingProvider> object that makes the full set of encodings available on the desktop .NET Framework Class Library available to [!INCLUDE[net_core](~/includes/net-core-md.md)] applications. In addition, you can derive from the <xref:System.Text.EncodingProvider> class to make your own encodings available.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public abstract class EncodingProvider\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text/EncodingProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Text.EncodingProvider.#ctor\n  commentId: M:System.Text.EncodingProvider.#ctor\n  id: '#ctor'\n  parent: System.Text.EncodingProvider\n  langs:\n  - csharp\n  name: EncodingProvider()\n  nameWithType: EncodingProvider.EncodingProvider()\n  fullName: EncodingProvider.EncodingProvider()\n  type: Constructor\n  assemblies:\n  - System.Text.Encoding\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Text\n  summary: Initializes a new instance of the <xref href=\"System.Text.EncodingProvider\"></xref> class.\n  syntax:\n    content: public EncodingProvider ();\n    parameters: []\n  overload: System.Text.EncodingProvider.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text/EncodingProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Text.EncodingProvider.GetEncoding(System.Int32)\n  commentId: M:System.Text.EncodingProvider.GetEncoding(System.Int32)\n  id: GetEncoding(System.Int32)\n  parent: System.Text.EncodingProvider\n  langs:\n  - csharp\n  name: GetEncoding(Int32)\n  nameWithType: EncodingProvider.GetEncoding(Int32)\n  fullName: EncodingProvider.GetEncoding(Int32)\n  type: Method\n  assemblies:\n  - System.Text.Encoding\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Text\n  summary: Returns the encoding associated with the specified code page identifier.\n  syntax:\n    content: public abstract System.Text.Encoding GetEncoding (int codepage);\n    parameters:\n    - id: codepage\n      type: System.Int32\n      description: The code page identifier of the requested encoding.\n    return:\n      type: System.Text.Encoding\n      description: The encoding that is associated with the specified code page, or `null` if this <xref href=\"System.Text.EncodingProvider\"></xref> cannot return a valid encoding that corresponds to <code>codepage</code>.\n  overload: System.Text.EncodingProvider.GetEncoding*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text/EncodingProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Text.EncodingProvider.GetEncoding(System.String)\n  commentId: M:System.Text.EncodingProvider.GetEncoding(System.String)\n  id: GetEncoding(System.String)\n  parent: System.Text.EncodingProvider\n  langs:\n  - csharp\n  name: GetEncoding(String)\n  nameWithType: EncodingProvider.GetEncoding(String)\n  fullName: EncodingProvider.GetEncoding(String)\n  type: Method\n  assemblies:\n  - System.Text.Encoding\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Text\n  summary: Returns the encoding with the specified name.\n  syntax:\n    content: public abstract System.Text.Encoding GetEncoding (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the requested encoding.\n    return:\n      type: System.Text.Encoding\n      description: The encoding that is associated with the specified name, or `null` if this <xref href=\"System.Text.EncodingProvider\"></xref> cannot return a valid encoding that corresponds to <code>name</code>.\n  overload: System.Text.EncodingProvider.GetEncoding*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text/EncodingProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)\n  commentId: M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)\n  id: GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)\n  parent: System.Text.EncodingProvider\n  langs:\n  - csharp\n  name: GetEncoding(Int32, EncoderFallback, DecoderFallback)\n  nameWithType: EncodingProvider.GetEncoding(Int32, EncoderFallback, DecoderFallback)\n  fullName: EncodingProvider.GetEncoding(Int32, EncoderFallback, DecoderFallback)\n  type: Method\n  assemblies:\n  - System.Text.Encoding\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Text\n  summary: Returns the encoding associated with the specified code page identifier. Parameters specify an error handler for characters that cannot be encoded and byte sequences that cannot be decoded.\n  remarks: \"The `encoderFallback` and `decoderFallback` parameters are objects that define the fallback strategy used in the event that an encoder cannot convert a character to a sequence of bytes or a decoder cannot convert a sequence of bytes to a character. The .NET Framework provides the following fallback mechanisms:  \\n  \\n-   Exception fallback. If the `encoderFallback` argument is an instance of <xref:System.Text.EncoderExceptionFallback>, or the `decoderExceptionFallback` argument is an instance of <xref:System.Text.DecoderExceptionFallback>, the encoding method throws an exception if characters cannot be encoded, and the decoding method throws an exception if a byte sequence cannot be decoded.  \\n  \\n-   Replacement fallback. If the `encoderFallback` argument is an instance of <xref:System.Text.EncoderReplacementFallback>, or the `decoderExceptionFallback` argument is an instance of <xref:System.Text.DecoderReplacementFallback>, the encoding and decoding methods substitute a replacement string for characters that cannot be encoded and byte sequences cannot be decoded. If you instantiated the replacement fallback object by calling the default constructor, the replacement character is a \\\"?\\\". If you call the <xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=fullName> or <xref:System.Text.DecoderReplacementFallback.%23ctor%28System.String%29?displayProperty=fullName> constructor, you can specify the replacement string.  \\n  \\n-   Best-fit fallback. You can derive from the <xref:System.Text.EncoderFallback> or <xref:System.Text.DecoderFallback> class to implement a best-fit replacement mechanism.\"\n  syntax:\n    content: public virtual System.Text.Encoding GetEncoding (int codepage, System.Text.EncoderFallback encoderFallback, System.Text.DecoderFallback decoderFallback);\n    parameters:\n    - id: codepage\n      type: System.Int32\n      description: The code page identifier of the requested encoding.\n    - id: encoderFallback\n      type: System.Text.EncoderFallback\n      description: An object that provides an error-handling procedure when a character cannot be encoded with this encoding.\n    - id: decoderFallback\n      type: System.Text.DecoderFallback\n      description: An object that provides an error-handling procedure when a byte sequence cannot be decoded with this encoding.\n    return:\n      type: System.Text.Encoding\n      description: The encoding that is associated with the specified code page, or `null` if this <xref href=\"System.Text.EncodingProvider\"></xref> cannot return a valid encoding that corresponds to <code>codepage</code>.\n  overload: System.Text.EncodingProvider.GetEncoding*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text/EncodingProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)\n  commentId: M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)\n  id: GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)\n  parent: System.Text.EncodingProvider\n  langs:\n  - csharp\n  name: GetEncoding(String, EncoderFallback, DecoderFallback)\n  nameWithType: EncodingProvider.GetEncoding(String, EncoderFallback, DecoderFallback)\n  fullName: EncodingProvider.GetEncoding(String, EncoderFallback, DecoderFallback)\n  type: Method\n  assemblies:\n  - System.Text.Encoding\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Text\n  summary: Returns the encoding associated with the specified name. Parameters specify an error handler for characters that cannot be encoded and byte sequences that cannot be decoded.\n  remarks: \"The `encoderFallback` and `decoderFallback` parameters are objects that define the fallback strategy used in the event that an encoder cannot convert a character to a sequence of bytes or a decoder cannot convert a sequence of bytes to a character. The .NET Framework provides the following fallback mechanisms:  \\n  \\n-   Exception fallback. If the `encoderFallback` argument is an instance of <xref:System.Text.EncoderExceptionFallback>, or the `decoderExceptionFallback` argument is an instance of <xref:System.Text.DecoderExceptionFallback>, the encoding method throws an exception if characters cannot be encoded, and the decoding method throws an exception if a byte sequence cannot be decoded.  \\n  \\n-   Replacement fallback. If the `encoderFallback` argument is an instance of <xref:System.Text.EncoderReplacementFallback>, or the `decoderExceptionFallback` argument is an instance of <xref:System.Text.DecoderReplacementFallback>, the encoding and decoding methods substitute a replacement string for characters that cannot be encoded and byte sequences cannot be decoded. If you instantiated the replacement fallback object by calling the default constructor, the replacement character is a \\\"?\\\". If you call the <xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=fullName> or <xref:System.Text.DecoderReplacementFallback.%23ctor%28System.String%29?displayProperty=fullName> constructor, you can specify the replacement string.  \\n  \\n-   Best-fit fallback. You can derive from the <xref:System.Text.EncoderFallback> or <xref:System.Text.DecoderFallback> class to implement a best-fit replacement mechanism.\"\n  syntax:\n    content: public virtual System.Text.Encoding GetEncoding (string name, System.Text.EncoderFallback encoderFallback, System.Text.DecoderFallback decoderFallback);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the preferred encoding.\n    - id: encoderFallback\n      type: System.Text.EncoderFallback\n      description: An object that provides an error-handling procedure when a character cannot be encoded with this encoding.\n    - id: decoderFallback\n      type: System.Text.DecoderFallback\n      description: An object that provides an error-handling procedure when a byte sequence cannot be decoded with the current encoding.\n    return:\n      type: System.Text.Encoding\n      description: The encoding that is associated with the specified name, or `null` if this <xref href=\"System.Text.EncodingProvider\"></xref> cannot return a valid encoding that corresponds to <code>name</code>.\n  overload: System.Text.EncodingProvider.GetEncoding*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text/EncodingProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Text.EncodingProvider.#ctor\n  parent: System.Text.EncodingProvider\n  isExternal: false\n  name: EncodingProvider()\n  nameWithType: EncodingProvider.EncodingProvider()\n  fullName: EncodingProvider.EncodingProvider()\n- uid: System.Text.EncodingProvider.GetEncoding(System.Int32)\n  parent: System.Text.EncodingProvider\n  isExternal: false\n  name: GetEncoding(Int32)\n  nameWithType: EncodingProvider.GetEncoding(Int32)\n  fullName: EncodingProvider.GetEncoding(Int32)\n- uid: System.Text.Encoding\n  parent: System.Text\n  isExternal: false\n  name: Encoding\n  nameWithType: Encoding\n  fullName: System.Text.Encoding\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Text.EncodingProvider.GetEncoding(System.String)\n  parent: System.Text.EncodingProvider\n  isExternal: false\n  name: GetEncoding(String)\n  nameWithType: EncodingProvider.GetEncoding(String)\n  fullName: EncodingProvider.GetEncoding(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)\n  parent: System.Text.EncodingProvider\n  isExternal: false\n  name: GetEncoding(Int32, EncoderFallback, DecoderFallback)\n  nameWithType: EncodingProvider.GetEncoding(Int32, EncoderFallback, DecoderFallback)\n  fullName: EncodingProvider.GetEncoding(Int32, EncoderFallback, DecoderFallback)\n- uid: System.Text.EncoderFallback\n  parent: System.Text\n  isExternal: false\n  name: EncoderFallback\n  nameWithType: EncoderFallback\n  fullName: System.Text.EncoderFallback\n- uid: System.Text.DecoderFallback\n  parent: System.Text\n  isExternal: false\n  name: DecoderFallback\n  nameWithType: DecoderFallback\n  fullName: System.Text.DecoderFallback\n- uid: System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)\n  parent: System.Text.EncodingProvider\n  isExternal: false\n  name: GetEncoding(String, EncoderFallback, DecoderFallback)\n  nameWithType: EncodingProvider.GetEncoding(String, EncoderFallback, DecoderFallback)\n  fullName: EncodingProvider.GetEncoding(String, EncoderFallback, DecoderFallback)\n- uid: System.Text.EncodingProvider.#ctor*\n  parent: System.Text.EncodingProvider\n  isExternal: false\n  name: EncodingProvider\n  nameWithType: EncodingProvider.EncodingProvider\n  fullName: EncodingProvider.EncodingProvider\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text/EncodingProvider.xml\n- uid: System.Text.EncodingProvider.GetEncoding*\n  parent: System.Text.EncodingProvider\n  isExternal: false\n  name: GetEncoding\n  nameWithType: EncodingProvider.GetEncoding\n  fullName: EncodingProvider.GetEncoding\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text/EncodingProvider.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}