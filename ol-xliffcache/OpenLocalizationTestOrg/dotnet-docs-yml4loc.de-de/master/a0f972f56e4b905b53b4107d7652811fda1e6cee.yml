### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.Protocols.DirectoryAttribute
  commentId: T:System.DirectoryServices.Protocols.DirectoryAttribute
  id: DirectoryAttribute
  children:
  - System.DirectoryServices.Protocols.DirectoryAttribute.#ctor
  - System.DirectoryServices.Protocols.DirectoryAttribute.#ctor(System.String,System.Byte[])
  - System.DirectoryServices.Protocols.DirectoryAttribute.#ctor(System.String,System.Object[])
  - System.DirectoryServices.Protocols.DirectoryAttribute.#ctor(System.String,System.String)
  - System.DirectoryServices.Protocols.DirectoryAttribute.#ctor(System.String,System.Uri)
  - System.DirectoryServices.Protocols.DirectoryAttribute.Add(System.Byte[])
  - System.DirectoryServices.Protocols.DirectoryAttribute.Add(System.String)
  - System.DirectoryServices.Protocols.DirectoryAttribute.Add(System.Uri)
  - System.DirectoryServices.Protocols.DirectoryAttribute.AddRange(System.Object[])
  - System.DirectoryServices.Protocols.DirectoryAttribute.Contains(System.Object)
  - System.DirectoryServices.Protocols.DirectoryAttribute.CopyTo(System.Object[],System.Int32)
  - System.DirectoryServices.Protocols.DirectoryAttribute.GetValues(System.Type)
  - System.DirectoryServices.Protocols.DirectoryAttribute.IndexOf(System.Object)
  - System.DirectoryServices.Protocols.DirectoryAttribute.Insert(System.Int32,System.Byte[])
  - System.DirectoryServices.Protocols.DirectoryAttribute.Insert(System.Int32,System.String)
  - System.DirectoryServices.Protocols.DirectoryAttribute.Insert(System.Int32,System.Uri)
  - System.DirectoryServices.Protocols.DirectoryAttribute.Item(System.Int32)
  - System.DirectoryServices.Protocols.DirectoryAttribute.Name
  - System.DirectoryServices.Protocols.DirectoryAttribute.OnValidate(System.Object)
  - System.DirectoryServices.Protocols.DirectoryAttribute.Remove(System.Object)
  langs:
  - csharp
  name: DirectoryAttribute
  nameWithType: DirectoryAttribute
  fullName: System.DirectoryServices.Protocols.DirectoryAttribute
  type: Class
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: The <xref href="System.DirectoryServices.Protocols.DirectoryAttribute"></xref> class enables access to the attribute values.
  syntax:
    content: 'public class DirectoryAttribute : System.Collections.CollectionBase'
  inheritance:
  - System.Object
  - System.Collections.CollectionBase
  derivedClasses:
  - System.DirectoryServices.Protocols.DirectoryAttributeModification
  implements: []
  inheritedMembers:
  - System.Collections.CollectionBase.Capacity
  - System.Collections.CollectionBase.Clear
  - System.Collections.CollectionBase.Count
  - System.Collections.CollectionBase.GetEnumerator
  - System.Collections.CollectionBase.InnerList
  - System.Collections.CollectionBase.List
  - System.Collections.CollectionBase.OnClear
  - System.Collections.CollectionBase.OnClearComplete
  - System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)
  - System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)
  - System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)
  - System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)
  - System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)
  - System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)
  - System.Collections.CollectionBase.RemoveAt(System.Int32)
  - System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized
  - System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot
  - System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)
  - System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)
  - System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)
  - System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Collections.CollectionBase.System#Collections#IList#IsFixedSize
  - System.Collections.CollectionBase.System#Collections#IList#IsReadOnly
  - System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)
  - System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
  - System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
  - System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  - System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.Protocols/DirectoryAttribute.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.#ctor
  commentId: M:System.DirectoryServices.Protocols.DirectoryAttribute.#ctor
  id: '#ctor'
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  langs:
  - csharp
  name: DirectoryAttribute()
  nameWithType: DirectoryAttribute.DirectoryAttribute()
  fullName: DirectoryAttribute.DirectoryAttribute()
  type: Constructor
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: The <xref href="System.DirectoryServices.Protocols.DirectoryAttribute.#ctor"></xref> constructor creates an instance of the <xref href="System.DirectoryServices.Protocols.DirectoryAttribute"></xref> class.
  syntax:
    content: public DirectoryAttribute ();
    parameters: []
  overload: System.DirectoryServices.Protocols.DirectoryAttribute.#ctor*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.Protocols/DirectoryAttribute.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.#ctor(System.String,System.Byte[])
  commentId: M:System.DirectoryServices.Protocols.DirectoryAttribute.#ctor(System.String,System.Byte[])
  id: '#ctor(System.String,System.Byte[])'
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  langs:
  - csharp
  name: DirectoryAttribute(String, Byte[])
  nameWithType: DirectoryAttribute.DirectoryAttribute(String, Byte[])
  fullName: DirectoryAttribute.DirectoryAttribute(String, Byte[])
  type: Constructor
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: The <xref href="System.DirectoryServices.Protocols.DirectoryAttribute.#ctor(System.String,System.Byte[])"></xref> constructor creates an instance of the <xref href="System.DirectoryServices.Protocols.DirectoryAttribute"></xref> class using the specified attribute name and value.
  syntax:
    content: public DirectoryAttribute (string name, byte[] value);
    parameters:
    - id: name
      type: System.String
      description: The attribute name.
    - id: value
      type: System.Byte[]
      description: The attribute value.
  overload: System.DirectoryServices.Protocols.DirectoryAttribute.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>name</code> or <code>value</code> contains a null reference (`Nothing` in Visual Basic).
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.Protocols/DirectoryAttribute.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.#ctor(System.String,System.Object[])
  commentId: M:System.DirectoryServices.Protocols.DirectoryAttribute.#ctor(System.String,System.Object[])
  id: '#ctor(System.String,System.Object[])'
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  langs:
  - csharp
  name: DirectoryAttribute(String, Object[])
  nameWithType: DirectoryAttribute.DirectoryAttribute(String, Object[])
  fullName: DirectoryAttribute.DirectoryAttribute(String, Object[])
  type: Constructor
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: The <xref href="System.DirectoryServices.Protocols.DirectoryAttribute.#ctor(System.String,System.Object[])"></xref> constructor creates an instance of the <xref href="System.DirectoryServices.Protocols.DirectoryAttribute"></xref> class using the specified attribute name and values.
  syntax:
    content: public DirectoryAttribute (string name, object[] values);
    parameters:
    - id: name
      type: System.String
      description: The attribute name.
    - id: values
      type: System.Object[]
      description: An array of values for the attribute.
  overload: System.DirectoryServices.Protocols.DirectoryAttribute.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>name</code> or <code>value</code> contains a null reference (<code>Nothing</code> in Visual Basic).
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: An element of <code>values</code> is not of type string, byte[], or Uri.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.Protocols/DirectoryAttribute.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.#ctor(System.String,System.String)
  commentId: M:System.DirectoryServices.Protocols.DirectoryAttribute.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  langs:
  - csharp
  name: DirectoryAttribute(String, String)
  nameWithType: DirectoryAttribute.DirectoryAttribute(String, String)
  fullName: DirectoryAttribute.DirectoryAttribute(String, String)
  type: Constructor
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: The <xref href="System.DirectoryServices.Protocols.DirectoryAttribute.#ctor(System.String,System.String)"></xref> constructor creates an instance of the <xref href="System.DirectoryServices.Protocols.DirectoryAttribute"></xref> class using the specified attribute name and value.
  syntax:
    content: public DirectoryAttribute (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: The attribute name.
    - id: value
      type: System.String
      description: The attribute value.
  overload: System.DirectoryServices.Protocols.DirectoryAttribute.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>name</code> or <code>value</code> contains a null reference (`Nothing` in Visual Basic).
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.Protocols/DirectoryAttribute.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.#ctor(System.String,System.Uri)
  commentId: M:System.DirectoryServices.Protocols.DirectoryAttribute.#ctor(System.String,System.Uri)
  id: '#ctor(System.String,System.Uri)'
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  langs:
  - csharp
  name: DirectoryAttribute(String, Uri)
  nameWithType: DirectoryAttribute.DirectoryAttribute(String, Uri)
  fullName: DirectoryAttribute.DirectoryAttribute(String, Uri)
  type: Constructor
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: The <xref href="System.DirectoryServices.Protocols.DirectoryAttribute.#ctor(System.String,System.Uri)"></xref> constructor creates an instance of the <xref href="System.DirectoryServices.Protocols.DirectoryAttribute"></xref> class using the specified attribute name and value.
  syntax:
    content: public DirectoryAttribute (string name, Uri value);
    parameters:
    - id: name
      type: System.String
      description: The attribute name.
    - id: value
      type: System.Uri
      description: The attribute value.
  overload: System.DirectoryServices.Protocols.DirectoryAttribute.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>name</code> or <code>value</code> contains a null reference (`Nothing` in Visual Basic).
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.Protocols/DirectoryAttribute.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Add(System.Byte[])
  commentId: M:System.DirectoryServices.Protocols.DirectoryAttribute.Add(System.Byte[])
  id: Add(System.Byte[])
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  langs:
  - csharp
  name: Add(Byte[])
  nameWithType: DirectoryAttribute.Add(Byte[])
  fullName: DirectoryAttribute.Add(Byte[])
  type: Method
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: The <xref href="System.DirectoryServices.Protocols.DirectoryAttribute.Add(System.Byte[])"></xref> method adds the specified value to this attribute.
  syntax:
    content: public int Add (byte[] value);
    parameters:
    - id: value
      type: System.Byte[]
      description: The value to add.
    return:
      type: System.Int32
      description: The index at which the value has been added.
  overload: System.DirectoryServices.Protocols.DirectoryAttribute.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>Value</code> contains a null reference (`Nothing` in Visual Basic).
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.Protocols/DirectoryAttribute.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Add(System.String)
  commentId: M:System.DirectoryServices.Protocols.DirectoryAttribute.Add(System.String)
  id: Add(System.String)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  langs:
  - csharp
  name: Add(String)
  nameWithType: DirectoryAttribute.Add(String)
  fullName: DirectoryAttribute.Add(String)
  type: Method
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: The <xref href="System.DirectoryServices.Protocols.DirectoryAttribute.Add(System.String)"></xref> method adds the specified value to this attribute.
  syntax:
    content: public int Add (string value);
    parameters:
    - id: value
      type: System.String
      description: The value to add.
    return:
      type: System.Int32
      description: The index at which the value has been added.
  overload: System.DirectoryServices.Protocols.DirectoryAttribute.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>Value</code> contains a null reference (`Nothing` in Visual Basic).
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.Protocols/DirectoryAttribute.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Add(System.Uri)
  commentId: M:System.DirectoryServices.Protocols.DirectoryAttribute.Add(System.Uri)
  id: Add(System.Uri)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  langs:
  - csharp
  name: Add(Uri)
  nameWithType: DirectoryAttribute.Add(Uri)
  fullName: DirectoryAttribute.Add(Uri)
  type: Method
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: The <xref href="System.DirectoryServices.Protocols.DirectoryAttribute.Add(System.Uri)"></xref> method adds the specified value to this attribute.
  syntax:
    content: public int Add (Uri value);
    parameters:
    - id: value
      type: System.Uri
      description: The value to add.
    return:
      type: System.Int32
      description: The index at which the value has been added.
  overload: System.DirectoryServices.Protocols.DirectoryAttribute.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>Value</code> contains a null reference (`Nothing` in Visual Basic).
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.Protocols/DirectoryAttribute.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.AddRange(System.Object[])
  commentId: M:System.DirectoryServices.Protocols.DirectoryAttribute.AddRange(System.Object[])
  id: AddRange(System.Object[])
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  langs:
  - csharp
  name: AddRange(Object[])
  nameWithType: DirectoryAttribute.AddRange(Object[])
  fullName: DirectoryAttribute.AddRange(Object[])
  type: Method
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: The <xref href="System.DirectoryServices.Protocols.DirectoryAttribute.AddRange(System.Object[])"></xref> method adds an array of values to the attribute.
  syntax:
    content: public void AddRange (object[] values);
    parameters:
    - id: values
      type: System.Object[]
      description: The values to add.
  overload: System.DirectoryServices.Protocols.DirectoryAttribute.AddRange*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>values</code> is not a  byte[][], string[], or Uri[].
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>Values</code> contains a null reference (`Nothing` in Visual Basic).
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.Protocols/DirectoryAttribute.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Contains(System.Object)
  commentId: M:System.DirectoryServices.Protocols.DirectoryAttribute.Contains(System.Object)
  id: Contains(System.Object)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  langs:
  - csharp
  name: Contains(Object)
  nameWithType: DirectoryAttribute.Contains(Object)
  fullName: DirectoryAttribute.Contains(Object)
  type: Method
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: The <xref href="System.DirectoryServices.Protocols.DirectoryAttribute.Contains(System.Object)"></xref> method determines if the attribute contains the specified value.
  syntax:
    content: public bool Contains (object value);
    parameters:
    - id: value
      type: System.Object
      description: The value for which to search.
    return:
      type: System.Boolean
      description: '`true` if this attribute contains the value or `false` if it does not.'
  overload: System.DirectoryServices.Protocols.DirectoryAttribute.Contains*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.Protocols/DirectoryAttribute.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.CopyTo(System.Object[],System.Int32)
  commentId: M:System.DirectoryServices.Protocols.DirectoryAttribute.CopyTo(System.Object[],System.Int32)
  id: CopyTo(System.Object[],System.Int32)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  langs:
  - csharp
  name: CopyTo(Object[], Int32)
  nameWithType: DirectoryAttribute.CopyTo(Object[], Int32)
  fullName: DirectoryAttribute.CopyTo(Object[], Int32)
  type: Method
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: The <xref href="System.DirectoryServices.Protocols.DirectoryAttribute.CopyTo(System.Object[],System.Int32)"></xref> method copies the entire collection to a one-dimensional array, starting at the specified index of the target array.
  syntax:
    content: public void CopyTo (object[] array, int index);
    parameters:
    - id: array
      type: System.Object[]
      description: A one-dimensional array that is the destination of the elements copied from the <xref href="System.DirectoryServices.Protocols.DirectoryAttribute"></xref> object.
    - id: index
      type: System.Int32
      description: The zero-based index of <code>array</code> where the copying begins.
  overload: System.DirectoryServices.Protocols.DirectoryAttribute.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>array</code> contains a null reference (`Nothing` in Visual Basic).
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>index</code> is less than zero.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "This exception can occur under one of the following conditions:  \n  \n-   <code>array</code> is multidimensional  \n  \n-   <code>index</code> is equal to, or greater than, the length of <code>array</code>  \n  \n-   The number of elements in the source <xref href=\"System.DirectoryServices.Protocols.DirectoryControlCollection\"></xref> is greater than the space available from <code>index</code> to the end of the destination <code>array</code>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: The type of the source <xref href="System.DirectoryServices.Protocols.DirectoryControlCollection"></xref> cannot be cast automatically to the type of the destination <code>array</code>.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.Protocols/DirectoryAttribute.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.GetValues(System.Type)
  commentId: M:System.DirectoryServices.Protocols.DirectoryAttribute.GetValues(System.Type)
  id: GetValues(System.Type)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  langs:
  - csharp
  name: GetValues(Type)
  nameWithType: DirectoryAttribute.GetValues(Type)
  fullName: DirectoryAttribute.GetValues(Type)
  type: Method
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: The <xref href="System.DirectoryServices.Protocols.DirectoryAttribute.GetValues(System.Type)"></xref> method returns all values of the specified type.
  syntax:
    content: public object[] GetValues (Type valuesType);
    parameters:
    - id: valuesType
      type: System.Type
      description: A <xref href="System.Type"></xref> object that specifies the type of values to return.
    return:
      type: System.Object[]
      description: An array of <xref href="System.Object"></xref> objects that contain the values.
  overload: System.DirectoryServices.Protocols.DirectoryAttribute.GetValues*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: A value cannot be converted to <code>valuesType</code>.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>valuesType</code> must be either string or byte.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.Protocols/DirectoryAttribute.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.IndexOf(System.Object)
  commentId: M:System.DirectoryServices.Protocols.DirectoryAttribute.IndexOf(System.Object)
  id: IndexOf(System.Object)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  langs:
  - csharp
  name: IndexOf(Object)
  nameWithType: DirectoryAttribute.IndexOf(Object)
  fullName: DirectoryAttribute.IndexOf(Object)
  type: Method
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: The <xref href="System.DirectoryServices.Protocols.DirectoryAttribute.IndexOf(System.Object)"></xref> method returns the zero-based index of the first occurrence of the specified  <xref href="System.Object"></xref> in the <xref href="System.DirectoryServices.Protocols.DirectoryAttribute"></xref> collection.
  syntax:
    content: public int IndexOf (object value);
    parameters:
    - id: value
      type: System.Object
      description: The <xref href="System.Object"></xref> for which the value is returned.
    return:
      type: System.Int32
      description: The index value of the specified <xref href="System.Object"></xref>, if found; otherwise, -1.
  overload: System.DirectoryServices.Protocols.DirectoryAttribute.IndexOf*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.Protocols/DirectoryAttribute.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Insert(System.Int32,System.Byte[])
  commentId: M:System.DirectoryServices.Protocols.DirectoryAttribute.Insert(System.Int32,System.Byte[])
  id: Insert(System.Int32,System.Byte[])
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  langs:
  - csharp
  name: Insert(Int32, Byte[])
  nameWithType: DirectoryAttribute.Insert(Int32, Byte[])
  fullName: DirectoryAttribute.Insert(Int32, Byte[])
  type: Method
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: The <xref href="System.DirectoryServices.Protocols.DirectoryAttribute.Insert(System.Int32,System.Byte[])"></xref> method inserts the specified <code>value</code> into the <xref href="System.DirectoryServices.Protocols.DirectoryAttribute"></xref> collection at the specified <code>index</code>.
  syntax:
    content: public void Insert (int index, byte[] value);
    parameters:
    - id: index
      type: System.Int32
      description: The index in the <xref href="System.DirectoryServices.Protocols.DirectoryAttribute"></xref> collection at which to insert the <code>value</code>.
    - id: value
      type: System.Byte[]
      description: The value to insert.
  overload: System.DirectoryServices.Protocols.DirectoryAttribute.Insert*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>value</code> contains a null reference (`Nothing` in Visual Basic).
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>index</code> is less than zero, or `index` is greater than the number of elements in the <xref href="System.DirectoryServices.Protocols.DirectoryAttribute"></xref> object.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.Protocols/DirectoryAttribute.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Insert(System.Int32,System.String)
  commentId: M:System.DirectoryServices.Protocols.DirectoryAttribute.Insert(System.Int32,System.String)
  id: Insert(System.Int32,System.String)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  langs:
  - csharp
  name: Insert(Int32, String)
  nameWithType: DirectoryAttribute.Insert(Int32, String)
  fullName: DirectoryAttribute.Insert(Int32, String)
  type: Method
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: The <xref href="System.DirectoryServices.Protocols.DirectoryAttribute.Insert(System.Int32,System.String)"></xref> method inserts the specified <code>value</code> into the <xref href="System.DirectoryServices.Protocols.DirectoryAttribute"></xref> collection at the specified <code>index</code>.
  syntax:
    content: public void Insert (int index, string value);
    parameters:
    - id: index
      type: System.Int32
      description: The index in the <xref href="System.DirectoryServices.Protocols.DirectoryAttribute"></xref> collection at which to insert the <code>value</code>.
    - id: value
      type: System.String
      description: The value to insert.
  overload: System.DirectoryServices.Protocols.DirectoryAttribute.Insert*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>value</code> contains a null reference (`Nothing` in Visual Basic).
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>index</code> is less than zero, or <code>index</code> is greater than  the number of elements in the <xref href="System.DirectoryServices.Protocols.DirectoryAttribute"></xref> object.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.Protocols/DirectoryAttribute.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Insert(System.Int32,System.Uri)
  commentId: M:System.DirectoryServices.Protocols.DirectoryAttribute.Insert(System.Int32,System.Uri)
  id: Insert(System.Int32,System.Uri)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  langs:
  - csharp
  name: Insert(Int32, Uri)
  nameWithType: DirectoryAttribute.Insert(Int32, Uri)
  fullName: DirectoryAttribute.Insert(Int32, Uri)
  type: Method
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: The <xref href="System.DirectoryServices.Protocols.DirectoryAttribute.Insert(System.Int32,System.Uri)"></xref> method inserts the specified <code>value</code> into the <xref href="System.DirectoryServices.Protocols.DirectoryAttribute"></xref> collection at the specified <code>index</code>.
  syntax:
    content: public void Insert (int index, Uri value);
    parameters:
    - id: index
      type: System.Int32
      description: The index in the <xref href="System.DirectoryServices.Protocols.DirectoryAttribute"></xref> collection at which to insert the <code>value</code>.
    - id: value
      type: System.Uri
      description: The value to insert.
  overload: System.DirectoryServices.Protocols.DirectoryAttribute.Insert*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>value</code> contains a null reference (`Nothing` in Visual Basic).
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>index</code> is less than zero or <code>index</code> is greater than the number of elements in the <xref href="System.DirectoryServices.Protocols.DirectoryAttribute"></xref> object.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.Protocols/DirectoryAttribute.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Item(System.Int32)
  commentId: P:System.DirectoryServices.Protocols.DirectoryAttribute.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: DirectoryAttribute.Item(Int32)
  fullName: DirectoryAttribute.Item(Int32)
  type: Property
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: The <xref href="System.DirectoryServices.Protocols.DirectoryAttribute.Item(System.Int32)"></xref> property gets or sets the <xref href="System.DirectoryServices.Protocols.DirectoryAttribute"></xref> object at the specified index.
  remarks: The Get method of <xref:System.DirectoryServices.Protocols.DirectoryAttribute.Item%2A> always attempts to convert and return the value object as a string; otherwise it returns a byte array. To get a better performance, use the <xref:System.DirectoryServices.Protocols.DirectoryAttribute.GetValues%2A> method if you know the return type of the attribute value.
  syntax:
    content: public object this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index value at which the <xref href="System.DirectoryServices.Protocols.DirectoryAttribute"></xref> object is found.
    return:
      type: System.Object
      description: The <xref href="System.DirectoryServices.Protocols.DirectoryAttribute"></xref> object at the specified index.
  overload: System.DirectoryServices.Protocols.DirectoryAttribute.Item*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>value</code> to set is an invalid type. The valid types are byte[], string, or URI.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>value</code> contains a null reference (`Nothing` in Visual Basic).
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.Protocols/DirectoryAttribute.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Name
  commentId: P:System.DirectoryServices.Protocols.DirectoryAttribute.Name
  id: Name
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  langs:
  - csharp
  name: Name
  nameWithType: DirectoryAttribute.Name
  fullName: DirectoryAttribute.Name
  type: Property
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: The <xref href="System.DirectoryServices.Protocols.DirectoryAttribute.Name"></xref> property contains the attribute name.
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: The attribute name.
  overload: System.DirectoryServices.Protocols.DirectoryAttribute.Name*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>value</code> contains a null reference (`Nothing` in Visual Basic).
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.Protocols/DirectoryAttribute.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.OnValidate(System.Object)
  commentId: M:System.DirectoryServices.Protocols.DirectoryAttribute.OnValidate(System.Object)
  id: OnValidate(System.Object)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  langs:
  - csharp
  name: OnValidate(Object)
  nameWithType: DirectoryAttribute.OnValidate(Object)
  fullName: DirectoryAttribute.OnValidate(Object)
  type: Method
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: The <xref href="System.DirectoryServices.Protocols.DirectoryAttribute.OnValidate(System.Object)"></xref> method verifies that <code>value</code> is a <xref href="System.DirectoryServices.Protocols.DirectoryAttribute"></xref> object.
  remarks: This method does not return a value. Instead, an exception is thrown if the specified object is null or is an invalid <xref:System.DirectoryServices.Protocols.DirectoryAttribute> object.
  syntax:
    content: protected override void OnValidate (object value);
    parameters:
    - id: value
      type: System.Object
      description: The <xref href="System.Object"></xref> to evaluate.
  overload: System.DirectoryServices.Protocols.DirectoryAttribute.OnValidate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>value</code> contains a null reference (`Nothing` in Visual Basic).
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>value</code> must be either a string, byte[], or URI.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.Protocols/DirectoryAttribute.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Remove(System.Object)
  commentId: M:System.DirectoryServices.Protocols.DirectoryAttribute.Remove(System.Object)
  id: Remove(System.Object)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  langs:
  - csharp
  name: Remove(Object)
  nameWithType: DirectoryAttribute.Remove(Object)
  fullName: DirectoryAttribute.Remove(Object)
  type: Method
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: The <xref href="System.DirectoryServices.Protocols.DirectoryAttribute.Remove(System.Object)"></xref> method removes the first occurrence of the specified <code>value</code> from the list of attributes.
  syntax:
    content: public void Remove (object value);
    parameters:
    - id: value
      type: System.Object
      description: The <xref href="System.Object"></xref> to remove.
  overload: System.DirectoryServices.Protocols.DirectoryAttribute.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>value</code> contains a null reference (`Nothing` in Visual Basic).
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.Protocols/DirectoryAttribute.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
references:
- uid: System.Collections.CollectionBase
  parent: System.Collections
  isExternal: false
  name: CollectionBase
  nameWithType: CollectionBase
  fullName: System.Collections.CollectionBase
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  parent: System
  isExternal: false
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.InvalidCastException
  parent: System
  isExternal: false
  name: InvalidCastException
  nameWithType: InvalidCastException
  fullName: System.InvalidCastException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  nameWithType: NotSupportedException
  fullName: System.NotSupportedException
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.#ctor
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: DirectoryAttribute()
  nameWithType: DirectoryAttribute.DirectoryAttribute()
  fullName: DirectoryAttribute.DirectoryAttribute()
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.#ctor(System.String,System.Byte[])
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: DirectoryAttribute(String, Byte[])
  nameWithType: DirectoryAttribute.DirectoryAttribute(String, Byte[])
  fullName: DirectoryAttribute.DirectoryAttribute(String, Byte[])
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Byte
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Byte[]
  parent: System
  isExternal: false
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.#ctor(System.String,System.Object[])
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: DirectoryAttribute(String, Object[])
  nameWithType: DirectoryAttribute.DirectoryAttribute(String, Object[])
  fullName: DirectoryAttribute.DirectoryAttribute(String, Object[])
- uid: System.Object
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object[]
  parent: System
  isExternal: false
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.#ctor(System.String,System.String)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: DirectoryAttribute(String, String)
  nameWithType: DirectoryAttribute.DirectoryAttribute(String, String)
  fullName: DirectoryAttribute.DirectoryAttribute(String, String)
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.#ctor(System.String,System.Uri)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: DirectoryAttribute(String, Uri)
  nameWithType: DirectoryAttribute.DirectoryAttribute(String, Uri)
  fullName: DirectoryAttribute.DirectoryAttribute(String, Uri)
- uid: System.Uri
  parent: System
  isExternal: false
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Add(System.Byte[])
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: Add(Byte[])
  nameWithType: DirectoryAttribute.Add(Byte[])
  fullName: DirectoryAttribute.Add(Byte[])
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Add(System.String)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: Add(String)
  nameWithType: DirectoryAttribute.Add(String)
  fullName: DirectoryAttribute.Add(String)
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Add(System.Uri)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: Add(Uri)
  nameWithType: DirectoryAttribute.Add(Uri)
  fullName: DirectoryAttribute.Add(Uri)
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.AddRange(System.Object[])
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: AddRange(Object[])
  nameWithType: DirectoryAttribute.AddRange(Object[])
  fullName: DirectoryAttribute.AddRange(Object[])
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Contains(System.Object)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: Contains(Object)
  nameWithType: DirectoryAttribute.Contains(Object)
  fullName: DirectoryAttribute.Contains(Object)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.CopyTo(System.Object[],System.Int32)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: CopyTo(Object[], Int32)
  nameWithType: DirectoryAttribute.CopyTo(Object[], Int32)
  fullName: DirectoryAttribute.CopyTo(Object[], Int32)
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.GetValues(System.Type)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: GetValues(Type)
  nameWithType: DirectoryAttribute.GetValues(Type)
  fullName: DirectoryAttribute.GetValues(Type)
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.IndexOf(System.Object)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: IndexOf(Object)
  nameWithType: DirectoryAttribute.IndexOf(Object)
  fullName: DirectoryAttribute.IndexOf(Object)
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Insert(System.Int32,System.Byte[])
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: Insert(Int32, Byte[])
  nameWithType: DirectoryAttribute.Insert(Int32, Byte[])
  fullName: DirectoryAttribute.Insert(Int32, Byte[])
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Insert(System.Int32,System.String)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: Insert(Int32, String)
  nameWithType: DirectoryAttribute.Insert(Int32, String)
  fullName: DirectoryAttribute.Insert(Int32, String)
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Insert(System.Int32,System.Uri)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: Insert(Int32, Uri)
  nameWithType: DirectoryAttribute.Insert(Int32, Uri)
  fullName: DirectoryAttribute.Insert(Int32, Uri)
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Item(System.Int32)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: Item(Int32)
  nameWithType: DirectoryAttribute.Item(Int32)
  fullName: DirectoryAttribute.Item(Int32)
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Name
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: Name
  nameWithType: DirectoryAttribute.Name
  fullName: DirectoryAttribute.Name
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.OnValidate(System.Object)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: OnValidate(Object)
  nameWithType: DirectoryAttribute.OnValidate(Object)
  fullName: DirectoryAttribute.OnValidate(Object)
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Remove(System.Object)
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: Remove(Object)
  nameWithType: DirectoryAttribute.Remove(Object)
  fullName: DirectoryAttribute.Remove(Object)
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.#ctor*
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: DirectoryAttribute
  nameWithType: DirectoryAttribute.DirectoryAttribute
  fullName: DirectoryAttribute.DirectoryAttribute
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.Protocols/DirectoryAttribute.xml
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Add*
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: Add
  nameWithType: DirectoryAttribute.Add
  fullName: DirectoryAttribute.Add
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.Protocols/DirectoryAttribute.xml
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.AddRange*
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: AddRange
  nameWithType: DirectoryAttribute.AddRange
  fullName: DirectoryAttribute.AddRange
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.Protocols/DirectoryAttribute.xml
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Contains*
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: Contains
  nameWithType: DirectoryAttribute.Contains
  fullName: DirectoryAttribute.Contains
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.Protocols/DirectoryAttribute.xml
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.CopyTo*
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: CopyTo
  nameWithType: DirectoryAttribute.CopyTo
  fullName: DirectoryAttribute.CopyTo
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.Protocols/DirectoryAttribute.xml
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.GetValues*
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: GetValues
  nameWithType: DirectoryAttribute.GetValues
  fullName: DirectoryAttribute.GetValues
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.Protocols/DirectoryAttribute.xml
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.IndexOf*
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: IndexOf
  nameWithType: DirectoryAttribute.IndexOf
  fullName: DirectoryAttribute.IndexOf
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.Protocols/DirectoryAttribute.xml
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Insert*
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: Insert
  nameWithType: DirectoryAttribute.Insert
  fullName: DirectoryAttribute.Insert
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.Protocols/DirectoryAttribute.xml
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Item*
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: Item
  nameWithType: DirectoryAttribute.Item
  fullName: DirectoryAttribute.Item
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.Protocols/DirectoryAttribute.xml
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Name*
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: Name
  nameWithType: DirectoryAttribute.Name
  fullName: DirectoryAttribute.Name
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.Protocols/DirectoryAttribute.xml
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.OnValidate*
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: OnValidate
  nameWithType: DirectoryAttribute.OnValidate
  fullName: DirectoryAttribute.OnValidate
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.Protocols/DirectoryAttribute.xml
- uid: System.DirectoryServices.Protocols.DirectoryAttribute.Remove*
  parent: System.DirectoryServices.Protocols.DirectoryAttribute
  isExternal: false
  name: Remove
  nameWithType: DirectoryAttribute.Remove
  fullName: DirectoryAttribute.Remove
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.Protocols/DirectoryAttribute.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.Collections.CollectionBase.Capacity
  parent: System.Collections.CollectionBase
  isExternal: false
  name: Capacity
  nameWithType: CollectionBase.Capacity
  fullName: CollectionBase.Capacity
- uid: System.Collections.CollectionBase.Clear
  parent: System.Collections.CollectionBase
  isExternal: false
  name: Clear()
  nameWithType: CollectionBase.Clear()
  fullName: CollectionBase.Clear()
- uid: System.Collections.CollectionBase.Count
  parent: System.Collections.CollectionBase
  isExternal: false
  name: Count
  nameWithType: CollectionBase.Count
  fullName: CollectionBase.Count
- uid: System.Collections.CollectionBase.GetEnumerator
  parent: System.Collections.CollectionBase
  isExternal: false
  name: GetEnumerator()
  nameWithType: CollectionBase.GetEnumerator()
  fullName: CollectionBase.GetEnumerator()
- uid: System.Collections.CollectionBase.InnerList
  parent: System.Collections.CollectionBase
  isExternal: false
  name: InnerList
  nameWithType: CollectionBase.InnerList
  fullName: CollectionBase.InnerList
- uid: System.Collections.CollectionBase.List
  parent: System.Collections.CollectionBase
  isExternal: false
  name: List
  nameWithType: CollectionBase.List
  fullName: CollectionBase.List
- uid: System.Collections.CollectionBase.OnClear
  parent: System.Collections.CollectionBase
  isExternal: false
  name: OnClear()
  nameWithType: CollectionBase.OnClear()
  fullName: CollectionBase.OnClear()
- uid: System.Collections.CollectionBase.OnClearComplete
  parent: System.Collections.CollectionBase
  isExternal: false
  name: OnClearComplete()
  nameWithType: CollectionBase.OnClearComplete()
  fullName: CollectionBase.OnClearComplete()
- uid: System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)
  parent: System.Collections.CollectionBase
  isExternal: false
  name: OnInsert(Int32, Object)
  nameWithType: CollectionBase.OnInsert(Int32, Object)
  fullName: CollectionBase.OnInsert(Int32, Object)
- uid: System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)
  parent: System.Collections.CollectionBase
  isExternal: false
  name: OnInsertComplete(Int32, Object)
  nameWithType: CollectionBase.OnInsertComplete(Int32, Object)
  fullName: CollectionBase.OnInsertComplete(Int32, Object)
- uid: System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)
  parent: System.Collections.CollectionBase
  isExternal: false
  name: OnRemove(Int32, Object)
  nameWithType: CollectionBase.OnRemove(Int32, Object)
  fullName: CollectionBase.OnRemove(Int32, Object)
- uid: System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)
  parent: System.Collections.CollectionBase
  isExternal: false
  name: OnRemoveComplete(Int32, Object)
  nameWithType: CollectionBase.OnRemoveComplete(Int32, Object)
  fullName: CollectionBase.OnRemoveComplete(Int32, Object)
- uid: System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)
  parent: System.Collections.CollectionBase
  isExternal: false
  name: OnSet(Int32, Object, Object)
  nameWithType: CollectionBase.OnSet(Int32, Object, Object)
  fullName: CollectionBase.OnSet(Int32, Object, Object)
- uid: System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)
  parent: System.Collections.CollectionBase
  isExternal: false
  name: OnSetComplete(Int32, Object, Object)
  nameWithType: CollectionBase.OnSetComplete(Int32, Object, Object)
  fullName: CollectionBase.OnSetComplete(Int32, Object, Object)
- uid: System.Collections.CollectionBase.RemoveAt(System.Int32)
  parent: System.Collections.CollectionBase
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: CollectionBase.RemoveAt(Int32)
  fullName: CollectionBase.RemoveAt(Int32)
- uid: System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Collections.CollectionBase
  isExternal: false
  name: ICollection.CopyTo(Array, Int32)
  nameWithType: CollectionBase.ICollection.CopyTo(Array, Int32)
  fullName: CollectionBase.ICollection.CopyTo(Array, Int32)
- uid: System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized
  parent: System.Collections.CollectionBase
  isExternal: false
  name: ICollection.IsSynchronized
  nameWithType: CollectionBase.ICollection.IsSynchronized
  fullName: CollectionBase.ICollection.IsSynchronized
- uid: System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot
  parent: System.Collections.CollectionBase
  isExternal: false
  name: ICollection.SyncRoot
  nameWithType: CollectionBase.ICollection.SyncRoot
  fullName: CollectionBase.ICollection.SyncRoot
- uid: System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)
  parent: System.Collections.CollectionBase
  isExternal: false
  name: IList.Add(Object)
  nameWithType: CollectionBase.IList.Add(Object)
  fullName: CollectionBase.IList.Add(Object)
- uid: System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)
  parent: System.Collections.CollectionBase
  isExternal: false
  name: IList.Contains(Object)
  nameWithType: CollectionBase.IList.Contains(Object)
  fullName: CollectionBase.IList.Contains(Object)
- uid: System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)
  parent: System.Collections.CollectionBase
  isExternal: false
  name: IList.IndexOf(Object)
  nameWithType: CollectionBase.IList.IndexOf(Object)
  fullName: CollectionBase.IList.IndexOf(Object)
- uid: System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Collections.CollectionBase
  isExternal: false
  name: IList.Insert(Int32, Object)
  nameWithType: CollectionBase.IList.Insert(Int32, Object)
  fullName: CollectionBase.IList.Insert(Int32, Object)
- uid: System.Collections.CollectionBase.System#Collections#IList#IsFixedSize
  parent: System.Collections.CollectionBase
  isExternal: false
  name: IList.IsFixedSize
  nameWithType: CollectionBase.IList.IsFixedSize
  fullName: CollectionBase.IList.IsFixedSize
- uid: System.Collections.CollectionBase.System#Collections#IList#IsReadOnly
  parent: System.Collections.CollectionBase
  isExternal: false
  name: IList.IsReadOnly
  nameWithType: CollectionBase.IList.IsReadOnly
  fullName: CollectionBase.IList.IsReadOnly
- uid: System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)
  parent: System.Collections.CollectionBase
  isExternal: false
  name: IList.Item(Int32)
  nameWithType: CollectionBase.IList.Item(Int32)
  fullName: CollectionBase.IList.Item(Int32)
- uid: System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)
  parent: System.Collections.CollectionBase
  isExternal: false
  name: IList.Remove(Object)
  nameWithType: CollectionBase.IList.Remove(Object)
  fullName: CollectionBase.IList.Remove(Object)
- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Cast<TResult>(IEnumerable)
  nameWithType: Enumerable.Cast<TResult>(IEnumerable)
  fullName: Enumerable.Cast<TResult>(IEnumerable)
- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
  parent: System.Linq.Enumerable
  isExternal: false
  name: OfType<TResult>(IEnumerable)
  nameWithType: Enumerable.OfType<TResult>(IEnumerable)
  fullName: Enumerable.OfType<TResult>(IEnumerable)
- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: AsParallel(IEnumerable)
  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)
  fullName: ParallelEnumerable.AsParallel(IEnumerable)
- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  parent: System.Linq.Queryable
  isExternal: false
  name: AsQueryable(IEnumerable)
  nameWithType: Queryable.AsQueryable(IEnumerable)
  fullName: Queryable.AsQueryable(IEnumerable)
