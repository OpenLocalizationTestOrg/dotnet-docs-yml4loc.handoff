{"nodes":[{"content":"Represents the metadata that describes a table for use by Dynamic Data pages.","nodes":[{"pos":[0,77],"content":"Represents the metadata that describes a table for use by Dynamic Data pages.","nodes":[{"content":"Represents the metadata that describes a table for use by Dynamic Data pages.","pos":[0,77]}]}],"pos":[4271,4349],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Web.DynamicData.MetaTable\"></xref> class.","nodes":[{"pos":[0,94],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Web.DynamicData.MetaTable\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Web.DynamicData.MetaTable\"></xref> class."}],"pos":[6828,6923],"yaml":true},{"content":"The `tableProvider` parameter is used to initialize the <xref:System.Web.DynamicData.MetaTable.DataContextPropertyName%2A> property.","nodes":[{"pos":[0,132],"content":"The <ph id=\"ph1\">`tableProvider`</ph> parameter is used to initialize the <ph id=\"ph2\">&lt;xref:System.Web.DynamicData.MetaTable.DataContextPropertyName%2A&gt;</ph> property.","source":"The `tableProvider` parameter is used to initialize the <xref:System.Web.DynamicData.MetaTable.DataContextPropertyName%2A> property."}],"pos":[6934,7067],"yaml":true,"extradata":"MT"},{"content":"The entity meta model.","nodes":[{"pos":[0,22],"content":"The entity meta model.","nodes":[{"content":"The entity meta model.","pos":[0,22]}]}],"pos":[7320,7343],"yaml":true},{"content":"The entity model provider.","nodes":[{"pos":[0,26],"content":"The entity model provider.","nodes":[{"content":"The entity model provider.","pos":[0,26]}]}],"pos":[7450,7477],"yaml":true},{"content":"Gets the attributes that are associated with the table.","nodes":[{"pos":[0,55],"content":"Gets the attributes that are associated with the table.","nodes":[{"content":"Gets the attributes that are associated with the table.","pos":[0,55]}]}],"pos":[8443,8499],"yaml":true},{"content":"A collection that contains the attributes of the table.","nodes":[{"pos":[0,55],"content":"A collection that contains the attributes of the table.","nodes":[{"content":"A collection that contains the attributes of the table.","pos":[0,55]}]}],"pos":[8676,8732],"yaml":true},{"content":"Creates the attribute collection.","nodes":[{"pos":[0,33],"content":"Creates the attribute collection.","nodes":[{"content":"Creates the attribute collection.","pos":[0,33]}]}],"pos":[9791,9825],"yaml":true},{"content":"The attribute collection.","nodes":[{"pos":[0,25],"content":"The attribute collection.","nodes":[{"content":"The attribute collection.","pos":[0,25]}]}],"pos":[10041,10067],"yaml":true},{"content":"Gets a value that indicates whether the specified user is allowed to perform delete operations.","nodes":[{"pos":[0,95],"content":"Gets a value that indicates whether the specified user is allowed to perform delete operations.","nodes":[{"content":"Gets a value that indicates whether the specified user is allowed to perform delete operations.","pos":[0,95]}]}],"pos":[11194,11290],"yaml":true},{"content":"A principal object represents the security context of the user on whose behalf the code is running, including that user's identity and any roles to which they belong.","nodes":[{"pos":[0,166],"content":"A principal object represents the security context of the user on whose behalf the code is running, including that user's identity and any roles to which they belong.","nodes":[{"content":"A principal object represents the security context of the user on whose behalf the code is running, including that user's identity and any roles to which they belong.","pos":[0,166]}]}],"pos":[11301,11468],"yaml":true,"extradata":"MT"},{"content":"The user's security context.","nodes":[{"pos":[0,28],"content":"The user's security context.","nodes":[{"content":"The user's security context.","pos":[0,28]}]}],"pos":[11675,11704],"yaml":true},{"content":"`true` if the user is allowed to perform delete operations; otherwise, `false`.","nodes":[{"pos":[0,79],"content":"<ph id=\"ph1\">`true`</ph> if the user is allowed to perform delete operations; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the user is allowed to perform delete operations; otherwise, `false`."}],"pos":[11762,11844],"yaml":true},{"content":"Gets a value that indicates whether the specified user is allowed to perform insert operations.","nodes":[{"pos":[0,95],"content":"Gets a value that indicates whether the specified user is allowed to perform insert operations.","nodes":[{"content":"Gets a value that indicates whether the specified user is allowed to perform insert operations.","pos":[0,95]}]}],"pos":[12956,13052],"yaml":true},{"content":"A principal object represents the security context of the user on whose behalf the code is running, including that user's identity and any roles to which they belong.","nodes":[{"pos":[0,166],"content":"A principal object represents the security context of the user on whose behalf the code is running, including that user's identity and any roles to which they belong.","nodes":[{"content":"A principal object represents the security context of the user on whose behalf the code is running, including that user's identity and any roles to which they belong.","pos":[0,166]}]}],"pos":[13063,13230],"yaml":true,"extradata":"MT"},{"content":"The user's security context.","nodes":[{"pos":[0,28],"content":"The user's security context.","nodes":[{"content":"The user's security context.","pos":[0,28]}]}],"pos":[13437,13466],"yaml":true},{"content":"`true` if the user is allowed to perform insert operations; otherwise, `false`.","nodes":[{"pos":[0,79],"content":"<ph id=\"ph1\">`true`</ph> if the user is allowed to perform insert operations; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the user is allowed to perform insert operations; otherwise, `false`."}],"pos":[13524,13606],"yaml":true},{"content":"Gets a value that indicates whether the specified user is allowed to perform read operations.","nodes":[{"pos":[0,93],"content":"Gets a value that indicates whether the specified user is allowed to perform read operations.","nodes":[{"content":"Gets a value that indicates whether the specified user is allowed to perform read operations.","pos":[0,93]}]}],"pos":[14706,14800],"yaml":true},{"content":"A principal object represents the security context of the user on whose behalf the code is running, including that user's identity and any roles to which they belong.","nodes":[{"pos":[0,166],"content":"A principal object represents the security context of the user on whose behalf the code is running, including that user's identity and any roles to which they belong.","nodes":[{"content":"A principal object represents the security context of the user on whose behalf the code is running, including that user's identity and any roles to which they belong.","pos":[0,166]}]}],"pos":[14811,14978],"yaml":true,"extradata":"MT"},{"content":"The user's security context.","nodes":[{"pos":[0,28],"content":"The user's security context.","nodes":[{"content":"The user's security context.","pos":[0,28]}]}],"pos":[15183,15212],"yaml":true},{"content":"`true` if the user is allowed to perform read operations; otherwise, `false`.","nodes":[{"pos":[0,77],"content":"<ph id=\"ph1\">`true`</ph> if the user is allowed to perform read operations; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the user is allowed to perform read operations; otherwise, `false`."}],"pos":[15270,15350],"yaml":true},{"content":"Gets a value that indicates whether the specified user is allowed to perform update operations.","nodes":[{"pos":[0,95],"content":"Gets a value that indicates whether the specified user is allowed to perform update operations.","nodes":[{"content":"Gets a value that indicates whether the specified user is allowed to perform update operations.","pos":[0,95]}]}],"pos":[16460,16556],"yaml":true},{"content":"A principal object represents the security context of the user on whose behalf the code is running, including that user's identity and any roles to which they belong.","nodes":[{"pos":[0,166],"content":"A principal object represents the security context of the user on whose behalf the code is running, including that user's identity and any roles to which they belong.","nodes":[{"content":"A principal object represents the security context of the user on whose behalf the code is running, including that user's identity and any roles to which they belong.","pos":[0,166]}]}],"pos":[16567,16734],"yaml":true,"extradata":"MT"},{"content":"The user's security context.","nodes":[{"pos":[0,28],"content":"The user's security context.","nodes":[{"content":"The user's security context.","pos":[0,28]}]}],"pos":[16941,16970],"yaml":true},{"content":"`true` if the user is allowed to perform update operations; otherwise, `false`.","nodes":[{"pos":[0,79],"content":"<ph id=\"ph1\">`true`</ph> if the user is allowed to perform update operations; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the user is allowed to perform update operations; otherwise, `false`."}],"pos":[17028,17110],"yaml":true},{"content":"Gets the column collection for the table.","nodes":[{"pos":[0,41],"content":"Gets the column collection for the table.","nodes":[{"content":"Gets the column collection for the table.","pos":[0,41]}]}],"pos":[18062,18104],"yaml":true},{"content":"A collection that contains the columns for the table.","nodes":[{"pos":[0,53],"content":"A collection that contains the columns for the table.","nodes":[{"content":"A collection that contains the columns for the table.","pos":[0,53]}]}],"pos":[19487,19541],"yaml":true},{"content":"Creates a new <xref href=\"System.Web.DynamicData.MetaChildrenColumn\"></xref> object.","nodes":[{"pos":[0,84],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Web.DynamicData.MetaChildrenColumn\"&gt;&lt;/xref&gt;</ph> object.","source":"Creates a new <xref href=\"System.Web.DynamicData.MetaChildrenColumn\"></xref> object."}],"pos":[20777,20862],"yaml":true},{"content":"This method can be overridden to create a derived type.","nodes":[{"pos":[0,55],"content":"This method can be overridden to create a derived type.","nodes":[{"content":"This method can be overridden to create a derived type.","pos":[0,55]}]}],"pos":[20873,20929],"yaml":true,"extradata":"MT"},{"content":"The column provider.","nodes":[{"pos":[0,20],"content":"The column provider.","nodes":[{"content":"The column provider.","pos":[0,20]}]}],"pos":[21229,21250],"yaml":true},{"content":"The new child metacolumn object.","nodes":[{"pos":[0,32],"content":"The new child metacolumn object.","nodes":[{"content":"The new child metacolumn object.","pos":[0,32]}]}],"pos":[21335,21368],"yaml":true},{"content":"Creates a <xref href=\"System.Web.DynamicData.MetaColumn\"></xref> object.","nodes":[{"pos":[0,72],"content":"Creates a <ph id=\"ph1\">&lt;xref href=\"System.Web.DynamicData.MetaColumn\"&gt;&lt;/xref&gt;</ph> object.","source":"Creates a <xref href=\"System.Web.DynamicData.MetaColumn\"></xref> object."}],"pos":[22569,22642],"yaml":true},{"content":"This method can be overridden to create a derived type.","nodes":[{"pos":[0,55],"content":"This method can be overridden to create a derived type.","nodes":[{"content":"This method can be overridden to create a derived type.","pos":[0,55]}]}],"pos":[22653,22709],"yaml":true,"extradata":"MT"},{"content":"The column provider.","nodes":[{"pos":[0,20],"content":"The column provider.","nodes":[{"content":"The column provider.","pos":[0,20]}]}],"pos":[22993,23014],"yaml":true},{"content":"The new metacolumn object.","nodes":[{"pos":[0,26],"content":"The new metacolumn object.","nodes":[{"content":"The new metacolumn object.","pos":[0,26]}]}],"pos":[23091,23118],"yaml":true},{"content":"Returns the data context for the table.","nodes":[{"pos":[0,39],"content":"Returns the data context for the table.","nodes":[{"content":"Returns the data context for the table.","pos":[0,39]}]}],"pos":[24113,24153],"yaml":true},{"content":"The data context is retrieved from a new context that is instantiated by calling the <xref:System.Web.DynamicData.MetaTable.CreateContext%2A?displayProperty=fullName> method. For more information, see the <xref:System.Web.DynamicData.MetaTable?displayProperty=fullName> class overview.","nodes":[{"pos":[0,285],"content":"The data context is retrieved from a new context that is instantiated by calling the <xref:System.Web.DynamicData.MetaTable.CreateContext%2A?displayProperty=fullName> method. For more information, see the <xref:System.Web.DynamicData.MetaTable?displayProperty=fullName> class overview.","nodes":[{"content":"The data context is retrieved from a new context that is instantiated by calling the <xref:System.Web.DynamicData.MetaTable.CreateContext%2A?displayProperty=fullName> method. For more information, see the <xref:System.Web.DynamicData.MetaTable?displayProperty=fullName> class overview.","pos":[0,285],"nodes":[{"content":"The data context is retrieved from a new context that is instantiated by calling the <ph id=\"ph1\">&lt;xref:System.Web.DynamicData.MetaTable.CreateContext%2A?displayProperty=fullName&gt;</ph> method.","pos":[0,174],"source":"The data context is retrieved from a new context that is instantiated by calling the <xref:System.Web.DynamicData.MetaTable.CreateContext%2A?displayProperty=fullName> method."},{"content":"For more information, see the <ph id=\"ph1\">&lt;xref:System.Web.DynamicData.MetaTable?displayProperty=fullName&gt;</ph> class overview.","pos":[175,285],"source":" For more information, see the <xref:System.Web.DynamicData.MetaTable?displayProperty=fullName> class overview."}]}]}],"pos":[24164,24450],"yaml":true,"extradata":"MT"},{"content":"The data context for the table.","nodes":[{"pos":[0,31],"content":"The data context for the table.","nodes":[{"content":"The data context for the table.","pos":[0,31]}]}],"pos":[24589,24621],"yaml":true},{"content":"Creates an object that contains foreign-key metadata.","nodes":[{"pos":[0,53],"content":"Creates an object that contains foreign-key metadata.","nodes":[{"content":"Creates an object that contains foreign-key metadata.","pos":[0,53]}]}],"pos":[25875,25929],"yaml":true},{"content":"This method can be overridden to create a derived type.","nodes":[{"pos":[0,55],"content":"This method can be overridden to create a derived type.","nodes":[{"content":"This method can be overridden to create a derived type.","pos":[0,55]}]}],"pos":[25940,25996],"yaml":true,"extradata":"MT"},{"content":"The column provider.","nodes":[{"pos":[0,20],"content":"The column provider.","nodes":[{"content":"The column provider.","pos":[0,20]}]}],"pos":[26300,26321],"yaml":true},{"content":"An object that contains foreign-key metadata.","nodes":[{"pos":[0,45],"content":"An object that contains foreign-key metadata.","nodes":[{"content":"An object that contains foreign-key metadata.","pos":[0,45]}]}],"pos":[26408,26454],"yaml":true},{"content":"Creates the metadata for the specified table.","nodes":[{"pos":[0,45],"content":"Creates the metadata for the specified table.","nodes":[{"content":"Creates the metadata for the specified table.","pos":[0,45]}]}],"pos":[27498,27544],"yaml":true},{"content":"The table type for which to generate metadata.","nodes":[{"pos":[0,46],"content":"The table type for which to generate metadata.","nodes":[{"content":"The table type for which to generate metadata.","pos":[0,46]}]}],"pos":[27725,27772],"yaml":true},{"content":"An object that contains the table metadata.","nodes":[{"pos":[0,43],"content":"An object that contains the table metadata.","nodes":[{"content":"An object that contains the table metadata.","pos":[0,43]}]}],"pos":[27848,27892],"yaml":true},{"content":"Creates the metadata for the specified table.","nodes":[{"pos":[0,45],"content":"Creates the metadata for the specified table.","nodes":[{"content":"Creates the metadata for the specified table.","pos":[0,45]}]}],"pos":[29072,29118],"yaml":true},{"content":"Information about the table type.","nodes":[{"pos":[0,33],"content":"Information about the table type.","nodes":[{"content":"Information about the table type.","pos":[0,33]}]}],"pos":[29378,29412],"yaml":true},{"content":"An object that contains the table metadata.","nodes":[{"pos":[0,43],"content":"An object that contains the table metadata.","nodes":[{"content":"An object that contains the table metadata.","pos":[0,43]}]}],"pos":[29488,29532],"yaml":true},{"content":"Gets the name of the table.","nodes":[{"pos":[0,27],"content":"Gets the name of the table.","nodes":[{"content":"Gets the name of the table.","pos":[0,27]}]}],"pos":[30582,30610],"yaml":true},{"content":"The name comes from the <xref:System.Web.DynamicData.MetaTable.DataContextType%2A> object that the table belongs to.","nodes":[{"pos":[0,116],"content":"The name comes from the <xref:System.Web.DynamicData.MetaTable.DataContextType%2A> object that the table belongs to.","nodes":[{"content":"The name comes from the <ph id=\"ph1\">&lt;xref:System.Web.DynamicData.MetaTable.DataContextType%2A&gt;</ph> object that the table belongs to.","pos":[0,116],"source":"The name comes from the <xref:System.Web.DynamicData.MetaTable.DataContextType%2A> object that the table belongs to."}]}],"pos":[30621,30738],"yaml":true,"extradata":"MT"},{"content":"The name of the table.","nodes":[{"pos":[0,22],"content":"The name of the table.","nodes":[{"content":"The name of the table.","pos":[0,22]}]}],"pos":[30865,30888],"yaml":true},{"content":"Gets the type of the data context that is associated with the table.","nodes":[{"pos":[0,68],"content":"Gets the type of the data context that is associated with the table.","nodes":[{"content":"Gets the type of the data context that is associated with the table.","pos":[0,68]}]}],"pos":[31902,31971],"yaml":true},{"content":"For more information, see the <xref:System.Data.Linq.DataContext?displayProperty=fullName> class overview.","nodes":[{"pos":[0,106],"content":"For more information, see the <xref:System.Data.Linq.DataContext?displayProperty=fullName> class overview.","nodes":[{"content":"For more information, see the <ph id=\"ph1\">&lt;xref:System.Data.Linq.DataContext?displayProperty=fullName&gt;</ph> class overview.","pos":[0,106],"source":"For more information, see the <xref:System.Data.Linq.DataContext?displayProperty=fullName> class overview."}]}],"pos":[31982,32089],"yaml":true,"extradata":"MT"},{"content":"The type of the data context.","nodes":[{"pos":[0,29],"content":"The type of the data context.","nodes":[{"content":"The type of the data context.","pos":[0,29]}]}],"pos":[32204,32234],"yaml":true},{"content":"Gets the column that is used to display values when entries in this table are used as parents in foreign-key relationships.","nodes":[{"pos":[0,123],"content":"Gets the column that is used to display values when entries in this table are used as parents in foreign-key relationships.","nodes":[{"content":"Gets the column that is used to display values when entries in this table are used as parents in foreign-key relationships.","pos":[0,123]}]}],"pos":[33228,33352],"yaml":true},{"content":"The column that is returned is selected in this order:  \n  \n1.  The column that is specified by using the <xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute> attribute.  \n  \n2.  The first string column that is not in the primary key.  \n  \n3.  The first string column that is in the primary key.  \n  \n4.  The first non-string column that is in the primary key.  \n  \n5.  The first column.","nodes":[{"pos":[0,54],"content":"The column that is returned is selected in this order:","nodes":[{"content":"The column that is returned is selected in this order:","pos":[0,54]}]},{"pos":[64,184],"content":"The column that is specified by using the <xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute> attribute.","nodes":[{"content":"The column that is specified by using the <ph id=\"ph1\">&lt;xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute&gt;</ph> attribute.","pos":[0,120],"source":"The column that is specified by using the <xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute> attribute."}]},{"pos":[194,249],"content":"The first string column that is not in the primary key.","nodes":[{"content":"The first string column that is not in the primary key.","pos":[0,55]}]},{"pos":[259,310],"content":"The first string column that is in the primary key.","nodes":[{"content":"The first string column that is in the primary key.","pos":[0,51]}]},{"pos":[320,375],"content":"The first non-string column that is in the primary key.","nodes":[{"content":"The first non-string column that is in the primary key.","pos":[0,55]}]},{"pos":[385,402],"content":"The first column.","nodes":[{"content":"The first column.","pos":[0,17]}]}],"pos":[33363,33778],"yaml":true,"extradata":"MT"},{"content":"The column that is used to display values when entries in this table are used as parents in foreign-key relationships.","nodes":[{"pos":[0,118],"content":"The column that is used to display values when entries in this table are used as parents in foreign-key relationships.","nodes":[{"content":"The column that is used to display values when entries in this table are used as parents in foreign-key relationships.","pos":[0,118]}]}],"pos":[33950,34069],"yaml":true},{"content":"Gets the name of the table in a user-friendly format.","nodes":[{"pos":[0,53],"content":"Gets the name of the table in a user-friendly format.","nodes":[{"content":"Gets the name of the table in a user-friendly format.","pos":[0,53]}]}],"pos":[35049,35103],"yaml":true},{"content":"The value of this property defaults to the value of the <xref:System.Web.DynamicData.MetaTable.Name%2A> property. You can customize the value of this property by using the <xref:System.ComponentModel.DisplayNameAttribute?displayProperty=fullName> attribute.","nodes":[{"pos":[0,257],"content":"The value of this property defaults to the value of the <xref:System.Web.DynamicData.MetaTable.Name%2A> property. You can customize the value of this property by using the <xref:System.ComponentModel.DisplayNameAttribute?displayProperty=fullName> attribute.","nodes":[{"content":"The value of this property defaults to the value of the <xref:System.Web.DynamicData.MetaTable.Name%2A> property. You can customize the value of this property by using the <xref:System.ComponentModel.DisplayNameAttribute?displayProperty=fullName> attribute.","pos":[0,257],"nodes":[{"content":"The value of this property defaults to the value of the <ph id=\"ph1\">&lt;xref:System.Web.DynamicData.MetaTable.Name%2A&gt;</ph> property.","pos":[0,113],"source":"The value of this property defaults to the value of the <xref:System.Web.DynamicData.MetaTable.Name%2A> property."},{"content":"You can customize the value of this property by using the <ph id=\"ph1\">&lt;xref:System.ComponentModel.DisplayNameAttribute?displayProperty=fullName&gt;</ph> attribute.","pos":[114,257],"source":" You can customize the value of this property by using the <xref:System.ComponentModel.DisplayNameAttribute?displayProperty=fullName> attribute."}]}]}],"pos":[35114,35372],"yaml":true,"extradata":"MT"},{"content":"The string that represents the user-friendly name of the table.","nodes":[{"pos":[0,63],"content":"The string that represents the user-friendly name of the table.","nodes":[{"content":"The string that represents the user-friendly name of the table.","pos":[0,63]}]}],"pos":[35495,35559],"yaml":true},{"content":"Gets the entity type that represents the table.","nodes":[{"pos":[0,47],"content":"Gets the entity type that represents the table.","nodes":[{"content":"Gets the entity type that represents the table.","pos":[0,47]}]}],"pos":[36531,36579],"yaml":true},{"content":"The type that represents the entity.","nodes":[{"pos":[0,36],"content":"The type that represents the entity.","nodes":[{"content":"The type that represents the entity.","pos":[0,36]}]}],"pos":[36689,36726],"yaml":true},{"content":"Gets a comma-separated list of foreign-key names.","nodes":[{"pos":[0,49],"content":"Gets a comma-separated list of foreign-key names.","nodes":[{"content":"Gets a comma-separated list of foreign-key names.","pos":[0,49]}]}],"pos":[37769,37819],"yaml":true},{"content":"A comma-separated list of foreign-key names.","nodes":[{"pos":[0,44],"content":"A comma-separated list of foreign-key names.","nodes":[{"content":"A comma-separated list of foreign-key names.","pos":[0,44]}]}],"pos":[37945,37990],"yaml":true},{"content":"Returns the action path for the specified row by using the name of the action and the virtual path of the action.","nodes":[{"pos":[0,113],"content":"Returns the action path for the specified row by using the name of the action and the virtual path of the action.","nodes":[{"content":"Returns the action path for the specified row by using the name of the action and the virtual path of the action.","pos":[0,113]}]}],"pos":[39190,39304],"yaml":true},{"content":"The action path is a URL for an action for a specific entity. For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=fullName> class overview.","nodes":[{"pos":[0,173],"content":"The action path is a URL for an action for a specific entity. For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=fullName> class overview.","nodes":[{"content":"The action path is a URL for an action for a specific entity. For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=fullName> class overview.","pos":[0,173],"nodes":[{"content":"The action path is a URL for an action for a specific entity.","pos":[0,61]},{"content":"For more information, see the <ph id=\"ph1\">&lt;xref:System.Web.DynamicData.PageAction?displayProperty=fullName&gt;</ph> class overview.","pos":[62,173],"source":" For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=fullName> class overview."}]}]}],"pos":[39315,39489],"yaml":true,"extradata":"MT"},{"content":"The name of the action.","nodes":[{"pos":[0,23],"content":"The name of the action.","nodes":[{"content":"The name of the action.","pos":[0,23]}]}],"pos":[39660,39684],"yaml":true},{"content":"An object that contains the row for the action path.","nodes":[{"pos":[0,52],"content":"An object that contains the row for the action path.","nodes":[{"content":"An object that contains the row for the action path.","pos":[0,52]}]}],"pos":[39743,39796],"yaml":true},{"content":"The virtual path of the action.","nodes":[{"pos":[0,31],"content":"The virtual path of the action.","nodes":[{"content":"The virtual path of the action.","pos":[0,31]}]}],"pos":[39856,39888],"yaml":true},{"content":"The action path for the specified row.","nodes":[{"pos":[0,38],"content":"The action path for the specified row.","nodes":[{"content":"The action path for the specified row.","pos":[0,38]}]}],"pos":[39945,39984],"yaml":true},{"content":"Returns the action path for the current table and the specified action.","nodes":[{"pos":[0,71],"content":"Returns the action path for the current table and the specified action.","nodes":[{"content":"Returns the action path for the current table and the specified action.","pos":[0,71]}]}],"pos":[41043,41115],"yaml":true},{"content":"The name of the action.","nodes":[{"pos":[0,23],"content":"The name of the action.","nodes":[{"content":"The name of the action.","pos":[0,23]}]}],"pos":[41464,41488],"yaml":true},{"content":"The action path for the specified action.","nodes":[{"pos":[0,41],"content":"The action path for the specified action.","nodes":[{"content":"The action path for the specified action.","pos":[0,41]}]}],"pos":[41545,41587],"yaml":true},{"content":"Returns the action path for the current table, specified action, and specified primary key.","nodes":[{"pos":[0,91],"content":"Returns the action path for the current table, specified action, and specified primary key.","nodes":[{"content":"Returns the action path for the current table, specified action, and specified primary key.","pos":[0,91]}]}],"pos":[42835,42927],"yaml":true},{"content":"The action path is a URL for an action for a specific entity. For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=fullName> class overview.","nodes":[{"pos":[0,173],"content":"The action path is a URL for an action for a specific entity. For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=fullName> class overview.","nodes":[{"content":"The action path is a URL for an action for a specific entity. For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=fullName> class overview.","pos":[0,173],"nodes":[{"content":"The action path is a URL for an action for a specific entity.","pos":[0,61]},{"content":"For more information, see the <ph id=\"ph1\">&lt;xref:System.Web.DynamicData.PageAction?displayProperty=fullName&gt;</ph> class overview.","pos":[62,173],"source":" For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=fullName> class overview."}]}]}],"pos":[42938,43112],"yaml":true,"extradata":"MT"},{"content":"The name of the action.","nodes":[{"pos":[0,23],"content":"The name of the action.","nodes":[{"content":"The name of the action.","pos":[0,23]}]}],"pos":[43317,43341],"yaml":true},{"content":"The list of column values that make up the primary key.","nodes":[{"pos":[0,55],"content":"The list of column values that make up the primary key.","nodes":[{"content":"The list of column values that make up the primary key.","pos":[0,55]}]}],"pos":[43447,43503],"yaml":true},{"content":"The action path for the specified action and primary key.","nodes":[{"pos":[0,57],"content":"The action path for the specified action and primary key.","nodes":[{"content":"The action path for the specified action and primary key.","pos":[0,57]}]}],"pos":[43560,43618],"yaml":true},{"content":"Returns the action path for the specified row by using the name of the action.","nodes":[{"pos":[0,78],"content":"Returns the action path for the specified row by using the name of the action.","nodes":[{"content":"Returns the action path for the specified row by using the name of the action.","pos":[0,78]}]}],"pos":[44743,44822],"yaml":true},{"content":"The action path is a URL for an action for a specific entity. The action path contains the primary-key column names, which can be used for query-string filters.  \n  \n For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=fullName> class overview.","nodes":[{"pos":[0,160],"content":"The action path is a URL for an action for a specific entity. The action path contains the primary-key column names, which can be used for query-string filters.","nodes":[{"content":"The action path is a URL for an action for a specific entity. The action path contains the primary-key column names, which can be used for query-string filters.","pos":[0,160],"nodes":[{"content":"The action path is a URL for an action for a specific entity.","pos":[0,61]},{"content":"The action path contains the primary-key column names, which can be used for query-string filters.","pos":[62,160]}]}]},{"pos":[167,278],"content":"For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=fullName> class overview.","nodes":[{"content":"For more information, see the <ph id=\"ph1\">&lt;xref:System.Web.DynamicData.PageAction?displayProperty=fullName&gt;</ph> class overview.","pos":[0,111],"source":"For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=fullName> class overview."}]}],"pos":[44833,45116],"yaml":true,"extradata":"MT"},{"content":"The name of the action.","nodes":[{"pos":[0,23],"content":"The name of the action.","nodes":[{"content":"The name of the action.","pos":[0,23]}]}],"pos":[45274,45298],"yaml":true},{"content":"The row to get the action path for.","nodes":[{"pos":[0,35],"content":"The row to get the action path for.","nodes":[{"content":"The row to get the action path for.","pos":[0,35]}]}],"pos":[45357,45393],"yaml":true},{"content":"The action path for the specified row.","nodes":[{"pos":[0,38],"content":"The action path for the specified row.","nodes":[{"content":"The action path for the specified row.","pos":[0,38]}]}],"pos":[45450,45489],"yaml":true},{"content":"Returns the action path for the current table and for the specified action and routes.","nodes":[{"pos":[0,86],"content":"Returns the action path for the current table and for the specified action and routes.","nodes":[{"content":"Returns the action path for the current table and for the specified action and routes.","pos":[0,86]}]}],"pos":[46734,46821],"yaml":true},{"content":"The action path is a URL for an action for a specific entity. For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=fullName> class overview.","nodes":[{"pos":[0,173],"content":"The action path is a URL for an action for a specific entity. For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=fullName> class overview.","nodes":[{"content":"The action path is a URL for an action for a specific entity. For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=fullName> class overview.","pos":[0,173],"nodes":[{"content":"The action path is a URL for an action for a specific entity.","pos":[0,61]},{"content":"For more information, see the <ph id=\"ph1\">&lt;xref:System.Web.DynamicData.PageAction?displayProperty=fullName&gt;</ph> class overview.","pos":[62,173],"source":" For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=fullName> class overview."}]}]}],"pos":[46832,47006],"yaml":true,"extradata":"MT"},{"content":"The name of the action.","nodes":[{"pos":[0,23],"content":"The name of the action.","nodes":[{"content":"The name of the action.","pos":[0,23]}]}],"pos":[47205,47229],"yaml":true},{"content":"The list of routes for the action.","nodes":[{"pos":[0,34],"content":"The list of routes for the action.","nodes":[{"content":"The list of routes for the action.","pos":[0,34]}]}],"pos":[47322,47357],"yaml":true},{"content":"The action path for the specified action and routes.","nodes":[{"pos":[0,52],"content":"The action path for the specified action and routes.","nodes":[{"content":"The action path for the specified action and routes.","pos":[0,52]}]}],"pos":[47414,47467],"yaml":true},{"content":"Appends query strings to the action path, based on the specified primary key and virtual path.","nodes":[{"pos":[0,94],"content":"Appends query strings to the action path, based on the specified primary key and virtual path.","nodes":[{"content":"Appends query strings to the action path, based on the specified primary key and virtual path.","pos":[0,94]}]}],"pos":[48781,48876],"yaml":true},{"content":"The action path is a URL for an action for a specific entity. For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=fullName> class overview.","nodes":[{"pos":[0,173],"content":"The action path is a URL for an action for a specific entity. For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=fullName> class overview.","nodes":[{"content":"The action path is a URL for an action for a specific entity. For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=fullName> class overview.","pos":[0,173],"nodes":[{"content":"The action path is a URL for an action for a specific entity.","pos":[0,61]},{"content":"For more information, see the <ph id=\"ph1\">&lt;xref:System.Web.DynamicData.PageAction?displayProperty=fullName&gt;</ph> class overview.","pos":[62,173],"source":" For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=fullName> class overview."}]}]}],"pos":[48887,49061],"yaml":true,"extradata":"MT"},{"content":"The name of the action.","nodes":[{"pos":[0,23],"content":"The name of the action.","nodes":[{"content":"The name of the action.","pos":[0,23]}]}],"pos":[49279,49303],"yaml":true},{"content":"The list of column values that make up the primary key.","nodes":[{"pos":[0,55],"content":"The list of column values that make up the primary key.","nodes":[{"content":"The list of column values that make up the primary key.","pos":[0,55]}]}],"pos":[49409,49465],"yaml":true},{"content":"The virtual path of the action.","nodes":[{"pos":[0,31],"content":"The virtual path of the action.","nodes":[{"content":"The virtual path of the action.","pos":[0,31]}]}],"pos":[49525,49557],"yaml":true},{"content":"The action path for the specified primary key and virtual path, with query-string values appended to it.","nodes":[{"pos":[0,104],"content":"The action path for the specified primary key and virtual path, with query-string values appended to it.","nodes":[{"content":"The action path for the specified primary key and virtual path, with query-string values appended to it.","pos":[0,104]}]}],"pos":[49614,49719],"yaml":true},{"content":"Returns the metadata for the specified column.","nodes":[{"pos":[0,46],"content":"Returns the metadata for the specified column.","nodes":[{"content":"Returns the metadata for the specified column.","pos":[0,46]}]}],"pos":[50754,50801],"yaml":true},{"content":"The name of the column to get metadata for.","nodes":[{"pos":[0,43],"content":"The name of the column to get metadata for.","nodes":[{"content":"The name of the column to get metadata for.","pos":[0,43]}]}],"pos":[50978,51022],"yaml":true},{"content":"The column metadata.","nodes":[{"pos":[0,20],"content":"The column metadata.","nodes":[{"content":"The column metadata.","pos":[0,20]}]}],"pos":[51099,51120],"yaml":true},{"content":"Gets the collection of column values.","nodes":[{"pos":[0,37],"content":"Gets the collection of column values.","nodes":[{"content":"Gets the collection of column values.","pos":[0,37]}]}],"pos":[52283,52321],"yaml":true},{"content":"The context for the specified Web request.","nodes":[{"pos":[0,42],"content":"The context for the specified Web request.","nodes":[{"content":"The context for the specified Web request.","pos":[0,42]}]}],"pos":[52552,52595],"yaml":true},{"content":"The collection of column values.","nodes":[{"pos":[0,32],"content":"The collection of column values.","nodes":[{"content":"The collection of column values.","pos":[0,32]}]}],"pos":[52706,52739],"yaml":true},{"content":"Retrieves the primary key of the entity from the route values.","nodes":[{"pos":[0,62],"content":"Retrieves the primary key of the entity from the route values.","nodes":[{"content":"Retrieves the primary key of the entity from the route values.","pos":[0,62]}]}],"pos":[53782,53845],"yaml":true},{"content":"The route values typically come from the request URL query string.","nodes":[{"pos":[0,66],"content":"The route values typically come from the request URL query string.","nodes":[{"content":"The route values typically come from the request URL query string.","pos":[0,66]}]}],"pos":[53856,53923],"yaml":true,"extradata":"MT"},{"content":"The primary-key values of the entities, if they are found; otherwise, `null`.","nodes":[{"pos":[0,77],"content":"The primary-key values of the entities, if they are found; otherwise, <ph id=\"ph1\">`null`</ph>.","source":"The primary-key values of the entities, if they are found; otherwise, `null`."}],"pos":[54107,54185],"yaml":true},{"content":"Returns the value to use as the display string for an instance of a row when the row is used in foreign-key relationships.","nodes":[{"pos":[0,122],"content":"Returns the value to use as the display string for an instance of a row when the row is used in foreign-key relationships.","nodes":[{"content":"Returns the value to use as the display string for an instance of a row when the row is used in foreign-key relationships.","pos":[0,122]}]}],"pos":[55268,55391],"yaml":true},{"content":"If the row is `null`, an empty string is returned. If the entity class includes an override of the <xref:System.Web.DynamicData.MetaTable.ToString%2A> method, the overridden <xref:System.Web.DynamicData.MetaTable.ToString%2A> value is returned. Otherwise, the method returns the `ToString` representation of the value of the <xref:System.Web.DynamicData.MetaTable.DisplayColumn%2A> property for the specified row.","nodes":[{"pos":[0,413],"content":"If the row is `null`, an empty string is returned. If the entity class includes an override of the <xref:System.Web.DynamicData.MetaTable.ToString%2A> method, the overridden <xref:System.Web.DynamicData.MetaTable.ToString%2A> value is returned. Otherwise, the method returns the `ToString` representation of the value of the <xref:System.Web.DynamicData.MetaTable.DisplayColumn%2A> property for the specified row.","nodes":[{"content":"If the row is <ph id=\"ph1\">`null`</ph>, an empty string is returned.","pos":[0,50],"source":"If the row is `null`, an empty string is returned."},{"content":"If the entity class includes an override of the <ph id=\"ph1\">&lt;xref:System.Web.DynamicData.MetaTable.ToString%2A&gt;</ph> method, the overridden <ph id=\"ph2\">&lt;xref:System.Web.DynamicData.MetaTable.ToString%2A&gt;</ph> value is returned.","pos":[51,244],"source":" If the entity class includes an override of the <xref:System.Web.DynamicData.MetaTable.ToString%2A> method, the overridden <xref:System.Web.DynamicData.MetaTable.ToString%2A> value is returned."},{"content":"Otherwise, the method returns the <ph id=\"ph1\">`ToString`</ph> representation of the value of the <ph id=\"ph2\">&lt;xref:System.Web.DynamicData.MetaTable.DisplayColumn%2A&gt;</ph> property for the specified row.","pos":[245,413],"source":" Otherwise, the method returns the `ToString` representation of the value of the <xref:System.Web.DynamicData.MetaTable.DisplayColumn%2A> property for the specified row."}]}],"pos":[55402,55816],"yaml":true,"extradata":"MT"},{"content":"The row to get the display string for.","nodes":[{"pos":[0,38],"content":"The row to get the display string for.","nodes":[{"content":"The row to get the display string for.","pos":[0,38]}]}],"pos":[55967,56006],"yaml":true},{"content":"The display name for an instance of a row.","nodes":[{"pos":[0,42],"content":"The display name for an instance of a row.","nodes":[{"content":"The display name for an instance of a row.","pos":[0,42]}]}],"pos":[56063,56106],"yaml":true},{"content":"Retrieves a list of columns that are filterable.","nodes":[{"pos":[0,48],"content":"Retrieves a list of columns that are filterable.","nodes":[{"content":"Retrieves a list of columns that are filterable.","pos":[0,48]}]}],"pos":[57135,57184],"yaml":true},{"content":"A column is filterable if it is annotated with the <xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute> attribute and the `Enabled` property of the <xref:System.Web.Mvc.FilterAttribute> attribute of the column is set to `true`.","nodes":[{"pos":[0,242],"content":"A column is filterable if it is annotated with the <ph id=\"ph1\">&lt;xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute&gt;</ph> attribute and the <ph id=\"ph2\">`Enabled`</ph> property of the <ph id=\"ph3\">&lt;xref:System.Web.Mvc.FilterAttribute&gt;</ph> attribute of the column is set to <ph id=\"ph4\">`true`</ph>.","source":"A column is filterable if it is annotated with the <xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute> attribute and the `Enabled` property of the <xref:System.Web.Mvc.FilterAttribute> attribute of the column is set to `true`."}],"pos":[57195,57438],"yaml":true,"extradata":"MT"},{"content":"A list of columns that are filterable.","nodes":[{"pos":[0,38],"content":"A list of columns that are filterable.","nodes":[{"content":"A list of columns that are filterable.","pos":[0,38]}]}],"pos":[57709,57748],"yaml":true},{"content":"Retrieves a dictionary of primary-key names and values for the specified row.","nodes":[{"pos":[0,77],"content":"Retrieves a dictionary of primary-key names and values for the specified row.","nodes":[{"content":"Retrieves a dictionary of primary-key names and values for the specified row.","pos":[0,77]}]}],"pos":[58872,58950],"yaml":true},{"content":"A row.","nodes":[{"pos":[0,6],"content":"A row.","nodes":[{"content":"A row.","pos":[0,6]}]}],"pos":[59922,59929],"yaml":true},{"content":"A dictionary of primary-key names and values.","nodes":[{"pos":[0,45],"content":"A dictionary of primary-key names and values.","nodes":[{"content":"A dictionary of primary-key names and values.","pos":[0,45]}]}],"pos":[60040,60086],"yaml":true},{"content":"Returns a comma-separated list of column values that represent the primary key for the specified row.","nodes":[{"pos":[0,101],"content":"Returns a comma-separated list of column values that represent the primary key for the specified row.","nodes":[{"content":"Returns a comma-separated list of column values that represent the primary key for the specified row.","pos":[0,101]}]}],"pos":[61314,61416],"yaml":true},{"content":"The list of column values that make up the primary key.","nodes":[{"pos":[0,55],"content":"The list of column values that make up the primary key.","nodes":[{"content":"The list of column values that make up the primary key.","pos":[0,55]}]}],"pos":[61656,61712],"yaml":true},{"content":"A comma-separated list of column values. If the list is empty, an empty string is returned.","nodes":[{"pos":[0,91],"content":"A comma-separated list of column values. If the list is empty, an empty string is returned.","nodes":[{"content":"A comma-separated list of column values. If the list is empty, an empty string is returned.","pos":[0,91],"nodes":[{"content":"A comma-separated list of column values.","pos":[0,40]},{"content":"If the list is empty, an empty string is returned.","pos":[41,91]}]}]}],"pos":[61769,61861],"yaml":true},{"content":"Returns a comma-separated list of column values that represent the primary key for the specified row.","nodes":[{"pos":[0,101],"content":"Returns a comma-separated list of column values that represent the primary key for the specified row.","nodes":[{"content":"Returns a comma-separated list of column values that represent the primary key for the specified row.","pos":[0,101]}]}],"pos":[62962,63064],"yaml":true},{"content":"The row to get the primary key for.","nodes":[{"pos":[0,35],"content":"The row to get the primary key for.","nodes":[{"content":"The row to get the primary key for.","pos":[0,35]}]}],"pos":[63210,63246],"yaml":true},{"content":"A comma-separated list of column values that represent the primary key for the row.","nodes":[{"pos":[0,83],"content":"A comma-separated list of column values that represent the primary key for the row.","nodes":[{"content":"A comma-separated list of column values that represent the primary key for the row.","pos":[0,83]}]}],"pos":[63303,63387],"yaml":true},{"content":"Returns a collection of column values that represent the primary key for the specified row.","nodes":[{"pos":[0,91],"content":"Returns a collection of column values that represent the primary key for the specified row.","nodes":[{"content":"Returns a collection of column values that represent the primary key for the specified row.","pos":[0,91]}]}],"pos":[64488,64580],"yaml":true},{"content":"The row to get the primary key for.","nodes":[{"pos":[0,35],"content":"The row to get the primary key for.","nodes":[{"content":"The row to get the primary key for.","pos":[0,35]}]}],"pos":[64760,64796],"yaml":true},{"content":"A collection of column values that represent the primary key for the row.","nodes":[{"pos":[0,73],"content":"A collection of column values that represent the primary key for the row.","nodes":[{"content":"A collection of column values that represent the primary key for the row.","pos":[0,73]}]}],"pos":[64887,64961],"yaml":true},{"content":"Returns the <xref href=\"System.Linq.IQueryable\"></xref> instance for the entity type that represents the table.","nodes":[{"pos":[0,111],"content":"Returns the <ph id=\"ph1\">&lt;xref href=\"System.Linq.IQueryable\"&gt;&lt;/xref&gt;</ph> instance for the entity type that represents the table.","source":"Returns the <xref href=\"System.Linq.IQueryable\"></xref> instance for the entity type that represents the table."}],"pos":[65933,66045],"yaml":true},{"content":"The <xref href=\"System.Linq.IQueryable\"></xref> instance for the entity type.","nodes":[{"pos":[0,77],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Linq.IQueryable\"&gt;&lt;/xref&gt;</ph> instance for the entity type.","source":"The <xref href=\"System.Linq.IQueryable\"></xref> instance for the entity type."}],"pos":[66196,66274],"yaml":true},{"content":"Returns the <xref href=\"System.Linq.IQueryable\"></xref> instance for the entity type that represents the table by using the data context.","nodes":[{"pos":[0,137],"content":"Returns the <ph id=\"ph1\">&lt;xref href=\"System.Linq.IQueryable\"&gt;&lt;/xref&gt;</ph> instance for the entity type that represents the table by using the data context.","source":"Returns the <xref href=\"System.Linq.IQueryable\"></xref> instance for the entity type that represents the table by using the data context."}],"pos":[67298,67436],"yaml":true},{"content":"If the `context` parameter is `null`, this method creates a new context by calling the <xref:System.Web.DynamicData.MetaTable.CreateContext%2A?displayProperty=fullName> method.","nodes":[{"pos":[0,176],"content":"If the <ph id=\"ph1\">`context`</ph> parameter is <ph id=\"ph2\">`null`</ph>, this method creates a new context by calling the <ph id=\"ph3\">&lt;xref:System.Web.DynamicData.MetaTable.CreateContext%2A?displayProperty=fullName&gt;</ph> method.","source":"If the `context` parameter is `null`, this method creates a new context by calling the <xref:System.Web.DynamicData.MetaTable.CreateContext%2A?displayProperty=fullName> method."}],"pos":[67447,67624],"yaml":true,"extradata":"MT"},{"content":"The context of the <xref href=\"System.Web.DynamicData.MetaTable\"></xref> object.","nodes":[{"pos":[0,80],"content":"The context of the <ph id=\"ph1\">&lt;xref href=\"System.Web.DynamicData.MetaTable\"&gt;&lt;/xref&gt;</ph> object.","source":"The context of the <xref href=\"System.Web.DynamicData.MetaTable\"></xref> object."}],"pos":[67791,67872],"yaml":true},{"content":"The <xref href=\"System.Linq.IQueryable\"></xref> instance for the entity type that represents the table in the data context.","nodes":[{"pos":[0,123],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Linq.IQueryable\"&gt;&lt;/xref&gt;</ph> instance for the entity type that represents the table in the data context.","source":"The <xref href=\"System.Linq.IQueryable\"></xref> instance for the entity type that represents the table in the data context."}],"pos":[67938,68062],"yaml":true},{"content":"Returns a list of columns to display by using scaffolding.","nodes":[{"pos":[0,58],"content":"Returns a list of columns to display by using scaffolding.","nodes":[{"content":"Returns a list of columns to display by using scaffolding.","pos":[0,58]}]}],"pos":[69443,69502],"yaml":true},{"content":"This method returns all columns whose <xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute> property is set to `true` except the following:  \n  \n-   Long string columns, which are columns whose <xref:System.Web.DynamicData.MetaColumn.IsLongString%2A> property is set to `true` and whose `containerType` parameter is `true`.  \n  \n-   Child columns whose <xref:System.Web.UI.WebControls.DataBoundControlMode> value is set to <xref:System.Web.UI.WebControls.DataBoundControlMode.Insert>.","nodes":[{"pos":[0,154],"content":"This method returns all columns whose <ph id=\"ph1\">&lt;xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute&gt;</ph> property is set to <ph id=\"ph2\">`true`</ph> except the following:","source":"This method returns all columns whose <xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute> property is set to `true` except the following:"},{"pos":[164,338],"content":"Long string columns, which are columns whose <ph id=\"ph1\">&lt;xref:System.Web.DynamicData.MetaColumn.IsLongString%2A&gt;</ph> property is set to <ph id=\"ph2\">`true`</ph> and whose <ph id=\"ph3\">`containerType`</ph> parameter is <ph id=\"ph4\">`true`</ph>.","source":"Long string columns, which are columns whose <xref:System.Web.DynamicData.MetaColumn.IsLongString%2A> property is set to `true` and whose `containerType` parameter is `true`."},{"pos":[348,499],"content":"Child columns whose <xref:System.Web.UI.WebControls.DataBoundControlMode> value is set to <xref:System.Web.UI.WebControls.DataBoundControlMode.Insert>.","nodes":[{"content":"Child columns whose <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.DataBoundControlMode&gt;</ph> value is set to <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.DataBoundControlMode.Insert&gt;</ph>.","pos":[0,151],"source":"Child columns whose <xref:System.Web.UI.WebControls.DataBoundControlMode> value is set to <xref:System.Web.UI.WebControls.DataBoundControlMode.Insert>."}]}],"pos":[69513,70019],"yaml":true,"extradata":"MT"},{"content":"The data-bound control mode.","nodes":[{"pos":[0,28],"content":"The data-bound control mode.","nodes":[{"content":"The data-bound control mode.","pos":[0,28]}]}],"pos":[70366,70395],"yaml":true},{"content":"A value that indicates whether the table is displayed as an individual entity or as part of a list of entities.","nodes":[{"pos":[0,111],"content":"A value that indicates whether the table is displayed as an individual entity or as part of a list of entities.","nodes":[{"content":"A value that indicates whether the table is displayed as an individual entity or as part of a list of entities.","pos":[0,111]}]}],"pos":[70487,70599],"yaml":true},{"content":"A list of columns to display by using scaffolding.","nodes":[{"pos":[0,50],"content":"A list of columns to display by using scaffolding.","nodes":[{"content":"A list of columns to display by using scaffolding.","pos":[0,50]}]}],"pos":[70716,70767],"yaml":true},{"content":"Retrieves the metatable that is associated with the specified type.","nodes":[{"pos":[0,67],"content":"Retrieves the metatable that is associated with the specified type.","nodes":[{"content":"Retrieves the metatable that is associated with the specified type.","pos":[0,67]}]}],"pos":[71789,71857],"yaml":true},{"content":"This method calls <xref:System.Web.DynamicData.MetaTable.TryGetTable%28System.Type%2CSystem.Web.DynamicData.MetaTable%40%29>. If <xref:System.Web.DynamicData.MetaTable.TryGetTable%28System.Type%2CSystem.Web.DynamicData.MetaTable%40%29> returns `false`, an <xref:System.InvalidOperationException> exception is thrown.","nodes":[{"pos":[0,316],"content":"This method calls <xref:System.Web.DynamicData.MetaTable.TryGetTable%28System.Type%2CSystem.Web.DynamicData.MetaTable%40%29>. If <xref:System.Web.DynamicData.MetaTable.TryGetTable%28System.Type%2CSystem.Web.DynamicData.MetaTable%40%29> returns `false`, an <xref:System.InvalidOperationException> exception is thrown.","nodes":[{"content":"This method calls <ph id=\"ph1\">&lt;xref:System.Web.DynamicData.MetaTable.TryGetTable%28System.Type%2CSystem.Web.DynamicData.MetaTable%40%29&gt;</ph>.","pos":[0,125],"source":"This method calls <xref:System.Web.DynamicData.MetaTable.TryGetTable%28System.Type%2CSystem.Web.DynamicData.MetaTable%40%29>."},{"content":"If <ph id=\"ph1\">&lt;xref:System.Web.DynamicData.MetaTable.TryGetTable%28System.Type%2CSystem.Web.DynamicData.MetaTable%40%29&gt;</ph> returns <ph id=\"ph2\">`false`</ph>, an <ph id=\"ph3\">&lt;xref:System.InvalidOperationException&gt;</ph> exception is thrown.","pos":[126,316],"source":" If <xref:System.Web.DynamicData.MetaTable.TryGetTable%28System.Type%2CSystem.Web.DynamicData.MetaTable%40%29> returns `false`, an <xref:System.InvalidOperationException> exception is thrown."}]}],"pos":[71868,72185],"yaml":true,"extradata":"MT"},{"content":"The type of the entity.","nodes":[{"pos":[0,23],"content":"The type of the entity.","nodes":[{"content":"The type of the entity.","pos":[0,23]}]}],"pos":[72363,72387],"yaml":true},{"content":"The metatable that is associated with the specified type.","nodes":[{"pos":[0,57],"content":"The metatable that is associated with the specified type.","nodes":[{"content":"The metatable that is associated with the specified type.","pos":[0,57]}]}],"pos":[72463,72521],"yaml":true},{"content":"The <xref href=\"System.Web.DynamicData.MetaTable.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)\"></xref> method that was called by this method returned `false`.","nodes":[{"pos":[0,172],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.DynamicData.MetaTable.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)\"&gt;&lt;/xref&gt;</ph> method that was called by this method returned <ph id=\"ph2\">`false`</ph>.","source":"The <xref href=\"System.Web.DynamicData.MetaTable.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)\"></xref> method that was called by this method returned `false`."}],"pos":[72700,72873],"yaml":true},{"content":"Gets a value that indicates whether the table has a primary key.","nodes":[{"pos":[0,64],"content":"Gets a value that indicates whether the table has a primary key.","nodes":[{"content":"Gets a value that indicates whether the table has a primary key.","pos":[0,64]}]}],"pos":[73788,73853],"yaml":true},{"content":"`true` if the table has a primary key; otherwise, `false`.","nodes":[{"pos":[0,58],"content":"<ph id=\"ph1\">`true`</ph> if the table has a primary key; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the table has a primary key; otherwise, `false`."}],"pos":[73969,74030],"yaml":true},{"content":"Initializes data that may not be available when the constructor is called.","nodes":[{"pos":[0,74],"content":"Initializes data that may not be available when the constructor is called.","nodes":[{"content":"Initializes data that may not be available when the constructor is called.","pos":[0,74]}]}],"pos":[75008,75083],"yaml":true},{"content":"This method calls the <xref:System.Web.DynamicData.MetaColumn.Initialize%2A> method for each column in the <xref:System.Web.DynamicData.MetaTable> instance. This method cannot be called directly. To customize initialization, you can derive from this class and override the <xref:System.Web.DynamicData.MetaColumn.Initialize%2A> method. If you override this method, call the base control's `Initialize` method.","nodes":[{"pos":[0,409],"content":"This method calls the <xref:System.Web.DynamicData.MetaColumn.Initialize%2A> method for each column in the <xref:System.Web.DynamicData.MetaTable> instance. This method cannot be called directly. To customize initialization, you can derive from this class and override the <xref:System.Web.DynamicData.MetaColumn.Initialize%2A> method. If you override this method, call the base control's `Initialize` method.","nodes":[{"content":"This method calls the <ph id=\"ph1\">&lt;xref:System.Web.DynamicData.MetaColumn.Initialize%2A&gt;</ph> method for each column in the <ph id=\"ph2\">&lt;xref:System.Web.DynamicData.MetaTable&gt;</ph> instance.","pos":[0,156],"source":"This method calls the <xref:System.Web.DynamicData.MetaColumn.Initialize%2A> method for each column in the <xref:System.Web.DynamicData.MetaTable> instance."},{"content":"This method cannot be called directly.","pos":[157,195]},{"content":"To customize initialization, you can derive from this class and override the <ph id=\"ph1\">&lt;xref:System.Web.DynamicData.MetaColumn.Initialize%2A&gt;</ph> method.","pos":[196,335],"source":" To customize initialization, you can derive from this class and override the <xref:System.Web.DynamicData.MetaColumn.Initialize%2A> method."},{"content":"If you override this method, call the base control's <ph id=\"ph1\">`Initialize`</ph> method.","pos":[336,409],"source":" If you override this method, call the base control's `Initialize` method."}]}],"pos":[75094,75504],"yaml":true,"extradata":"MT"},{"content":"Gets a value that indicates whether the table is read-only.","nodes":[{"pos":[0,59],"content":"Gets a value that indicates whether the table is read-only.","nodes":[{"content":"Gets a value that indicates whether the table is read-only.","pos":[0,59]}]}],"pos":[76992,77052],"yaml":true},{"content":"`true` if the table is read-only; otherwise, `false`.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">`true`</ph> if the table is read-only; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the table is read-only; otherwise, `false`."}],"pos":[77173,77229],"yaml":true},{"content":"Gets the action path of the list action for the table.","nodes":[{"pos":[0,54],"content":"Gets the action path of the list action for the table.","nodes":[{"content":"Gets the action path of the list action for the table.","pos":[0,54]}]}],"pos":[78224,78279],"yaml":true},{"content":"The action path is a URL for an action for a specific entity. For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=fullName> class overview.","nodes":[{"pos":[0,173],"content":"The action path is a URL for an action for a specific entity. For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=fullName> class overview.","nodes":[{"content":"The action path is a URL for an action for a specific entity. For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=fullName> class overview.","pos":[0,173],"nodes":[{"content":"The action path is a URL for an action for a specific entity.","pos":[0,61]},{"content":"For more information, see the <ph id=\"ph1\">&lt;xref:System.Web.DynamicData.PageAction?displayProperty=fullName&gt;</ph> class overview.","pos":[62,173],"source":" For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=fullName> class overview."}]}]}],"pos":[78290,78464],"yaml":true,"extradata":"MT"},{"content":"The action path of the list action for the table.","nodes":[{"pos":[0,49],"content":"The action path of the list action for the table.","nodes":[{"content":"The action path of the list action for the table.","pos":[0,49]}]}],"pos":[78582,78632],"yaml":true},{"content":"Gets the meta model that the table belongs to.","nodes":[{"pos":[0,46],"content":"Gets the meta model that the table belongs to.","nodes":[{"content":"Gets the meta model that the table belongs to.","pos":[0,46]}]}],"pos":[79577,79624],"yaml":true},{"content":"For more information, see the <xref:System.Data.Linq.Mapping.MetaModel?displayProperty=fullName> class overview.","nodes":[{"pos":[0,112],"content":"For more information, see the <xref:System.Data.Linq.Mapping.MetaModel?displayProperty=fullName> class overview.","nodes":[{"content":"For more information, see the <ph id=\"ph1\">&lt;xref:System.Data.Linq.Mapping.MetaModel?displayProperty=fullName&gt;</ph> class overview.","pos":[0,112],"source":"For more information, see the <xref:System.Data.Linq.Mapping.MetaModel?displayProperty=fullName> class overview."}]}],"pos":[79635,79748],"yaml":true,"extradata":"MT"},{"content":"The meta model that the table belongs to.","nodes":[{"pos":[0,41],"content":"The meta model that the table belongs to.","nodes":[{"content":"The meta model that the table belongs to.","pos":[0,41]}]}],"pos":[79902,79944],"yaml":true},{"content":"Gets the unique name of the table.","nodes":[{"pos":[0,34],"content":"Gets the unique name of the table.","nodes":[{"content":"Gets the unique name of the table.","pos":[0,34]}]}],"pos":[80874,80909],"yaml":true},{"content":"The unique name of the table.","nodes":[{"pos":[0,29],"content":"The unique name of the table.","nodes":[{"content":"The unique name of the table.","pos":[0,29]}]}],"pos":[81017,81047],"yaml":true},{"content":"Gets the collection of columns that define the primary key.","nodes":[{"pos":[0,59],"content":"Gets the collection of columns that define the primary key.","nodes":[{"content":"Gets the collection of columns that define the primary key.","pos":[0,59]}]}],"pos":[82054,82114],"yaml":true},{"content":"A collection that contains the primary-key columns.","nodes":[{"pos":[0,51],"content":"A collection that contains the primary-key columns.","nodes":[{"content":"A collection that contains the primary-key columns.","pos":[0,51]}]}],"pos":[82384,82436],"yaml":true},{"content":"Gets the provider for the table.","nodes":[{"pos":[0,32],"content":"Gets the provider for the table.","nodes":[{"content":"Gets the provider for the table.","pos":[0,32]}]}],"pos":[83402,83435],"yaml":true},{"content":"The provider for the table.","nodes":[{"pos":[0,27],"content":"The provider for the table.","nodes":[{"content":"The provider for the table.","pos":[0,27]}]}],"pos":[83630,83658],"yaml":true},{"content":"Resets the cached metadata for the table.","nodes":[{"pos":[0,41],"content":"Resets the cached metadata for the table.","nodes":[{"content":"Resets the cached metadata for the table.","pos":[0,41]}]}],"pos":[84649,84691],"yaml":true},{"content":"The cached table metadata consists of the information that is obtained from data-model attributes and from metadata about intrinsic columns. The metadata cache is rebuilt the next time any metadata is requested.","nodes":[{"pos":[0,211],"content":"The cached table metadata consists of the information that is obtained from data-model attributes and from metadata about intrinsic columns. The metadata cache is rebuilt the next time any metadata is requested.","nodes":[{"content":"The cached table metadata consists of the information that is obtained from data-model attributes and from metadata about intrinsic columns. The metadata cache is rebuilt the next time any metadata is requested.","pos":[0,211],"nodes":[{"content":"The cached table metadata consists of the information that is obtained from data-model attributes and from metadata about intrinsic columns.","pos":[0,140]},{"content":"The metadata cache is rebuilt the next time any metadata is requested.","pos":[141,211]}]}]}],"pos":[84702,84914],"yaml":true,"extradata":"MT"},{"content":"Gets the root type of the entity's inheritance hierarchy.","nodes":[{"pos":[0,57],"content":"Gets the root type of the entity's inheritance hierarchy.","nodes":[{"content":"Gets the root type of the entity's inheritance hierarchy.","pos":[0,57]}]}],"pos":[85984,86042],"yaml":true},{"content":"If the type is at the top of the inheritance hierarchy or does not have a parent type, the entity type is returned.","nodes":[{"pos":[0,115],"content":"If the type is at the top of the inheritance hierarchy or does not have a parent type, the entity type is returned.","nodes":[{"content":"If the type is at the top of the inheritance hierarchy or does not have a parent type, the entity type is returned.","pos":[0,115]}]}],"pos":[86053,86169],"yaml":true,"extradata":"MT"},{"content":"The root type of the entity's inheritance hierarchy.","nodes":[{"pos":[0,52],"content":"The root type of the entity's inheritance hierarchy.","nodes":[{"content":"The root type of the entity's inheritance hierarchy.","pos":[0,52]}]}],"pos":[86283,86336],"yaml":true},{"content":"Gets or sets a value that indicates whether the table should be displayed.","nodes":[{"pos":[0,74],"content":"Gets or sets a value that indicates whether the table should be displayed.","nodes":[{"content":"Gets or sets a value that indicates whether the table should be displayed.","pos":[0,74]}]}],"pos":[87299,87374],"yaml":true},{"content":"`true` if the table should be displayed; otherwise, `false`.","nodes":[{"pos":[0,60],"content":"<ph id=\"ph1\">`true`</ph> if the table should be displayed; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the table should be displayed; otherwise, `false`."}],"pos":[87493,87556],"yaml":true},{"content":"Gets the <xref href=\"System.Web.DynamicData.MetaColumn\"></xref> value that the table is sorted by.","nodes":[{"pos":[0,98],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Web.DynamicData.MetaColumn\"&gt;&lt;/xref&gt;</ph> value that the table is sorted by.","source":"Gets the <xref href=\"System.Web.DynamicData.MetaColumn\"></xref> value that the table is sorted by."}],"pos":[88525,88624],"yaml":true},{"content":"The column that the table is sorted by.","nodes":[{"pos":[0,39],"content":"The column that the table is sorted by.","nodes":[{"content":"The column that the table is sorted by.","pos":[0,39]}]}],"pos":[88793,88833],"yaml":true},{"content":"Gets a value that indicates whether entries are sorted in descending order when they are used as parents in a foreign-key relationship.","nodes":[{"pos":[0,135],"content":"Gets a value that indicates whether entries are sorted in descending order when they are used as parents in a foreign-key relationship.","nodes":[{"content":"Gets a value that indicates whether entries are sorted in descending order when they are used as parents in a foreign-key relationship.","pos":[0,135]}]}],"pos":[89828,89964],"yaml":true},{"content":"You can specify sort order by using the <xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute?displayProperty=fullName> attribute.","nodes":[{"pos":[0,143],"content":"You can specify sort order by using the <xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute?displayProperty=fullName> attribute.","nodes":[{"content":"You can specify sort order by using the <ph id=\"ph1\">&lt;xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute?displayProperty=fullName&gt;</ph> attribute.","pos":[0,143],"source":"You can specify sort order by using the <xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute?displayProperty=fullName> attribute."}]}],"pos":[89975,90119],"yaml":true,"extradata":"MT"},{"content":"`true` if entries are sorted in descending order; otherwise, `false`.","nodes":[{"pos":[0,69],"content":"<ph id=\"ph1\">`true`</ph> if entries are sorted in descending order; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if entries are sorted in descending order; otherwise, `false`."}],"pos":[90244,90316],"yaml":true},{"content":"Returns the name of the table.","nodes":[{"pos":[0,30],"content":"Returns the name of the table.","nodes":[{"content":"Returns the name of the table.","pos":[0,30]}]}],"pos":[91283,91314],"yaml":true},{"content":"The name of the table.","nodes":[{"pos":[0,22],"content":"The name of the table.","nodes":[{"content":"The name of the table.","pos":[0,22]}]}],"pos":[91449,91472],"yaml":true},{"content":"Returns a value that indicates whether a specified column can be found.","nodes":[{"pos":[0,71],"content":"Returns a value that indicates whether a specified column can be found.","nodes":[{"content":"Returns a value that indicates whether a specified column can be found.","pos":[0,71]}]}],"pos":[92661,92733],"yaml":true},{"content":"If the `columnName` parameter is null, an <xref:System.InvalidOperationException> exception is thrown.","nodes":[{"pos":[0,102],"content":"If the <ph id=\"ph1\">`columnName`</ph> parameter is null, an <ph id=\"ph2\">&lt;xref:System.InvalidOperationException&gt;</ph> exception is thrown.","source":"If the `columnName` parameter is null, an <xref:System.InvalidOperationException> exception is thrown."}],"pos":[92744,92847],"yaml":true,"extradata":"MT"},{"content":"The name of the column to find.","nodes":[{"pos":[0,31],"content":"The name of the column to find.","nodes":[{"content":"The name of the column to find.","pos":[0,31]}]}],"pos":[93044,93076],"yaml":true},{"content":"When this method returns, contains the `MetaColumn` object for <code>columnName</code>. This parameter is passed uninitialized.","nodes":[{"pos":[0,127],"content":"When this method returns, contains the `MetaColumn` object for <code>columnName</code>. This parameter is passed uninitialized.","nodes":[{"content":"When this method returns, contains the <ph id=\"ph1\">`MetaColumn`</ph> object for <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">columnName</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[0,87],"source":"When this method returns, contains the `MetaColumn` object for <code>columnName</code>."},{"content":"This parameter is passed uninitialized.","pos":[88,127]}]}],"pos":[93158,93286],"yaml":true},{"content":"`true` if the specified column can be found; otherwise, `false`.","nodes":[{"pos":[0,64],"content":"<ph id=\"ph1\">`true`</ph> if the specified column can be found; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the specified column can be found; otherwise, `false`."}],"pos":[93344,93411],"yaml":true},{"content":"Retrieves the metatable that is associated with the specified type and table.","nodes":[{"pos":[0,77],"content":"Retrieves the metatable that is associated with the specified type and table.","nodes":[{"content":"Retrieves the metatable that is associated with the specified type and table.","pos":[0,77]}]}],"pos":[94580,94658],"yaml":true},{"content":"The type of the entity.","nodes":[{"pos":[0,23],"content":"The type of the entity.","nodes":[{"content":"The type of the entity.","pos":[0,23]}]}],"pos":[94855,94879],"yaml":true},{"content":"When this method returns, contains the metatable that is associated with the specified type. This parameter is passed uninitialized.","nodes":[{"pos":[0,132],"content":"When this method returns, contains the metatable that is associated with the specified type. This parameter is passed uninitialized.","nodes":[{"content":"When this method returns, contains the metatable that is associated with the specified type. This parameter is passed uninitialized.","pos":[0,132],"nodes":[{"content":"When this method returns, contains the metatable that is associated with the specified type.","pos":[0,92]},{"content":"This parameter is passed uninitialized.","pos":[93,132]}]}]}],"pos":[94959,95092],"yaml":true},{"content":"The metatable that is associated with the given specified and table.","nodes":[{"pos":[0,68],"content":"The metatable that is associated with the given specified and table.","nodes":[{"content":"The metatable that is associated with the given specified and table.","pos":[0,68]}]}],"pos":[95150,95219],"yaml":true},{"content":"<code>entityType</code> is `null`.","nodes":[{"pos":[0,34],"content":"<ph id=\"ph1\">&lt;code&gt;entityType&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>entityType</code> is `null`."}],"pos":[95393,95428],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.DynamicData.MetaTable\n  commentId: T:System.Web.DynamicData.MetaTable\n  id: MetaTable\n  children:\n  - System.Web.DynamicData.MetaTable.#ctor(System.Web.DynamicData.MetaModel,System.Web.DynamicData.ModelProviders.TableProvider)\n  - System.Web.DynamicData.MetaTable.Attributes\n  - System.Web.DynamicData.MetaTable.BuildAttributeCollection\n  - System.Web.DynamicData.MetaTable.CanDelete(System.Security.Principal.IPrincipal)\n  - System.Web.DynamicData.MetaTable.CanInsert(System.Security.Principal.IPrincipal)\n  - System.Web.DynamicData.MetaTable.CanRead(System.Security.Principal.IPrincipal)\n  - System.Web.DynamicData.MetaTable.CanUpdate(System.Security.Principal.IPrincipal)\n  - System.Web.DynamicData.MetaTable.Columns\n  - System.Web.DynamicData.MetaTable.CreateChildrenColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)\n  - System.Web.DynamicData.MetaTable.CreateColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)\n  - System.Web.DynamicData.MetaTable.CreateContext\n  - System.Web.DynamicData.MetaTable.CreateForeignKeyColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)\n  - System.Web.DynamicData.MetaTable.CreateTable(System.Type)\n  - System.Web.DynamicData.MetaTable.CreateTable(System.ComponentModel.ICustomTypeDescriptor)\n  - System.Web.DynamicData.MetaTable.DataContextPropertyName\n  - System.Web.DynamicData.MetaTable.DataContextType\n  - System.Web.DynamicData.MetaTable.DisplayColumn\n  - System.Web.DynamicData.MetaTable.DisplayName\n  - System.Web.DynamicData.MetaTable.EntityType\n  - System.Web.DynamicData.MetaTable.ForeignKeyColumnsNames\n  - System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Object,System.String)\n  - System.Web.DynamicData.MetaTable.GetActionPath(System.String)\n  - System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Collections.Generic.IList{System.Object})\n  - System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Object)\n  - System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Web.Routing.RouteValueDictionary)\n  - System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Collections.Generic.IList{System.Object},System.String)\n  - System.Web.DynamicData.MetaTable.GetColumn(System.String)\n  - System.Web.DynamicData.MetaTable.GetColumnValuesFromRoute(System.Web.HttpContext)\n  - System.Web.DynamicData.MetaTable.GetDataKeyFromRoute\n  - System.Web.DynamicData.MetaTable.GetDisplayString(System.Object)\n  - System.Web.DynamicData.MetaTable.GetFilteredColumns\n  - System.Web.DynamicData.MetaTable.GetPrimaryKeyDictionary(System.Object)\n  - System.Web.DynamicData.MetaTable.GetPrimaryKeyString(System.Collections.Generic.IList{System.Object})\n  - System.Web.DynamicData.MetaTable.GetPrimaryKeyString(System.Object)\n  - System.Web.DynamicData.MetaTable.GetPrimaryKeyValues(System.Object)\n  - System.Web.DynamicData.MetaTable.GetQuery\n  - System.Web.DynamicData.MetaTable.GetQuery(System.Object)\n  - System.Web.DynamicData.MetaTable.GetScaffoldColumns(System.Web.UI.WebControls.DataBoundControlMode,System.Web.DynamicData.ContainerType)\n  - System.Web.DynamicData.MetaTable.GetTable(System.Type)\n  - System.Web.DynamicData.MetaTable.HasPrimaryKey\n  - System.Web.DynamicData.MetaTable.Initialize\n  - System.Web.DynamicData.MetaTable.IsReadOnly\n  - System.Web.DynamicData.MetaTable.ListActionPath\n  - System.Web.DynamicData.MetaTable.Model\n  - System.Web.DynamicData.MetaTable.Name\n  - System.Web.DynamicData.MetaTable.PrimaryKeyColumns\n  - System.Web.DynamicData.MetaTable.Provider\n  - System.Web.DynamicData.MetaTable.ResetMetadata\n  - System.Web.DynamicData.MetaTable.RootEntityType\n  - System.Web.DynamicData.MetaTable.Scaffold\n  - System.Web.DynamicData.MetaTable.SortColumn\n  - System.Web.DynamicData.MetaTable.SortDescending\n  - System.Web.DynamicData.MetaTable.ToString\n  - System.Web.DynamicData.MetaTable.TryGetColumn(System.String,System.Web.DynamicData.MetaColumn@)\n  - System.Web.DynamicData.MetaTable.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)\n  langs:\n  - csharp\n  name: MetaTable\n  nameWithType: MetaTable\n  fullName: System.Web.DynamicData.MetaTable\n  type: Class\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Represents the metadata that describes a table for use by Dynamic Data pages.\n  remarks: ''\n  example:\n  - \"The following example is part of the code-behind file for the Insert.aspx page template. The <xref:System.Web.DynamicData.MetaTable> instance is initialized in the `Page_Load` method. The title for the page is set to the table `DisplayName` property.  \\n  \\n```csharp  \\npublic partial class Insert : System.Web.UI.Page {  \\n    protected MetaTable table;     \\n  \\n    protected void Page_Load(object sender, EventArgs e) {  \\n        table = DetailsDataSource.GetTable();  \\n        Title = table.DisplayName;  \\n    }  \\n}  \\n```  \\n  \\n```vb  \\nPartial Class Insert  \\n    Inherits System.Web.UI.Page  \\n  \\n    Protected table As MetaTable      \\n  \\n    Protected Sub Page_Load(ByVal sender As Object, _  \\n            ByVal e As EventArgs)  \\n        table = DetailsDataSource.GetTable  \\n        Title = table.DisplayName  \\n    End Sub  \\nEnd Class  \\n```\"\n  syntax:\n    content: public class MetaTable\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaTable.#ctor(System.Web.DynamicData.MetaModel,System.Web.DynamicData.ModelProviders.TableProvider)\n  commentId: M:System.Web.DynamicData.MetaTable.#ctor(System.Web.DynamicData.MetaModel,System.Web.DynamicData.ModelProviders.TableProvider)\n  id: '#ctor(System.Web.DynamicData.MetaModel,System.Web.DynamicData.ModelProviders.TableProvider)'\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: MetaTable(MetaModel, TableProvider)\n  nameWithType: MetaTable.MetaTable(MetaModel, TableProvider)\n  fullName: MetaTable.MetaTable(MetaModel, TableProvider)\n  type: Constructor\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Initializes a new instance of the <xref href=\"System.Web.DynamicData.MetaTable\"></xref> class.\n  remarks: The `tableProvider` parameter is used to initialize the <xref:System.Web.DynamicData.MetaTable.DataContextPropertyName%2A> property.\n  syntax:\n    content: public MetaTable (System.Web.DynamicData.MetaModel metaModel, System.Web.DynamicData.ModelProviders.TableProvider tableProvider);\n    parameters:\n    - id: metaModel\n      type: System.Web.DynamicData.MetaModel\n      description: The entity meta model.\n    - id: tableProvider\n      type: System.Web.DynamicData.ModelProviders.TableProvider\n      description: The entity model provider.\n  overload: System.Web.DynamicData.MetaTable.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaTable.Attributes\n  commentId: P:System.Web.DynamicData.MetaTable.Attributes\n  id: Attributes\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: Attributes\n  nameWithType: MetaTable.Attributes\n  fullName: MetaTable.Attributes\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets the attributes that are associated with the table.\n  syntax:\n    content: public System.ComponentModel.AttributeCollection Attributes { get; }\n    return:\n      type: System.ComponentModel.AttributeCollection\n      description: A collection that contains the attributes of the table.\n  overload: System.Web.DynamicData.MetaTable.Attributes*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaTable.BuildAttributeCollection\n  commentId: M:System.Web.DynamicData.MetaTable.BuildAttributeCollection\n  id: BuildAttributeCollection\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: BuildAttributeCollection()\n  nameWithType: MetaTable.BuildAttributeCollection()\n  fullName: MetaTable.BuildAttributeCollection()\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Creates the attribute collection.\n  syntax:\n    content: protected virtual System.ComponentModel.AttributeCollection BuildAttributeCollection ();\n    parameters: []\n    return:\n      type: System.ComponentModel.AttributeCollection\n      description: The attribute collection.\n  overload: System.Web.DynamicData.MetaTable.BuildAttributeCollection*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaTable.CanDelete(System.Security.Principal.IPrincipal)\n  commentId: M:System.Web.DynamicData.MetaTable.CanDelete(System.Security.Principal.IPrincipal)\n  id: CanDelete(System.Security.Principal.IPrincipal)\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: CanDelete(IPrincipal)\n  nameWithType: MetaTable.CanDelete(IPrincipal)\n  fullName: MetaTable.CanDelete(IPrincipal)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets a value that indicates whether the specified user is allowed to perform delete operations.\n  remarks: A principal object represents the security context of the user on whose behalf the code is running, including that user's identity and any roles to which they belong.\n  syntax:\n    content: public virtual bool CanDelete (System.Security.Principal.IPrincipal principal);\n    parameters:\n    - id: principal\n      type: System.Security.Principal.IPrincipal\n      description: The user's security context.\n    return:\n      type: System.Boolean\n      description: '`true` if the user is allowed to perform delete operations; otherwise, `false`.'\n  overload: System.Web.DynamicData.MetaTable.CanDelete*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaTable.CanInsert(System.Security.Principal.IPrincipal)\n  commentId: M:System.Web.DynamicData.MetaTable.CanInsert(System.Security.Principal.IPrincipal)\n  id: CanInsert(System.Security.Principal.IPrincipal)\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: CanInsert(IPrincipal)\n  nameWithType: MetaTable.CanInsert(IPrincipal)\n  fullName: MetaTable.CanInsert(IPrincipal)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets a value that indicates whether the specified user is allowed to perform insert operations.\n  remarks: A principal object represents the security context of the user on whose behalf the code is running, including that user's identity and any roles to which they belong.\n  syntax:\n    content: public virtual bool CanInsert (System.Security.Principal.IPrincipal principal);\n    parameters:\n    - id: principal\n      type: System.Security.Principal.IPrincipal\n      description: The user's security context.\n    return:\n      type: System.Boolean\n      description: '`true` if the user is allowed to perform insert operations; otherwise, `false`.'\n  overload: System.Web.DynamicData.MetaTable.CanInsert*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaTable.CanRead(System.Security.Principal.IPrincipal)\n  commentId: M:System.Web.DynamicData.MetaTable.CanRead(System.Security.Principal.IPrincipal)\n  id: CanRead(System.Security.Principal.IPrincipal)\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: CanRead(IPrincipal)\n  nameWithType: MetaTable.CanRead(IPrincipal)\n  fullName: MetaTable.CanRead(IPrincipal)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets a value that indicates whether the specified user is allowed to perform read operations.\n  remarks: A principal object represents the security context of the user on whose behalf the code is running, including that user's identity and any roles to which they belong.\n  syntax:\n    content: public virtual bool CanRead (System.Security.Principal.IPrincipal principal);\n    parameters:\n    - id: principal\n      type: System.Security.Principal.IPrincipal\n      description: The user's security context.\n    return:\n      type: System.Boolean\n      description: '`true` if the user is allowed to perform read operations; otherwise, `false`.'\n  overload: System.Web.DynamicData.MetaTable.CanRead*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaTable.CanUpdate(System.Security.Principal.IPrincipal)\n  commentId: M:System.Web.DynamicData.MetaTable.CanUpdate(System.Security.Principal.IPrincipal)\n  id: CanUpdate(System.Security.Principal.IPrincipal)\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: CanUpdate(IPrincipal)\n  nameWithType: MetaTable.CanUpdate(IPrincipal)\n  fullName: MetaTable.CanUpdate(IPrincipal)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets a value that indicates whether the specified user is allowed to perform update operations.\n  remarks: A principal object represents the security context of the user on whose behalf the code is running, including that user's identity and any roles to which they belong.\n  syntax:\n    content: public virtual bool CanUpdate (System.Security.Principal.IPrincipal principal);\n    parameters:\n    - id: principal\n      type: System.Security.Principal.IPrincipal\n      description: The user's security context.\n    return:\n      type: System.Boolean\n      description: '`true` if the user is allowed to perform update operations; otherwise, `false`.'\n  overload: System.Web.DynamicData.MetaTable.CanUpdate*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaTable.Columns\n  commentId: P:System.Web.DynamicData.MetaTable.Columns\n  id: Columns\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: Columns\n  nameWithType: MetaTable.Columns\n  fullName: MetaTable.Columns\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets the column collection for the table.\n  remarks: ''\n  example:\n  - \"The following example shows how to use the <xref:System.Web.DynamicData.MetaTable.Columns%2A> property. In the example, the Dynamic Data page templates have been copied to the \\\\DynamicData\\\\CustomPages\\\\ProductDescriptions folder to provide a custom display for the ProductDescription table of the AdventureWorksLT database. The markup of the Insert.aspx file is changed to add an `OnDataBound` event handler named `DetailsView1_DataBound`. In the event handler, the <xref:System.Web.DynamicData.DynamicDataExtensions.FindMetaTable%2A> method is used to find the meta table. The <xref:System.Web.DynamicData.MetaTable.Columns%2A> property is used to display the number of columns in the table.  \\n  \\n [!code-csharp[System.Web.DynamicData.DynamicDataExtensions#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.DynamicDataExtensions/cs/Insert.aspx.cs#1)]  \\n<!-- TODO: review snippet reference [!code-csharp[System.Web.DynamicData.DynamicDataExtensions#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.DynamicDataExtensions/cs/Insert.aspx#2)]  -->\"\n  syntax:\n    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Web.DynamicData.MetaColumn> Columns { get; }\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Web.DynamicData.MetaColumn}\n      description: A collection that contains the columns for the table.\n  overload: System.Web.DynamicData.MetaTable.Columns*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaTable.CreateChildrenColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)\n  commentId: M:System.Web.DynamicData.MetaTable.CreateChildrenColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)\n  id: CreateChildrenColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: CreateChildrenColumn(ColumnProvider)\n  nameWithType: MetaTable.CreateChildrenColumn(ColumnProvider)\n  fullName: MetaTable.CreateChildrenColumn(ColumnProvider)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Creates a new <xref href=\"System.Web.DynamicData.MetaChildrenColumn\"></xref> object.\n  remarks: This method can be overridden to create a derived type.\n  syntax:\n    content: protected virtual System.Web.DynamicData.MetaChildrenColumn CreateChildrenColumn (System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider);\n    parameters:\n    - id: columnProvider\n      type: System.Web.DynamicData.ModelProviders.ColumnProvider\n      description: The column provider.\n    return:\n      type: System.Web.DynamicData.MetaChildrenColumn\n      description: The new child metacolumn object.\n  overload: System.Web.DynamicData.MetaTable.CreateChildrenColumn*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaTable.CreateColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)\n  commentId: M:System.Web.DynamicData.MetaTable.CreateColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)\n  id: CreateColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: CreateColumn(ColumnProvider)\n  nameWithType: MetaTable.CreateColumn(ColumnProvider)\n  fullName: MetaTable.CreateColumn(ColumnProvider)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Creates a <xref href=\"System.Web.DynamicData.MetaColumn\"></xref> object.\n  remarks: This method can be overridden to create a derived type.\n  syntax:\n    content: protected virtual System.Web.DynamicData.MetaColumn CreateColumn (System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider);\n    parameters:\n    - id: columnProvider\n      type: System.Web.DynamicData.ModelProviders.ColumnProvider\n      description: The column provider.\n    return:\n      type: System.Web.DynamicData.MetaColumn\n      description: The new metacolumn object.\n  overload: System.Web.DynamicData.MetaTable.CreateColumn*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaTable.CreateContext\n  commentId: M:System.Web.DynamicData.MetaTable.CreateContext\n  id: CreateContext\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: CreateContext()\n  nameWithType: MetaTable.CreateContext()\n  fullName: MetaTable.CreateContext()\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Returns the data context for the table.\n  remarks: The data context is retrieved from a new context that is instantiated by calling the <xref:System.Web.DynamicData.MetaTable.CreateContext%2A?displayProperty=fullName> method. For more information, see the <xref:System.Web.DynamicData.MetaTable?displayProperty=fullName> class overview.\n  syntax:\n    content: public virtual object CreateContext ();\n    parameters: []\n    return:\n      type: System.Object\n      description: The data context for the table.\n  overload: System.Web.DynamicData.MetaTable.CreateContext*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaTable.CreateForeignKeyColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)\n  commentId: M:System.Web.DynamicData.MetaTable.CreateForeignKeyColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)\n  id: CreateForeignKeyColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: CreateForeignKeyColumn(ColumnProvider)\n  nameWithType: MetaTable.CreateForeignKeyColumn(ColumnProvider)\n  fullName: MetaTable.CreateForeignKeyColumn(ColumnProvider)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Creates an object that contains foreign-key metadata.\n  remarks: This method can be overridden to create a derived type.\n  syntax:\n    content: protected virtual System.Web.DynamicData.MetaForeignKeyColumn CreateForeignKeyColumn (System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider);\n    parameters:\n    - id: columnProvider\n      type: System.Web.DynamicData.ModelProviders.ColumnProvider\n      description: The column provider.\n    return:\n      type: System.Web.DynamicData.MetaForeignKeyColumn\n      description: An object that contains foreign-key metadata.\n  overload: System.Web.DynamicData.MetaTable.CreateForeignKeyColumn*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaTable.CreateTable(System.Type)\n  commentId: M:System.Web.DynamicData.MetaTable.CreateTable(System.Type)\n  id: CreateTable(System.Type)\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: CreateTable(Type)\n  nameWithType: MetaTable.CreateTable(Type)\n  fullName: MetaTable.CreateTable(Type)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Creates the metadata for the specified table.\n  syntax:\n    content: public static System.Web.DynamicData.MetaTable CreateTable (Type entityType);\n    parameters:\n    - id: entityType\n      type: System.Type\n      description: The table type for which to generate metadata.\n    return:\n      type: System.Web.DynamicData.MetaTable\n      description: An object that contains the table metadata.\n  overload: System.Web.DynamicData.MetaTable.CreateTable*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaTable.CreateTable(System.ComponentModel.ICustomTypeDescriptor)\n  commentId: M:System.Web.DynamicData.MetaTable.CreateTable(System.ComponentModel.ICustomTypeDescriptor)\n  id: CreateTable(System.ComponentModel.ICustomTypeDescriptor)\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: CreateTable(ICustomTypeDescriptor)\n  nameWithType: MetaTable.CreateTable(ICustomTypeDescriptor)\n  fullName: MetaTable.CreateTable(ICustomTypeDescriptor)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Creates the metadata for the specified table.\n  syntax:\n    content: public static System.Web.DynamicData.MetaTable CreateTable (System.ComponentModel.ICustomTypeDescriptor typeDescriptor);\n    parameters:\n    - id: typeDescriptor\n      type: System.ComponentModel.ICustomTypeDescriptor\n      description: Information about the table type.\n    return:\n      type: System.Web.DynamicData.MetaTable\n      description: An object that contains the table metadata.\n  overload: System.Web.DynamicData.MetaTable.CreateTable*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaTable.DataContextPropertyName\n  commentId: P:System.Web.DynamicData.MetaTable.DataContextPropertyName\n  id: DataContextPropertyName\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: DataContextPropertyName\n  nameWithType: MetaTable.DataContextPropertyName\n  fullName: MetaTable.DataContextPropertyName\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets the name of the table.\n  remarks: The name comes from the <xref:System.Web.DynamicData.MetaTable.DataContextType%2A> object that the table belongs to.\n  syntax:\n    content: public string DataContextPropertyName { get; }\n    return:\n      type: System.String\n      description: The name of the table.\n  overload: System.Web.DynamicData.MetaTable.DataContextPropertyName*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaTable.DataContextType\n  commentId: P:System.Web.DynamicData.MetaTable.DataContextType\n  id: DataContextType\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: DataContextType\n  nameWithType: MetaTable.DataContextType\n  fullName: MetaTable.DataContextType\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets the type of the data context that is associated with the table.\n  remarks: For more information, see the <xref:System.Data.Linq.DataContext?displayProperty=fullName> class overview.\n  syntax:\n    content: public Type DataContextType { get; }\n    return:\n      type: System.Type\n      description: The type of the data context.\n  overload: System.Web.DynamicData.MetaTable.DataContextType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaTable.DisplayColumn\n  commentId: P:System.Web.DynamicData.MetaTable.DisplayColumn\n  id: DisplayColumn\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: DisplayColumn\n  nameWithType: MetaTable.DisplayColumn\n  fullName: MetaTable.DisplayColumn\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets the column that is used to display values when entries in this table are used as parents in foreign-key relationships.\n  remarks: \"The column that is returned is selected in this order:  \\n  \\n1.  The column that is specified by using the <xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute> attribute.  \\n  \\n2.  The first string column that is not in the primary key.  \\n  \\n3.  The first string column that is in the primary key.  \\n  \\n4.  The first non-string column that is in the primary key.  \\n  \\n5.  The first column.\"\n  syntax:\n    content: public virtual System.Web.DynamicData.MetaColumn DisplayColumn { get; }\n    return:\n      type: System.Web.DynamicData.MetaColumn\n      description: The column that is used to display values when entries in this table are used as parents in foreign-key relationships.\n  overload: System.Web.DynamicData.MetaTable.DisplayColumn*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaTable.DisplayName\n  commentId: P:System.Web.DynamicData.MetaTable.DisplayName\n  id: DisplayName\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: DisplayName\n  nameWithType: MetaTable.DisplayName\n  fullName: MetaTable.DisplayName\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets the name of the table in a user-friendly format.\n  remarks: The value of this property defaults to the value of the <xref:System.Web.DynamicData.MetaTable.Name%2A> property. You can customize the value of this property by using the <xref:System.ComponentModel.DisplayNameAttribute?displayProperty=fullName> attribute.\n  syntax:\n    content: public virtual string DisplayName { get; }\n    return:\n      type: System.String\n      description: The string that represents the user-friendly name of the table.\n  overload: System.Web.DynamicData.MetaTable.DisplayName*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaTable.EntityType\n  commentId: P:System.Web.DynamicData.MetaTable.EntityType\n  id: EntityType\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: EntityType\n  nameWithType: MetaTable.EntityType\n  fullName: MetaTable.EntityType\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets the entity type that represents the table.\n  syntax:\n    content: public Type EntityType { get; }\n    return:\n      type: System.Type\n      description: The type that represents the entity.\n  overload: System.Web.DynamicData.MetaTable.EntityType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaTable.ForeignKeyColumnsNames\n  commentId: P:System.Web.DynamicData.MetaTable.ForeignKeyColumnsNames\n  id: ForeignKeyColumnsNames\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: ForeignKeyColumnsNames\n  nameWithType: MetaTable.ForeignKeyColumnsNames\n  fullName: MetaTable.ForeignKeyColumnsNames\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets a comma-separated list of foreign-key names.\n  syntax:\n    content: public string ForeignKeyColumnsNames { get; }\n    return:\n      type: System.String\n      description: A comma-separated list of foreign-key names.\n  overload: System.Web.DynamicData.MetaTable.ForeignKeyColumnsNames*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Object,System.String)\n  commentId: M:System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Object,System.String)\n  id: GetActionPath(System.String,System.Object,System.String)\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: GetActionPath(String, Object, String)\n  nameWithType: MetaTable.GetActionPath(String, Object, String)\n  fullName: MetaTable.GetActionPath(String, Object, String)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Returns the action path for the specified row by using the name of the action and the virtual path of the action.\n  remarks: The action path is a URL for an action for a specific entity. For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=fullName> class overview.\n  syntax:\n    content: public string GetActionPath (string action, object row, string path);\n    parameters:\n    - id: action\n      type: System.String\n      description: The name of the action.\n    - id: row\n      type: System.Object\n      description: An object that contains the row for the action path.\n    - id: path\n      type: System.String\n      description: The virtual path of the action.\n    return:\n      type: System.String\n      description: The action path for the specified row.\n  overload: System.Web.DynamicData.MetaTable.GetActionPath*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaTable.GetActionPath(System.String)\n  commentId: M:System.Web.DynamicData.MetaTable.GetActionPath(System.String)\n  id: GetActionPath(System.String)\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: GetActionPath(String)\n  nameWithType: MetaTable.GetActionPath(String)\n  fullName: MetaTable.GetActionPath(String)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Returns the action path for the current table and the specified action.\n  remarks: ''\n  example:\n  - The action path is a URL for an action for a specific entity. For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=fullName> class overview.\n  syntax:\n    content: public string GetActionPath (string action);\n    parameters:\n    - id: action\n      type: System.String\n      description: The name of the action.\n    return:\n      type: System.String\n      description: The action path for the specified action.\n  overload: System.Web.DynamicData.MetaTable.GetActionPath*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Collections.Generic.IList{System.Object})\n  commentId: M:System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Collections.Generic.IList{System.Object})\n  id: GetActionPath(System.String,System.Collections.Generic.IList{System.Object})\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: GetActionPath(String, IList<Object>)\n  nameWithType: MetaTable.GetActionPath(String, IList<Object>)\n  fullName: MetaTable.GetActionPath(String, IList<Object>)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Returns the action path for the current table, specified action, and specified primary key.\n  remarks: The action path is a URL for an action for a specific entity. For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=fullName> class overview.\n  syntax:\n    content: public string GetActionPath (string action, System.Collections.Generic.IList<object> primaryKeyValues);\n    parameters:\n    - id: action\n      type: System.String\n      description: The name of the action.\n    - id: primaryKeyValues\n      type: System.Collections.Generic.IList{System.Object}\n      description: The list of column values that make up the primary key.\n    return:\n      type: System.String\n      description: The action path for the specified action and primary key.\n  overload: System.Web.DynamicData.MetaTable.GetActionPath*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Object)\n  commentId: M:System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Object)\n  id: GetActionPath(System.String,System.Object)\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: GetActionPath(String, Object)\n  nameWithType: MetaTable.GetActionPath(String, Object)\n  fullName: MetaTable.GetActionPath(String, Object)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Returns the action path for the specified row by using the name of the action.\n  remarks: \"The action path is a URL for an action for a specific entity. The action path contains the primary-key column names, which can be used for query-string filters.  \\n  \\n For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=fullName> class overview.\"\n  syntax:\n    content: public string GetActionPath (string action, object row);\n    parameters:\n    - id: action\n      type: System.String\n      description: The name of the action.\n    - id: row\n      type: System.Object\n      description: The row to get the action path for.\n    return:\n      type: System.String\n      description: The action path for the specified row.\n  overload: System.Web.DynamicData.MetaTable.GetActionPath*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Web.Routing.RouteValueDictionary)\n  commentId: M:System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Web.Routing.RouteValueDictionary)\n  id: GetActionPath(System.String,System.Web.Routing.RouteValueDictionary)\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: GetActionPath(String, RouteValueDictionary)\n  nameWithType: MetaTable.GetActionPath(String, RouteValueDictionary)\n  fullName: MetaTable.GetActionPath(String, RouteValueDictionary)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Returns the action path for the current table and for the specified action and routes.\n  remarks: The action path is a URL for an action for a specific entity. For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=fullName> class overview.\n  syntax:\n    content: public string GetActionPath (string action, System.Web.Routing.RouteValueDictionary routeValues);\n    parameters:\n    - id: action\n      type: System.String\n      description: The name of the action.\n    - id: routeValues\n      type: System.Web.Routing.RouteValueDictionary\n      description: The list of routes for the action.\n    return:\n      type: System.String\n      description: The action path for the specified action and routes.\n  overload: System.Web.DynamicData.MetaTable.GetActionPath*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Collections.Generic.IList{System.Object},System.String)\n  commentId: M:System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Collections.Generic.IList{System.Object},System.String)\n  id: GetActionPath(System.String,System.Collections.Generic.IList{System.Object},System.String)\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: GetActionPath(String, IList<Object>, String)\n  nameWithType: MetaTable.GetActionPath(String, IList<Object>, String)\n  fullName: MetaTable.GetActionPath(String, IList<Object>, String)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Appends query strings to the action path, based on the specified primary key and virtual path.\n  remarks: The action path is a URL for an action for a specific entity. For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=fullName> class overview.\n  syntax:\n    content: public string GetActionPath (string action, System.Collections.Generic.IList<object> primaryKeyValues, string path);\n    parameters:\n    - id: action\n      type: System.String\n      description: The name of the action.\n    - id: primaryKeyValues\n      type: System.Collections.Generic.IList{System.Object}\n      description: The list of column values that make up the primary key.\n    - id: path\n      type: System.String\n      description: The virtual path of the action.\n    return:\n      type: System.String\n      description: The action path for the specified primary key and virtual path, with query-string values appended to it.\n  overload: System.Web.DynamicData.MetaTable.GetActionPath*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaTable.GetColumn(System.String)\n  commentId: M:System.Web.DynamicData.MetaTable.GetColumn(System.String)\n  id: GetColumn(System.String)\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: GetColumn(String)\n  nameWithType: MetaTable.GetColumn(String)\n  fullName: MetaTable.GetColumn(String)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Returns the metadata for the specified column.\n  syntax:\n    content: public System.Web.DynamicData.MetaColumn GetColumn (string columnName);\n    parameters:\n    - id: columnName\n      type: System.String\n      description: The name of the column to get metadata for.\n    return:\n      type: System.Web.DynamicData.MetaColumn\n      description: The column metadata.\n  overload: System.Web.DynamicData.MetaTable.GetColumn*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaTable.GetColumnValuesFromRoute(System.Web.HttpContext)\n  commentId: M:System.Web.DynamicData.MetaTable.GetColumnValuesFromRoute(System.Web.HttpContext)\n  id: GetColumnValuesFromRoute(System.Web.HttpContext)\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: GetColumnValuesFromRoute(HttpContext)\n  nameWithType: MetaTable.GetColumnValuesFromRoute(HttpContext)\n  fullName: MetaTable.GetColumnValuesFromRoute(HttpContext)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets the collection of column values.\n  syntax:\n    content: public System.Collections.Generic.IDictionary<string,object> GetColumnValuesFromRoute (System.Web.HttpContext context);\n    parameters:\n    - id: context\n      type: System.Web.HttpContext\n      description: The context for the specified Web request.\n    return:\n      type: System.Collections.Generic.IDictionary{System.String,System.Object}\n      description: The collection of column values.\n  overload: System.Web.DynamicData.MetaTable.GetColumnValuesFromRoute*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaTable.GetDataKeyFromRoute\n  commentId: M:System.Web.DynamicData.MetaTable.GetDataKeyFromRoute\n  id: GetDataKeyFromRoute\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: GetDataKeyFromRoute()\n  nameWithType: MetaTable.GetDataKeyFromRoute()\n  fullName: MetaTable.GetDataKeyFromRoute()\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Retrieves the primary key of the entity from the route values.\n  remarks: The route values typically come from the request URL query string.\n  syntax:\n    content: public System.Web.UI.WebControls.DataKey GetDataKeyFromRoute ();\n    parameters: []\n    return:\n      type: System.Web.UI.WebControls.DataKey\n      description: The primary-key values of the entities, if they are found; otherwise, `null`.\n  overload: System.Web.DynamicData.MetaTable.GetDataKeyFromRoute*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaTable.GetDisplayString(System.Object)\n  commentId: M:System.Web.DynamicData.MetaTable.GetDisplayString(System.Object)\n  id: GetDisplayString(System.Object)\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: GetDisplayString(Object)\n  nameWithType: MetaTable.GetDisplayString(Object)\n  fullName: MetaTable.GetDisplayString(Object)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Returns the value to use as the display string for an instance of a row when the row is used in foreign-key relationships.\n  remarks: If the row is `null`, an empty string is returned. If the entity class includes an override of the <xref:System.Web.DynamicData.MetaTable.ToString%2A> method, the overridden <xref:System.Web.DynamicData.MetaTable.ToString%2A> value is returned. Otherwise, the method returns the `ToString` representation of the value of the <xref:System.Web.DynamicData.MetaTable.DisplayColumn%2A> property for the specified row.\n  syntax:\n    content: public virtual string GetDisplayString (object row);\n    parameters:\n    - id: row\n      type: System.Object\n      description: The row to get the display string for.\n    return:\n      type: System.String\n      description: The display name for an instance of a row.\n  overload: System.Web.DynamicData.MetaTable.GetDisplayString*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaTable.GetFilteredColumns\n  commentId: M:System.Web.DynamicData.MetaTable.GetFilteredColumns\n  id: GetFilteredColumns\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: GetFilteredColumns()\n  nameWithType: MetaTable.GetFilteredColumns()\n  fullName: MetaTable.GetFilteredColumns()\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Retrieves a list of columns that are filterable.\n  remarks: A column is filterable if it is annotated with the <xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute> attribute and the `Enabled` property of the <xref:System.Web.Mvc.FilterAttribute> attribute of the column is set to `true`.\n  syntax:\n    content: public virtual System.Collections.Generic.IEnumerable<System.Web.DynamicData.MetaColumn> GetFilteredColumns ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Web.DynamicData.MetaColumn}\n      description: A list of columns that are filterable.\n  overload: System.Web.DynamicData.MetaTable.GetFilteredColumns*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaTable.GetPrimaryKeyDictionary(System.Object)\n  commentId: M:System.Web.DynamicData.MetaTable.GetPrimaryKeyDictionary(System.Object)\n  id: GetPrimaryKeyDictionary(System.Object)\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: GetPrimaryKeyDictionary(Object)\n  nameWithType: MetaTable.GetPrimaryKeyDictionary(Object)\n  fullName: MetaTable.GetPrimaryKeyDictionary(Object)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Retrieves a dictionary of primary-key names and values for the specified row.\n  remarks: ''\n  example:\n  - \"The following example shows how to create a primary-key dictionary.  \\n  \\n```csharp  \\nprivate RouteValueDictionary GetRouteValues(MetaTable table, object row) {  \\n    RouteValueDictionary routeValues = GetRouteValues();  \\n    foreach (var pk in table.GetPrimaryKeyDictionary(row)) {  \\n        routeValues[pk.Key] = pk.Value;  \\n    }  \\n    return routeValues;  \\n}   \\n```  \\n  \\n```vb  \\nPrivate Function GetRouteValues(ByVal table As MetaTable, _  \\n        ByVal row As Object) As RouteValueDictionary   \\n    Dim routeValues As RouteValueDictionary = GetRouteValues()   \\n    For Each pk In table.GetPrimaryKeyDictionary(row)   \\n        routeValues(pk.Key) = pk.Value   \\n    Next   \\n    Return routeValues   \\nEnd Function   \\n```\"\n  syntax:\n    content: public System.Collections.Generic.IDictionary<string,object> GetPrimaryKeyDictionary (object row);\n    parameters:\n    - id: row\n      type: System.Object\n      description: A row.\n    return:\n      type: System.Collections.Generic.IDictionary{System.String,System.Object}\n      description: A dictionary of primary-key names and values.\n  overload: System.Web.DynamicData.MetaTable.GetPrimaryKeyDictionary*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaTable.GetPrimaryKeyString(System.Collections.Generic.IList{System.Object})\n  commentId: M:System.Web.DynamicData.MetaTable.GetPrimaryKeyString(System.Collections.Generic.IList{System.Object})\n  id: GetPrimaryKeyString(System.Collections.Generic.IList{System.Object})\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: GetPrimaryKeyString(IList<Object>)\n  nameWithType: MetaTable.GetPrimaryKeyString(IList<Object>)\n  fullName: MetaTable.GetPrimaryKeyString(IList<Object>)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Returns a comma-separated list of column values that represent the primary key for the specified row.\n  syntax:\n    content: public string GetPrimaryKeyString (System.Collections.Generic.IList<object> primaryKeyValues);\n    parameters:\n    - id: primaryKeyValues\n      type: System.Collections.Generic.IList{System.Object}\n      description: The list of column values that make up the primary key.\n    return:\n      type: System.String\n      description: A comma-separated list of column values. If the list is empty, an empty string is returned.\n  overload: System.Web.DynamicData.MetaTable.GetPrimaryKeyString*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaTable.GetPrimaryKeyString(System.Object)\n  commentId: M:System.Web.DynamicData.MetaTable.GetPrimaryKeyString(System.Object)\n  id: GetPrimaryKeyString(System.Object)\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: GetPrimaryKeyString(Object)\n  nameWithType: MetaTable.GetPrimaryKeyString(Object)\n  fullName: MetaTable.GetPrimaryKeyString(Object)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Returns a comma-separated list of column values that represent the primary key for the specified row.\n  syntax:\n    content: public string GetPrimaryKeyString (object row);\n    parameters:\n    - id: row\n      type: System.Object\n      description: The row to get the primary key for.\n    return:\n      type: System.String\n      description: A comma-separated list of column values that represent the primary key for the row.\n  overload: System.Web.DynamicData.MetaTable.GetPrimaryKeyString*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaTable.GetPrimaryKeyValues(System.Object)\n  commentId: M:System.Web.DynamicData.MetaTable.GetPrimaryKeyValues(System.Object)\n  id: GetPrimaryKeyValues(System.Object)\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: GetPrimaryKeyValues(Object)\n  nameWithType: MetaTable.GetPrimaryKeyValues(Object)\n  fullName: MetaTable.GetPrimaryKeyValues(Object)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Returns a collection of column values that represent the primary key for the specified row.\n  syntax:\n    content: public System.Collections.Generic.IList<object> GetPrimaryKeyValues (object row);\n    parameters:\n    - id: row\n      type: System.Object\n      description: The row to get the primary key for.\n    return:\n      type: System.Collections.Generic.IList{System.Object}\n      description: A collection of column values that represent the primary key for the row.\n  overload: System.Web.DynamicData.MetaTable.GetPrimaryKeyValues*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaTable.GetQuery\n  commentId: M:System.Web.DynamicData.MetaTable.GetQuery\n  id: GetQuery\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: GetQuery()\n  nameWithType: MetaTable.GetQuery()\n  fullName: MetaTable.GetQuery()\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Returns the <xref href=\"System.Linq.IQueryable\"></xref> instance for the entity type that represents the table.\n  syntax:\n    content: public System.Linq.IQueryable GetQuery ();\n    parameters: []\n    return:\n      type: System.Linq.IQueryable\n      description: The <xref href=\"System.Linq.IQueryable\"></xref> instance for the entity type.\n  overload: System.Web.DynamicData.MetaTable.GetQuery*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaTable.GetQuery(System.Object)\n  commentId: M:System.Web.DynamicData.MetaTable.GetQuery(System.Object)\n  id: GetQuery(System.Object)\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: GetQuery(Object)\n  nameWithType: MetaTable.GetQuery(Object)\n  fullName: MetaTable.GetQuery(Object)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Returns the <xref href=\"System.Linq.IQueryable\"></xref> instance for the entity type that represents the table by using the data context.\n  remarks: If the `context` parameter is `null`, this method creates a new context by calling the <xref:System.Web.DynamicData.MetaTable.CreateContext%2A?displayProperty=fullName> method.\n  syntax:\n    content: public virtual System.Linq.IQueryable GetQuery (object context);\n    parameters:\n    - id: context\n      type: System.Object\n      description: The context of the <xref href=\"System.Web.DynamicData.MetaTable\"></xref> object.\n    return:\n      type: System.Linq.IQueryable\n      description: The <xref href=\"System.Linq.IQueryable\"></xref> instance for the entity type that represents the table in the data context.\n  overload: System.Web.DynamicData.MetaTable.GetQuery*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaTable.GetScaffoldColumns(System.Web.UI.WebControls.DataBoundControlMode,System.Web.DynamicData.ContainerType)\n  commentId: M:System.Web.DynamicData.MetaTable.GetScaffoldColumns(System.Web.UI.WebControls.DataBoundControlMode,System.Web.DynamicData.ContainerType)\n  id: GetScaffoldColumns(System.Web.UI.WebControls.DataBoundControlMode,System.Web.DynamicData.ContainerType)\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: GetScaffoldColumns(DataBoundControlMode, ContainerType)\n  nameWithType: MetaTable.GetScaffoldColumns(DataBoundControlMode, ContainerType)\n  fullName: MetaTable.GetScaffoldColumns(DataBoundControlMode, ContainerType)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Returns a list of columns to display by using scaffolding.\n  remarks: \"This method returns all columns whose <xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute> property is set to `true` except the following:  \\n  \\n-   Long string columns, which are columns whose <xref:System.Web.DynamicData.MetaColumn.IsLongString%2A> property is set to `true` and whose `containerType` parameter is `true`.  \\n  \\n-   Child columns whose <xref:System.Web.UI.WebControls.DataBoundControlMode> value is set to <xref:System.Web.UI.WebControls.DataBoundControlMode.Insert>.\"\n  syntax:\n    content: public virtual System.Collections.Generic.IEnumerable<System.Web.DynamicData.MetaColumn> GetScaffoldColumns (System.Web.UI.WebControls.DataBoundControlMode mode, System.Web.DynamicData.ContainerType containerType);\n    parameters:\n    - id: mode\n      type: System.Web.UI.WebControls.DataBoundControlMode\n      description: The data-bound control mode.\n    - id: containerType\n      type: System.Web.DynamicData.ContainerType\n      description: A value that indicates whether the table is displayed as an individual entity or as part of a list of entities.\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Web.DynamicData.MetaColumn}\n      description: A list of columns to display by using scaffolding.\n  overload: System.Web.DynamicData.MetaTable.GetScaffoldColumns*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaTable.GetTable(System.Type)\n  commentId: M:System.Web.DynamicData.MetaTable.GetTable(System.Type)\n  id: GetTable(System.Type)\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: GetTable(Type)\n  nameWithType: MetaTable.GetTable(Type)\n  fullName: MetaTable.GetTable(Type)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Retrieves the metatable that is associated with the specified type.\n  remarks: This method calls <xref:System.Web.DynamicData.MetaTable.TryGetTable%28System.Type%2CSystem.Web.DynamicData.MetaTable%40%29>. If <xref:System.Web.DynamicData.MetaTable.TryGetTable%28System.Type%2CSystem.Web.DynamicData.MetaTable%40%29> returns `false`, an <xref:System.InvalidOperationException> exception is thrown.\n  syntax:\n    content: public static System.Web.DynamicData.MetaTable GetTable (Type entityType);\n    parameters:\n    - id: entityType\n      type: System.Type\n      description: The type of the entity.\n    return:\n      type: System.Web.DynamicData.MetaTable\n      description: The metatable that is associated with the specified type.\n  overload: System.Web.DynamicData.MetaTable.GetTable*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref href=\"System.Web.DynamicData.MetaTable.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)\"></xref> method that was called by this method returned `false`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaTable.HasPrimaryKey\n  commentId: P:System.Web.DynamicData.MetaTable.HasPrimaryKey\n  id: HasPrimaryKey\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: HasPrimaryKey\n  nameWithType: MetaTable.HasPrimaryKey\n  fullName: MetaTable.HasPrimaryKey\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets a value that indicates whether the table has a primary key.\n  syntax:\n    content: public bool HasPrimaryKey { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the table has a primary key; otherwise, `false`.'\n  overload: System.Web.DynamicData.MetaTable.HasPrimaryKey*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaTable.Initialize\n  commentId: M:System.Web.DynamicData.MetaTable.Initialize\n  id: Initialize\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: Initialize()\n  nameWithType: MetaTable.Initialize()\n  fullName: MetaTable.Initialize()\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Initializes data that may not be available when the constructor is called.\n  remarks: This method calls the <xref:System.Web.DynamicData.MetaColumn.Initialize%2A> method for each column in the <xref:System.Web.DynamicData.MetaTable> instance. This method cannot be called directly. To customize initialization, you can derive from this class and override the <xref:System.Web.DynamicData.MetaColumn.Initialize%2A> method. If you override this method, call the base control's `Initialize` method.\n  example:\n  - \"The following example shows how to override the <xref:System.Web.DynamicData.MetaColumn.Initialize%2A> method in order to customize the initialization process.  \\n  \\n```csharp  \\nprotected  override void Initialize() {  \\n    base.Initialize();  \\n    MyOverridenInit();  \\n}  \\n```  \\n  \\n```vb  \\nProtected Overloads Overrides Sub Initialize()   \\n    MyBase.Initialize()   \\n    MyOverridenInit()   \\nEnd Sub  \\n```\"\n  syntax:\n    content: protected virtual void Initialize ();\n    parameters: []\n  overload: System.Web.DynamicData.MetaTable.Initialize*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaTable.IsReadOnly\n  commentId: P:System.Web.DynamicData.MetaTable.IsReadOnly\n  id: IsReadOnly\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: IsReadOnly\n  nameWithType: MetaTable.IsReadOnly\n  fullName: MetaTable.IsReadOnly\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets a value that indicates whether the table is read-only.\n  syntax:\n    content: public virtual bool IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the table is read-only; otherwise, `false`.'\n  overload: System.Web.DynamicData.MetaTable.IsReadOnly*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaTable.ListActionPath\n  commentId: P:System.Web.DynamicData.MetaTable.ListActionPath\n  id: ListActionPath\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: ListActionPath\n  nameWithType: MetaTable.ListActionPath\n  fullName: MetaTable.ListActionPath\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets the action path of the list action for the table.\n  remarks: The action path is a URL for an action for a specific entity. For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=fullName> class overview.\n  syntax:\n    content: public string ListActionPath { get; }\n    return:\n      type: System.String\n      description: The action path of the list action for the table.\n  overload: System.Web.DynamicData.MetaTable.ListActionPath*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaTable.Model\n  commentId: P:System.Web.DynamicData.MetaTable.Model\n  id: Model\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: Model\n  nameWithType: MetaTable.Model\n  fullName: MetaTable.Model\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets the meta model that the table belongs to.\n  remarks: For more information, see the <xref:System.Data.Linq.Mapping.MetaModel?displayProperty=fullName> class overview.\n  syntax:\n    content: public System.Web.DynamicData.MetaModel Model { get; }\n    return:\n      type: System.Web.DynamicData.MetaModel\n      description: The meta model that the table belongs to.\n  overload: System.Web.DynamicData.MetaTable.Model*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaTable.Name\n  commentId: P:System.Web.DynamicData.MetaTable.Name\n  id: Name\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: Name\n  nameWithType: MetaTable.Name\n  fullName: MetaTable.Name\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets the unique name of the table.\n  syntax:\n    content: public string Name { get; }\n    return:\n      type: System.String\n      description: The unique name of the table.\n  overload: System.Web.DynamicData.MetaTable.Name*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaTable.PrimaryKeyColumns\n  commentId: P:System.Web.DynamicData.MetaTable.PrimaryKeyColumns\n  id: PrimaryKeyColumns\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: PrimaryKeyColumns\n  nameWithType: MetaTable.PrimaryKeyColumns\n  fullName: MetaTable.PrimaryKeyColumns\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets the collection of columns that define the primary key.\n  syntax:\n    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Web.DynamicData.MetaColumn> PrimaryKeyColumns { get; }\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Web.DynamicData.MetaColumn}\n      description: A collection that contains the primary-key columns.\n  overload: System.Web.DynamicData.MetaTable.PrimaryKeyColumns*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaTable.Provider\n  commentId: P:System.Web.DynamicData.MetaTable.Provider\n  id: Provider\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: Provider\n  nameWithType: MetaTable.Provider\n  fullName: MetaTable.Provider\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets the provider for the table.\n  syntax:\n    content: public System.Web.DynamicData.ModelProviders.TableProvider Provider { get; }\n    return:\n      type: System.Web.DynamicData.ModelProviders.TableProvider\n      description: The provider for the table.\n  overload: System.Web.DynamicData.MetaTable.Provider*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaTable.ResetMetadata\n  commentId: M:System.Web.DynamicData.MetaTable.ResetMetadata\n  id: ResetMetadata\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: ResetMetadata()\n  nameWithType: MetaTable.ResetMetadata()\n  fullName: MetaTable.ResetMetadata()\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Resets the cached metadata for the table.\n  remarks: The cached table metadata consists of the information that is obtained from data-model attributes and from metadata about intrinsic columns. The metadata cache is rebuilt the next time any metadata is requested.\n  syntax:\n    content: public void ResetMetadata ();\n    parameters: []\n  overload: System.Web.DynamicData.MetaTable.ResetMetadata*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaTable.RootEntityType\n  commentId: P:System.Web.DynamicData.MetaTable.RootEntityType\n  id: RootEntityType\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: RootEntityType\n  nameWithType: MetaTable.RootEntityType\n  fullName: MetaTable.RootEntityType\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets the root type of the entity's inheritance hierarchy.\n  remarks: If the type is at the top of the inheritance hierarchy or does not have a parent type, the entity type is returned.\n  syntax:\n    content: public Type RootEntityType { get; }\n    return:\n      type: System.Type\n      description: The root type of the entity's inheritance hierarchy.\n  overload: System.Web.DynamicData.MetaTable.RootEntityType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaTable.Scaffold\n  commentId: P:System.Web.DynamicData.MetaTable.Scaffold\n  id: Scaffold\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: Scaffold\n  nameWithType: MetaTable.Scaffold\n  fullName: MetaTable.Scaffold\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets or sets a value that indicates whether the table should be displayed.\n  syntax:\n    content: public virtual bool Scaffold { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the table should be displayed; otherwise, `false`.'\n  overload: System.Web.DynamicData.MetaTable.Scaffold*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaTable.SortColumn\n  commentId: P:System.Web.DynamicData.MetaTable.SortColumn\n  id: SortColumn\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: SortColumn\n  nameWithType: MetaTable.SortColumn\n  fullName: MetaTable.SortColumn\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets the <xref href=\"System.Web.DynamicData.MetaColumn\"></xref> value that the table is sorted by.\n  syntax:\n    content: public virtual System.Web.DynamicData.MetaColumn SortColumn { get; }\n    return:\n      type: System.Web.DynamicData.MetaColumn\n      description: The column that the table is sorted by.\n  overload: System.Web.DynamicData.MetaTable.SortColumn*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaTable.SortDescending\n  commentId: P:System.Web.DynamicData.MetaTable.SortDescending\n  id: SortDescending\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: SortDescending\n  nameWithType: MetaTable.SortDescending\n  fullName: MetaTable.SortDescending\n  type: Property\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Gets a value that indicates whether entries are sorted in descending order when they are used as parents in a foreign-key relationship.\n  remarks: You can specify sort order by using the <xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute?displayProperty=fullName> attribute.\n  syntax:\n    content: public virtual bool SortDescending { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if entries are sorted in descending order; otherwise, `false`.'\n  overload: System.Web.DynamicData.MetaTable.SortDescending*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaTable.ToString\n  commentId: M:System.Web.DynamicData.MetaTable.ToString\n  id: ToString\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: MetaTable.ToString()\n  fullName: MetaTable.ToString()\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Returns the name of the table.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: The name of the table.\n  overload: System.Web.DynamicData.MetaTable.ToString*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaTable.TryGetColumn(System.String,System.Web.DynamicData.MetaColumn@)\n  commentId: M:System.Web.DynamicData.MetaTable.TryGetColumn(System.String,System.Web.DynamicData.MetaColumn@)\n  id: TryGetColumn(System.String,System.Web.DynamicData.MetaColumn@)\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: TryGetColumn(String, MetaColumn)\n  nameWithType: MetaTable.TryGetColumn(String, MetaColumn)\n  fullName: MetaTable.TryGetColumn(String, MetaColumn)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Returns a value that indicates whether a specified column can be found.\n  remarks: If the `columnName` parameter is null, an <xref:System.InvalidOperationException> exception is thrown.\n  syntax:\n    content: public bool TryGetColumn (string columnName, out System.Web.DynamicData.MetaColumn column);\n    parameters:\n    - id: columnName\n      type: System.String\n      description: The name of the column to find.\n    - id: column\n      type: System.Web.DynamicData.MetaColumn\n      description: When this method returns, contains the `MetaColumn` object for <code>columnName</code>. This parameter is passed uninitialized.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified column can be found; otherwise, `false`.'\n  overload: System.Web.DynamicData.MetaTable.TryGetColumn*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.MetaTable.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)\n  commentId: M:System.Web.DynamicData.MetaTable.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)\n  id: TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)\n  parent: System.Web.DynamicData.MetaTable\n  langs:\n  - csharp\n  name: TryGetTable(Type, MetaTable)\n  nameWithType: MetaTable.TryGetTable(Type, MetaTable)\n  fullName: MetaTable.TryGetTable(Type, MetaTable)\n  type: Method\n  assemblies:\n  - System.Web.DynamicData\n  namespace: System.Web.DynamicData\n  summary: Retrieves the metatable that is associated with the specified type and table.\n  syntax:\n    content: public static bool TryGetTable (Type entityType, out System.Web.DynamicData.MetaTable table);\n    parameters:\n    - id: entityType\n      type: System.Type\n      description: The type of the entity.\n    - id: table\n      type: System.Web.DynamicData.MetaTable\n      description: When this method returns, contains the metatable that is associated with the specified type. This parameter is passed uninitialized.\n    return:\n      type: System.Boolean\n      description: The metatable that is associated with the given specified and table.\n  overload: System.Web.DynamicData.MetaTable.TryGetTable*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>entityType</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Web.DynamicData.MetaTable.#ctor(System.Web.DynamicData.MetaModel,System.Web.DynamicData.ModelProviders.TableProvider)\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: MetaTable(MetaModel, TableProvider)\n  nameWithType: MetaTable.MetaTable(MetaModel, TableProvider)\n  fullName: MetaTable.MetaTable(MetaModel, TableProvider)\n- uid: System.Web.DynamicData.MetaModel\n  parent: System.Web.DynamicData\n  isExternal: false\n  name: MetaModel\n  nameWithType: MetaModel\n  fullName: System.Web.DynamicData.MetaModel\n- uid: System.Web.DynamicData.ModelProviders.TableProvider\n  parent: System.Web.DynamicData.ModelProviders\n  isExternal: false\n  name: TableProvider\n  nameWithType: TableProvider\n  fullName: System.Web.DynamicData.ModelProviders.TableProvider\n- uid: System.Web.DynamicData.MetaTable.Attributes\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: Attributes\n  nameWithType: MetaTable.Attributes\n  fullName: MetaTable.Attributes\n- uid: System.ComponentModel.AttributeCollection\n  parent: System.ComponentModel\n  isExternal: false\n  name: AttributeCollection\n  nameWithType: AttributeCollection\n  fullName: System.ComponentModel.AttributeCollection\n- uid: System.Web.DynamicData.MetaTable.BuildAttributeCollection\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: BuildAttributeCollection()\n  nameWithType: MetaTable.BuildAttributeCollection()\n  fullName: MetaTable.BuildAttributeCollection()\n- uid: System.Web.DynamicData.MetaTable.CanDelete(System.Security.Principal.IPrincipal)\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: CanDelete(IPrincipal)\n  nameWithType: MetaTable.CanDelete(IPrincipal)\n  fullName: MetaTable.CanDelete(IPrincipal)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Principal.IPrincipal\n  parent: System.Security.Principal\n  isExternal: false\n  name: IPrincipal\n  nameWithType: IPrincipal\n  fullName: System.Security.Principal.IPrincipal\n- uid: System.Web.DynamicData.MetaTable.CanInsert(System.Security.Principal.IPrincipal)\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: CanInsert(IPrincipal)\n  nameWithType: MetaTable.CanInsert(IPrincipal)\n  fullName: MetaTable.CanInsert(IPrincipal)\n- uid: System.Web.DynamicData.MetaTable.CanRead(System.Security.Principal.IPrincipal)\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: CanRead(IPrincipal)\n  nameWithType: MetaTable.CanRead(IPrincipal)\n  fullName: MetaTable.CanRead(IPrincipal)\n- uid: System.Web.DynamicData.MetaTable.CanUpdate(System.Security.Principal.IPrincipal)\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: CanUpdate(IPrincipal)\n  nameWithType: MetaTable.CanUpdate(IPrincipal)\n  fullName: MetaTable.CanUpdate(IPrincipal)\n- uid: System.Web.DynamicData.MetaTable.Columns\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: Columns\n  nameWithType: MetaTable.Columns\n  fullName: MetaTable.Columns\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n  name: ReadOnlyCollection<T>\n  nameWithType: ReadOnlyCollection<T>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>\n- uid: System.Web.DynamicData.MetaColumn\n  name: MetaColumn\n  nameWithType: MetaColumn\n  fullName: System.Web.DynamicData.MetaColumn\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Web.DynamicData.MetaColumn}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: ReadOnlyCollection<MetaColumn>\n  nameWithType: ReadOnlyCollection<MetaColumn>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Web.DynamicData.MetaColumn>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Web.DynamicData.MetaColumn\n    name: MetaColumn\n    nameWithType: MetaColumn\n    fullName: System.Web.DynamicData.MetaColumn\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Web.DynamicData.MetaTable.CreateChildrenColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: CreateChildrenColumn(ColumnProvider)\n  nameWithType: MetaTable.CreateChildrenColumn(ColumnProvider)\n  fullName: MetaTable.CreateChildrenColumn(ColumnProvider)\n- uid: System.Web.DynamicData.MetaChildrenColumn\n  parent: System.Web.DynamicData\n  isExternal: false\n  name: MetaChildrenColumn\n  nameWithType: MetaChildrenColumn\n  fullName: System.Web.DynamicData.MetaChildrenColumn\n- uid: System.Web.DynamicData.ModelProviders.ColumnProvider\n  parent: System.Web.DynamicData.ModelProviders\n  isExternal: false\n  name: ColumnProvider\n  nameWithType: ColumnProvider\n  fullName: System.Web.DynamicData.ModelProviders.ColumnProvider\n- uid: System.Web.DynamicData.MetaTable.CreateColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: CreateColumn(ColumnProvider)\n  nameWithType: MetaTable.CreateColumn(ColumnProvider)\n  fullName: MetaTable.CreateColumn(ColumnProvider)\n- uid: System.Web.DynamicData.MetaTable.CreateContext\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: CreateContext()\n  nameWithType: MetaTable.CreateContext()\n  fullName: MetaTable.CreateContext()\n- uid: System.Web.DynamicData.MetaTable.CreateForeignKeyColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: CreateForeignKeyColumn(ColumnProvider)\n  nameWithType: MetaTable.CreateForeignKeyColumn(ColumnProvider)\n  fullName: MetaTable.CreateForeignKeyColumn(ColumnProvider)\n- uid: System.Web.DynamicData.MetaForeignKeyColumn\n  parent: System.Web.DynamicData\n  isExternal: false\n  name: MetaForeignKeyColumn\n  nameWithType: MetaForeignKeyColumn\n  fullName: System.Web.DynamicData.MetaForeignKeyColumn\n- uid: System.Web.DynamicData.MetaTable.CreateTable(System.Type)\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: CreateTable(Type)\n  nameWithType: MetaTable.CreateTable(Type)\n  fullName: MetaTable.CreateTable(Type)\n- uid: System.Web.DynamicData.MetaTable\n  parent: System.Web.DynamicData\n  isExternal: false\n  name: MetaTable\n  nameWithType: MetaTable\n  fullName: System.Web.DynamicData.MetaTable\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Web.DynamicData.MetaTable.CreateTable(System.ComponentModel.ICustomTypeDescriptor)\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: CreateTable(ICustomTypeDescriptor)\n  nameWithType: MetaTable.CreateTable(ICustomTypeDescriptor)\n  fullName: MetaTable.CreateTable(ICustomTypeDescriptor)\n- uid: System.ComponentModel.ICustomTypeDescriptor\n  parent: System.ComponentModel\n  isExternal: false\n  name: ICustomTypeDescriptor\n  nameWithType: ICustomTypeDescriptor\n  fullName: System.ComponentModel.ICustomTypeDescriptor\n- uid: System.Web.DynamicData.MetaTable.DataContextPropertyName\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: DataContextPropertyName\n  nameWithType: MetaTable.DataContextPropertyName\n  fullName: MetaTable.DataContextPropertyName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.DynamicData.MetaTable.DataContextType\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: DataContextType\n  nameWithType: MetaTable.DataContextType\n  fullName: MetaTable.DataContextType\n- uid: System.Web.DynamicData.MetaTable.DisplayColumn\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: DisplayColumn\n  nameWithType: MetaTable.DisplayColumn\n  fullName: MetaTable.DisplayColumn\n- uid: System.Web.DynamicData.MetaTable.DisplayName\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: DisplayName\n  nameWithType: MetaTable.DisplayName\n  fullName: MetaTable.DisplayName\n- uid: System.Web.DynamicData.MetaTable.EntityType\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: EntityType\n  nameWithType: MetaTable.EntityType\n  fullName: MetaTable.EntityType\n- uid: System.Web.DynamicData.MetaTable.ForeignKeyColumnsNames\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: ForeignKeyColumnsNames\n  nameWithType: MetaTable.ForeignKeyColumnsNames\n  fullName: MetaTable.ForeignKeyColumnsNames\n- uid: System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Object,System.String)\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: GetActionPath(String, Object, String)\n  nameWithType: MetaTable.GetActionPath(String, Object, String)\n  fullName: MetaTable.GetActionPath(String, Object, String)\n- uid: System.Web.DynamicData.MetaTable.GetActionPath(System.String)\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: GetActionPath(String)\n  nameWithType: MetaTable.GetActionPath(String)\n  fullName: MetaTable.GetActionPath(String)\n- uid: System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Collections.Generic.IList{System.Object})\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: GetActionPath(String, IList<Object>)\n  nameWithType: MetaTable.GetActionPath(String, IList<Object>)\n  fullName: MetaTable.GetActionPath(String, IList<Object>)\n- uid: System.Collections.Generic.IList`1\n  name: IList<T>\n  nameWithType: IList<T>\n  fullName: System.Collections.Generic.IList<T>\n- uid: System.Collections.Generic.IList{System.Object}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IList<Object>\n  nameWithType: IList<Object>\n  fullName: System.Collections.Generic.IList<System.Object>\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    nameWithType: IList\n    fullName: System.Collections.Generic.IList\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Object)\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: GetActionPath(String, Object)\n  nameWithType: MetaTable.GetActionPath(String, Object)\n  fullName: MetaTable.GetActionPath(String, Object)\n- uid: System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Web.Routing.RouteValueDictionary)\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: GetActionPath(String, RouteValueDictionary)\n  nameWithType: MetaTable.GetActionPath(String, RouteValueDictionary)\n  fullName: MetaTable.GetActionPath(String, RouteValueDictionary)\n- uid: System.Web.Routing.RouteValueDictionary\n  parent: System.Web.Routing\n  isExternal: false\n  name: RouteValueDictionary\n  nameWithType: RouteValueDictionary\n  fullName: System.Web.Routing.RouteValueDictionary\n- uid: System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Collections.Generic.IList{System.Object},System.String)\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: GetActionPath(String, IList<Object>, String)\n  nameWithType: MetaTable.GetActionPath(String, IList<Object>, String)\n  fullName: MetaTable.GetActionPath(String, IList<Object>, String)\n- uid: System.Web.DynamicData.MetaTable.GetColumn(System.String)\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: GetColumn(String)\n  nameWithType: MetaTable.GetColumn(String)\n  fullName: MetaTable.GetColumn(String)\n- uid: System.Web.DynamicData.MetaTable.GetColumnValuesFromRoute(System.Web.HttpContext)\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: GetColumnValuesFromRoute(HttpContext)\n  nameWithType: MetaTable.GetColumnValuesFromRoute(HttpContext)\n  fullName: MetaTable.GetColumnValuesFromRoute(HttpContext)\n- uid: System.Collections.Generic.IDictionary`2\n  name: IDictionary<TKey,TValue>\n  nameWithType: IDictionary<TKey,TValue>\n  fullName: System.Collections.Generic.IDictionary<TKey,TValue>\n- uid: System.Collections.Generic.IDictionary{System.String,System.Object}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IDictionary<String,Object>\n  nameWithType: IDictionary<String,Object>\n  fullName: System.Collections.Generic.IDictionary<System.String,System.Object>\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    nameWithType: IDictionary\n    fullName: System.Collections.Generic.IDictionary\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Web.HttpContext\n  parent: System.Web\n  isExternal: false\n  name: HttpContext\n  nameWithType: HttpContext\n  fullName: System.Web.HttpContext\n- uid: System.Web.DynamicData.MetaTable.GetDataKeyFromRoute\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: GetDataKeyFromRoute()\n  nameWithType: MetaTable.GetDataKeyFromRoute()\n  fullName: MetaTable.GetDataKeyFromRoute()\n- uid: System.Web.UI.WebControls.DataKey\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: DataKey\n  nameWithType: DataKey\n  fullName: System.Web.UI.WebControls.DataKey\n- uid: System.Web.DynamicData.MetaTable.GetDisplayString(System.Object)\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: GetDisplayString(Object)\n  nameWithType: MetaTable.GetDisplayString(Object)\n  fullName: MetaTable.GetDisplayString(Object)\n- uid: System.Web.DynamicData.MetaTable.GetFilteredColumns\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: GetFilteredColumns()\n  nameWithType: MetaTable.GetFilteredColumns()\n  fullName: MetaTable.GetFilteredColumns()\n- uid: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Collections.Generic.IEnumerable{System.Web.DynamicData.MetaColumn}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<MetaColumn>\n  nameWithType: IEnumerable<MetaColumn>\n  fullName: System.Collections.Generic.IEnumerable<System.Web.DynamicData.MetaColumn>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Web.DynamicData.MetaColumn\n    name: MetaColumn\n    nameWithType: MetaColumn\n    fullName: System.Web.DynamicData.MetaColumn\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Web.DynamicData.MetaTable.GetPrimaryKeyDictionary(System.Object)\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: GetPrimaryKeyDictionary(Object)\n  nameWithType: MetaTable.GetPrimaryKeyDictionary(Object)\n  fullName: MetaTable.GetPrimaryKeyDictionary(Object)\n- uid: System.Web.DynamicData.MetaTable.GetPrimaryKeyString(System.Collections.Generic.IList{System.Object})\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: GetPrimaryKeyString(IList<Object>)\n  nameWithType: MetaTable.GetPrimaryKeyString(IList<Object>)\n  fullName: MetaTable.GetPrimaryKeyString(IList<Object>)\n- uid: System.Web.DynamicData.MetaTable.GetPrimaryKeyString(System.Object)\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: GetPrimaryKeyString(Object)\n  nameWithType: MetaTable.GetPrimaryKeyString(Object)\n  fullName: MetaTable.GetPrimaryKeyString(Object)\n- uid: System.Web.DynamicData.MetaTable.GetPrimaryKeyValues(System.Object)\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: GetPrimaryKeyValues(Object)\n  nameWithType: MetaTable.GetPrimaryKeyValues(Object)\n  fullName: MetaTable.GetPrimaryKeyValues(Object)\n- uid: System.Web.DynamicData.MetaTable.GetQuery\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: GetQuery()\n  nameWithType: MetaTable.GetQuery()\n  fullName: MetaTable.GetQuery()\n- uid: System.Linq.IQueryable\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable\n  nameWithType: IQueryable\n  fullName: System.Linq.IQueryable\n- uid: System.Web.DynamicData.MetaTable.GetQuery(System.Object)\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: GetQuery(Object)\n  nameWithType: MetaTable.GetQuery(Object)\n  fullName: MetaTable.GetQuery(Object)\n- uid: System.Web.DynamicData.MetaTable.GetScaffoldColumns(System.Web.UI.WebControls.DataBoundControlMode,System.Web.DynamicData.ContainerType)\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: GetScaffoldColumns(DataBoundControlMode, ContainerType)\n  nameWithType: MetaTable.GetScaffoldColumns(DataBoundControlMode, ContainerType)\n  fullName: MetaTable.GetScaffoldColumns(DataBoundControlMode, ContainerType)\n- uid: System.Web.UI.WebControls.DataBoundControlMode\n  parent: System.Web.UI.WebControls\n  isExternal: false\n  name: DataBoundControlMode\n  nameWithType: DataBoundControlMode\n  fullName: System.Web.UI.WebControls.DataBoundControlMode\n- uid: System.Web.DynamicData.ContainerType\n  parent: System.Web.DynamicData\n  isExternal: false\n  name: ContainerType\n  nameWithType: ContainerType\n  fullName: System.Web.DynamicData.ContainerType\n- uid: System.Web.DynamicData.MetaTable.GetTable(System.Type)\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: GetTable(Type)\n  nameWithType: MetaTable.GetTable(Type)\n  fullName: MetaTable.GetTable(Type)\n- uid: System.Web.DynamicData.MetaTable.HasPrimaryKey\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: HasPrimaryKey\n  nameWithType: MetaTable.HasPrimaryKey\n  fullName: MetaTable.HasPrimaryKey\n- uid: System.Web.DynamicData.MetaTable.Initialize\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: Initialize()\n  nameWithType: MetaTable.Initialize()\n  fullName: MetaTable.Initialize()\n- uid: System.Web.DynamicData.MetaTable.IsReadOnly\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: MetaTable.IsReadOnly\n  fullName: MetaTable.IsReadOnly\n- uid: System.Web.DynamicData.MetaTable.ListActionPath\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: ListActionPath\n  nameWithType: MetaTable.ListActionPath\n  fullName: MetaTable.ListActionPath\n- uid: System.Web.DynamicData.MetaTable.Model\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: Model\n  nameWithType: MetaTable.Model\n  fullName: MetaTable.Model\n- uid: System.Web.DynamicData.MetaTable.Name\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: Name\n  nameWithType: MetaTable.Name\n  fullName: MetaTable.Name\n- uid: System.Web.DynamicData.MetaTable.PrimaryKeyColumns\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: PrimaryKeyColumns\n  nameWithType: MetaTable.PrimaryKeyColumns\n  fullName: MetaTable.PrimaryKeyColumns\n- uid: System.Web.DynamicData.MetaTable.Provider\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: Provider\n  nameWithType: MetaTable.Provider\n  fullName: MetaTable.Provider\n- uid: System.Web.DynamicData.MetaTable.ResetMetadata\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: ResetMetadata()\n  nameWithType: MetaTable.ResetMetadata()\n  fullName: MetaTable.ResetMetadata()\n- uid: System.Web.DynamicData.MetaTable.RootEntityType\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: RootEntityType\n  nameWithType: MetaTable.RootEntityType\n  fullName: MetaTable.RootEntityType\n- uid: System.Web.DynamicData.MetaTable.Scaffold\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: Scaffold\n  nameWithType: MetaTable.Scaffold\n  fullName: MetaTable.Scaffold\n- uid: System.Web.DynamicData.MetaTable.SortColumn\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: SortColumn\n  nameWithType: MetaTable.SortColumn\n  fullName: MetaTable.SortColumn\n- uid: System.Web.DynamicData.MetaTable.SortDescending\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: SortDescending\n  nameWithType: MetaTable.SortDescending\n  fullName: MetaTable.SortDescending\n- uid: System.Web.DynamicData.MetaTable.ToString\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: ToString()\n  nameWithType: MetaTable.ToString()\n  fullName: MetaTable.ToString()\n- uid: System.Web.DynamicData.MetaTable.TryGetColumn(System.String,System.Web.DynamicData.MetaColumn@)\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: TryGetColumn(String, MetaColumn)\n  nameWithType: MetaTable.TryGetColumn(String, MetaColumn)\n  fullName: MetaTable.TryGetColumn(String, MetaColumn)\n- uid: System.Web.DynamicData.MetaTable.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: TryGetTable(Type, MetaTable)\n  nameWithType: MetaTable.TryGetTable(Type, MetaTable)\n  fullName: MetaTable.TryGetTable(Type, MetaTable)\n- uid: System.Web.DynamicData.MetaTable.GetActionPath*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: GetActionPath\n  nameWithType: MetaTable.GetActionPath\n  fullName: MetaTable.GetActionPath\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n- uid: System.Web.DynamicData.MetaTable.#ctor*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: MetaTable\n  nameWithType: MetaTable.MetaTable\n  fullName: MetaTable.MetaTable\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n- uid: System.Web.DynamicData.MetaTable.Attributes*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: Attributes\n  nameWithType: MetaTable.Attributes\n  fullName: MetaTable.Attributes\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n- uid: System.Web.DynamicData.MetaTable.BuildAttributeCollection*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: BuildAttributeCollection\n  nameWithType: MetaTable.BuildAttributeCollection\n  fullName: MetaTable.BuildAttributeCollection\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n- uid: System.Web.DynamicData.MetaTable.CanDelete*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: CanDelete\n  nameWithType: MetaTable.CanDelete\n  fullName: MetaTable.CanDelete\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n- uid: System.Web.DynamicData.MetaTable.CanInsert*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: CanInsert\n  nameWithType: MetaTable.CanInsert\n  fullName: MetaTable.CanInsert\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n- uid: System.Web.DynamicData.MetaTable.CanRead*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: CanRead\n  nameWithType: MetaTable.CanRead\n  fullName: MetaTable.CanRead\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n- uid: System.Web.DynamicData.MetaTable.CanUpdate*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: CanUpdate\n  nameWithType: MetaTable.CanUpdate\n  fullName: MetaTable.CanUpdate\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n- uid: System.Web.DynamicData.MetaTable.Columns*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: Columns\n  nameWithType: MetaTable.Columns\n  fullName: MetaTable.Columns\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n- uid: System.Web.DynamicData.MetaTable.CreateChildrenColumn*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: CreateChildrenColumn\n  nameWithType: MetaTable.CreateChildrenColumn\n  fullName: MetaTable.CreateChildrenColumn\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n- uid: System.Web.DynamicData.MetaTable.CreateColumn*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: CreateColumn\n  nameWithType: MetaTable.CreateColumn\n  fullName: MetaTable.CreateColumn\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n- uid: System.Web.DynamicData.MetaTable.CreateContext*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: CreateContext\n  nameWithType: MetaTable.CreateContext\n  fullName: MetaTable.CreateContext\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n- uid: System.Web.DynamicData.MetaTable.CreateForeignKeyColumn*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: CreateForeignKeyColumn\n  nameWithType: MetaTable.CreateForeignKeyColumn\n  fullName: MetaTable.CreateForeignKeyColumn\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n- uid: System.Web.DynamicData.MetaTable.CreateTable*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: CreateTable\n  nameWithType: MetaTable.CreateTable\n  fullName: MetaTable.CreateTable\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n- uid: System.Web.DynamicData.MetaTable.DataContextPropertyName*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: DataContextPropertyName\n  nameWithType: MetaTable.DataContextPropertyName\n  fullName: MetaTable.DataContextPropertyName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n- uid: System.Web.DynamicData.MetaTable.DataContextType*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: DataContextType\n  nameWithType: MetaTable.DataContextType\n  fullName: MetaTable.DataContextType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n- uid: System.Web.DynamicData.MetaTable.DisplayColumn*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: DisplayColumn\n  nameWithType: MetaTable.DisplayColumn\n  fullName: MetaTable.DisplayColumn\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n- uid: System.Web.DynamicData.MetaTable.DisplayName*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: DisplayName\n  nameWithType: MetaTable.DisplayName\n  fullName: MetaTable.DisplayName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n- uid: System.Web.DynamicData.MetaTable.EntityType*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: EntityType\n  nameWithType: MetaTable.EntityType\n  fullName: MetaTable.EntityType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n- uid: System.Web.DynamicData.MetaTable.ForeignKeyColumnsNames*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: ForeignKeyColumnsNames\n  nameWithType: MetaTable.ForeignKeyColumnsNames\n  fullName: MetaTable.ForeignKeyColumnsNames\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n- uid: System.Web.DynamicData.MetaTable.GetColumn*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: GetColumn\n  nameWithType: MetaTable.GetColumn\n  fullName: MetaTable.GetColumn\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n- uid: System.Web.DynamicData.MetaTable.GetColumnValuesFromRoute*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: GetColumnValuesFromRoute\n  nameWithType: MetaTable.GetColumnValuesFromRoute\n  fullName: MetaTable.GetColumnValuesFromRoute\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n- uid: System.Web.DynamicData.MetaTable.GetDataKeyFromRoute*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: GetDataKeyFromRoute\n  nameWithType: MetaTable.GetDataKeyFromRoute\n  fullName: MetaTable.GetDataKeyFromRoute\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n- uid: System.Web.DynamicData.MetaTable.GetDisplayString*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: GetDisplayString\n  nameWithType: MetaTable.GetDisplayString\n  fullName: MetaTable.GetDisplayString\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n- uid: System.Web.DynamicData.MetaTable.GetFilteredColumns*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: GetFilteredColumns\n  nameWithType: MetaTable.GetFilteredColumns\n  fullName: MetaTable.GetFilteredColumns\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n- uid: System.Web.DynamicData.MetaTable.GetPrimaryKeyDictionary*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: GetPrimaryKeyDictionary\n  nameWithType: MetaTable.GetPrimaryKeyDictionary\n  fullName: MetaTable.GetPrimaryKeyDictionary\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n- uid: System.Web.DynamicData.MetaTable.GetPrimaryKeyString*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: GetPrimaryKeyString\n  nameWithType: MetaTable.GetPrimaryKeyString\n  fullName: MetaTable.GetPrimaryKeyString\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n- uid: System.Web.DynamicData.MetaTable.GetPrimaryKeyValues*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: GetPrimaryKeyValues\n  nameWithType: MetaTable.GetPrimaryKeyValues\n  fullName: MetaTable.GetPrimaryKeyValues\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n- uid: System.Web.DynamicData.MetaTable.GetQuery*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: GetQuery\n  nameWithType: MetaTable.GetQuery\n  fullName: MetaTable.GetQuery\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n- uid: System.Web.DynamicData.MetaTable.GetScaffoldColumns*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: GetScaffoldColumns\n  nameWithType: MetaTable.GetScaffoldColumns\n  fullName: MetaTable.GetScaffoldColumns\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n- uid: System.Web.DynamicData.MetaTable.GetTable*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: GetTable\n  nameWithType: MetaTable.GetTable\n  fullName: MetaTable.GetTable\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n- uid: System.Web.DynamicData.MetaTable.HasPrimaryKey*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: HasPrimaryKey\n  nameWithType: MetaTable.HasPrimaryKey\n  fullName: MetaTable.HasPrimaryKey\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n- uid: System.Web.DynamicData.MetaTable.Initialize*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: Initialize\n  nameWithType: MetaTable.Initialize\n  fullName: MetaTable.Initialize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n- uid: System.Web.DynamicData.MetaTable.IsReadOnly*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: MetaTable.IsReadOnly\n  fullName: MetaTable.IsReadOnly\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n- uid: System.Web.DynamicData.MetaTable.ListActionPath*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: ListActionPath\n  nameWithType: MetaTable.ListActionPath\n  fullName: MetaTable.ListActionPath\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n- uid: System.Web.DynamicData.MetaTable.Model*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: Model\n  nameWithType: MetaTable.Model\n  fullName: MetaTable.Model\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n- uid: System.Web.DynamicData.MetaTable.Name*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: Name\n  nameWithType: MetaTable.Name\n  fullName: MetaTable.Name\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n- uid: System.Web.DynamicData.MetaTable.PrimaryKeyColumns*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: PrimaryKeyColumns\n  nameWithType: MetaTable.PrimaryKeyColumns\n  fullName: MetaTable.PrimaryKeyColumns\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n- uid: System.Web.DynamicData.MetaTable.Provider*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: Provider\n  nameWithType: MetaTable.Provider\n  fullName: MetaTable.Provider\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n- uid: System.Web.DynamicData.MetaTable.ResetMetadata*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: ResetMetadata\n  nameWithType: MetaTable.ResetMetadata\n  fullName: MetaTable.ResetMetadata\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n- uid: System.Web.DynamicData.MetaTable.RootEntityType*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: RootEntityType\n  nameWithType: MetaTable.RootEntityType\n  fullName: MetaTable.RootEntityType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n- uid: System.Web.DynamicData.MetaTable.Scaffold*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: Scaffold\n  nameWithType: MetaTable.Scaffold\n  fullName: MetaTable.Scaffold\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n- uid: System.Web.DynamicData.MetaTable.SortColumn*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: SortColumn\n  nameWithType: MetaTable.SortColumn\n  fullName: MetaTable.SortColumn\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n- uid: System.Web.DynamicData.MetaTable.SortDescending*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: SortDescending\n  nameWithType: MetaTable.SortDescending\n  fullName: MetaTable.SortDescending\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n- uid: System.Web.DynamicData.MetaTable.ToString*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: ToString\n  nameWithType: MetaTable.ToString\n  fullName: MetaTable.ToString\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n- uid: System.Web.DynamicData.MetaTable.TryGetColumn*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: TryGetColumn\n  nameWithType: MetaTable.TryGetColumn\n  fullName: MetaTable.TryGetColumn\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n- uid: System.Web.DynamicData.MetaTable.TryGetTable*\n  parent: System.Web.DynamicData.MetaTable\n  isExternal: false\n  name: TryGetTable\n  nameWithType: MetaTable.TryGetTable\n  fullName: MetaTable.TryGetTable\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/MetaTable.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n"}