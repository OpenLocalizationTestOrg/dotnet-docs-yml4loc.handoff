{"nodes":[{"content":"Imports metadata into <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> objects.","nodes":[{"pos":[0,99],"content":"Imports metadata into <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Description.ServiceEndpoint\"&gt;&lt;/xref&gt;</ph> objects.","source":"Imports metadata into <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> objects."}],"pos":[845,945],"yaml":true},{"content":"Use an implementation of the <xref:System.ServiceModel.Description.MetadataImporter> abstract class to import service metadata. Types that derive from the <xref:System.ServiceModel.Description.MetadataImporter> class implement support for importing metadata formats that take advantage of the WS-Policy import logic in [!INCLUDE[indigo1](~/includes/indigo1-md.md)].  \n  \n A <xref:System.ServiceModel.Description.MetadataImporter> implementation collects the policy expressions attached to the service metadata in a <xref:System.ServiceModel.Description.PolicyConversionContext?displayProperty=fullName> object. The <xref:System.ServiceModel.Description.MetadataImporter> then processes the policies as part of importing the metadata by calling the implementations of the <xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=fullName> interface in the <xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=fullName> property.  \n  \n You can add support for importing new policy assertions to a <xref:System.ServiceModel.Description.MetadataImporter> by adding your own implementation of the <xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=fullName> interface to the <xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=fullName> property on a <xref:System.ServiceModel.Description.MetadataImporter> instance. Alternatively, you can register your policy import extension in your application configuration file.  \n  \n The <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName> type is the implementation of the <xref:System.ServiceModel.Description.MetadataImporter> abstract class included with [!INCLUDE[indigo2](~/includes/indigo2-md.md)]. The <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName> type imports WSDL metadata with attached policies that are bundled in a <xref:System.ServiceModel.Description.MetadataSet?displayProperty=fullName> object.  \n  \n You can add support for importing WSDL extensions by implementing the <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=fullName> interface and then adding your implementation to the <xref:System.ServiceModel.Description.WsdlImporter.WsdlImportExtensions%2A?displayProperty=fullName> property on your <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName> instance. The <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName> can also load implementations of the <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=fullName> interface registered in your application configuration file.  \n  \n> [!NOTE]\n>  Because the <xref:System.ServiceModel.Description.MetadataImporter> constructor is internal, you cannot derive from <xref:System.ServiceModel.Description.MetadataImporter> in this version.","nodes":[{"pos":[0,365],"content":"Use an implementation of the <xref:System.ServiceModel.Description.MetadataImporter> abstract class to import service metadata. Types that derive from the <xref:System.ServiceModel.Description.MetadataImporter> class implement support for importing metadata formats that take advantage of the WS-Policy import logic in [!INCLUDE[indigo1](~/includes/indigo1-md.md)].","nodes":[{"content":"Use an implementation of the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> abstract class to import service metadata.","pos":[0,127],"source":"Use an implementation of the <xref:System.ServiceModel.Description.MetadataImporter> abstract class to import service metadata."},{"content":"Types that derive from the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> class implement support for importing metadata formats that take advantage of the WS-Policy import logic in <ph id=\"ph2\">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph>.","pos":[128,365],"source":" Types that derive from the <xref:System.ServiceModel.Description.MetadataImporter> class implement support for importing metadata formats that take advantage of the WS-Policy import logic in [!INCLUDE[indigo1](~/includes/indigo1-md.md)]."}]},{"pos":[372,991],"content":"A <xref:System.ServiceModel.Description.MetadataImporter> implementation collects the policy expressions attached to the service metadata in a <xref:System.ServiceModel.Description.PolicyConversionContext?displayProperty=fullName> object. The <xref:System.ServiceModel.Description.MetadataImporter> then processes the policies as part of importing the metadata by calling the implementations of the <xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=fullName> interface in the <xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=fullName> property.","nodes":[{"content":"A <xref:System.ServiceModel.Description.MetadataImporter> implementation collects the policy expressions attached to the service metadata in a <xref:System.ServiceModel.Description.PolicyConversionContext?displayProperty=fullName> object. The <xref:System.ServiceModel.Description.MetadataImporter> then processes the policies as part of importing the metadata by calling the implementations of the <xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=fullName> interface in the <xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=fullName> property.","pos":[0,619],"nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> implementation collects the policy expressions attached to the service metadata in a <ph id=\"ph2\">&lt;xref:System.ServiceModel.Description.PolicyConversionContext?displayProperty=fullName&gt;</ph> object.","pos":[0,238],"source":"A <xref:System.ServiceModel.Description.MetadataImporter> implementation collects the policy expressions attached to the service metadata in a <xref:System.ServiceModel.Description.PolicyConversionContext?displayProperty=fullName> object."},{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> then processes the policies as part of importing the metadata by calling the implementations of the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=fullName&gt;</ph> interface in the <ph id=\"ph3\">&lt;xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=fullName&gt;</ph> property.","pos":[239,619],"source":" The <xref:System.ServiceModel.Description.MetadataImporter> then processes the policies as part of importing the metadata by calling the implementations of the <xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=fullName> interface in the <xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=fullName> property."}]}]},{"pos":[998,1547],"content":"You can add support for importing new policy assertions to a <xref:System.ServiceModel.Description.MetadataImporter> by adding your own implementation of the <xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=fullName> interface to the <xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=fullName> property on a <xref:System.ServiceModel.Description.MetadataImporter> instance. Alternatively, you can register your policy import extension in your application configuration file.","nodes":[{"content":"You can add support for importing new policy assertions to a <xref:System.ServiceModel.Description.MetadataImporter> by adding your own implementation of the <xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=fullName> interface to the <xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=fullName> property on a <xref:System.ServiceModel.Description.MetadataImporter> instance. Alternatively, you can register your policy import extension in your application configuration file.","pos":[0,549],"nodes":[{"content":"You can add support for importing new policy assertions to a <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> by adding your own implementation of the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=fullName&gt;</ph> interface to the <ph id=\"ph3\">&lt;xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=fullName&gt;</ph> property on a <ph id=\"ph4\">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> instance.","pos":[0,448],"source":"You can add support for importing new policy assertions to a <xref:System.ServiceModel.Description.MetadataImporter> by adding your own implementation of the <xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=fullName> interface to the <xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=fullName> property on a <xref:System.ServiceModel.Description.MetadataImporter> instance."},{"content":"Alternatively, you can register your policy import extension in your application configuration file.","pos":[449,549]}]}]},{"pos":[1554,2037],"content":"The <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName> type is the implementation of the <xref:System.ServiceModel.Description.MetadataImporter> abstract class included with [!INCLUDE[indigo2](~/includes/indigo2-md.md)]. The <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName> type imports WSDL metadata with attached policies that are bundled in a <xref:System.ServiceModel.Description.MetadataSet?displayProperty=fullName> object.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName&gt;</ph> type is the implementation of the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> abstract class included with <ph id=\"ph3\">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph>.","pos":[0,246],"source":"The <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName> type is the implementation of the <xref:System.ServiceModel.Description.MetadataImporter> abstract class included with [!INCLUDE[indigo2](~/includes/indigo2-md.md)]."},{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName&gt;</ph> type imports WSDL metadata with attached policies that are bundled in a <ph id=\"ph2\">&lt;xref:System.ServiceModel.Description.MetadataSet?displayProperty=fullName&gt;</ph> object.","pos":[247,483],"source":" The <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName> type imports WSDL metadata with attached policies that are bundled in a <xref:System.ServiceModel.Description.MetadataSet?displayProperty=fullName> object."}]},{"pos":[2044,2720],"content":"You can add support for importing WSDL extensions by implementing the <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=fullName> interface and then adding your implementation to the <xref:System.ServiceModel.Description.WsdlImporter.WsdlImportExtensions%2A?displayProperty=fullName> property on your <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName> instance. The <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName> can also load implementations of the <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=fullName> interface registered in your application configuration file.","nodes":[{"content":"You can add support for importing WSDL extensions by implementing the <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=fullName> interface and then adding your implementation to the <xref:System.ServiceModel.Description.WsdlImporter.WsdlImportExtensions%2A?displayProperty=fullName> property on your <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName> instance. The <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName> can also load implementations of the <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=fullName> interface registered in your application configuration file.","pos":[0,676],"nodes":[{"content":"You can add support for importing WSDL extensions by implementing the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=fullName&gt;</ph> interface and then adding your implementation to the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Description.WsdlImporter.WsdlImportExtensions%2A?displayProperty=fullName&gt;</ph> property on your <ph id=\"ph3\">&lt;xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName&gt;</ph> instance.","pos":[0,412],"source":"You can add support for importing WSDL extensions by implementing the <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=fullName> interface and then adding your implementation to the <xref:System.ServiceModel.Description.WsdlImporter.WsdlImportExtensions%2A?displayProperty=fullName> property on your <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName> instance."},{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName&gt;</ph> can also load implementations of the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=fullName&gt;</ph> interface registered in your application configuration file.","pos":[413,676],"source":" The <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName> can also load implementations of the <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=fullName> interface registered in your application configuration file."}]}]},{"pos":[2728,2927],"content":"[!NOTE]\n Because the <xref:System.ServiceModel.Description.MetadataImporter> constructor is internal, you cannot derive from <xref:System.ServiceModel.Description.MetadataImporter> in this version.","leadings":["","> "],"nodes":[{"content":"Because the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> constructor is internal, you cannot derive from <ph id=\"ph2\">&lt;xref:System.ServiceModel.Description.MetadataImporter&gt;</ph> in this version.","pos":[9,197],"source":" Because the <xref:System.ServiceModel.Description.MetadataImporter> constructor is internal, you cannot derive from <xref:System.ServiceModel.Description.MetadataImporter> in this version."}]}],"pos":[956,3897],"yaml":true,"extradata":"MT"},{"content":"Gets a value that indicates whether there were errors importing the metadata.","nodes":[{"pos":[0,77],"content":"Gets a value that indicates whether there were errors importing the metadata.","nodes":[{"content":"Gets a value that indicates whether there were errors importing the metadata.","pos":[0,77]}]}],"pos":[5834,5912],"yaml":true},{"content":"Always check the <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> property after importing metadata and before using the metadata.","nodes":[{"pos":[0,147],"content":"Always check the <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> property after importing metadata and before using the metadata.","nodes":[{"content":"Always check the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.MetadataImporter.Errors%2A&gt;</ph> property after importing metadata and before using the metadata.","pos":[0,147],"source":"Always check the <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> property after importing metadata and before using the metadata."}]}],"pos":[5923,6071],"yaml":true,"extradata":"MT"},{"content":"A collection of <xref href=\"System.ServiceModel.Description.MetadataConversionError\"></xref> objects.","nodes":[{"pos":[0,101],"content":"A collection of <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Description.MetadataConversionError\"&gt;&lt;/xref&gt;</ph> objects.","source":"A collection of <xref href=\"System.ServiceModel.Description.MetadataConversionError\"></xref> objects."}],"pos":[6358,6460],"yaml":true},{"content":"When overridden in a derived class, returns a collection of contracts imported from the metadata.","nodes":[{"pos":[0,97],"content":"When overridden in a derived class, returns a collection of contracts imported from the metadata.","nodes":[{"content":"When overridden in a derived class, returns a collection of contracts imported from the metadata.","pos":[0,97]}]}],"pos":[7594,7692],"yaml":true},{"content":"The contracts imported from the metadata.","nodes":[{"pos":[0,41],"content":"The contracts imported from the metadata.","nodes":[{"content":"The contracts imported from the metadata.","pos":[0,41]}]}],"pos":[8006,8048],"yaml":true},{"content":"When overridden in a derived class, returns all endpoints in the metadata.","nodes":[{"pos":[0,74],"content":"When overridden in a derived class, returns all endpoints in the metadata.","nodes":[{"content":"When overridden in a derived class, returns all endpoints in the metadata.","pos":[0,74]}]}],"pos":[9194,9269],"yaml":true},{"content":"Implement the <xref:System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints%2A> method to return all endpoints in the imported metadata. Metadata that has been imported as service endpoints cannot be used to create a runtime or export metadata because the imported endpoints contain no managed type information. To use the metadata to create a client or service runtime or to generate metadata, you must first generate and compile code from the metadata and use that type information to create a new <xref:System.ServiceModel.Description.ContractDescription?displayProperty=fullName> object using <xref:System.ServiceModel.Description.ContractDescription.GetContract%2A>.","nodes":[{"pos":[0,683],"content":"Implement the <xref:System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints%2A> method to return all endpoints in the imported metadata. Metadata that has been imported as service endpoints cannot be used to create a runtime or export metadata because the imported endpoints contain no managed type information. To use the metadata to create a client or service runtime or to generate metadata, you must first generate and compile code from the metadata and use that type information to create a new <xref:System.ServiceModel.Description.ContractDescription?displayProperty=fullName> object using <xref:System.ServiceModel.Description.ContractDescription.GetContract%2A>.","nodes":[{"content":"Implement the <xref:System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints%2A> method to return all endpoints in the imported metadata. Metadata that has been imported as service endpoints cannot be used to create a runtime or export metadata because the imported endpoints contain no managed type information. To use the metadata to create a client or service runtime or to generate metadata, you must first generate and compile code from the metadata and use that type information to create a new <xref:System.ServiceModel.Description.ContractDescription?displayProperty=fullName> object using <xref:System.ServiceModel.Description.ContractDescription.GetContract%2A>.","pos":[0,683],"nodes":[{"content":"Implement the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints%2A&gt;</ph> method to return all endpoints in the imported metadata.","pos":[0,148],"source":"Implement the <xref:System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints%2A> method to return all endpoints in the imported metadata."},{"content":"Metadata that has been imported as service endpoints cannot be used to create a runtime or export metadata because the imported endpoints contain no managed type information.","pos":[149,323]},{"content":"To use the metadata to create a client or service runtime or to generate metadata, you must first generate and compile code from the metadata and use that type information to create a new <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.ContractDescription?displayProperty=fullName&gt;</ph> object using <ph id=\"ph2\">&lt;xref:System.ServiceModel.Description.ContractDescription.GetContract%2A&gt;</ph>.","pos":[324,683],"source":" To use the metadata to create a client or service runtime or to generate metadata, you must first generate and compile code from the metadata and use that type information to create a new <xref:System.ServiceModel.Description.ContractDescription?displayProperty=fullName> object using <xref:System.ServiceModel.Description.ContractDescription.GetContract%2A>."}]}]}],"pos":[9280,9964],"yaml":true,"extradata":"MT"},{"content":"A collection of <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> objects that are published by a service.","nodes":[{"pos":[0,125],"content":"A collection of <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Description.ServiceEndpoint\"&gt;&lt;/xref&gt;</ph> objects that are published by a service.","source":"A collection of <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> objects that are published by a service."}],"pos":[10204,10330],"yaml":true},{"content":"Gets a dictionary of contracts by name that the importer knows about.","nodes":[{"pos":[0,69],"content":"Gets a dictionary of contracts by name that the importer knows about.","nodes":[{"content":"Gets a dictionary of contracts by name that the importer knows about.","pos":[0,69]}]}],"pos":[11448,11518],"yaml":true},{"content":"Use the <xref:System.ServiceModel.Description.MetadataImporter.KnownContracts%2A> property to add or remove contract descriptions and their associated XML names that the importer can reference.","nodes":[{"pos":[0,193],"content":"Use the <xref:System.ServiceModel.Description.MetadataImporter.KnownContracts%2A> property to add or remove contract descriptions and their associated XML names that the importer can reference.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.MetadataImporter.KnownContracts%2A&gt;</ph> property to add or remove contract descriptions and their associated XML names that the importer can reference.","pos":[0,193],"source":"Use the <xref:System.ServiceModel.Description.MetadataImporter.KnownContracts%2A> property to add or remove contract descriptions and their associated XML names that the importer can reference."}]}],"pos":[11529,11723],"yaml":true,"extradata":"MT"},{"content":"A dictionary of contracts listed by XML qualified name.","nodes":[{"pos":[0,55],"content":"A dictionary of contracts listed by XML qualified name.","nodes":[{"content":"A dictionary of contracts listed by XML qualified name.","pos":[0,55]}]}],"pos":[12058,12114],"yaml":true},{"content":"Gets a collection of policy importers that the importer calls to process policy assertions.","nodes":[{"pos":[0,91],"content":"Gets a collection of policy importers that the importer calls to process policy assertions.","nodes":[{"content":"Gets a collection of policy importers that the importer calls to process policy assertions.","pos":[0,91]}]}],"pos":[13276,13368],"yaml":true},{"content":"Use the <xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A> property to add or remove policy importers that are invoked to process policy assertions in the metadata.","nodes":[{"pos":[0,195],"content":"Use the <xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A> property to add or remove policy importers that are invoked to process policy assertions in the metadata.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A&gt;</ph> property to add or remove policy importers that are invoked to process policy assertions in the metadata.","pos":[0,195],"source":"Use the <xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A> property to add or remove policy importers that are invoked to process policy assertions in the metadata."}]}],"pos":[13379,13575],"yaml":true,"extradata":"MT"},{"content":"A collection of policy importers that the <xref href=\"System.ServiceModel.Description.MetadataImporter\"></xref> uses to process policy assertions.","nodes":[{"pos":[0,146],"content":"A collection of policy importers that the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Description.MetadataImporter\"&gt;&lt;/xref&gt;</ph> uses to process policy assertions.","source":"A collection of policy importers that the <xref href=\"System.ServiceModel.Description.MetadataImporter\"></xref> uses to process policy assertions."}],"pos":[13890,14037],"yaml":true},{"content":"Gets or sets a collection of objects used in the importing of metadata.","nodes":[{"pos":[0,71],"content":"Gets or sets a collection of objects used in the importing of metadata.","nodes":[{"content":"Gets or sets a collection of objects used in the importing of metadata.","pos":[0,71]}]}],"pos":[15105,15177],"yaml":true},{"content":"Use the `State` property to add or remove objects used in the importing of metadata.","nodes":[{"pos":[0,84],"content":"Use the <ph id=\"ph1\">`State`</ph> property to add or remove objects used in the importing of metadata.","source":"Use the `State` property to add or remove objects used in the importing of metadata."}],"pos":[15188,15273],"yaml":true,"extradata":"MT"},{"content":"A dictionary of objects keyed by type.","nodes":[{"pos":[0,38],"content":"A dictionary of objects keyed by type.","nodes":[{"content":"A dictionary of objects keyed by type.","pos":[0,38]}]}],"pos":[15893,15932],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Description.MetadataImporter\n  commentId: T:System.ServiceModel.Description.MetadataImporter\n  id: MetadataImporter\n  children:\n  - System.ServiceModel.Description.MetadataImporter.Errors\n  - System.ServiceModel.Description.MetadataImporter.ImportAllContracts\n  - System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints\n  - System.ServiceModel.Description.MetadataImporter.KnownContracts\n  - System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions\n  - System.ServiceModel.Description.MetadataImporter.State\n  langs:\n  - csharp\n  name: MetadataImporter\n  nameWithType: MetadataImporter\n  fullName: System.ServiceModel.Description.MetadataImporter\n  type: Class\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Description\n  summary: Imports metadata into <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> objects.\n  remarks: \"Use an implementation of the <xref:System.ServiceModel.Description.MetadataImporter> abstract class to import service metadata. Types that derive from the <xref:System.ServiceModel.Description.MetadataImporter> class implement support for importing metadata formats that take advantage of the WS-Policy import logic in [!INCLUDE[indigo1](~/includes/indigo1-md.md)].  \\n  \\n A <xref:System.ServiceModel.Description.MetadataImporter> implementation collects the policy expressions attached to the service metadata in a <xref:System.ServiceModel.Description.PolicyConversionContext?displayProperty=fullName> object. The <xref:System.ServiceModel.Description.MetadataImporter> then processes the policies as part of importing the metadata by calling the implementations of the <xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=fullName> interface in the <xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=fullName> property.  \\n  \\n You can add support for importing new policy assertions to a <xref:System.ServiceModel.Description.MetadataImporter> by adding your own implementation of the <xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=fullName> interface to the <xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=fullName> property on a <xref:System.ServiceModel.Description.MetadataImporter> instance. Alternatively, you can register your policy import extension in your application configuration file.  \\n  \\n The <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName> type is the implementation of the <xref:System.ServiceModel.Description.MetadataImporter> abstract class included with [!INCLUDE[indigo2](~/includes/indigo2-md.md)]. The <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName> type imports WSDL metadata with attached policies that are bundled in a <xref:System.ServiceModel.Description.MetadataSet?displayProperty=fullName> object.  \\n  \\n You can add support for importing WSDL extensions by implementing the <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=fullName> interface and then adding your implementation to the <xref:System.ServiceModel.Description.WsdlImporter.WsdlImportExtensions%2A?displayProperty=fullName> property on your <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName> instance. The <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName> can also load implementations of the <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=fullName> interface registered in your application configuration file.  \\n  \\n> [!NOTE]\\n>  Because the <xref:System.ServiceModel.Description.MetadataImporter> constructor is internal, you cannot derive from <xref:System.ServiceModel.Description.MetadataImporter> in this version.\"\n  example:\n  - \"The following example shows the use of the <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName> derived class to import metadata using custom state, checking the <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> property, compiling imported metadata to managed types and saving the result to a code file.  \\n  \\n [!code-csharp[C_CustomWSDLExtensions#8](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/client.cs#8)]\"\n  syntax:\n    content: public abstract class MetadataImporter\n  inheritance:\n  - System.Object\n  derivedClasses:\n  - System.ServiceModel.Description.WsdlImporter\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Description/MetadataImporter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Description.MetadataImporter.Errors\n  commentId: P:System.ServiceModel.Description.MetadataImporter.Errors\n  id: Errors\n  parent: System.ServiceModel.Description.MetadataImporter\n  langs:\n  - csharp\n  name: Errors\n  nameWithType: MetadataImporter.Errors\n  fullName: MetadataImporter.Errors\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Description\n  summary: Gets a value that indicates whether there were errors importing the metadata.\n  remarks: Always check the <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> property after importing metadata and before using the metadata.\n  syntax:\n    content: public System.Collections.ObjectModel.Collection<System.ServiceModel.Description.MetadataConversionError> Errors { get; }\n    return:\n      type: System.Collections.ObjectModel.Collection{System.ServiceModel.Description.MetadataConversionError}\n      description: A collection of <xref href=\"System.ServiceModel.Description.MetadataConversionError\"></xref> objects.\n  overload: System.ServiceModel.Description.MetadataImporter.Errors*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Description/MetadataImporter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Description.MetadataImporter.ImportAllContracts\n  commentId: M:System.ServiceModel.Description.MetadataImporter.ImportAllContracts\n  id: ImportAllContracts\n  parent: System.ServiceModel.Description.MetadataImporter\n  langs:\n  - csharp\n  name: ImportAllContracts()\n  nameWithType: MetadataImporter.ImportAllContracts()\n  fullName: MetadataImporter.ImportAllContracts()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Description\n  summary: When overridden in a derived class, returns a collection of contracts imported from the metadata.\n  syntax:\n    content: public abstract System.Collections.ObjectModel.Collection<System.ServiceModel.Description.ContractDescription> ImportAllContracts ();\n    parameters: []\n    return:\n      type: System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ContractDescription}\n      description: The contracts imported from the metadata.\n  overload: System.ServiceModel.Description.MetadataImporter.ImportAllContracts*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Description/MetadataImporter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints\n  commentId: M:System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints\n  id: ImportAllEndpoints\n  parent: System.ServiceModel.Description.MetadataImporter\n  langs:\n  - csharp\n  name: ImportAllEndpoints()\n  nameWithType: MetadataImporter.ImportAllEndpoints()\n  fullName: MetadataImporter.ImportAllEndpoints()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Description\n  summary: When overridden in a derived class, returns all endpoints in the metadata.\n  remarks: Implement the <xref:System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints%2A> method to return all endpoints in the imported metadata. Metadata that has been imported as service endpoints cannot be used to create a runtime or export metadata because the imported endpoints contain no managed type information. To use the metadata to create a client or service runtime or to generate metadata, you must first generate and compile code from the metadata and use that type information to create a new <xref:System.ServiceModel.Description.ContractDescription?displayProperty=fullName> object using <xref:System.ServiceModel.Description.ContractDescription.GetContract%2A>.\n  syntax:\n    content: public abstract System.ServiceModel.Description.ServiceEndpointCollection ImportAllEndpoints ();\n    parameters: []\n    return:\n      type: System.ServiceModel.Description.ServiceEndpointCollection\n      description: A collection of <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> objects that are published by a service.\n  overload: System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Description/MetadataImporter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Description.MetadataImporter.KnownContracts\n  commentId: P:System.ServiceModel.Description.MetadataImporter.KnownContracts\n  id: KnownContracts\n  parent: System.ServiceModel.Description.MetadataImporter\n  langs:\n  - csharp\n  name: KnownContracts\n  nameWithType: MetadataImporter.KnownContracts\n  fullName: MetadataImporter.KnownContracts\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Description\n  summary: Gets a dictionary of contracts by name that the importer knows about.\n  remarks: Use the <xref:System.ServiceModel.Description.MetadataImporter.KnownContracts%2A> property to add or remove contract descriptions and their associated XML names that the importer can reference.\n  syntax:\n    content: public System.Collections.Generic.Dictionary<System.Xml.XmlQualifiedName,System.ServiceModel.Description.ContractDescription> KnownContracts { get; }\n    return:\n      type: System.Collections.Generic.Dictionary{System.Xml.XmlQualifiedName,System.ServiceModel.Description.ContractDescription}\n      description: A dictionary of contracts listed by XML qualified name.\n  overload: System.ServiceModel.Description.MetadataImporter.KnownContracts*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Description/MetadataImporter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions\n  commentId: P:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions\n  id: PolicyImportExtensions\n  parent: System.ServiceModel.Description.MetadataImporter\n  langs:\n  - csharp\n  name: PolicyImportExtensions\n  nameWithType: MetadataImporter.PolicyImportExtensions\n  fullName: MetadataImporter.PolicyImportExtensions\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Description\n  summary: Gets a collection of policy importers that the importer calls to process policy assertions.\n  remarks: Use the <xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A> property to add or remove policy importers that are invoked to process policy assertions in the metadata.\n  syntax:\n    content: public System.Collections.Generic.KeyedByTypeCollection<System.ServiceModel.Description.IPolicyImportExtension> PolicyImportExtensions { get; }\n    return:\n      type: System.Collections.Generic.KeyedByTypeCollection{System.ServiceModel.Description.IPolicyImportExtension}\n      description: A collection of policy importers that the <xref href=\"System.ServiceModel.Description.MetadataImporter\"></xref> uses to process policy assertions.\n  overload: System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Description/MetadataImporter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Description.MetadataImporter.State\n  commentId: P:System.ServiceModel.Description.MetadataImporter.State\n  id: State\n  parent: System.ServiceModel.Description.MetadataImporter\n  langs:\n  - csharp\n  name: State\n  nameWithType: MetadataImporter.State\n  fullName: MetadataImporter.State\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Description\n  summary: Gets or sets a collection of objects used in the importing of metadata.\n  remarks: Use the `State` property to add or remove objects used in the importing of metadata.\n  example:\n  - \"The following example shows the use of the <xref:System.ServiceModel.Description.MetadataImporter.State%2A> property to add a custom <xref:System.Runtime.Serialization.XsdDataContractImporter?displayProperty=fullName> to import data structures in a particular way.  \\n  \\n [!code-csharp[C_CustomWSDLExtensions#8](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/client.cs#8)]\"\n  syntax:\n    content: public System.Collections.Generic.Dictionary<object,object> State { get; }\n    return:\n      type: System.Collections.Generic.Dictionary{System.Object,System.Object}\n      description: A dictionary of objects keyed by type.\n  overload: System.ServiceModel.Description.MetadataImporter.State*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Description/MetadataImporter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ServiceModel.Description.MetadataImporter.Errors\n  parent: System.ServiceModel.Description.MetadataImporter\n  isExternal: false\n  name: Errors\n  nameWithType: MetadataImporter.Errors\n  fullName: MetadataImporter.Errors\n- uid: System.Collections.ObjectModel.Collection`1\n  name: Collection<T>\n  nameWithType: Collection<T>\n  fullName: System.Collections.ObjectModel.Collection<T>\n- uid: System.ServiceModel.Description.MetadataConversionError\n  name: MetadataConversionError\n  nameWithType: MetadataConversionError\n  fullName: System.ServiceModel.Description.MetadataConversionError\n- uid: System.Collections.ObjectModel.Collection{System.ServiceModel.Description.MetadataConversionError}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: Collection<MetadataConversionError>\n  nameWithType: Collection<MetadataConversionError>\n  fullName: System.Collections.ObjectModel.Collection<System.ServiceModel.Description.MetadataConversionError>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.Collection`1\n    name: Collection\n    nameWithType: Collection\n    fullName: System.Collections.ObjectModel.Collection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ServiceModel.Description.MetadataConversionError\n    name: MetadataConversionError\n    nameWithType: MetadataConversionError\n    fullName: System.ServiceModel.Description.MetadataConversionError\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ServiceModel.Description.MetadataImporter.ImportAllContracts\n  parent: System.ServiceModel.Description.MetadataImporter\n  isExternal: false\n  name: ImportAllContracts()\n  nameWithType: MetadataImporter.ImportAllContracts()\n  fullName: MetadataImporter.ImportAllContracts()\n- uid: System.ServiceModel.Description.ContractDescription\n  name: ContractDescription\n  nameWithType: ContractDescription\n  fullName: System.ServiceModel.Description.ContractDescription\n- uid: System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ContractDescription}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: Collection<ContractDescription>\n  nameWithType: Collection<ContractDescription>\n  fullName: System.Collections.ObjectModel.Collection<System.ServiceModel.Description.ContractDescription>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.Collection`1\n    name: Collection\n    nameWithType: Collection\n    fullName: System.Collections.ObjectModel.Collection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ServiceModel.Description.ContractDescription\n    name: ContractDescription\n    nameWithType: ContractDescription\n    fullName: System.ServiceModel.Description.ContractDescription\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints\n  parent: System.ServiceModel.Description.MetadataImporter\n  isExternal: false\n  name: ImportAllEndpoints()\n  nameWithType: MetadataImporter.ImportAllEndpoints()\n  fullName: MetadataImporter.ImportAllEndpoints()\n- uid: System.ServiceModel.Description.ServiceEndpointCollection\n  parent: System.ServiceModel.Description\n  isExternal: false\n  name: ServiceEndpointCollection\n  nameWithType: ServiceEndpointCollection\n  fullName: System.ServiceModel.Description.ServiceEndpointCollection\n- uid: System.ServiceModel.Description.MetadataImporter.KnownContracts\n  parent: System.ServiceModel.Description.MetadataImporter\n  isExternal: false\n  name: KnownContracts\n  nameWithType: MetadataImporter.KnownContracts\n  fullName: MetadataImporter.KnownContracts\n- uid: System.Collections.Generic.Dictionary`2\n  name: Dictionary<TKey,TValue>\n  nameWithType: Dictionary<TKey,TValue>\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>\n- uid: System.Xml.XmlQualifiedName\n  name: XmlQualifiedName\n  nameWithType: XmlQualifiedName\n  fullName: System.Xml.XmlQualifiedName\n- uid: System.Collections.Generic.Dictionary{System.Xml.XmlQualifiedName,System.ServiceModel.Description.ContractDescription}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: Dictionary<XmlQualifiedName,ContractDescription>\n  nameWithType: Dictionary<XmlQualifiedName,ContractDescription>\n  fullName: System.Collections.Generic.Dictionary<System.Xml.XmlQualifiedName,System.ServiceModel.Description.ContractDescription>\n  spec.csharp:\n  - uid: System.Collections.Generic.Dictionary`2\n    name: Dictionary\n    nameWithType: Dictionary\n    fullName: System.Collections.Generic.Dictionary\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Xml.XmlQualifiedName\n    name: XmlQualifiedName\n    nameWithType: XmlQualifiedName\n    fullName: System.Xml.XmlQualifiedName\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.ServiceModel.Description.ContractDescription\n    name: ContractDescription\n    nameWithType: ContractDescription\n    fullName: System.ServiceModel.Description.ContractDescription\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions\n  parent: System.ServiceModel.Description.MetadataImporter\n  isExternal: false\n  name: PolicyImportExtensions\n  nameWithType: MetadataImporter.PolicyImportExtensions\n  fullName: MetadataImporter.PolicyImportExtensions\n- uid: System.Collections.Generic.KeyedByTypeCollection`1\n  name: KeyedByTypeCollection<TItem>\n  nameWithType: KeyedByTypeCollection<TItem>\n  fullName: System.Collections.Generic.KeyedByTypeCollection<TItem>\n- uid: System.ServiceModel.Description.IPolicyImportExtension\n  name: IPolicyImportExtension\n  nameWithType: IPolicyImportExtension\n  fullName: System.ServiceModel.Description.IPolicyImportExtension\n- uid: System.Collections.Generic.KeyedByTypeCollection{System.ServiceModel.Description.IPolicyImportExtension}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: KeyedByTypeCollection<IPolicyImportExtension>\n  nameWithType: KeyedByTypeCollection<IPolicyImportExtension>\n  fullName: System.Collections.Generic.KeyedByTypeCollection<System.ServiceModel.Description.IPolicyImportExtension>\n  spec.csharp:\n  - uid: System.Collections.Generic.KeyedByTypeCollection`1\n    name: KeyedByTypeCollection\n    nameWithType: KeyedByTypeCollection\n    fullName: System.Collections.Generic.KeyedByTypeCollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ServiceModel.Description.IPolicyImportExtension\n    name: IPolicyImportExtension\n    nameWithType: IPolicyImportExtension\n    fullName: System.ServiceModel.Description.IPolicyImportExtension\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ServiceModel.Description.MetadataImporter.State\n  parent: System.ServiceModel.Description.MetadataImporter\n  isExternal: false\n  name: State\n  nameWithType: MetadataImporter.State\n  fullName: MetadataImporter.State\n- uid: System.Collections.Generic.Dictionary{System.Object,System.Object}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: Dictionary<Object,Object>\n  nameWithType: Dictionary<Object,Object>\n  fullName: System.Collections.Generic.Dictionary<System.Object,System.Object>\n  spec.csharp:\n  - uid: System.Collections.Generic.Dictionary`2\n    name: Dictionary\n    nameWithType: Dictionary\n    fullName: System.Collections.Generic.Dictionary\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ServiceModel.Description.MetadataImporter.Errors*\n  parent: System.ServiceModel.Description.MetadataImporter\n  isExternal: false\n  name: Errors\n  nameWithType: MetadataImporter.Errors\n  fullName: MetadataImporter.Errors\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Description/MetadataImporter.xml\n- uid: System.ServiceModel.Description.MetadataImporter.ImportAllContracts*\n  parent: System.ServiceModel.Description.MetadataImporter\n  isExternal: false\n  name: ImportAllContracts\n  nameWithType: MetadataImporter.ImportAllContracts\n  fullName: MetadataImporter.ImportAllContracts\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Description/MetadataImporter.xml\n- uid: System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints*\n  parent: System.ServiceModel.Description.MetadataImporter\n  isExternal: false\n  name: ImportAllEndpoints\n  nameWithType: MetadataImporter.ImportAllEndpoints\n  fullName: MetadataImporter.ImportAllEndpoints\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Description/MetadataImporter.xml\n- uid: System.ServiceModel.Description.MetadataImporter.KnownContracts*\n  parent: System.ServiceModel.Description.MetadataImporter\n  isExternal: false\n  name: KnownContracts\n  nameWithType: MetadataImporter.KnownContracts\n  fullName: MetadataImporter.KnownContracts\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Description/MetadataImporter.xml\n- uid: System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions*\n  parent: System.ServiceModel.Description.MetadataImporter\n  isExternal: false\n  name: PolicyImportExtensions\n  nameWithType: MetadataImporter.PolicyImportExtensions\n  fullName: MetadataImporter.PolicyImportExtensions\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Description/MetadataImporter.xml\n- uid: System.ServiceModel.Description.MetadataImporter.State*\n  parent: System.ServiceModel.Description.MetadataImporter\n  isExternal: false\n  name: State\n  nameWithType: MetadataImporter.State\n  fullName: MetadataImporter.State\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Description/MetadataImporter.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}