### YamlMime:ManagedReference
items:
- uid: System.Reflection.Emit.CustomAttributeBuilder
  commentId: T:System.Reflection.Emit.CustomAttributeBuilder
  id: CustomAttributeBuilder
  children:
  - System.Reflection.Emit.CustomAttributeBuilder.#ctor(System.Reflection.ConstructorInfo,System.Object[])
  - System.Reflection.Emit.CustomAttributeBuilder.#ctor(System.Reflection.ConstructorInfo,System.Object[],System.Reflection.FieldInfo[],System.Object[])
  - System.Reflection.Emit.CustomAttributeBuilder.#ctor(System.Reflection.ConstructorInfo,System.Object[],System.Reflection.PropertyInfo[],System.Object[])
  - System.Reflection.Emit.CustomAttributeBuilder.#ctor(System.Reflection.ConstructorInfo,System.Object[],System.Reflection.PropertyInfo[],System.Object[],System.Reflection.FieldInfo[],System.Object[])
  - System.Reflection.Emit.CustomAttributeBuilder.System#Runtime#InteropServices#_CustomAttributeBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.Emit.CustomAttributeBuilder.System#Runtime#InteropServices#_CustomAttributeBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.Emit.CustomAttributeBuilder.System#Runtime#InteropServices#_CustomAttributeBuilder#GetTypeInfoCount(System.UInt32@)
  - System.Reflection.Emit.CustomAttributeBuilder.System#Runtime#InteropServices#_CustomAttributeBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  langs:
  - csharp
  name: CustomAttributeBuilder
  nameWithType: CustomAttributeBuilder
  fullName: System.Reflection.Emit.CustomAttributeBuilder
  type: Class
  assemblies:
  - System.Reflection.Emit.ILGeneration
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Helps build custom attributes.
  remarks: Use the `CustomAttributeBuilder` object returned by the constructor to describe the custom attribute. Associate the `CustomAttribute` with a builder instance by calling the `SetCustomAttribute` method on that builder instance. For example, create a `CustomAttributeBuilder` to describe an instance of `AssemblyCultureAttribute` by supplying the constructor of <xref:System.Reflection.AssemblyCultureAttribute> and its argument. Then call <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> on an `AssemblyBuilder` to establish the association.
  example:
  - "The following code sample illustrates the use of `CustomAttributeBuilder`.  \n  \n [!code-cpp[System.Reflection.Emit.CustomAttributeBuilder Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.CustomAttributeBuilder Example/CPP/source.cpp#1)]\n [!code-csharp[System.Reflection.Emit.CustomAttributeBuilder Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.CustomAttributeBuilder Example/CS/source.cs#1)]\n [!code-vb[System.Reflection.Emit.CustomAttributeBuilder Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.CustomAttributeBuilder Example/VB/source.vb#1)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public class CustomAttributeBuilder : System.Runtime.InteropServices._CustomAttributeBuilder
  inheritance:
  - System.Object
  implements:
  - System.Runtime.InteropServices._CustomAttributeBuilder
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.Runtime.InteropServices.ClassInterfaceAttribute
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/CustomAttributeBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.CustomAttributeBuilder.#ctor(System.Reflection.ConstructorInfo,System.Object[])
  commentId: M:System.Reflection.Emit.CustomAttributeBuilder.#ctor(System.Reflection.ConstructorInfo,System.Object[])
  id: '#ctor(System.Reflection.ConstructorInfo,System.Object[])'
  parent: System.Reflection.Emit.CustomAttributeBuilder
  langs:
  - csharp
  name: CustomAttributeBuilder(ConstructorInfo, Object[])
  nameWithType: CustomAttributeBuilder.CustomAttributeBuilder(ConstructorInfo, Object[])
  fullName: CustomAttributeBuilder.CustomAttributeBuilder(ConstructorInfo, Object[])
  type: Constructor
  assemblies:
  - System.Reflection.Emit.ILGeneration
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Initializes an instance of the `CustomAttributeBuilder` class given the constructor for the custom attribute and the arguments to the constructor.
  remarks: The elements of the `constructorArgs` array are restricted to element types. They can be `byte`, `sbyte`, `int`, `uint`, `long`, `ulong`, `float`, `double`, `String`, `char`, `bool`, an enum, a type, any of the previous types that was cast to an object, or a single-dimension, zero-based array of any of the previous types.
  syntax:
    content: public CustomAttributeBuilder (System.Reflection.ConstructorInfo con, object[] constructorArgs);
    parameters:
    - id: con
      type: System.Reflection.ConstructorInfo
      description: The constructor for the custom attribute.
    - id: constructorArgs
      type: System.Object[]
      description: The arguments to the constructor of the custom attribute.
  overload: System.Reflection.Emit.CustomAttributeBuilder.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>con</code> is static or private.  \n  \n -or-  \n  \n The number of supplied arguments does not match the number of parameters of the constructor as required by the calling convention of the constructor.  \n  \n -or-  \n  \n The type of supplied argument does not match the type of the parameter declared in the constructor.  \n  \n -or-  \n  \n A supplied argument is a reference type other than <xref href=\"System.String\"></xref> or <xref href=\"System.Type\"></xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>con</code> or <code>constructorArgs</code> is `null`.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/CustomAttributeBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.CustomAttributeBuilder.#ctor(System.Reflection.ConstructorInfo,System.Object[],System.Reflection.FieldInfo[],System.Object[])
  commentId: M:System.Reflection.Emit.CustomAttributeBuilder.#ctor(System.Reflection.ConstructorInfo,System.Object[],System.Reflection.FieldInfo[],System.Object[])
  id: '#ctor(System.Reflection.ConstructorInfo,System.Object[],System.Reflection.FieldInfo[],System.Object[])'
  parent: System.Reflection.Emit.CustomAttributeBuilder
  langs:
  - csharp
  name: CustomAttributeBuilder(ConstructorInfo, Object[], FieldInfo[], Object[])
  nameWithType: CustomAttributeBuilder.CustomAttributeBuilder(ConstructorInfo, Object[], FieldInfo[], Object[])
  fullName: CustomAttributeBuilder.CustomAttributeBuilder(ConstructorInfo, Object[], FieldInfo[], Object[])
  type: Constructor
  assemblies:
  - System.Reflection.Emit.ILGeneration
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Initializes an instance of the `CustomAttributeBuilder` class given the constructor for the custom attribute, the arguments to the constructor, and a set of named field/value pairs.
  remarks: "The elements of the `constructorArgs` and `fieldValues` arrays are restricted to element types. They can be `byte`, `sbyte`, `int`, `uint`, `long`, `ulong`, `float`, `double`, `String`, `char`, `bool`, an enum, a type, any of the previous types that was cast to an object, or a single-dimension, zero-based array of any of the previous types.  \n  \n> [!IMPORTANT]\n>  Do not include private fields in `namedFields`. Doing so will cause <xref:System.Reflection.CustomAttributeFormatException> to be thrown when the <xref:System.Attribute.GetCustomAttributes%2A> method is later called on the completed type."
  syntax:
    content: public CustomAttributeBuilder (System.Reflection.ConstructorInfo con, object[] constructorArgs, System.Reflection.FieldInfo[] namedFields, object[] fieldValues);
    parameters:
    - id: con
      type: System.Reflection.ConstructorInfo
      description: The constructor for the custom attribute.
    - id: constructorArgs
      type: System.Object[]
      description: The arguments to the constructor of the custom attribute.
    - id: namedFields
      type: System.Reflection.FieldInfo[]
      description: Named fields of the custom attribute.
    - id: fieldValues
      type: System.Object[]
      description: Values for the named fields of the custom attribute.
  overload: System.Reflection.Emit.CustomAttributeBuilder.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The lengths of the <code>namedFields</code> and <code>fieldValues</code> arrays are different.  \n  \n -or-  \n  \n <code>con</code> is static or private.  \n  \n -or-  \n  \n The number of supplied arguments does not match the number of parameters of the constructor as required by the calling convention of the constructor.  \n  \n -or-  \n  \n The type of supplied argument does not match the type of the parameter declared in the constructor.  \n  \n -or-  \n  \n The types of the field values do not match the types of the named fields.  \n  \n -or-  \n  \n The field does not belong to the same class or base class as the constructor.  \n  \n -or-  \n  \n A supplied argument or named field is a reference type other than <xref href=\"System.String\"></xref> or <xref href=\"System.Type\"></xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: One of the parameters is `null`.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/CustomAttributeBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.CustomAttributeBuilder.#ctor(System.Reflection.ConstructorInfo,System.Object[],System.Reflection.PropertyInfo[],System.Object[])
  commentId: M:System.Reflection.Emit.CustomAttributeBuilder.#ctor(System.Reflection.ConstructorInfo,System.Object[],System.Reflection.PropertyInfo[],System.Object[])
  id: '#ctor(System.Reflection.ConstructorInfo,System.Object[],System.Reflection.PropertyInfo[],System.Object[])'
  parent: System.Reflection.Emit.CustomAttributeBuilder
  langs:
  - csharp
  name: CustomAttributeBuilder(ConstructorInfo, Object[], PropertyInfo[], Object[])
  nameWithType: CustomAttributeBuilder.CustomAttributeBuilder(ConstructorInfo, Object[], PropertyInfo[], Object[])
  fullName: CustomAttributeBuilder.CustomAttributeBuilder(ConstructorInfo, Object[], PropertyInfo[], Object[])
  type: Constructor
  assemblies:
  - System.Reflection.Emit.ILGeneration
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Initializes an instance of the `CustomAttributeBuilder` class given the constructor for the custom attribute, the arguments to the constructor, and a set of named property or value pairs.
  remarks: "The elements of the `constructorArgs` and `propertyValues` arrays are restricted to element types. They can be `byte`, `sbyte`, `int`, `uint`, `long`, `ulong`, `float`, `double`, `String`, `char`, `bool`, an enum, a type, any of the previous types that was cast to an object, or a single-dimension, zero-based array of any of the previous types.  \n  \n> [!IMPORTANT]\n>  Do not include private properties in `namedProperties`. Doing so will cause <xref:System.Reflection.CustomAttributeFormatException> to be thrown when the <xref:System.Attribute.GetCustomAttributes%2A> method is later called on the completed type."
  syntax:
    content: public CustomAttributeBuilder (System.Reflection.ConstructorInfo con, object[] constructorArgs, System.Reflection.PropertyInfo[] namedProperties, object[] propertyValues);
    parameters:
    - id: con
      type: System.Reflection.ConstructorInfo
      description: The constructor for the custom attribute.
    - id: constructorArgs
      type: System.Object[]
      description: The arguments to the constructor of the custom attribute.
    - id: namedProperties
      type: System.Reflection.PropertyInfo[]
      description: Named properties of the custom attribute.
    - id: propertyValues
      type: System.Object[]
      description: Values for the named properties of the custom attribute.
  overload: System.Reflection.Emit.CustomAttributeBuilder.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The lengths of the <code>namedProperties</code> and <code>propertyValues</code> arrays are different.  \n  \n -or-  \n  \n <code>con</code> is static or private.  \n  \n -or-  \n  \n The number of supplied arguments does not match the number of parameters of the constructor as required by the calling convention of the constructor.  \n  \n -or-  \n  \n The type of supplied argument does not match the type of the parameter declared in the constructor.  \n  \n -or-  \n  \n The types of the property values do not match the types of the named properties.  \n  \n -or-  \n  \n A property has no setter method.  \n  \n -or-  \n  \n The property does not belong to the same class or base class as the constructor.  \n  \n -or-  \n  \n A supplied argument or named property is a reference type other than <xref href=\"System.String\"></xref> or <xref href=\"System.Type\"></xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: One of the parameters is `null`.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/CustomAttributeBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.CustomAttributeBuilder.#ctor(System.Reflection.ConstructorInfo,System.Object[],System.Reflection.PropertyInfo[],System.Object[],System.Reflection.FieldInfo[],System.Object[])
  commentId: M:System.Reflection.Emit.CustomAttributeBuilder.#ctor(System.Reflection.ConstructorInfo,System.Object[],System.Reflection.PropertyInfo[],System.Object[],System.Reflection.FieldInfo[],System.Object[])
  id: '#ctor(System.Reflection.ConstructorInfo,System.Object[],System.Reflection.PropertyInfo[],System.Object[],System.Reflection.FieldInfo[],System.Object[])'
  parent: System.Reflection.Emit.CustomAttributeBuilder
  langs:
  - csharp
  name: CustomAttributeBuilder(ConstructorInfo, Object[], PropertyInfo[], Object[], FieldInfo[], Object[])
  nameWithType: CustomAttributeBuilder.CustomAttributeBuilder(ConstructorInfo, Object[], PropertyInfo[], Object[], FieldInfo[], Object[])
  fullName: CustomAttributeBuilder.CustomAttributeBuilder(ConstructorInfo, Object[], PropertyInfo[], Object[], FieldInfo[], Object[])
  type: Constructor
  assemblies:
  - System.Reflection.Emit.ILGeneration
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Initializes an instance of the `CustomAttributeBuilder` class given the constructor for the custom attribute, the arguments to the constructor, a set of named property or value pairs, and a set of named field or value pairs.
  remarks: "The elements of the `constructorArgs`, `propertyValues`, or `fieldValues` arrays are restricted to element types. They can be `byte`, `sbyte`, `int`, `uint`, `long`, `ulong`, `float`, `double`, `String`, `char`, `bool`, an enum, a type, any of the previous types that was cast to an object, or a single-dimension, zero-based array of any of the previous types.  \n  \n> [!IMPORTANT]\n>  Do not include private properties or fields in `namedProperties` or `namedFields`. Doing so will cause <xref:System.Reflection.CustomAttributeFormatException> to be thrown when the <xref:System.Attribute.GetCustomAttributes%2A> method is later called on the completed type."
  syntax:
    content: public CustomAttributeBuilder (System.Reflection.ConstructorInfo con, object[] constructorArgs, System.Reflection.PropertyInfo[] namedProperties, object[] propertyValues, System.Reflection.FieldInfo[] namedFields, object[] fieldValues);
    parameters:
    - id: con
      type: System.Reflection.ConstructorInfo
      description: The constructor for the custom attribute.
    - id: constructorArgs
      type: System.Object[]
      description: The arguments to the constructor of the custom attribute.
    - id: namedProperties
      type: System.Reflection.PropertyInfo[]
      description: Named properties of the custom attribute.
    - id: propertyValues
      type: System.Object[]
      description: Values for the named properties of the custom attribute.
    - id: namedFields
      type: System.Reflection.FieldInfo[]
      description: Named fields of the custom attribute.
    - id: fieldValues
      type: System.Object[]
      description: Values for the named fields of the custom attribute.
  overload: System.Reflection.Emit.CustomAttributeBuilder.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The lengths of the <code>namedProperties</code> and <code>propertyValues</code> arrays are different.  \n  \n -or-  \n  \n The lengths of the <code>namedFields</code> and <code>fieldValues</code> arrays are different.  \n  \n -or-  \n  \n <code>con</code> is static or private.  \n  \n -or-  \n  \n The number of supplied arguments does not match the number of parameters of the constructor as required by the calling convention of the constructor.  \n  \n -or-  \n  \n The type of supplied argument does not match the type of the parameter declared in the constructor.  \n  \n -or-  \n  \n The types of the property values do not match the types of the named properties.  \n  \n -or-  \n  \n The types of the field values do not match the types of the corresponding field types.  \n  \n -or-  \n  \n A property has no setter.  \n  \n -or-  \n  \n The property or field does not belong to the same class or base class as the constructor.  \n  \n -or-  \n  \n A supplied argument, named property, or named field is a reference type other than <xref href=\"System.String\"></xref> or <xref href=\"System.Type\"></xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: One of the parameters is `null`.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/CustomAttributeBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.CustomAttributeBuilder.System#Runtime#InteropServices#_CustomAttributeBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  commentId: M:System.Reflection.Emit.CustomAttributeBuilder.System#Runtime#InteropServices#_CustomAttributeBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  id: System#Runtime#InteropServices#_CustomAttributeBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  isEii: true
  parent: System.Reflection.Emit.CustomAttributeBuilder
  langs:
  - csharp
  name: _CustomAttributeBuilder.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  nameWithType: CustomAttributeBuilder._CustomAttributeBuilder.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  fullName: CustomAttributeBuilder._CustomAttributeBuilder.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Maps a set of names to a corresponding set of dispatch identifiers.
  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.
  syntax:
    content: void _CustomAttributeBuilder.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);
    parameters:
    - id: riid
      type: System.Guid
      description: Reserved for future use. Must be IID_NULL.
    - id: rgszNames
      type: System.IntPtr
      description: Passed-in array of names to be mapped.
    - id: cNames
      type: System.UInt32
      description: Count of the names to be mapped.
    - id: lcid
      type: System.UInt32
      description: The locale context in which to interpret the names.
    - id: rgDispId
      type: System.IntPtr
      description: Caller-allocated array which receives the IDs corresponding to the names.
  overload: System.Reflection.Emit.CustomAttributeBuilder.System#Runtime#InteropServices#_CustomAttributeBuilder#GetIDsOfNames*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: The method is called late-bound using the COM <code>IDispatch</code> interface.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/CustomAttributeBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.CustomAttributeBuilder.System#Runtime#InteropServices#_CustomAttributeBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  commentId: M:System.Reflection.Emit.CustomAttributeBuilder.System#Runtime#InteropServices#_CustomAttributeBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  id: System#Runtime#InteropServices#_CustomAttributeBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  isEii: true
  parent: System.Reflection.Emit.CustomAttributeBuilder
  langs:
  - csharp
  name: _CustomAttributeBuilder.GetTypeInfo(UInt32, UInt32, IntPtr)
  nameWithType: CustomAttributeBuilder._CustomAttributeBuilder.GetTypeInfo(UInt32, UInt32, IntPtr)
  fullName: CustomAttributeBuilder._CustomAttributeBuilder.GetTypeInfo(UInt32, UInt32, IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Retrieves the type information for an object, which can then be used to get the type information for an interface.
  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.
  syntax:
    content: void _CustomAttributeBuilder.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);
    parameters:
    - id: iTInfo
      type: System.UInt32
      description: The type information to return.
    - id: lcid
      type: System.UInt32
      description: The locale identifier for the type information.
    - id: ppTInfo
      type: System.IntPtr
      description: Receives a pointer to the requested type information object.
  overload: System.Reflection.Emit.CustomAttributeBuilder.System#Runtime#InteropServices#_CustomAttributeBuilder#GetTypeInfo*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: The method is called late-bound using the COM <code>IDispatch</code> interface.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/CustomAttributeBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.CustomAttributeBuilder.System#Runtime#InteropServices#_CustomAttributeBuilder#GetTypeInfoCount(System.UInt32@)
  commentId: M:System.Reflection.Emit.CustomAttributeBuilder.System#Runtime#InteropServices#_CustomAttributeBuilder#GetTypeInfoCount(System.UInt32@)
  id: System#Runtime#InteropServices#_CustomAttributeBuilder#GetTypeInfoCount(System.UInt32@)
  isEii: true
  parent: System.Reflection.Emit.CustomAttributeBuilder
  langs:
  - csharp
  name: _CustomAttributeBuilder.GetTypeInfoCount(UInt32)
  nameWithType: CustomAttributeBuilder._CustomAttributeBuilder.GetTypeInfoCount(UInt32)
  fullName: CustomAttributeBuilder._CustomAttributeBuilder.GetTypeInfoCount(UInt32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Retrieves the number of type information interfaces that an object provides (either 0 or 1).
  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.
  syntax:
    content: void _CustomAttributeBuilder.GetTypeInfoCount (out uint pcTInfo);
    parameters:
    - id: pcTInfo
      type: System.UInt32
      description: Points to a location that receives the number of type information interfaces provided by the object.
  overload: System.Reflection.Emit.CustomAttributeBuilder.System#Runtime#InteropServices#_CustomAttributeBuilder#GetTypeInfoCount*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: The method is called late-bound using the COM <code>IDispatch</code> interface.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/CustomAttributeBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.CustomAttributeBuilder.System#Runtime#InteropServices#_CustomAttributeBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  commentId: M:System.Reflection.Emit.CustomAttributeBuilder.System#Runtime#InteropServices#_CustomAttributeBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  id: System#Runtime#InteropServices#_CustomAttributeBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  isEii: true
  parent: System.Reflection.Emit.CustomAttributeBuilder
  langs:
  - csharp
  name: _CustomAttributeBuilder.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  nameWithType: CustomAttributeBuilder._CustomAttributeBuilder.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  fullName: CustomAttributeBuilder._CustomAttributeBuilder.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Provides access to properties and methods exposed by an object.
  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::Invoke`, see the MSDN Library.
  syntax:
    content: void _CustomAttributeBuilder.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);
    parameters:
    - id: dispIdMember
      type: System.UInt32
      description: Identifies the member.
    - id: riid
      type: System.Guid
      description: Reserved for future use. Must be IID_NULL.
    - id: lcid
      type: System.UInt32
      description: The locale context in which to interpret arguments.
    - id: wFlags
      type: System.Int16
      description: Flags describing the context of the call.
    - id: pDispParams
      type: System.IntPtr
      description: Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.
    - id: pVarResult
      type: System.IntPtr
      description: Pointer to the location where the result is to be stored.
    - id: pExcepInfo
      type: System.IntPtr
      description: Pointer to a structure that contains exception information.
    - id: puArgErr
      type: System.IntPtr
      description: The index of the first argument that has an error.
  overload: System.Reflection.Emit.CustomAttributeBuilder.System#Runtime#InteropServices#_CustomAttributeBuilder#Invoke*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: The method is called late-bound using the COM <code>IDispatch</code> interface.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/CustomAttributeBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.NotImplementedException
  parent: System
  isExternal: false
  name: NotImplementedException
  nameWithType: NotImplementedException
  fullName: System.NotImplementedException
- uid: System.Reflection.Emit.CustomAttributeBuilder.#ctor(System.Reflection.ConstructorInfo,System.Object[])
  parent: System.Reflection.Emit.CustomAttributeBuilder
  isExternal: false
  name: CustomAttributeBuilder(ConstructorInfo, Object[])
  nameWithType: CustomAttributeBuilder.CustomAttributeBuilder(ConstructorInfo, Object[])
  fullName: CustomAttributeBuilder.CustomAttributeBuilder(ConstructorInfo, Object[])
- uid: System.Reflection.ConstructorInfo
  parent: System.Reflection
  isExternal: false
  name: ConstructorInfo
  nameWithType: ConstructorInfo
  fullName: System.Reflection.ConstructorInfo
- uid: System.Object[]
  parent: System
  isExternal: false
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.Emit.CustomAttributeBuilder.#ctor(System.Reflection.ConstructorInfo,System.Object[],System.Reflection.FieldInfo[],System.Object[])
  parent: System.Reflection.Emit.CustomAttributeBuilder
  isExternal: false
  name: CustomAttributeBuilder(ConstructorInfo, Object[], FieldInfo[], Object[])
  nameWithType: CustomAttributeBuilder.CustomAttributeBuilder(ConstructorInfo, Object[], FieldInfo[], Object[])
  fullName: CustomAttributeBuilder.CustomAttributeBuilder(ConstructorInfo, Object[], FieldInfo[], Object[])
- uid: System.Reflection.FieldInfo
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: System.Reflection.FieldInfo
- uid: System.Reflection.FieldInfo[]
  parent: System.Reflection
  isExternal: false
  name: FieldInfo[]
  nameWithType: FieldInfo[]
  fullName: System.Reflection.FieldInfo[]
  spec.csharp:
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: System.Reflection.FieldInfo
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.Emit.CustomAttributeBuilder.#ctor(System.Reflection.ConstructorInfo,System.Object[],System.Reflection.PropertyInfo[],System.Object[])
  parent: System.Reflection.Emit.CustomAttributeBuilder
  isExternal: false
  name: CustomAttributeBuilder(ConstructorInfo, Object[], PropertyInfo[], Object[])
  nameWithType: CustomAttributeBuilder.CustomAttributeBuilder(ConstructorInfo, Object[], PropertyInfo[], Object[])
  fullName: CustomAttributeBuilder.CustomAttributeBuilder(ConstructorInfo, Object[], PropertyInfo[], Object[])
- uid: System.Reflection.PropertyInfo
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo
- uid: System.Reflection.PropertyInfo[]
  parent: System.Reflection
  isExternal: false
  name: PropertyInfo[]
  nameWithType: PropertyInfo[]
  fullName: System.Reflection.PropertyInfo[]
  spec.csharp:
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    nameWithType: PropertyInfo
    fullName: System.Reflection.PropertyInfo
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.Emit.CustomAttributeBuilder.#ctor(System.Reflection.ConstructorInfo,System.Object[],System.Reflection.PropertyInfo[],System.Object[],System.Reflection.FieldInfo[],System.Object[])
  parent: System.Reflection.Emit.CustomAttributeBuilder
  isExternal: false
  name: CustomAttributeBuilder(ConstructorInfo, Object[], PropertyInfo[], Object[], FieldInfo[], Object[])
  nameWithType: CustomAttributeBuilder.CustomAttributeBuilder(ConstructorInfo, Object[], PropertyInfo[], Object[], FieldInfo[], Object[])
  fullName: CustomAttributeBuilder.CustomAttributeBuilder(ConstructorInfo, Object[], PropertyInfo[], Object[], FieldInfo[], Object[])
- uid: System.Reflection.Emit.CustomAttributeBuilder.System#Runtime#InteropServices#_CustomAttributeBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Reflection.Emit.CustomAttributeBuilder
  isExternal: false
  name: _CustomAttributeBuilder.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  nameWithType: CustomAttributeBuilder._CustomAttributeBuilder.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  fullName: CustomAttributeBuilder._CustomAttributeBuilder.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Reflection.Emit.CustomAttributeBuilder.System#Runtime#InteropServices#_CustomAttributeBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Reflection.Emit.CustomAttributeBuilder
  isExternal: false
  name: _CustomAttributeBuilder.GetTypeInfo(UInt32, UInt32, IntPtr)
  nameWithType: CustomAttributeBuilder._CustomAttributeBuilder.GetTypeInfo(UInt32, UInt32, IntPtr)
  fullName: CustomAttributeBuilder._CustomAttributeBuilder.GetTypeInfo(UInt32, UInt32, IntPtr)
- uid: System.Reflection.Emit.CustomAttributeBuilder.System#Runtime#InteropServices#_CustomAttributeBuilder#GetTypeInfoCount(System.UInt32@)
  parent: System.Reflection.Emit.CustomAttributeBuilder
  isExternal: false
  name: _CustomAttributeBuilder.GetTypeInfoCount(UInt32)
  nameWithType: CustomAttributeBuilder._CustomAttributeBuilder.GetTypeInfoCount(UInt32)
  fullName: CustomAttributeBuilder._CustomAttributeBuilder.GetTypeInfoCount(UInt32)
- uid: System.Reflection.Emit.CustomAttributeBuilder.System#Runtime#InteropServices#_CustomAttributeBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Reflection.Emit.CustomAttributeBuilder
  isExternal: false
  name: _CustomAttributeBuilder.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  nameWithType: CustomAttributeBuilder._CustomAttributeBuilder.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  fullName: CustomAttributeBuilder._CustomAttributeBuilder.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
- uid: System.Int16
  parent: System
  isExternal: false
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Reflection.Emit.CustomAttributeBuilder.#ctor*
  parent: System.Reflection.Emit.CustomAttributeBuilder
  isExternal: false
  name: CustomAttributeBuilder
  nameWithType: CustomAttributeBuilder.CustomAttributeBuilder
  fullName: CustomAttributeBuilder.CustomAttributeBuilder
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/CustomAttributeBuilder.xml
- uid: System.Reflection.Emit.CustomAttributeBuilder.System#Runtime#InteropServices#_CustomAttributeBuilder#GetIDsOfNames*
  parent: System.Reflection.Emit.CustomAttributeBuilder
  isExternal: false
  name: System.Runtime.InteropServices._CustomAttributeBuilder.GetIDsOfNames
  nameWithType: CustomAttributeBuilder.System.Runtime.InteropServices._CustomAttributeBuilder.GetIDsOfNames
  fullName: CustomAttributeBuilder.System.Runtime.InteropServices._CustomAttributeBuilder.GetIDsOfNames
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/CustomAttributeBuilder.xml
- uid: System.Reflection.Emit.CustomAttributeBuilder.System#Runtime#InteropServices#_CustomAttributeBuilder#GetTypeInfo*
  parent: System.Reflection.Emit.CustomAttributeBuilder
  isExternal: false
  name: System.Runtime.InteropServices._CustomAttributeBuilder.GetTypeInfo
  nameWithType: CustomAttributeBuilder.System.Runtime.InteropServices._CustomAttributeBuilder.GetTypeInfo
  fullName: CustomAttributeBuilder.System.Runtime.InteropServices._CustomAttributeBuilder.GetTypeInfo
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/CustomAttributeBuilder.xml
- uid: System.Reflection.Emit.CustomAttributeBuilder.System#Runtime#InteropServices#_CustomAttributeBuilder#GetTypeInfoCount*
  parent: System.Reflection.Emit.CustomAttributeBuilder
  isExternal: false
  name: System.Runtime.InteropServices._CustomAttributeBuilder.GetTypeInfoCount
  nameWithType: CustomAttributeBuilder.System.Runtime.InteropServices._CustomAttributeBuilder.GetTypeInfoCount
  fullName: CustomAttributeBuilder.System.Runtime.InteropServices._CustomAttributeBuilder.GetTypeInfoCount
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/CustomAttributeBuilder.xml
- uid: System.Reflection.Emit.CustomAttributeBuilder.System#Runtime#InteropServices#_CustomAttributeBuilder#Invoke*
  parent: System.Reflection.Emit.CustomAttributeBuilder
  isExternal: false
  name: System.Runtime.InteropServices._CustomAttributeBuilder.Invoke
  nameWithType: CustomAttributeBuilder.System.Runtime.InteropServices._CustomAttributeBuilder.Invoke
  fullName: CustomAttributeBuilder.System.Runtime.InteropServices._CustomAttributeBuilder.Invoke
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/CustomAttributeBuilder.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.Runtime.InteropServices._CustomAttributeBuilder
  parent: System.Runtime.InteropServices
  isExternal: false
  name: _CustomAttributeBuilder
  nameWithType: _CustomAttributeBuilder
  fullName: System.Runtime.InteropServices._CustomAttributeBuilder
