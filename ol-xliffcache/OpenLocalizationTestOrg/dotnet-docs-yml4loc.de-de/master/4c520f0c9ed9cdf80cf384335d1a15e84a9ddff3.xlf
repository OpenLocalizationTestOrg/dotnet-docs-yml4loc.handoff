<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4c520f0c9ed9cdf80cf384335d1a15e84a9ddff3</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Windows.Forms.TreeView.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9ef8fd6c475fed1f042f9fa0f70f8ea498e335b2</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f6a2d5a48a22db29fd6b5294860c3af1e029488e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Displays a hierarchical collection of labeled items, each represented by a <ph id="ph1">&lt;xref href="System.Windows.Forms.TreeNode"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.Nodes%2A&gt;</ph> collection holds all the <ph id="ph2">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph> objects that are assigned to the <ph id="ph3">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The tree nodes in this collection are referred to as the root tree nodes.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any tree node that is subsequently added to a root tree node is referred to as a child node.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because each <ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph> can contain a collection of other <ph id="ph2">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph> objects, you might find it difficult to determine your location in the tree structure when you iterate through the collection.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can parse the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode.FullPath%2A?displayProperty=fullName&gt;</ph> string by using the <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView.PathSeparator%2A&gt;</ph> string value to determine where a <ph id="ph3">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph> label begins and ends.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can display images next to the tree nodes by assigning an <ph id="ph1">&lt;xref:System.Windows.Forms.ImageList&gt;</ph> to the <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView.ImageList%2A&gt;</ph> property and referencing the index value of an <ph id="ph3">&lt;xref:System.Drawing.Image&gt;</ph> in the <ph id="ph4">&lt;xref:System.Windows.Forms.ImageList&gt;</ph> to assign that <ph id="ph5">&lt;xref:System.Drawing.Image&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the following properties to assign images:</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.ImageIndex%2A&gt;</ph> property to the index value of the <ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph> that you want to display when a tree node is not selected.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.SelectedImageIndex%2A&gt;</ph> property to the index value of the <ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph> that you want to display when a tree node is selected.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The images referenced by the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.ImageIndex%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView.SelectedImageIndex%2A&gt;</ph> property values are the default images displayed by all the tree nodes that are assigned to the <ph id="ph3">&lt;xref:System.Windows.Forms.TreeView.Nodes%2A&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Individual tree nodes can override the default images by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode.ImageIndex%2A?displayProperty=fullName&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.TreeNode.SelectedImageIndex%2A?displayProperty=fullName&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The state images displayed in the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> are 16 x 16 pixels by default.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting the <ph id="ph1">&lt;xref:System.Windows.Forms.ImageList.ImageSize%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView.StateImageList%2A&gt;</ph> will have no effect on how the images are displayed.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, the state images are resized according to the system DPI setting when the app.config file contains the following entry:</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Tree nodes can be expanded to display the next level of child tree nodes.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The user can expand the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph> by clicking the plus-sign (+) button, if one is displayed next to the <ph id="ph2">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph>, or you can expand the <ph id="ph3">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph> by calling the <ph id="ph4">&lt;xref:System.Windows.Forms.TreeNode.Expand%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>To expand all the child tree node levels in the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode.Nodes%2A&gt;</ph> collection, call the <ph id="ph2">&lt;xref:System.Windows.Forms.TreeNode.ExpandAll%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can collapse the child <ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph> level by calling the <ph id="ph2">&lt;xref:System.Windows.Forms.TreeNode.Collapse%2A?displayProperty=fullName&gt;</ph> method, or the user can press the minus-sign (-) button, if one is displayed next to the <ph id="ph3">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also call the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode.Toggle%2A?displayProperty=fullName&gt;</ph> method to alternate between the expanded and collapsed states.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>Tree nodes can optionally display check boxes.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>To display the check boxes, set the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.CheckBoxes%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode.Checked%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph> for tree nodes that are in a checked state.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode.Checked%2A?displayProperty=fullName&gt;</ph> property from within the <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView.BeforeCheck&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.TreeView.AfterCheck&gt;</ph> event causes the event to be raised multiple times and can result in unexpected behavior.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you might set the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode.Checked%2A&gt;</ph> property in the event handler when you are recursively updating the child nodes so that the user does not have to expand and check each one individually.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>To prevent the event from being raised multiple times, add logic to your event handler that only executes your recursive code if the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeViewEventArgs.Action%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.TreeViewEventArgs&gt;</ph> is not set to <ph id="ph3">&lt;xref:System.Windows.Forms.TreeViewAction?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an example of how to do this, see the Example section of the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.AfterCheck&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView.BeforeCheck&gt;</ph> events.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can change the appearance of the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> control by setting some of its display and style properties.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.ShowPlusMinus%2A&gt;</ph> to <ph id="ph2">`true`</ph> displays a plus-sign or minus-sign button next to each <ph id="ph3">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph> that can be expanded or collapsed, respectively.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.ShowRootLines%2A&gt;</ph> property to <ph id="ph2">`true`</ph> causes the <ph id="ph3">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> to display lines that join all the root tree nodes together.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can display lines that connect child tree nodes to their root node by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.ShowLines%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.HotTracking%2A&gt;</ph> property to <ph id="ph2">`true`</ph> changes the appearance of the tree node labels as the mouse pointer passes over them.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>When hot-tracked, the tree node labels take on the appearance of a hyperlink.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also completely customize the appearance of the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>To do this, set the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.DrawMode%2A&gt;</ph> property to a value other than <ph id="ph2">&lt;xref:System.Windows.Forms.TreeViewDrawMode?displayProperty=fullName&gt;</ph> and handle the <ph id="ph3">&lt;xref:System.Windows.Forms.TreeView.DrawNode&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>When setting the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.CheckBoxes%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView.Scrollable%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.TreeView.ImageIndex%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Forms.TreeView.SelectedImageIndex%2A&gt;</ph> properties at run time, the <ph id="ph5">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> handle is recreated (see <ph id="ph6">&lt;xref:System.Windows.Forms.Control.RecreateHandle%2A?displayProperty=fullName&gt;</ph>) to update the control's appearance.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>This causes all tree nodes to be collapsed, except for the selected <ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Forms.TreeView"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Occurs after the tree node check box is checked.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode.Checked%2A?displayProperty=fullName&gt;</ph> property from within a <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView.BeforeCheck&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.TreeView.AfterCheck&gt;</ph> event handler causes the event to be raised multiple times and can result in unexpected behavior.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>To prevent the event from being raised multiple times, add logic to your event handler that only executes your recursive code if the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeViewEventArgs.Action%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.TreeViewEventArgs&gt;</ph> is not set to <ph id="ph3">&lt;xref:System.Windows.Forms.TreeViewAction?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Occurs after the tree node is collapsed.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Occurs after the tree node is expanded.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Occurs after the tree node label text is edited.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Occurs after the tree node is selected.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event does not occur when the node is unselected.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>To detect whether the selection was cleared, you can test the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode.IsSelected%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Gets or sets the background color for the control.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.Color"&gt;&lt;/xref&gt;</ph> that represents the background color of the control.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The default is the value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.DefaultBackColor"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Gets or set the background image for the <ph id="ph1">&lt;xref href="System.Windows.Forms.TreeView"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is not relevant for this class.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Drawing.Image"&gt;&lt;/xref&gt;</ph> that is the background image for the <ph id="ph2">&lt;xref href="System.Windows.Forms.TreeView"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Occurs when the <ph id="ph1">&lt;xref href="System.Windows.Forms.TreeView.BackgroundImage"&gt;&lt;/xref&gt;</ph> property changes.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Gets or sets the layout of the background image for the <ph id="ph1">&lt;xref href="System.Windows.Forms.TreeView"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property/method/event is not relevant for this class.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ImageLayout"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.Windows.Forms.ImageLayout.Tile"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Occurs when the <ph id="ph1">&lt;xref href="System.Windows.Forms.TreeView.BackgroundImageLayout"&gt;&lt;/xref&gt;</ph> property changes.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Occurs before the tree node check box is checked.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode.Checked%2A?displayProperty=fullName&gt;</ph> property from within the <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView.BeforeCheck&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.TreeView.AfterCheck&gt;</ph> event causes the event to be raised multiple times and can result in unexpected behavior.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you might set the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode.Checked%2A&gt;</ph> property in the event handler when you are recursively updating the child nodes, so that the user does not have to expand and check each one individually.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>To prevent the event from being raised multiple times, add logic to your event handler that only executes your recursive code if the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeViewEventArgs.Action%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.TreeViewEventArgs&gt;</ph> is not set to <ph id="ph3">&lt;xref:System.Windows.Forms.TreeViewAction?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Occurs before the tree node is collapsed.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Occurs before the tree node is expanded.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Occurs before the tree node label text is edited.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Occurs before the tree node is selected.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Disables any redrawing of the tree view.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>To maintain performance while items are added one at a time to the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView&gt;</ph>, call the <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView.BeginUpdate%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.BeginUpdate%2A&gt;</ph> method prevents the control from painting until the <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView.EndUpdate%2A&gt;</ph> method is called.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>The preferred way to add items to a tree view control is to use the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A&gt;</ph> method to add an array of tree node items to a tree view.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if you want to add items one at a time, use the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.BeginUpdate%2A&gt;</ph> method to prevent the <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> control from painting during the add operations.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>To allow the control to resume painting, call the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.EndUpdate%2A&gt;</ph> method when all the tree nodes have been added to the tree view.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Gets or sets the border style of the tree view control.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.BorderStyle%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.Windows.Forms.BorderStyle.Fixed3D&gt;</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> has a sunken, three-dimensional appearance.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>To display a flat, thin border around the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> control, set the <ph id="ph2">&lt;xref:System.Windows.Forms.BorderStyle&gt;</ph> property to <ph id="ph3">&lt;xref:System.Windows.Forms.BorderStyle.FixedSingle&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.BorderStyle"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.Windows.Forms.BorderStyle.Fixed3D"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The assigned value is not one of the <ph id="ph1">&lt;xref href="System.Windows.Forms.BorderStyle"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether check boxes are displayed next to the tree nodes in the tree view control.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>A check box is displayed to the left of both the tree node label and tree node <ph id="ph1">&lt;xref:System.Drawing.Image&gt;</ph>, if any.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>Check boxes allow the user to select more than one tree node at a time.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.CheckBoxes%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> is set to <ph id="ph3">`true`</ph>, and the <ph id="ph4">&lt;xref:System.Windows.Forms.TreeView.StateImageList%2A&gt;</ph> property is set, each <ph id="ph5">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph> that is contained in the <ph id="ph6">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> displays the first and second images from the <ph id="ph7">&lt;xref:System.Windows.Forms.TreeView.StateImageList%2A&gt;</ph> to indicate an unchecked or checked state, respectively.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, the displayed images may be different if the following situation occurs: If the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.SelectedImageIndex%2A&gt;</ph> of the node is set to a value other than 0 or 1, and the <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView.CheckBoxes%2A&gt;</ph> property of the parent <ph id="ph3">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> is set to <ph id="ph4">`false`</ph>, the <ph id="ph5">&lt;xref:System.Windows.Forms.TreeView.SelectedImageIndex%2A&gt;</ph> will not automatically reset to -1 to indicate it is not set.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, the state image at the indicated index position is shown.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.CheckBoxes%2A&gt;</ph> is set to <ph id="ph2">`true`</ph> again, the first and second images of the <ph id="ph3">&lt;xref:System.Windows.Forms.TreeView.StateImageList%2A&gt;</ph> are shown to indicate a checked or unchecked state, respectively.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>When setting the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.CheckBoxes%2A&gt;</ph> property at run time, the <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> handle is recreated (see <ph id="ph3">&lt;xref:System.Windows.Forms.Control.RecreateHandle%2A?displayProperty=fullName&gt;</ph>) to update the control's appearance.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>This causes all tree nodes to be collapsed, with the exception of the selected <ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if a check box is displayed next to each tree node in the tree view control; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Collapses all the tree nodes.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.CollapseAll%2A&gt;</ph> method collapses all the <ph id="ph2">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph> objects, which includes all the child tree nodes, that are in the <ph id="ph3">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>The state of a <ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph> persists.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, suppose that you call the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode.Expand%2A&gt;</ph> method for a root tree node.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the child tree nodes were not previously collapsed, they will appear in their previously-expanded state.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.CollapseAll%2A&gt;</ph> method ensures that all the tree nodes appear in the collapsed state.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Creates a handle for the control.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Gets the required creation parameters when the control handle is created.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The creation parameters.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Gets the default size of the control.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The default <ph id="ph1">&lt;xref href="System.Drawing.Size"&gt;&lt;/xref&gt;</ph> of the control.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;xref href="System.Windows.Forms.TreeView"&gt;&lt;/xref&gt;</ph> and optionally releases the managed resources.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called by the public <ph id="ph1">`Dispose`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Dispose`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is true, this method releases all resources held by any managed objects that this <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> references.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method invokes the <ph id="ph1">`Dispose`</ph> method of each referenced object.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to release both managed and unmanaged resources; <ph id="ph2">`false`</ph> to release only unmanaged resources.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the control should redraw its surface using a secondary buffer.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.TreeView.DoubleBuffered"&gt;&lt;/xref&gt;</ph> property does not affect the <ph id="ph2">&lt;xref href="System.Windows.Forms.TreeView"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.DoubleBuffered%2A&gt;</ph> property does not affect the <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to reduce flicker when the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> is drawn, use the <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView.BeginUpdate%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.TreeView.EndUpdate%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the control uses a secondary buffer; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Gets or sets the mode in which the control is drawn.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>The nodes of a <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> are typically drawn by the operating system.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.DrawMode%2A&gt;</ph> property lets you customize the appearance of the nodes.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>To do this, set <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.DrawMode%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Windows.Forms.TreeViewDrawMode?displayProperty=fullName&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.TreeViewDrawMode?displayProperty=fullName&gt;</ph> and provide a handler for the <ph id="ph4">&lt;xref:System.Windows.Forms.TreeView.DrawNode&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is called owner drawing.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.TreeViewDrawMode"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.Windows.Forms.TreeViewDrawMode.Normal"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The property value is not a valid <ph id="ph1">&lt;xref href="System.Windows.Forms.TreeViewDrawMode"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Occurs when a <ph id="ph1">&lt;xref href="System.Windows.Forms.TreeView"&gt;&lt;/xref&gt;</ph> is drawn and the <ph id="ph2">&lt;xref href="System.Windows.Forms.TreeView.DrawMode"&gt;&lt;/xref&gt;</ph> property is set to a <ph id="ph3">&lt;xref href="System.Windows.Forms.TreeViewDrawMode"&gt;&lt;/xref&gt;</ph> value other than <ph id="ph4">&lt;xref href="System.Windows.Forms.TreeViewDrawMode.Normal"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this event to customize the appearance of nodes in a <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> control using owner drawing.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is raised only when the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.DrawMode%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.Windows.Forms.TreeViewDrawMode&gt;</ph> values of <ph id="ph3">&lt;xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawAll&gt;</ph> or <ph id="ph4">&lt;xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawText&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table indicates how the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph> can be customized when the <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView.DrawMode%2A&gt;</ph> property is set to these values.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>DrawMode property value</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>TreeNode customization</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph> label area can be customized.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>All other <ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph> elements are drawn automatically.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>The appearance of the entire <ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph> can be customized.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>Icons, check boxes, plus and minus signs, and lines connecting the nodes must be drawn manually if they are desired.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>The region that the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode.Text%2A?displayProperty=fullName&gt;</ph> value would occupy if it were drawn using the font specified by the <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> control's <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Font%2A&gt;</ph> property is the region in which a node can be clicked to select it.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is called the hit test region.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you draw outside this region, you should provide your own code that selects a node when its visible area is clicked.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>The hit test region corresponds to the <ph id="ph1">&lt;xref:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds%2A?displayProperty=fullName&gt;</ph> property when using <ph id="ph2">&lt;xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawText&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>When using <ph id="ph1">&lt;xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawAll&gt;</ph>, however, the <ph id="ph2">&lt;xref:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds%2A?displayProperty=fullName&gt;</ph> property encompasses the entire width of the <ph id="ph3">&lt;xref:System.Windows.Forms.TreeView&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, you can access the hit test region by getting the <ph id="ph1">&lt;xref:System.Windows.Forms.DrawTreeNodeEventArgs.Node%2A?displayProperty=fullName&gt;</ph> value and accessing its <ph id="ph2">&lt;xref:System.Windows.Forms.TreeNode.Bounds%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can then draw the hit test region of the node within these bounds, or you can provide your own hit test code.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that setting the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode.NodeFont%2A?displayProperty=fullName&gt;</ph> property does not change the size of the hit test region, which is calculated using the font specified for the entire <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Enables the redrawing of the tree view.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>To maintain performance while items are added one at a time to the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView&gt;</ph>, call the <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView.BeginUpdate%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.BeginUpdate%2A&gt;</ph> method prevents the control from painting until the <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView.EndUpdate%2A&gt;</ph> method is called.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>The preferred way to add items to a tree view control is to use the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A&gt;</ph> method to add an array of tree node items to a tree view.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if you want to add items one at a time, use the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.BeginUpdate%2A&gt;</ph> method to prevent the <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> control from painting during the add operations.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>To allow control the control to resume painting, call the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.EndUpdate%2A&gt;</ph> method when all the tree nodes have been added to the tree view.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Expands all the tree nodes.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.ExpandAll%2A&gt;</ph> method expands all the <ph id="ph2">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph> objects, which includes all the child tree nodes, that are in the <ph id="ph3">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>The state of a <ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph> persists.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, suppose that you call the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode.ExpandAll%2A&gt;</ph> method, and then the individual root tree nodes are collapsed.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>The child tree nodes have not been collapsed, and will appear in their previously-expanded state when the root tree nodes are expanded again.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.CollapseAll%2A&gt;</ph> method ensures that all the tree nodes appear in the collapsed state.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Gets or sets the foreground color of the control.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>The foreground <ph id="ph1">&lt;xref href="System.Drawing.Color"&gt;&lt;/xref&gt;</ph> of the control.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>The default is the value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.DefaultForeColor"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the selection highlight spans the width of the tree view control.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.FullRowSelect%2A&gt;</ph> is <ph id="ph2">`true`</ph>, a selection highlight spans the entire width of the tree view, display instead of the width of just the tree node label.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.FullRowSelect%2A&gt;</ph> property is ignored if <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView.ShowLines%2A&gt;</ph> is set to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the selection highlight spans the width of the tree view control; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Returns an <ph id="ph1">&lt;xref href="System.Windows.Forms.OwnerDrawPropertyBag"&gt;&lt;/xref&gt;</ph> for the specified <ph id="ph2">&lt;xref href="System.Windows.Forms.TreeNode"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.TreeNode"&gt;&lt;/xref&gt;</ph> for which to return an <ph id="ph2">&lt;xref href="System.Windows.Forms.OwnerDrawPropertyBag"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>The visible state of the <ph id="ph1">&lt;xref href="System.Windows.Forms.TreeNode"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Windows.Forms.OwnerDrawPropertyBag"&gt;&lt;/xref&gt;</ph> for the specified <ph id="ph2">&lt;xref href="System.Windows.Forms.TreeNode"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Retrieves the tree node that is at the specified point.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can pass the <ph id="ph1">&lt;xref:System.Windows.Forms.MouseEventArgs.X%2A?displayProperty=fullName&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.MouseEventArgs.Y%2A?displayProperty=fullName&gt;</ph> coordinates of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> event as the <ph id="ph4">&lt;xref:System.Drawing.Point.X%2A&gt;</ph> and <ph id="ph5">&lt;xref:System.Drawing.Point.Y%2A&gt;</ph> values of a new <ph id="ph6">&lt;xref:System.Drawing.Point&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Drawing.Point"&gt;&lt;/xref&gt;</ph> to evaluate and retrieve the node from.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.TreeNode"&gt;&lt;/xref&gt;</ph> at the specified point, in tree view (client) coordinates, or <ph id="ph2">`null`</ph> if there is no node at that location.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Retrieves the tree node at the point with the specified coordinates.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can pass the <ph id="ph1">&lt;xref:System.Windows.Forms.MouseEventArgs.X%2A?displayProperty=fullName&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.MouseEventArgs.Y%2A?displayProperty=fullName&gt;</ph> coordinates of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> event as the <ph id="ph4">`x`</ph> and <ph id="ph5">`y`</ph> parameters.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Drawing.Point.X"&gt;&lt;/xref&gt;</ph> position to evaluate and retrieve the node from.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Drawing.Point.Y"&gt;&lt;/xref&gt;</ph> position to evaluate and retrieve the node from.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.TreeNode"&gt;&lt;/xref&gt;</ph> at the specified location, in tree view (client) coordinates, or <ph id="ph2">`null`</ph> if there is no node at that location.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Retrieves the number of tree nodes, optionally including those in all subtrees, assigned to the tree view control.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`includeSubTrees`</ph> is <ph id="ph2">`true`</ph>, the result is the number of all the tree nodes in the entire tree structure.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to count the <ph id="ph2">&lt;xref href="System.Windows.Forms.TreeNode"&gt;&lt;/xref&gt;</ph> items that the subtrees contain; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>The number of tree nodes, optionally including those in all subtrees, assigned to the tree view control.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the selected tree node remains highlighted even when the tree view has lost the focus.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT">
          <source>When this property is set to <ph id="ph1">`false`</ph>, selected nodes in the <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> control remain highlighted in a different color than the current selection color when the <ph id="ph3">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> control loses focus.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use this property to keep items that are selected by the user visible when the user clicks a different control on the form or moves to a different window.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are concerned with the accessibility of your applications, it is recommended that you set the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.HideSelection%2A&gt;</ph> property to <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the selected tree node is not highlighted when the tree view has lost the focus; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Provides node information, given x- and y-coordinates.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to determine whether a set of x- and y-coordinates is located in a <ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph> and where within the node the point is located, such as on the label or image area.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>The x-coordinate at which to retrieve node information</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>The y-coordinate at which to retrieve node information.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>The node information.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Provides node information, given a point.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to determine whether a point is located in a <ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph> and where within the node the point is located, such as on the label or image area.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Drawing.Point"&gt;&lt;/xref&gt;</ph> at which to retrieve node information.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>The node information.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether a tree node label takes on the appearance of a hyperlink as the mouse pointer passes over it.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.CheckBoxes%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.TreeView.HotTracking%2A&gt;</ph> property has no effect.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.HotTracking%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, each tree node label takes on the appearance of a hyperlink as the mouse pointer passes over it.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.FontStyle.Underline&gt;</ph> font style is applied to the <ph id="ph2">&lt;xref:System.Drawing.Font&gt;</ph> and the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> is set to blue to make the label appear as a link.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT">
          <source>The appearance is not controlled by the Internet settings of the user's operating system.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if a tree node label takes on the appearance of a hyperlink as the mouse pointer passes over it; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>Gets or sets the image-list index value of the default image that is displayed by the tree nodes.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.ImageIndex%2A&gt;</ph> value is the index of an <ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph> stored in the <ph id="ph3">&lt;xref:System.Windows.Forms.ImageList&gt;</ph> assigned to the <ph id="ph4">&lt;xref:System.Windows.Forms.TreeView.ImageList%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.ImageKey%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView.ImageIndex%2A&gt;</ph> properties are mutually exclusive; if one is set, the other is ignored.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you set <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.ImageKey%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView.ImageIndex%2A&gt;</ph> is automatically set to -1.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alternatively, if you set <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.ImageIndex%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView.ImageKey%2A&gt;</ph> is automatically set to an empty string ("").</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT">
          <source>When setting the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.ImageIndex%2A&gt;</ph> property at run time, the <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> handle is recreated (see <ph id="ph3">&lt;xref:System.Windows.Forms.Control.RecreateHandle%2A?displayProperty=fullName&gt;</ph>) to update the control's appearance.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT">
          <source>This causes all tree nodes to be collapsed, with the exception of the selected <ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>A zero-based index that represents the position of an <ph id="ph1">&lt;xref href="System.Drawing.Image"&gt;&lt;/xref&gt;</ph> in an <ph id="ph2">&lt;xref href="System.Windows.Forms.ImageList"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>The default is zero.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>The specified index is less than 0.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>Gets or sets the key of the default image for each node in the <ph id="ph1">&lt;xref href="System.Windows.Forms.TreeView"&gt;&lt;/xref&gt;</ph> control when it is in an unselected state.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.ImageKey%2A&gt;</ph> property is case-insensitive.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a <ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph> does not have an image set, the image specified by the <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView.ImageKey%2A&gt;</ph> property will be shown when the node is not selected.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the node is selected, the first item in the <ph id="ph1">&lt;xref:System.Windows.Forms.ImageList&gt;</ph> will be shown.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.ImageKey%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView.ImageIndex%2A&gt;</ph> properties are mutually exclusive, meaning if one is set, the other is ignored.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you set the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.ImageKey%2A&gt;</ph> property, the <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView.ImageIndex%2A&gt;</ph> property is automatically set to -1.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alternatively, if you set the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.ImageIndex%2A&gt;</ph> property, the <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView.ImageKey%2A&gt;</ph> is automatically set to an empty string ("").</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>The key of the default image shown for each node <ph id="ph1">&lt;xref href="System.Windows.Forms.TreeView"&gt;&lt;/xref&gt;</ph> control when the node is in an unselected state.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>Gets or sets the <ph id="ph1">&lt;xref href="System.Windows.Forms.ImageList"&gt;&lt;/xref&gt;</ph> that contains the <ph id="ph2">&lt;xref href="System.Drawing.Image"&gt;&lt;/xref&gt;</ph> objects that are used by the tree nodes.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.ImageList&gt;</ph> property value is anything other than <ph id="ph2">`null`</ph>, all the tree nodes display the first <ph id="ph3">&lt;xref:System.Drawing.Image&gt;</ph> stored in the <ph id="ph4">&lt;xref:System.Windows.Forms.ImageList&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can specify which images from the list are displayed for selected and unselected nodes by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.ImageIndex%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView.SelectedImageIndex%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT">
          <source>Individual <ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph> objects can specify which image is displayed by setting their <ph id="ph2">&lt;xref:System.Windows.Forms.TreeNode.ImageIndex%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.TreeNode.SelectedImageIndex%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT">
          <source>These individual settings will override the settings in the corresponding <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the .NET Framework version 1.1, there is an issue that prevents images from appearing on <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> nodes when your application calls <ph id="ph2">&lt;xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT">
          <source>To work around this issue, call <ph id="ph1">&lt;xref:System.Windows.Forms.Application.DoEvents%2A?displayProperty=fullName&gt;</ph> in your <ph id="ph2">`Main`</ph> method immediately after you call <ph id="ph3">&lt;xref:System.Windows.Forms.Application.EnableVisualStyles%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT">
          <source>This issue is fixed in the <ph id="ph1">[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.ImageList"&gt;&lt;/xref&gt;</ph> that contains the <ph id="ph2">&lt;xref href="System.Drawing.Image"&gt;&lt;/xref&gt;</ph> objects that are used by the tree nodes.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>Gets or sets the distance to indent each child tree node level.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting this property to a value of -1 does not throw an exception if the value has not yet been changed from its default.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is because the control uses a value of -1 as an internal default before the control handle has been created.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT">
          <source>This internal default value causes the wrapped control to return its own default value of 19.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>The distance, in pixels, to indent each child tree node level.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>The default value is 19.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>The assigned value is less than 0.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>The assigned value is greater than 32,000.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>Determines whether the specified key is a regular input key or a special key that requires preprocessing.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the user is editing a tree node, the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> control treats keys such as ENTER, ESC, HOME, and END as input keys.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>One of the Keys values.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the specified key is a regular input key; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>Occurs when the user begins dragging a node.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>Gets or sets the height of each tree node in the tree view control.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the item height is set to a value larger than the height of the tree view control, calling the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode.EnsureVisible%2A?displayProperty=fullName&gt;</ph> method will have unexpected results.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>The height, in pixels, of each tree node in the tree view.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>The assigned value is less than one.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>The assigned value is greater than the <ph id="ph1">&lt;xref href="System.Int16.MaxValue"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the label text of the tree nodes can be edited.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode.BeginEdit%2A&gt;</ph> method works only if the <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView.LabelEdit%2A&gt;</ph> property is <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.LabelEdit%2A&gt;</ph> is <ph id="ph2">`false`</ph> when you attempt to edit the label, an exception will be thrown and the tree node will not be put in to an editable state.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the label text of the tree nodes can be edited; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>Gets or sets the color of the lines connecting the nodes of the <ph id="ph1">&lt;xref href="System.Windows.Forms.TreeView"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Drawing.Color"&gt;&lt;/xref&gt;</ph> of the lines connecting the tree nodes.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>Occurs when the user clicks a <ph id="ph1">&lt;xref href="System.Windows.Forms.TreeNode"&gt;&lt;/xref&gt;</ph> with the mouse.</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event occurs when the user clicks any part of a tree node with the mouse, including the plus sign (<bpt id="p1">**</bpt><ph id="ph1">+</ph><ept id="p1">**</ept>) or minus sign (<bpt id="p2">**</bpt><ph id="ph2">-</ph><ept id="p2">**</ept>) that indicates whether the node is collapsed or expanded.</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>Occurs when the user double-clicks a <ph id="ph1">&lt;xref href="System.Windows.Forms.TreeNode"&gt;&lt;/xref&gt;</ph> with the mouse.</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event occurs when the user double-clicks any part of a tree node with the mouse, including the plus sign (+) or minus sign (-) that indicates whether the node is collapsed or expanded.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>Occurs when the mouse hovers over a <ph id="ph1">&lt;xref href="System.Windows.Forms.TreeNode"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the mouse is located over a <ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph>, the <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView.NodeMouseHover&gt;</ph> event will occur before the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.MouseHover&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>Gets the collection of tree nodes that are assigned to the tree view control.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.Nodes%2A&gt;</ph> property holds a collection of <ph id="ph2">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph> objects, each of which has a <ph id="ph3">&lt;xref:System.Windows.Forms.TreeNode.Nodes%2A&gt;</ph> property that can contain its own <ph id="ph4">&lt;xref:System.Windows.Forms.TreeNodeCollection&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT">
          <source>This nesting of tree nodes can make it difficult to navigate a tree structure, but the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode.FullPath%2A&gt;</ph> property makes it easier to determine your location within the tree structure.</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.TreeNodeCollection"&gt;&lt;/xref&gt;</ph> that represents the tree nodes assigned to the tree view control.</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.TreeView.AfterCheck"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.OnAfterCheck%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.TreeViewEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.TreeView.AfterCollapse"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.OnAfterCollapse%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.TreeViewEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.TreeView.AfterExpand"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.OnAfterExpand%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.TreeViewEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.TreeView.AfterLabelEdit"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.OnAfterLabelEdit%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.NodeLabelEditEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.TreeView.AfterSelect"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.OnAfterSelect%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.TreeViewEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.TreeView.BeforeCheck"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.OnBeforeCheck%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.TreeViewCancelEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.TreeView.BeforeCollapse"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.OnBeforeCollapse%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.TreeViewCancelEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.TreeView.BeforeExpand"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.OnBeforeExpand%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.TreeViewCancelEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.TreeView.BeforeLabelEdit"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.OnBeforeLabelEdit%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.NodeLabelEditEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.TreeView.BeforeSelect"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.OnBeforeSelect%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.TreeViewCancelEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.TreeView.DrawNode"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.OnDrawNode%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DrawTreeNodeEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>Overrides <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.OnHandleCreated%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>Overrides <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.OnHandleDestroyed%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.TreeView.ItemDrag"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.OnItemDrag%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Windows.Forms.ItemDragEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.KeyDown"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.CheckBoxes%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph> and the <ph id="ph3">&lt;xref:System.Windows.Forms.KeyEventArgs.Handled%2A&gt;</ph> property is set to <ph id="ph4">`false`</ph>, the <ph id="ph5">&lt;xref:System.Windows.Forms.TreeView.OnKeyDown%2A&gt;</ph> method switches between selecting and clearing the check box when the user presses the SPACEBAR.</source>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.OnKeyDown%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.KeyEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.KeyPress"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> control will select the first item that begins with the value of the <ph id="ph4">&lt;xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A&gt;</ph> property of <ph id="ph5">`e`</ph>.</source>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.OnKeyPress%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.KeyPressEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>Overrides <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.OnKeyUp%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.KeyEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.MouseHover"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.OnMouseHover%2A&gt;</ph> method performs a hit test to see whether the mouse is located over a <ph id="ph2">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph>, and if it is, raises the <ph id="ph3">&lt;xref:System.Windows.Forms.TreeView.NodeMouseHover&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.OnMouseHover%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.MouseLeave"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.OnMouseLeave%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.TreeView.NodeMouseClick"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.OnNodeMouseClick%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.TreeNodeMouseClickEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.TreeView.NodeMouseDoubleClick"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.OnNodeMouseDoubleClick%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.TreeNodeMouseClickEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.TreeView.NodeMouseHover"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.OnNodeMouseHover%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.TreeNodeMouseHoverEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.TreeView.RightToLeftLayoutChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.OnRightToLeftLayoutChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source>Gets or sets the spacing between the <ph id="ph1">&lt;xref href="System.Windows.Forms.TreeView"&gt;&lt;/xref&gt;</ph> control's contents and its edges.</source>
        </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is not relevant for this class.</source>
        </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.Padding"&gt;&lt;/xref&gt;</ph> indicating the space between the control edges and its contents.</source>
        </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.TreeView.Padding"&gt;&lt;/xref&gt;</ph> property changes.</source>
        </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source>Occurs when the <ph id="ph1">&lt;xref href="System.Windows.Forms.TreeView"&gt;&lt;/xref&gt;</ph> is drawn.</source>
        </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source>Gets or sets the delimiter string that the tree node path uses.</source>
        </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT">
          <source>The tree node path consists of a set of tree node labels separated by the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.PathSeparator%2A&gt;</ph> delimiter strings.</source>
        </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT">
          <source>The labels range from the root tree node to the tree node that you want.</source>
        </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>The delimiter string that the tree node <ph id="ph1">&lt;xref href="System.Windows.Forms.TreeNode.FullPath"&gt;&lt;/xref&gt;</ph> property uses.</source>
        </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>The default is the backslash character (<ph id="ph1">\\</ph>).</source>
        </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the <ph id="ph1">&lt;xref href="System.Windows.Forms.TreeView"&gt;&lt;/xref&gt;</ph> should be laid out from right-to-left.</source>
        </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.RightToLeftLayout%2A&gt;</ph> property is for use with international applications where the language is read from right-to-left.</source>
        </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you set <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.RightToLeftLayout%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> to <ph id="ph3">`true`</ph> the control's contents and text will be laid out from right-to-left.</source>
        </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the control should be laid out from right-to-left; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.TreeView.RightToLeftLayout"&gt;&lt;/xref&gt;</ph> property changes.</source>
        </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the tree view control displays scroll bars when they are needed.</source>
        </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this property is set to <ph id="ph1">`true`</ph>, scroll bars are displayed on the <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> when any <ph id="ph3">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph> is located outside the control's client region.</source>
        </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT">
          <source>When setting the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.Scrollable%2A&gt;</ph> property at run time, the <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> handle is recreated (see <ph id="ph3">&lt;xref:System.Windows.Forms.Control.RecreateHandle%2A?displayProperty=fullName&gt;</ph>) to update the control's appearance.</source>
        </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT">
          <source>This causes all tree nodes to be collapsed, with the exception of the selected <ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the tree view control displays scroll bars when they are needed; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>Gets or sets the image list index value of the image that is displayed when a tree node is selected.</source>
        </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.SelectedImageIndex%2A&gt;</ph> value is the index of an <ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph> stored in the <ph id="ph3">&lt;xref:System.Windows.Forms.ImageList&gt;</ph> assigned to the <ph id="ph4">&lt;xref:System.Windows.Forms.TreeView.ImageList%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT">
          <source>When setting the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.SelectedImageIndex%2A&gt;</ph> property at run time, the <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> handle is recreated (see <ph id="ph3">&lt;xref:System.Windows.Forms.Control.RecreateHandle%2A?displayProperty=fullName&gt;</ph>) to update the control's appearance.</source>
        </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT">
          <source>This causes all tree nodes to be collapsed, except for the selected <ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source>A zero-based index value that represents the position of an <ph id="ph1">&lt;xref href="System.Drawing.Image"&gt;&lt;/xref&gt;</ph> in an <ph id="ph2">&lt;xref href="System.Windows.Forms.ImageList"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve">
          <source>The index assigned value is less than zero.</source>
        </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source>Gets or sets the key of the default image shown when a <ph id="ph1">&lt;xref href="System.Windows.Forms.TreeNode"&gt;&lt;/xref&gt;</ph> is in a selected state.</source>
        </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a <ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph> does not have a selected image set, the image specified by the <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView.SelectedImageKey%2A&gt;</ph> property will be shown when the node is not selected.</source>
        </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.SelectedImageKey%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView.SelectedImageIndex%2A&gt;</ph> properties are mutually exclusive; if one is set, the other is ignored.</source>
        </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you set the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.SelectedImageKey%2A&gt;</ph> property, the <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView.SelectedImageIndex%2A&gt;</ph> property is automatically set to -1.</source>
        </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alternatively, if you set the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.SelectedImageIndex%2A&gt;</ph> property, the <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView.SelectedImageKey%2A&gt;</ph> is automatically set to an empty string ("").</source>
        </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve">
          <source>The key of the default image shown when a <ph id="ph1">&lt;xref href="System.Windows.Forms.TreeNode"&gt;&lt;/xref&gt;</ph> is in a selected state.</source>
        </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source>Gets or sets the tree node that is currently selected in the tree view control.</source>
        </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no <ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph> is currently selected, the <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView.SelectedNode%2A&gt;</ph> property is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you set this property, the specified node is scrolled into view and any parent nodes are expanded so that the specified node is visible.</source>
        </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the parent node or any ancestor node of the selected node is collapsed either programmatically or through user action, the collapsed node becomes the selected node.</source>
        </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.TreeNode"&gt;&lt;/xref&gt;</ph> that is currently selected in the tree view control.</source>
        </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether lines are drawn between tree nodes in the tree view control.</source>
        </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.ShowLines%2A&gt;</ph> is set to <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.TreeView.FullRowSelect%2A&gt;</ph> property is ignored.</source>
        </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if lines are drawn between tree nodes in the tree view control; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating ToolTips are shown when the mouse pointer hovers over a <ph id="ph1">&lt;xref href="System.Windows.Forms.TreeNode"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT">
          <source>In order for ToolTips to be visible, you must set the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode.ToolTipText%2A&gt;</ph> for a <ph id="ph2">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if ToolTips are shown when the mouse pointer hovers over a <ph id="ph2">&lt;xref href="System.Windows.Forms.TreeNode"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether plus-sign (+) and minus-sign (-) buttons are displayed next to tree nodes that contain child tree nodes.</source>
        </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT">
          <source>The plus sign and minus sign buttons appear next to the root tree nodes only if the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.ShowRootLines%2A&gt;</ph> property value is <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the plus sign and minus sign buttons are not displayed, no visual cue exists to indicate that the tree node contains child tree nodes and is expandable.</source>
        </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT">
          <source>The user then must double-click a tree node to determine whether it contains child tree nodes, to expand it, or to collapse it.</source>
        </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if plus sign and minus sign buttons are displayed next to tree nodes that contain child tree nodes; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether lines are drawn between the tree nodes that are at the root of the tree view.</source>
        </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.ShowRootLines%2A&gt;</ph> property is <ph id="ph2">`false`</ph>, the plus-sign and minus-sign buttons will not appear next to the root tree nodes, and the <ph id="ph3">&lt;xref:System.Windows.Forms.TreeView.ShowPlusMinus%2A&gt;</ph> property will have no effect.</source>
        </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if lines are drawn between the tree nodes that are at the root of the tree view; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve">
          <source>Sorts the items in <ph id="ph1">&lt;xref href="System.Windows.Forms.TreeView"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method reapplies the default sort, which is alphabetical by node text, or a custom sort specified by the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.TreeViewNodeSorter%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use this method if the text of existing nodes is changed or nodes are moved by the user, and you want to sort the items again.</source>
        </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default sorter uses the <ph id="ph1">&lt;xref:System.Globalization.CompareInfo.Compare%2A&gt;</ph> method based on the <ph id="ph2">&lt;xref:System.Windows.Forms.Application.CurrentCulture%2A&gt;</ph> specified by the application.</source>
        </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT">
          <source>This means that <ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph> objects with equal value are kept in the order in which they were added to the <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT">
          <source>This behavior may be different if a custom sort is applied.</source>
        </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the tree nodes in the tree view are sorted.</source>
        </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.Sorted%2A&gt;</ph> is set to <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph> objects are sorted in alphabetical order by their <ph id="ph4">&lt;xref:System.Windows.Forms.TreeNode.Text%2A&gt;</ph> property values.</source>
        </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should always use <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.BeginUpdate%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView.EndUpdate%2A&gt;</ph> to maintain performance when you add a large quantity of items to a sorted <ph id="ph3">&lt;xref:System.Windows.Forms.TreeView&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the text of an existing node is changed, you must call <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.Sort%2A&gt;</ph> to resort the items.</source>
        </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default sorter uses the <ph id="ph1">&lt;xref:System.Globalization.CompareInfo.Compare%2A&gt;</ph> method based on the <ph id="ph2">&lt;xref:System.Windows.Forms.Application.CurrentCulture%2A&gt;</ph> specified by the application.</source>
        </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT">
          <source>This means that <ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph> objects with equal value are kept in the order in which they were added to the <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the tree nodes in the tree view are sorted; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve">
          <source>Gets or sets the image list that is used to indicate the state of the <ph id="ph1">&lt;xref href="System.Windows.Forms.TreeView"&gt;&lt;/xref&gt;</ph> and its nodes.</source>
        </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT">
          <source>To indicate the state of a <ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph>, set the <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView.StateImageList%2A&gt;</ph> property and also set the <ph id="ph3">&lt;xref:System.Windows.Forms.TreeNode.StateImageKey%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Windows.Forms.TreeNode.StateImageIndex%2A&gt;</ph> property for each <ph id="ph5">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT">
          <source>The state images displayed in the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> are 16 x 16 pixels by default.</source>
        </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting the <ph id="ph1">&lt;xref:System.Windows.Forms.ImageList.ImageSize%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView.StateImageList%2A&gt;</ph> will have no effect on how the images are displayed.</source>
        </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, the state images are resized according to the system DPI setting when the app.config file contains the following entry:</source>
        </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.CheckBoxes%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> is set to <ph id="ph3">`true`</ph> and the <ph id="ph4">&lt;xref:System.Windows.Forms.TreeView.StateImageList%2A&gt;</ph> property is set, each <ph id="ph5">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph> that is contained in the <ph id="ph6">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> displays the first and second images from the <ph id="ph7">&lt;xref:System.Windows.Forms.TreeView.StateImageList%2A&gt;</ph> to indicate an unchecked or checked state, respectively.</source>
        </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should set the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.StateImageList%2A&gt;</ph> property before you add nodes to the <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> to prevent state images being shown at design time for nodes that do not have a state image set.</source>
        </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.ImageList"&gt;&lt;/xref&gt;</ph> used for indicating the state of the <ph id="ph2">&lt;xref href="System.Windows.Forms.TreeView"&gt;&lt;/xref&gt;</ph> and its nodes.</source>
        </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve">
          <source>Gets or sets the text of the <ph id="ph1">&lt;xref href="System.Windows.Forms.TreeView"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is not relevant for this class.</source>
        </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Null`</ph> in all cases.</source>
        </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve">
          <source>Occurs when the <ph id="ph1">&lt;xref href="System.Windows.Forms.TreeView.Text"&gt;&lt;/xref&gt;</ph> property changes.</source>
        </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve">
          <source>Gets or sets the first fully-visible tree node in the tree view control.</source>
        </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT">
          <source>Initially, the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.TopNode%2A&gt;</ph> returns the first root tree node, which is located at the top of the <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if the user has scrolled the contents, another tree node might be at the top.</source>
        </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting this property has no effect when the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.Scrollable%2A&gt;</ph> property value is <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.TreeNode"&gt;&lt;/xref&gt;</ph> that represents the first fully-visible tree node in the tree view control.</source>
        </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve">
          <source>Returns a <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> containing the name of the <ph id="ph2">&lt;xref href="System.ComponentModel.Component"&gt;&lt;/xref&gt;</ph>, if any.</source>
        </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve">
          <source>This method should not be overridden.</source>
        </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> containing the name of the <ph id="ph2">&lt;xref href="System.ComponentModel.Component"&gt;&lt;/xref&gt;</ph>, if any, or <ph id="ph3">`null`</ph> if the <ph id="ph4">&lt;xref href="System.ComponentModel.Component"&gt;&lt;/xref&gt;</ph> is unnamed.</source>
        </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve">
          <source>Gets or sets the implementation of <ph id="ph1">&lt;xref href="System.Collections.IComparer"&gt;&lt;/xref&gt;</ph> to perform a custom sort of the <ph id="ph2">&lt;xref href="System.Windows.Forms.TreeView"&gt;&lt;/xref&gt;</ph> nodes.</source>
        </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT">
          <source>The custom sort is applied when the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.TreeViewNodeSorter%2A&gt;</ph> is set.</source>
        </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a <ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph> label is changed, you can call the <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView.Sort%2A&gt;</ph> method to sort the items again with the custom sorter specified by the <ph id="ph3">&lt;xref:System.Windows.Forms.TreeView.TreeViewNodeSorter%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default sorter uses the <ph id="ph1">&lt;xref:System.Globalization.CompareInfo.Compare%2A&gt;</ph> method based on the <ph id="ph2">&lt;xref:System.Windows.Forms.Application.CurrentCulture%2A&gt;</ph> specified by the application.</source>
        </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT">
          <source>This means that <ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph> objects with equal value are kept in the order in which they were added to the <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT">
          <source>This behavior may be different if a custom sort is applied.</source>
        </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Collections.IComparer"&gt;&lt;/xref&gt;</ph> to perform the custom sort.</source>
        </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve">
          <source>Gets the number of tree nodes that can be fully visible in the tree view control.</source>
        </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView.VisibleCount%2A&gt;</ph> value can be greater than the number of tree nodes in the tree view.</source>
        </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value is calculated by dividing the height of the client window by the height of a tree node item.</source>
        </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT">
          <source>The result is the total number of <ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph> objects that the <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> can display within its current dimensions.</source>
        </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve">
          <source>The number of <ph id="ph1">&lt;xref href="System.Windows.Forms.TreeNode"&gt;&lt;/xref&gt;</ph> items that can be fully visible in the <ph id="ph2">&lt;xref href="System.Windows.Forms.TreeView"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve">
          <source>Overrides <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve">
          <source>The Windows <ph id="ph1">&lt;xref href="System.Windows.Forms.Message"&gt;&lt;/xref&gt;</ph> to process.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>