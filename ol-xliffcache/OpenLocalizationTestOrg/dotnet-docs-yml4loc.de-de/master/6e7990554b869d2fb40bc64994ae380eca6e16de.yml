### YamlMime:ManagedReference
items:
- uid: System.Threading.CountdownEvent
  commentId: T:System.Threading.CountdownEvent
  id: CountdownEvent
  children:
  - System.Threading.CountdownEvent.#ctor(System.Int32)
  - System.Threading.CountdownEvent.AddCount
  - System.Threading.CountdownEvent.AddCount(System.Int32)
  - System.Threading.CountdownEvent.CurrentCount
  - System.Threading.CountdownEvent.Dispose
  - System.Threading.CountdownEvent.Dispose(System.Boolean)
  - System.Threading.CountdownEvent.InitialCount
  - System.Threading.CountdownEvent.IsSet
  - System.Threading.CountdownEvent.Reset
  - System.Threading.CountdownEvent.Reset(System.Int32)
  - System.Threading.CountdownEvent.Signal(System.Int32)
  - System.Threading.CountdownEvent.Signal
  - System.Threading.CountdownEvent.TryAddCount
  - System.Threading.CountdownEvent.TryAddCount(System.Int32)
  - System.Threading.CountdownEvent.Wait
  - System.Threading.CountdownEvent.Wait(System.Int32)
  - System.Threading.CountdownEvent.Wait(System.Threading.CancellationToken)
  - System.Threading.CountdownEvent.Wait(System.TimeSpan)
  - System.Threading.CountdownEvent.Wait(System.Int32,System.Threading.CancellationToken)
  - System.Threading.CountdownEvent.Wait(System.TimeSpan,System.Threading.CancellationToken)
  - System.Threading.CountdownEvent.WaitHandle
  langs:
  - csharp
  name: CountdownEvent
  nameWithType: CountdownEvent
  fullName: System.Threading.CountdownEvent
  type: Class
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: Represents a synchronization primitive that is signaled when its count reaches zero.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public class CountdownEvent : IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CountdownEvent.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.CountdownEvent.#ctor(System.Int32)
  commentId: M:System.Threading.CountdownEvent.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Threading.CountdownEvent
  langs:
  - csharp
  name: CountdownEvent(Int32)
  nameWithType: CountdownEvent.CountdownEvent(Int32)
  fullName: CountdownEvent.CountdownEvent(Int32)
  type: Constructor
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: Initializes a new instance of <xref href="System.Threading.CountdownEvent"></xref> class with the specified count.
  remarks: iI `initialCount` is 0, the event is created in a signaled state.
  syntax:
    content: public CountdownEvent (int initialCount);
    parameters:
    - id: initialCount
      type: System.Int32
      description: The number of signals initially required to set the <xref href="System.Threading.CountdownEvent"></xref>.
  overload: System.Threading.CountdownEvent.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>initialCount</code> is less than 0.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CountdownEvent.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.CountdownEvent.AddCount
  commentId: M:System.Threading.CountdownEvent.AddCount
  id: AddCount
  parent: System.Threading.CountdownEvent
  langs:
  - csharp
  name: AddCount()
  nameWithType: CountdownEvent.AddCount()
  fullName: CountdownEvent.AddCount()
  type: Method
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: Increments the <xref href="System.Threading.CountdownEvent"></xref>'s current count by one.
  syntax:
    content: public void AddCount ();
    parameters: []
  overload: System.Threading.CountdownEvent.AddCount*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The current instance has already been disposed.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The current instance is already set.  \n  \n -or-  \n  \n <xref href=\"System.Threading.CountdownEvent.CurrentCount\"></xref> is equal to or greater than <xref href=\"System.Int32.MaxValue\"></xref>."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CountdownEvent.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.CountdownEvent.AddCount(System.Int32)
  commentId: M:System.Threading.CountdownEvent.AddCount(System.Int32)
  id: AddCount(System.Int32)
  parent: System.Threading.CountdownEvent
  langs:
  - csharp
  name: AddCount(Int32)
  nameWithType: CountdownEvent.AddCount(Int32)
  fullName: CountdownEvent.AddCount(Int32)
  type: Method
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: Increments the <xref href="System.Threading.CountdownEvent"></xref>'s current count by a specified value.
  syntax:
    content: public void AddCount (int signalCount);
    parameters:
    - id: signalCount
      type: System.Int32
      description: The value by which to increase <xref href="System.Threading.CountdownEvent.CurrentCount"></xref>.
  overload: System.Threading.CountdownEvent.AddCount*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The current instance has already been disposed.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>signalCount</code> is less than or equal to 0.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The current instance is already set.  \n  \n -or-  \n  \n <xref href=\"System.Threading.CountdownEvent.CurrentCount\"></xref> is equal to or greater than <xref href=\"System.Int32.MaxValue\"></xref> after count is incremented by <code>signalCount.</code>"
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CountdownEvent.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.CountdownEvent.CurrentCount
  commentId: P:System.Threading.CountdownEvent.CurrentCount
  id: CurrentCount
  parent: System.Threading.CountdownEvent
  langs:
  - csharp
  name: CurrentCount
  nameWithType: CountdownEvent.CurrentCount
  fullName: CountdownEvent.CurrentCount
  type: Property
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: Gets the number of remaining signals required to set the event.
  syntax:
    content: public int CurrentCount { get; }
    return:
      type: System.Int32
      description: The number of remaining signals required to set the event.
  overload: System.Threading.CountdownEvent.CurrentCount*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CountdownEvent.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.CountdownEvent.Dispose
  commentId: M:System.Threading.CountdownEvent.Dispose
  id: Dispose
  parent: System.Threading.CountdownEvent
  langs:
  - csharp
  name: Dispose()
  nameWithType: CountdownEvent.Dispose()
  fullName: CountdownEvent.Dispose()
  type: Method
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: Releases all resources used by the current instance of the <xref href="System.Threading.CountdownEvent"></xref> class.
  remarks: "Call `Dispose` when you are finished using the <xref:System.Threading.CountdownEvent>. The `Dispose` method leaves the <xref:System.Threading.CountdownEvent> in an unusable state. After calling `Dispose`, you must release all references to the <xref:System.Threading.CountdownEvent> so the garbage collector can reclaim the memory that the <xref:System.Threading.CountdownEvent> was occupying.  \n  \n For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  \n  \n> [!NOTE]\n>  Always call `Dispose` before you release your last reference to the <xref:System.Threading.CountdownEvent>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Threading.CountdownEvent> object's `Finalize` method."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Threading.CountdownEvent.Dispose*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CountdownEvent.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.CountdownEvent.Dispose(System.Boolean)
  commentId: M:System.Threading.CountdownEvent.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Threading.CountdownEvent
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: CountdownEvent.Dispose(Boolean)
  fullName: CountdownEvent.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: Releases the unmanaged resources used by the <xref href="System.Threading.CountdownEvent"></xref>, and optionally releases the managed resources.
  remarks: Unlike most of the members of <xref:System.Threading.CountdownEvent>, <xref:System.Threading.CountdownEvent.Dispose%2A> is not thread-safe and may not be used concurrently with other members of this instance.
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: true to release both managed and unmanaged resources; false to release only unmanaged resources.
  overload: System.Threading.CountdownEvent.Dispose*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CountdownEvent.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.CountdownEvent.InitialCount
  commentId: P:System.Threading.CountdownEvent.InitialCount
  id: InitialCount
  parent: System.Threading.CountdownEvent
  langs:
  - csharp
  name: InitialCount
  nameWithType: CountdownEvent.InitialCount
  fullName: CountdownEvent.InitialCount
  type: Property
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: Gets the numbers of signals initially required to set the event.
  syntax:
    content: public int InitialCount { get; }
    return:
      type: System.Int32
      description: The number of signals initially required to set the event.
  overload: System.Threading.CountdownEvent.InitialCount*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CountdownEvent.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.CountdownEvent.IsSet
  commentId: P:System.Threading.CountdownEvent.IsSet
  id: IsSet
  parent: System.Threading.CountdownEvent
  langs:
  - csharp
  name: IsSet
  nameWithType: CountdownEvent.IsSet
  fullName: CountdownEvent.IsSet
  type: Property
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: Indicates whether the <xref href="System.Threading.CountdownEvent"></xref> object's current count has reached zero..
  remarks: The <xref:System.Threading.CountdownEvent> does not raise an event when the countdown has reached zero. Instead, the <xref:System.Threading.CountdownEvent.CurrentCount%2A> property equals zero, and the <xref:System.Threading.CountdownEvent.IsSet%2A> property equals `true`.
  syntax:
    content: public bool IsSet { get; }
    return:
      type: System.Boolean
      description: '`true` if the current count is zero; otherwise, `false`.'
  overload: System.Threading.CountdownEvent.IsSet*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CountdownEvent.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.CountdownEvent.Reset
  commentId: M:System.Threading.CountdownEvent.Reset
  id: Reset
  parent: System.Threading.CountdownEvent
  langs:
  - csharp
  name: Reset()
  nameWithType: CountdownEvent.Reset()
  fullName: CountdownEvent.Reset()
  type: Method
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: Resets the <xref href="System.Threading.CountdownEvent.CurrentCount"></xref> to the value of <xref href="System.Threading.CountdownEvent.InitialCount"></xref>.
  remarks: Unlike most of the members of <xref:System.Threading.CountdownEvent>, Reset is not thread-safe and may not be used concurrently with other members of this instance.
  syntax:
    content: public void Reset ();
    parameters: []
  overload: System.Threading.CountdownEvent.Reset*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The current instance has already been disposed..
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CountdownEvent.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.CountdownEvent.Reset(System.Int32)
  commentId: M:System.Threading.CountdownEvent.Reset(System.Int32)
  id: Reset(System.Int32)
  parent: System.Threading.CountdownEvent
  langs:
  - csharp
  name: Reset(Int32)
  nameWithType: CountdownEvent.Reset(Int32)
  fullName: CountdownEvent.Reset(Int32)
  type: Method
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: Resets the <xref href="System.Threading.CountdownEvent.InitialCount"></xref> property to a specified value.
  remarks: This method resets <xref:System.Threading.CountdownEvent.InitialCount%2A> for all subsequent accesses of the property on the current instance. Unlike most of the members of <xref:System.Threading.CountdownEvent>, Reset is not thread-safe and may not be used concurrently with other members of this instance.
  syntax:
    content: public void Reset (int count);
    parameters:
    - id: count
      type: System.Int32
      description: The number of signals required to set the <xref href="System.Threading.CountdownEvent"></xref>.
  overload: System.Threading.CountdownEvent.Reset*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The current instance has alread been disposed.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>count</code> is less than 0.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CountdownEvent.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.CountdownEvent.Signal(System.Int32)
  commentId: M:System.Threading.CountdownEvent.Signal(System.Int32)
  id: Signal(System.Int32)
  parent: System.Threading.CountdownEvent
  langs:
  - csharp
  name: Signal(Int32)
  nameWithType: CountdownEvent.Signal(Int32)
  fullName: CountdownEvent.Signal(Int32)
  type: Method
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: Registers multiple signals with the <xref href="System.Threading.CountdownEvent"></xref>, decrementing the value of <xref href="System.Threading.CountdownEvent.CurrentCount"></xref> by the specified amount.
  syntax:
    content: public bool Signal (int signalCount);
    parameters:
    - id: signalCount
      type: System.Int32
      description: The number of signals to register.
    return:
      type: System.Boolean
      description: true if the signals caused the count to reach zero and the event was set; otherwise, false.
  overload: System.Threading.CountdownEvent.Signal*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The current instance has already been disposed.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>signalCount</code> is less than 1.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The current instance is already set. -or- Or <code>signalCount</code> is greater than <xref href="System.Threading.CountdownEvent.CurrentCount"></xref>.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CountdownEvent.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.CountdownEvent.Signal
  commentId: M:System.Threading.CountdownEvent.Signal
  id: Signal
  parent: System.Threading.CountdownEvent
  langs:
  - csharp
  name: Signal()
  nameWithType: CountdownEvent.Signal()
  fullName: CountdownEvent.Signal()
  type: Method
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: Registers a signal with the <xref href="System.Threading.CountdownEvent"></xref>, decrementing the value of <xref href="System.Threading.CountdownEvent.CurrentCount"></xref>.
  syntax:
    content: public bool Signal ();
    parameters: []
    return:
      type: System.Boolean
      description: true if the signal caused the count to reach zero and the event was set; otherwise, false.
  overload: System.Threading.CountdownEvent.Signal*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The current instance has already been disposed.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The current instance is already set.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CountdownEvent.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.CountdownEvent.TryAddCount
  commentId: M:System.Threading.CountdownEvent.TryAddCount
  id: TryAddCount
  parent: System.Threading.CountdownEvent
  langs:
  - csharp
  name: TryAddCount()
  nameWithType: CountdownEvent.TryAddCount()
  fullName: CountdownEvent.TryAddCount()
  type: Method
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: Attempts to increment <xref href="System.Threading.CountdownEvent.CurrentCount"></xref> by one.
  syntax:
    content: public bool TryAddCount ();
    parameters: []
    return:
      type: System.Boolean
      description: true if the increment succeeded; otherwise, false. If <xref href="System.Threading.CountdownEvent.CurrentCount"></xref> is already at zero, this method will return false.
  overload: System.Threading.CountdownEvent.TryAddCount*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The current instance has already been disposed.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <xref href="System.Threading.CountdownEvent.CurrentCount"></xref> is equal to <xref href="System.Int32.MaxValue"></xref>.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CountdownEvent.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.CountdownEvent.TryAddCount(System.Int32)
  commentId: M:System.Threading.CountdownEvent.TryAddCount(System.Int32)
  id: TryAddCount(System.Int32)
  parent: System.Threading.CountdownEvent
  langs:
  - csharp
  name: TryAddCount(Int32)
  nameWithType: CountdownEvent.TryAddCount(Int32)
  fullName: CountdownEvent.TryAddCount(Int32)
  type: Method
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: Attempts to increment <xref href="System.Threading.CountdownEvent.CurrentCount"></xref> by a specified value.
  syntax:
    content: public bool TryAddCount (int signalCount);
    parameters:
    - id: signalCount
      type: System.Int32
      description: The value by which to increase <xref href="System.Threading.CountdownEvent.CurrentCount"></xref>.
    return:
      type: System.Boolean
      description: true if the increment succeeded; otherwise, false. If <xref href="System.Threading.CountdownEvent.CurrentCount"></xref> is already at zero this will return false.
  overload: System.Threading.CountdownEvent.TryAddCount*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The current instance has already been disposed.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>signalCount</code> is less than or equal to 0.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The current instance is already set.  \n  \n -or-  \n  \n <xref href=\"System.Threading.CountdownEvent.CurrentCount\"></xref> + <code>signalCount</code> is equal to or greater than <xref href=\"System.Int32.MaxValue\"></xref>."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CountdownEvent.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.CountdownEvent.Wait
  commentId: M:System.Threading.CountdownEvent.Wait
  id: Wait
  parent: System.Threading.CountdownEvent
  langs:
  - csharp
  name: Wait()
  nameWithType: CountdownEvent.Wait()
  fullName: CountdownEvent.Wait()
  type: Method
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: Blocks the current thread until the <xref href="System.Threading.CountdownEvent"></xref> is set.
  remarks: The caller of this method blocks indefinitely until the current instance is set. The caller will return immediately if the event is currently in a set state.
  syntax:
    content: public void Wait ();
    parameters: []
  overload: System.Threading.CountdownEvent.Wait*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The current instance has already been disposed.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CountdownEvent.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.CountdownEvent.Wait(System.Int32)
  commentId: M:System.Threading.CountdownEvent.Wait(System.Int32)
  id: Wait(System.Int32)
  parent: System.Threading.CountdownEvent
  langs:
  - csharp
  name: Wait(Int32)
  nameWithType: CountdownEvent.Wait(Int32)
  fullName: CountdownEvent.Wait(Int32)
  type: Method
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: Blocks the current thread until the <xref href="System.Threading.CountdownEvent"></xref> is set, using a 32-bit signed integer to measure the timeout.
  syntax:
    content: public bool Wait (int millisecondsTimeout);
    parameters:
    - id: millisecondsTimeout
      type: System.Int32
      description: The number of milliseconds to wait, or <xref href="System.Threading.Timeout.Infinite"></xref>(-1) to wait indefinitely.
    return:
      type: System.Boolean
      description: true if the <xref href="System.Threading.CountdownEvent"></xref> was set; otherwise, false.
  overload: System.Threading.CountdownEvent.Wait*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The current instance has already been disposed.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>millisecondsTimeout</code> is a negative number other than -1, which represents an infinite time-out.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CountdownEvent.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.CountdownEvent.Wait(System.Threading.CancellationToken)
  commentId: M:System.Threading.CountdownEvent.Wait(System.Threading.CancellationToken)
  id: Wait(System.Threading.CancellationToken)
  parent: System.Threading.CountdownEvent
  langs:
  - csharp
  name: Wait(CancellationToken)
  nameWithType: CountdownEvent.Wait(CancellationToken)
  fullName: CountdownEvent.Wait(CancellationToken)
  type: Method
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: Blocks the current thread until the <xref href="System.Threading.CountdownEvent"></xref> is set, while observing a <xref href="System.Threading.CancellationToken"></xref>.
  remarks: The caller of this method blocks indefinitely until the current instance is set. The caller will return immediately if the event is currently in a set state. If the <xref:System.Threading.CancellationToken> being observed is canceled during the wait operation, an <xref:System.OperationCanceledException> will be thrown.
  syntax:
    content: public void Wait (System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The <xref href="System.Threading.CancellationToken"></xref> to observe.
  overload: System.Threading.CountdownEvent.Wait*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: <code>cancellationToken</code> has been canceled.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The current instance has already been disposed. -or- The <xref href="System.Threading.CancellationTokenSource"></xref> that created <code>cancellationToken</code> has already been disposed.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CountdownEvent.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.CountdownEvent.Wait(System.TimeSpan)
  commentId: M:System.Threading.CountdownEvent.Wait(System.TimeSpan)
  id: Wait(System.TimeSpan)
  parent: System.Threading.CountdownEvent
  langs:
  - csharp
  name: Wait(TimeSpan)
  nameWithType: CountdownEvent.Wait(TimeSpan)
  fullName: CountdownEvent.Wait(TimeSpan)
  type: Method
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: Blocks the current thread until the <xref href="System.Threading.CountdownEvent"></xref> is set, using a <xref href="System.TimeSpan"></xref> to measure the timeout.
  syntax:
    content: public bool Wait (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: A <xref href="System.TimeSpan"></xref> that represents the number of milliseconds to wait, or a <xref href="System.TimeSpan"></xref> that represents -1 milliseconds to wait indefinitely.
    return:
      type: System.Boolean
      description: true if the <xref href="System.Threading.CountdownEvent"></xref> was set; otherwise, false.
  overload: System.Threading.CountdownEvent.Wait*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The current instance has already been disposed.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>timeout</code> is a negative number other than -1 milliseconds, which represents an infinite time-out -or- timeout is greater than <xref href="System.Int32.MaxValue"></xref>.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CountdownEvent.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.CountdownEvent.Wait(System.Int32,System.Threading.CancellationToken)
  commentId: M:System.Threading.CountdownEvent.Wait(System.Int32,System.Threading.CancellationToken)
  id: Wait(System.Int32,System.Threading.CancellationToken)
  parent: System.Threading.CountdownEvent
  langs:
  - csharp
  name: Wait(Int32, CancellationToken)
  nameWithType: CountdownEvent.Wait(Int32, CancellationToken)
  fullName: CountdownEvent.Wait(Int32, CancellationToken)
  type: Method
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: Blocks the current thread until the <xref href="System.Threading.CountdownEvent"></xref> is set, using a 32-bit signed integer to measure the timeout, while observing a <xref href="System.Threading.CancellationToken"></xref>.
  syntax:
    content: public bool Wait (int millisecondsTimeout, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: millisecondsTimeout
      type: System.Int32
      description: The number of milliseconds to wait, or <xref href="System.Threading.Timeout.Infinite"></xref>(-1) to wait indefinitely.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The <xref href="System.Threading.CancellationToken"></xref> to observe.
    return:
      type: System.Boolean
      description: true if the <xref href="System.Threading.CountdownEvent"></xref> was set; otherwise, false.
  overload: System.Threading.CountdownEvent.Wait*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: <code>cancellationToken</code> has been canceled.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The current instance has already been disposed. -or- The <xref href="System.Threading.CancellationTokenSource"></xref> that created <code>cancellationToken</code> has already been disposed.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>millisecondsTimeout</code> is a negative number other than -1, which represents an infinite time-out.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CountdownEvent.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.CountdownEvent.Wait(System.TimeSpan,System.Threading.CancellationToken)
  commentId: M:System.Threading.CountdownEvent.Wait(System.TimeSpan,System.Threading.CancellationToken)
  id: Wait(System.TimeSpan,System.Threading.CancellationToken)
  parent: System.Threading.CountdownEvent
  langs:
  - csharp
  name: Wait(TimeSpan, CancellationToken)
  nameWithType: CountdownEvent.Wait(TimeSpan, CancellationToken)
  fullName: CountdownEvent.Wait(TimeSpan, CancellationToken)
  type: Method
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: Blocks the current thread until the <xref href="System.Threading.CountdownEvent"></xref> is set, using a <xref href="System.TimeSpan"></xref> to measure the timeout, while observing a <xref href="System.Threading.CancellationToken"></xref>.
  syntax:
    content: public bool Wait (TimeSpan timeout, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: A <xref href="System.TimeSpan"></xref> that represents the number of milliseconds to wait, or a <xref href="System.TimeSpan"></xref> that represents -1 milliseconds to wait indefinitely.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The <xref href="System.Threading.CancellationToken"></xref> to observe.
    return:
      type: System.Boolean
      description: true if the <xref href="System.Threading.CountdownEvent"></xref> was set; otherwise, false.
  overload: System.Threading.CountdownEvent.Wait*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: <code>cancellationToken</code> has been canceled.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The current instance has already been disposed. -or- The <xref href="System.Threading.CancellationTokenSource"></xref> that created <code>cancellationToken</code> has already been disposed.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>timeout</code> is a negative number other than -1 milliseconds, which represents an infinite time-out -or- timeout is greater than <xref href="System.Int32.MaxValue"></xref>.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CountdownEvent.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.CountdownEvent.WaitHandle
  commentId: P:System.Threading.CountdownEvent.WaitHandle
  id: WaitHandle
  parent: System.Threading.CountdownEvent
  langs:
  - csharp
  name: WaitHandle
  nameWithType: CountdownEvent.WaitHandle
  fullName: CountdownEvent.WaitHandle
  type: Property
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: Gets a <xref href="System.Threading.WaitHandle"></xref> that is used to wait for the event to be set.
  remarks: <xref:System.Threading.CountdownEvent.WaitHandle%2A> should only be used if it's needed for integration with code bases that rely on having a WaitHandle. If all that's needed is to wait for the <xref:System.Threading.CountdownEvent> to be set, the <xref:System.Threading.CountdownEvent.Wait%2A> method should be preferred.
  syntax:
    content: public System.Threading.WaitHandle WaitHandle { get; }
    return:
      type: System.Threading.WaitHandle
      description: A <xref href="System.Threading.WaitHandle"></xref> that is used to wait for the event to be set.
  overload: System.Threading.CountdownEvent.WaitHandle*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The current instance has already been disposed.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CountdownEvent.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ArgumentOutOfRangeException
  parent: System
  isExternal: false
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.ObjectDisposedException
  parent: System
  isExternal: false
  name: ObjectDisposedException
  nameWithType: ObjectDisposedException
  fullName: System.ObjectDisposedException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.OperationCanceledException
  parent: System
  isExternal: false
  name: OperationCanceledException
  nameWithType: OperationCanceledException
  fullName: System.OperationCanceledException
- uid: System.Threading.CountdownEvent.#ctor(System.Int32)
  parent: System.Threading.CountdownEvent
  isExternal: false
  name: CountdownEvent(Int32)
  nameWithType: CountdownEvent.CountdownEvent(Int32)
  fullName: CountdownEvent.CountdownEvent(Int32)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.CountdownEvent.AddCount
  parent: System.Threading.CountdownEvent
  isExternal: false
  name: AddCount()
  nameWithType: CountdownEvent.AddCount()
  fullName: CountdownEvent.AddCount()
- uid: System.Threading.CountdownEvent.AddCount(System.Int32)
  parent: System.Threading.CountdownEvent
  isExternal: false
  name: AddCount(Int32)
  nameWithType: CountdownEvent.AddCount(Int32)
  fullName: CountdownEvent.AddCount(Int32)
- uid: System.Threading.CountdownEvent.CurrentCount
  parent: System.Threading.CountdownEvent
  isExternal: false
  name: CurrentCount
  nameWithType: CountdownEvent.CurrentCount
  fullName: CountdownEvent.CurrentCount
- uid: System.Threading.CountdownEvent.Dispose
  parent: System.Threading.CountdownEvent
  isExternal: false
  name: Dispose()
  nameWithType: CountdownEvent.Dispose()
  fullName: CountdownEvent.Dispose()
- uid: System.Threading.CountdownEvent.Dispose(System.Boolean)
  parent: System.Threading.CountdownEvent
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: CountdownEvent.Dispose(Boolean)
  fullName: CountdownEvent.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Threading.CountdownEvent.InitialCount
  parent: System.Threading.CountdownEvent
  isExternal: false
  name: InitialCount
  nameWithType: CountdownEvent.InitialCount
  fullName: CountdownEvent.InitialCount
- uid: System.Threading.CountdownEvent.IsSet
  parent: System.Threading.CountdownEvent
  isExternal: false
  name: IsSet
  nameWithType: CountdownEvent.IsSet
  fullName: CountdownEvent.IsSet
- uid: System.Threading.CountdownEvent.Reset
  parent: System.Threading.CountdownEvent
  isExternal: false
  name: Reset()
  nameWithType: CountdownEvent.Reset()
  fullName: CountdownEvent.Reset()
- uid: System.Threading.CountdownEvent.Reset(System.Int32)
  parent: System.Threading.CountdownEvent
  isExternal: false
  name: Reset(Int32)
  nameWithType: CountdownEvent.Reset(Int32)
  fullName: CountdownEvent.Reset(Int32)
- uid: System.Threading.CountdownEvent.Signal(System.Int32)
  parent: System.Threading.CountdownEvent
  isExternal: false
  name: Signal(Int32)
  nameWithType: CountdownEvent.Signal(Int32)
  fullName: CountdownEvent.Signal(Int32)
- uid: System.Threading.CountdownEvent.Signal
  parent: System.Threading.CountdownEvent
  isExternal: false
  name: Signal()
  nameWithType: CountdownEvent.Signal()
  fullName: CountdownEvent.Signal()
- uid: System.Threading.CountdownEvent.TryAddCount
  parent: System.Threading.CountdownEvent
  isExternal: false
  name: TryAddCount()
  nameWithType: CountdownEvent.TryAddCount()
  fullName: CountdownEvent.TryAddCount()
- uid: System.Threading.CountdownEvent.TryAddCount(System.Int32)
  parent: System.Threading.CountdownEvent
  isExternal: false
  name: TryAddCount(Int32)
  nameWithType: CountdownEvent.TryAddCount(Int32)
  fullName: CountdownEvent.TryAddCount(Int32)
- uid: System.Threading.CountdownEvent.Wait
  parent: System.Threading.CountdownEvent
  isExternal: false
  name: Wait()
  nameWithType: CountdownEvent.Wait()
  fullName: CountdownEvent.Wait()
- uid: System.Threading.CountdownEvent.Wait(System.Int32)
  parent: System.Threading.CountdownEvent
  isExternal: false
  name: Wait(Int32)
  nameWithType: CountdownEvent.Wait(Int32)
  fullName: CountdownEvent.Wait(Int32)
- uid: System.Threading.CountdownEvent.Wait(System.Threading.CancellationToken)
  parent: System.Threading.CountdownEvent
  isExternal: false
  name: Wait(CancellationToken)
  nameWithType: CountdownEvent.Wait(CancellationToken)
  fullName: CountdownEvent.Wait(CancellationToken)
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: false
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.CountdownEvent.Wait(System.TimeSpan)
  parent: System.Threading.CountdownEvent
  isExternal: false
  name: Wait(TimeSpan)
  nameWithType: CountdownEvent.Wait(TimeSpan)
  fullName: CountdownEvent.Wait(TimeSpan)
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Threading.CountdownEvent.Wait(System.Int32,System.Threading.CancellationToken)
  parent: System.Threading.CountdownEvent
  isExternal: false
  name: Wait(Int32, CancellationToken)
  nameWithType: CountdownEvent.Wait(Int32, CancellationToken)
  fullName: CountdownEvent.Wait(Int32, CancellationToken)
- uid: System.Threading.CountdownEvent.Wait(System.TimeSpan,System.Threading.CancellationToken)
  parent: System.Threading.CountdownEvent
  isExternal: false
  name: Wait(TimeSpan, CancellationToken)
  nameWithType: CountdownEvent.Wait(TimeSpan, CancellationToken)
  fullName: CountdownEvent.Wait(TimeSpan, CancellationToken)
- uid: System.Threading.CountdownEvent.WaitHandle
  parent: System.Threading.CountdownEvent
  isExternal: false
  name: WaitHandle
  nameWithType: CountdownEvent.WaitHandle
  fullName: CountdownEvent.WaitHandle
- uid: System.Threading.WaitHandle
  parent: System.Threading
  isExternal: false
  name: WaitHandle
  nameWithType: WaitHandle
  fullName: System.Threading.WaitHandle
- uid: System.Threading.CountdownEvent.#ctor*
  parent: System.Threading.CountdownEvent
  isExternal: false
  name: CountdownEvent
  nameWithType: CountdownEvent.CountdownEvent
  fullName: CountdownEvent.CountdownEvent
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CountdownEvent.xml
- uid: System.Threading.CountdownEvent.AddCount*
  parent: System.Threading.CountdownEvent
  isExternal: false
  name: AddCount
  nameWithType: CountdownEvent.AddCount
  fullName: CountdownEvent.AddCount
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CountdownEvent.xml
- uid: System.Threading.CountdownEvent.CurrentCount*
  parent: System.Threading.CountdownEvent
  isExternal: false
  name: CurrentCount
  nameWithType: CountdownEvent.CurrentCount
  fullName: CountdownEvent.CurrentCount
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CountdownEvent.xml
- uid: System.Threading.CountdownEvent.Dispose*
  parent: System.Threading.CountdownEvent
  isExternal: false
  name: Dispose
  nameWithType: CountdownEvent.Dispose
  fullName: CountdownEvent.Dispose
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CountdownEvent.xml
- uid: System.Threading.CountdownEvent.InitialCount*
  parent: System.Threading.CountdownEvent
  isExternal: false
  name: InitialCount
  nameWithType: CountdownEvent.InitialCount
  fullName: CountdownEvent.InitialCount
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CountdownEvent.xml
- uid: System.Threading.CountdownEvent.IsSet*
  parent: System.Threading.CountdownEvent
  isExternal: false
  name: IsSet
  nameWithType: CountdownEvent.IsSet
  fullName: CountdownEvent.IsSet
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CountdownEvent.xml
- uid: System.Threading.CountdownEvent.Reset*
  parent: System.Threading.CountdownEvent
  isExternal: false
  name: Reset
  nameWithType: CountdownEvent.Reset
  fullName: CountdownEvent.Reset
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CountdownEvent.xml
- uid: System.Threading.CountdownEvent.Signal*
  parent: System.Threading.CountdownEvent
  isExternal: false
  name: Signal
  nameWithType: CountdownEvent.Signal
  fullName: CountdownEvent.Signal
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CountdownEvent.xml
- uid: System.Threading.CountdownEvent.TryAddCount*
  parent: System.Threading.CountdownEvent
  isExternal: false
  name: TryAddCount
  nameWithType: CountdownEvent.TryAddCount
  fullName: CountdownEvent.TryAddCount
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CountdownEvent.xml
- uid: System.Threading.CountdownEvent.Wait*
  parent: System.Threading.CountdownEvent
  isExternal: false
  name: Wait
  nameWithType: CountdownEvent.Wait
  fullName: CountdownEvent.Wait
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CountdownEvent.xml
- uid: System.Threading.CountdownEvent.WaitHandle*
  parent: System.Threading.CountdownEvent
  isExternal: false
  name: WaitHandle
  nameWithType: CountdownEvent.WaitHandle
  fullName: CountdownEvent.WaitHandle
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CountdownEvent.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.IDisposable
  parent: System
  isExternal: false
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
