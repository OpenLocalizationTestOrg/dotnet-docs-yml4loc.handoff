### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.UIPermission
  commentId: T:System.Security.Permissions.UIPermission
  id: UIPermission
  children:
  - System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.UIPermissionClipboard)
  - System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.UIPermissionWindow)
  - System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.UIPermissionWindow,System.Security.Permissions.UIPermissionClipboard)
  - System.Security.Permissions.UIPermission.Clipboard
  - System.Security.Permissions.UIPermission.Copy
  - System.Security.Permissions.UIPermission.FromXml(System.Security.SecurityElement)
  - System.Security.Permissions.UIPermission.Intersect(System.Security.IPermission)
  - System.Security.Permissions.UIPermission.IsSubsetOf(System.Security.IPermission)
  - System.Security.Permissions.UIPermission.IsUnrestricted
  - System.Security.Permissions.UIPermission.ToXml
  - System.Security.Permissions.UIPermission.Union(System.Security.IPermission)
  - System.Security.Permissions.UIPermission.Window
  langs:
  - csharp
  name: UIPermission
  nameWithType: UIPermission
  fullName: System.Security.Permissions.UIPermission
  type: Class
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Controls the permissions related to user interfaces and the Clipboard. This class cannot be inherited.
  remarks: "Drawing and user input events in windows are user interfaces.  \n  \n The permission to use windows can be one of the following: unrestricted, limited to <xref:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows>, only <xref:System.Security.Permissions.UIPermissionWindow.SafeSubWindows>, or no window drawing or user input event access allowed. <xref:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows> and <xref:System.Security.Permissions.UIPermissionWindow.SafeSubWindows> are restricted in title and size to prevent possible spoofing by potentially harmful code.  \n  \n The permission to use the Clipboard can be one of the following: unrestricted, write-only, or no Clipboard access allowed. The paste limitation prevents potentially harmful applications from taking data from the Clipboard without the user's consent, while still allowing the cut, copy, and paste operations when initiated by the user through keyboard commands."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class UIPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements:
  - System.Security.Permissions.IUnrestrictedPermission
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.System#Security#IPermission#Demand
  - System.Security.CodeAccessPermission.System#Security#IStackWalk#Assert
  - System.Security.CodeAccessPermission.System#Security#IStackWalk#Demand
  - System.Security.CodeAccessPermission.System#Security#IStackWalk#Deny
  - System.Security.CodeAccessPermission.System#Security#IStackWalk#PermitOnly
  - System.Security.CodeAccessPermission.ToString
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/UIPermission.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.PermissionState)
  commentId: M:System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Security.Permissions.UIPermission
  langs:
  - csharp
  name: UIPermission(PermissionState)
  nameWithType: UIPermission.UIPermission(PermissionState)
  fullName: UIPermission.UIPermission(PermissionState)
  type: Constructor
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Initializes a new instance of the <xref href="System.Security.Permissions.UIPermission"></xref> class with either fully restricted or unrestricted access, as specified.
  remarks: This constructor creates either the fully restricted (`None`) or the `Unrestricted` form of the permission.
  example:
  - "The following code example shows the use of the <xref:System.Security.Permissions.UIPermission.%23ctor%2A> constructor. This example is part of a larger example provided for the <xref:System.Security.Permissions.UIPermission> class.  \n  \n [!code-cpp[System.Security.Permissions.UIPermission#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/CPP/uipermission.cpp#7)]\n [!code-csharp[System.Security.Permissions.UIPermission#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/CS/uipermission.cs#7)]\n [!code-vb[System.Security.Permissions.UIPermission#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/VB/uipermission.vb#7)]"
  syntax:
    content: public UIPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: One of the enumeration values.
  overload: System.Security.Permissions.UIPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The <code>state</code> parameter is not a valid <xref href="System.Security.Permissions.PermissionState"></xref>.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/UIPermission.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.UIPermissionClipboard)
  commentId: M:System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.UIPermissionClipboard)
  id: '#ctor(System.Security.Permissions.UIPermissionClipboard)'
  parent: System.Security.Permissions.UIPermission
  langs:
  - csharp
  name: UIPermission(UIPermissionClipboard)
  nameWithType: UIPermission.UIPermission(UIPermissionClipboard)
  fullName: UIPermission.UIPermission(UIPermissionClipboard)
  type: Constructor
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Initializes a new instance of the <xref href="System.Security.Permissions.UIPermission"></xref> class with the permissions for the Clipboard, and no access to windows.
  remarks: To set both the Clipboard and window permissions, use the constructor that takes parameters for both.
  example:
  - "The following code example shows the use of the <xref:System.Security.Permissions.UIPermission.%23ctor%28System.Security.Permissions.UIPermissionClipboard%29?displayProperty=fullName> constructor. This example is part of a larger example provided for the <xref:System.Security.Permissions.UIPermission> class.  \n  \n [!code-cpp[System.Security.Permissions.UIPermission#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/CPP/uipermission.cpp#9)]\n [!code-csharp[System.Security.Permissions.UIPermission#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/CS/uipermission.cs#9)]\n [!code-vb[System.Security.Permissions.UIPermission#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/VB/uipermission.vb#9)]"
  syntax:
    content: public UIPermission (System.Security.Permissions.UIPermissionClipboard clipboardFlag);
    parameters:
    - id: clipboardFlag
      type: System.Security.Permissions.UIPermissionClipboard
      description: One of the enumeration values.
  overload: System.Security.Permissions.UIPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The <code>clipboardFlag</code> parameter is not a valid <xref href="System.Security.Permissions.UIPermissionClipboard"></xref> value.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/UIPermission.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.UIPermissionWindow)
  commentId: M:System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.UIPermissionWindow)
  id: '#ctor(System.Security.Permissions.UIPermissionWindow)'
  parent: System.Security.Permissions.UIPermission
  langs:
  - csharp
  name: UIPermission(UIPermissionWindow)
  nameWithType: UIPermission.UIPermission(UIPermissionWindow)
  fullName: UIPermission.UIPermission(UIPermissionWindow)
  type: Constructor
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Initializes a new instance of the <xref href="System.Security.Permissions.UIPermission"></xref> class with the permissions for windows, and no access to the Clipboard.
  remarks: To set both the Clipboard and window permissions, use the constructor that takes parameters for both.
  example:
  - "The following code example shows the use of the <xref:System.Security.Permissions.UIPermission.%23ctor%28System.Security.Permissions.UIPermissionWindow%29?displayProperty=fullName> constructor. This example is part of a larger example provided for the <xref:System.Security.Permissions.UIPermission> class.  \n  \n [!code-cpp[System.Security.Permissions.UIPermission#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/CPP/uipermission.cpp#8)]\n [!code-csharp[System.Security.Permissions.UIPermission#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/CS/uipermission.cs#8)]\n [!code-vb[System.Security.Permissions.UIPermission#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/VB/uipermission.vb#8)]"
  syntax:
    content: public UIPermission (System.Security.Permissions.UIPermissionWindow windowFlag);
    parameters:
    - id: windowFlag
      type: System.Security.Permissions.UIPermissionWindow
      description: One of the enumeration values.
  overload: System.Security.Permissions.UIPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The <code>windowFlag</code> parameter is not a valid <xref href="System.Security.Permissions.UIPermissionWindow"></xref> value.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/UIPermission.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.UIPermissionWindow,System.Security.Permissions.UIPermissionClipboard)
  commentId: M:System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.UIPermissionWindow,System.Security.Permissions.UIPermissionClipboard)
  id: '#ctor(System.Security.Permissions.UIPermissionWindow,System.Security.Permissions.UIPermissionClipboard)'
  parent: System.Security.Permissions.UIPermission
  langs:
  - csharp
  name: UIPermission(UIPermissionWindow, UIPermissionClipboard)
  nameWithType: UIPermission.UIPermission(UIPermissionWindow, UIPermissionClipboard)
  fullName: UIPermission.UIPermission(UIPermissionWindow, UIPermissionClipboard)
  type: Constructor
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Initializes a new instance of the <xref href="System.Security.Permissions.UIPermission"></xref> class with the specified permissions for windows and the Clipboard.
  remarks: ''
  example:
  - "The following code example shows the use of the <xref:System.Security.Permissions.UIPermission.%23ctor%28System.Security.Permissions.UIPermissionWindow%2CSystem.Security.Permissions.UIPermissionClipboard%29?displayProperty=fullName> constructor. This example is part of a larger example provided for the <xref:System.Security.Permissions.UIPermission> class.  \n  \n [!code-cpp[System.Security.Permissions.UIPermission#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/CPP/uipermission.cpp#10)]\n [!code-csharp[System.Security.Permissions.UIPermission#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/CS/uipermission.cs#10)]\n [!code-vb[System.Security.Permissions.UIPermission#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/VB/uipermission.vb#10)]"
  syntax:
    content: public UIPermission (System.Security.Permissions.UIPermissionWindow windowFlag, System.Security.Permissions.UIPermissionClipboard clipboardFlag);
    parameters:
    - id: windowFlag
      type: System.Security.Permissions.UIPermissionWindow
      description: One of the enumeration values.
    - id: clipboardFlag
      type: System.Security.Permissions.UIPermissionClipboard
      description: One of the enumeration values.
  overload: System.Security.Permissions.UIPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>windowFlag</code> parameter is not a valid <xref href=\"System.Security.Permissions.UIPermissionWindow\"></xref> value.  \n  \n -or-  \n  \n The <code>clipboardFlag</code> parameter is not a valid <xref href=\"System.Security.Permissions.UIPermissionClipboard\"></xref> value."
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/UIPermission.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.UIPermission.Clipboard
  commentId: P:System.Security.Permissions.UIPermission.Clipboard
  id: Clipboard
  parent: System.Security.Permissions.UIPermission
  langs:
  - csharp
  name: Clipboard
  nameWithType: UIPermission.Clipboard
  fullName: UIPermission.Clipboard
  type: Property
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Gets or sets the Clipboard access represented by the permission.
  syntax:
    content: public System.Security.Permissions.UIPermissionClipboard Clipboard { get; set; }
    return:
      type: System.Security.Permissions.UIPermissionClipboard
      description: One of the <xref href="System.Security.Permissions.UIPermissionClipboard"></xref> values.
  overload: System.Security.Permissions.UIPermission.Clipboard*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/UIPermission.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.UIPermission.Copy
  commentId: M:System.Security.Permissions.UIPermission.Copy
  id: Copy
  parent: System.Security.Permissions.UIPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: UIPermission.Copy()
  fullName: UIPermission.Copy()
  type: Method
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Creates and returns an identical copy of the current permission.
  remarks: A copy of the permission represents the same access to resources as the original permission.
  example:
  - "The following code example shows the behavior of the <xref:System.Security.Permissions.UIPermission.Copy%2A> method. This example is part of a larger example provided for the <xref:System.Security.Permissions.UIPermission> class.  \n  \n> [!NOTE]\n>  The code example is intended to show the behavior of the method, not to demonstrate its use. In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.  \n  \n [!code-cpp[System.Security.Permissions.UIPermission#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/CPP/uipermission.cpp#5)]\n [!code-csharp[System.Security.Permissions.UIPermission#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/CS/uipermission.cs#5)]\n [!code-vb[System.Security.Permissions.UIPermission#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/VB/uipermission.vb#5)]"
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: A copy of the current permission.
  overload: System.Security.Permissions.UIPermission.Copy*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/UIPermission.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.UIPermission.FromXml(System.Security.SecurityElement)
  commentId: M:System.Security.Permissions.UIPermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.UIPermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: UIPermission.FromXml(SecurityElement)
  fullName: UIPermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Reconstructs a permission with a specified state from an XML encoding.
  remarks: ''
  example:
  - "The following code example shows the behavior of the <xref:System.Security.Permissions.UIPermission.FromXml%2A> method. This example is part of a larger example provided for the <xref:System.Security.Permissions.UIPermission> class.  \n  \n> [!NOTE]\n>  The code example is intended to show the behavior of the method, not to demonstrate its use. In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.  \n  \n [!code-cpp[System.Security.Permissions.UIPermission#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/CPP/uipermission.cpp#6)]\n [!code-csharp[System.Security.Permissions.UIPermission#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/CS/uipermission.cs#6)]\n [!code-vb[System.Security.Permissions.UIPermission#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/VB/uipermission.vb#6)]"
  syntax:
    content: public override void FromXml (System.Security.SecurityElement esd);
    parameters:
    - id: esd
      type: System.Security.SecurityElement
      description: The XML encoding used to reconstruct the permission.
  overload: System.Security.Permissions.UIPermission.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>esd</code> parameter is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>esd</code> parameter is not a valid permission element.  \n  \n -or-  \n  \n The <code>esd</code> parameter's version number is not valid."
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/UIPermission.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.UIPermission.Intersect(System.Security.IPermission)
  commentId: M:System.Security.Permissions.UIPermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.UIPermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: UIPermission.Intersect(IPermission)
  fullName: UIPermission.Intersect(IPermission)
  type: Method
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Creates and returns a permission that is the intersection of the current permission and the specified permission.
  remarks: The intersection of two permissions is a permission that describes the set of operations they both describe in common. Specifically, it represents the least permissive values of <xref:System.Security.Permissions.UIPermissionWindow> and <xref:System.Security.Permissions.UIPermissionClipboard> from those in the current permission and the specified permission.
  example:
  - "The following code example shows the behavior of the <xref:System.Security.Permissions.UIPermission.Intersect%2A> method. This example is part of a larger example provided for the <xref:System.Security.Permissions.UIPermission> class.  \n  \n> [!NOTE]\n>  The code example is intended to show the behavior of the method, not to demonstrate its use. In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.  \n  \n [!code-cpp[System.Security.Permissions.UIPermission#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/CPP/uipermission.cpp#4)]\n [!code-csharp[System.Security.Permissions.UIPermission#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/CS/uipermission.cs#4)]\n [!code-vb[System.Security.Permissions.UIPermission#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/VB/uipermission.vb#4)]"
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: A permission to intersect with the current permission. It must be the same type as the current permission.
    return:
      type: System.Security.IPermission
      description: A new permission that represents the intersection of the current permission and the specified permission. This new permission is `null` if the intersection is empty.
  overload: System.Security.Permissions.UIPermission.Intersect*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The <code>target</code> parameter is not `null` and is not of the same type as the current permission.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/UIPermission.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.UIPermission.IsSubsetOf(System.Security.IPermission)
  commentId: M:System.Security.Permissions.UIPermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.UIPermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: UIPermission.IsSubsetOf(IPermission)
  fullName: UIPermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Determines whether the current permission is a subset of the specified permission.
  remarks: The current permission is a subset of the specified permission if all demands that succeed for the current permission also succeed for the specified permission. That is, the specified permission contains at least the permissions contained in the subset. For <xref:System.Security.Permissions.UIPermission.IsSubsetOf%2A> to return `true`, both the <xref:System.Security.Permissions.UIPermissionWindow> and <xref:System.Security.Permissions.UIPermissionClipboard> values of the current permission must be equal to or less permissive than the values of the specified permission.
  example:
  - "The following code example shows the behavior of the <xref:System.Security.Permissions.UIPermission.IsSubsetOf%2A> method. This example is part of a larger example provided for the <xref:System.Security.Permissions.UIPermission> class.  \n  \n> [!NOTE]\n>  The code example is intended to show the behavior of the method, not to demonstrate its use. In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.  \n  \n [!code-cpp[System.Security.Permissions.UIPermission#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/CPP/uipermission.cpp#2)]\n [!code-csharp[System.Security.Permissions.UIPermission#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/CS/uipermission.cs#2)]\n [!code-vb[System.Security.Permissions.UIPermission#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/VB/uipermission.vb#2)]"
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: A permission to test for the subset relationship. This permission must be the same type as the current permission.
    return:
      type: System.Boolean
      description: '`true` if the current permission is a subset of the specified permission; otherwise, `false`.'
  overload: System.Security.Permissions.UIPermission.IsSubsetOf*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The <code>target</code> parameter is not `null` and is not of the same type as the current permission.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/UIPermission.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.UIPermission.IsUnrestricted
  commentId: M:System.Security.Permissions.UIPermission.IsUnrestricted
  id: IsUnrestricted
  parent: System.Security.Permissions.UIPermission
  langs:
  - csharp
  name: IsUnrestricted()
  nameWithType: UIPermission.IsUnrestricted()
  fullName: UIPermission.IsUnrestricted()
  type: Method
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Returns a value indicating whether the current permission is unrestricted.
  remarks: An unrestricted permission represents access to any and all resources protected by the permission.
  syntax:
    content: public bool IsUnrestricted ();
    parameters: []
    return:
      type: System.Boolean
      description: '`true` if the current permission is unrestricted; otherwise, `false`.'
  overload: System.Security.Permissions.UIPermission.IsUnrestricted*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/UIPermission.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.UIPermission.ToXml
  commentId: M:System.Security.Permissions.UIPermission.ToXml
  id: ToXml
  parent: System.Security.Permissions.UIPermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: UIPermission.ToXml()
  fullName: UIPermission.ToXml()
  type: Method
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Creates an XML encoding of the permission and its current state.
  remarks: ''
  example:
  - "The following code example shows the behavior of the <xref:System.Security.Permissions.UIPermission.ToXml%2A> method. This example is part of a larger example provided for the <xref:System.Security.Permissions.UIPermission> class.  \n  \n> [!NOTE]\n>  The code example is intended to show the behavior of the method, not to demonstrate its use. In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.  \n  \n [!code-cpp[System.Security.Permissions.UIPermission#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/CPP/uipermission.cpp#6)]\n [!code-csharp[System.Security.Permissions.UIPermission#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/CS/uipermission.cs#6)]\n [!code-vb[System.Security.Permissions.UIPermission#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/VB/uipermission.vb#6)]"
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: An XML encoding of the permission, including any state information.
  overload: System.Security.Permissions.UIPermission.ToXml*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/UIPermission.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.UIPermission.Union(System.Security.IPermission)
  commentId: M:System.Security.Permissions.UIPermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Security.Permissions.UIPermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: UIPermission.Union(IPermission)
  fullName: UIPermission.Union(IPermission)
  type: Method
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Creates a permission that is the union of the permission and the specified permission.
  remarks: The result of a call to <xref:System.Security.Permissions.UIPermission.Union%2A> is a permission that represents all the operations represented by the current permission as well as all the operations represented by the specified permission. Specifically, it represents the most permissive values of <xref:System.Security.Permissions.UIPermissionWindow> and <xref:System.Security.Permissions.UIPermissionClipboard> from those in the current permission and the specified permission.
  example:
  - "The following code example shows the behavior of the <xref:System.Security.Permissions.UIPermission.Union%2A> method. This example is part of a larger example provided for the <xref:System.Security.Permissions.UIPermission> class.  \n  \n> [!NOTE]\n>  The code example is intended to show the behavior of the method, not to demonstrate its use. In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.  \n  \n [!code-cpp[System.Security.Permissions.UIPermission#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/CPP/uipermission.cpp#3)]\n [!code-csharp[System.Security.Permissions.UIPermission#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/CS/uipermission.cs#3)]\n [!code-vb[System.Security.Permissions.UIPermission#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/VB/uipermission.vb#3)]"
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: A permission to combine with the current permission. It must be the same type as the current permission.
    return:
      type: System.Security.IPermission
      description: A new permission that represents the union of the current permission and the specified permission.
  overload: System.Security.Permissions.UIPermission.Union*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The <code>target</code> parameter is not `null` and is not of the same type as the current permission.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/UIPermission.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.UIPermission.Window
  commentId: P:System.Security.Permissions.UIPermission.Window
  id: Window
  parent: System.Security.Permissions.UIPermission
  langs:
  - csharp
  name: Window
  nameWithType: UIPermission.Window
  fullName: UIPermission.Window
  type: Property
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Gets or sets the window access represented by the permission.
  remarks: ''
  example:
  - "The following code example shows the use of the <xref:System.Security.Permissions.UIPermission.Window%2A> property. This example is part of a larger example provided for the <xref:System.Security.Permissions.UIPermission> class.  \n  \n [!code-cpp[System.Security.Permissions.UIPermission#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/CPP/uipermission.cpp#2)]\n [!code-csharp[System.Security.Permissions.UIPermission#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/CS/uipermission.cs#2)]\n [!code-vb[System.Security.Permissions.UIPermission#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/VB/uipermission.vb#2)]"
  syntax:
    content: public System.Security.Permissions.UIPermissionWindow Window { get; set; }
    return:
      type: System.Security.Permissions.UIPermissionWindow
      description: One of the <xref href="System.Security.Permissions.UIPermissionWindow"></xref> values.
  overload: System.Security.Permissions.UIPermission.Window*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/UIPermission.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
references:
- uid: System.Security.CodeAccessPermission
  parent: System.Security
  isExternal: false
  name: CodeAccessPermission
  nameWithType: CodeAccessPermission
  fullName: System.Security.CodeAccessPermission
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Security.Permissions.UIPermission
  isExternal: false
  name: UIPermission(PermissionState)
  nameWithType: UIPermission.UIPermission(PermissionState)
  fullName: UIPermission.UIPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.UIPermissionClipboard)
  parent: System.Security.Permissions.UIPermission
  isExternal: false
  name: UIPermission(UIPermissionClipboard)
  nameWithType: UIPermission.UIPermission(UIPermissionClipboard)
  fullName: UIPermission.UIPermission(UIPermissionClipboard)
- uid: System.Security.Permissions.UIPermissionClipboard
  parent: System.Security.Permissions
  isExternal: false
  name: UIPermissionClipboard
  nameWithType: UIPermissionClipboard
  fullName: System.Security.Permissions.UIPermissionClipboard
- uid: System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.UIPermissionWindow)
  parent: System.Security.Permissions.UIPermission
  isExternal: false
  name: UIPermission(UIPermissionWindow)
  nameWithType: UIPermission.UIPermission(UIPermissionWindow)
  fullName: UIPermission.UIPermission(UIPermissionWindow)
- uid: System.Security.Permissions.UIPermissionWindow
  parent: System.Security.Permissions
  isExternal: false
  name: UIPermissionWindow
  nameWithType: UIPermissionWindow
  fullName: System.Security.Permissions.UIPermissionWindow
- uid: System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.UIPermissionWindow,System.Security.Permissions.UIPermissionClipboard)
  parent: System.Security.Permissions.UIPermission
  isExternal: false
  name: UIPermission(UIPermissionWindow, UIPermissionClipboard)
  nameWithType: UIPermission.UIPermission(UIPermissionWindow, UIPermissionClipboard)
  fullName: UIPermission.UIPermission(UIPermissionWindow, UIPermissionClipboard)
- uid: System.Security.Permissions.UIPermission.Clipboard
  parent: System.Security.Permissions.UIPermission
  isExternal: false
  name: Clipboard
  nameWithType: UIPermission.Clipboard
  fullName: UIPermission.Clipboard
- uid: System.Security.Permissions.UIPermission.Copy
  parent: System.Security.Permissions.UIPermission
  isExternal: false
  name: Copy()
  nameWithType: UIPermission.Copy()
  fullName: UIPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.UIPermission.FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.UIPermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: UIPermission.FromXml(SecurityElement)
  fullName: UIPermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.Permissions.UIPermission.Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.UIPermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: UIPermission.Intersect(IPermission)
  fullName: UIPermission.Intersect(IPermission)
- uid: System.Security.Permissions.UIPermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.UIPermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: UIPermission.IsSubsetOf(IPermission)
  fullName: UIPermission.IsSubsetOf(IPermission)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Permissions.UIPermission.IsUnrestricted
  parent: System.Security.Permissions.UIPermission
  isExternal: false
  name: IsUnrestricted()
  nameWithType: UIPermission.IsUnrestricted()
  fullName: UIPermission.IsUnrestricted()
- uid: System.Security.Permissions.UIPermission.ToXml
  parent: System.Security.Permissions.UIPermission
  isExternal: false
  name: ToXml()
  nameWithType: UIPermission.ToXml()
  fullName: UIPermission.ToXml()
- uid: System.Security.Permissions.UIPermission.Union(System.Security.IPermission)
  parent: System.Security.Permissions.UIPermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: UIPermission.Union(IPermission)
  fullName: UIPermission.Union(IPermission)
- uid: System.Security.Permissions.UIPermission.Window
  parent: System.Security.Permissions.UIPermission
  isExternal: false
  name: Window
  nameWithType: UIPermission.Window
  fullName: UIPermission.Window
- uid: System.Security.Permissions.UIPermission.#ctor*
  parent: System.Security.Permissions.UIPermission
  isExternal: false
  name: UIPermission
  nameWithType: UIPermission.UIPermission
  fullName: UIPermission.UIPermission
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/UIPermission.xml
- uid: System.Security.Permissions.UIPermission.Clipboard*
  parent: System.Security.Permissions.UIPermission
  isExternal: false
  name: Clipboard
  nameWithType: UIPermission.Clipboard
  fullName: UIPermission.Clipboard
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/UIPermission.xml
- uid: System.Security.Permissions.UIPermission.Copy*
  parent: System.Security.Permissions.UIPermission
  isExternal: false
  name: Copy
  nameWithType: UIPermission.Copy
  fullName: UIPermission.Copy
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/UIPermission.xml
- uid: System.Security.Permissions.UIPermission.FromXml*
  parent: System.Security.Permissions.UIPermission
  isExternal: false
  name: FromXml
  nameWithType: UIPermission.FromXml
  fullName: UIPermission.FromXml
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/UIPermission.xml
- uid: System.Security.Permissions.UIPermission.Intersect*
  parent: System.Security.Permissions.UIPermission
  isExternal: false
  name: Intersect
  nameWithType: UIPermission.Intersect
  fullName: UIPermission.Intersect
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/UIPermission.xml
- uid: System.Security.Permissions.UIPermission.IsSubsetOf*
  parent: System.Security.Permissions.UIPermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: UIPermission.IsSubsetOf
  fullName: UIPermission.IsSubsetOf
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/UIPermission.xml
- uid: System.Security.Permissions.UIPermission.IsUnrestricted*
  parent: System.Security.Permissions.UIPermission
  isExternal: false
  name: IsUnrestricted
  nameWithType: UIPermission.IsUnrestricted
  fullName: UIPermission.IsUnrestricted
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/UIPermission.xml
- uid: System.Security.Permissions.UIPermission.ToXml*
  parent: System.Security.Permissions.UIPermission
  isExternal: false
  name: ToXml
  nameWithType: UIPermission.ToXml
  fullName: UIPermission.ToXml
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/UIPermission.xml
- uid: System.Security.Permissions.UIPermission.Union*
  parent: System.Security.Permissions.UIPermission
  isExternal: false
  name: Union
  nameWithType: UIPermission.Union
  fullName: UIPermission.Union
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/UIPermission.xml
- uid: System.Security.Permissions.UIPermission.Window*
  parent: System.Security.Permissions.UIPermission
  isExternal: false
  name: Window
  nameWithType: UIPermission.Window
  fullName: UIPermission.Window
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/UIPermission.xml
- uid: System.Security.CodeAccessPermission.Equals(System.Object)
  parent: System.Security.CodeAccessPermission
  isExternal: false
  name: Equals(Object)
  nameWithType: CodeAccessPermission.Equals(Object)
  fullName: CodeAccessPermission.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Security.CodeAccessPermission.GetHashCode
  parent: System.Security.CodeAccessPermission
  isExternal: false
  name: GetHashCode()
  nameWithType: CodeAccessPermission.GetHashCode()
  fullName: CodeAccessPermission.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Security.CodeAccessPermission.ToString
  parent: System.Security.CodeAccessPermission
  isExternal: false
  name: ToString()
  nameWithType: CodeAccessPermission.ToString()
  fullName: CodeAccessPermission.ToString()
- uid: System.Security.CodeAccessPermission.Assert
  parent: System.Security.CodeAccessPermission
  isExternal: false
  name: Assert()
  nameWithType: CodeAccessPermission.Assert()
  fullName: CodeAccessPermission.Assert()
- uid: System.Security.CodeAccessPermission.Demand
  parent: System.Security.CodeAccessPermission
  isExternal: false
  name: Demand()
  nameWithType: CodeAccessPermission.Demand()
  fullName: CodeAccessPermission.Demand()
- uid: System.Security.CodeAccessPermission.Deny
  parent: System.Security.CodeAccessPermission
  isExternal: false
  name: Deny()
  nameWithType: CodeAccessPermission.Deny()
  fullName: CodeAccessPermission.Deny()
- uid: System.Security.CodeAccessPermission.PermitOnly
  parent: System.Security.CodeAccessPermission
  isExternal: false
  name: PermitOnly()
  nameWithType: CodeAccessPermission.PermitOnly()
  fullName: CodeAccessPermission.PermitOnly()
- uid: System.Security.CodeAccessPermission.RevertAll
  parent: System.Security.CodeAccessPermission
  isExternal: false
  name: RevertAll()
  nameWithType: CodeAccessPermission.RevertAll()
  fullName: CodeAccessPermission.RevertAll()
- uid: System.Security.CodeAccessPermission.RevertAssert
  parent: System.Security.CodeAccessPermission
  isExternal: false
  name: RevertAssert()
  nameWithType: CodeAccessPermission.RevertAssert()
  fullName: CodeAccessPermission.RevertAssert()
- uid: System.Security.CodeAccessPermission.RevertDeny
  parent: System.Security.CodeAccessPermission
  isExternal: false
  name: RevertDeny()
  nameWithType: CodeAccessPermission.RevertDeny()
  fullName: CodeAccessPermission.RevertDeny()
- uid: System.Security.CodeAccessPermission.RevertPermitOnly
  parent: System.Security.CodeAccessPermission
  isExternal: false
  name: RevertPermitOnly()
  nameWithType: CodeAccessPermission.RevertPermitOnly()
  fullName: CodeAccessPermission.RevertPermitOnly()
- uid: System.Security.CodeAccessPermission.System#Security#IPermission#Demand
  parent: System.Security.CodeAccessPermission
  isExternal: false
  name: IPermission.Demand()
  nameWithType: CodeAccessPermission.IPermission.Demand()
  fullName: CodeAccessPermission.IPermission.Demand()
- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#Assert
  parent: System.Security.CodeAccessPermission
  isExternal: false
  name: IStackWalk.Assert()
  nameWithType: CodeAccessPermission.IStackWalk.Assert()
  fullName: CodeAccessPermission.IStackWalk.Assert()
- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#Demand
  parent: System.Security.CodeAccessPermission
  isExternal: false
  name: IStackWalk.Demand()
  nameWithType: CodeAccessPermission.IStackWalk.Demand()
  fullName: CodeAccessPermission.IStackWalk.Demand()
- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#Deny
  parent: System.Security.CodeAccessPermission
  isExternal: false
  name: IStackWalk.Deny()
  nameWithType: CodeAccessPermission.IStackWalk.Deny()
  fullName: CodeAccessPermission.IStackWalk.Deny()
- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#PermitOnly
  parent: System.Security.CodeAccessPermission
  isExternal: false
  name: IStackWalk.PermitOnly()
  nameWithType: CodeAccessPermission.IStackWalk.PermitOnly()
  fullName: CodeAccessPermission.IStackWalk.PermitOnly()
- uid: System.Security.Permissions.IUnrestrictedPermission
  parent: System.Security.Permissions
  isExternal: false
  name: IUnrestrictedPermission
  nameWithType: IUnrestrictedPermission
  fullName: System.Security.Permissions.IUnrestrictedPermission
