{"nodes":[{"content":"Defines the contract implemented by custom parameter inspectors that enables inspection or modification of information prior to and subsequent to calls on either the client or the service.","nodes":[{"pos":[0,188],"content":"Defines the contract implemented by custom parameter inspectors that enables inspection or modification of information prior to and subsequent to calls on either the client or the service.","nodes":[{"content":"Defines the contract implemented by custom parameter inspectors that enables inspection or modification of information prior to and subsequent to calls on either the client or the service.","pos":[0,188]}]}],"pos":[677,866],"yaml":true},{"content":"Implement the <xref:System.ServiceModel.Dispatcher.IParameterInspector> interface to create a custom parameter inspector that can view and modify the contents of a call both before the call and after the call in either client or service applications.  \n  \n On outbound calls from a client, the inspector is invoked before the request contents are serialized and sent to the service. The inspector is also called after the response has been deserialized but before the return values have been dispatched to the proxy method.  \n  \n On inbound calls to a service, the inspector is invoked after parameters are deserialized but before they are dispatched to the service operation.  \n  \n Use the <xref:System.ServiceModel.Dispatcher.ClientOperation.ParameterInspectors%2A?displayProperty=fullName> or the <xref:System.ServiceModel.Dispatcher.DispatchOperation.ParameterInspectors%2A?displayProperty=fullName> properties to add an <xref:System.ServiceModel.Dispatcher.IParameterInspector> implementation to the inspectors collection for a particular operation.  \n  \n **Note** Developers and administrators must ensure that the interaction with other <xref:System.ServiceModel.Dispatcher.IParameterInspector> implementations is understood.","nodes":[{"pos":[0,250],"content":"Implement the <xref:System.ServiceModel.Dispatcher.IParameterInspector> interface to create a custom parameter inspector that can view and modify the contents of a call both before the call and after the call in either client or service applications.","nodes":[{"content":"Implement the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.IParameterInspector&gt;</ph> interface to create a custom parameter inspector that can view and modify the contents of a call both before the call and after the call in either client or service applications.","pos":[0,250],"source":"Implement the <xref:System.ServiceModel.Dispatcher.IParameterInspector> interface to create a custom parameter inspector that can view and modify the contents of a call both before the call and after the call in either client or service applications."}]},{"pos":[257,523],"content":"On outbound calls from a client, the inspector is invoked before the request contents are serialized and sent to the service. The inspector is also called after the response has been deserialized but before the return values have been dispatched to the proxy method.","nodes":[{"content":"On outbound calls from a client, the inspector is invoked before the request contents are serialized and sent to the service. The inspector is also called after the response has been deserialized but before the return values have been dispatched to the proxy method.","pos":[0,266],"nodes":[{"content":"On outbound calls from a client, the inspector is invoked before the request contents are serialized and sent to the service.","pos":[0,125]},{"content":"The inspector is also called after the response has been deserialized but before the return values have been dispatched to the proxy method.","pos":[126,266]}]}]},{"pos":[530,676],"content":"On inbound calls to a service, the inspector is invoked after parameters are deserialized but before they are dispatched to the service operation.","nodes":[{"content":"On inbound calls to a service, the inspector is invoked after parameters are deserialized but before they are dispatched to the service operation.","pos":[0,146]}]},{"pos":[683,1054],"content":"Use the <xref:System.ServiceModel.Dispatcher.ClientOperation.ParameterInspectors%2A?displayProperty=fullName> or the <xref:System.ServiceModel.Dispatcher.DispatchOperation.ParameterInspectors%2A?displayProperty=fullName> properties to add an <xref:System.ServiceModel.Dispatcher.IParameterInspector> implementation to the inspectors collection for a particular operation.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation.ParameterInspectors%2A?displayProperty=fullName&gt;</ph> or the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation.ParameterInspectors%2A?displayProperty=fullName&gt;</ph> properties to add an <ph id=\"ph3\">&lt;xref:System.ServiceModel.Dispatcher.IParameterInspector&gt;</ph> implementation to the inspectors collection for a particular operation.","pos":[0,371],"source":"Use the <xref:System.ServiceModel.Dispatcher.ClientOperation.ParameterInspectors%2A?displayProperty=fullName> or the <xref:System.ServiceModel.Dispatcher.DispatchOperation.ParameterInspectors%2A?displayProperty=fullName> properties to add an <xref:System.ServiceModel.Dispatcher.IParameterInspector> implementation to the inspectors collection for a particular operation."}]},{"pos":[1061,1232],"content":"<bpt id=\"p1\">**</bpt>Note<ept id=\"p1\">**</ept> Developers and administrators must ensure that the interaction with other <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.IParameterInspector&gt;</ph> implementations is understood.","source":"**Note** Developers and administrators must ensure that the interaction with other <xref:System.ServiceModel.Dispatcher.IParameterInspector> implementations is understood."}],"pos":[877,2120],"yaml":true,"extradata":"MT"},{"content":"Called after client calls are returned and before service responses are sent.","nodes":[{"pos":[0,77],"content":"Called after client calls are returned and before service responses are sent.","nodes":[{"content":"Called after client calls are returned and before service responses are sent.","pos":[0,77]}]}],"pos":[4907,4985],"yaml":true},{"content":"On outbound calls from a client, the inspector is invoked before the request contents are serialized and sent to the service. The inspector is also called after the response has been deserialized but before the return values have been dispatched to the proxy method.  \n  \n On inbound calls to a service, the inspector is invoked after parameters are deserialized but before they are dispatched to the service operation.","nodes":[{"pos":[0,266],"content":"On outbound calls from a client, the inspector is invoked before the request contents are serialized and sent to the service. The inspector is also called after the response has been deserialized but before the return values have been dispatched to the proxy method.","nodes":[{"content":"On outbound calls from a client, the inspector is invoked before the request contents are serialized and sent to the service. The inspector is also called after the response has been deserialized but before the return values have been dispatched to the proxy method.","pos":[0,266],"nodes":[{"content":"On outbound calls from a client, the inspector is invoked before the request contents are serialized and sent to the service.","pos":[0,125]},{"content":"The inspector is also called after the response has been deserialized but before the return values have been dispatched to the proxy method.","pos":[126,266]}]}]},{"pos":[273,419],"content":"On inbound calls to a service, the inspector is invoked after parameters are deserialized but before they are dispatched to the service operation.","nodes":[{"content":"On inbound calls to a service, the inspector is invoked after parameters are deserialized but before they are dispatched to the service operation.","pos":[0,146]}]}],"pos":[4996,5420],"yaml":true,"extradata":"MT"},{"content":"The name of the invoked operation.","nodes":[{"pos":[0,34],"content":"The name of the invoked operation.","nodes":[{"content":"The name of the invoked operation.","pos":[0,34]}]}],"pos":[6944,6979],"yaml":true},{"content":"Any output objects.","nodes":[{"pos":[0,19],"content":"Any output objects.","nodes":[{"content":"Any output objects.","pos":[0,19]}]}],"pos":[7044,7064],"yaml":true},{"content":"The return value of the operation.","nodes":[{"pos":[0,34],"content":"The return value of the operation.","nodes":[{"content":"The return value of the operation.","pos":[0,34]}]}],"pos":[7131,7166],"yaml":true},{"content":"Any correlation state returned from the <xref href=\"System.ServiceModel.Dispatcher.IParameterInspector.BeforeCall(System.String,System.Object[])\"></xref> method, or `null`.","nodes":[{"pos":[0,172],"content":"Any correlation state returned from the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Dispatcher.IParameterInspector.BeforeCall(System.String,System.Object[])\"&gt;&lt;/xref&gt;</ph> method, or <ph id=\"ph2\">`null`</ph>.","source":"Any correlation state returned from the <xref href=\"System.ServiceModel.Dispatcher.IParameterInspector.BeforeCall(System.String,System.Object[])\"></xref> method, or `null`."}],"pos":[7238,7411],"yaml":true},{"content":"Called before client calls are sent and after service responses are returned.","nodes":[{"pos":[0,77],"content":"Called before client calls are sent and after service responses are returned.","nodes":[{"content":"Called before client calls are sent and after service responses are returned.","pos":[0,77]}]}],"pos":[8780,8858],"yaml":true},{"content":"On outbound calls from a client, the inspector is invoked before the request contents are serialized and sent to the service. The inspector is also called after the response has been deserialized but before the return values have been dispatched to the proxy method.  \n  \n On inbound calls to a service, the inspector is invoked after the request contents are deserialized and dispatched to the service operation and before the response contents are serialized and sent to the client.","nodes":[{"pos":[0,266],"content":"On outbound calls from a client, the inspector is invoked before the request contents are serialized and sent to the service. The inspector is also called after the response has been deserialized but before the return values have been dispatched to the proxy method.","nodes":[{"content":"On outbound calls from a client, the inspector is invoked before the request contents are serialized and sent to the service. The inspector is also called after the response has been deserialized but before the return values have been dispatched to the proxy method.","pos":[0,266],"nodes":[{"content":"On outbound calls from a client, the inspector is invoked before the request contents are serialized and sent to the service.","pos":[0,125]},{"content":"The inspector is also called after the response has been deserialized but before the return values have been dispatched to the proxy method.","pos":[126,266]}]}]},{"pos":[273,484],"content":"On inbound calls to a service, the inspector is invoked after the request contents are deserialized and dispatched to the service operation and before the response contents are serialized and sent to the client.","nodes":[{"content":"On inbound calls to a service, the inspector is invoked after the request contents are deserialized and dispatched to the service operation and before the response contents are serialized and sent to the client.","pos":[0,211]}]}],"pos":[8869,9358],"yaml":true,"extradata":"MT"},{"content":"The name of the operation.","nodes":[{"pos":[0,26],"content":"The name of the operation.","nodes":[{"content":"The name of the operation.","pos":[0,26]}]}],"pos":[10832,10859],"yaml":true},{"content":"The objects passed to the method by the client.","nodes":[{"pos":[0,47],"content":"The objects passed to the method by the client.","nodes":[{"content":"The objects passed to the method by the client.","pos":[0,47]}]}],"pos":[10923,10971],"yaml":true},{"content":"The correlation state that is returned as the <code>correlationState</code> parameter in <xref href=\"System.ServiceModel.Dispatcher.IParameterInspector.AfterCall(System.String,System.Object[],System.Object,System.Object)\"></xref>. Return `null` if you do not intend to use correlation state.","nodes":[{"pos":[0,291],"content":"The correlation state that is returned as the <code>correlationState</code> parameter in <xref href=\"System.ServiceModel.Dispatcher.IParameterInspector.AfterCall(System.String,System.Object[],System.Object,System.Object)\"></xref>. Return `null` if you do not intend to use correlation state.","nodes":[{"content":"The correlation state that is returned as the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">correlationState</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter in <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Dispatcher.IParameterInspector.AfterCall(System.String,System.Object[],System.Object,System.Object)\"&gt;&lt;/xref&gt;</ph>.","pos":[0,230],"source":"The correlation state that is returned as the <code>correlationState</code> parameter in <xref href=\"System.ServiceModel.Dispatcher.IParameterInspector.AfterCall(System.String,System.Object[],System.Object,System.Object)\"></xref>."},{"content":"Return <ph id=\"ph1\">`null`</ph> if you do not intend to use correlation state.","pos":[231,291],"source":" Return `null` if you do not intend to use correlation state."}]}],"pos":[11028,11320],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Dispatcher.IParameterInspector\n  commentId: T:System.ServiceModel.Dispatcher.IParameterInspector\n  id: IParameterInspector\n  children:\n  - System.ServiceModel.Dispatcher.IParameterInspector.AfterCall(System.String,System.Object[],System.Object,System.Object)\n  - System.ServiceModel.Dispatcher.IParameterInspector.BeforeCall(System.String,System.Object[])\n  langs:\n  - csharp\n  name: IParameterInspector\n  nameWithType: IParameterInspector\n  fullName: System.ServiceModel.Dispatcher.IParameterInspector\n  type: Interface\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Defines the contract implemented by custom parameter inspectors that enables inspection or modification of information prior to and subsequent to calls on either the client or the service.\n  remarks: \"Implement the <xref:System.ServiceModel.Dispatcher.IParameterInspector> interface to create a custom parameter inspector that can view and modify the contents of a call both before the call and after the call in either client or service applications.  \\n  \\n On outbound calls from a client, the inspector is invoked before the request contents are serialized and sent to the service. The inspector is also called after the response has been deserialized but before the return values have been dispatched to the proxy method.  \\n  \\n On inbound calls to a service, the inspector is invoked after parameters are deserialized but before they are dispatched to the service operation.  \\n  \\n Use the <xref:System.ServiceModel.Dispatcher.ClientOperation.ParameterInspectors%2A?displayProperty=fullName> or the <xref:System.ServiceModel.Dispatcher.DispatchOperation.ParameterInspectors%2A?displayProperty=fullName> properties to add an <xref:System.ServiceModel.Dispatcher.IParameterInspector> implementation to the inspectors collection for a particular operation.  \\n  \\n **Note** Developers and administrators must ensure that the interaction with other <xref:System.ServiceModel.Dispatcher.IParameterInspector> implementations is understood.\"\n  example:\n  - \"The following code example shows an <xref:System.ServiceModel.Dispatcher.IParameterInspector> implementation that:  \\n  \\n-   Writes the operation name and return value to the console after a response has been deserialized by the service or a request has been serialized by a client.  \\n  \\n-   Writes the operation name to the console after deserializing a response on the client or after a response has been serialized on the service.  \\n  \\n [!code-csharp[Interceptors#4](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/interceptors.cs#4)]\\n [!code-vb[Interceptors#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/interceptors.vb#4)]  \\n  \\n The following code example shows how to use either <xref:System.ServiceModel.Description.IOperationBehavior?displayProperty=fullName>, <xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=fullName> or <xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=fullName> to insert <xref:System.ServiceModel.Dispatcher.IParameterInspector> objects.  \\n  \\n [!code-csharp[Interceptors#5](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/insertingbehaviors.cs#5)]\\n [!code-vb[Interceptors#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/insertingbehaviors.vb#5)]\"\n  syntax:\n    content: public interface IParameterInspector\n  implements: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/IParameterInspector.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.IParameterInspector.AfterCall(System.String,System.Object[],System.Object,System.Object)\n  commentId: M:System.ServiceModel.Dispatcher.IParameterInspector.AfterCall(System.String,System.Object[],System.Object,System.Object)\n  id: AfterCall(System.String,System.Object[],System.Object,System.Object)\n  parent: System.ServiceModel.Dispatcher.IParameterInspector\n  langs:\n  - csharp\n  name: AfterCall(String, Object[], Object, Object)\n  nameWithType: IParameterInspector.AfterCall(String, Object[], Object, Object)\n  fullName: IParameterInspector.AfterCall(String, Object[], Object, Object)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Called after client calls are returned and before service responses are sent.\n  remarks: \"On outbound calls from a client, the inspector is invoked before the request contents are serialized and sent to the service. The inspector is also called after the response has been deserialized but before the return values have been dispatched to the proxy method.  \\n  \\n On inbound calls to a service, the inspector is invoked after parameters are deserialized but before they are dispatched to the service operation.\"\n  example:\n  - \"The following code example shows an <xref:System.ServiceModel.Dispatcher.IParameterInspector> implementation that:  \\n  \\n-   Writes the operation name and return value to the console after a response has been deserialized by the service or a request has been serialized by a client.  \\n  \\n-   Writes the operation name to the console after deserializing a response on the client or after a response has been serialized on the service.  \\n  \\n [!code-csharp[Interceptors#4](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/interceptors.cs#4)]\\n [!code-vb[Interceptors#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/interceptors.vb#4)]  \\n  \\n The following code example shows how to use either <xref:System.ServiceModel.Description.IOperationBehavior?displayProperty=fullName>, <xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=fullName>, or <xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=fullName> to insert <xref:System.ServiceModel.Dispatcher.IParameterInspector> objects.  \\n  \\n [!code-csharp[Interceptors#5](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/insertingbehaviors.cs#5)]\\n [!code-vb[Interceptors#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/insertingbehaviors.vb#5)]\"\n  syntax:\n    content: public void AfterCall (string operationName, object[] outputs, object returnValue, object correlationState);\n    parameters:\n    - id: operationName\n      type: System.String\n      description: The name of the invoked operation.\n    - id: outputs\n      type: System.Object[]\n      description: Any output objects.\n    - id: returnValue\n      type: System.Object\n      description: The return value of the operation.\n    - id: correlationState\n      type: System.Object\n      description: Any correlation state returned from the <xref href=\"System.ServiceModel.Dispatcher.IParameterInspector.BeforeCall(System.String,System.Object[])\"></xref> method, or `null`.\n  overload: System.ServiceModel.Dispatcher.IParameterInspector.AfterCall*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/IParameterInspector.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.IParameterInspector.BeforeCall(System.String,System.Object[])\n  commentId: M:System.ServiceModel.Dispatcher.IParameterInspector.BeforeCall(System.String,System.Object[])\n  id: BeforeCall(System.String,System.Object[])\n  parent: System.ServiceModel.Dispatcher.IParameterInspector\n  langs:\n  - csharp\n  name: BeforeCall(String, Object[])\n  nameWithType: IParameterInspector.BeforeCall(String, Object[])\n  fullName: IParameterInspector.BeforeCall(String, Object[])\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Called before client calls are sent and after service responses are returned.\n  remarks: \"On outbound calls from a client, the inspector is invoked before the request contents are serialized and sent to the service. The inspector is also called after the response has been deserialized but before the return values have been dispatched to the proxy method.  \\n  \\n On inbound calls to a service, the inspector is invoked after the request contents are deserialized and dispatched to the service operation and before the response contents are serialized and sent to the client.\"\n  example:\n  - \"The following code example shows an <xref:System.ServiceModel.Dispatcher.IParameterInspector> implementation that:  \\n  \\n-   Writes the operation name and return value to the console after a response has been deserialized by the service or a request has been serialized by a client.  \\n  \\n-   Writes the operation name to the console after deserializing a response on the client or after a response is serialized on the service.  \\n  \\n [!code-csharp[Interceptors#4](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/interceptors.cs#4)]\\n [!code-vb[Interceptors#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/interceptors.vb#4)]  \\n  \\n The following code example shows how to use either <xref:System.ServiceModel.Description.IOperationBehavior?displayProperty=fullName>, <xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=fullName> or <xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=fullName> to insert <xref:System.ServiceModel.Dispatcher.IParameterInspector> objects.  \\n  \\n [!code-csharp[Interceptors#5](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/insertingbehaviors.cs#5)]\\n [!code-vb[Interceptors#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/insertingbehaviors.vb#5)]\"\n  syntax:\n    content: public object BeforeCall (string operationName, object[] inputs);\n    parameters:\n    - id: operationName\n      type: System.String\n      description: The name of the operation.\n    - id: inputs\n      type: System.Object[]\n      description: The objects passed to the method by the client.\n    return:\n      type: System.Object\n      description: The correlation state that is returned as the <code>correlationState</code> parameter in <xref href=\"System.ServiceModel.Dispatcher.IParameterInspector.AfterCall(System.String,System.Object[],System.Object,System.Object)\"></xref>. Return `null` if you do not intend to use correlation state.\n  overload: System.ServiceModel.Dispatcher.IParameterInspector.BeforeCall*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/IParameterInspector.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.ServiceModel.Dispatcher.IParameterInspector.AfterCall(System.String,System.Object[],System.Object,System.Object)\n  parent: System.ServiceModel.Dispatcher.IParameterInspector\n  isExternal: false\n  name: AfterCall(String, Object[], Object, Object)\n  nameWithType: IParameterInspector.AfterCall(String, Object[], Object, Object)\n  fullName: IParameterInspector.AfterCall(String, Object[], Object, Object)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Object\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Object[]\n  parent: System\n  isExternal: false\n  name: Object[]\n  nameWithType: Object[]\n  fullName: System.Object[]\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.ServiceModel.Dispatcher.IParameterInspector.BeforeCall(System.String,System.Object[])\n  parent: System.ServiceModel.Dispatcher.IParameterInspector\n  isExternal: false\n  name: BeforeCall(String, Object[])\n  nameWithType: IParameterInspector.BeforeCall(String, Object[])\n  fullName: IParameterInspector.BeforeCall(String, Object[])\n- uid: System.ServiceModel.Dispatcher.IParameterInspector.AfterCall*\n  parent: System.ServiceModel.Dispatcher.IParameterInspector\n  isExternal: false\n  name: AfterCall\n  nameWithType: IParameterInspector.AfterCall\n  fullName: IParameterInspector.AfterCall\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/IParameterInspector.xml\n- uid: System.ServiceModel.Dispatcher.IParameterInspector.BeforeCall*\n  parent: System.ServiceModel.Dispatcher.IParameterInspector\n  isExternal: false\n  name: BeforeCall\n  nameWithType: IParameterInspector.BeforeCall\n  fullName: IParameterInspector.BeforeCall\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/IParameterInspector.xml\n"}