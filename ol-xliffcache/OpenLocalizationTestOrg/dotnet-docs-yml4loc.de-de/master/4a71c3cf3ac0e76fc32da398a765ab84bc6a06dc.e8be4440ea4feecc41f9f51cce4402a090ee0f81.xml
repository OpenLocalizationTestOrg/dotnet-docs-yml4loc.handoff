{"nodes":[{"content":"Defines the interface that must be implemented by a channel factory to produce channels.","nodes":[{"pos":[0,88],"content":"Defines the interface that must be implemented by a channel factory to produce channels.","nodes":[{"content":"Defines the interface that must be implemented by a channel factory to produce channels.","pos":[0,88]}]}],"pos":[488,577],"yaml":true},{"content":"The <xref:System.ServiceModel.Channels.IChannelFactory> interface represents the base interface for channel factories.  \n  \n Channel factories and their associated channels are generally used by the clients of a service that initiate communication. Listener factories that implement the <xref:System.ServiceModel.Channels.IChannelListener> interface and their associated listeners, by contrast, provide the mechanisms used to accept the channels through which communications with a service is initiated.","nodes":[{"pos":[0,118],"content":"The <xref:System.ServiceModel.Channels.IChannelFactory> interface represents the base interface for channel factories.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.IChannelFactory&gt;</ph> interface represents the base interface for channel factories.","pos":[0,118],"source":"The <xref:System.ServiceModel.Channels.IChannelFactory> interface represents the base interface for channel factories."}]},{"pos":[125,503],"content":"Channel factories and their associated channels are generally used by the clients of a service that initiate communication. Listener factories that implement the <xref:System.ServiceModel.Channels.IChannelListener> interface and their associated listeners, by contrast, provide the mechanisms used to accept the channels through which communications with a service is initiated.","nodes":[{"content":"Channel factories and their associated channels are generally used by the clients of a service that initiate communication. Listener factories that implement the <xref:System.ServiceModel.Channels.IChannelListener> interface and their associated listeners, by contrast, provide the mechanisms used to accept the channels through which communications with a service is initiated.","pos":[0,378],"nodes":[{"content":"Channel factories and their associated channels are generally used by the clients of a service that initiate communication.","pos":[0,123]},{"content":"Listener factories that implement the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;</ph> interface and their associated listeners, by contrast, provide the mechanisms used to accept the channels through which communications with a service is initiated.","pos":[124,378],"source":" Listener factories that implement the <xref:System.ServiceModel.Channels.IChannelListener> interface and their associated listeners, by contrast, provide the mechanisms used to accept the channels through which communications with a service is initiated."}]}]}],"pos":[588,1096],"yaml":true,"extradata":"MT"},{"content":"Returns a typed object requested, if present, from the appropriate layer in the channel stack.","nodes":[{"pos":[0,94],"content":"Returns a typed object requested, if present, from the appropriate layer in the channel stack.","nodes":[{"content":"Returns a typed object requested, if present, from the appropriate layer in the channel stack.","pos":[0,94]}]}],"pos":[2543,2638],"yaml":true},{"content":"Use this to request a typed object such as an interface for setting properties or getting status from the appropriate layer in the channel stack. If a layer supports returning the requested object, it returns it. If not, it delegates the call down to the next layer in the stack. If it gets to the bottom of the stack and no channel layer supported the requested object, then the method returns `null`.  \n  \n You must implement <xref:System.ServiceModel.Channels.IChannelFactory.GetProperty%2A> whenever you implement a channel factory. <xref:System.ServiceModel.Channels.IChannelFactory.GetProperty%2A> is an excellent way to communicate information along the channel factory stack without having to know what channel factories are below you, or what channel factories above you are interested in performing queries. Define interfaces for people to query on for any interesting information you have. Whenever you do not recognize the type argument for <xref:System.ServiceModel.Channels.IChannelFactory.GetProperty%2A>, delegate down to the next channel factory in the stack or return `null` if you are creating a new transport channel at the bottom of the stack.","nodes":[{"pos":[0,402],"content":"Use this to request a typed object such as an interface for setting properties or getting status from the appropriate layer in the channel stack. If a layer supports returning the requested object, it returns it. If not, it delegates the call down to the next layer in the stack. If it gets to the bottom of the stack and no channel layer supported the requested object, then the method returns `null`.","nodes":[{"content":"Use this to request a typed object such as an interface for setting properties or getting status from the appropriate layer in the channel stack.","pos":[0,145]},{"content":"If a layer supports returning the requested object, it returns it.","pos":[146,212]},{"content":"If not, it delegates the call down to the next layer in the stack.","pos":[213,279]},{"content":"If it gets to the bottom of the stack and no channel layer supported the requested object, then the method returns <ph id=\"ph1\">`null`</ph>.","pos":[280,402],"source":" If it gets to the bottom of the stack and no channel layer supported the requested object, then the method returns `null`."}]},{"pos":[409,1164],"content":"You must implement <xref:System.ServiceModel.Channels.IChannelFactory.GetProperty%2A> whenever you implement a channel factory. <xref:System.ServiceModel.Channels.IChannelFactory.GetProperty%2A> is an excellent way to communicate information along the channel factory stack without having to know what channel factories are below you, or what channel factories above you are interested in performing queries. Define interfaces for people to query on for any interesting information you have. Whenever you do not recognize the type argument for <xref:System.ServiceModel.Channels.IChannelFactory.GetProperty%2A>, delegate down to the next channel factory in the stack or return `null` if you are creating a new transport channel at the bottom of the stack.","nodes":[{"content":"You must implement <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.IChannelFactory.GetProperty%2A&gt;</ph> whenever you implement a channel factory.","pos":[0,127],"source":"You must implement <xref:System.ServiceModel.Channels.IChannelFactory.GetProperty%2A> whenever you implement a channel factory."},{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.IChannelFactory.GetProperty%2A&gt;</ph> is an excellent way to communicate information along the channel factory stack without having to know what channel factories are below you, or what channel factories above you are interested in performing queries.","pos":[128,408],"source":" <xref:System.ServiceModel.Channels.IChannelFactory.GetProperty%2A> is an excellent way to communicate information along the channel factory stack without having to know what channel factories are below you, or what channel factories above you are interested in performing queries."},{"content":"Define interfaces for people to query on for any interesting information you have.","pos":[409,491]},{"content":"Whenever you do not recognize the type argument for <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.IChannelFactory.GetProperty%2A&gt;</ph>, delegate down to the next channel factory in the stack or return <ph id=\"ph2\">`null`</ph> if you are creating a new transport channel at the bottom of the stack.","pos":[492,755],"source":" Whenever you do not recognize the type argument for <xref:System.ServiceModel.Channels.IChannelFactory.GetProperty%2A>, delegate down to the next channel factory in the stack or return `null` if you are creating a new transport channel at the bottom of the stack."}]}],"pos":[2649,3818],"yaml":true,"extradata":"MT"},{"content":"The typed object for which the method is querying.","nodes":[{"pos":[0,50],"content":"The typed object for which the method is querying.","nodes":[{"content":"The typed object for which the method is querying.","pos":[0,50]}]}],"pos":[3957,4008],"yaml":true},{"content":"The typed object <code>T</code> requested, if it is present, or `null` if it is not.","nodes":[{"pos":[0,84],"content":"The typed object <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">T</ph><ept id=\"p1\">&lt;/code&gt;</ept> requested, if it is present, or <ph id=\"ph2\">`null`</ph> if it is not.","source":"The typed object <code>T</code> requested, if it is present, or `null` if it is not."}],"pos":[4053,4138],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Channels.IChannelFactory\n  commentId: T:System.ServiceModel.Channels.IChannelFactory\n  id: IChannelFactory\n  children:\n  - System.ServiceModel.Channels.IChannelFactory.GetProperty``1\n  langs:\n  - csharp\n  name: IChannelFactory\n  nameWithType: IChannelFactory\n  fullName: System.ServiceModel.Channels.IChannelFactory\n  type: Interface\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Defines the interface that must be implemented by a channel factory to produce channels.\n  remarks: \"The <xref:System.ServiceModel.Channels.IChannelFactory> interface represents the base interface for channel factories.  \\n  \\n Channel factories and their associated channels are generally used by the clients of a service that initiate communication. Listener factories that implement the <xref:System.ServiceModel.Channels.IChannelListener> interface and their associated listeners, by contrast, provide the mechanisms used to accept the channels through which communications with a service is initiated.\"\n  syntax:\n    content: 'public interface IChannelFactory : System.ServiceModel.ICommunicationObject'\n  derivedClasses:\n  - System.ServiceModel.ChannelFactory\n  - System.ServiceModel.Channels.ChannelFactoryBase\n  - System.ServiceModel.Channels.IChannelFactory`1\n  implements:\n  - System.ServiceModel.ICommunicationObject\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/IChannelFactory.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.IChannelFactory.GetProperty``1\n  commentId: M:System.ServiceModel.Channels.IChannelFactory.GetProperty``1\n  id: GetProperty``1\n  parent: System.ServiceModel.Channels.IChannelFactory\n  langs:\n  - csharp\n  name: GetProperty<T>()\n  nameWithType: IChannelFactory.GetProperty<T>()\n  fullName: IChannelFactory.GetProperty<T>()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Returns a typed object requested, if present, from the appropriate layer in the channel stack.\n  remarks: \"Use this to request a typed object such as an interface for setting properties or getting status from the appropriate layer in the channel stack. If a layer supports returning the requested object, it returns it. If not, it delegates the call down to the next layer in the stack. If it gets to the bottom of the stack and no channel layer supported the requested object, then the method returns `null`.  \\n  \\n You must implement <xref:System.ServiceModel.Channels.IChannelFactory.GetProperty%2A> whenever you implement a channel factory. <xref:System.ServiceModel.Channels.IChannelFactory.GetProperty%2A> is an excellent way to communicate information along the channel factory stack without having to know what channel factories are below you, or what channel factories above you are interested in performing queries. Define interfaces for people to query on for any interesting information you have. Whenever you do not recognize the type argument for <xref:System.ServiceModel.Channels.IChannelFactory.GetProperty%2A>, delegate down to the next channel factory in the stack or return `null` if you are creating a new transport channel at the bottom of the stack.\"\n  syntax:\n    content: 'public T GetProperty<T> () where T : class;'\n    parameters: []\n    typeParameters:\n    - id: T\n      description: The typed object for which the method is querying.\n    return:\n      type: T\n      description: The typed object <code>T</code> requested, if it is present, or `null` if it is not.\n  overload: System.ServiceModel.Channels.IChannelFactory.GetProperty``1*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/IChannelFactory.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.ServiceModel.Channels.IChannelFactory.GetProperty``1\n  parent: System.ServiceModel.Channels.IChannelFactory\n  isExternal: false\n  name: GetProperty<T>()\n  nameWithType: IChannelFactory.GetProperty<T>()\n  fullName: IChannelFactory.GetProperty<T>()\n- uid: T\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.ServiceModel.Channels.IChannelFactory.GetProperty``1*\n  parent: System.ServiceModel.Channels.IChannelFactory\n  isExternal: false\n  name: GetProperty<T>\n  nameWithType: IChannelFactory.GetProperty<T>\n  fullName: IChannelFactory.GetProperty<T>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/IChannelFactory.xml\n- uid: System.ServiceModel.ICommunicationObject\n  parent: System.ServiceModel\n  isExternal: false\n  name: ICommunicationObject\n  nameWithType: ICommunicationObject\n  fullName: System.ServiceModel.ICommunicationObject\n"}