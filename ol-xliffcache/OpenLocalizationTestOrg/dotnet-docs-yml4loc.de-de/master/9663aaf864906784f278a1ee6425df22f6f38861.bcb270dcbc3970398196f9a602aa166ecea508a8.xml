{"nodes":[{"content":"Determines access to securable objects. The derived classes <xref href=\"System.Security.AccessControl.AccessRule\"></xref> and <xref href=\"System.Security.AccessControl.AuditRule\"></xref> offer specializations for access and audit functionality.","nodes":[{"pos":[0,244],"content":"Determines access to securable objects. The derived classes <xref href=\"System.Security.AccessControl.AccessRule\"></xref> and <xref href=\"System.Security.AccessControl.AuditRule\"></xref> offer specializations for access and audit functionality.","nodes":[{"content":"Determines access to securable objects.","pos":[0,39]},{"content":"The derived classes <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.AccessRule\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph2\">&lt;xref href=\"System.Security.AccessControl.AuditRule\"&gt;&lt;/xref&gt;</ph> offer specializations for access and audit functionality.","pos":[40,244],"source":" The derived classes <xref href=\"System.Security.AccessControl.AccessRule\"></xref> and <xref href=\"System.Security.AccessControl.AuditRule\"></xref> offer specializations for access and audit functionality."}]}],"pos":[1019,1264],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.AccessRule\"></xref> class by using the specified values.","nodes":[{"pos":[0,132],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.AccessRule\"&gt;&lt;/xref&gt;</ph> class by using the specified values.","source":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.AccessRule\"></xref> class by using the specified values."}],"pos":[3740,3873],"yaml":true},{"content":"The identity to which the access rule applies. This parameter must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>.","nodes":[{"pos":[0,168],"content":"The identity to which the access rule applies. This parameter must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>.","nodes":[{"content":"The identity to which the access rule applies.","pos":[0,46]},{"content":"This parameter must be an object that can be cast as a <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;&lt;/xref&gt;</ph>.","pos":[47,168],"source":" This parameter must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>."}]}],"pos":[4254,4423],"yaml":true},{"content":"The access mask of this rule. The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.","nodes":[{"pos":[0,150],"content":"The access mask of this rule. The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.","nodes":[{"content":"The access mask of this rule. The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.","pos":[0,150],"nodes":[{"content":"The access mask of this rule.","pos":[0,29]},{"content":"The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.","pos":[30,150]}]}]}],"pos":[4488,4639],"yaml":true},{"content":"`true` to inherit this rule from a parent container.","nodes":[{"pos":[0,52],"content":"<ph id=\"ph1\">`true`</ph> to inherit this rule from a parent container.","source":"`true` to inherit this rule from a parent container."}],"pos":[4707,4762],"yaml":true},{"content":"The inheritance properties of the access rule.","nodes":[{"pos":[0,46],"content":"The inheritance properties of the access rule.","nodes":[{"content":"The inheritance properties of the access rule.","pos":[0,46]}]}],"pos":[4867,4914],"yaml":true},{"content":"Whether inherited access rules are automatically propagated. The propagation flags are ignored if <code>inheritanceFlags</code> is set to <xref href=\"System.Security.AccessControl.InheritanceFlags.None\"></xref>.","nodes":[{"pos":[0,211],"content":"Whether inherited access rules are automatically propagated. The propagation flags are ignored if <code>inheritanceFlags</code> is set to <xref href=\"System.Security.AccessControl.InheritanceFlags.None\"></xref>.","nodes":[{"content":"Whether inherited access rules are automatically propagated.","pos":[0,60]},{"content":"The propagation flags are ignored if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">inheritanceFlags</ph><ept id=\"p1\">&lt;/code&gt;</ept> is set to <ph id=\"ph2\">&lt;xref href=\"System.Security.AccessControl.InheritanceFlags.None\"&gt;&lt;/xref&gt;</ph>.","pos":[61,211],"source":" The propagation flags are ignored if <code>inheritanceFlags</code> is set to <xref href=\"System.Security.AccessControl.InheritanceFlags.None\"></xref>."}]}],"pos":[5019,5231],"yaml":true},{"content":"The value of the <code>identity</code> parameter cannot be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>.","nodes":[{"pos":[0,135],"content":"The value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">identity</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter cannot be cast as a <ph id=\"ph2\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;&lt;/xref&gt;</ph>.","source":"The value of the <code>identity</code> parameter cannot be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>."}],"pos":[5406,5542],"yaml":true},{"content":"The value of the <code>accessMask</code> parameter is zero, or the <code>inheritanceFlags</code> or <code>propagationFlags</code> parameters contain unrecognized flag values.","nodes":[{"pos":[0,174],"content":"The value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">accessMask</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is zero, or the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">inheritanceFlags</ph><ept id=\"p2\">&lt;/code&gt;</ept> or <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">propagationFlags</ph><ept id=\"p3\">&lt;/code&gt;</ept> parameters contain unrecognized flag values.","source":"The value of the <code>accessMask</code> parameter is zero, or the <code>inheritanceFlags</code> or <code>propagationFlags</code> parameters contain unrecognized flag values."}],"pos":[5656,5831],"yaml":true},{"content":"Gets the access mask for this rule.","nodes":[{"pos":[0,35],"content":"Gets the access mask for this rule.","nodes":[{"content":"Gets the access mask for this rule.","pos":[0,35]}]}],"pos":[7068,7104],"yaml":true},{"content":"The access mask for this rule.","nodes":[{"pos":[0,30],"content":"The access mask for this rule.","nodes":[{"content":"The access mask for this rule.","pos":[0,30]}]}],"pos":[7217,7248],"yaml":true},{"content":"Gets the <xref href=\"System.Security.Principal.IdentityReference\"></xref> to which this rule applies.","nodes":[{"pos":[0,101],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.IdentityReference\"&gt;&lt;/xref&gt;</ph> to which this rule applies.","source":"Gets the <xref href=\"System.Security.Principal.IdentityReference\"></xref> to which this rule applies."}],"pos":[8616,8718],"yaml":true},{"content":"The <xref href=\"System.Security.Principal.IdentityReference\"></xref> to which this rule applies.","nodes":[{"pos":[0,96],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.IdentityReference\"&gt;&lt;/xref&gt;</ph> to which this rule applies.","source":"The <xref href=\"System.Security.Principal.IdentityReference\"></xref> to which this rule applies."}],"pos":[8906,9003],"yaml":true},{"content":"Gets the value of flags that determine how this rule is inherited by child objects.","nodes":[{"pos":[0,83],"content":"Gets the value of flags that determine how this rule is inherited by child objects.","nodes":[{"content":"Gets the value of flags that determine how this rule is inherited by child objects.","pos":[0,83]}]}],"pos":[10372,10456],"yaml":true},{"content":"A bitwise combination of the enumeration values.","nodes":[{"pos":[0,48],"content":"A bitwise combination of the enumeration values.","nodes":[{"content":"A bitwise combination of the enumeration values.","pos":[0,48]}]}],"pos":[10649,10698],"yaml":true},{"content":"Gets a value indicating whether this rule is explicitly set or is inherited from a parent container object.","nodes":[{"pos":[0,107],"content":"Gets a value indicating whether this rule is explicitly set or is inherited from a parent container object.","nodes":[{"content":"Gets a value indicating whether this rule is explicitly set or is inherited from a parent container object.","pos":[0,107]}]}],"pos":[12036,12144],"yaml":true},{"content":"`true` if this rule is not explicitly set but is instead inherited from a parent container.","nodes":[{"pos":[0,91],"content":"<ph id=\"ph1\">`true`</ph> if this rule is not explicitly set but is instead inherited from a parent container.","source":"`true` if this rule is not explicitly set but is instead inherited from a parent container."}],"pos":[12258,12352],"yaml":true},{"content":"Gets the value of the propagation flags, which determine how inheritance of this rule is propagated to child objects. This property is significant only when the value of the <xref href=\"System.Security.AccessControl.InheritanceFlags\"></xref> enumeration is not <xref href=\"System.Security.AccessControl.InheritanceFlags.None\"></xref>.","nodes":[{"pos":[0,334],"content":"Gets the value of the propagation flags, which determine how inheritance of this rule is propagated to child objects. This property is significant only when the value of the <xref href=\"System.Security.AccessControl.InheritanceFlags\"></xref> enumeration is not <xref href=\"System.Security.AccessControl.InheritanceFlags.None\"></xref>.","nodes":[{"content":"Gets the value of the propagation flags, which determine how inheritance of this rule is propagated to child objects.","pos":[0,117]},{"content":"This property is significant only when the value of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.InheritanceFlags\"&gt;&lt;/xref&gt;</ph> enumeration is not <ph id=\"ph2\">&lt;xref href=\"System.Security.AccessControl.InheritanceFlags.None\"&gt;&lt;/xref&gt;</ph>.","pos":[118,334],"source":" This property is significant only when the value of the <xref href=\"System.Security.AccessControl.InheritanceFlags\"></xref> enumeration is not <xref href=\"System.Security.AccessControl.InheritanceFlags.None\"></xref>."}]}],"pos":[13715,14050],"yaml":true},{"content":"A bitwise combination of the enumeration values.","nodes":[{"pos":[0,48],"content":"A bitwise combination of the enumeration values.","nodes":[{"content":"A bitwise combination of the enumeration values.","pos":[0,48]}]}],"pos":[14243,14292],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.AccessControl.AuthorizationRule\n  commentId: T:System.Security.AccessControl.AuthorizationRule\n  id: AuthorizationRule\n  children:\n  - System.Security.AccessControl.AuthorizationRule.#ctor(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)\n  - System.Security.AccessControl.AuthorizationRule.AccessMask\n  - System.Security.AccessControl.AuthorizationRule.IdentityReference\n  - System.Security.AccessControl.AuthorizationRule.InheritanceFlags\n  - System.Security.AccessControl.AuthorizationRule.IsInherited\n  - System.Security.AccessControl.AuthorizationRule.PropagationFlags\n  langs:\n  - csharp\n  name: AuthorizationRule\n  nameWithType: AuthorizationRule\n  fullName: System.Security.AccessControl.AuthorizationRule\n  type: Class\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Determines access to securable objects. The derived classes <xref href=\"System.Security.AccessControl.AccessRule\"></xref> and <xref href=\"System.Security.AccessControl.AuditRule\"></xref> offer specializations for access and audit functionality.\n  syntax:\n    content: public abstract class AuthorizationRule\n  inheritance:\n  - System.Object\n  derivedClasses:\n  - System.Security.AccessControl.AccessRule\n  - System.Security.AccessControl.AuditRule\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/AuthorizationRule.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.AuthorizationRule.#ctor(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)\n  commentId: M:System.Security.AccessControl.AuthorizationRule.#ctor(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)\n  id: '#ctor(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)'\n  parent: System.Security.AccessControl.AuthorizationRule\n  langs:\n  - csharp\n  name: AuthorizationRule(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags)\n  nameWithType: AuthorizationRule.AuthorizationRule(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags)\n  fullName: AuthorizationRule.AuthorizationRule(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags)\n  type: Constructor\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Initializes a new instance of the <xref href=\"System.Security.AccessControl.AccessRule\"></xref> class by using the specified values.\n  syntax:\n    content: protected AuthorizationRule (System.Security.Principal.IdentityReference identity, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags);\n    parameters:\n    - id: identity\n      type: System.Security.Principal.IdentityReference\n      description: The identity to which the access rule applies. This parameter must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>.\n    - id: accessMask\n      type: System.Int32\n      description: The access mask of this rule. The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.\n    - id: isInherited\n      type: System.Boolean\n      description: '`true` to inherit this rule from a parent container.'\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: The inheritance properties of the access rule.\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: Whether inherited access rules are automatically propagated. The propagation flags are ignored if <code>inheritanceFlags</code> is set to <xref href=\"System.Security.AccessControl.InheritanceFlags.None\"></xref>.\n  overload: System.Security.AccessControl.AuthorizationRule.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The value of the <code>identity</code> parameter cannot be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The value of the <code>accessMask</code> parameter is zero, or the <code>inheritanceFlags</code> or <code>propagationFlags</code> parameters contain unrecognized flag values.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/AuthorizationRule.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.AuthorizationRule.AccessMask\n  commentId: P:System.Security.AccessControl.AuthorizationRule.AccessMask\n  id: AccessMask\n  parent: System.Security.AccessControl.AuthorizationRule\n  langs:\n  - csharp\n  name: AccessMask\n  nameWithType: AuthorizationRule.AccessMask\n  fullName: AuthorizationRule.AccessMask\n  type: Property\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets the access mask for this rule.\n  syntax:\n    content: protected int AccessMask { get; }\n    return:\n      type: System.Int32\n      description: The access mask for this rule.\n  overload: System.Security.AccessControl.AuthorizationRule.AccessMask*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/AuthorizationRule.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.AuthorizationRule.IdentityReference\n  commentId: P:System.Security.AccessControl.AuthorizationRule.IdentityReference\n  id: IdentityReference\n  parent: System.Security.AccessControl.AuthorizationRule\n  langs:\n  - csharp\n  name: IdentityReference\n  nameWithType: AuthorizationRule.IdentityReference\n  fullName: AuthorizationRule.IdentityReference\n  type: Property\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets the <xref href=\"System.Security.Principal.IdentityReference\"></xref> to which this rule applies.\n  syntax:\n    content: public System.Security.Principal.IdentityReference IdentityReference { get; }\n    return:\n      type: System.Security.Principal.IdentityReference\n      description: The <xref href=\"System.Security.Principal.IdentityReference\"></xref> to which this rule applies.\n  overload: System.Security.AccessControl.AuthorizationRule.IdentityReference*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/AuthorizationRule.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.AuthorizationRule.InheritanceFlags\n  commentId: P:System.Security.AccessControl.AuthorizationRule.InheritanceFlags\n  id: InheritanceFlags\n  parent: System.Security.AccessControl.AuthorizationRule\n  langs:\n  - csharp\n  name: InheritanceFlags\n  nameWithType: AuthorizationRule.InheritanceFlags\n  fullName: AuthorizationRule.InheritanceFlags\n  type: Property\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets the value of flags that determine how this rule is inherited by child objects.\n  syntax:\n    content: public System.Security.AccessControl.InheritanceFlags InheritanceFlags { get; }\n    return:\n      type: System.Security.AccessControl.InheritanceFlags\n      description: A bitwise combination of the enumeration values.\n  overload: System.Security.AccessControl.AuthorizationRule.InheritanceFlags*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/AuthorizationRule.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.AuthorizationRule.IsInherited\n  commentId: P:System.Security.AccessControl.AuthorizationRule.IsInherited\n  id: IsInherited\n  parent: System.Security.AccessControl.AuthorizationRule\n  langs:\n  - csharp\n  name: IsInherited\n  nameWithType: AuthorizationRule.IsInherited\n  fullName: AuthorizationRule.IsInherited\n  type: Property\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets a value indicating whether this rule is explicitly set or is inherited from a parent container object.\n  syntax:\n    content: public bool IsInherited { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if this rule is not explicitly set but is instead inherited from a parent container.'\n  overload: System.Security.AccessControl.AuthorizationRule.IsInherited*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/AuthorizationRule.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.AuthorizationRule.PropagationFlags\n  commentId: P:System.Security.AccessControl.AuthorizationRule.PropagationFlags\n  id: PropagationFlags\n  parent: System.Security.AccessControl.AuthorizationRule\n  langs:\n  - csharp\n  name: PropagationFlags\n  nameWithType: AuthorizationRule.PropagationFlags\n  fullName: AuthorizationRule.PropagationFlags\n  type: Property\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets the value of the propagation flags, which determine how inheritance of this rule is propagated to child objects. This property is significant only when the value of the <xref href=\"System.Security.AccessControl.InheritanceFlags\"></xref> enumeration is not <xref href=\"System.Security.AccessControl.InheritanceFlags.None\"></xref>.\n  syntax:\n    content: public System.Security.AccessControl.PropagationFlags PropagationFlags { get; }\n    return:\n      type: System.Security.AccessControl.PropagationFlags\n      description: A bitwise combination of the enumeration values.\n  overload: System.Security.AccessControl.AuthorizationRule.PropagationFlags*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/AuthorizationRule.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.Security.AccessControl.AuthorizationRule.#ctor(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)\n  parent: System.Security.AccessControl.AuthorizationRule\n  isExternal: false\n  name: AuthorizationRule(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags)\n  nameWithType: AuthorizationRule.AuthorizationRule(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags)\n  fullName: AuthorizationRule.AuthorizationRule(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags)\n- uid: System.Security.Principal.IdentityReference\n  parent: System.Security.Principal\n  isExternal: false\n  name: IdentityReference\n  nameWithType: IdentityReference\n  fullName: System.Security.Principal.IdentityReference\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.AccessControl.InheritanceFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: InheritanceFlags\n  nameWithType: InheritanceFlags\n  fullName: System.Security.AccessControl.InheritanceFlags\n- uid: System.Security.AccessControl.PropagationFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: PropagationFlags\n  nameWithType: PropagationFlags\n  fullName: System.Security.AccessControl.PropagationFlags\n- uid: System.Security.AccessControl.AuthorizationRule.AccessMask\n  parent: System.Security.AccessControl.AuthorizationRule\n  isExternal: false\n  name: AccessMask\n  nameWithType: AuthorizationRule.AccessMask\n  fullName: AuthorizationRule.AccessMask\n- uid: System.Security.AccessControl.AuthorizationRule.IdentityReference\n  parent: System.Security.AccessControl.AuthorizationRule\n  isExternal: false\n  name: IdentityReference\n  nameWithType: AuthorizationRule.IdentityReference\n  fullName: AuthorizationRule.IdentityReference\n- uid: System.Security.AccessControl.AuthorizationRule.InheritanceFlags\n  parent: System.Security.AccessControl.AuthorizationRule\n  isExternal: false\n  name: InheritanceFlags\n  nameWithType: AuthorizationRule.InheritanceFlags\n  fullName: AuthorizationRule.InheritanceFlags\n- uid: System.Security.AccessControl.AuthorizationRule.IsInherited\n  parent: System.Security.AccessControl.AuthorizationRule\n  isExternal: false\n  name: IsInherited\n  nameWithType: AuthorizationRule.IsInherited\n  fullName: AuthorizationRule.IsInherited\n- uid: System.Security.AccessControl.AuthorizationRule.PropagationFlags\n  parent: System.Security.AccessControl.AuthorizationRule\n  isExternal: false\n  name: PropagationFlags\n  nameWithType: AuthorizationRule.PropagationFlags\n  fullName: AuthorizationRule.PropagationFlags\n- uid: System.Security.AccessControl.AuthorizationRule.#ctor*\n  parent: System.Security.AccessControl.AuthorizationRule\n  isExternal: false\n  name: AuthorizationRule\n  nameWithType: AuthorizationRule.AuthorizationRule\n  fullName: AuthorizationRule.AuthorizationRule\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/AuthorizationRule.xml\n- uid: System.Security.AccessControl.AuthorizationRule.AccessMask*\n  parent: System.Security.AccessControl.AuthorizationRule\n  isExternal: false\n  name: AccessMask\n  nameWithType: AuthorizationRule.AccessMask\n  fullName: AuthorizationRule.AccessMask\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/AuthorizationRule.xml\n- uid: System.Security.AccessControl.AuthorizationRule.IdentityReference*\n  parent: System.Security.AccessControl.AuthorizationRule\n  isExternal: false\n  name: IdentityReference\n  nameWithType: AuthorizationRule.IdentityReference\n  fullName: AuthorizationRule.IdentityReference\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/AuthorizationRule.xml\n- uid: System.Security.AccessControl.AuthorizationRule.InheritanceFlags*\n  parent: System.Security.AccessControl.AuthorizationRule\n  isExternal: false\n  name: InheritanceFlags\n  nameWithType: AuthorizationRule.InheritanceFlags\n  fullName: AuthorizationRule.InheritanceFlags\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/AuthorizationRule.xml\n- uid: System.Security.AccessControl.AuthorizationRule.IsInherited*\n  parent: System.Security.AccessControl.AuthorizationRule\n  isExternal: false\n  name: IsInherited\n  nameWithType: AuthorizationRule.IsInherited\n  fullName: AuthorizationRule.IsInherited\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/AuthorizationRule.xml\n- uid: System.Security.AccessControl.AuthorizationRule.PropagationFlags*\n  parent: System.Security.AccessControl.AuthorizationRule\n  isExternal: false\n  name: PropagationFlags\n  nameWithType: AuthorizationRule.PropagationFlags\n  fullName: AuthorizationRule.PropagationFlags\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/AuthorizationRule.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}