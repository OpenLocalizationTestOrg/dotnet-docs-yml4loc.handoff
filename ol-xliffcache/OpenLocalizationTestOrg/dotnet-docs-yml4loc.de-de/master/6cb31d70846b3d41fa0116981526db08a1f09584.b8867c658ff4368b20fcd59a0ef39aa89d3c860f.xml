{"nodes":[{"content":"A factory that creates new instances of a part that provides the specified export, with attached metadata.","nodes":[{"pos":[0,106],"content":"A factory that creates new instances of a part that provides the specified export, with attached metadata.","nodes":[{"content":"A factory that creates new instances of a part that provides the specified export, with attached metadata.","pos":[0,106]}]}],"pos":[658,765],"yaml":true},{"content":"<xref:System.ComponentModel.Composition.ExportFactory%602> extends <xref:System.ComponentModel.Composition.ExportFactory%601> to include a metadata object, in much the same way that <xref:System.Lazy%602> extends <xref:System.Lazy%601>. For more information, see <xref:System.ComponentModel.Composition.ExportFactory%601> and <xref:System.Lazy%601>.","nodes":[{"pos":[0,349],"content":"<xref:System.ComponentModel.Composition.ExportFactory%602> extends <xref:System.ComponentModel.Composition.ExportFactory%601> to include a metadata object, in much the same way that <xref:System.Lazy%602> extends <xref:System.Lazy%601>. For more information, see <xref:System.ComponentModel.Composition.ExportFactory%601> and <xref:System.Lazy%601>.","nodes":[{"content":"<xref:System.ComponentModel.Composition.ExportFactory%602> extends <xref:System.ComponentModel.Composition.ExportFactory%601> to include a metadata object, in much the same way that <xref:System.Lazy%602> extends <xref:System.Lazy%601>. For more information, see <xref:System.ComponentModel.Composition.ExportFactory%601> and <xref:System.Lazy%601>.","pos":[0,349],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ComponentModel.Composition.ExportFactory%602&gt;</ph> extends <ph id=\"ph2\">&lt;xref:System.ComponentModel.Composition.ExportFactory%601&gt;</ph> to include a metadata object, in much the same way that <ph id=\"ph3\">&lt;xref:System.Lazy%602&gt;</ph> extends <ph id=\"ph4\">&lt;xref:System.Lazy%601&gt;</ph>.","pos":[0,236],"source":"<xref:System.ComponentModel.Composition.ExportFactory%602> extends <xref:System.ComponentModel.Composition.ExportFactory%601> to include a metadata object, in much the same way that <xref:System.Lazy%602> extends <xref:System.Lazy%601>."},{"content":"For more information, see <ph id=\"ph1\">&lt;xref:System.ComponentModel.Composition.ExportFactory%601&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Lazy%601&gt;</ph>.","pos":[237,349],"source":" For more information, see <xref:System.ComponentModel.Composition.ExportFactory%601> and <xref:System.Lazy%601>."}]}]}],"pos":[776,1126],"yaml":true,"extradata":"MT"},{"content":"The type of the created part.","nodes":[{"pos":[0,29],"content":"The type of the created part.","nodes":[{"content":"The type of the created part.","pos":[0,29]}]}],"pos":[1295,1325],"yaml":true},{"content":"The type of the created part's metadata.","nodes":[{"pos":[0,40],"content":"The type of the created part's metadata.","nodes":[{"content":"The type of the created part's metadata.","pos":[0,40]}]}],"pos":[1364,1405],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.ExportFactory`2\"></xref> class.","nodes":[{"pos":[0,111],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Composition.ExportFactory`2\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.ExportFactory`2\"></xref> class."}],"pos":[3466,3578],"yaml":true},{"content":"A function that returns the exported value and an <xref href=\"System.Action\"></xref> that releases it.","nodes":[{"pos":[0,102],"content":"A function that returns the exported value and an <ph id=\"ph1\">&lt;xref href=\"System.Action\"&gt;&lt;/xref&gt;</ph> that releases it.","source":"A function that returns the exported value and an <xref href=\"System.Action\"></xref> that releases it."}],"pos":[3825,3928],"yaml":true},{"content":"The metadata to attach to the created parts.","nodes":[{"pos":[0,44],"content":"The metadata to attach to the created parts.","nodes":[{"content":"The metadata to attach to the created parts.","pos":[0,44]}]}],"pos":[3988,4033],"yaml":true},{"content":"Gets the metadata to be attached to the created parts.","nodes":[{"pos":[0,54],"content":"Gets the metadata to be attached to the created parts.","nodes":[{"content":"Gets the metadata to be attached to the created parts.","pos":[0,54]}]}],"pos":[5272,5327],"yaml":true},{"content":"A metadata object that will be attached to the created parts.","nodes":[{"pos":[0,61],"content":"A metadata object that will be attached to the created parts.","nodes":[{"content":"A metadata object that will be attached to the created parts.","pos":[0,61]}]}],"pos":[5438,5500],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.Composition.ExportFactory`2\n  commentId: T:System.ComponentModel.Composition.ExportFactory`2\n  id: ExportFactory`2\n  children:\n  - System.ComponentModel.Composition.ExportFactory`2.#ctor(System.Func{System.Tuple{`0,System.Action}},`1)\n  - System.ComponentModel.Composition.ExportFactory`2.Metadata\n  langs:\n  - csharp\n  name: ExportFactory<T,TMetadata>\n  nameWithType: ExportFactory<T,TMetadata>\n  fullName: System.ComponentModel.Composition.ExportFactory<T,TMetadata>\n  type: Class\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  summary: A factory that creates new instances of a part that provides the specified export, with attached metadata.\n  remarks: <xref:System.ComponentModel.Composition.ExportFactory%602> extends <xref:System.ComponentModel.Composition.ExportFactory%601> to include a metadata object, in much the same way that <xref:System.Lazy%602> extends <xref:System.Lazy%601>. For more information, see <xref:System.ComponentModel.Composition.ExportFactory%601> and <xref:System.Lazy%601>.\n  syntax:\n    content: 'public class ExportFactory<T,TMetadata> : System.ComponentModel.Composition.ExportFactory<T>'\n    typeParameters:\n    - id: T\n      description: The type of the created part.\n    - id: TMetadata\n      description: The type of the created part's metadata.\n  inheritance:\n  - System.Object\n  - System.ComponentModel.Composition.ExportFactory`1\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.Composition.ExportFactory`1.CreateExport\n  - System.ComponentModel.Composition.ExportFactory`1.OnFilterScopedCatalog(System.ComponentModel.Composition.Primitives.ComposablePartDefinition)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition/ExportFactory`2.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.ExportFactory`2.#ctor(System.Func{System.Tuple{`0,System.Action}},`1)\n  commentId: M:System.ComponentModel.Composition.ExportFactory`2.#ctor(System.Func{System.Tuple{`0,System.Action}},`1)\n  id: '#ctor(System.Func{System.Tuple{`0,System.Action}},`1)'\n  parent: System.ComponentModel.Composition.ExportFactory`2\n  langs:\n  - csharp\n  name: ExportFactory<T,TMetadata>(Func<Tuple<T,Action>>, TMetadata)\n  nameWithType: ExportFactory<T,TMetadata>.ExportFactory<T,TMetadata>(Func<Tuple<T,Action>>, TMetadata)\n  fullName: ExportFactory<T,TMetadata>.ExportFactory<T,TMetadata>(Func<Tuple<T,Action>>, TMetadata)\n  type: Constructor\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.ExportFactory`2\"></xref> class.\n  syntax:\n    content: public ExportFactory (Func<Tuple<T,Action>> exportLifetimeContextCreator, TMetadata metadata);\n    parameters:\n    - id: exportLifetimeContextCreator\n      type: System.Func{System.Tuple{T,System.Action}}\n      description: A function that returns the exported value and an <xref href=\"System.Action\"></xref> that releases it.\n    - id: metadata\n      type: TMetadata\n      description: The metadata to attach to the created parts.\n  overload: System.ComponentModel.Composition.ExportFactory`2.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition/ExportFactory`2.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.ExportFactory`2.Metadata\n  commentId: P:System.ComponentModel.Composition.ExportFactory`2.Metadata\n  id: Metadata\n  parent: System.ComponentModel.Composition.ExportFactory`2\n  langs:\n  - csharp\n  name: Metadata\n  nameWithType: ExportFactory<T,TMetadata>.Metadata\n  fullName: ExportFactory<T,TMetadata>.Metadata\n  type: Property\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  summary: Gets the metadata to be attached to the created parts.\n  syntax:\n    content: public TMetadata Metadata { get; }\n    return:\n      type: TMetadata\n      description: A metadata object that will be attached to the created parts.\n  overload: System.ComponentModel.Composition.ExportFactory`2.Metadata*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition/ExportFactory`2.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.ComponentModel.Composition.ExportFactory`1\n  parent: System.ComponentModel.Composition\n  isExternal: false\n  name: ExportFactory<T>\n  nameWithType: ExportFactory<T>\n  fullName: System.ComponentModel.Composition.ExportFactory<T>\n- uid: System.ComponentModel.Composition.ExportFactory`2.#ctor(System.Func{System.Tuple{`0,System.Action}},`1)\n  parent: System.ComponentModel.Composition.ExportFactory`2\n  isExternal: false\n  name: ExportFactory<T,TMetadata>(Func<Tuple<T,Action>>, TMetadata)\n  nameWithType: ExportFactory<T,TMetadata>.ExportFactory<T,TMetadata>(Func<Tuple<T,Action>>, TMetadata)\n  fullName: ExportFactory<T,TMetadata>.ExportFactory<T,TMetadata>(Func<Tuple<T,Action>>, TMetadata)\n- uid: System.Func`1\n  name: Func<TResult>\n  nameWithType: Func<TResult>\n  fullName: System.Func<TResult>\n- uid: System.Tuple`2\n  name: Tuple<T1,T2>\n  nameWithType: Tuple<T1,T2>\n  fullName: System.Tuple<T1,T2>\n- uid: T\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Action\n  name: Action\n  nameWithType: Action\n  fullName: System.Action\n- uid: System.Func{System.Tuple{T,System.Action}}\n  parent: System\n  isExternal: false\n  name: Func<Tuple<T,Action>>\n  nameWithType: Func<Tuple<T,Action>>\n  fullName: System.Func<System.Tuple<T,System.Action>>\n  spec.csharp:\n  - uid: System.Func`1\n    name: Func\n    nameWithType: Func\n    fullName: System.Func\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Tuple`2\n    name: Tuple\n    nameWithType: Tuple\n    fullName: System.Tuple\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: T\n    name: T\n    nameWithType: T\n    fullName: T\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Action\n    name: Action\n    nameWithType: Action\n    fullName: System.Action\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: TMetadata\n  isExternal: true\n  name: TMetadata\n  nameWithType: TMetadata\n  fullName: TMetadata\n- uid: System.ComponentModel.Composition.ExportFactory`2.Metadata\n  parent: System.ComponentModel.Composition.ExportFactory`2\n  isExternal: false\n  name: Metadata\n  nameWithType: ExportFactory<T,TMetadata>.Metadata\n  fullName: ExportFactory<T,TMetadata>.Metadata\n- uid: System.ComponentModel.Composition.ExportFactory`2.#ctor*\n  parent: System.ComponentModel.Composition.ExportFactory`2\n  isExternal: false\n  name: ExportFactory<T,TMetadata>\n  nameWithType: ExportFactory<T,TMetadata>.ExportFactory<T,TMetadata>\n  fullName: ExportFactory<T,TMetadata>.ExportFactory<T,TMetadata>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition/ExportFactory`2.xml\n- uid: System.ComponentModel.Composition.ExportFactory`2.Metadata*\n  parent: System.ComponentModel.Composition.ExportFactory`2\n  isExternal: false\n  name: Metadata\n  nameWithType: ExportFactory<T,TMetadata>.Metadata\n  fullName: ExportFactory<T,TMetadata>.Metadata\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition/ExportFactory`2.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.ComponentModel.Composition.ExportFactory`1.CreateExport\n  parent: System.ComponentModel.Composition.ExportFactory`1\n  isExternal: false\n  name: CreateExport()\n  nameWithType: ExportFactory<T>.CreateExport()\n  fullName: ExportFactory<T>.CreateExport()\n- uid: System.ComponentModel.Composition.ExportFactory`1.OnFilterScopedCatalog(System.ComponentModel.Composition.Primitives.ComposablePartDefinition)\n  parent: System.ComponentModel.Composition.ExportFactory`1\n  isExternal: false\n  name: OnFilterScopedCatalog(ComposablePartDefinition)\n  nameWithType: ExportFactory<T>.OnFilterScopedCatalog(ComposablePartDefinition)\n  fullName: ExportFactory<T>.OnFilterScopedCatalog(ComposablePartDefinition)\n"}