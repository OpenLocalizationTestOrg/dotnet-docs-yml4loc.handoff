{"nodes":[{"content":"Represents the method that is called when an <xref href=\"System.ServiceModel.InstanceContext\"></xref> object has finished processing.","nodes":[{"pos":[0,133],"content":"Represents the method that is called when an <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.InstanceContext\"&gt;&lt;/xref&gt;</ph> object has finished processing.","source":"Represents the method that is called when an <xref href=\"System.ServiceModel.InstanceContext\"></xref> object has finished processing."}],"pos":[491,625],"yaml":true},{"content":"Use an <xref:System.ServiceModel.Dispatcher.InstanceContextIdleCallback> to notify the [!INCLUDE[indigo1](~/includes/indigo1-md.md)] runtime that an <xref:System.ServiceModel.Dispatcher.InstanceContextIdleCallback> object has finished processing. When the <xref:System.ServiceModel.Dispatcher.InstanceContextIdleCallback> object notifies the runtime that the <xref:System.ServiceModel.Dispatcher.InstanceContextIdleCallback> has finished its work, [!INCLUDE[indigo2](~/includes/indigo2-md.md)] calls <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A?displayProperty=fullName> once again. This cycle continues until <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A?displayProperty=fullName> returns `true` and the context is closed and recycled.  \n  \n For more information, see <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.NotifyIdle%2A>.","nodes":[{"pos":[0,789],"content":"Use an <xref:System.ServiceModel.Dispatcher.InstanceContextIdleCallback> to notify the [!INCLUDE[indigo1](~/includes/indigo1-md.md)] runtime that an <xref:System.ServiceModel.Dispatcher.InstanceContextIdleCallback> object has finished processing. When the <xref:System.ServiceModel.Dispatcher.InstanceContextIdleCallback> object notifies the runtime that the <xref:System.ServiceModel.Dispatcher.InstanceContextIdleCallback> has finished its work, [!INCLUDE[indigo2](~/includes/indigo2-md.md)] calls <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A?displayProperty=fullName> once again. This cycle continues until <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A?displayProperty=fullName> returns `true` and the context is closed and recycled.","nodes":[{"content":"Use an <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.InstanceContextIdleCallback&gt;</ph> to notify the <ph id=\"ph2\">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> runtime that an <ph id=\"ph3\">&lt;xref:System.ServiceModel.Dispatcher.InstanceContextIdleCallback&gt;</ph> object has finished processing.","pos":[0,246],"source":"Use an <xref:System.ServiceModel.Dispatcher.InstanceContextIdleCallback> to notify the [!INCLUDE[indigo1](~/includes/indigo1-md.md)] runtime that an <xref:System.ServiceModel.Dispatcher.InstanceContextIdleCallback> object has finished processing."},{"content":"When the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.InstanceContextIdleCallback&gt;</ph> object notifies the runtime that the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Dispatcher.InstanceContextIdleCallback&gt;</ph> has finished its work, <ph id=\"ph3\">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> calls <ph id=\"ph4\">&lt;xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A?displayProperty=fullName&gt;</ph> once again.","pos":[247,609],"source":" When the <xref:System.ServiceModel.Dispatcher.InstanceContextIdleCallback> object notifies the runtime that the <xref:System.ServiceModel.Dispatcher.InstanceContextIdleCallback> has finished its work, [!INCLUDE[indigo2](~/includes/indigo2-md.md)] calls <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A?displayProperty=fullName> once again."},{"content":"This cycle continues until <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A?displayProperty=fullName&gt;</ph> returns <ph id=\"ph2\">`true`</ph> and the context is closed and recycled.","pos":[610,789],"source":" This cycle continues until <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A?displayProperty=fullName> returns `true` and the context is closed and recycled."}]},{"pos":[796,899],"content":"For more information, see <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.NotifyIdle%2A>.","nodes":[{"content":"For more information, see <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.NotifyIdle%2A&gt;</ph>.","pos":[0,103],"source":"For more information, see <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.NotifyIdle%2A>."}]}],"pos":[636,1540],"yaml":true,"extradata":"MT"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Dispatcher.InstanceContextIdleCallback\n  commentId: T:System.ServiceModel.Dispatcher.InstanceContextIdleCallback\n  id: InstanceContextIdleCallback\n  langs:\n  - csharp\n  name: InstanceContextIdleCallback\n  nameWithType: InstanceContextIdleCallback\n  fullName: System.ServiceModel.Dispatcher.InstanceContextIdleCallback\n  type: Delegate\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Represents the method that is called when an <xref href=\"System.ServiceModel.InstanceContext\"></xref> object has finished processing.\n  remarks: \"Use an <xref:System.ServiceModel.Dispatcher.InstanceContextIdleCallback> to notify the [!INCLUDE[indigo1](~/includes/indigo1-md.md)] runtime that an <xref:System.ServiceModel.Dispatcher.InstanceContextIdleCallback> object has finished processing. When the <xref:System.ServiceModel.Dispatcher.InstanceContextIdleCallback> object notifies the runtime that the <xref:System.ServiceModel.Dispatcher.InstanceContextIdleCallback> has finished its work, [!INCLUDE[indigo2](~/includes/indigo2-md.md)] calls <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A?displayProperty=fullName> once again. This cycle continues until <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A?displayProperty=fullName> returns `true` and the context is closed and recycled.  \\n  \\n For more information, see <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.NotifyIdle%2A>.\"\n  syntax:\n    content: public delegate void InstanceContextIdleCallback(InstanceContext instanceContext);\n  inheritance:\n  - System.Object\n  - System.Delegate\n  extensionMethods:\n  - System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/InstanceContextIdleCallback.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Delegate\n  parent: System\n  isExternal: false\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  parent: System.Reflection.RuntimeReflectionExtensions\n  isExternal: false\n  name: GetMethodInfo(Delegate)\n  nameWithType: RuntimeReflectionExtensions.GetMethodInfo(Delegate)\n  fullName: RuntimeReflectionExtensions.GetMethodInfo(Delegate)\n"}