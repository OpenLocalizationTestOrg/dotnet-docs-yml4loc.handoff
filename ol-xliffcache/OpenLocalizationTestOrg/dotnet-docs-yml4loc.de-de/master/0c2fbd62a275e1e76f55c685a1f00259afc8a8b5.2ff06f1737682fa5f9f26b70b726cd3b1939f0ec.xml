{"nodes":[{"content":"Represents an array of <xref href=\"System.AddIn.Contract.RemoteArgument\"></xref> objects.","nodes":[{"pos":[0,89],"content":"Represents an array of <ph id=\"ph1\">&lt;xref href=\"System.AddIn.Contract.RemoteArgument\"&gt;&lt;/xref&gt;</ph> objects.","source":"Represents an array of <xref href=\"System.AddIn.Contract.RemoteArgument\"></xref> objects."}],"pos":[739,829],"yaml":true},{"content":"Use an <xref:System.AddIn.Contract.Collections.IRemoteArgumentArrayContract> to pass an array of <xref:System.AddIn.Contract.RemoteArgument> objects between contracts by reference.  \n  \n An <xref:System.AddIn.Contract.Collections.IRemoteArgumentArrayContract> does not dynamically resize itself. If you need to use a collection that dynamically resizes itself, use the <xref:System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract> interface.","nodes":[{"pos":[0,180],"content":"Use an <xref:System.AddIn.Contract.Collections.IRemoteArgumentArrayContract> to pass an array of <xref:System.AddIn.Contract.RemoteArgument> objects between contracts by reference.","nodes":[{"content":"Use an <ph id=\"ph1\">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentArrayContract&gt;</ph> to pass an array of <ph id=\"ph2\">&lt;xref:System.AddIn.Contract.RemoteArgument&gt;</ph> objects between contracts by reference.","pos":[0,180],"source":"Use an <xref:System.AddIn.Contract.Collections.IRemoteArgumentArrayContract> to pass an array of <xref:System.AddIn.Contract.RemoteArgument> objects between contracts by reference."}]},{"pos":[187,453],"content":"An <xref:System.AddIn.Contract.Collections.IRemoteArgumentArrayContract> does not dynamically resize itself. If you need to use a collection that dynamically resizes itself, use the <xref:System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract> interface.","nodes":[{"content":"An <xref:System.AddIn.Contract.Collections.IRemoteArgumentArrayContract> does not dynamically resize itself. If you need to use a collection that dynamically resizes itself, use the <xref:System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract> interface.","pos":[0,266],"nodes":[{"content":"An <ph id=\"ph1\">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentArrayContract&gt;</ph> does not dynamically resize itself.","pos":[0,108],"source":"An <xref:System.AddIn.Contract.Collections.IRemoteArgumentArrayContract> does not dynamically resize itself."},{"content":"If you need to use a collection that dynamically resizes itself, use the <ph id=\"ph1\">&lt;xref:System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract&gt;</ph> interface.","pos":[109,266],"source":" If you need to use a collection that dynamically resizes itself, use the <xref:System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract> interface."}]}]}],"pos":[840,1298],"yaml":true,"extradata":"MT"},{"content":"Returns the element at the specified index.","nodes":[{"pos":[0,43],"content":"Returns the element at the specified index.","nodes":[{"content":"Returns the element at the specified index.","pos":[0,43]}]}],"pos":[2742,2786],"yaml":true},{"content":"The zero-based index of the element to return.","nodes":[{"pos":[0,46],"content":"The zero-based index of the element to return.","nodes":[{"content":"The zero-based index of the element to return.","pos":[0,46]}]}],"pos":[2950,2997],"yaml":true},{"content":"The element at the specified index.","nodes":[{"pos":[0,35],"content":"The element at the specified index.","nodes":[{"content":"The element at the specified index.","pos":[0,35]}]}],"pos":[3077,3113],"yaml":true},{"content":"<code>index</code> is less than zero.  \n  \n -or-  \n  \n <code>index</code> is equal to or greater than the return value of <xref href=\"System.AddIn.Contract.Collections.IRemoteArgumentCollectionContract.GetCount\"></xref>.","nodes":[{"pos":[0,37],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.","source":"<code>index</code> is less than zero."},{"pos":[44,48],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[55,220],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is equal to or greater than the return value of <ph id=\"ph2\">&lt;xref href=\"System.AddIn.Contract.Collections.IRemoteArgumentCollectionContract.GetCount\"&gt;&lt;/xref&gt;</ph>.","source":"<code>index</code> is equal to or greater than the return value of <xref href=\"System.AddIn.Contract.Collections.IRemoteArgumentCollectionContract.GetCount\"></xref>."}],"pos":[3319,3548],"yaml":true},{"content":"Replaces the element at the specified index with the specified <xref href=\"System.AddIn.Contract.RemoteArgument\"></xref>.","nodes":[{"pos":[0,121],"content":"Replaces the element at the specified index with the specified <ph id=\"ph1\">&lt;xref href=\"System.AddIn.Contract.RemoteArgument\"&gt;&lt;/xref&gt;</ph>.","source":"Replaces the element at the specified index with the specified <xref href=\"System.AddIn.Contract.RemoteArgument\"></xref>."}],"pos":[4835,4957],"yaml":true},{"content":"The zero-based index of the element to replace.","nodes":[{"pos":[0,47],"content":"The zero-based index of the element to replace.","nodes":[{"content":"The zero-based index of the element to replace.","pos":[0,47]}]}],"pos":[5133,5181],"yaml":true},{"content":"The new value for the element at the specified index.","nodes":[{"pos":[0,53],"content":"The new value for the element at the specified index.","nodes":[{"content":"The new value for the element at the specified index.","pos":[0,53]}]}],"pos":[5265,5319],"yaml":true},{"content":"<code>index</code> is less than zero.  \n  \n -or-  \n  \n <code>index</code> is equal to or greater than the return value of <xref href=\"System.AddIn.Contract.Collections.IRemoteArgumentCollectionContract.GetCount\"></xref>.","nodes":[{"pos":[0,37],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.","source":"<code>index</code> is less than zero."},{"pos":[44,48],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[55,220],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is equal to or greater than the return value of <ph id=\"ph2\">&lt;xref href=\"System.AddIn.Contract.Collections.IRemoteArgumentCollectionContract.GetCount\"&gt;&lt;/xref&gt;</ph>.","source":"<code>index</code> is equal to or greater than the return value of <xref href=\"System.AddIn.Contract.Collections.IRemoteArgumentCollectionContract.GetCount\"></xref>."}],"pos":[5525,5754],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.AddIn.Contract.Collections.IRemoteArgumentArrayContract\n  commentId: T:System.AddIn.Contract.Collections.IRemoteArgumentArrayContract\n  id: IRemoteArgumentArrayContract\n  children:\n  - System.AddIn.Contract.Collections.IRemoteArgumentArrayContract.GetItem(System.Int32)\n  - System.AddIn.Contract.Collections.IRemoteArgumentArrayContract.SetItem(System.Int32,System.AddIn.Contract.RemoteArgument)\n  langs:\n  - csharp\n  name: IRemoteArgumentArrayContract\n  nameWithType: IRemoteArgumentArrayContract\n  fullName: System.AddIn.Contract.Collections.IRemoteArgumentArrayContract\n  type: Interface\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract.Collections\n  summary: Represents an array of <xref href=\"System.AddIn.Contract.RemoteArgument\"></xref> objects.\n  remarks: \"Use an <xref:System.AddIn.Contract.Collections.IRemoteArgumentArrayContract> to pass an array of <xref:System.AddIn.Contract.RemoteArgument> objects between contracts by reference.  \\n  \\n An <xref:System.AddIn.Contract.Collections.IRemoteArgumentArrayContract> does not dynamically resize itself. If you need to use a collection that dynamically resizes itself, use the <xref:System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract> interface.\"\n  syntax:\n    content: 'public interface IRemoteArgumentArrayContract : System.AddIn.Contract.Collections.IRemoteArgumentCollectionContract'\n  derivedClasses:\n  - System.AddIn.Contract.Collections.IRemoteArgumentArrayListContract\n  implements:\n  - System.AddIn.Contract.Collections.IRemoteArgumentCollectionContract\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract.Collections/IRemoteArgumentArrayContract.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Contract.Collections.IRemoteArgumentArrayContract.GetItem(System.Int32)\n  commentId: M:System.AddIn.Contract.Collections.IRemoteArgumentArrayContract.GetItem(System.Int32)\n  id: GetItem(System.Int32)\n  parent: System.AddIn.Contract.Collections.IRemoteArgumentArrayContract\n  langs:\n  - csharp\n  name: GetItem(Int32)\n  nameWithType: IRemoteArgumentArrayContract.GetItem(Int32)\n  fullName: IRemoteArgumentArrayContract.GetItem(Int32)\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract.Collections\n  summary: Returns the element at the specified index.\n  syntax:\n    content: public System.AddIn.Contract.RemoteArgument GetItem (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the element to return.\n    return:\n      type: System.AddIn.Contract.RemoteArgument\n      description: The element at the specified index.\n  overload: System.AddIn.Contract.Collections.IRemoteArgumentArrayContract.GetItem*\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: \"<code>index</code> is less than zero.  \\n  \\n -or-  \\n  \\n <code>index</code> is equal to or greater than the return value of <xref href=\\\"System.AddIn.Contract.Collections.IRemoteArgumentCollectionContract.GetCount\\\"></xref>.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract.Collections/IRemoteArgumentArrayContract.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Contract.Collections.IRemoteArgumentArrayContract.SetItem(System.Int32,System.AddIn.Contract.RemoteArgument)\n  commentId: M:System.AddIn.Contract.Collections.IRemoteArgumentArrayContract.SetItem(System.Int32,System.AddIn.Contract.RemoteArgument)\n  id: SetItem(System.Int32,System.AddIn.Contract.RemoteArgument)\n  parent: System.AddIn.Contract.Collections.IRemoteArgumentArrayContract\n  langs:\n  - csharp\n  name: SetItem(Int32, RemoteArgument)\n  nameWithType: IRemoteArgumentArrayContract.SetItem(Int32, RemoteArgument)\n  fullName: IRemoteArgumentArrayContract.SetItem(Int32, RemoteArgument)\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract.Collections\n  summary: Replaces the element at the specified index with the specified <xref href=\"System.AddIn.Contract.RemoteArgument\"></xref>.\n  syntax:\n    content: public void SetItem (int index, System.AddIn.Contract.RemoteArgument value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the element to replace.\n    - id: value\n      type: System.AddIn.Contract.RemoteArgument\n      description: The new value for the element at the specified index.\n  overload: System.AddIn.Contract.Collections.IRemoteArgumentArrayContract.SetItem*\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: \"<code>index</code> is less than zero.  \\n  \\n -or-  \\n  \\n <code>index</code> is equal to or greater than the return value of <xref href=\\\"System.AddIn.Contract.Collections.IRemoteArgumentCollectionContract.GetCount\\\"></xref>.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract.Collections/IRemoteArgumentArrayContract.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.IndexOutOfRangeException\n  parent: System\n  isExternal: false\n  name: IndexOutOfRangeException\n  nameWithType: IndexOutOfRangeException\n  fullName: System.IndexOutOfRangeException\n- uid: System.AddIn.Contract.Collections.IRemoteArgumentArrayContract.GetItem(System.Int32)\n  parent: System.AddIn.Contract.Collections.IRemoteArgumentArrayContract\n  isExternal: false\n  name: GetItem(Int32)\n  nameWithType: IRemoteArgumentArrayContract.GetItem(Int32)\n  fullName: IRemoteArgumentArrayContract.GetItem(Int32)\n- uid: System.AddIn.Contract.RemoteArgument\n  parent: System.AddIn.Contract\n  isExternal: false\n  name: RemoteArgument\n  nameWithType: RemoteArgument\n  fullName: System.AddIn.Contract.RemoteArgument\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.AddIn.Contract.Collections.IRemoteArgumentArrayContract.SetItem(System.Int32,System.AddIn.Contract.RemoteArgument)\n  parent: System.AddIn.Contract.Collections.IRemoteArgumentArrayContract\n  isExternal: false\n  name: SetItem(Int32, RemoteArgument)\n  nameWithType: IRemoteArgumentArrayContract.SetItem(Int32, RemoteArgument)\n  fullName: IRemoteArgumentArrayContract.SetItem(Int32, RemoteArgument)\n- uid: System.AddIn.Contract.Collections.IRemoteArgumentArrayContract.GetItem*\n  parent: System.AddIn.Contract.Collections.IRemoteArgumentArrayContract\n  isExternal: false\n  name: GetItem\n  nameWithType: IRemoteArgumentArrayContract.GetItem\n  fullName: IRemoteArgumentArrayContract.GetItem\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract.Collections/IRemoteArgumentArrayContract.xml\n- uid: System.AddIn.Contract.Collections.IRemoteArgumentArrayContract.SetItem*\n  parent: System.AddIn.Contract.Collections.IRemoteArgumentArrayContract\n  isExternal: false\n  name: SetItem\n  nameWithType: IRemoteArgumentArrayContract.SetItem\n  fullName: IRemoteArgumentArrayContract.SetItem\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract.Collections/IRemoteArgumentArrayContract.xml\n- uid: System.AddIn.Contract.Collections.IRemoteArgumentCollectionContract\n  parent: System.AddIn.Contract.Collections\n  isExternal: false\n  name: IRemoteArgumentCollectionContract\n  nameWithType: IRemoteArgumentCollectionContract\n  fullName: System.AddIn.Contract.Collections.IRemoteArgumentCollectionContract\n"}