{"nodes":[{"content":"Represents the callback method that specifies parts of the visual tree to omit from hit test processing","nodes":[{"pos":[0,103],"content":"Represents the callback method that specifies parts of the visual tree to omit from hit test processing","nodes":[{"content":"Represents the callback method that specifies parts of the visual tree to omit from hit test processing","pos":[0,103]}]}],"pos":[412,516],"yaml":true},{"content":"The hit test filter callback method is invoked for all the visual objects that map to the hit test criteria, starting from the visual you specify and descending through its branch of the visual tree. However, you may want to ignore certain branches of the visual tree that you are not interested in processing in your hit test results callback function. The return value of the hit test filter callback function determines what type of action the enumeration of the visual objects should take. For example, if you return the value, <xref:System.Windows.Media.HitTestFilterBehavior.ContinueSkipSelfAndChildren>, you can remove the current visual object and its descendants from the hit test results enumeration. This means that the hit test results callback method will not see these objects in its enumeration.  \n  \n> [!NOTE]\n>  Pruning the visual tree of objects decreases the amount of processing during the hit test results enumeration pass.  \n  \n ![Pruning a visual tree using a hit test filter](~/add/media/filteredvisualtree-01.png \"Pruning a visual tree using a hit test filter\")  \nPruning a visual tree","nodes":[{"pos":[0,810],"content":"The hit test filter callback method is invoked for all the visual objects that map to the hit test criteria, starting from the visual you specify and descending through its branch of the visual tree. However, you may want to ignore certain branches of the visual tree that you are not interested in processing in your hit test results callback function. The return value of the hit test filter callback function determines what type of action the enumeration of the visual objects should take. For example, if you return the value, <xref:System.Windows.Media.HitTestFilterBehavior.ContinueSkipSelfAndChildren>, you can remove the current visual object and its descendants from the hit test results enumeration. This means that the hit test results callback method will not see these objects in its enumeration.","nodes":[{"content":"The hit test filter callback method is invoked for all the visual objects that map to the hit test criteria, starting from the visual you specify and descending through its branch of the visual tree. However, you may want to ignore certain branches of the visual tree that you are not interested in processing in your hit test results callback function. The return value of the hit test filter callback function determines what type of action the enumeration of the visual objects should take. For example, if you return the value, <xref:System.Windows.Media.HitTestFilterBehavior.ContinueSkipSelfAndChildren>, you can remove the current visual object and its descendants from the hit test results enumeration. This means that the hit test results callback method will not see these objects in its enumeration.","pos":[0,810],"nodes":[{"content":"The hit test filter callback method is invoked for all the visual objects that map to the hit test criteria, starting from the visual you specify and descending through its branch of the visual tree.","pos":[0,199]},{"content":"However, you may want to ignore certain branches of the visual tree that you are not interested in processing in your hit test results callback function.","pos":[200,353]},{"content":"The return value of the hit test filter callback function determines what type of action the enumeration of the visual objects should take.","pos":[354,493]},{"content":"For example, if you return the value, <ph id=\"ph1\">&lt;xref:System.Windows.Media.HitTestFilterBehavior.ContinueSkipSelfAndChildren&gt;</ph>, you can remove the current visual object and its descendants from the hit test results enumeration.","pos":[494,710],"source":" For example, if you return the value, <xref:System.Windows.Media.HitTestFilterBehavior.ContinueSkipSelfAndChildren>, you can remove the current visual object and its descendants from the hit test results enumeration."},{"content":"This means that the hit test results callback method will not see these objects in its enumeration.","pos":[711,810]}]}]},{"pos":[818,944],"content":"[!NOTE]\n Pruning the visual tree of objects decreases the amount of processing during the hit test results enumeration pass.","leadings":["","> "],"nodes":[{"content":"Pruning the visual tree of objects decreases the amount of processing during the hit test results enumeration pass.","pos":[9,124]}]},{"pos":[951,1110],"content":"![Pruning a visual tree using a hit test filter](~/add/media/filteredvisualtree-01.png \"Pruning a visual tree using a hit test filter\")  \nPruning a visual tree","nodes":[{"content":"<bpt id=\"p1\">![</bpt>Pruning a visual tree using a hit test filter<ept id=\"p1\">](~/add/media/filteredvisualtree-01.png \"Pruning a visual tree using a hit test filter\")</ept>","pos":[0,135],"source":"![Pruning a visual tree using a hit test filter](~/add/media/filteredvisualtree-01.png \"Pruning a visual tree using a hit test filter\")"},{"content":"Pruning a visual tree","pos":[138,159]}]}],"pos":[527,1648],"yaml":true,"extradata":"MT"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Media.HitTestFilterCallback\n  commentId: T:System.Windows.Media.HitTestFilterCallback\n  id: HitTestFilterCallback\n  langs:\n  - csharp\n  name: HitTestFilterCallback\n  nameWithType: HitTestFilterCallback\n  fullName: System.Windows.Media.HitTestFilterCallback\n  type: Delegate\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Represents the callback method that specifies parts of the visual tree to omit from hit test processing\n  remarks: \"The hit test filter callback method is invoked for all the visual objects that map to the hit test criteria, starting from the visual you specify and descending through its branch of the visual tree. However, you may want to ignore certain branches of the visual tree that you are not interested in processing in your hit test results callback function. The return value of the hit test filter callback function determines what type of action the enumeration of the visual objects should take. For example, if you return the value, <xref:System.Windows.Media.HitTestFilterBehavior.ContinueSkipSelfAndChildren>, you can remove the current visual object and its descendants from the hit test results enumeration. This means that the hit test results callback method will not see these objects in its enumeration.  \\n  \\n> [!NOTE]\\n>  Pruning the visual tree of objects decreases the amount of processing during the hit test results enumeration pass.  \\n  \\n ![Pruning a visual tree using a hit test filter](~/add/media/filteredvisualtree-01.png \\\"Pruning a visual tree using a hit test filter\\\")  \\nPruning a visual tree\"\n  example:\n  - \"The following example shows how to invoke <xref:System.Windows.Media.VisualTreeHelper.HitTest%2A> by using a <xref:System.Windows.Media.HitTestFilterCallback> value. The corresponding hit test callback method is also defined.  \\n  \\n [!code-csharp[HitTestingOverview#104](~/samples/snippets/csharp/VS_Snippets_Wpf/HitTestingOverview/CSharp/Window1.xaml.cs#104)]\\n [!code-vb[HitTestingOverview#104](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HitTestingOverview/visualbasic/window1.xaml.vb#104)]  \\n  \\n The following example shows how to return a <xref:System.Windows.Media.HitTestFilterBehavior> value from a hit test filter callback method.  \\n  \\n [!code-csharp[HitTestingOverview#106](~/samples/snippets/csharp/VS_Snippets_Wpf/HitTestingOverview/CSharp/Window1.xaml.cs#106)]\\n [!code-vb[HitTestingOverview#106](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HitTestingOverview/visualbasic/window1.xaml.vb#106)]\"\n  syntax:\n    content: public delegate System.Windows.Media.HitTestFilterBehavior HitTestFilterCallback(DependencyObject potentialHitTestTarget);\n  inheritance:\n  - System.Object\n  - System.Delegate\n  extensionMethods:\n  - System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/HitTestFilterCallback.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\nreferences:\n- uid: System.Delegate\n  parent: System\n  isExternal: false\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  parent: System.Reflection.RuntimeReflectionExtensions\n  isExternal: false\n  name: GetMethodInfo(Delegate)\n  nameWithType: RuntimeReflectionExtensions.GetMethodInfo(Delegate)\n  fullName: RuntimeReflectionExtensions.GetMethodInfo(Delegate)\n"}