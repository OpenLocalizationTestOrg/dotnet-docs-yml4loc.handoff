{"nodes":[{"content":"Converts an <xref href=\"System.Drawing.Icon\"></xref> object from one data type to another. Access this class through the <xref href=\"System.ComponentModel.TypeDescriptor\"></xref> object.","nodes":[{"pos":[0,186],"content":"Converts an <xref href=\"System.Drawing.Icon\"></xref> object from one data type to another. Access this class through the <xref href=\"System.ComponentModel.TypeDescriptor\"></xref> object.","nodes":[{"content":"Converts an <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Icon\"&gt;&lt;/xref&gt;</ph> object from one data type to another.","pos":[0,90],"source":"Converts an <xref href=\"System.Drawing.Icon\"></xref> object from one data type to another."},{"content":"Access this class through the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.TypeDescriptor\"&gt;&lt;/xref&gt;</ph> object.","pos":[91,186],"source":" Access this class through the <xref href=\"System.ComponentModel.TypeDescriptor\"></xref> object."}]}],"pos":[882,1069],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Drawing.IconConverter\"></xref> class.","nodes":[{"pos":[0,90],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Drawing.IconConverter\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Drawing.IconConverter\"></xref> class."}],"pos":[5769,5860],"yaml":true},{"content":"Determines whether this <xref href=\"System.Drawing.IconConverter\"></xref> can convert an instance of a specified type to an <xref href=\"System.Drawing.Icon\"></xref>, using the specified context.","nodes":[{"pos":[0,194],"content":"Determines whether this <ph id=\"ph1\">&lt;xref href=\"System.Drawing.IconConverter\"&gt;&lt;/xref&gt;</ph> can convert an instance of a specified type to an <ph id=\"ph2\">&lt;xref href=\"System.Drawing.Icon\"&gt;&lt;/xref&gt;</ph>, using the specified context.","source":"Determines whether this <xref href=\"System.Drawing.IconConverter\"></xref> can convert an instance of a specified type to an <xref href=\"System.Drawing.Icon\"></xref>, using the specified context."}],"pos":[7170,7365],"yaml":true},{"content":"This method returns `true` only if `sourceType` is equal to a byte array.","nodes":[{"pos":[0,73],"content":"This method returns <ph id=\"ph1\">`true`</ph> only if <ph id=\"ph2\">`sourceType`</ph> is equal to a byte array.","source":"This method returns `true` only if `sourceType` is equal to a byte array."}],"pos":[7376,7450],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.","nodes":[{"pos":[0,100],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;&lt;/xref&gt;</ph> that provides a format context.","source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."}],"pos":[7692,7793],"yaml":true},{"content":"A <xref href=\"System.Type\"></xref> that specifies the type you want to convert from.","nodes":[{"pos":[0,84],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that specifies the type you want to convert from.","source":"A <xref href=\"System.Type\"></xref> that specifies the type you want to convert from."}],"pos":[7857,7942],"yaml":true},{"content":"This method returns `true` if this <xref href=\"System.Drawing.IconConverter\"></xref> can perform the conversion; otherwise, `false`.","nodes":[{"pos":[0,132],"content":"This method returns <ph id=\"ph1\">`true`</ph> if this <ph id=\"ph2\">&lt;xref href=\"System.Drawing.IconConverter\"&gt;&lt;/xref&gt;</ph> can perform the conversion; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"This method returns `true` if this <xref href=\"System.Drawing.IconConverter\"></xref> can perform the conversion; otherwise, `false`."}],"pos":[8000,8133],"yaml":true},{"content":"Determines whether this <xref href=\"System.Drawing.IconConverter\"></xref> can convert an <xref href=\"System.Drawing.Icon\"></xref> to an instance of a specified type, using the specified context.","nodes":[{"pos":[0,194],"content":"Determines whether this <ph id=\"ph1\">&lt;xref href=\"System.Drawing.IconConverter\"&gt;&lt;/xref&gt;</ph> can convert an <ph id=\"ph2\">&lt;xref href=\"System.Drawing.Icon\"&gt;&lt;/xref&gt;</ph> to an instance of a specified type, using the specified context.","source":"Determines whether this <xref href=\"System.Drawing.IconConverter\"></xref> can convert an <xref href=\"System.Drawing.Icon\"></xref> to an instance of a specified type, using the specified context."}],"pos":[9373,9568],"yaml":true},{"content":"This method returns `true` only if `destinationType` is equal to a byte array or string.","nodes":[{"pos":[0,88],"content":"This method returns <ph id=\"ph1\">`true`</ph> only if <ph id=\"ph2\">`destinationType`</ph> is equal to a byte array or string.","source":"This method returns `true` only if `destinationType` is equal to a byte array or string."}],"pos":[9579,9668],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.","nodes":[{"pos":[0,100],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;&lt;/xref&gt;</ph> that provides a format context.","source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."}],"pos":[9913,10014],"yaml":true},{"content":"A <xref href=\"System.Type\"></xref> that specifies the type you want to convert to.","nodes":[{"pos":[0,82],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that specifies the type you want to convert to.","source":"A <xref href=\"System.Type\"></xref> that specifies the type you want to convert to."}],"pos":[10083,10166],"yaml":true},{"content":"This method returns `true` if this <xref href=\"System.Drawing.IconConverter\"></xref> can perform the conversion; otherwise, `false`.","nodes":[{"pos":[0,132],"content":"This method returns <ph id=\"ph1\">`true`</ph> if this <ph id=\"ph2\">&lt;xref href=\"System.Drawing.IconConverter\"&gt;&lt;/xref&gt;</ph> can perform the conversion; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"This method returns `true` if this <xref href=\"System.Drawing.IconConverter\"></xref> can perform the conversion; otherwise, `false`."}],"pos":[10224,10357],"yaml":true},{"content":"Converts a specified object to an <xref href=\"System.Drawing.Icon\"></xref>.","nodes":[{"pos":[0,75],"content":"Converts a specified object to an <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Icon\"&gt;&lt;/xref&gt;</ph>.","source":"Converts a specified object to an <xref href=\"System.Drawing.Icon\"></xref>."}],"pos":[11739,11815],"yaml":true},{"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.","nodes":[{"pos":[0,100],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;&lt;/xref&gt;</ph> that provides a format context.","source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."}],"pos":[12095,12196],"yaml":true},{"content":"A <xref href=\"System.Globalization.CultureInfo\"></xref> that holds information about a specific culture.","nodes":[{"pos":[0,104],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Globalization.CultureInfo\"&gt;&lt;/xref&gt;</ph> that holds information about a specific culture.","source":"A <xref href=\"System.Globalization.CultureInfo\"></xref> that holds information about a specific culture."}],"pos":[12278,12383],"yaml":true},{"content":"The <xref href=\"System.Object\"></xref> to be converted.","nodes":[{"pos":[0,55],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> to be converted.","source":"The <xref href=\"System.Object\"></xref> to be converted."}],"pos":[12444,12500],"yaml":true},{"content":"If this method succeeds, it returns the <xref href=\"System.Drawing.Icon\"></xref> that it created by converting the specified object. Otherwise, it throws an exception.","nodes":[{"pos":[0,167],"content":"If this method succeeds, it returns the <xref href=\"System.Drawing.Icon\"></xref> that it created by converting the specified object. Otherwise, it throws an exception.","nodes":[{"content":"If this method succeeds, it returns the <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Icon\"&gt;&lt;/xref&gt;</ph> that it created by converting the specified object.","pos":[0,132],"source":"If this method succeeds, it returns the <xref href=\"System.Drawing.Icon\"></xref> that it created by converting the specified object."},{"content":"Otherwise, it throws an exception.","pos":[133,167]}]}],"pos":[12557,12725],"yaml":true},{"content":"The conversion could not be performed.","nodes":[{"pos":[0,38],"content":"The conversion could not be performed.","nodes":[{"content":"The conversion could not be performed.","pos":[0,38]}]}],"pos":[12895,12934],"yaml":true},{"content":"Converts an <xref href=\"System.Drawing.Icon\"></xref> (or an object that can be cast to an <xref href=\"System.Drawing.Icon\"></xref>) to a specified type.","nodes":[{"pos":[0,152],"content":"Converts an <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Icon\"&gt;&lt;/xref&gt;</ph> (or an object that can be cast to an <ph id=\"ph2\">&lt;xref href=\"System.Drawing.Icon\"&gt;&lt;/xref&gt;</ph>) to a specified type.","source":"Converts an <xref href=\"System.Drawing.Icon\"></xref> (or an object that can be cast to an <xref href=\"System.Drawing.Icon\"></xref>) to a specified type."}],"pos":[14286,14439],"yaml":true},{"content":"The default implementation calls the <xref:System.Object.ToString%2A> method on the object if the object is valid and if the destination type is `string`. If this method cannot convert to the destination type, it throws a <xref:System.NotSupportedException> exception.","nodes":[{"pos":[0,268],"content":"The default implementation calls the <xref:System.Object.ToString%2A> method on the object if the object is valid and if the destination type is `string`. If this method cannot convert to the destination type, it throws a <xref:System.NotSupportedException> exception.","nodes":[{"content":"The default implementation calls the <ph id=\"ph1\">&lt;xref:System.Object.ToString%2A&gt;</ph> method on the object if the object is valid and if the destination type is <ph id=\"ph2\">`string`</ph>.","pos":[0,154],"source":"The default implementation calls the <xref:System.Object.ToString%2A> method on the object if the object is valid and if the destination type is `string`."},{"content":"If this method cannot convert to the destination type, it throws a <ph id=\"ph1\">&lt;xref:System.NotSupportedException&gt;</ph> exception.","pos":[155,268],"source":" If this method cannot convert to the destination type, it throws a <xref:System.NotSupportedException> exception."}]}],"pos":[14450,14719],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.","nodes":[{"pos":[0,100],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;&lt;/xref&gt;</ph> that provides a format context.","source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."}],"pos":[15019,15120],"yaml":true},{"content":"A <xref href=\"System.Globalization.CultureInfo\"></xref> object that specifies formatting conventions used by a particular culture.","nodes":[{"pos":[0,130],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Globalization.CultureInfo\"&gt;&lt;/xref&gt;</ph> object that specifies formatting conventions used by a particular culture.","source":"A <xref href=\"System.Globalization.CultureInfo\"></xref> object that specifies formatting conventions used by a particular culture."}],"pos":[15202,15333],"yaml":true},{"content":"The object to convert. This object should be of type icon or some type that can be cast to <xref href=\"System.Drawing.Icon\"></xref>.","nodes":[{"pos":[0,132],"content":"The object to convert. This object should be of type icon or some type that can be cast to <xref href=\"System.Drawing.Icon\"></xref>.","nodes":[{"content":"The object to convert.","pos":[0,22]},{"content":"This object should be of type icon or some type that can be cast to <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Icon\"&gt;&lt;/xref&gt;</ph>.","pos":[23,132],"source":" This object should be of type icon or some type that can be cast to <xref href=\"System.Drawing.Icon\"></xref>."}]}],"pos":[15394,15527],"yaml":true},{"content":"The type to convert the icon to.","nodes":[{"pos":[0,32],"content":"The type to convert the icon to.","nodes":[{"content":"The type to convert the icon to.","pos":[0,32]}]}],"pos":[15596,15629],"yaml":true},{"content":"This method returns the converted object.","nodes":[{"pos":[0,41],"content":"This method returns the converted object.","nodes":[{"content":"This method returns the converted object.","pos":[0,41]}]}],"pos":[15686,15728],"yaml":true},{"content":"The conversion could not be performed.","nodes":[{"pos":[0,38],"content":"The conversion could not be performed.","nodes":[{"content":"The conversion could not be performed.","pos":[0,38]}]}],"pos":[15896,15935],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Drawing.IconConverter\n  commentId: T:System.Drawing.IconConverter\n  id: IconConverter\n  children:\n  - System.Drawing.IconConverter.#ctor\n  - System.Drawing.IconConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.Drawing.IconConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.Drawing.IconConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.Drawing.IconConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  langs:\n  - csharp\n  name: IconConverter\n  nameWithType: IconConverter\n  fullName: System.Drawing.IconConverter\n  type: Class\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Converts an <xref href=\"System.Drawing.Icon\"></xref> object from one data type to another. Access this class through the <xref href=\"System.ComponentModel.TypeDescriptor\"></xref> object.\n  syntax:\n    content: 'public class IconConverter : System.ComponentModel.ExpandableObjectConverter'\n  inheritance:\n  - System.Object\n  - System.ComponentModel.TypeConverter\n  - System.ComponentModel.ExpandableObjectConverter\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.ExpandableObjectConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  - System.ComponentModel.ExpandableObjectConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported\n  - System.ComponentModel.TypeConverter.GetStandardValues\n  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.IsValid(System.Object)\n  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/IconConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.IconConverter.#ctor\n  commentId: M:System.Drawing.IconConverter.#ctor\n  id: '#ctor'\n  parent: System.Drawing.IconConverter\n  langs:\n  - csharp\n  name: IconConverter()\n  nameWithType: IconConverter.IconConverter()\n  fullName: IconConverter.IconConverter()\n  type: Constructor\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Initializes a new instance of the <xref href=\"System.Drawing.IconConverter\"></xref> class.\n  syntax:\n    content: public IconConverter ();\n    parameters: []\n  overload: System.Drawing.IconConverter.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/IconConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.IconConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  commentId: M:System.Drawing.IconConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Drawing.IconConverter\n  langs:\n  - csharp\n  name: CanConvertFrom(ITypeDescriptorContext, Type)\n  nameWithType: IconConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n  fullName: IconConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Determines whether this <xref href=\"System.Drawing.IconConverter\"></xref> can convert an instance of a specified type to an <xref href=\"System.Drawing.Icon\"></xref>, using the specified context.\n  remarks: This method returns `true` only if `sourceType` is equal to a byte array.\n  syntax:\n    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    - id: sourceType\n      type: System.Type\n      description: A <xref href=\"System.Type\"></xref> that specifies the type you want to convert from.\n    return:\n      type: System.Boolean\n      description: This method returns `true` if this <xref href=\"System.Drawing.IconConverter\"></xref> can perform the conversion; otherwise, `false`.\n  overload: System.Drawing.IconConverter.CanConvertFrom*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/IconConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.IconConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  commentId: M:System.Drawing.IconConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Drawing.IconConverter\n  langs:\n  - csharp\n  name: CanConvertTo(ITypeDescriptorContext, Type)\n  nameWithType: IconConverter.CanConvertTo(ITypeDescriptorContext, Type)\n  fullName: IconConverter.CanConvertTo(ITypeDescriptorContext, Type)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Determines whether this <xref href=\"System.Drawing.IconConverter\"></xref> can convert an <xref href=\"System.Drawing.Icon\"></xref> to an instance of a specified type, using the specified context.\n  remarks: This method returns `true` only if `destinationType` is equal to a byte array or string.\n  syntax:\n    content: public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    - id: destinationType\n      type: System.Type\n      description: A <xref href=\"System.Type\"></xref> that specifies the type you want to convert to.\n    return:\n      type: System.Boolean\n      description: This method returns `true` if this <xref href=\"System.Drawing.IconConverter\"></xref> can perform the conversion; otherwise, `false`.\n  overload: System.Drawing.IconConverter.CanConvertTo*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/IconConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.IconConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  commentId: M:System.Drawing.IconConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.Drawing.IconConverter\n  langs:\n  - csharp\n  name: ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  nameWithType: IconConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: IconConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Converts a specified object to an <xref href=\"System.Drawing.Icon\"></xref>.\n  syntax:\n    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: A <xref href=\"System.Globalization.CultureInfo\"></xref> that holds information about a specific culture.\n    - id: value\n      type: System.Object\n      description: The <xref href=\"System.Object\"></xref> to be converted.\n    return:\n      type: System.Object\n      description: If this method succeeds, it returns the <xref href=\"System.Drawing.Icon\"></xref> that it created by converting the specified object. Otherwise, it throws an exception.\n  overload: System.Drawing.IconConverter.ConvertFrom*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The conversion could not be performed.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/IconConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.IconConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  commentId: M:System.Drawing.IconConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.Drawing.IconConverter\n  langs:\n  - csharp\n  name: ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  nameWithType: IconConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  fullName: IconConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Converts an <xref href=\"System.Drawing.Icon\"></xref> (or an object that can be cast to an <xref href=\"System.Drawing.Icon\"></xref>) to a specified type.\n  remarks: The default implementation calls the <xref:System.Object.ToString%2A> method on the object if the object is valid and if the destination type is `string`. If this method cannot convert to the destination type, it throws a <xref:System.NotSupportedException> exception.\n  syntax:\n    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: A <xref href=\"System.Globalization.CultureInfo\"></xref> object that specifies formatting conventions used by a particular culture.\n    - id: value\n      type: System.Object\n      description: The object to convert. This object should be of type icon or some type that can be cast to <xref href=\"System.Drawing.Icon\"></xref>.\n    - id: destinationType\n      type: System.Type\n      description: The type to convert the icon to.\n    return:\n      type: System.Object\n      description: This method returns the converted object.\n  overload: System.Drawing.IconConverter.ConvertTo*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The conversion could not be performed.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/IconConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.ComponentModel.ExpandableObjectConverter\n  parent: System.ComponentModel\n  isExternal: false\n  name: ExpandableObjectConverter\n  nameWithType: ExpandableObjectConverter\n  fullName: System.ComponentModel.ExpandableObjectConverter\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  nameWithType: NotSupportedException\n  fullName: System.NotSupportedException\n- uid: System.Drawing.IconConverter.#ctor\n  parent: System.Drawing.IconConverter\n  isExternal: false\n  name: IconConverter()\n  nameWithType: IconConverter.IconConverter()\n  fullName: IconConverter.IconConverter()\n- uid: System.Drawing.IconConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Drawing.IconConverter\n  isExternal: false\n  name: CanConvertFrom(ITypeDescriptorContext, Type)\n  nameWithType: IconConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n  fullName: IconConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.ITypeDescriptorContext\n  parent: System.ComponentModel\n  isExternal: false\n  name: ITypeDescriptorContext\n  nameWithType: ITypeDescriptorContext\n  fullName: System.ComponentModel.ITypeDescriptorContext\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Drawing.IconConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Drawing.IconConverter\n  isExternal: false\n  name: CanConvertTo(ITypeDescriptorContext, Type)\n  nameWithType: IconConverter.CanConvertTo(ITypeDescriptorContext, Type)\n  fullName: IconConverter.CanConvertTo(ITypeDescriptorContext, Type)\n- uid: System.Drawing.IconConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.Drawing.IconConverter\n  isExternal: false\n  name: ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  nameWithType: IconConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: IconConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Drawing.IconConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.Drawing.IconConverter\n  isExternal: false\n  name: ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  nameWithType: IconConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  fullName: IconConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n- uid: System.Drawing.IconConverter.#ctor*\n  parent: System.Drawing.IconConverter\n  isExternal: false\n  name: IconConverter\n  nameWithType: IconConverter.IconConverter\n  fullName: IconConverter.IconConverter\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/IconConverter.xml\n- uid: System.Drawing.IconConverter.CanConvertFrom*\n  parent: System.Drawing.IconConverter\n  isExternal: false\n  name: CanConvertFrom\n  nameWithType: IconConverter.CanConvertFrom\n  fullName: IconConverter.CanConvertFrom\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/IconConverter.xml\n- uid: System.Drawing.IconConverter.CanConvertTo*\n  parent: System.Drawing.IconConverter\n  isExternal: false\n  name: CanConvertTo\n  nameWithType: IconConverter.CanConvertTo\n  fullName: IconConverter.CanConvertTo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/IconConverter.xml\n- uid: System.Drawing.IconConverter.ConvertFrom*\n  parent: System.Drawing.IconConverter\n  isExternal: false\n  name: ConvertFrom\n  nameWithType: IconConverter.ConvertFrom\n  fullName: IconConverter.ConvertFrom\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/IconConverter.xml\n- uid: System.Drawing.IconConverter.ConvertTo*\n  parent: System.Drawing.IconConverter\n  isExternal: false\n  name: ConvertTo\n  nameWithType: IconConverter.ConvertTo\n  fullName: IconConverter.ConvertTo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/IconConverter.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CanConvertFrom(Type)\n  nameWithType: TypeConverter.CanConvertFrom(Type)\n  fullName: TypeConverter.CanConvertFrom(Type)\n- uid: System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CanConvertTo(Type)\n  nameWithType: TypeConverter.CanConvertTo(Type)\n  fullName: TypeConverter.CanConvertTo(Type)\n- uid: System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFrom(Object)\n  nameWithType: TypeConverter.ConvertFrom(Object)\n  fullName: TypeConverter.ConvertFrom(Object)\n- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromInvariantString(String)\n  nameWithType: TypeConverter.ConvertFromInvariantString(String)\n  fullName: TypeConverter.ConvertFromInvariantString(String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromInvariantString(ITypeDescriptorContext, String)\n  nameWithType: TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext, String)\n  fullName: TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext, String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n  fullName: TypeConverter.ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromString(String)\n  nameWithType: TypeConverter.ConvertFromString(String)\n  fullName: TypeConverter.ConvertFromString(String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromString(ITypeDescriptorContext, String)\n  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext, String)\n  fullName: TypeConverter.ConvertFromString(ITypeDescriptorContext, String)\n- uid: System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertTo(Object, Type)\n  nameWithType: TypeConverter.ConvertTo(Object, Type)\n  fullName: TypeConverter.ConvertTo(Object, Type)\n- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToInvariantString(Object)\n  nameWithType: TypeConverter.ConvertToInvariantString(Object)\n  fullName: TypeConverter.ConvertToInvariantString(Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToInvariantString(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.ConvertToInvariantString(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.ConvertToInvariantString(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: TypeConverter.ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToString(Object)\n  nameWithType: TypeConverter.ConvertToString(Object)\n  fullName: TypeConverter.ConvertToString(Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToString(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.ConvertToString(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CreateInstance(ITypeDescriptorContext, IDictionary)\n  nameWithType: TypeConverter.CreateInstance(ITypeDescriptorContext, IDictionary)\n  fullName: TypeConverter.CreateInstance(ITypeDescriptorContext, IDictionary)\n- uid: System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CreateInstance(IDictionary)\n  nameWithType: TypeConverter.CreateInstance(IDictionary)\n  fullName: TypeConverter.CreateInstance(IDictionary)\n- uid: System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetConvertFromException(Object)\n  nameWithType: TypeConverter.GetConvertFromException(Object)\n  fullName: TypeConverter.GetConvertFromException(Object)\n- uid: System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetConvertToException(Object, Type)\n  nameWithType: TypeConverter.GetConvertToException(Object, Type)\n  fullName: TypeConverter.GetConvertToException(Object, Type)\n- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetCreateInstanceSupported()\n  nameWithType: TypeConverter.GetCreateInstanceSupported()\n  fullName: TypeConverter.GetCreateInstanceSupported()\n- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetCreateInstanceSupported(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext)\n  fullName: TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetProperties(Object)\n  nameWithType: TypeConverter.GetProperties(Object)\n  fullName: TypeConverter.GetProperties(Object)\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetProperties(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.GetProperties(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.GetProperties(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.ExpandableObjectConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  parent: System.ComponentModel.ExpandableObjectConverter\n  isExternal: false\n  name: GetProperties(ITypeDescriptorContext, Object, Attribute[])\n  nameWithType: ExpandableObjectConverter.GetProperties(ITypeDescriptorContext, Object, Attribute[])\n  fullName: ExpandableObjectConverter.GetProperties(ITypeDescriptorContext, Object, Attribute[])\n- uid: System.ComponentModel.ExpandableObjectConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.ExpandableObjectConverter\n  isExternal: false\n  name: GetPropertiesSupported(ITypeDescriptorContext)\n  nameWithType: ExpandableObjectConverter.GetPropertiesSupported(ITypeDescriptorContext)\n  fullName: ExpandableObjectConverter.GetPropertiesSupported(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetPropertiesSupported()\n  nameWithType: TypeConverter.GetPropertiesSupported()\n  fullName: TypeConverter.GetPropertiesSupported()\n- uid: System.ComponentModel.TypeConverter.GetStandardValues\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValues()\n  nameWithType: TypeConverter.GetStandardValues()\n  fullName: TypeConverter.GetStandardValues()\n- uid: System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValues(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetStandardValues(ITypeDescriptorContext)\n  fullName: TypeConverter.GetStandardValues(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesExclusive()\n  nameWithType: TypeConverter.GetStandardValuesExclusive()\n  fullName: TypeConverter.GetStandardValuesExclusive()\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesExclusive(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n  fullName: TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesSupported()\n  nameWithType: TypeConverter.GetStandardValuesSupported()\n  fullName: TypeConverter.GetStandardValuesSupported()\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesSupported(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n  fullName: TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: IsValid(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.IsValid(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.IsValid(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.IsValid(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: IsValid(Object)\n  nameWithType: TypeConverter.IsValid(Object)\n  fullName: TypeConverter.IsValid(Object)\n- uid: System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: SortProperties(PropertyDescriptorCollection, String[])\n  nameWithType: TypeConverter.SortProperties(PropertyDescriptorCollection, String[])\n  fullName: TypeConverter.SortProperties(PropertyDescriptorCollection, String[])\n"}