{"nodes":[{"content":"Contains methods for performing volatile memory operations.","nodes":[{"pos":[0,59],"content":"Contains methods for performing volatile memory operations.","nodes":[{"content":"Contains methods for performing volatile memory operations.","pos":[0,59]}]}],"pos":[1958,2018],"yaml":true},{"content":"On a multiprocessor system, a volatile write operation ensures that a value written to a memory location is immediately visible to all processors. A volatile read operation obtains the very latest value written to a memory location by any processor. These operations might require flushing processor caches, which can affect performance.  \n  \n> [!NOTE]\n>  On a uniprocessor system, volatile reads and writes ensure that a value is read or written to memory and not cached (for example, in a processor register). Thus, you can use these operations to synchronize access to a field that can be updated by another thread or by hardware.  \n  \n Volatile memory operations are for special cases of synchronization, where normal locking is not an acceptable alternative. Under normal circumstances, the C# `lock` statement, the Visual Basic `SyncLock` statement, and the <xref:System.Threading.Monitor> class provide the easiest and least error-prone way of synchronizing access to data, and the <xref:System.Lazy%601> class provides a simple way to write lazy initialization code without directly using double-checked locking.  \n  \n The <xref:System.Threading.Volatile.Read%2A?displayProperty=fullName> and <xref:System.Threading.Volatile.Write%2A?displayProperty=fullName> methods enable functionality that is not supported in languages. For example:  \n  \n-   Some languages, such as Visual Basic, do not recognize the concept of volatile memory operations. The <xref:System.Threading.Volatile> class provides that functionality in such languages.  \n  \n    > [!NOTE]\n    >  Calling one of these methods affects only a single memory access. To provide effective synchronization for a field, all access to the field must use <xref:System.Threading.Volatile.Read%2A?displayProperty=fullName> and <xref:System.Threading.Volatile.Write%2A?displayProperty=fullName>.  \n  \n-   In C#, using the `volatile` modifier on a field guarantees that every access to that field uses the <xref:System.Threading.Volatile.Read%2A?displayProperty=fullName> and <xref:System.Threading.Volatile.Write%2A?displayProperty=fullName> methods, but the `volatile` modifier cannot be applied to array elements. The <xref:System.Threading.Volatile.Read%2A?displayProperty=fullName> and <xref:System.Threading.Volatile.Write%2A?displayProperty=fullName> methods can be used on array elements.","nodes":[{"pos":[0,337],"content":"On a multiprocessor system, a volatile write operation ensures that a value written to a memory location is immediately visible to all processors. A volatile read operation obtains the very latest value written to a memory location by any processor. These operations might require flushing processor caches, which can affect performance.","nodes":[{"content":"On a multiprocessor system, a volatile write operation ensures that a value written to a memory location is immediately visible to all processors. A volatile read operation obtains the very latest value written to a memory location by any processor. These operations might require flushing processor caches, which can affect performance.","pos":[0,337],"nodes":[{"content":"On a multiprocessor system, a volatile write operation ensures that a value written to a memory location is immediately visible to all processors.","pos":[0,146]},{"content":"A volatile read operation obtains the very latest value written to a memory location by any processor.","pos":[147,249]},{"content":"These operations might require flushing processor caches, which can affect performance.","pos":[250,337]}]}]},{"pos":[345,633],"content":"[!NOTE]\n On a uniprocessor system, volatile reads and writes ensure that a value is read or written to memory and not cached (for example, in a processor register). Thus, you can use these operations to synchronize access to a field that can be updated by another thread or by hardware.","leadings":["","> "],"nodes":[{"content":" On a uniprocessor system, volatile reads and writes ensure that a value is read or written to memory and not cached (for example, in a processor register). Thus, you can use these operations to synchronize access to a field that can be updated by another thread or by hardware.","pos":[8,286],"nodes":[{"content":"On a uniprocessor system, volatile reads and writes ensure that a value is read or written to memory and not cached (for example, in a processor register).","pos":[1,156]},{"content":"Thus, you can use these operations to synchronize access to a field that can be updated by another thread or by hardware.","pos":[157,278]}]}]},{"pos":[640,1120],"content":"Volatile memory operations are for special cases of synchronization, where normal locking is not an acceptable alternative. Under normal circumstances, the C# `lock` statement, the Visual Basic `SyncLock` statement, and the <xref:System.Threading.Monitor> class provide the easiest and least error-prone way of synchronizing access to data, and the <xref:System.Lazy%601> class provides a simple way to write lazy initialization code without directly using double-checked locking.","nodes":[{"content":"Volatile memory operations are for special cases of synchronization, where normal locking is not an acceptable alternative.","pos":[0,123]},{"content":"Under normal circumstances, the C# <ph id=\"ph1\">`lock`</ph> statement, the Visual Basic <ph id=\"ph2\">`SyncLock`</ph> statement, and the <ph id=\"ph3\">&lt;xref:System.Threading.Monitor&gt;</ph> class provide the easiest and least error-prone way of synchronizing access to data, and the <ph id=\"ph4\">&lt;xref:System.Lazy%601&gt;</ph> class provides a simple way to write lazy initialization code without directly using double-checked locking.","pos":[124,480],"source":" Under normal circumstances, the C# `lock` statement, the Visual Basic `SyncLock` statement, and the <xref:System.Threading.Monitor> class provide the easiest and least error-prone way of synchronizing access to data, and the <xref:System.Lazy%601> class provides a simple way to write lazy initialization code without directly using double-checked locking."}]},{"pos":[1127,1345],"content":"The <xref:System.Threading.Volatile.Read%2A?displayProperty=fullName> and <xref:System.Threading.Volatile.Write%2A?displayProperty=fullName> methods enable functionality that is not supported in languages. For example:","nodes":[{"content":"The <xref:System.Threading.Volatile.Read%2A?displayProperty=fullName> and <xref:System.Threading.Volatile.Write%2A?displayProperty=fullName> methods enable functionality that is not supported in languages. For example:","pos":[0,218],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Threading.Volatile.Read%2A?displayProperty=fullName&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Threading.Volatile.Write%2A?displayProperty=fullName&gt;</ph> methods enable functionality that is not supported in languages.","pos":[0,205],"source":"The <xref:System.Threading.Volatile.Read%2A?displayProperty=fullName> and <xref:System.Threading.Volatile.Write%2A?displayProperty=fullName> methods enable functionality that is not supported in languages."},{"content":"For example:","pos":[206,218]}]}]},{"pos":[1355,1542],"content":"Some languages, such as Visual Basic, do not recognize the concept of volatile memory operations. The <xref:System.Threading.Volatile> class provides that functionality in such languages.","nodes":[{"content":"Some languages, such as Visual Basic, do not recognize the concept of volatile memory operations. The <xref:System.Threading.Volatile> class provides that functionality in such languages.","pos":[0,187],"nodes":[{"content":"Some languages, such as Visual Basic, do not recognize the concept of volatile memory operations.","pos":[0,97]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Threading.Volatile&gt;</ph> class provides that functionality in such languages.","pos":[98,187],"source":" The <xref:System.Threading.Volatile> class provides that functionality in such languages."}]}]},{"pos":[1554,1855],"content":"[!NOTE]\nCalling one of these methods affects only a single memory access. To provide effective synchronization for a field, all access to the field must use <xref:System.Threading.Volatile.Read%2A?displayProperty=fullName> and <xref:System.Threading.Volatile.Write%2A?displayProperty=fullName>.","leadings":["","    >  "],"nodes":[{"content":"Calling one of these methods affects only a single memory access. To provide effective synchronization for a field, all access to the field must use <xref:System.Threading.Volatile.Read%2A?displayProperty=fullName> and <xref:System.Threading.Volatile.Write%2A?displayProperty=fullName>.","pos":[8,294],"nodes":[{"content":"Calling one of these methods affects only a single memory access.","pos":[0,65]},{"content":"To provide effective synchronization for a field, all access to the field must use <ph id=\"ph1\">&lt;xref:System.Threading.Volatile.Read%2A?displayProperty=fullName&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Threading.Volatile.Write%2A?displayProperty=fullName&gt;</ph>.","pos":[66,286],"source":" To provide effective synchronization for a field, all access to the field must use <xref:System.Threading.Volatile.Read%2A?displayProperty=fullName> and <xref:System.Threading.Volatile.Write%2A?displayProperty=fullName>."}]}]},{"pos":[1865,2355],"content":"In C#, using the `volatile` modifier on a field guarantees that every access to that field uses the <xref:System.Threading.Volatile.Read%2A?displayProperty=fullName> and <xref:System.Threading.Volatile.Write%2A?displayProperty=fullName> methods, but the `volatile` modifier cannot be applied to array elements. The <xref:System.Threading.Volatile.Read%2A?displayProperty=fullName> and <xref:System.Threading.Volatile.Write%2A?displayProperty=fullName> methods can be used on array elements.","nodes":[{"content":"In C#, using the <ph id=\"ph1\">`volatile`</ph> modifier on a field guarantees that every access to that field uses the <ph id=\"ph2\">&lt;xref:System.Threading.Volatile.Read%2A?displayProperty=fullName&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Threading.Volatile.Write%2A?displayProperty=fullName&gt;</ph> methods, but the <ph id=\"ph4\">`volatile`</ph> modifier cannot be applied to array elements.","pos":[0,310],"source":"In C#, using the `volatile` modifier on a field guarantees that every access to that field uses the <xref:System.Threading.Volatile.Read%2A?displayProperty=fullName> and <xref:System.Threading.Volatile.Write%2A?displayProperty=fullName> methods, but the `volatile` modifier cannot be applied to array elements."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Threading.Volatile.Read%2A?displayProperty=fullName&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Threading.Volatile.Write%2A?displayProperty=fullName&gt;</ph> methods can be used on array elements.","pos":[311,490],"source":" The <xref:System.Threading.Volatile.Read%2A?displayProperty=fullName> and <xref:System.Threading.Volatile.Write%2A?displayProperty=fullName> methods can be used on array elements."}]}],"pos":[2029,4401],"yaml":true,"extradata":"MT"},{"content":"Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.","nodes":[{"pos":[0,273],"content":"Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.","nodes":[{"content":"Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.","pos":[0,273],"nodes":[{"content":"Reads the value of the specified field.","pos":[0,39]},{"content":"On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.","pos":[40,273]}]}]}],"pos":[6241,6517],"yaml":true},{"content":"For more information, see the <xref:System.Threading.Volatile> class.","nodes":[{"pos":[0,69],"content":"For more information, see the <xref:System.Threading.Volatile> class.","nodes":[{"content":"For more information, see the <ph id=\"ph1\">&lt;xref:System.Threading.Volatile&gt;</ph> class.","pos":[0,69],"source":"For more information, see the <xref:System.Threading.Volatile> class."}]}],"pos":[6528,6598],"yaml":true,"extradata":"MT"},{"content":"The field to read.","nodes":[{"pos":[0,18],"content":"The field to read.","nodes":[{"content":"The field to read.","pos":[0,18]}]}],"pos":[6747,6766],"yaml":true},{"content":"The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.","nodes":[{"pos":[0,163],"content":"The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.","nodes":[{"content":"The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.","pos":[0,163],"nodes":[{"content":"The value that was read.","pos":[0,24]},{"content":"This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.","pos":[25,163]}]}]}],"pos":[6824,6988],"yaml":true},{"content":"Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.","nodes":[{"pos":[0,273],"content":"Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.","nodes":[{"content":"Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.","pos":[0,273],"nodes":[{"content":"Reads the value of the specified field.","pos":[0,39]},{"content":"On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.","pos":[40,273]}]}]}],"pos":[8492,8768],"yaml":true},{"content":"For more information, see the <xref:System.Threading.Volatile> class.","nodes":[{"pos":[0,69],"content":"For more information, see the <xref:System.Threading.Volatile> class.","nodes":[{"content":"For more information, see the <ph id=\"ph1\">&lt;xref:System.Threading.Volatile&gt;</ph> class.","pos":[0,69],"source":"For more information, see the <xref:System.Threading.Volatile> class."}]}],"pos":[8779,8849],"yaml":true,"extradata":"MT"},{"content":"The field to read.","nodes":[{"pos":[0,18],"content":"The field to read.","nodes":[{"content":"The field to read.","pos":[0,18]}]}],"pos":[8995,9014],"yaml":true},{"content":"The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.","nodes":[{"pos":[0,163],"content":"The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.","nodes":[{"content":"The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.","pos":[0,163],"nodes":[{"content":"The value that was read.","pos":[0,24]},{"content":"This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.","pos":[25,163]}]}]}],"pos":[9069,9233],"yaml":true},{"content":"Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.","nodes":[{"pos":[0,273],"content":"Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.","nodes":[{"content":"Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.","pos":[0,273],"nodes":[{"content":"Reads the value of the specified field.","pos":[0,39]},{"content":"On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.","pos":[40,273]}]}]}],"pos":[10749,11025],"yaml":true},{"content":"For more information, see the <xref:System.Threading.Volatile> class.","nodes":[{"pos":[0,69],"content":"For more information, see the <xref:System.Threading.Volatile> class.","nodes":[{"content":"For more information, see the <ph id=\"ph1\">&lt;xref:System.Threading.Volatile&gt;</ph> class.","pos":[0,69],"source":"For more information, see the <xref:System.Threading.Volatile> class."}]}],"pos":[11036,11106],"yaml":true,"extradata":"MT"},{"content":"The field to read.","nodes":[{"pos":[0,18],"content":"The field to read.","nodes":[{"content":"The field to read.","pos":[0,18]}]}],"pos":[11258,11277],"yaml":true},{"content":"The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.","nodes":[{"pos":[0,163],"content":"The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.","nodes":[{"content":"The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.","pos":[0,163],"nodes":[{"content":"The value that was read.","pos":[0,24]},{"content":"This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.","pos":[25,163]}]}]}],"pos":[11334,11498],"yaml":true},{"content":"Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.","nodes":[{"pos":[0,273],"content":"Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.","nodes":[{"content":"Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.","pos":[0,273],"nodes":[{"content":"Reads the value of the specified field.","pos":[0,39]},{"content":"On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.","pos":[40,273]}]}]}],"pos":[13008,13284],"yaml":true},{"content":"For more information, see the <xref:System.Threading.Volatile> class.","nodes":[{"pos":[0,69],"content":"For more information, see the <xref:System.Threading.Volatile> class.","nodes":[{"content":"For more information, see the <ph id=\"ph1\">&lt;xref:System.Threading.Volatile&gt;</ph> class.","pos":[0,69],"source":"For more information, see the <xref:System.Threading.Volatile> class."}]}],"pos":[13295,13365],"yaml":true,"extradata":"MT"},{"content":"The field to read.","nodes":[{"pos":[0,18],"content":"The field to read.","nodes":[{"content":"The field to read.","pos":[0,18]}]}],"pos":[13514,13533],"yaml":true},{"content":"The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.","nodes":[{"pos":[0,163],"content":"The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.","nodes":[{"content":"The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.","pos":[0,163],"nodes":[{"content":"The value that was read.","pos":[0,24]},{"content":"This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.","pos":[25,163]}]}]}],"pos":[13589,13753],"yaml":true},{"content":"Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.","nodes":[{"pos":[0,273],"content":"Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.","nodes":[{"content":"Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.","pos":[0,273],"nodes":[{"content":"Reads the value of the specified field.","pos":[0,39]},{"content":"On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.","pos":[40,273]}]}]}],"pos":[15263,15539],"yaml":true},{"content":"For more information, see the <xref:System.Threading.Volatile> class.","nodes":[{"pos":[0,69],"content":"For more information, see the <xref:System.Threading.Volatile> class.","nodes":[{"content":"For more information, see the <ph id=\"ph1\">&lt;xref:System.Threading.Volatile&gt;</ph> class.","pos":[0,69],"source":"For more information, see the <xref:System.Threading.Volatile> class."}]}],"pos":[15550,15620],"yaml":true,"extradata":"MT"},{"content":"The field to read.","nodes":[{"pos":[0,18],"content":"The field to read.","nodes":[{"content":"The field to read.","pos":[0,18]}]}],"pos":[15765,15784],"yaml":true},{"content":"The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.","nodes":[{"pos":[0,163],"content":"The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.","nodes":[{"content":"The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.","pos":[0,163],"nodes":[{"content":"The value that was read.","pos":[0,24]},{"content":"This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.","pos":[25,163]}]}]}],"pos":[15840,16004],"yaml":true},{"content":"Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.","nodes":[{"pos":[0,273],"content":"Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.","nodes":[{"content":"Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.","pos":[0,273],"nodes":[{"content":"Reads the value of the specified field.","pos":[0,39]},{"content":"On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.","pos":[40,273]}]}]}],"pos":[17514,17790],"yaml":true},{"content":"For more information, see the <xref:System.Threading.Volatile> class.","nodes":[{"pos":[0,69],"content":"For more information, see the <xref:System.Threading.Volatile> class.","nodes":[{"content":"For more information, see the <ph id=\"ph1\">&lt;xref:System.Threading.Volatile&gt;</ph> class.","pos":[0,69],"source":"For more information, see the <xref:System.Threading.Volatile> class."}]}],"pos":[17801,17871],"yaml":true,"extradata":"MT"},{"content":"The field to read.","nodes":[{"pos":[0,18],"content":"The field to read.","nodes":[{"content":"The field to read.","pos":[0,18]}]}],"pos":[18018,18037],"yaml":true},{"content":"The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.","nodes":[{"pos":[0,163],"content":"The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.","nodes":[{"content":"The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.","pos":[0,163],"nodes":[{"content":"The value that was read.","pos":[0,24]},{"content":"This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.","pos":[25,163]}]}]}],"pos":[18093,18257],"yaml":true},{"content":"Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.","nodes":[{"pos":[0,273],"content":"Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.","nodes":[{"content":"Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.","pos":[0,273],"nodes":[{"content":"Reads the value of the specified field.","pos":[0,39]},{"content":"On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.","pos":[40,273]}]}]}],"pos":[19773,20049],"yaml":true},{"content":"For more information, see the <xref:System.Threading.Volatile> class.","nodes":[{"pos":[0,69],"content":"For more information, see the <xref:System.Threading.Volatile> class.","nodes":[{"content":"For more information, see the <ph id=\"ph1\">&lt;xref:System.Threading.Volatile&gt;</ph> class.","pos":[0,69],"source":"For more information, see the <xref:System.Threading.Volatile> class."}]}],"pos":[20060,20130],"yaml":true,"extradata":"MT"},{"content":"The field to read.","nodes":[{"pos":[0,18],"content":"The field to read.","nodes":[{"content":"The field to read.","pos":[0,18]}]}],"pos":[20282,20301],"yaml":true},{"content":"The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.","nodes":[{"pos":[0,163],"content":"The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.","nodes":[{"content":"The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.","pos":[0,163],"nodes":[{"content":"The value that was read.","pos":[0,24]},{"content":"This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.","pos":[25,163]}]}]}],"pos":[20358,20522],"yaml":true},{"content":"Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.","nodes":[{"pos":[0,273],"content":"Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.","nodes":[{"content":"Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.","pos":[0,273],"nodes":[{"content":"Reads the value of the specified field.","pos":[0,39]},{"content":"On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.","pos":[40,273]}]}]}],"pos":[22032,22308],"yaml":true},{"content":"For more information, see the <xref:System.Threading.Volatile> class.","nodes":[{"pos":[0,69],"content":"For more information, see the <xref:System.Threading.Volatile> class.","nodes":[{"content":"For more information, see the <ph id=\"ph1\">&lt;xref:System.Threading.Volatile&gt;</ph> class.","pos":[0,69],"source":"For more information, see the <xref:System.Threading.Volatile> class."}]}],"pos":[22319,22389],"yaml":true,"extradata":"MT"},{"content":"The field to read.","nodes":[{"pos":[0,18],"content":"The field to read.","nodes":[{"content":"The field to read.","pos":[0,18]}]}],"pos":[22583,22602],"yaml":true},{"content":"The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.","nodes":[{"pos":[0,163],"content":"The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.","nodes":[{"content":"The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.","pos":[0,163],"nodes":[{"content":"The value that was read.","pos":[0,24]},{"content":"This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.","pos":[25,163]}]}]}],"pos":[22658,22822],"yaml":true},{"content":"Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.","nodes":[{"pos":[0,273],"content":"Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.","nodes":[{"content":"Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.","pos":[0,273],"nodes":[{"content":"Reads the value of the specified field.","pos":[0,39]},{"content":"On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.","pos":[40,273]}]}]}],"pos":[24374,24650],"yaml":true},{"content":"For more information, see the <xref:System.Threading.Volatile> class.","nodes":[{"pos":[0,69],"content":"For more information, see the <xref:System.Threading.Volatile> class.","nodes":[{"content":"For more information, see the <ph id=\"ph1\">&lt;xref:System.Threading.Volatile&gt;</ph> class.","pos":[0,69],"source":"For more information, see the <xref:System.Threading.Volatile> class."}]}],"pos":[24661,24731],"yaml":true,"extradata":"MT"},{"content":"The field to read.","nodes":[{"pos":[0,18],"content":"The field to read.","nodes":[{"content":"The field to read.","pos":[0,18]}]}],"pos":[24881,24900],"yaml":true},{"content":"The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.","nodes":[{"pos":[0,163],"content":"The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.","nodes":[{"content":"The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.","pos":[0,163],"nodes":[{"content":"The value that was read.","pos":[0,24]},{"content":"This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.","pos":[25,163]}]}]}],"pos":[24957,25121],"yaml":true},{"content":"Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.","nodes":[{"pos":[0,273],"content":"Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.","nodes":[{"content":"Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.","pos":[0,273],"nodes":[{"content":"Reads the value of the specified field.","pos":[0,39]},{"content":"On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.","pos":[40,273]}]}]}],"pos":[26637,26913],"yaml":true},{"content":"For more information, see the <xref:System.Threading.Volatile> class.","nodes":[{"pos":[0,69],"content":"For more information, see the <xref:System.Threading.Volatile> class.","nodes":[{"content":"For more information, see the <ph id=\"ph1\">&lt;xref:System.Threading.Volatile&gt;</ph> class.","pos":[0,69],"source":"For more information, see the <xref:System.Threading.Volatile> class."}]}],"pos":[26924,26994],"yaml":true,"extradata":"MT"},{"content":"The field to read.","nodes":[{"pos":[0,18],"content":"The field to read.","nodes":[{"content":"The field to read.","pos":[0,18]}]}],"pos":[27191,27210],"yaml":true},{"content":"The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.","nodes":[{"pos":[0,163],"content":"The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.","nodes":[{"content":"The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.","pos":[0,163],"nodes":[{"content":"The value that was read.","pos":[0,24]},{"content":"This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.","pos":[25,163]}]}]}],"pos":[27267,27431],"yaml":true},{"content":"Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.","nodes":[{"pos":[0,273],"content":"Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.","nodes":[{"content":"Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.","pos":[0,273],"nodes":[{"content":"Reads the value of the specified field.","pos":[0,39]},{"content":"On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.","pos":[40,273]}]}]}],"pos":[29045,29321],"yaml":true},{"content":"For more information, see the <xref:System.Threading.Volatile> class.","nodes":[{"pos":[0,69],"content":"For more information, see the <xref:System.Threading.Volatile> class.","nodes":[{"content":"For more information, see the <ph id=\"ph1\">&lt;xref:System.Threading.Volatile&gt;</ph> class.","pos":[0,69],"source":"For more information, see the <xref:System.Threading.Volatile> class."}]}],"pos":[29332,29402],"yaml":true,"extradata":"MT"},{"content":"The field to read.","nodes":[{"pos":[0,18],"content":"The field to read.","nodes":[{"content":"The field to read.","pos":[0,18]}]}],"pos":[29595,29614],"yaml":true},{"content":"The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.","nodes":[{"pos":[0,163],"content":"The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.","nodes":[{"content":"The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.","pos":[0,163],"nodes":[{"content":"The value that was read.","pos":[0,24]},{"content":"This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.","pos":[25,163]}]}]}],"pos":[29671,29835],"yaml":true},{"content":"Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.","nodes":[{"pos":[0,273],"content":"Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.","nodes":[{"content":"Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.","pos":[0,273],"nodes":[{"content":"Reads the value of the specified field.","pos":[0,39]},{"content":"On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.","pos":[40,273]}]}]}],"pos":[31449,31725],"yaml":true},{"content":"For more information, see the <xref:System.Threading.Volatile> class.","nodes":[{"pos":[0,69],"content":"For more information, see the <xref:System.Threading.Volatile> class.","nodes":[{"content":"For more information, see the <ph id=\"ph1\">&lt;xref:System.Threading.Volatile&gt;</ph> class.","pos":[0,69],"source":"For more information, see the <xref:System.Threading.Volatile> class."}]}],"pos":[31736,31806],"yaml":true,"extradata":"MT"},{"content":"The field to read.","nodes":[{"pos":[0,18],"content":"The field to read.","nodes":[{"content":"The field to read.","pos":[0,18]}]}],"pos":[32001,32020],"yaml":true},{"content":"The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.","nodes":[{"pos":[0,163],"content":"The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.","nodes":[{"content":"The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.","pos":[0,163],"nodes":[{"content":"The value that was read.","pos":[0,24]},{"content":"This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.","pos":[25,163]}]}]}],"pos":[32077,32241],"yaml":true},{"content":"Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.","nodes":[{"pos":[0,273],"content":"Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.","nodes":[{"content":"Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.","pos":[0,273],"nodes":[{"content":"Reads the value of the specified field.","pos":[0,39]},{"content":"On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.","pos":[40,273]}]}]}],"pos":[33861,34137],"yaml":true},{"content":"For more information, see the <xref:System.Threading.Volatile> class.","nodes":[{"pos":[0,69],"content":"For more information, see the <xref:System.Threading.Volatile> class.","nodes":[{"content":"For more information, see the <ph id=\"ph1\">&lt;xref:System.Threading.Volatile&gt;</ph> class.","pos":[0,69],"source":"For more information, see the <xref:System.Threading.Volatile> class."}]}],"pos":[34148,34218],"yaml":true,"extradata":"MT"},{"content":"The field to read.","nodes":[{"pos":[0,18],"content":"The field to read.","nodes":[{"content":"The field to read.","pos":[0,18]}]}],"pos":[34418,34437],"yaml":true},{"content":"The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.","nodes":[{"pos":[0,163],"content":"The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.","nodes":[{"content":"The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.","pos":[0,163],"nodes":[{"content":"The value that was read.","pos":[0,24]},{"content":"This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.","pos":[25,163]}]}]}],"pos":[34495,34659],"yaml":true},{"content":"Reads the object reference from the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.","nodes":[{"pos":[0,286],"content":"Reads the object reference from the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.","nodes":[{"content":"Reads the object reference from the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.","pos":[0,286],"nodes":[{"content":"Reads the object reference from the specified field.","pos":[0,52]},{"content":"On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.","pos":[53,286]}]}]}],"pos":[36247,36536],"yaml":true},{"content":"For more information, see the <xref:System.Threading.Volatile> class.","nodes":[{"pos":[0,69],"content":"For more information, see the <xref:System.Threading.Volatile> class.","nodes":[{"content":"For more information, see the <ph id=\"ph1\">&lt;xref:System.Threading.Volatile&gt;</ph> class.","pos":[0,69],"source":"For more information, see the <xref:System.Threading.Volatile> class."}]}],"pos":[36547,36617],"yaml":true,"extradata":"MT"},{"content":"The field to read.","nodes":[{"pos":[0,18],"content":"The field to read.","nodes":[{"content":"The field to read.","pos":[0,18]}]}],"pos":[36768,36787],"yaml":true},{"content":"The type of field to read. This must be a reference type, not a value type.","nodes":[{"pos":[0,75],"content":"The type of field to read. This must be a reference type, not a value type.","nodes":[{"content":"The type of field to read. This must be a reference type, not a value type.","pos":[0,75],"nodes":[{"content":"The type of field to read.","pos":[0,26]},{"content":"This must be a reference type, not a value type.","pos":[27,75]}]}]}],"pos":[36838,36914],"yaml":true},{"content":"The reference to <code>T</code> that was read. This reference is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.","nodes":[{"pos":[0,189],"content":"The reference to <code>T</code> that was read. This reference is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.","nodes":[{"content":"The reference to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">T</ph><ept id=\"p1\">&lt;/code&gt;</ept> that was read.","pos":[0,46],"source":"The reference to <code>T</code> that was read."},{"content":"This reference is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.","pos":[47,189]}]}],"pos":[36959,37149],"yaml":true},{"content":"Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.","nodes":[{"pos":[0,284],"content":"Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.","nodes":[{"content":"Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.","pos":[0,284],"nodes":[{"content":"Writes the specified value to the specified field.","pos":[0,50]},{"content":"On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.","pos":[51,284]}]}]}],"pos":[38752,39039],"yaml":true},{"content":"For more information, see the <xref:System.Threading.Volatile> class.","nodes":[{"pos":[0,69],"content":"For more information, see the <xref:System.Threading.Volatile> class.","nodes":[{"content":"For more information, see the <ph id=\"ph1\">&lt;xref:System.Threading.Volatile&gt;</ph> class.","pos":[0,69],"source":"For more information, see the <xref:System.Threading.Volatile> class."}]}],"pos":[39050,39120],"yaml":true,"extradata":"MT"},{"content":"The field where the value is written.","nodes":[{"pos":[0,37],"content":"The field where the value is written.","nodes":[{"content":"The field where the value is written.","pos":[0,37]}]}],"pos":[39282,39320],"yaml":true},{"content":"The value to write. The value is written immediately so that it is visible to all processors in the computer.","nodes":[{"pos":[0,109],"content":"The value to write. The value is written immediately so that it is visible to all processors in the computer.","nodes":[{"content":"The value to write. The value is written immediately so that it is visible to all processors in the computer.","pos":[0,109],"nodes":[{"content":"The value to write.","pos":[0,19]},{"content":"The value is written immediately so that it is visible to all processors in the computer.","pos":[20,109]}]}]}],"pos":[39382,39492],"yaml":true},{"content":"Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.","nodes":[{"pos":[0,284],"content":"Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.","nodes":[{"content":"Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.","pos":[0,284],"nodes":[{"content":"Writes the specified value to the specified field.","pos":[0,50]},{"content":"On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.","pos":[51,284]}]}]}],"pos":[41057,41344],"yaml":true},{"content":"For more information, see the <xref:System.Threading.Volatile> class.","nodes":[{"pos":[0,69],"content":"For more information, see the <xref:System.Threading.Volatile> class.","nodes":[{"content":"For more information, see the <ph id=\"ph1\">&lt;xref:System.Threading.Volatile&gt;</ph> class.","pos":[0,69],"source":"For more information, see the <xref:System.Threading.Volatile> class."}]}],"pos":[41355,41425],"yaml":true,"extradata":"MT"},{"content":"The field where the value is written.","nodes":[{"pos":[0,37],"content":"The field where the value is written.","nodes":[{"content":"The field where the value is written.","pos":[0,37]}]}],"pos":[41584,41622],"yaml":true},{"content":"The value to write. The value is written immediately so that it is visible to all processors in the computer.","nodes":[{"pos":[0,109],"content":"The value to write. The value is written immediately so that it is visible to all processors in the computer.","nodes":[{"content":"The value to write. The value is written immediately so that it is visible to all processors in the computer.","pos":[0,109],"nodes":[{"content":"The value to write.","pos":[0,19]},{"content":"The value is written immediately so that it is visible to all processors in the computer.","pos":[20,109]}]}]}],"pos":[41681,41791],"yaml":true},{"content":"Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.","nodes":[{"pos":[0,284],"content":"Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.","nodes":[{"content":"Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.","pos":[0,284],"nodes":[{"content":"Writes the specified value to the specified field.","pos":[0,50]},{"content":"On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.","pos":[51,284]}]}]}],"pos":[43380,43667],"yaml":true},{"content":"For more information, see the <xref:System.Threading.Volatile> class.","nodes":[{"pos":[0,69],"content":"For more information, see the <xref:System.Threading.Volatile> class.","nodes":[{"content":"For more information, see the <ph id=\"ph1\">&lt;xref:System.Threading.Volatile&gt;</ph> class.","pos":[0,69],"source":"For more information, see the <xref:System.Threading.Volatile> class."}]}],"pos":[43678,43748],"yaml":true,"extradata":"MT"},{"content":"The field where the value is written.","nodes":[{"pos":[0,37],"content":"The field where the value is written.","nodes":[{"content":"The field where the value is written.","pos":[0,37]}]}],"pos":[43913,43951],"yaml":true},{"content":"The value to write. The value is written immediately so that it is visible to all processors in the computer.","nodes":[{"pos":[0,109],"content":"The value to write. The value is written immediately so that it is visible to all processors in the computer.","nodes":[{"content":"The value to write. The value is written immediately so that it is visible to all processors in the computer.","pos":[0,109],"nodes":[{"content":"The value to write.","pos":[0,19]},{"content":"The value is written immediately so that it is visible to all processors in the computer.","pos":[20,109]}]}]}],"pos":[44012,44122],"yaml":true},{"content":"Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.","nodes":[{"pos":[0,284],"content":"Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.","nodes":[{"content":"Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.","pos":[0,284],"nodes":[{"content":"Writes the specified value to the specified field.","pos":[0,50]},{"content":"On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.","pos":[51,284]}]}]}],"pos":[45699,45986],"yaml":true},{"content":"For more information, see the <xref:System.Threading.Volatile> class.","nodes":[{"pos":[0,69],"content":"For more information, see the <xref:System.Threading.Volatile> class.","nodes":[{"content":"For more information, see the <ph id=\"ph1\">&lt;xref:System.Threading.Volatile&gt;</ph> class.","pos":[0,69],"source":"For more information, see the <xref:System.Threading.Volatile> class."}]}],"pos":[45997,46067],"yaml":true,"extradata":"MT"},{"content":"The field where the value is written.","nodes":[{"pos":[0,37],"content":"The field where the value is written.","nodes":[{"content":"The field where the value is written.","pos":[0,37]}]}],"pos":[46229,46267],"yaml":true},{"content":"The value to write. The value is written immediately so that it is visible to all processors in the computer.","nodes":[{"pos":[0,109],"content":"The value to write. The value is written immediately so that it is visible to all processors in the computer.","nodes":[{"content":"The value to write. The value is written immediately so that it is visible to all processors in the computer.","pos":[0,109],"nodes":[{"content":"The value to write.","pos":[0,19]},{"content":"The value is written immediately so that it is visible to all processors in the computer.","pos":[20,109]}]}]}],"pos":[46327,46437],"yaml":true},{"content":"Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.","nodes":[{"pos":[0,284],"content":"Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.","nodes":[{"content":"Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.","pos":[0,284],"nodes":[{"content":"Writes the specified value to the specified field.","pos":[0,50]},{"content":"On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.","pos":[51,284]}]}]}],"pos":[48014,48301],"yaml":true},{"content":"For more information, see the <xref:System.Threading.Volatile> class.","nodes":[{"pos":[0,69],"content":"For more information, see the <xref:System.Threading.Volatile> class.","nodes":[{"content":"For more information, see the <ph id=\"ph1\">&lt;xref:System.Threading.Volatile&gt;</ph> class.","pos":[0,69],"source":"For more information, see the <xref:System.Threading.Volatile> class."}]}],"pos":[48312,48382],"yaml":true,"extradata":"MT"},{"content":"The field where the value is written.","nodes":[{"pos":[0,37],"content":"The field where the value is written.","nodes":[{"content":"The field where the value is written.","pos":[0,37]}]}],"pos":[48540,48578],"yaml":true},{"content":"The value to write. The value is written immediately so that it is visible to all processors in the computer.","nodes":[{"pos":[0,109],"content":"The value to write. The value is written immediately so that it is visible to all processors in the computer.","nodes":[{"content":"The value to write. The value is written immediately so that it is visible to all processors in the computer.","pos":[0,109],"nodes":[{"content":"The value to write.","pos":[0,19]},{"content":"The value is written immediately so that it is visible to all processors in the computer.","pos":[20,109]}]}]}],"pos":[48638,48748],"yaml":true},{"content":"Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a memory operation appears before this method in the code, the processor cannot move it after this method.","nodes":[{"pos":[0,287],"content":"Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a memory operation appears before this method in the code, the processor cannot move it after this method.","nodes":[{"content":"Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a memory operation appears before this method in the code, the processor cannot move it after this method.","pos":[0,287],"nodes":[{"content":"Writes the specified value to the specified field.","pos":[0,50]},{"content":"On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a memory operation appears before this method in the code, the processor cannot move it after this method.","pos":[51,287]}]}]}],"pos":[50325,50615],"yaml":true},{"content":"For more information, see the <xref:System.Threading.Volatile> class.","nodes":[{"pos":[0,69],"content":"For more information, see the <xref:System.Threading.Volatile> class.","nodes":[{"content":"For more information, see the <ph id=\"ph1\">&lt;xref:System.Threading.Volatile&gt;</ph> class.","pos":[0,69],"source":"For more information, see the <xref:System.Threading.Volatile> class."}]}],"pos":[50626,50696],"yaml":true,"extradata":"MT"},{"content":"The field where the value is written.","nodes":[{"pos":[0,37],"content":"The field where the value is written.","nodes":[{"content":"The field where the value is written.","pos":[0,37]}]}],"pos":[50856,50894],"yaml":true},{"content":"The value to write. The value is written immediately so that it is visible to all processors in the computer.","nodes":[{"pos":[0,109],"content":"The value to write. The value is written immediately so that it is visible to all processors in the computer.","nodes":[{"content":"The value to write. The value is written immediately so that it is visible to all processors in the computer.","pos":[0,109],"nodes":[{"content":"The value to write.","pos":[0,19]},{"content":"The value is written immediately so that it is visible to all processors in the computer.","pos":[20,109]}]}]}],"pos":[50954,51064],"yaml":true},{"content":"Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.","nodes":[{"pos":[0,284],"content":"Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.","nodes":[{"content":"Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.","pos":[0,284],"nodes":[{"content":"Writes the specified value to the specified field.","pos":[0,50]},{"content":"On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.","pos":[51,284]}]}]}],"pos":[52653,52940],"yaml":true},{"content":"For more information, see the <xref:System.Threading.Volatile> class.","nodes":[{"pos":[0,69],"content":"For more information, see the <xref:System.Threading.Volatile> class.","nodes":[{"content":"For more information, see the <ph id=\"ph1\">&lt;xref:System.Threading.Volatile&gt;</ph> class.","pos":[0,69],"source":"For more information, see the <xref:System.Threading.Volatile> class."}]}],"pos":[52951,53021],"yaml":true,"extradata":"MT"},{"content":"The field where the value is written.","nodes":[{"pos":[0,37],"content":"The field where the value is written.","nodes":[{"content":"The field where the value is written.","pos":[0,37]}]}],"pos":[53186,53224],"yaml":true},{"content":"The value to write. The value is written immediately so that it is visible to all processors in the computer.","nodes":[{"pos":[0,109],"content":"The value to write. The value is written immediately so that it is visible to all processors in the computer.","nodes":[{"content":"The value to write. The value is written immediately so that it is visible to all processors in the computer.","pos":[0,109],"nodes":[{"content":"The value to write.","pos":[0,19]},{"content":"The value is written immediately so that it is visible to all processors in the computer.","pos":[20,109]}]}]}],"pos":[53285,53395],"yaml":true},{"content":"Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.","nodes":[{"pos":[0,284],"content":"Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.","nodes":[{"content":"Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.","pos":[0,284],"nodes":[{"content":"Writes the specified value to the specified field.","pos":[0,50]},{"content":"On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.","pos":[51,284]}]}]}],"pos":[54972,55259],"yaml":true},{"content":"For more information, see the <xref:System.Threading.Volatile> class.","nodes":[{"pos":[0,69],"content":"For more information, see the <xref:System.Threading.Volatile> class.","nodes":[{"content":"For more information, see the <ph id=\"ph1\">&lt;xref:System.Threading.Volatile&gt;</ph> class.","pos":[0,69],"source":"For more information, see the <xref:System.Threading.Volatile> class."}]}],"pos":[55270,55340],"yaml":true,"extradata":"MT"},{"content":"The field where the value is written.","nodes":[{"pos":[0,37],"content":"The field where the value is written.","nodes":[{"content":"The field where the value is written.","pos":[0,37]}]}],"pos":[55547,55585],"yaml":true},{"content":"The value to write. The value is written immediately so that it is visible to all processors in the computer.","nodes":[{"pos":[0,109],"content":"The value to write. The value is written immediately so that it is visible to all processors in the computer.","nodes":[{"content":"The value to write. The value is written immediately so that it is visible to all processors in the computer.","pos":[0,109],"nodes":[{"content":"The value to write.","pos":[0,19]},{"content":"The value is written immediately so that it is visible to all processors in the computer.","pos":[20,109]}]}]}],"pos":[55645,55755],"yaml":true},{"content":"Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.","nodes":[{"pos":[0,284],"content":"Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.","nodes":[{"content":"Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.","pos":[0,284],"nodes":[{"content":"Writes the specified value to the specified field.","pos":[0,50]},{"content":"On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.","pos":[51,284]}]}]}],"pos":[57380,57667],"yaml":true},{"content":"For more information, see the <xref:System.Threading.Volatile> class.","nodes":[{"pos":[0,69],"content":"For more information, see the <xref:System.Threading.Volatile> class.","nodes":[{"content":"For more information, see the <ph id=\"ph1\">&lt;xref:System.Threading.Volatile&gt;</ph> class.","pos":[0,69],"source":"For more information, see the <xref:System.Threading.Volatile> class."}]}],"pos":[57678,57748],"yaml":true,"extradata":"MT"},{"content":"The field where the value is written.","nodes":[{"pos":[0,37],"content":"The field where the value is written.","nodes":[{"content":"The field where the value is written.","pos":[0,37]}]}],"pos":[57911,57949],"yaml":true},{"content":"The value to write. The value is written immediately so that it is visible to all processors in the computer.","nodes":[{"pos":[0,109],"content":"The value to write. The value is written immediately so that it is visible to all processors in the computer.","nodes":[{"content":"The value to write. The value is written immediately so that it is visible to all processors in the computer.","pos":[0,109],"nodes":[{"content":"The value to write.","pos":[0,19]},{"content":"The value is written immediately so that it is visible to all processors in the computer.","pos":[20,109]}]}]}],"pos":[58010,58120],"yaml":true},{"content":"Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.","nodes":[{"pos":[0,284],"content":"Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.","nodes":[{"content":"Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.","pos":[0,284],"nodes":[{"content":"Writes the specified value to the specified field.","pos":[0,50]},{"content":"On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.","pos":[51,284]}]}]}],"pos":[59709,59996],"yaml":true},{"content":"For more information, see the <xref:System.Threading.Volatile> class.","nodes":[{"pos":[0,69],"content":"For more information, see the <xref:System.Threading.Volatile> class.","nodes":[{"content":"For more information, see the <ph id=\"ph1\">&lt;xref:System.Threading.Volatile&gt;</ph> class.","pos":[0,69],"source":"For more information, see the <xref:System.Threading.Volatile> class."}]}],"pos":[60007,60077],"yaml":true,"extradata":"MT"},{"content":"The field where the value is written.","nodes":[{"pos":[0,37],"content":"The field where the value is written.","nodes":[{"content":"The field where the value is written.","pos":[0,37]}]}],"pos":[60287,60325],"yaml":true},{"content":"The value to write. The value is written immediately so that it is visible to all processors in the computer.","nodes":[{"pos":[0,109],"content":"The value to write. The value is written immediately so that it is visible to all processors in the computer.","nodes":[{"content":"The value to write. The value is written immediately so that it is visible to all processors in the computer.","pos":[0,109],"nodes":[{"content":"The value to write.","pos":[0,19]},{"content":"The value is written immediately so that it is visible to all processors in the computer.","pos":[20,109]}]}]}],"pos":[60386,60496],"yaml":true},{"content":"Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.","nodes":[{"pos":[0,284],"content":"Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.","nodes":[{"content":"Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.","pos":[0,284],"nodes":[{"content":"Writes the specified value to the specified field.","pos":[0,50]},{"content":"On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.","pos":[51,284]}]}]}],"pos":[62197,62484],"yaml":true},{"content":"For more information, see the <xref:System.Threading.Volatile> class.","nodes":[{"pos":[0,69],"content":"For more information, see the <xref:System.Threading.Volatile> class.","nodes":[{"content":"For more information, see the <ph id=\"ph1\">&lt;xref:System.Threading.Volatile&gt;</ph> class.","pos":[0,69],"source":"For more information, see the <xref:System.Threading.Volatile> class."}]}],"pos":[62495,62565],"yaml":true,"extradata":"MT"},{"content":"The field where the value is written.","nodes":[{"pos":[0,37],"content":"The field where the value is written.","nodes":[{"content":"The field where the value is written.","pos":[0,37]}]}],"pos":[62771,62809],"yaml":true},{"content":"The value to write. The value is written immediately so that it is visible to all processors in the computer.","nodes":[{"pos":[0,109],"content":"The value to write. The value is written immediately so that it is visible to all processors in the computer.","nodes":[{"content":"The value to write. The value is written immediately so that it is visible to all processors in the computer.","pos":[0,109],"nodes":[{"content":"The value to write.","pos":[0,19]},{"content":"The value is written immediately so that it is visible to all processors in the computer.","pos":[20,109]}]}]}],"pos":[62870,62980],"yaml":true},{"content":"Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.","nodes":[{"pos":[0,284],"content":"Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.","nodes":[{"content":"Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.","pos":[0,284],"nodes":[{"content":"Writes the specified value to the specified field.","pos":[0,50]},{"content":"On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.","pos":[51,284]}]}]}],"pos":[64681,64968],"yaml":true},{"content":"For more information, see the <xref:System.Threading.Volatile> class.","nodes":[{"pos":[0,69],"content":"For more information, see the <xref:System.Threading.Volatile> class.","nodes":[{"content":"For more information, see the <ph id=\"ph1\">&lt;xref:System.Threading.Volatile&gt;</ph> class.","pos":[0,69],"source":"For more information, see the <xref:System.Threading.Volatile> class."}]}],"pos":[64979,65049],"yaml":true,"extradata":"MT"},{"content":"The field where the value is written.","nodes":[{"pos":[0,37],"content":"The field where the value is written.","nodes":[{"content":"The field where the value is written.","pos":[0,37]}]}],"pos":[65257,65295],"yaml":true},{"content":"The value to write. The value is written immediately so that it is visible to all processors in the computer.","nodes":[{"pos":[0,109],"content":"The value to write. The value is written immediately so that it is visible to all processors in the computer.","nodes":[{"content":"The value to write. The value is written immediately so that it is visible to all processors in the computer.","pos":[0,109],"nodes":[{"content":"The value to write.","pos":[0,19]},{"content":"The value is written immediately so that it is visible to all processors in the computer.","pos":[20,109]}]}]}],"pos":[65356,65466],"yaml":true},{"content":"Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.","nodes":[{"pos":[0,284],"content":"Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.","nodes":[{"content":"Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.","pos":[0,284],"nodes":[{"content":"Writes the specified value to the specified field.","pos":[0,50]},{"content":"On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.","pos":[51,284]}]}]}],"pos":[67179,67466],"yaml":true},{"content":"For more information, see the <xref:System.Threading.Volatile> class.","nodes":[{"pos":[0,69],"content":"For more information, see the <xref:System.Threading.Volatile> class.","nodes":[{"content":"For more information, see the <ph id=\"ph1\">&lt;xref:System.Threading.Volatile&gt;</ph> class.","pos":[0,69],"source":"For more information, see the <xref:System.Threading.Volatile> class."}]}],"pos":[67477,67547],"yaml":true,"extradata":"MT"},{"content":"The field where the value is written.","nodes":[{"pos":[0,37],"content":"The field where the value is written.","nodes":[{"content":"The field where the value is written.","pos":[0,37]}]}],"pos":[67760,67798],"yaml":true},{"content":"The value to write. The value is written immediately so that it is visible to all processors in the computer.","nodes":[{"pos":[0,109],"content":"The value to write. The value is written immediately so that it is visible to all processors in the computer.","nodes":[{"content":"The value to write. The value is written immediately so that it is visible to all processors in the computer.","pos":[0,109],"nodes":[{"content":"The value to write.","pos":[0,19]},{"content":"The value is written immediately so that it is visible to all processors in the computer.","pos":[20,109]}]}]}],"pos":[67860,67970],"yaml":true},{"content":"Writes the specified object reference to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.","nodes":[{"pos":[0,295],"content":"Writes the specified object reference to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.","nodes":[{"content":"Writes the specified object reference to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.","pos":[0,295],"nodes":[{"content":"Writes the specified object reference to the specified field.","pos":[0,61]},{"content":"On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.","pos":[62,295]}]}]}],"pos":[69601,69899],"yaml":true},{"content":"For more information, see the <xref:System.Threading.Volatile> class.","nodes":[{"pos":[0,69],"content":"For more information, see the <xref:System.Threading.Volatile> class.","nodes":[{"content":"For more information, see the <ph id=\"ph1\">&lt;xref:System.Threading.Volatile&gt;</ph> class.","pos":[0,69],"source":"For more information, see the <xref:System.Threading.Volatile> class."}]}],"pos":[69910,69980],"yaml":true,"extradata":"MT"},{"content":"The field where the object reference is written.","nodes":[{"pos":[0,48],"content":"The field where the object reference is written.","nodes":[{"content":"The field where the object reference is written.","pos":[0,48]}]}],"pos":[70144,70193],"yaml":true},{"content":"The object reference to write. The reference is written immediately so that it is visible to all processors in the computer.","nodes":[{"pos":[0,124],"content":"The object reference to write. The reference is written immediately so that it is visible to all processors in the computer.","nodes":[{"content":"The object reference to write. The reference is written immediately so that it is visible to all processors in the computer.","pos":[0,124],"nodes":[{"content":"The object reference to write.","pos":[0,30]},{"content":"The reference is written immediately so that it is visible to all processors in the computer.","pos":[31,124]}]}]}],"pos":[70242,70367],"yaml":true},{"content":"The type of field to write. This must be a reference type, not a value type.","nodes":[{"pos":[0,76],"content":"The type of field to write. This must be a reference type, not a value type.","nodes":[{"content":"The type of field to write. This must be a reference type, not a value type.","pos":[0,76],"nodes":[{"content":"The type of field to write.","pos":[0,27]},{"content":"This must be a reference type, not a value type.","pos":[28,76]}]}]}],"pos":[70418,70495],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Threading.Volatile\n  commentId: T:System.Threading.Volatile\n  id: Volatile\n  children:\n  - System.Threading.Volatile.Read(System.Boolean@)\n  - System.Threading.Volatile.Read(System.Byte@)\n  - System.Threading.Volatile.Read(System.Double@)\n  - System.Threading.Volatile.Read(System.Int16@)\n  - System.Threading.Volatile.Read(System.Int32@)\n  - System.Threading.Volatile.Read(System.Int64@)\n  - System.Threading.Volatile.Read(System.IntPtr@)\n  - System.Threading.Volatile.Read(System.SByte@)\n  - System.Threading.Volatile.Read(System.Single@)\n  - System.Threading.Volatile.Read(System.UInt16@)\n  - System.Threading.Volatile.Read(System.UInt32@)\n  - System.Threading.Volatile.Read(System.UInt64@)\n  - System.Threading.Volatile.Read(System.UIntPtr@)\n  - System.Threading.Volatile.Read``1(``0@)\n  - System.Threading.Volatile.Write(System.Boolean@,System.Boolean)\n  - System.Threading.Volatile.Write(System.Byte@,System.Byte)\n  - System.Threading.Volatile.Write(System.Double@,System.Double)\n  - System.Threading.Volatile.Write(System.Int16@,System.Int16)\n  - System.Threading.Volatile.Write(System.Int32@,System.Int32)\n  - System.Threading.Volatile.Write(System.Int64@,System.Int64)\n  - System.Threading.Volatile.Write(System.IntPtr@,System.IntPtr)\n  - System.Threading.Volatile.Write(System.SByte@,System.SByte)\n  - System.Threading.Volatile.Write(System.Single@,System.Single)\n  - System.Threading.Volatile.Write(System.UInt16@,System.UInt16)\n  - System.Threading.Volatile.Write(System.UInt32@,System.UInt32)\n  - System.Threading.Volatile.Write(System.UInt64@,System.UInt64)\n  - System.Threading.Volatile.Write(System.UIntPtr@,System.UIntPtr)\n  - System.Threading.Volatile.Write``1(``0@,``0)\n  langs:\n  - csharp\n  name: Volatile\n  nameWithType: Volatile\n  fullName: System.Threading.Volatile\n  type: Class\n  assemblies:\n  - System.Threading\n  - mscorlib\n  - netstandard\n  namespace: System.Threading\n  summary: Contains methods for performing volatile memory operations.\n  remarks: \"On a multiprocessor system, a volatile write operation ensures that a value written to a memory location is immediately visible to all processors. A volatile read operation obtains the very latest value written to a memory location by any processor. These operations might require flushing processor caches, which can affect performance.  \\n  \\n> [!NOTE]\\n>  On a uniprocessor system, volatile reads and writes ensure that a value is read or written to memory and not cached (for example, in a processor register). Thus, you can use these operations to synchronize access to a field that can be updated by another thread or by hardware.  \\n  \\n Volatile memory operations are for special cases of synchronization, where normal locking is not an acceptable alternative. Under normal circumstances, the C# `lock` statement, the Visual Basic `SyncLock` statement, and the <xref:System.Threading.Monitor> class provide the easiest and least error-prone way of synchronizing access to data, and the <xref:System.Lazy%601> class provides a simple way to write lazy initialization code without directly using double-checked locking.  \\n  \\n The <xref:System.Threading.Volatile.Read%2A?displayProperty=fullName> and <xref:System.Threading.Volatile.Write%2A?displayProperty=fullName> methods enable functionality that is not supported in languages. For example:  \\n  \\n-   Some languages, such as Visual Basic, do not recognize the concept of volatile memory operations. The <xref:System.Threading.Volatile> class provides that functionality in such languages.  \\n  \\n    > [!NOTE]\\n    >  Calling one of these methods affects only a single memory access. To provide effective synchronization for a field, all access to the field must use <xref:System.Threading.Volatile.Read%2A?displayProperty=fullName> and <xref:System.Threading.Volatile.Write%2A?displayProperty=fullName>.  \\n  \\n-   In C#, using the `volatile` modifier on a field guarantees that every access to that field uses the <xref:System.Threading.Volatile.Read%2A?displayProperty=fullName> and <xref:System.Threading.Volatile.Write%2A?displayProperty=fullName> methods, but the `volatile` modifier cannot be applied to array elements. The <xref:System.Threading.Volatile.Read%2A?displayProperty=fullName> and <xref:System.Threading.Volatile.Write%2A?displayProperty=fullName> methods can be used on array elements.\"\n  syntax:\n    content: public static class Volatile\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Volatile.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Volatile.Read(System.Boolean@)\n  commentId: M:System.Threading.Volatile.Read(System.Boolean@)\n  id: Read(System.Boolean@)\n  parent: System.Threading.Volatile\n  langs:\n  - csharp\n  name: Read(Boolean)\n  nameWithType: Volatile.Read(Boolean)\n  fullName: Volatile.Read(Boolean)\n  type: Method\n  assemblies:\n  - System.Threading\n  - mscorlib\n  - netstandard\n  namespace: System.Threading\n  summary: 'Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.'\n  remarks: For more information, see the <xref:System.Threading.Volatile> class.\n  syntax:\n    content: public static bool Read (ref bool location);\n    parameters:\n    - id: location\n      type: System.Boolean\n      description: The field to read.\n    return:\n      type: System.Boolean\n      description: The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.\n  overload: System.Threading.Volatile.Read*\n  exceptions: []\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Volatile.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Volatile.Read(System.Byte@)\n  commentId: M:System.Threading.Volatile.Read(System.Byte@)\n  id: Read(System.Byte@)\n  parent: System.Threading.Volatile\n  langs:\n  - csharp\n  name: Read(Byte)\n  nameWithType: Volatile.Read(Byte)\n  fullName: Volatile.Read(Byte)\n  type: Method\n  assemblies:\n  - System.Threading\n  - mscorlib\n  - netstandard\n  namespace: System.Threading\n  summary: 'Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.'\n  remarks: For more information, see the <xref:System.Threading.Volatile> class.\n  syntax:\n    content: public static byte Read (ref byte location);\n    parameters:\n    - id: location\n      type: System.Byte\n      description: The field to read.\n    return:\n      type: System.Byte\n      description: The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.\n  overload: System.Threading.Volatile.Read*\n  exceptions: []\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Volatile.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Volatile.Read(System.Double@)\n  commentId: M:System.Threading.Volatile.Read(System.Double@)\n  id: Read(System.Double@)\n  parent: System.Threading.Volatile\n  langs:\n  - csharp\n  name: Read(Double)\n  nameWithType: Volatile.Read(Double)\n  fullName: Volatile.Read(Double)\n  type: Method\n  assemblies:\n  - System.Threading\n  - mscorlib\n  - netstandard\n  namespace: System.Threading\n  summary: 'Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.'\n  remarks: For more information, see the <xref:System.Threading.Volatile> class.\n  syntax:\n    content: public static double Read (ref double location);\n    parameters:\n    - id: location\n      type: System.Double\n      description: The field to read.\n    return:\n      type: System.Double\n      description: The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.\n  overload: System.Threading.Volatile.Read*\n  exceptions: []\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Volatile.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Volatile.Read(System.Int16@)\n  commentId: M:System.Threading.Volatile.Read(System.Int16@)\n  id: Read(System.Int16@)\n  parent: System.Threading.Volatile\n  langs:\n  - csharp\n  name: Read(Int16)\n  nameWithType: Volatile.Read(Int16)\n  fullName: Volatile.Read(Int16)\n  type: Method\n  assemblies:\n  - System.Threading\n  - mscorlib\n  - netstandard\n  namespace: System.Threading\n  summary: 'Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.'\n  remarks: For more information, see the <xref:System.Threading.Volatile> class.\n  syntax:\n    content: public static short Read (ref short location);\n    parameters:\n    - id: location\n      type: System.Int16\n      description: The field to read.\n    return:\n      type: System.Int16\n      description: The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.\n  overload: System.Threading.Volatile.Read*\n  exceptions: []\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Volatile.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Volatile.Read(System.Int32@)\n  commentId: M:System.Threading.Volatile.Read(System.Int32@)\n  id: Read(System.Int32@)\n  parent: System.Threading.Volatile\n  langs:\n  - csharp\n  name: Read(Int32)\n  nameWithType: Volatile.Read(Int32)\n  fullName: Volatile.Read(Int32)\n  type: Method\n  assemblies:\n  - System.Threading\n  - mscorlib\n  - netstandard\n  namespace: System.Threading\n  summary: 'Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.'\n  remarks: For more information, see the <xref:System.Threading.Volatile> class.\n  syntax:\n    content: public static int Read (ref int location);\n    parameters:\n    - id: location\n      type: System.Int32\n      description: The field to read.\n    return:\n      type: System.Int32\n      description: The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.\n  overload: System.Threading.Volatile.Read*\n  exceptions: []\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Volatile.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Volatile.Read(System.Int64@)\n  commentId: M:System.Threading.Volatile.Read(System.Int64@)\n  id: Read(System.Int64@)\n  parent: System.Threading.Volatile\n  langs:\n  - csharp\n  name: Read(Int64)\n  nameWithType: Volatile.Read(Int64)\n  fullName: Volatile.Read(Int64)\n  type: Method\n  assemblies:\n  - System.Threading\n  - mscorlib\n  - netstandard\n  namespace: System.Threading\n  summary: 'Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.'\n  remarks: For more information, see the <xref:System.Threading.Volatile> class.\n  syntax:\n    content: public static long Read (ref long location);\n    parameters:\n    - id: location\n      type: System.Int64\n      description: The field to read.\n    return:\n      type: System.Int64\n      description: The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.\n  overload: System.Threading.Volatile.Read*\n  exceptions: []\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Volatile.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Volatile.Read(System.IntPtr@)\n  commentId: M:System.Threading.Volatile.Read(System.IntPtr@)\n  id: Read(System.IntPtr@)\n  parent: System.Threading.Volatile\n  langs:\n  - csharp\n  name: Read(IntPtr)\n  nameWithType: Volatile.Read(IntPtr)\n  fullName: Volatile.Read(IntPtr)\n  type: Method\n  assemblies:\n  - System.Threading\n  - mscorlib\n  - netstandard\n  namespace: System.Threading\n  summary: 'Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.'\n  remarks: For more information, see the <xref:System.Threading.Volatile> class.\n  syntax:\n    content: public static IntPtr Read (ref IntPtr location);\n    parameters:\n    - id: location\n      type: System.IntPtr\n      description: The field to read.\n    return:\n      type: System.IntPtr\n      description: The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.\n  overload: System.Threading.Volatile.Read*\n  exceptions: []\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Volatile.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Volatile.Read(System.SByte@)\n  commentId: M:System.Threading.Volatile.Read(System.SByte@)\n  id: Read(System.SByte@)\n  parent: System.Threading.Volatile\n  langs:\n  - csharp\n  name: Read(SByte)\n  nameWithType: Volatile.Read(SByte)\n  fullName: Volatile.Read(SByte)\n  type: Method\n  assemblies:\n  - System.Threading\n  - mscorlib\n  - netstandard\n  namespace: System.Threading\n  summary: 'Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.'\n  remarks: For more information, see the <xref:System.Threading.Volatile> class.\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public static sbyte Read (ref sbyte location);\n    parameters:\n    - id: location\n      type: System.SByte\n      description: The field to read.\n    return:\n      type: System.SByte\n      description: The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.\n  overload: System.Threading.Volatile.Read*\n  exceptions: []\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Volatile.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Volatile.Read(System.Single@)\n  commentId: M:System.Threading.Volatile.Read(System.Single@)\n  id: Read(System.Single@)\n  parent: System.Threading.Volatile\n  langs:\n  - csharp\n  name: Read(Single)\n  nameWithType: Volatile.Read(Single)\n  fullName: Volatile.Read(Single)\n  type: Method\n  assemblies:\n  - System.Threading\n  - mscorlib\n  - netstandard\n  namespace: System.Threading\n  summary: 'Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.'\n  remarks: For more information, see the <xref:System.Threading.Volatile> class.\n  syntax:\n    content: public static float Read (ref float location);\n    parameters:\n    - id: location\n      type: System.Single\n      description: The field to read.\n    return:\n      type: System.Single\n      description: The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.\n  overload: System.Threading.Volatile.Read*\n  exceptions: []\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Volatile.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Volatile.Read(System.UInt16@)\n  commentId: M:System.Threading.Volatile.Read(System.UInt16@)\n  id: Read(System.UInt16@)\n  parent: System.Threading.Volatile\n  langs:\n  - csharp\n  name: Read(UInt16)\n  nameWithType: Volatile.Read(UInt16)\n  fullName: Volatile.Read(UInt16)\n  type: Method\n  assemblies:\n  - System.Threading\n  - mscorlib\n  - netstandard\n  namespace: System.Threading\n  summary: 'Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.'\n  remarks: For more information, see the <xref:System.Threading.Volatile> class.\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public static ushort Read (ref ushort location);\n    parameters:\n    - id: location\n      type: System.UInt16\n      description: The field to read.\n    return:\n      type: System.UInt16\n      description: The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.\n  overload: System.Threading.Volatile.Read*\n  exceptions: []\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  altCompliant: System.Threading.Volatile.Read(System.Int16@)\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Volatile.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Volatile.Read(System.UInt32@)\n  commentId: M:System.Threading.Volatile.Read(System.UInt32@)\n  id: Read(System.UInt32@)\n  parent: System.Threading.Volatile\n  langs:\n  - csharp\n  name: Read(UInt32)\n  nameWithType: Volatile.Read(UInt32)\n  fullName: Volatile.Read(UInt32)\n  type: Method\n  assemblies:\n  - System.Threading\n  - mscorlib\n  - netstandard\n  namespace: System.Threading\n  summary: 'Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.'\n  remarks: For more information, see the <xref:System.Threading.Volatile> class.\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public static uint Read (ref uint location);\n    parameters:\n    - id: location\n      type: System.UInt32\n      description: The field to read.\n    return:\n      type: System.UInt32\n      description: The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.\n  overload: System.Threading.Volatile.Read*\n  exceptions: []\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  altCompliant: System.Threading.Volatile.Read(System.Int32@)\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Volatile.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Volatile.Read(System.UInt64@)\n  commentId: M:System.Threading.Volatile.Read(System.UInt64@)\n  id: Read(System.UInt64@)\n  parent: System.Threading.Volatile\n  langs:\n  - csharp\n  name: Read(UInt64)\n  nameWithType: Volatile.Read(UInt64)\n  fullName: Volatile.Read(UInt64)\n  type: Method\n  assemblies:\n  - System.Threading\n  - mscorlib\n  - netstandard\n  namespace: System.Threading\n  summary: 'Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.'\n  remarks: For more information, see the <xref:System.Threading.Volatile> class.\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public static ulong Read (ref ulong location);\n    parameters:\n    - id: location\n      type: System.UInt64\n      description: The field to read.\n    return:\n      type: System.UInt64\n      description: The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.\n  overload: System.Threading.Volatile.Read*\n  exceptions: []\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  altCompliant: System.Threading.Volatile.Read(System.Int64@)\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Volatile.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Volatile.Read(System.UIntPtr@)\n  commentId: M:System.Threading.Volatile.Read(System.UIntPtr@)\n  id: Read(System.UIntPtr@)\n  parent: System.Threading.Volatile\n  langs:\n  - csharp\n  name: Read(UIntPtr)\n  nameWithType: Volatile.Read(UIntPtr)\n  fullName: Volatile.Read(UIntPtr)\n  type: Method\n  assemblies:\n  - System.Threading\n  - mscorlib\n  - netstandard\n  namespace: System.Threading\n  summary: 'Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.'\n  remarks: For more information, see the <xref:System.Threading.Volatile> class.\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public static UIntPtr Read (ref UIntPtr location);\n    parameters:\n    - id: location\n      type: System.UIntPtr\n      description: The field to read.\n    return:\n      type: System.UIntPtr\n      description: The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.\n  overload: System.Threading.Volatile.Read*\n  exceptions: []\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  altCompliant: System.Threading.Volatile.Read(System.IntPtr@)\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Volatile.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Volatile.Read``1(``0@)\n  commentId: M:System.Threading.Volatile.Read``1(``0@)\n  id: Read``1(``0@)\n  parent: System.Threading.Volatile\n  langs:\n  - csharp\n  name: Read<T>(T)\n  nameWithType: Volatile.Read<T>(T)\n  fullName: Volatile.Read<T>(T)\n  type: Method\n  assemblies:\n  - System.Threading\n  - mscorlib\n  - netstandard\n  namespace: System.Threading\n  summary: 'Reads the object reference from the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.'\n  remarks: For more information, see the <xref:System.Threading.Volatile> class.\n  syntax:\n    content: 'public static T Read<T> (ref T location) where T : class;'\n    parameters:\n    - id: location\n      type: T\n      description: The field to read.\n    typeParameters:\n    - id: T\n      description: The type of field to read. This must be a reference type, not a value type.\n    return:\n      type: T\n      description: The reference to <code>T</code> that was read. This reference is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.\n  overload: System.Threading.Volatile.Read``1*\n  exceptions: []\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Volatile.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Volatile.Write(System.Boolean@,System.Boolean)\n  commentId: M:System.Threading.Volatile.Write(System.Boolean@,System.Boolean)\n  id: Write(System.Boolean@,System.Boolean)\n  parent: System.Threading.Volatile\n  langs:\n  - csharp\n  name: Write(Boolean, Boolean)\n  nameWithType: Volatile.Write(Boolean, Boolean)\n  fullName: Volatile.Write(Boolean, Boolean)\n  type: Method\n  assemblies:\n  - System.Threading\n  - mscorlib\n  - netstandard\n  namespace: System.Threading\n  summary: 'Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.'\n  remarks: For more information, see the <xref:System.Threading.Volatile> class.\n  syntax:\n    content: public static void Write (ref bool location, bool value);\n    parameters:\n    - id: location\n      type: System.Boolean\n      description: The field where the value is written.\n    - id: value\n      type: System.Boolean\n      description: The value to write. The value is written immediately so that it is visible to all processors in the computer.\n  overload: System.Threading.Volatile.Write*\n  exceptions: []\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Volatile.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Volatile.Write(System.Byte@,System.Byte)\n  commentId: M:System.Threading.Volatile.Write(System.Byte@,System.Byte)\n  id: Write(System.Byte@,System.Byte)\n  parent: System.Threading.Volatile\n  langs:\n  - csharp\n  name: Write(Byte, Byte)\n  nameWithType: Volatile.Write(Byte, Byte)\n  fullName: Volatile.Write(Byte, Byte)\n  type: Method\n  assemblies:\n  - System.Threading\n  - mscorlib\n  - netstandard\n  namespace: System.Threading\n  summary: 'Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.'\n  remarks: For more information, see the <xref:System.Threading.Volatile> class.\n  syntax:\n    content: public static void Write (ref byte location, byte value);\n    parameters:\n    - id: location\n      type: System.Byte\n      description: The field where the value is written.\n    - id: value\n      type: System.Byte\n      description: The value to write. The value is written immediately so that it is visible to all processors in the computer.\n  overload: System.Threading.Volatile.Write*\n  exceptions: []\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Volatile.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Volatile.Write(System.Double@,System.Double)\n  commentId: M:System.Threading.Volatile.Write(System.Double@,System.Double)\n  id: Write(System.Double@,System.Double)\n  parent: System.Threading.Volatile\n  langs:\n  - csharp\n  name: Write(Double, Double)\n  nameWithType: Volatile.Write(Double, Double)\n  fullName: Volatile.Write(Double, Double)\n  type: Method\n  assemblies:\n  - System.Threading\n  - mscorlib\n  - netstandard\n  namespace: System.Threading\n  summary: 'Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.'\n  remarks: For more information, see the <xref:System.Threading.Volatile> class.\n  syntax:\n    content: public static void Write (ref double location, double value);\n    parameters:\n    - id: location\n      type: System.Double\n      description: The field where the value is written.\n    - id: value\n      type: System.Double\n      description: The value to write. The value is written immediately so that it is visible to all processors in the computer.\n  overload: System.Threading.Volatile.Write*\n  exceptions: []\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Volatile.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Volatile.Write(System.Int16@,System.Int16)\n  commentId: M:System.Threading.Volatile.Write(System.Int16@,System.Int16)\n  id: Write(System.Int16@,System.Int16)\n  parent: System.Threading.Volatile\n  langs:\n  - csharp\n  name: Write(Int16, Int16)\n  nameWithType: Volatile.Write(Int16, Int16)\n  fullName: Volatile.Write(Int16, Int16)\n  type: Method\n  assemblies:\n  - System.Threading\n  - mscorlib\n  - netstandard\n  namespace: System.Threading\n  summary: 'Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.'\n  remarks: For more information, see the <xref:System.Threading.Volatile> class.\n  syntax:\n    content: public static void Write (ref short location, short value);\n    parameters:\n    - id: location\n      type: System.Int16\n      description: The field where the value is written.\n    - id: value\n      type: System.Int16\n      description: The value to write. The value is written immediately so that it is visible to all processors in the computer.\n  overload: System.Threading.Volatile.Write*\n  exceptions: []\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Volatile.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Volatile.Write(System.Int32@,System.Int32)\n  commentId: M:System.Threading.Volatile.Write(System.Int32@,System.Int32)\n  id: Write(System.Int32@,System.Int32)\n  parent: System.Threading.Volatile\n  langs:\n  - csharp\n  name: Write(Int32, Int32)\n  nameWithType: Volatile.Write(Int32, Int32)\n  fullName: Volatile.Write(Int32, Int32)\n  type: Method\n  assemblies:\n  - System.Threading\n  - mscorlib\n  - netstandard\n  namespace: System.Threading\n  summary: 'Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.'\n  remarks: For more information, see the <xref:System.Threading.Volatile> class.\n  syntax:\n    content: public static void Write (ref int location, int value);\n    parameters:\n    - id: location\n      type: System.Int32\n      description: The field where the value is written.\n    - id: value\n      type: System.Int32\n      description: The value to write. The value is written immediately so that it is visible to all processors in the computer.\n  overload: System.Threading.Volatile.Write*\n  exceptions: []\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Volatile.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Volatile.Write(System.Int64@,System.Int64)\n  commentId: M:System.Threading.Volatile.Write(System.Int64@,System.Int64)\n  id: Write(System.Int64@,System.Int64)\n  parent: System.Threading.Volatile\n  langs:\n  - csharp\n  name: Write(Int64, Int64)\n  nameWithType: Volatile.Write(Int64, Int64)\n  fullName: Volatile.Write(Int64, Int64)\n  type: Method\n  assemblies:\n  - System.Threading\n  - mscorlib\n  - netstandard\n  namespace: System.Threading\n  summary: 'Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a memory operation appears before this method in the code, the processor cannot move it after this method.'\n  remarks: For more information, see the <xref:System.Threading.Volatile> class.\n  syntax:\n    content: public static void Write (ref long location, long value);\n    parameters:\n    - id: location\n      type: System.Int64\n      description: The field where the value is written.\n    - id: value\n      type: System.Int64\n      description: The value to write. The value is written immediately so that it is visible to all processors in the computer.\n  overload: System.Threading.Volatile.Write*\n  exceptions: []\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Volatile.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Volatile.Write(System.IntPtr@,System.IntPtr)\n  commentId: M:System.Threading.Volatile.Write(System.IntPtr@,System.IntPtr)\n  id: Write(System.IntPtr@,System.IntPtr)\n  parent: System.Threading.Volatile\n  langs:\n  - csharp\n  name: Write(IntPtr, IntPtr)\n  nameWithType: Volatile.Write(IntPtr, IntPtr)\n  fullName: Volatile.Write(IntPtr, IntPtr)\n  type: Method\n  assemblies:\n  - System.Threading\n  - mscorlib\n  - netstandard\n  namespace: System.Threading\n  summary: 'Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.'\n  remarks: For more information, see the <xref:System.Threading.Volatile> class.\n  syntax:\n    content: public static void Write (ref IntPtr location, IntPtr value);\n    parameters:\n    - id: location\n      type: System.IntPtr\n      description: The field where the value is written.\n    - id: value\n      type: System.IntPtr\n      description: The value to write. The value is written immediately so that it is visible to all processors in the computer.\n  overload: System.Threading.Volatile.Write*\n  exceptions: []\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Volatile.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Volatile.Write(System.SByte@,System.SByte)\n  commentId: M:System.Threading.Volatile.Write(System.SByte@,System.SByte)\n  id: Write(System.SByte@,System.SByte)\n  parent: System.Threading.Volatile\n  langs:\n  - csharp\n  name: Write(SByte, SByte)\n  nameWithType: Volatile.Write(SByte, SByte)\n  fullName: Volatile.Write(SByte, SByte)\n  type: Method\n  assemblies:\n  - System.Threading\n  - mscorlib\n  - netstandard\n  namespace: System.Threading\n  summary: 'Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.'\n  remarks: For more information, see the <xref:System.Threading.Volatile> class.\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public static void Write (ref sbyte location, sbyte value);\n    parameters:\n    - id: location\n      type: System.SByte\n      description: The field where the value is written.\n    - id: value\n      type: System.SByte\n      description: The value to write. The value is written immediately so that it is visible to all processors in the computer.\n  overload: System.Threading.Volatile.Write*\n  exceptions: []\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Volatile.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Volatile.Write(System.Single@,System.Single)\n  commentId: M:System.Threading.Volatile.Write(System.Single@,System.Single)\n  id: Write(System.Single@,System.Single)\n  parent: System.Threading.Volatile\n  langs:\n  - csharp\n  name: Write(Single, Single)\n  nameWithType: Volatile.Write(Single, Single)\n  fullName: Volatile.Write(Single, Single)\n  type: Method\n  assemblies:\n  - System.Threading\n  - mscorlib\n  - netstandard\n  namespace: System.Threading\n  summary: 'Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.'\n  remarks: For more information, see the <xref:System.Threading.Volatile> class.\n  syntax:\n    content: public static void Write (ref float location, float value);\n    parameters:\n    - id: location\n      type: System.Single\n      description: The field where the value is written.\n    - id: value\n      type: System.Single\n      description: The value to write. The value is written immediately so that it is visible to all processors in the computer.\n  overload: System.Threading.Volatile.Write*\n  exceptions: []\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Volatile.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Volatile.Write(System.UInt16@,System.UInt16)\n  commentId: M:System.Threading.Volatile.Write(System.UInt16@,System.UInt16)\n  id: Write(System.UInt16@,System.UInt16)\n  parent: System.Threading.Volatile\n  langs:\n  - csharp\n  name: Write(UInt16, UInt16)\n  nameWithType: Volatile.Write(UInt16, UInt16)\n  fullName: Volatile.Write(UInt16, UInt16)\n  type: Method\n  assemblies:\n  - System.Threading\n  - mscorlib\n  - netstandard\n  namespace: System.Threading\n  summary: 'Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.'\n  remarks: For more information, see the <xref:System.Threading.Volatile> class.\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public static void Write (ref ushort location, ushort value);\n    parameters:\n    - id: location\n      type: System.UInt16\n      description: The field where the value is written.\n    - id: value\n      type: System.UInt16\n      description: The value to write. The value is written immediately so that it is visible to all processors in the computer.\n  overload: System.Threading.Volatile.Write*\n  exceptions: []\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  altCompliant: System.Threading.Volatile.Write(System.Int16@,System.Int16)\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Volatile.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Volatile.Write(System.UInt32@,System.UInt32)\n  commentId: M:System.Threading.Volatile.Write(System.UInt32@,System.UInt32)\n  id: Write(System.UInt32@,System.UInt32)\n  parent: System.Threading.Volatile\n  langs:\n  - csharp\n  name: Write(UInt32, UInt32)\n  nameWithType: Volatile.Write(UInt32, UInt32)\n  fullName: Volatile.Write(UInt32, UInt32)\n  type: Method\n  assemblies:\n  - System.Threading\n  - mscorlib\n  - netstandard\n  namespace: System.Threading\n  summary: 'Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.'\n  remarks: For more information, see the <xref:System.Threading.Volatile> class.\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public static void Write (ref uint location, uint value);\n    parameters:\n    - id: location\n      type: System.UInt32\n      description: The field where the value is written.\n    - id: value\n      type: System.UInt32\n      description: The value to write. The value is written immediately so that it is visible to all processors in the computer.\n  overload: System.Threading.Volatile.Write*\n  exceptions: []\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  altCompliant: System.Threading.Volatile.Write(System.Int32@,System.Int32)\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Volatile.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Volatile.Write(System.UInt64@,System.UInt64)\n  commentId: M:System.Threading.Volatile.Write(System.UInt64@,System.UInt64)\n  id: Write(System.UInt64@,System.UInt64)\n  parent: System.Threading.Volatile\n  langs:\n  - csharp\n  name: Write(UInt64, UInt64)\n  nameWithType: Volatile.Write(UInt64, UInt64)\n  fullName: Volatile.Write(UInt64, UInt64)\n  type: Method\n  assemblies:\n  - System.Threading\n  - mscorlib\n  - netstandard\n  namespace: System.Threading\n  summary: 'Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.'\n  remarks: For more information, see the <xref:System.Threading.Volatile> class.\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public static void Write (ref ulong location, ulong value);\n    parameters:\n    - id: location\n      type: System.UInt64\n      description: The field where the value is written.\n    - id: value\n      type: System.UInt64\n      description: The value to write. The value is written immediately so that it is visible to all processors in the computer.\n  overload: System.Threading.Volatile.Write*\n  exceptions: []\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  altCompliant: System.Threading.Volatile.Write(System.Int64@,System.Int64)\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Volatile.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Volatile.Write(System.UIntPtr@,System.UIntPtr)\n  commentId: M:System.Threading.Volatile.Write(System.UIntPtr@,System.UIntPtr)\n  id: Write(System.UIntPtr@,System.UIntPtr)\n  parent: System.Threading.Volatile\n  langs:\n  - csharp\n  name: Write(UIntPtr, UIntPtr)\n  nameWithType: Volatile.Write(UIntPtr, UIntPtr)\n  fullName: Volatile.Write(UIntPtr, UIntPtr)\n  type: Method\n  assemblies:\n  - System.Threading\n  - mscorlib\n  - netstandard\n  namespace: System.Threading\n  summary: 'Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.'\n  remarks: For more information, see the <xref:System.Threading.Volatile> class.\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public static void Write (ref UIntPtr location, UIntPtr value);\n    parameters:\n    - id: location\n      type: System.UIntPtr\n      description: The field where the value is written.\n    - id: value\n      type: System.UIntPtr\n      description: The value to write. The value is written immediately so that it is visible to all processors in the computer.\n  overload: System.Threading.Volatile.Write*\n  exceptions: []\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  altCompliant: System.Threading.Volatile.Write(System.IntPtr@,System.IntPtr)\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Volatile.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Volatile.Write``1(``0@,``0)\n  commentId: M:System.Threading.Volatile.Write``1(``0@,``0)\n  id: Write``1(``0@,``0)\n  parent: System.Threading.Volatile\n  langs:\n  - csharp\n  name: Write<T>(T, T)\n  nameWithType: Volatile.Write<T>(T, T)\n  fullName: Volatile.Write<T>(T, T)\n  type: Method\n  assemblies:\n  - System.Threading\n  - mscorlib\n  - netstandard\n  namespace: System.Threading\n  summary: 'Writes the specified object reference to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.'\n  remarks: For more information, see the <xref:System.Threading.Volatile> class.\n  syntax:\n    content: 'public static void Write<T> (ref T location, T value) where T : class;'\n    parameters:\n    - id: location\n      type: T\n      description: The field where the object reference is written.\n    - id: value\n      type: T\n      description: The object reference to write. The reference is written immediately so that it is visible to all processors in the computer.\n    typeParameters:\n    - id: T\n      description: The type of field to write. This must be a reference type, not a value type.\n  overload: System.Threading.Volatile.Write``1*\n  exceptions: []\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Volatile.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.Volatile.Read(System.Boolean@)\n  parent: System.Threading.Volatile\n  isExternal: false\n  name: Read(Boolean)\n  nameWithType: Volatile.Read(Boolean)\n  fullName: Volatile.Read(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Threading.Volatile.Read(System.Byte@)\n  parent: System.Threading.Volatile\n  isExternal: false\n  name: Read(Byte)\n  nameWithType: Volatile.Read(Byte)\n  fullName: Volatile.Read(Byte)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Threading.Volatile.Read(System.Double@)\n  parent: System.Threading.Volatile\n  isExternal: false\n  name: Read(Double)\n  nameWithType: Volatile.Read(Double)\n  fullName: Volatile.Read(Double)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Threading.Volatile.Read(System.Int16@)\n  parent: System.Threading.Volatile\n  isExternal: false\n  name: Read(Int16)\n  nameWithType: Volatile.Read(Int16)\n  fullName: Volatile.Read(Int16)\n- uid: System.Int16\n  parent: System\n  isExternal: false\n  name: Int16\n  nameWithType: Int16\n  fullName: System.Int16\n- uid: System.Threading.Volatile.Read(System.Int32@)\n  parent: System.Threading.Volatile\n  isExternal: false\n  name: Read(Int32)\n  nameWithType: Volatile.Read(Int32)\n  fullName: Volatile.Read(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Threading.Volatile.Read(System.Int64@)\n  parent: System.Threading.Volatile\n  isExternal: false\n  name: Read(Int64)\n  nameWithType: Volatile.Read(Int64)\n  fullName: Volatile.Read(Int64)\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Threading.Volatile.Read(System.IntPtr@)\n  parent: System.Threading.Volatile\n  isExternal: false\n  name: Read(IntPtr)\n  nameWithType: Volatile.Read(IntPtr)\n  fullName: Volatile.Read(IntPtr)\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Threading.Volatile.Read(System.SByte@)\n  parent: System.Threading.Volatile\n  isExternal: false\n  name: Read(SByte)\n  nameWithType: Volatile.Read(SByte)\n  fullName: Volatile.Read(SByte)\n- uid: System.SByte\n  parent: System\n  isExternal: false\n  name: SByte\n  nameWithType: SByte\n  fullName: System.SByte\n- uid: System.Threading.Volatile.Read(System.Single@)\n  parent: System.Threading.Volatile\n  isExternal: false\n  name: Read(Single)\n  nameWithType: Volatile.Read(Single)\n  fullName: Volatile.Read(Single)\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.Threading.Volatile.Read(System.UInt16@)\n  parent: System.Threading.Volatile\n  isExternal: false\n  name: Read(UInt16)\n  nameWithType: Volatile.Read(UInt16)\n  fullName: Volatile.Read(UInt16)\n- uid: System.UInt16\n  parent: System\n  isExternal: false\n  name: UInt16\n  nameWithType: UInt16\n  fullName: System.UInt16\n- uid: System.Threading.Volatile.Read(System.UInt32@)\n  parent: System.Threading.Volatile\n  isExternal: false\n  name: Read(UInt32)\n  nameWithType: Volatile.Read(UInt32)\n  fullName: Volatile.Read(UInt32)\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.Threading.Volatile.Read(System.UInt64@)\n  parent: System.Threading.Volatile\n  isExternal: false\n  name: Read(UInt64)\n  nameWithType: Volatile.Read(UInt64)\n  fullName: Volatile.Read(UInt64)\n- uid: System.UInt64\n  parent: System\n  isExternal: false\n  name: UInt64\n  nameWithType: UInt64\n  fullName: System.UInt64\n- uid: System.Threading.Volatile.Read(System.UIntPtr@)\n  parent: System.Threading.Volatile\n  isExternal: false\n  name: Read(UIntPtr)\n  nameWithType: Volatile.Read(UIntPtr)\n  fullName: Volatile.Read(UIntPtr)\n- uid: System.UIntPtr\n  parent: System\n  isExternal: false\n  name: UIntPtr\n  nameWithType: UIntPtr\n  fullName: System.UIntPtr\n- uid: System.Threading.Volatile.Read``1(``0@)\n  parent: System.Threading.Volatile\n  isExternal: false\n  name: Read<T>(T)\n  nameWithType: Volatile.Read<T>(T)\n  fullName: Volatile.Read<T>(T)\n- uid: T\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Threading.Volatile.Write(System.Boolean@,System.Boolean)\n  parent: System.Threading.Volatile\n  isExternal: false\n  name: Write(Boolean, Boolean)\n  nameWithType: Volatile.Write(Boolean, Boolean)\n  fullName: Volatile.Write(Boolean, Boolean)\n- uid: System.Threading.Volatile.Write(System.Byte@,System.Byte)\n  parent: System.Threading.Volatile\n  isExternal: false\n  name: Write(Byte, Byte)\n  nameWithType: Volatile.Write(Byte, Byte)\n  fullName: Volatile.Write(Byte, Byte)\n- uid: System.Threading.Volatile.Write(System.Double@,System.Double)\n  parent: System.Threading.Volatile\n  isExternal: false\n  name: Write(Double, Double)\n  nameWithType: Volatile.Write(Double, Double)\n  fullName: Volatile.Write(Double, Double)\n- uid: System.Threading.Volatile.Write(System.Int16@,System.Int16)\n  parent: System.Threading.Volatile\n  isExternal: false\n  name: Write(Int16, Int16)\n  nameWithType: Volatile.Write(Int16, Int16)\n  fullName: Volatile.Write(Int16, Int16)\n- uid: System.Threading.Volatile.Write(System.Int32@,System.Int32)\n  parent: System.Threading.Volatile\n  isExternal: false\n  name: Write(Int32, Int32)\n  nameWithType: Volatile.Write(Int32, Int32)\n  fullName: Volatile.Write(Int32, Int32)\n- uid: System.Threading.Volatile.Write(System.Int64@,System.Int64)\n  parent: System.Threading.Volatile\n  isExternal: false\n  name: Write(Int64, Int64)\n  nameWithType: Volatile.Write(Int64, Int64)\n  fullName: Volatile.Write(Int64, Int64)\n- uid: System.Threading.Volatile.Write(System.IntPtr@,System.IntPtr)\n  parent: System.Threading.Volatile\n  isExternal: false\n  name: Write(IntPtr, IntPtr)\n  nameWithType: Volatile.Write(IntPtr, IntPtr)\n  fullName: Volatile.Write(IntPtr, IntPtr)\n- uid: System.Threading.Volatile.Write(System.SByte@,System.SByte)\n  parent: System.Threading.Volatile\n  isExternal: false\n  name: Write(SByte, SByte)\n  nameWithType: Volatile.Write(SByte, SByte)\n  fullName: Volatile.Write(SByte, SByte)\n- uid: System.Threading.Volatile.Write(System.Single@,System.Single)\n  parent: System.Threading.Volatile\n  isExternal: false\n  name: Write(Single, Single)\n  nameWithType: Volatile.Write(Single, Single)\n  fullName: Volatile.Write(Single, Single)\n- uid: System.Threading.Volatile.Write(System.UInt16@,System.UInt16)\n  parent: System.Threading.Volatile\n  isExternal: false\n  name: Write(UInt16, UInt16)\n  nameWithType: Volatile.Write(UInt16, UInt16)\n  fullName: Volatile.Write(UInt16, UInt16)\n- uid: System.Threading.Volatile.Write(System.UInt32@,System.UInt32)\n  parent: System.Threading.Volatile\n  isExternal: false\n  name: Write(UInt32, UInt32)\n  nameWithType: Volatile.Write(UInt32, UInt32)\n  fullName: Volatile.Write(UInt32, UInt32)\n- uid: System.Threading.Volatile.Write(System.UInt64@,System.UInt64)\n  parent: System.Threading.Volatile\n  isExternal: false\n  name: Write(UInt64, UInt64)\n  nameWithType: Volatile.Write(UInt64, UInt64)\n  fullName: Volatile.Write(UInt64, UInt64)\n- uid: System.Threading.Volatile.Write(System.UIntPtr@,System.UIntPtr)\n  parent: System.Threading.Volatile\n  isExternal: false\n  name: Write(UIntPtr, UIntPtr)\n  nameWithType: Volatile.Write(UIntPtr, UIntPtr)\n  fullName: Volatile.Write(UIntPtr, UIntPtr)\n- uid: System.Threading.Volatile.Write``1(``0@,``0)\n  parent: System.Threading.Volatile\n  isExternal: false\n  name: Write<T>(T, T)\n  nameWithType: Volatile.Write<T>(T, T)\n  fullName: Volatile.Write<T>(T, T)\n- uid: System.Threading.Volatile.Read*\n  parent: System.Threading.Volatile\n  isExternal: false\n  name: Read\n  nameWithType: Volatile.Read\n  fullName: Volatile.Read\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Volatile.xml\n- uid: System.Threading.Volatile.Read``1*\n  parent: System.Threading.Volatile\n  isExternal: false\n  name: Read<T>\n  nameWithType: Volatile.Read<T>\n  fullName: Volatile.Read<T>\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Volatile.xml\n- uid: System.Threading.Volatile.Write*\n  parent: System.Threading.Volatile\n  isExternal: false\n  name: Write\n  nameWithType: Volatile.Write\n  fullName: Volatile.Write\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Volatile.xml\n- uid: System.Threading.Volatile.Write``1*\n  parent: System.Threading.Volatile\n  isExternal: false\n  name: Write<T>\n  nameWithType: Volatile.Write<T>\n  fullName: Volatile.Write<T>\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Volatile.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}