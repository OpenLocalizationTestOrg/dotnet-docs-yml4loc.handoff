### YamlMime:ManagedReference
items:
- uid: System.Security.RightsManagement.UseLicense
  commentId: T:System.Security.RightsManagement.UseLicense
  id: UseLicense
  children:
  - System.Security.RightsManagement.UseLicense.#ctor(System.String)
  - System.Security.RightsManagement.UseLicense.ApplicationData
  - System.Security.RightsManagement.UseLicense.Bind(System.Security.RightsManagement.SecureEnvironment)
  - System.Security.RightsManagement.UseLicense.ContentId
  - System.Security.RightsManagement.UseLicense.Equals(System.Object)
  - System.Security.RightsManagement.UseLicense.GetHashCode
  - System.Security.RightsManagement.UseLicense.Owner
  - System.Security.RightsManagement.UseLicense.ToString
  langs:
  - csharp
  name: UseLicense
  nameWithType: UseLicense
  fullName: System.Security.RightsManagement.UseLicense
  type: Class
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: Represents a license that enables access to protected rights managed content.
  remarks: As with other <xref:System.Security.RightsManagement> types, <xref:System.Security.RightsManagement.UseLicense> is only usable in full trust applications.
  example:
  - "The following example shows how to use this class to initialize a <xref:System.Security.RightsManagement.PublishLicense>.  \n  \n [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]\n [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]"
  syntax:
    content: >-
      [System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)]

      public class UseLicense
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: System.Security.SecurityCriticalAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/UseLicense.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Security.RightsManagement.UseLicense.#ctor(System.String)
  commentId: M:System.Security.RightsManagement.UseLicense.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.RightsManagement.UseLicense
  langs:
  - csharp
  name: UseLicense(String)
  nameWithType: UseLicense.UseLicense(String)
  fullName: UseLicense.UseLicense(String)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: Initializes a new instance of the <xref href="System.Security.RightsManagement.UseLicense"></xref> class.
  syntax:
    content: public UseLicense (string useLicense);
    parameters:
    - id: useLicense
      type: System.String
      description: A use license in serialized [!INCLUDE[TLA#tla_xrml](~/includes/tlasharptla-xrml-md.md)] form.
  overload: System.Security.RightsManagement.UseLicense.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>useLicense</code> is `null`.
  - type: System.Security.RightsManagement.RightsManagementException
    commentId: T:System.Security.RightsManagement.RightsManagementException
    description: <code>useLicense</code> is invalid.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/UseLicense.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Security.RightsManagement.UseLicense.ApplicationData
  commentId: P:System.Security.RightsManagement.UseLicense.ApplicationData
  id: ApplicationData
  parent: System.Security.RightsManagement.UseLicense
  langs:
  - csharp
  name: ApplicationData
  nameWithType: UseLicense.ApplicationData
  fullName: UseLicense.ApplicationData
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: Gets the application data dictionary that contains key/value pairs passed from the publishing application to the consuming application.
  remarks: "One data key/value pair that is processed by a Rights Management Services (RMS) server is the string pair \"Allow_Server_Editing\"/\"True\".  When the issuance license \"Allow_Server_Editing\"/\"True\" is set, the service, or any trusted service, can reuse the content key.  \n  \n The key/value pair \"NOLICCACHE\" / \"1\" controls the Use License embedding policy of consuming applications.  When \"NOLICCACHE\" / \"1\" is set, applications are expected not to embed the Use License within the rights managed document."
  syntax:
    content: public System.Collections.Generic.IDictionary<string,string> ApplicationData { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: The application data dictionary that contains key/value pairs passed from the publishing application to the consuming application.
  overload: System.Security.RightsManagement.UseLicense.ApplicationData*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/UseLicense.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Security.RightsManagement.UseLicense.Bind(System.Security.RightsManagement.SecureEnvironment)
  commentId: M:System.Security.RightsManagement.UseLicense.Bind(System.Security.RightsManagement.SecureEnvironment)
  id: Bind(System.Security.RightsManagement.SecureEnvironment)
  parent: System.Security.RightsManagement.UseLicense
  langs:
  - csharp
  name: Bind(SecureEnvironment)
  nameWithType: UseLicense.Bind(SecureEnvironment)
  fullName: UseLicense.Bind(SecureEnvironment)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: Binds the license to a given <xref href="System.Security.RightsManagement.SecureEnvironment"></xref>.
  remarks: "After the license is bound to a secure environment, the application can examine and exercise the rights granted by the license.  \n  \n The returned <xref:System.Security.RightsManagement.CryptoProvider> instance provides decryption and access to the protected rights managed content."
  example:
  - "The following example shows how to use this method to initialize a <xref:System.Security.RightsManagement.CryptoProvider>.  \n  \n [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]\n [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]"
  syntax:
    content: public System.Security.RightsManagement.CryptoProvider Bind (System.Security.RightsManagement.SecureEnvironment secureEnvironment);
    parameters:
    - id: secureEnvironment
      type: System.Security.RightsManagement.SecureEnvironment
      description: The environment to bind the license to.
    return:
      type: System.Security.RightsManagement.CryptoProvider
      description: A <xref href="System.Security.RightsManagement.CryptoProvider"></xref> instance if the license binding succeeded; otherwise, `null`.
  overload: System.Security.RightsManagement.UseLicense.Bind*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>secureEnvironment</code> is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/UseLicense.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Security.RightsManagement.UseLicense.ContentId
  commentId: P:System.Security.RightsManagement.UseLicense.ContentId
  id: ContentId
  parent: System.Security.RightsManagement.UseLicense
  langs:
  - csharp
  name: ContentId
  nameWithType: UseLicense.ContentId
  fullName: UseLicense.ContentId
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: Gets the content identifier created by the publisher.
  remarks: <xref:System.Security.RightsManagement.UseLicense.ContentId%2A> is created by the publisher and can be used to match content to a <xref:System.Security.RightsManagement.UseLicense> and <xref:System.Security.RightsManagement.PublishLicense>.
  syntax:
    content: public Guid ContentId { get; }
    return:
      type: System.Guid
      description: The content identifier created by the publisher.
  overload: System.Security.RightsManagement.UseLicense.ContentId*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/UseLicense.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Security.RightsManagement.UseLicense.Equals(System.Object)
  commentId: M:System.Security.RightsManagement.UseLicense.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.RightsManagement.UseLicense
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: UseLicense.Equals(Object)
  fullName: UseLicense.Equals(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: Indicates if this license is equivalent to another given license.
  remarks: <xref:System.Security.RightsManagement.UseLicense.Equals%2A> tests for equivalence comparing the serialized [!INCLUDE[TLA#tla_xrml](~/includes/tlasharptla-xrml-md.md)] strings specified to the <xref:System.Security.RightsManagement.UseLicense.%23ctor%2A> constructors.
  syntax:
    content: public override bool Equals (object x);
    parameters:
    - id: x
      type: System.Object
      description: The license to compare.
    return:
      type: System.Boolean
      description: '`true` if both licenses are the equivalent; otherwise, `false`.'
  overload: System.Security.RightsManagement.UseLicense.Equals*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/UseLicense.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Security.RightsManagement.UseLicense.GetHashCode
  commentId: M:System.Security.RightsManagement.UseLicense.GetHashCode
  id: GetHashCode
  parent: System.Security.RightsManagement.UseLicense
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: UseLicense.GetHashCode()
  fullName: UseLicense.GetHashCode()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: Returns the hash code associated with this license.
  remarks: The returned hash code is based on the serialized [!INCLUDE[TLA#tla_xrml](~/includes/tlasharptla-xrml-md.md)] string passed to the <xref:System.Security.RightsManagement.UseLicense.%23ctor%2A> constructor.
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: A hash code for this license.
  overload: System.Security.RightsManagement.UseLicense.GetHashCode*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/UseLicense.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Security.RightsManagement.UseLicense.Owner
  commentId: P:System.Security.RightsManagement.UseLicense.Owner
  id: Owner
  parent: System.Security.RightsManagement.UseLicense
  langs:
  - csharp
  name: Owner
  nameWithType: UseLicense.Owner
  fullName: UseLicense.Owner
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: Gets the owner of the license.
  remarks: The license owner is obtained from the serialized [!INCLUDE[TLA#tla_xrml](~/includes/tlasharptla-xrml-md.md)] string passed to the <xref:System.Security.RightsManagement.UseLicense.%23ctor%2A> constructor.
  syntax:
    content: public System.Security.RightsManagement.ContentUser Owner { get; }
    return:
      type: System.Security.RightsManagement.ContentUser
      description: The owner of the license.
  overload: System.Security.RightsManagement.UseLicense.Owner*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/UseLicense.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Security.RightsManagement.UseLicense.ToString
  commentId: M:System.Security.RightsManagement.UseLicense.ToString
  id: ToString
  parent: System.Security.RightsManagement.UseLicense
  langs:
  - csharp
  name: ToString()
  nameWithType: UseLicense.ToString()
  fullName: UseLicense.ToString()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: Returns the serialized [!INCLUDE[TLA2#tla_xrml](~/includes/tla2sharptla-xrml-md.md)] string used to create this license.
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: The serialized [!INCLUDE[TLA#tla_xrml](~/includes/tlasharptla-xrml-md.md)] string originally passed to the <xref href="System.Security.RightsManagement.UseLicense.#ctor(System.String)"></xref> constructor.
  overload: System.Security.RightsManagement.UseLicense.ToString*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/UseLicense.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.Security.RightsManagement.RightsManagementException
  parent: System.Security.RightsManagement
  isExternal: false
  name: RightsManagementException
  nameWithType: RightsManagementException
  fullName: System.Security.RightsManagement.RightsManagementException
- uid: System.Security.RightsManagement.UseLicense.#ctor(System.String)
  parent: System.Security.RightsManagement.UseLicense
  isExternal: false
  name: UseLicense(String)
  nameWithType: UseLicense.UseLicense(String)
  fullName: UseLicense.UseLicense(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.RightsManagement.UseLicense.ApplicationData
  parent: System.Security.RightsManagement.UseLicense
  isExternal: false
  name: ApplicationData
  nameWithType: UseLicense.ApplicationData
  fullName: UseLicense.ApplicationData
- uid: System.Collections.Generic.IDictionary`2
  name: IDictionary<TKey,TValue>
  nameWithType: IDictionary<TKey,TValue>
  fullName: System.Collections.Generic.IDictionary<TKey,TValue>
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  isExternal: false
  name: IDictionary<String,String>
  nameWithType: IDictionary<String,String>
  fullName: System.Collections.Generic.IDictionary<System.String,System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Security.RightsManagement.UseLicense.Bind(System.Security.RightsManagement.SecureEnvironment)
  parent: System.Security.RightsManagement.UseLicense
  isExternal: false
  name: Bind(SecureEnvironment)
  nameWithType: UseLicense.Bind(SecureEnvironment)
  fullName: UseLicense.Bind(SecureEnvironment)
- uid: System.Security.RightsManagement.CryptoProvider
  parent: System.Security.RightsManagement
  isExternal: false
  name: CryptoProvider
  nameWithType: CryptoProvider
  fullName: System.Security.RightsManagement.CryptoProvider
- uid: System.Security.RightsManagement.SecureEnvironment
  parent: System.Security.RightsManagement
  isExternal: false
  name: SecureEnvironment
  nameWithType: SecureEnvironment
  fullName: System.Security.RightsManagement.SecureEnvironment
- uid: System.Security.RightsManagement.UseLicense.ContentId
  parent: System.Security.RightsManagement.UseLicense
  isExternal: false
  name: ContentId
  nameWithType: UseLicense.ContentId
  fullName: UseLicense.ContentId
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Security.RightsManagement.UseLicense.Equals(System.Object)
  parent: System.Security.RightsManagement.UseLicense
  isExternal: false
  name: Equals(Object)
  nameWithType: UseLicense.Equals(Object)
  fullName: UseLicense.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.RightsManagement.UseLicense.GetHashCode
  parent: System.Security.RightsManagement.UseLicense
  isExternal: false
  name: GetHashCode()
  nameWithType: UseLicense.GetHashCode()
  fullName: UseLicense.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.RightsManagement.UseLicense.Owner
  parent: System.Security.RightsManagement.UseLicense
  isExternal: false
  name: Owner
  nameWithType: UseLicense.Owner
  fullName: UseLicense.Owner
- uid: System.Security.RightsManagement.ContentUser
  parent: System.Security.RightsManagement
  isExternal: false
  name: ContentUser
  nameWithType: ContentUser
  fullName: System.Security.RightsManagement.ContentUser
- uid: System.Security.RightsManagement.UseLicense.ToString
  parent: System.Security.RightsManagement.UseLicense
  isExternal: false
  name: ToString()
  nameWithType: UseLicense.ToString()
  fullName: UseLicense.ToString()
- uid: System.Security.RightsManagement.UseLicense.#ctor*
  parent: System.Security.RightsManagement.UseLicense
  isExternal: false
  name: UseLicense
  nameWithType: UseLicense.UseLicense
  fullName: UseLicense.UseLicense
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/UseLicense.xml
- uid: System.Security.RightsManagement.UseLicense.ApplicationData*
  parent: System.Security.RightsManagement.UseLicense
  isExternal: false
  name: ApplicationData
  nameWithType: UseLicense.ApplicationData
  fullName: UseLicense.ApplicationData
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/UseLicense.xml
- uid: System.Security.RightsManagement.UseLicense.Bind*
  parent: System.Security.RightsManagement.UseLicense
  isExternal: false
  name: Bind
  nameWithType: UseLicense.Bind
  fullName: UseLicense.Bind
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/UseLicense.xml
- uid: System.Security.RightsManagement.UseLicense.ContentId*
  parent: System.Security.RightsManagement.UseLicense
  isExternal: false
  name: ContentId
  nameWithType: UseLicense.ContentId
  fullName: UseLicense.ContentId
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/UseLicense.xml
- uid: System.Security.RightsManagement.UseLicense.Equals*
  parent: System.Security.RightsManagement.UseLicense
  isExternal: false
  name: Equals
  nameWithType: UseLicense.Equals
  fullName: UseLicense.Equals
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/UseLicense.xml
- uid: System.Security.RightsManagement.UseLicense.GetHashCode*
  parent: System.Security.RightsManagement.UseLicense
  isExternal: false
  name: GetHashCode
  nameWithType: UseLicense.GetHashCode
  fullName: UseLicense.GetHashCode
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/UseLicense.xml
- uid: System.Security.RightsManagement.UseLicense.Owner*
  parent: System.Security.RightsManagement.UseLicense
  isExternal: false
  name: Owner
  nameWithType: UseLicense.Owner
  fullName: UseLicense.Owner
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/UseLicense.xml
- uid: System.Security.RightsManagement.UseLicense.ToString*
  parent: System.Security.RightsManagement.UseLicense
  isExternal: false
  name: ToString
  nameWithType: UseLicense.ToString
  fullName: UseLicense.ToString
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/UseLicense.xml
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
