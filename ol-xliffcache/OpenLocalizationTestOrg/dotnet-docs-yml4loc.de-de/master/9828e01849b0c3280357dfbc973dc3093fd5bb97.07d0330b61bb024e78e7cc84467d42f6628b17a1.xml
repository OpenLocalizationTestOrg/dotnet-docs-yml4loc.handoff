{"nodes":[{"content":"Provides the base implementation for the factory that allows application code to participate in the creation of service hosts in managed hosting environments where the host instance is created dynamically in response to incoming messages.","nodes":[{"pos":[0,238],"content":"Provides the base implementation for the factory that allows application code to participate in the creation of service hosts in managed hosting environments where the host instance is created dynamically in response to incoming messages.","nodes":[{"content":"Provides the base implementation for the factory that allows application code to participate in the creation of service hosts in managed hosting environments where the host instance is created dynamically in response to incoming messages.","pos":[0,238]}]}],"pos":[638,877],"yaml":true},{"content":"The managed hosting environments that support this interface are Internet Information Services (IIS) or Windows Process Activation Services (WAS). Implement a factory that derives from this class when you have implemented a custom derivative of <xref:System.ServiceModel.ServiceHostBase> in these hosting environments. If you have implemented a custom derivative of <xref:System.ServiceModel.ServiceHost>, consider deriving from <xref:System.ServiceModel.Activation.ServiceHostFactory> instead.","nodes":[{"pos":[0,494],"content":"The managed hosting environments that support this interface are Internet Information Services (IIS) or Windows Process Activation Services (WAS). Implement a factory that derives from this class when you have implemented a custom derivative of <xref:System.ServiceModel.ServiceHostBase> in these hosting environments. If you have implemented a custom derivative of <xref:System.ServiceModel.ServiceHost>, consider deriving from <xref:System.ServiceModel.Activation.ServiceHostFactory> instead.","nodes":[{"content":"The managed hosting environments that support this interface are Internet Information Services (IIS) or Windows Process Activation Services (WAS). Implement a factory that derives from this class when you have implemented a custom derivative of <xref:System.ServiceModel.ServiceHostBase> in these hosting environments. If you have implemented a custom derivative of <xref:System.ServiceModel.ServiceHost>, consider deriving from <xref:System.ServiceModel.Activation.ServiceHostFactory> instead.","pos":[0,494],"nodes":[{"content":"The managed hosting environments that support this interface are Internet Information Services (IIS) or Windows Process Activation Services (WAS).","pos":[0,146]},{"content":"Implement a factory that derives from this class when you have implemented a custom derivative of <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceHostBase&gt;</ph> in these hosting environments.","pos":[147,318],"source":" Implement a factory that derives from this class when you have implemented a custom derivative of <xref:System.ServiceModel.ServiceHostBase> in these hosting environments."},{"content":"If you have implemented a custom derivative of <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph>, consider deriving from <ph id=\"ph2\">&lt;xref:System.ServiceModel.Activation.ServiceHostFactory&gt;</ph> instead.","pos":[319,494],"source":" If you have implemented a custom derivative of <xref:System.ServiceModel.ServiceHost>, consider deriving from <xref:System.ServiceModel.Activation.ServiceHostFactory> instead."}]}]}],"pos":[888,1383],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Activation.ServiceHostFactoryBase\"></xref> class.","nodes":[{"pos":[0,115],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Activation.ServiceHostFactoryBase\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Activation.ServiceHostFactoryBase\"></xref> class."}],"pos":[3124,3240],"yaml":true},{"content":"When overridden in a derived class, creates a <xref href=\"System.ServiceModel.ServiceHostBase\"></xref> with a specific base address using custom initiation data.","nodes":[{"pos":[0,161],"content":"When overridden in a derived class, creates a <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.ServiceHostBase\"&gt;&lt;/xref&gt;</ph> with a specific base address using custom initiation data.","source":"When overridden in a derived class, creates a <xref href=\"System.ServiceModel.ServiceHostBase\"></xref> with a specific base address using custom initiation data."}],"pos":[4605,4767],"yaml":true},{"content":"The initialization data that is passed to the <xref href=\"System.ServiceModel.ServiceHostBase\"></xref> instance being constructed by the factory.","nodes":[{"pos":[0,145],"content":"The initialization data that is passed to the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.ServiceHostBase\"&gt;&lt;/xref&gt;</ph> instance being constructed by the factory.","source":"The initialization data that is passed to the <xref href=\"System.ServiceModel.ServiceHostBase\"></xref> instance being constructed by the factory."}],"pos":[4998,5144],"yaml":true},{"content":"An <xref href=\"System.Array\"></xref> of type <xref href=\"System.Uri\"></xref> that contains the base addresses of the host.","nodes":[{"pos":[0,122],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Array\"&gt;&lt;/xref&gt;</ph> of type <ph id=\"ph2\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph> that contains the base addresses of the host.","source":"An <xref href=\"System.Array\"></xref> of type <xref href=\"System.Uri\"></xref> that contains the base addresses of the host."}],"pos":[5212,5335],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.ServiceHostBase\"></xref> object with the specified base addresses and initialized with the custom initiation data.","nodes":[{"pos":[0,150],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.ServiceHostBase\"&gt;&lt;/xref&gt;</ph> object with the specified base addresses and initialized with the custom initiation data.","source":"The <xref href=\"System.ServiceModel.ServiceHostBase\"></xref> object with the specified base addresses and initialized with the custom initiation data."}],"pos":[5414,5565],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Activation.ServiceHostFactoryBase\n  commentId: T:System.ServiceModel.Activation.ServiceHostFactoryBase\n  id: ServiceHostFactoryBase\n  children:\n  - System.ServiceModel.Activation.ServiceHostFactoryBase.#ctor\n  - System.ServiceModel.Activation.ServiceHostFactoryBase.CreateServiceHost(System.String,System.Uri[])\n  langs:\n  - csharp\n  name: ServiceHostFactoryBase\n  nameWithType: ServiceHostFactoryBase\n  fullName: System.ServiceModel.Activation.ServiceHostFactoryBase\n  type: Class\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Activation\n  summary: Provides the base implementation for the factory that allows application code to participate in the creation of service hosts in managed hosting environments where the host instance is created dynamically in response to incoming messages.\n  remarks: The managed hosting environments that support this interface are Internet Information Services (IIS) or Windows Process Activation Services (WAS). Implement a factory that derives from this class when you have implemented a custom derivative of <xref:System.ServiceModel.ServiceHostBase> in these hosting environments. If you have implemented a custom derivative of <xref:System.ServiceModel.ServiceHost>, consider deriving from <xref:System.ServiceModel.Activation.ServiceHostFactory> instead.\n  syntax:\n    content: public abstract class ServiceHostFactoryBase\n  inheritance:\n  - System.Object\n  derivedClasses:\n  - System.ServiceModel.Activation.ServiceHostFactory\n  - System.ServiceModel.Activation.WorkflowServiceHostFactory\n  - System.ServiceModel.Activities.Activation.WorkflowServiceHostFactory\n  - System.ServiceModel.ComIntegration.WasHostedComPlusFactory\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Activation/ServiceHostFactoryBase.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Activation.ServiceHostFactoryBase.#ctor\n  commentId: M:System.ServiceModel.Activation.ServiceHostFactoryBase.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Activation.ServiceHostFactoryBase\n  langs:\n  - csharp\n  name: ServiceHostFactoryBase()\n  nameWithType: ServiceHostFactoryBase.ServiceHostFactoryBase()\n  fullName: ServiceHostFactoryBase.ServiceHostFactoryBase()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Activation\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Activation.ServiceHostFactoryBase\"></xref> class.\n  syntax:\n    content: protected ServiceHostFactoryBase ();\n    parameters: []\n  overload: System.ServiceModel.Activation.ServiceHostFactoryBase.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Activation/ServiceHostFactoryBase.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Activation.ServiceHostFactoryBase.CreateServiceHost(System.String,System.Uri[])\n  commentId: M:System.ServiceModel.Activation.ServiceHostFactoryBase.CreateServiceHost(System.String,System.Uri[])\n  id: CreateServiceHost(System.String,System.Uri[])\n  parent: System.ServiceModel.Activation.ServiceHostFactoryBase\n  langs:\n  - csharp\n  name: CreateServiceHost(String, Uri[])\n  nameWithType: ServiceHostFactoryBase.CreateServiceHost(String, Uri[])\n  fullName: ServiceHostFactoryBase.CreateServiceHost(String, Uri[])\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Activation\n  summary: When overridden in a derived class, creates a <xref href=\"System.ServiceModel.ServiceHostBase\"></xref> with a specific base address using custom initiation data.\n  syntax:\n    content: public abstract System.ServiceModel.ServiceHostBase CreateServiceHost (string constructorString, Uri[] baseAddresses);\n    parameters:\n    - id: constructorString\n      type: System.String\n      description: The initialization data that is passed to the <xref href=\"System.ServiceModel.ServiceHostBase\"></xref> instance being constructed by the factory.\n    - id: baseAddresses\n      type: System.Uri[]\n      description: An <xref href=\"System.Array\"></xref> of type <xref href=\"System.Uri\"></xref> that contains the base addresses of the host.\n    return:\n      type: System.ServiceModel.ServiceHostBase\n      description: The <xref href=\"System.ServiceModel.ServiceHostBase\"></xref> object with the specified base addresses and initialized with the custom initiation data.\n  overload: System.ServiceModel.Activation.ServiceHostFactoryBase.CreateServiceHost*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Activation/ServiceHostFactoryBase.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ServiceModel.Activation.ServiceHostFactoryBase.#ctor\n  parent: System.ServiceModel.Activation.ServiceHostFactoryBase\n  isExternal: false\n  name: ServiceHostFactoryBase()\n  nameWithType: ServiceHostFactoryBase.ServiceHostFactoryBase()\n  fullName: ServiceHostFactoryBase.ServiceHostFactoryBase()\n- uid: System.ServiceModel.Activation.ServiceHostFactoryBase.CreateServiceHost(System.String,System.Uri[])\n  parent: System.ServiceModel.Activation.ServiceHostFactoryBase\n  isExternal: false\n  name: CreateServiceHost(String, Uri[])\n  nameWithType: ServiceHostFactoryBase.CreateServiceHost(String, Uri[])\n  fullName: ServiceHostFactoryBase.CreateServiceHost(String, Uri[])\n- uid: System.ServiceModel.ServiceHostBase\n  parent: System.ServiceModel\n  isExternal: false\n  name: ServiceHostBase\n  nameWithType: ServiceHostBase\n  fullName: System.ServiceModel.ServiceHostBase\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Uri\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri\n- uid: System.Uri[]\n  parent: System\n  isExternal: false\n  name: Uri[]\n  nameWithType: Uri[]\n  fullName: System.Uri[]\n  spec.csharp:\n  - uid: System.Uri\n    name: Uri\n    nameWithType: Uri\n    fullName: System.Uri\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.ServiceModel.Activation.ServiceHostFactoryBase.#ctor*\n  parent: System.ServiceModel.Activation.ServiceHostFactoryBase\n  isExternal: false\n  name: ServiceHostFactoryBase\n  nameWithType: ServiceHostFactoryBase.ServiceHostFactoryBase\n  fullName: ServiceHostFactoryBase.ServiceHostFactoryBase\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Activation/ServiceHostFactoryBase.xml\n- uid: System.ServiceModel.Activation.ServiceHostFactoryBase.CreateServiceHost*\n  parent: System.ServiceModel.Activation.ServiceHostFactoryBase\n  isExternal: false\n  name: CreateServiceHost\n  nameWithType: ServiceHostFactoryBase.CreateServiceHost\n  fullName: ServiceHostFactoryBase.CreateServiceHost\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Activation/ServiceHostFactoryBase.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}