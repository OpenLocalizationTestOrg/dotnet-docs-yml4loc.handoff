{"nodes":[{"content":"The exception that is thrown when an arithmetic, casting, or conversion operation in a checked context results in an overflow.","nodes":[{"pos":[0,126],"content":"The exception that is thrown when an arithmetic, casting, or conversion operation in a checked context results in an overflow.","nodes":[{"content":"The exception that is thrown when an arithmetic, casting, or conversion operation in a checked context results in an overflow.","pos":[0,126]}]}],"pos":[649,776],"yaml":true},{"content":"An <xref:System.OverflowException> is thrown at run time under the following conditions:  \n  \n-   An arithmetic operation produces a result that is outside the range of the data type returned by the operation. The following example illustrates the <xref:System.OverflowException> that is thrown by a multiplication operation that overflows the bounds of the <xref:System.Int32> type.  \n  \n     [!code-csharp[System.OverflowException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.overflowexception/cs/arithmetic1.cs#1)]\n     [!code-vb[System.OverflowException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.overflowexception/vb/arithmetic1.vb#1)]  \n  \n-   A casting or conversion operation attempts to perform a narrowing conversion, and the value of the source data type is outside the range of the target data type. The following example illustrates the <xref:System.OverflowException> that is thrown by the attempt to convert a large unsigned byte value to a signed byte value.  \n  \n     [!code-csharp[System.OverflowException#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.overflowexception/cs/arithmetic1.cs#2)]\n     [!code-vb[System.OverflowException#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.overflowexception/vb/arithmetic1.vb#2)]  \n  \n In each case, the result of the operation is a value that is less than the `MinValue` property or greater than the `MaxValue` property of the data type that results from the operation.  \n  \n For the arithmetic, casting, or conversion operation to throw an <xref:System.OverflowException>, the operation must occur in a checked context. By default, arithmetic operations and overflows in Visual Basic are checked; in C#, they are not. If the operation occurs in an unchecked context, the result is truncated by discarding any high-order bits that do not fit into the destination type. The following example illustrates such an unchecked conversion in C#. It repeats the previous example in an unchecked context.  \n  \n [!code-csharp[System.OverflowException#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.overflowexception/cs/arithmetic1.cs#3)]  \n  \n The following Microsoft intermediate language (MSIL) instructions throw an <xref:System.OverflowException>:  \n  \n-   `add.ovf.` *\\<signed>*  \n  \n-   `conv.ovf.` *\\<to type>*  \n  \n-   `conv.ovf.` *\\<to type>* `.un`  \n  \n-   `mul.ovf.` *\\<type>*  \n  \n-   `sub.ovf.` *\\<type>*  \n  \n-   `newarr`  \n  \n <xref:System.OverflowException> uses the HRESULT COR_E_OVERFLOW, which has the value 0x80131516.  \n  \n For a list of initial property values for an instance of <xref:System.OverflowException>, see the <xref:System.OverflowException.%23ctor%2A> constructors.","nodes":[{"pos":[0,88],"content":"An <xref:System.OverflowException> is thrown at run time under the following conditions:","nodes":[{"content":"An <ph id=\"ph1\">&lt;xref:System.OverflowException&gt;</ph> is thrown at run time under the following conditions:","pos":[0,88],"source":"An <xref:System.OverflowException> is thrown at run time under the following conditions:"}]},{"pos":[98,383],"content":"An arithmetic operation produces a result that is outside the range of the data type returned by the operation. The following example illustrates the <xref:System.OverflowException> that is thrown by a multiplication operation that overflows the bounds of the <xref:System.Int32> type.","nodes":[{"content":"An arithmetic operation produces a result that is outside the range of the data type returned by the operation. The following example illustrates the <xref:System.OverflowException> that is thrown by a multiplication operation that overflows the bounds of the <xref:System.Int32> type.","pos":[0,285],"nodes":[{"content":"An arithmetic operation produces a result that is outside the range of the data type returned by the operation.","pos":[0,111]},{"content":"The following example illustrates the <ph id=\"ph1\">&lt;xref:System.OverflowException&gt;</ph> that is thrown by a multiplication operation that overflows the bounds of the <ph id=\"ph2\">&lt;xref:System.Int32&gt;</ph> type.","pos":[112,285],"source":" The following example illustrates the <xref:System.OverflowException> that is thrown by a multiplication operation that overflows the bounds of the <xref:System.Int32> type."}]}]},{"pos":[394,675],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.OverflowException#1<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.overflowexception/cs/arithmetic1.cs#1)</ept><ept id=\"p1\">]</ept>  <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.OverflowException#1<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.overflowexception/vb/arithmetic1.vb#1)</ept><ept id=\"p3\">]</ept>","leadings":["","    "],"source":"[!code-csharp[System.OverflowException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.overflowexception/cs/arithmetic1.cs#1)]\n [!code-vb[System.OverflowException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.overflowexception/vb/arithmetic1.vb#1)]"},{"pos":[685,1009],"content":"A casting or conversion operation attempts to perform a narrowing conversion, and the value of the source data type is outside the range of the target data type. The following example illustrates the <xref:System.OverflowException> that is thrown by the attempt to convert a large unsigned byte value to a signed byte value.","nodes":[{"content":"A casting or conversion operation attempts to perform a narrowing conversion, and the value of the source data type is outside the range of the target data type. The following example illustrates the <xref:System.OverflowException> that is thrown by the attempt to convert a large unsigned byte value to a signed byte value.","pos":[0,324],"nodes":[{"content":"A casting or conversion operation attempts to perform a narrowing conversion, and the value of the source data type is outside the range of the target data type.","pos":[0,161]},{"content":"The following example illustrates the <ph id=\"ph1\">&lt;xref:System.OverflowException&gt;</ph> that is thrown by the attempt to convert a large unsigned byte value to a signed byte value.","pos":[162,324],"source":" The following example illustrates the <xref:System.OverflowException> that is thrown by the attempt to convert a large unsigned byte value to a signed byte value."}]}]},{"pos":[1020,1301],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.OverflowException#2<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.overflowexception/cs/arithmetic1.cs#2)</ept><ept id=\"p1\">]</ept>  <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.OverflowException#2<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.overflowexception/vb/arithmetic1.vb#2)</ept><ept id=\"p3\">]</ept>","leadings":["","    "],"source":"[!code-csharp[System.OverflowException#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.overflowexception/cs/arithmetic1.cs#2)]\n [!code-vb[System.OverflowException#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.overflowexception/vb/arithmetic1.vb#2)]"},{"pos":[1308,1492],"content":"In each case, the result of the operation is a value that is less than the <ph id=\"ph1\">`MinValue`</ph> property or greater than the <ph id=\"ph2\">`MaxValue`</ph> property of the data type that results from the operation.","source":"In each case, the result of the operation is a value that is less than the `MinValue` property or greater than the `MaxValue` property of the data type that results from the operation."},{"pos":[1499,2018],"content":"For the arithmetic, casting, or conversion operation to throw an <xref:System.OverflowException>, the operation must occur in a checked context. By default, arithmetic operations and overflows in Visual Basic are checked; in C#, they are not. If the operation occurs in an unchecked context, the result is truncated by discarding any high-order bits that do not fit into the destination type. The following example illustrates such an unchecked conversion in C#. It repeats the previous example in an unchecked context.","nodes":[{"content":"For the arithmetic, casting, or conversion operation to throw an <xref:System.OverflowException>, the operation must occur in a checked context. By default, arithmetic operations and overflows in Visual Basic are checked; in C#, they are not. If the operation occurs in an unchecked context, the result is truncated by discarding any high-order bits that do not fit into the destination type. The following example illustrates such an unchecked conversion in C#. It repeats the previous example in an unchecked context.","pos":[0,519],"nodes":[{"content":"For the arithmetic, casting, or conversion operation to throw an <ph id=\"ph1\">&lt;xref:System.OverflowException&gt;</ph>, the operation must occur in a checked context.","pos":[0,144],"source":"For the arithmetic, casting, or conversion operation to throw an <xref:System.OverflowException>, the operation must occur in a checked context."},{"content":"By default, arithmetic operations and overflows in Visual Basic are checked; in C#, they are not.","pos":[145,242]},{"content":"If the operation occurs in an unchecked context, the result is truncated by discarding any high-order bits that do not fit into the destination type.","pos":[243,392]},{"content":"The following example illustrates such an unchecked conversion in C#.","pos":[393,462]},{"content":"It repeats the previous example in an unchecked context.","pos":[463,519]}]}]},{"pos":[2025,2162],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.OverflowException#3<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.overflowexception/cs/arithmetic1.cs#3)</ept><ept id=\"p1\">]</ept>","source":"[!code-csharp[System.OverflowException#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.overflowexception/cs/arithmetic1.cs#3)]"},{"pos":[2169,2276],"content":"The following Microsoft intermediate language (MSIL) instructions throw an <xref:System.OverflowException>:","nodes":[{"content":"The following Microsoft intermediate language (MSIL) instructions throw an <ph id=\"ph1\">&lt;xref:System.OverflowException&gt;</ph>:","pos":[0,107],"source":"The following Microsoft intermediate language (MSIL) instructions throw an <xref:System.OverflowException>:"}]},{"pos":[2286,2308],"content":"<ph id=\"ph1\">`add.ovf.`</ph> <bpt id=\"p1\">*</bpt><ph id=\"ph2\">\\&lt;</ph>signed&gt;<ept id=\"p1\">*</ept>","source":"`add.ovf.` *\\<signed>*"},{"pos":[2318,2342],"content":"<ph id=\"ph1\">`conv.ovf.`</ph> <bpt id=\"p1\">*</bpt><ph id=\"ph2\">\\&lt;</ph>to type&gt;<ept id=\"p1\">*</ept>","source":"`conv.ovf.` *\\<to type>*"},{"pos":[2352,2382],"content":"<ph id=\"ph1\">`conv.ovf.`</ph> <bpt id=\"p1\">*</bpt><ph id=\"ph2\">\\&lt;</ph>to type&gt;<ept id=\"p1\">*</ept> <ph id=\"ph3\">`.un`</ph>","source":"`conv.ovf.` *\\<to type>* `.un`"},{"pos":[2392,2412],"content":"<ph id=\"ph1\">`mul.ovf.`</ph> <bpt id=\"p1\">*</bpt><ph id=\"ph2\">\\&lt;</ph>type&gt;<ept id=\"p1\">*</ept>","source":"`mul.ovf.` *\\<type>*"},{"pos":[2422,2442],"content":"<ph id=\"ph1\">`sub.ovf.`</ph> <bpt id=\"p1\">*</bpt><ph id=\"ph2\">\\&lt;</ph>type&gt;<ept id=\"p1\">*</ept>","source":"`sub.ovf.` *\\<type>*"},{"pos":[2467,2563],"content":"<xref:System.OverflowException> uses the HRESULT COR_E_OVERFLOW, which has the value 0x80131516.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.OverflowException&gt;</ph> uses the HRESULT COR_E_OVERFLOW, which has the value 0x80131516.","pos":[0,96],"source":"<xref:System.OverflowException> uses the HRESULT COR_E_OVERFLOW, which has the value 0x80131516."}]},{"pos":[2570,2724],"content":"For a list of initial property values for an instance of <xref:System.OverflowException>, see the <xref:System.OverflowException.%23ctor%2A> constructors.","nodes":[{"content":"For a list of initial property values for an instance of <ph id=\"ph1\">&lt;xref:System.OverflowException&gt;</ph>, see the <ph id=\"ph2\">&lt;xref:System.OverflowException.%23ctor%2A&gt;</ph> constructors.","pos":[0,154],"source":"For a list of initial property values for an instance of <xref:System.OverflowException>, see the <xref:System.OverflowException.%23ctor%2A> constructors."}]}],"pos":[787,3553],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.OverflowException\"></xref> class.","nodes":[{"pos":[0,86],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.OverflowException\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.OverflowException\"></xref> class."}],"pos":[6086,6173],"yaml":true},{"content":"The following table shows the initial property values for an instance of <xref:System.OverflowException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|A null reference (`Nothing` in Visual Basic).|  \n|<xref:System.Exception.Message%2A>|The localized error message string.|","nodes":[{"pos":[0,105],"content":"The following table shows the initial property values for an instance of <xref:System.OverflowException>.","nodes":[{"content":"The following table shows the initial property values for an instance of <ph id=\"ph1\">&lt;xref:System.OverflowException&gt;</ph>.","pos":[0,105],"source":"The following table shows the initial property values for an instance of <xref:System.OverflowException>."}]},{"pos":[112,120],"content":"Property","nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[121,126],"content":"Value","nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[162,203],"content":"<xref:System.Exception.InnerException%2A>","nodes":[]},{"pos":[204,249],"content":"A null reference (<ph id=\"ph1\">`Nothing`</ph> in Visual Basic).","source":"A null reference (`Nothing` in Visual Basic)."},{"pos":[254,288],"content":"<xref:System.Exception.Message%2A>","nodes":[]},{"pos":[289,324],"content":"The localized error message string.","nodes":[{"content":"The localized error message string.","pos":[0,35]}]}],"pos":[6184,6517],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.OverflowException\"></xref> class with a specified error message.","nodes":[{"pos":[0,117],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.OverflowException\"&gt;&lt;/xref&gt;</ph> class with a specified error message.","source":"Initializes a new instance of the <xref href=\"System.OverflowException\"></xref> class with a specified error message."}],"pos":[8175,8293],"yaml":true},{"content":"The content of the `message` should be understandable to the user. The caller of this constructor is required to ensure that this string has been localized for the current system culture.  \n  \n The following table shows the initial property values for an instance of <xref:System.OverflowException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|A null reference (`Nothing` in Visual Basic).|  \n|<xref:System.Exception.Message%2A>|The error message string.|","nodes":[{"pos":[0,187],"content":"The content of the `message` should be understandable to the user. The caller of this constructor is required to ensure that this string has been localized for the current system culture.","nodes":[{"content":"The content of the <ph id=\"ph1\">`message`</ph> should be understandable to the user.","pos":[0,66],"source":"The content of the `message` should be understandable to the user."},{"content":"The caller of this constructor is required to ensure that this string has been localized for the current system culture.","pos":[67,187]}]},{"pos":[194,299],"content":"The following table shows the initial property values for an instance of <xref:System.OverflowException>.","nodes":[{"content":"The following table shows the initial property values for an instance of <ph id=\"ph1\">&lt;xref:System.OverflowException&gt;</ph>.","pos":[0,105],"source":"The following table shows the initial property values for an instance of <xref:System.OverflowException>."}]},{"pos":[306,314],"content":"Property","nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[315,320],"content":"Value","nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[356,397],"content":"<xref:System.Exception.InnerException%2A>","nodes":[]},{"pos":[398,443],"content":"A null reference (<ph id=\"ph1\">`Nothing`</ph> in Visual Basic).","source":"A null reference (`Nothing` in Visual Basic)."},{"pos":[448,482],"content":"<xref:System.Exception.Message%2A>","nodes":[]},{"pos":[483,508],"content":"The error message string.","nodes":[{"content":"The error message string.","pos":[0,25]}]}],"pos":[8304,8823],"yaml":true,"extradata":"MT"},{"content":"The message that describes the error.","nodes":[{"pos":[0,37],"content":"The message that describes the error.","nodes":[{"content":"The message that describes the error.","pos":[0,37]}]}],"pos":[8968,9006],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.OverflowException\"></xref> class with serialized data.","nodes":[{"pos":[0,107],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.OverflowException\"&gt;&lt;/xref&gt;</ph> class with serialized data.","source":"Initializes a new instance of the <xref href=\"System.OverflowException\"></xref> class with serialized data."}],"pos":[10917,11025],"yaml":true},{"content":"This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.","nodes":[{"pos":[0,113],"content":"This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.","nodes":[{"content":"This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.","pos":[0,113]}]}],"pos":[11036,11150],"yaml":true,"extradata":"MT"},{"content":"The object that holds the serialized object data.","nodes":[{"pos":[0,49],"content":"The object that holds the serialized object data.","nodes":[{"content":"The object that holds the serialized object data.","pos":[0,49]}]}],"pos":[11420,11470],"yaml":true},{"content":"The contextual information about the source or destination.","nodes":[{"pos":[0,59],"content":"The contextual information about the source or destination.","nodes":[{"content":"The contextual information about the source or destination.","pos":[0,59]}]}],"pos":[11565,11625],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.OverflowException\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception.","nodes":[{"pos":[0,192],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.OverflowException\"&gt;&lt;/xref&gt;</ph> class with a specified error message and a reference to the inner exception that is the cause of this exception.","source":"Initializes a new instance of the <xref href=\"System.OverflowException\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception."}],"pos":[12952,13145],"yaml":true},{"content":"An exception that is thrown as a direct result of a previous exception can include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or a null reference (`Nothing` in Visual Basic) if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.  \n  \n The following table shows the initial property values for an instance of <xref:System.OverflowException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|The inner exception reference.|  \n|<xref:System.Exception.Message%2A>|The error message string.|","nodes":[{"pos":[0,462],"content":"An exception that is thrown as a direct result of a previous exception can include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or a null reference (`Nothing` in Visual Basic) if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.","nodes":[{"content":"An exception that is thrown as a direct result of a previous exception can include a reference to the previous exception in the <ph id=\"ph1\">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.","pos":[0,179],"source":"An exception that is thrown as a direct result of a previous exception can include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or a null reference (<ph id=\"ph2\">`Nothing`</ph> in Visual Basic) if the <ph id=\"ph3\">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.","pos":[180,462],"source":" The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or a null reference (`Nothing` in Visual Basic) if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor."}]},{"pos":[469,574],"content":"The following table shows the initial property values for an instance of <xref:System.OverflowException>.","nodes":[{"content":"The following table shows the initial property values for an instance of <ph id=\"ph1\">&lt;xref:System.OverflowException&gt;</ph>.","pos":[0,105],"source":"The following table shows the initial property values for an instance of <xref:System.OverflowException>."}]},{"pos":[581,589],"content":"Property","nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[590,595],"content":"Value","nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[631,672],"content":"<xref:System.Exception.InnerException%2A>","nodes":[]},{"pos":[673,703],"content":"The inner exception reference.","nodes":[{"content":"The inner exception reference.","pos":[0,30]}]},{"pos":[708,742],"content":"<xref:System.Exception.Message%2A>","nodes":[]},{"pos":[743,768],"content":"The error message string.","nodes":[{"content":"The error message string.","pos":[0,25]}]}],"pos":[13156,13935],"yaml":true,"extradata":"MT"},{"content":"The error message that explains the reason for the exception.","nodes":[{"pos":[0,61],"content":"The error message that explains the reason for the exception.","nodes":[{"content":"The error message that explains the reason for the exception.","pos":[0,61]}]}],"pos":[14106,14168],"yaml":true},{"content":"The exception that is the cause of the current exception. If the <code>innerException</code> parameter is not a null reference (`Nothing` in Visual Basic), the current exception is raised in a `catch` block that handles the inner exception.","nodes":[{"pos":[0,240],"content":"The exception that is the cause of the current exception. If the <code>innerException</code> parameter is not a null reference (`Nothing` in Visual Basic), the current exception is raised in a `catch` block that handles the inner exception.","nodes":[{"content":"The exception that is the cause of the current exception.","pos":[0,57]},{"content":"If the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">innerException</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not a null reference (<ph id=\"ph2\">`Nothing`</ph> in Visual Basic), the current exception is raised in a <ph id=\"ph3\">`catch`</ph> block that handles the inner exception.","pos":[58,240],"source":" If the <code>innerException</code> parameter is not a null reference (`Nothing` in Visual Basic), the current exception is raised in a `catch` block that handles the inner exception."}]}],"pos":[14241,14482],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.OverflowException\n  commentId: T:System.OverflowException\n  id: OverflowException\n  children:\n  - System.OverflowException.#ctor\n  - System.OverflowException.#ctor(System.String)\n  - System.OverflowException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.OverflowException.#ctor(System.String,System.Exception)\n  langs:\n  - csharp\n  name: OverflowException\n  nameWithType: OverflowException\n  fullName: System.OverflowException\n  type: Class\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: The exception that is thrown when an arithmetic, casting, or conversion operation in a checked context results in an overflow.\n  remarks: \"An <xref:System.OverflowException> is thrown at run time under the following conditions:  \\n  \\n-   An arithmetic operation produces a result that is outside the range of the data type returned by the operation. The following example illustrates the <xref:System.OverflowException> that is thrown by a multiplication operation that overflows the bounds of the <xref:System.Int32> type.  \\n  \\n     [!code-csharp[System.OverflowException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.overflowexception/cs/arithmetic1.cs#1)]\\n     [!code-vb[System.OverflowException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.overflowexception/vb/arithmetic1.vb#1)]  \\n  \\n-   A casting or conversion operation attempts to perform a narrowing conversion, and the value of the source data type is outside the range of the target data type. The following example illustrates the <xref:System.OverflowException> that is thrown by the attempt to convert a large unsigned byte value to a signed byte value.  \\n  \\n     [!code-csharp[System.OverflowException#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.overflowexception/cs/arithmetic1.cs#2)]\\n     [!code-vb[System.OverflowException#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.overflowexception/vb/arithmetic1.vb#2)]  \\n  \\n In each case, the result of the operation is a value that is less than the `MinValue` property or greater than the `MaxValue` property of the data type that results from the operation.  \\n  \\n For the arithmetic, casting, or conversion operation to throw an <xref:System.OverflowException>, the operation must occur in a checked context. By default, arithmetic operations and overflows in Visual Basic are checked; in C#, they are not. If the operation occurs in an unchecked context, the result is truncated by discarding any high-order bits that do not fit into the destination type. The following example illustrates such an unchecked conversion in C#. It repeats the previous example in an unchecked context.  \\n  \\n [!code-csharp[System.OverflowException#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.overflowexception/cs/arithmetic1.cs#3)]  \\n  \\n The following Microsoft intermediate language (MSIL) instructions throw an <xref:System.OverflowException>:  \\n  \\n-   `add.ovf.` *\\\\<signed>*  \\n  \\n-   `conv.ovf.` *\\\\<to type>*  \\n  \\n-   `conv.ovf.` *\\\\<to type>* `.un`  \\n  \\n-   `mul.ovf.` *\\\\<type>*  \\n  \\n-   `sub.ovf.` *\\\\<type>*  \\n  \\n-   `newarr`  \\n  \\n <xref:System.OverflowException> uses the HRESULT COR_E_OVERFLOW, which has the value 0x80131516.  \\n  \\n For a list of initial property values for an instance of <xref:System.OverflowException>, see the <xref:System.OverflowException.%23ctor%2A> constructors.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class OverflowException : ArithmeticException\n  inheritance:\n  - System.Object\n  - System.Exception\n  - System.ArithmeticException\n  implements: []\n  inheritedMembers:\n  - System.Exception.Data\n  - System.Exception.GetBaseException\n  - System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Exception.GetType\n  - System.Exception.HelpLink\n  - System.Exception.HResult\n  - System.Exception.InnerException\n  - System.Exception.Message\n  - System.Exception.SerializeObjectState\n  - System.Exception.Source\n  - System.Exception.StackTrace\n  - System.Exception.TargetSite\n  - System.Exception.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/OverflowException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.OverflowException.#ctor\n  commentId: M:System.OverflowException.#ctor\n  id: '#ctor'\n  parent: System.OverflowException\n  langs:\n  - csharp\n  name: OverflowException()\n  nameWithType: OverflowException.OverflowException()\n  fullName: OverflowException.OverflowException()\n  type: Constructor\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.OverflowException\"></xref> class.\n  remarks: \"The following table shows the initial property values for an instance of <xref:System.OverflowException>.  \\n  \\n|Property|Value|  \\n|--------------|-----------|  \\n|<xref:System.Exception.InnerException%2A>|A null reference (`Nothing` in Visual Basic).|  \\n|<xref:System.Exception.Message%2A>|The localized error message string.|\"\n  syntax:\n    content: public OverflowException ();\n    parameters: []\n  overload: System.OverflowException.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/OverflowException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.OverflowException.#ctor(System.String)\n  commentId: M:System.OverflowException.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.OverflowException\n  langs:\n  - csharp\n  name: OverflowException(String)\n  nameWithType: OverflowException.OverflowException(String)\n  fullName: OverflowException.OverflowException(String)\n  type: Constructor\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.OverflowException\"></xref> class with a specified error message.\n  remarks: \"The content of the `message` should be understandable to the user. The caller of this constructor is required to ensure that this string has been localized for the current system culture.  \\n  \\n The following table shows the initial property values for an instance of <xref:System.OverflowException>.  \\n  \\n|Property|Value|  \\n|--------------|-----------|  \\n|<xref:System.Exception.InnerException%2A>|A null reference (`Nothing` in Visual Basic).|  \\n|<xref:System.Exception.Message%2A>|The error message string.|\"\n  syntax:\n    content: public OverflowException (string message);\n    parameters:\n    - id: message\n      type: System.String\n      description: The message that describes the error.\n  overload: System.OverflowException.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/OverflowException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.OverflowException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  commentId: M:System.OverflowException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'\n  parent: System.OverflowException\n  langs:\n  - csharp\n  name: OverflowException(SerializationInfo, StreamingContext)\n  nameWithType: OverflowException.OverflowException(SerializationInfo, StreamingContext)\n  fullName: OverflowException.OverflowException(SerializationInfo, StreamingContext)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.OverflowException\"></xref> class with serialized data.\n  remarks: This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.\n  syntax:\n    content: protected OverflowException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: The object that holds the serialized object data.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: The contextual information about the source or destination.\n  overload: System.OverflowException.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/OverflowException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.OverflowException.#ctor(System.String,System.Exception)\n  commentId: M:System.OverflowException.#ctor(System.String,System.Exception)\n  id: '#ctor(System.String,System.Exception)'\n  parent: System.OverflowException\n  langs:\n  - csharp\n  name: OverflowException(String, Exception)\n  nameWithType: OverflowException.OverflowException(String, Exception)\n  fullName: OverflowException.OverflowException(String, Exception)\n  type: Constructor\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.OverflowException\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception.\n  remarks: \"An exception that is thrown as a direct result of a previous exception can include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or a null reference (`Nothing` in Visual Basic) if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.  \\n  \\n The following table shows the initial property values for an instance of <xref:System.OverflowException>.  \\n  \\n|Property|Value|  \\n|--------------|-----------|  \\n|<xref:System.Exception.InnerException%2A>|The inner exception reference.|  \\n|<xref:System.Exception.Message%2A>|The error message string.|\"\n  syntax:\n    content: public OverflowException (string message, Exception innerException);\n    parameters:\n    - id: message\n      type: System.String\n      description: The error message that explains the reason for the exception.\n    - id: innerException\n      type: System.Exception\n      description: The exception that is the cause of the current exception. If the <code>innerException</code> parameter is not a null reference (`Nothing` in Visual Basic), the current exception is raised in a `catch` block that handles the inner exception.\n  overload: System.OverflowException.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/OverflowException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.ArithmeticException\n  parent: System\n  isExternal: false\n  name: ArithmeticException\n  nameWithType: ArithmeticException\n  fullName: System.ArithmeticException\n- uid: System.OverflowException.#ctor\n  parent: System.OverflowException\n  isExternal: false\n  name: OverflowException()\n  nameWithType: OverflowException.OverflowException()\n  fullName: OverflowException.OverflowException()\n- uid: System.OverflowException.#ctor(System.String)\n  parent: System.OverflowException\n  isExternal: false\n  name: OverflowException(String)\n  nameWithType: OverflowException.OverflowException(String)\n  fullName: OverflowException.OverflowException(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.OverflowException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.OverflowException\n  isExternal: false\n  name: OverflowException(SerializationInfo, StreamingContext)\n  nameWithType: OverflowException.OverflowException(SerializationInfo, StreamingContext)\n  fullName: OverflowException.OverflowException(SerializationInfo, StreamingContext)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.OverflowException.#ctor(System.String,System.Exception)\n  parent: System.OverflowException\n  isExternal: false\n  name: OverflowException(String, Exception)\n  nameWithType: OverflowException.OverflowException(String, Exception)\n  fullName: OverflowException.OverflowException(String, Exception)\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.OverflowException.#ctor*\n  parent: System.OverflowException\n  isExternal: false\n  name: OverflowException\n  nameWithType: OverflowException.OverflowException\n  fullName: OverflowException.OverflowException\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/OverflowException.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Exception.GetType\n  parent: System.Exception\n  isExternal: false\n  name: GetType()\n  nameWithType: Exception.GetType()\n  fullName: Exception.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Exception.ToString\n  parent: System.Exception\n  isExternal: false\n  name: ToString()\n  nameWithType: Exception.ToString()\n  fullName: Exception.ToString()\n- uid: System.Exception.Data\n  parent: System.Exception\n  isExternal: false\n  name: Data\n  nameWithType: Exception.Data\n  fullName: Exception.Data\n- uid: System.Exception.GetBaseException\n  parent: System.Exception\n  isExternal: false\n  name: GetBaseException()\n  nameWithType: Exception.GetBaseException()\n  fullName: Exception.GetBaseException()\n- uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Exception\n  isExternal: false\n  name: GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: Exception.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: Exception.GetObjectData(SerializationInfo, StreamingContext)\n- uid: System.Exception.HelpLink\n  parent: System.Exception\n  isExternal: false\n  name: HelpLink\n  nameWithType: Exception.HelpLink\n  fullName: Exception.HelpLink\n- uid: System.Exception.HResult\n  parent: System.Exception\n  isExternal: false\n  name: HResult\n  nameWithType: Exception.HResult\n  fullName: Exception.HResult\n- uid: System.Exception.InnerException\n  parent: System.Exception\n  isExternal: false\n  name: InnerException\n  nameWithType: Exception.InnerException\n  fullName: Exception.InnerException\n- uid: System.Exception.Message\n  parent: System.Exception\n  isExternal: false\n  name: Message\n  nameWithType: Exception.Message\n  fullName: Exception.Message\n- uid: System.Exception.SerializeObjectState\n  parent: System.Exception\n  isExternal: false\n  name: SerializeObjectState\n  nameWithType: Exception.SerializeObjectState\n  fullName: Exception.SerializeObjectState\n- uid: System.Exception.Source\n  parent: System.Exception\n  isExternal: false\n  name: Source\n  nameWithType: Exception.Source\n  fullName: Exception.Source\n- uid: System.Exception.StackTrace\n  parent: System.Exception\n  isExternal: false\n  name: StackTrace\n  nameWithType: Exception.StackTrace\n  fullName: Exception.StackTrace\n- uid: System.Exception.TargetSite\n  parent: System.Exception\n  isExternal: false\n  name: TargetSite\n  nameWithType: Exception.TargetSite\n  fullName: Exception.TargetSite\n"}