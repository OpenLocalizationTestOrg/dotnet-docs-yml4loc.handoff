{"nodes":[{"content":"Represents an event setter in a style. Event setters invoke the specified event handlers in response to events.","nodes":[{"pos":[0,111],"content":"Represents an event setter in a style. Event setters invoke the specified event handlers in response to events.","nodes":[{"content":"Represents an event setter in a style. Event setters invoke the specified event handlers in response to events.","pos":[0,111],"nodes":[{"content":"Represents an event setter in a style.","pos":[0,38]},{"content":"Event setters invoke the specified event handlers in response to events.","pos":[39,111]}]}]}],"pos":[584,696],"yaml":true},{"content":"Event setters invoke the specified event handlers in response to routed events, which apply to all elements that reference the <xref:System.Windows.Style> rather than requiring you to attach instance handlers to each individual element. Only <xref:System.Windows.Style.Setters%2A?displayProperty=fullName> support <xref:System.Windows.EventSetter> objects.  \n  \n You can only declare event setters for events that are routed events. You can declare event setters for routed events with a direct routing strategy, bubbling events, or tunneling events.  \n  \n Instances of the <xref:System.Windows.EventSetter> class are usually created through [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], as an object element within a style defined through [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]. An <xref:System.Windows.EventSetter> might also be instantiated from code.  \n  \n Event setters cannot be used in a style that is contained in a theme resource dictionary. This is because a theme resource dictionary at run time is often loose [!INCLUDE[TLA#tla_baml](~/includes/tlasharptla-baml-md.md)] files, and does not have any scope defined where accompanying code-behind that defines the handlers can exist.  \n  \n Handlers attached through event setters are invoked after any class handlers for an event, and also after any instance handlers. As a result, if a class handler or instance handler marks an event handled in its arguments, then the handler declared by an event setter is not invoked, unless the event setter specifically sets <xref:System.Windows.EventSetter.HandledEventsToo%2A> `true`.  \n  \n Event setters may also come from <xref:System.Windows.Style.BasedOn%2A> styles. The event setter handlers from the style specified as <xref:System.Windows.Style.BasedOn%2A> will be invoked after the handlers on the immediate style.  \n  \n Note that only <xref:System.Windows.Style.Setters%2A?displayProperty=fullName> supports <xref:System.Windows.EventSetter> objects. Triggers (<xref:System.Windows.TriggerBase> and derived classes) do not support <xref:System.Windows.EventSetter>.","nodes":[{"pos":[0,356],"content":"Event setters invoke the specified event handlers in response to routed events, which apply to all elements that reference the <xref:System.Windows.Style> rather than requiring you to attach instance handlers to each individual element. Only <xref:System.Windows.Style.Setters%2A?displayProperty=fullName> support <xref:System.Windows.EventSetter> objects.","nodes":[{"content":"Event setters invoke the specified event handlers in response to routed events, which apply to all elements that reference the <xref:System.Windows.Style> rather than requiring you to attach instance handlers to each individual element. Only <xref:System.Windows.Style.Setters%2A?displayProperty=fullName> support <xref:System.Windows.EventSetter> objects.","pos":[0,356],"nodes":[{"content":"Event setters invoke the specified event handlers in response to routed events, which apply to all elements that reference the <ph id=\"ph1\">&lt;xref:System.Windows.Style&gt;</ph> rather than requiring you to attach instance handlers to each individual element.","pos":[0,236],"source":"Event setters invoke the specified event handlers in response to routed events, which apply to all elements that reference the <xref:System.Windows.Style> rather than requiring you to attach instance handlers to each individual element."},{"content":"Only <ph id=\"ph1\">&lt;xref:System.Windows.Style.Setters%2A?displayProperty=fullName&gt;</ph> support <ph id=\"ph2\">&lt;xref:System.Windows.EventSetter&gt;</ph> objects.","pos":[237,356],"source":" Only <xref:System.Windows.Style.Setters%2A?displayProperty=fullName> support <xref:System.Windows.EventSetter> objects."}]}]},{"pos":[363,550],"content":"You can only declare event setters for events that are routed events. You can declare event setters for routed events with a direct routing strategy, bubbling events, or tunneling events.","nodes":[{"content":"You can only declare event setters for events that are routed events. You can declare event setters for routed events with a direct routing strategy, bubbling events, or tunneling events.","pos":[0,187],"nodes":[{"content":"You can only declare event setters for events that are routed events.","pos":[0,69]},{"content":"You can declare event setters for routed events with a direct routing strategy, bubbling events, or tunneling events.","pos":[70,187]}]}]},{"pos":[557,892],"content":"Instances of the <xref:System.Windows.EventSetter> class are usually created through [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], as an object element within a style defined through [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]. An <xref:System.Windows.EventSetter> might also be instantiated from code.","nodes":[{"content":"Instances of the <ph id=\"ph1\">&lt;xref:System.Windows.EventSetter&gt;</ph> class are usually created through <ph id=\"ph2\">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph>, as an object element within a style defined through <ph id=\"ph3\">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>.","pos":[0,260],"source":"Instances of the <xref:System.Windows.EventSetter> class are usually created through [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], as an object element within a style defined through [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]."},{"content":"An <ph id=\"ph1\">&lt;xref:System.Windows.EventSetter&gt;</ph> might also be instantiated from code.","pos":[261,335],"source":" An <xref:System.Windows.EventSetter> might also be instantiated from code."}]},{"pos":[899,1230],"content":"Event setters cannot be used in a style that is contained in a theme resource dictionary. This is because a theme resource dictionary at run time is often loose [!INCLUDE[TLA#tla_baml](~/includes/tlasharptla-baml-md.md)] files, and does not have any scope defined where accompanying code-behind that defines the handlers can exist.","nodes":[{"content":"Event setters cannot be used in a style that is contained in a theme resource dictionary.","pos":[0,89]},{"content":"This is because a theme resource dictionary at run time is often loose <ph id=\"ph1\">[!INCLUDE[TLA#tla_baml](~/includes/tlasharptla-baml-md.md)]</ph> files, and does not have any scope defined where accompanying code-behind that defines the handlers can exist.","pos":[90,331],"source":" This is because a theme resource dictionary at run time is often loose [!INCLUDE[TLA#tla_baml](~/includes/tlasharptla-baml-md.md)] files, and does not have any scope defined where accompanying code-behind that defines the handlers can exist."}]},{"pos":[1237,1623],"content":"Handlers attached through event setters are invoked after any class handlers for an event, and also after any instance handlers. As a result, if a class handler or instance handler marks an event handled in its arguments, then the handler declared by an event setter is not invoked, unless the event setter specifically sets <xref:System.Windows.EventSetter.HandledEventsToo%2A> `true`.","nodes":[{"content":"Handlers attached through event setters are invoked after any class handlers for an event, and also after any instance handlers.","pos":[0,128]},{"content":"As a result, if a class handler or instance handler marks an event handled in its arguments, then the handler declared by an event setter is not invoked, unless the event setter specifically sets <ph id=\"ph1\">&lt;xref:System.Windows.EventSetter.HandledEventsToo%2A&gt;</ph> <ph id=\"ph2\">`true`</ph>.","pos":[129,386],"source":" As a result, if a class handler or instance handler marks an event handled in its arguments, then the handler declared by an event setter is not invoked, unless the event setter specifically sets <xref:System.Windows.EventSetter.HandledEventsToo%2A> `true`."}]},{"pos":[1630,1861],"content":"Event setters may also come from <xref:System.Windows.Style.BasedOn%2A> styles. The event setter handlers from the style specified as <xref:System.Windows.Style.BasedOn%2A> will be invoked after the handlers on the immediate style.","nodes":[{"content":"Event setters may also come from <xref:System.Windows.Style.BasedOn%2A> styles. The event setter handlers from the style specified as <xref:System.Windows.Style.BasedOn%2A> will be invoked after the handlers on the immediate style.","pos":[0,231],"nodes":[{"content":"Event setters may also come from <ph id=\"ph1\">&lt;xref:System.Windows.Style.BasedOn%2A&gt;</ph> styles.","pos":[0,79],"source":"Event setters may also come from <xref:System.Windows.Style.BasedOn%2A> styles."},{"content":"The event setter handlers from the style specified as <ph id=\"ph1\">&lt;xref:System.Windows.Style.BasedOn%2A&gt;</ph> will be invoked after the handlers on the immediate style.","pos":[80,231],"source":" The event setter handlers from the style specified as <xref:System.Windows.Style.BasedOn%2A> will be invoked after the handlers on the immediate style."}]}]},{"pos":[1868,2113],"content":"Note that only <xref:System.Windows.Style.Setters%2A?displayProperty=fullName> supports <xref:System.Windows.EventSetter> objects. Triggers (<xref:System.Windows.TriggerBase> and derived classes) do not support <xref:System.Windows.EventSetter>.","nodes":[{"content":"Note that only <xref:System.Windows.Style.Setters%2A?displayProperty=fullName> supports <xref:System.Windows.EventSetter> objects. Triggers (<xref:System.Windows.TriggerBase> and derived classes) do not support <xref:System.Windows.EventSetter>.","pos":[0,245],"nodes":[{"content":"Note that only <ph id=\"ph1\">&lt;xref:System.Windows.Style.Setters%2A?displayProperty=fullName&gt;</ph> supports <ph id=\"ph2\">&lt;xref:System.Windows.EventSetter&gt;</ph> objects.","pos":[0,130],"source":"Note that only <xref:System.Windows.Style.Setters%2A?displayProperty=fullName> supports <xref:System.Windows.EventSetter> objects."},{"content":"Triggers (<ph id=\"ph1\">&lt;xref:System.Windows.TriggerBase&gt;</ph> and derived classes) do not support <ph id=\"ph2\">&lt;xref:System.Windows.EventSetter&gt;</ph>.","pos":[131,245],"source":" Triggers (<xref:System.Windows.TriggerBase> and derived classes) do not support <xref:System.Windows.EventSetter>."}]}]}],"pos":[707,2835],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Windows.EventSetter\"></xref> class.","nodes":[{"pos":[0,88],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.EventSetter\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Windows.EventSetter\"></xref> class."}],"pos":[4852,4941],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Windows.EventSetter\"></xref> class, using the provided event and handler parameters.","nodes":[{"pos":[0,137],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.EventSetter\"&gt;&lt;/xref&gt;</ph> class, using the provided event and handler parameters.","source":"Initializes a new instance of the <xref href=\"System.Windows.EventSetter\"></xref> class, using the provided event and handler parameters."}],"pos":[6145,6283],"yaml":true},{"content":"This signature is typically used if you creating an <xref:System.Windows.EventSetter> in code, or in code-behind to create an <xref:System.Windows.EventSetter> that augments an existing style prior to use.","nodes":[{"pos":[0,205],"content":"This signature is typically used if you creating an <xref:System.Windows.EventSetter> in code, or in code-behind to create an <xref:System.Windows.EventSetter> that augments an existing style prior to use.","nodes":[{"content":"This signature is typically used if you creating an <ph id=\"ph1\">&lt;xref:System.Windows.EventSetter&gt;</ph> in code, or in code-behind to create an <ph id=\"ph2\">&lt;xref:System.Windows.EventSetter&gt;</ph> that augments an existing style prior to use.","pos":[0,205],"source":"This signature is typically used if you creating an <xref:System.Windows.EventSetter> in code, or in code-behind to create an <xref:System.Windows.EventSetter> that augments an existing style prior to use."}]}],"pos":[6294,6500],"yaml":true,"extradata":"MT"},{"content":"The particular routed event that the <xref href=\"System.Windows.EventSetter\"></xref> responds to.","nodes":[{"pos":[0,97],"content":"The particular routed event that the <ph id=\"ph1\">&lt;xref href=\"System.Windows.EventSetter\"&gt;&lt;/xref&gt;</ph> responds to.","source":"The particular routed event that the <xref href=\"System.Windows.EventSetter\"></xref> responds to."}],"pos":[6698,6796],"yaml":true},{"content":"The handler to assign in this setter.","nodes":[{"pos":[0,37],"content":"The handler to assign in this setter.","nodes":[{"content":"The handler to assign in this setter.","pos":[0,37]}]}],"pos":[6861,6899],"yaml":true},{"content":"Gets or sets the particular routed event that this <xref href=\"System.Windows.EventSetter\"></xref> responds to.","nodes":[{"pos":[0,111],"content":"Gets or sets the particular routed event that this <ph id=\"ph1\">&lt;xref href=\"System.Windows.EventSetter\"&gt;&lt;/xref&gt;</ph> responds to.","source":"Gets or sets the particular routed event that this <xref href=\"System.Windows.EventSetter\"></xref> responds to."}],"pos":[7814,7926],"yaml":true},{"content":"You cannot set this property once the style containing the <xref:System.Windows.EventSetter> is in use and thus is sealed. If you set this property in code and there is the possibility that the style is in use, check the value of the <xref:System.Windows.SetterBase.IsSealed%2A> property on the <xref:System.Windows.EventSetter> instance before you attempt to set <xref:System.Windows.EventSetter.Event%2A>.","nodes":[{"pos":[0,407],"content":"You cannot set this property once the style containing the <xref:System.Windows.EventSetter> is in use and thus is sealed. If you set this property in code and there is the possibility that the style is in use, check the value of the <xref:System.Windows.SetterBase.IsSealed%2A> property on the <xref:System.Windows.EventSetter> instance before you attempt to set <xref:System.Windows.EventSetter.Event%2A>.","nodes":[{"content":"You cannot set this property once the style containing the <xref:System.Windows.EventSetter> is in use and thus is sealed. If you set this property in code and there is the possibility that the style is in use, check the value of the <xref:System.Windows.SetterBase.IsSealed%2A> property on the <xref:System.Windows.EventSetter> instance before you attempt to set <xref:System.Windows.EventSetter.Event%2A>.","pos":[0,407],"nodes":[{"content":"You cannot set this property once the style containing the <ph id=\"ph1\">&lt;xref:System.Windows.EventSetter&gt;</ph> is in use and thus is sealed.","pos":[0,122],"source":"You cannot set this property once the style containing the <xref:System.Windows.EventSetter> is in use and thus is sealed."},{"content":"If you set this property in code and there is the possibility that the style is in use, check the value of the <ph id=\"ph1\">&lt;xref:System.Windows.SetterBase.IsSealed%2A&gt;</ph> property on the <ph id=\"ph2\">&lt;xref:System.Windows.EventSetter&gt;</ph> instance before you attempt to set <ph id=\"ph3\">&lt;xref:System.Windows.EventSetter.Event%2A&gt;</ph>.","pos":[123,407],"source":" If you set this property in code and there is the possibility that the style is in use, check the value of the <xref:System.Windows.SetterBase.IsSealed%2A> property on the <xref:System.Windows.EventSetter> instance before you attempt to set <xref:System.Windows.EventSetter.Event%2A>."}]}]}],"pos":[7937,8345],"yaml":true,"extradata":"MT"},{"content":"The identifier field of the routed event.","nodes":[{"pos":[0,41],"content":"The identifier field of the routed event.","nodes":[{"content":"The identifier field of the routed event.","pos":[0,41]}]}],"pos":[8785,8827],"yaml":true},{"content":"Attempted to set this property on a sealed <xref href=\"System.Windows.EventSetter\"></xref> .","nodes":[{"pos":[0,92],"content":"Attempted to set this property on a sealed <ph id=\"ph1\">&lt;xref href=\"System.Windows.EventSetter\"&gt;&lt;/xref&gt;</ph> .","source":"Attempted to set this property on a sealed <xref href=\"System.Windows.EventSetter\"></xref> ."}],"pos":[8997,9090],"yaml":true},{"content":"Gets or sets a value that determines whether the handler assigned to the setter should still be invoked, even if the event is marked handled in its event data.","nodes":[{"pos":[0,159],"content":"Gets or sets a value that determines whether the handler assigned to the setter should still be invoked, even if the event is marked handled in its event data.","nodes":[{"content":"Gets or sets a value that determines whether the handler assigned to the setter should still be invoked, even if the event is marked handled in its event data.","pos":[0,159]}]}],"pos":[10008,10168],"yaml":true},{"content":"> [!IMPORTANT]\n>  Setting the <xref:System.Windows.RoutedEventHandlerInfo.InvokeHandledEventsToo%2A> characteristics of how an event's handlers will be invoked must always be performed in code, in keeping with the general principle that there is no way to specify <xref:System.Windows.RoutedEventHandlerInfo.InvokeHandledEventsToo%2A> when assigning defined event handlers for instances directly to named events in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute syntax. Although setting this value in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] does not generate any compile-time errors, the resulting [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] will produce a run-time exception when the style is used.  \n  \n<a name=\"xamlTextUsage_HandledEventsToo\"></a>   \n## XAML Text Usage  \n This property should not be used in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]. See Remarks.","nodes":[{"pos":[2,764],"content":"[!IMPORTANT]\n Setting the <xref:System.Windows.RoutedEventHandlerInfo.InvokeHandledEventsToo%2A> characteristics of how an event's handlers will be invoked must always be performed in code, in keeping with the general principle that there is no way to specify <xref:System.Windows.RoutedEventHandlerInfo.InvokeHandledEventsToo%2A> when assigning defined event handlers for instances directly to named events in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute syntax. Although setting this value in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] does not generate any compile-time errors, the resulting [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] will produce a run-time exception when the style is used.","leadings":["","> "],"nodes":[{"content":" Setting the <xref:System.Windows.RoutedEventHandlerInfo.InvokeHandledEventsToo%2A> characteristics of how an event's handlers will be invoked must always be performed in code, in keeping with the general principle that there is no way to specify <xref:System.Windows.RoutedEventHandlerInfo.InvokeHandledEventsToo%2A> when assigning defined event handlers for instances directly to named events in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute syntax. Although setting this value in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] does not generate any compile-time errors, the resulting [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] will produce a run-time exception when the style is used.","pos":[13,760],"nodes":[{"content":"Setting the <ph id=\"ph1\">&lt;xref:System.Windows.RoutedEventHandlerInfo.InvokeHandledEventsToo%2A&gt;</ph> characteristics of how an event's handlers will be invoked must always be performed in code, in keeping with the general principle that there is no way to specify <ph id=\"ph2\">&lt;xref:System.Windows.RoutedEventHandlerInfo.InvokeHandledEventsToo%2A&gt;</ph> when assigning defined event handlers for instances directly to named events in <ph id=\"ph3\">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> attribute syntax.","pos":[1,477],"source":" Setting the <xref:System.Windows.RoutedEventHandlerInfo.InvokeHandledEventsToo%2A> characteristics of how an event's handlers will be invoked must always be performed in code, in keeping with the general principle that there is no way to specify <xref:System.Windows.RoutedEventHandlerInfo.InvokeHandledEventsToo%2A> when assigning defined event handlers for instances directly to named events in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute syntax."},{"content":"Although setting this value in <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> does not generate any compile-time errors, the resulting <ph id=\"ph2\">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> will produce a run-time exception when the style is used.","pos":[478,747],"source":" Although setting this value in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] does not generate any compile-time errors, the resulting [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] will produce a run-time exception when the style is used."}]}]},{"pos":[822,837],"content":"XAML Text Usage","linkify":"XAML Text Usage","nodes":[{"content":"XAML Text Usage","pos":[0,15]}]},{"pos":[841,952],"content":"This property should not be used in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]. See Remarks.","nodes":[{"content":"This property should not be used in <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>.","pos":[0,98],"source":"This property should not be used in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]."},{"content":"See Remarks.","pos":[99,111]}]}],"pos":[10179,11141],"yaml":true,"extradata":"MT"},{"content":"`true` if the handler should still be invoked; otherwise, `false`.","nodes":[{"pos":[0,66],"content":"<ph id=\"ph1\">`true`</ph> if the handler should still be invoked; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the handler should still be invoked; otherwise, `false`."}],"pos":[11265,11334],"yaml":true},{"content":"Gets or sets the reference to a handler for a routed event in the setter.","nodes":[{"pos":[0,73],"content":"Gets or sets the reference to a handler for a routed event in the setter.","nodes":[{"content":"Gets or sets the reference to a handler for a routed event in the setter.","pos":[0,73]}]}],"pos":[12267,12341],"yaml":true},{"content":"Reference to the handler that is attached by this <xref href=\"System.Windows.EventSetter\"></xref>.","nodes":[{"pos":[0,98],"content":"Reference to the handler that is attached by this <ph id=\"ph1\">&lt;xref href=\"System.Windows.EventSetter\"&gt;&lt;/xref&gt;</ph>.","source":"Reference to the handler that is attached by this <xref href=\"System.Windows.EventSetter\"></xref>."}],"pos":[12882,12981],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.EventSetter\n  commentId: T:System.Windows.EventSetter\n  id: EventSetter\n  children:\n  - System.Windows.EventSetter.#ctor\n  - System.Windows.EventSetter.#ctor(System.Windows.RoutedEvent,System.Delegate)\n  - System.Windows.EventSetter.Event\n  - System.Windows.EventSetter.HandledEventsToo\n  - System.Windows.EventSetter.Handler\n  langs:\n  - csharp\n  name: EventSetter\n  nameWithType: EventSetter\n  fullName: System.Windows.EventSetter\n  type: Class\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Represents an event setter in a style. Event setters invoke the specified event handlers in response to events.\n  remarks: \"Event setters invoke the specified event handlers in response to routed events, which apply to all elements that reference the <xref:System.Windows.Style> rather than requiring you to attach instance handlers to each individual element. Only <xref:System.Windows.Style.Setters%2A?displayProperty=fullName> support <xref:System.Windows.EventSetter> objects.  \\n  \\n You can only declare event setters for events that are routed events. You can declare event setters for routed events with a direct routing strategy, bubbling events, or tunneling events.  \\n  \\n Instances of the <xref:System.Windows.EventSetter> class are usually created through [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], as an object element within a style defined through [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]. An <xref:System.Windows.EventSetter> might also be instantiated from code.  \\n  \\n Event setters cannot be used in a style that is contained in a theme resource dictionary. This is because a theme resource dictionary at run time is often loose [!INCLUDE[TLA#tla_baml](~/includes/tlasharptla-baml-md.md)] files, and does not have any scope defined where accompanying code-behind that defines the handlers can exist.  \\n  \\n Handlers attached through event setters are invoked after any class handlers for an event, and also after any instance handlers. As a result, if a class handler or instance handler marks an event handled in its arguments, then the handler declared by an event setter is not invoked, unless the event setter specifically sets <xref:System.Windows.EventSetter.HandledEventsToo%2A> `true`.  \\n  \\n Event setters may also come from <xref:System.Windows.Style.BasedOn%2A> styles. The event setter handlers from the style specified as <xref:System.Windows.Style.BasedOn%2A> will be invoked after the handlers on the immediate style.  \\n  \\n Note that only <xref:System.Windows.Style.Setters%2A?displayProperty=fullName> supports <xref:System.Windows.EventSetter> objects. Triggers (<xref:System.Windows.TriggerBase> and derived classes) do not support <xref:System.Windows.EventSetter>.\"\n  example:\n  - \"The following example establishes a single <xref:System.Windows.EventSetter> within a page-level style.  \\n  \\n [!code-xml[EventOvwSupport#XAML2](~/samples/snippets/csharp/VS_Snippets_Wpf/EventOvwSupport/CSharp/page2.xaml#xaml2)]  \\n  \\n The following shows the example event handlers:  \\n  \\n [!code-csharp[EventOvwSupport#EventSetterRef](~/samples/snippets/csharp/VS_Snippets_Wpf/EventOvwSupport/CSharp/page2.xaml.cs#eventsetterref)]\\n [!code-vb[EventOvwSupport#EventSetterRef](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EventOvwSupport/visualbasic/page2.xaml.vb#eventsetterref)]\"\n  syntax:\n    content: 'public class EventSetter : System.Windows.SetterBase'\n  inheritance:\n  - System.Object\n  - System.Windows.SetterBase\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Windows.SetterBase.CheckSealed\n  - System.Windows.SetterBase.IsSealed\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/EventSetter.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.EventSetter.#ctor\n  commentId: M:System.Windows.EventSetter.#ctor\n  id: '#ctor'\n  parent: System.Windows.EventSetter\n  langs:\n  - csharp\n  name: EventSetter()\n  nameWithType: EventSetter.EventSetter()\n  fullName: EventSetter.EventSetter()\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Initializes a new instance of the <xref href=\"System.Windows.EventSetter\"></xref> class.\n  syntax:\n    content: public EventSetter ();\n    parameters: []\n  overload: System.Windows.EventSetter.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/EventSetter.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.EventSetter.#ctor(System.Windows.RoutedEvent,System.Delegate)\n  commentId: M:System.Windows.EventSetter.#ctor(System.Windows.RoutedEvent,System.Delegate)\n  id: '#ctor(System.Windows.RoutedEvent,System.Delegate)'\n  parent: System.Windows.EventSetter\n  langs:\n  - csharp\n  name: EventSetter(RoutedEvent, Delegate)\n  nameWithType: EventSetter.EventSetter(RoutedEvent, Delegate)\n  fullName: EventSetter.EventSetter(RoutedEvent, Delegate)\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Initializes a new instance of the <xref href=\"System.Windows.EventSetter\"></xref> class, using the provided event and handler parameters.\n  remarks: This signature is typically used if you creating an <xref:System.Windows.EventSetter> in code, or in code-behind to create an <xref:System.Windows.EventSetter> that augments an existing style prior to use.\n  syntax:\n    content: public EventSetter (System.Windows.RoutedEvent routedEvent, Delegate handler);\n    parameters:\n    - id: routedEvent\n      type: System.Windows.RoutedEvent\n      description: The particular routed event that the <xref href=\"System.Windows.EventSetter\"></xref> responds to.\n    - id: handler\n      type: System.Delegate\n      description: The handler to assign in this setter.\n  overload: System.Windows.EventSetter.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/EventSetter.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.EventSetter.Event\n  commentId: P:System.Windows.EventSetter.Event\n  id: Event\n  parent: System.Windows.EventSetter\n  langs:\n  - csharp\n  name: Event\n  nameWithType: EventSetter.Event\n  fullName: EventSetter.Event\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets or sets the particular routed event that this <xref href=\"System.Windows.EventSetter\"></xref> responds to.\n  remarks: You cannot set this property once the style containing the <xref:System.Windows.EventSetter> is in use and thus is sealed. If you set this property in code and there is the possibility that the style is in use, check the value of the <xref:System.Windows.SetterBase.IsSealed%2A> property on the <xref:System.Windows.EventSetter> instance before you attempt to set <xref:System.Windows.EventSetter.Event%2A>.\n  example:\n  - \"The following example sets the <xref:System.Windows.EventSetter.Event%2A> property as part of an <xref:System.Windows.EventSetter> in a markup style.  \\n  \\n [!code-xml[EventOvwSupport#XAML2](~/samples/snippets/csharp/VS_Snippets_Wpf/EventOvwSupport/CSharp/page2.xaml#xaml2)]\"\n  syntax:\n    content: public System.Windows.RoutedEvent Event { get; set; }\n    return:\n      type: System.Windows.RoutedEvent\n      description: The identifier field of the routed event.\n  overload: System.Windows.EventSetter.Event*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: Attempted to set this property on a sealed <xref href=\"System.Windows.EventSetter\"></xref> .\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/EventSetter.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.EventSetter.HandledEventsToo\n  commentId: P:System.Windows.EventSetter.HandledEventsToo\n  id: HandledEventsToo\n  parent: System.Windows.EventSetter\n  langs:\n  - csharp\n  name: HandledEventsToo\n  nameWithType: EventSetter.HandledEventsToo\n  fullName: EventSetter.HandledEventsToo\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets or sets a value that determines whether the handler assigned to the setter should still be invoked, even if the event is marked handled in its event data.\n  remarks: \"> [!IMPORTANT]\\n>  Setting the <xref:System.Windows.RoutedEventHandlerInfo.InvokeHandledEventsToo%2A> characteristics of how an event's handlers will be invoked must always be performed in code, in keeping with the general principle that there is no way to specify <xref:System.Windows.RoutedEventHandlerInfo.InvokeHandledEventsToo%2A> when assigning defined event handlers for instances directly to named events in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute syntax. Although setting this value in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] does not generate any compile-time errors, the resulting [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] will produce a run-time exception when the style is used.  \\n  \\n<a name=\\\"xamlTextUsage_HandledEventsToo\\\"></a>   \\n## XAML Text Usage  \\n This property should not be used in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]. See Remarks.\"\n  syntax:\n    content: public bool HandledEventsToo { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the handler should still be invoked; otherwise, `false`.'\n  overload: System.Windows.EventSetter.HandledEventsToo*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/EventSetter.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.EventSetter.Handler\n  commentId: P:System.Windows.EventSetter.Handler\n  id: Handler\n  parent: System.Windows.EventSetter\n  langs:\n  - csharp\n  name: Handler\n  nameWithType: EventSetter.Handler\n  fullName: EventSetter.Handler\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets or sets the reference to a handler for a routed event in the setter.\n  remarks: ''\n  example:\n  - \"The following example sets the <xref:System.Windows.EventSetter.Handler%2A> property as part of a <xref:System.Windows.EventSetter> in a markup style.  \\n  \\n [!code-xml[EventOvwSupport#XAML2](~/samples/snippets/csharp/VS_Snippets_Wpf/EventOvwSupport/CSharp/page2.xaml#xaml2)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.Windows.Markup.EventSetterHandlerConverter))]\n\n      public Delegate Handler { get; set; }\n    return:\n      type: System.Delegate\n      description: Reference to the handler that is attached by this <xref href=\"System.Windows.EventSetter\"></xref>.\n  overload: System.Windows.EventSetter.Handler*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.TypeConverterAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/EventSetter.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Windows.SetterBase\n  parent: System.Windows\n  isExternal: false\n  name: SetterBase\n  nameWithType: SetterBase\n  fullName: System.Windows.SetterBase\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.Windows.EventSetter.#ctor\n  parent: System.Windows.EventSetter\n  isExternal: false\n  name: EventSetter()\n  nameWithType: EventSetter.EventSetter()\n  fullName: EventSetter.EventSetter()\n- uid: System.Windows.EventSetter.#ctor(System.Windows.RoutedEvent,System.Delegate)\n  parent: System.Windows.EventSetter\n  isExternal: false\n  name: EventSetter(RoutedEvent, Delegate)\n  nameWithType: EventSetter.EventSetter(RoutedEvent, Delegate)\n  fullName: EventSetter.EventSetter(RoutedEvent, Delegate)\n- uid: System.Windows.RoutedEvent\n  parent: System.Windows\n  isExternal: false\n  name: RoutedEvent\n  nameWithType: RoutedEvent\n  fullName: System.Windows.RoutedEvent\n- uid: System.Delegate\n  parent: System\n  isExternal: false\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.Windows.EventSetter.Event\n  parent: System.Windows.EventSetter\n  isExternal: false\n  name: Event\n  nameWithType: EventSetter.Event\n  fullName: EventSetter.Event\n- uid: System.Windows.EventSetter.HandledEventsToo\n  parent: System.Windows.EventSetter\n  isExternal: false\n  name: HandledEventsToo\n  nameWithType: EventSetter.HandledEventsToo\n  fullName: EventSetter.HandledEventsToo\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.EventSetter.Handler\n  parent: System.Windows.EventSetter\n  isExternal: false\n  name: Handler\n  nameWithType: EventSetter.Handler\n  fullName: EventSetter.Handler\n- uid: System.Windows.EventSetter.#ctor*\n  parent: System.Windows.EventSetter\n  isExternal: false\n  name: EventSetter\n  nameWithType: EventSetter.EventSetter\n  fullName: EventSetter.EventSetter\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/EventSetter.xml\n- uid: System.Windows.EventSetter.Event*\n  parent: System.Windows.EventSetter\n  isExternal: false\n  name: Event\n  nameWithType: EventSetter.Event\n  fullName: EventSetter.Event\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/EventSetter.xml\n- uid: System.Windows.EventSetter.HandledEventsToo*\n  parent: System.Windows.EventSetter\n  isExternal: false\n  name: HandledEventsToo\n  nameWithType: EventSetter.HandledEventsToo\n  fullName: EventSetter.HandledEventsToo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/EventSetter.xml\n- uid: System.Windows.EventSetter.Handler*\n  parent: System.Windows.EventSetter\n  isExternal: false\n  name: Handler\n  nameWithType: EventSetter.Handler\n  fullName: EventSetter.Handler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/EventSetter.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Windows.SetterBase.CheckSealed\n  parent: System.Windows.SetterBase\n  isExternal: false\n  name: CheckSealed()\n  nameWithType: SetterBase.CheckSealed()\n  fullName: SetterBase.CheckSealed()\n- uid: System.Windows.SetterBase.IsSealed\n  parent: System.Windows.SetterBase\n  isExternal: false\n  name: IsSealed\n  nameWithType: SetterBase.IsSealed\n  fullName: SetterBase.IsSealed\n"}