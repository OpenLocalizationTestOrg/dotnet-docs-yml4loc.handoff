{"nodes":[{"content":"The WCF Data Services class derived from <xref href=\"System.ServiceModel.Web.WebServiceHost\"></xref> used to instantiate data services.","nodes":[{"pos":[0,135],"content":"The WCF Data Services class derived from <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Web.WebServiceHost\"&gt;&lt;/xref&gt;</ph> used to instantiate data services.","source":"The WCF Data Services class derived from <xref href=\"System.ServiceModel.Web.WebServiceHost\"></xref> used to instantiate data services."}],"pos":[462,598],"yaml":true},{"content":"[!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] are not autonomous server entities. Instead, the service is a component hosted in an environment such as the Windows Communication Foundation (WCF) that provides core server networking facilities. Specifically, a service does not bind to and listen on a network socket for incoming requests to its Representational State Transfer (REST) entry points. The host handles direct interactions with the network and support caching, scalability, and authentication modules.  \n  \n [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] defines a generic hosting interface <xref:System.Data.Services.IDataServiceHost> that abstracts its implementation from a specific host. This allows [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] to run in a range of hosting environments. For more information, see [Hosting the Data Service](~/docs/framework/data/wcf/hosting-the-data-service-wcf-data-services.md).","nodes":[{"pos":[0,516],"content":"[!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] are not autonomous server entities. Instead, the service is a component hosted in an environment such as the Windows Communication Foundation (WCF) that provides core server networking facilities. Specifically, a service does not bind to and listen on a network socket for incoming requests to its Representational State Transfer (REST) entry points. The host handles direct interactions with the network and support caching, scalability, and authentication modules.","nodes":[{"content":"<ph id=\"ph1\">[!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)]</ph> are not autonomous server entities.","pos":[0,85],"source":"[!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] are not autonomous server entities."},{"content":"Instead, the service is a component hosted in an environment such as the Windows Communication Foundation (WCF) that provides core server networking facilities.","pos":[86,246]},{"content":"Specifically, a service does not bind to and listen on a network socket for incoming requests to its Representational State Transfer (REST) entry points.","pos":[247,400]},{"content":"The host handles direct interactions with the network and support caching, scalability, and authentication modules.","pos":[401,516]}]},{"pos":[523,941],"content":"[!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] defines a generic hosting interface <xref:System.Data.Services.IDataServiceHost> that abstracts its implementation from a specific host. This allows [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] to run in a range of hosting environments. For more information, see [Hosting the Data Service](~/docs/framework/data/wcf/hosting-the-data-service-wcf-data-services.md).","nodes":[{"content":"<ph id=\"ph1\">[!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)]</ph> defines a generic hosting interface <ph id=\"ph2\">&lt;xref:System.Data.Services.IDataServiceHost&gt;</ph> that abstracts its implementation from a specific host.","pos":[0,186],"source":"[!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] defines a generic hosting interface <xref:System.Data.Services.IDataServiceHost> that abstracts its implementation from a specific host."},{"content":"This allows <ph id=\"ph1\">[!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)]</ph> to run in a range of hosting environments.","pos":[187,291],"source":" This allows [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] to run in a range of hosting environments."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Hosting the Data Service<ept id=\"p1\">](~/docs/framework/data/wcf/hosting-the-data-service-wcf-data-services.md)</ept>.","pos":[292,418],"source":" For more information, see [Hosting the Data Service](~/docs/framework/data/wcf/hosting-the-data-service-wcf-data-services.md)."}]}],"pos":[609,1555],"yaml":true,"extradata":"MT"},{"content":"Instantiates <xref href=\"System.Data.Services.DataServiceHost\"></xref> for [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)].","nodes":[{"pos":[0,125],"content":"Instantiates <ph id=\"ph1\">&lt;xref href=\"System.Data.Services.DataServiceHost\"&gt;&lt;/xref&gt;</ph> for <ph id=\"ph2\">[!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)]</ph>.","source":"Instantiates <xref href=\"System.Data.Services.DataServiceHost\"></xref> for [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)]."}],"pos":[9086,9212],"yaml":true},{"content":"[!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] defines a generic hosting interface <xref:System.Data.Services.IDataServiceHost> that abstracts its implementation from a specific host. This allows [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] to run in a range of hosting environments. This interface should not be confused with <xref:System.Data.Services.DataServiceHost>, which instead handles registration and activation for the service. A default <xref:System.Data.Services.IDataServiceHost> is used in this case.","nodes":[{"pos":[0,523],"content":"[!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] defines a generic hosting interface <xref:System.Data.Services.IDataServiceHost> that abstracts its implementation from a specific host. This allows [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] to run in a range of hosting environments. This interface should not be confused with <xref:System.Data.Services.DataServiceHost>, which instead handles registration and activation for the service. A default <xref:System.Data.Services.IDataServiceHost> is used in this case.","nodes":[{"content":"<ph id=\"ph1\">[!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)]</ph> defines a generic hosting interface <ph id=\"ph2\">&lt;xref:System.Data.Services.IDataServiceHost&gt;</ph> that abstracts its implementation from a specific host.","pos":[0,186],"source":"[!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] defines a generic hosting interface <xref:System.Data.Services.IDataServiceHost> that abstracts its implementation from a specific host."},{"content":"This allows <ph id=\"ph1\">[!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)]</ph> to run in a range of hosting environments.","pos":[187,291],"source":" This allows [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] to run in a range of hosting environments."},{"content":"This interface should not be confused with <ph id=\"ph1\">&lt;xref:System.Data.Services.DataServiceHost&gt;</ph>, which instead handles registration and activation for the service.","pos":[292,446],"source":" This interface should not be confused with <xref:System.Data.Services.DataServiceHost>, which instead handles registration and activation for the service."},{"content":"A default <ph id=\"ph1\">&lt;xref:System.Data.Services.IDataServiceHost&gt;</ph> is used in this case.","pos":[447,523],"source":" A default <xref:System.Data.Services.IDataServiceHost> is used in this case."}]}],"pos":[9223,9749],"yaml":true,"extradata":"MT"},{"content":"Identifies the [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] to the host.","nodes":[{"pos":[0,77],"content":"Identifies the <ph id=\"ph1\">[!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)]</ph> to the host.","source":"Identifies the [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] to the host."}],"pos":[9917,9995],"yaml":true},{"content":"The URI of the host.","nodes":[{"pos":[0,20],"content":"The URI of the host.","nodes":[{"content":"The URI of the host.","pos":[0,20]}]}],"pos":[10063,10084],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Services.DataServiceHost\n  commentId: T:System.Data.Services.DataServiceHost\n  id: DataServiceHost\n  children:\n  - System.Data.Services.DataServiceHost.#ctor(System.Type,System.Uri[])\n  langs:\n  - csharp\n  name: DataServiceHost\n  nameWithType: DataServiceHost\n  fullName: System.Data.Services.DataServiceHost\n  type: Class\n  assemblies:\n  - System.Data.Services\n  namespace: System.Data.Services\n  summary: The WCF Data Services class derived from <xref href=\"System.ServiceModel.Web.WebServiceHost\"></xref> used to instantiate data services.\n  remarks: \"[!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] are not autonomous server entities. Instead, the service is a component hosted in an environment such as the Windows Communication Foundation (WCF) that provides core server networking facilities. Specifically, a service does not bind to and listen on a network socket for incoming requests to its Representational State Transfer (REST) entry points. The host handles direct interactions with the network and support caching, scalability, and authentication modules.  \\n  \\n [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] defines a generic hosting interface <xref:System.Data.Services.IDataServiceHost> that abstracts its implementation from a specific host. This allows [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] to run in a range of hosting environments. For more information, see [Hosting the Data Service](~/docs/framework/data/wcf/hosting-the-data-service-wcf-data-services.md).\"\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public class DataServiceHost : System.ServiceModel.Web.WebServiceHost\n  inheritance:\n  - System.Object\n  - System.ServiceModel.Channels.CommunicationObject\n  - System.ServiceModel.ServiceHostBase\n  - System.ServiceModel.ServiceHost\n  - System.ServiceModel.Web.WebServiceHost\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.ServiceModel.Channels.CommunicationObject.Abort\n  - System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.Close\n  - System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)\n  - System.ServiceModel.Channels.CommunicationObject.Closed\n  - System.ServiceModel.Channels.CommunicationObject.Closing\n  - System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)\n  - System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)\n  - System.ServiceModel.Channels.CommunicationObject.Fault\n  - System.ServiceModel.Channels.CommunicationObject.Faulted\n  - System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType\n  - System.ServiceModel.Channels.CommunicationObject.IsDisposed\n  - System.ServiceModel.Channels.CommunicationObject.OnClosing\n  - System.ServiceModel.Channels.CommunicationObject.OnFaulted\n  - System.ServiceModel.Channels.CommunicationObject.Open\n  - System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)\n  - System.ServiceModel.Channels.CommunicationObject.Opened\n  - System.ServiceModel.Channels.CommunicationObject.Opening\n  - System.ServiceModel.Channels.CommunicationObject.State\n  - System.ServiceModel.Channels.CommunicationObject.ThisLock\n  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed\n  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable\n  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen\n  - System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)\n  - System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)\n  - System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)\n  - System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)\n  - System.ServiceModel.ServiceHost.ApplyConfiguration\n  - System.ServiceModel.ServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)\n  - System.ServiceModel.ServiceHost.InitializeDescription(System.Object,System.ServiceModel.UriSchemeKeyedCollection)\n  - System.ServiceModel.ServiceHost.InitializeDescription(System.Type,System.ServiceModel.UriSchemeKeyedCollection)\n  - System.ServiceModel.ServiceHost.OnClosed\n  - System.ServiceModel.ServiceHost.SingletonInstance\n  - System.ServiceModel.ServiceHostBase.AddBaseAddress(System.Uri)\n  - System.ServiceModel.ServiceHostBase.AddDefaultEndpoints\n  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)\n  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)\n  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)\n  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)\n  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)\n  - System.ServiceModel.ServiceHostBase.Authentication\n  - System.ServiceModel.ServiceHostBase.Authorization\n  - System.ServiceModel.ServiceHostBase.BaseAddresses\n  - System.ServiceModel.ServiceHostBase.ChannelDispatchers\n  - System.ServiceModel.ServiceHostBase.CloseTimeout\n  - System.ServiceModel.ServiceHostBase.Credentials\n  - System.ServiceModel.ServiceHostBase.DefaultCloseTimeout\n  - System.ServiceModel.ServiceHostBase.DefaultOpenTimeout\n  - System.ServiceModel.ServiceHostBase.Description\n  - System.ServiceModel.ServiceHostBase.Extensions\n  - System.ServiceModel.ServiceHostBase.ImplementedContracts\n  - System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit(System.Int32)\n  - System.ServiceModel.ServiceHostBase.InitializeDescription(System.ServiceModel.UriSchemeKeyedCollection)\n  - System.ServiceModel.ServiceHostBase.InitializeRuntime\n  - System.ServiceModel.ServiceHostBase.LoadConfigurationSection(System.ServiceModel.Configuration.ServiceElement)\n  - System.ServiceModel.ServiceHostBase.ManualFlowControlLimit\n  - System.ServiceModel.ServiceHostBase.OnAbort\n  - System.ServiceModel.ServiceHostBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.ServiceHostBase.OnClose(System.TimeSpan)\n  - System.ServiceModel.ServiceHostBase.OnEndClose(System.IAsyncResult)\n  - System.ServiceModel.ServiceHostBase.OnEndOpen(System.IAsyncResult)\n  - System.ServiceModel.ServiceHostBase.OnOpen(System.TimeSpan)\n  - System.ServiceModel.ServiceHostBase.OnOpened\n  - System.ServiceModel.ServiceHostBase.OpenTimeout\n  - System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters\n  - System.ServiceModel.ServiceHostBase.SetEndpointAddress(System.ServiceModel.Description.ServiceEndpoint,System.String)\n  - System.ServiceModel.ServiceHostBase.System#IDisposable#Dispose\n  - System.ServiceModel.ServiceHostBase.UnknownMessageReceived\n  - System.ServiceModel.Web.WebServiceHost.OnOpening\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  altCompliant: None .\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Services/DataServiceHost.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Services.DataServiceHost.#ctor(System.Type,System.Uri[])\n  commentId: M:System.Data.Services.DataServiceHost.#ctor(System.Type,System.Uri[])\n  id: '#ctor(System.Type,System.Uri[])'\n  parent: System.Data.Services.DataServiceHost\n  langs:\n  - csharp\n  name: DataServiceHost(Type, Uri[])\n  nameWithType: DataServiceHost.DataServiceHost(Type, Uri[])\n  fullName: DataServiceHost.DataServiceHost(Type, Uri[])\n  type: Constructor\n  assemblies:\n  - System.Data.Services\n  namespace: System.Data.Services\n  summary: Instantiates <xref href=\"System.Data.Services.DataServiceHost\"></xref> for [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)].\n  remarks: '[!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] defines a generic hosting interface <xref:System.Data.Services.IDataServiceHost> that abstracts its implementation from a specific host. This allows [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] to run in a range of hosting environments. This interface should not be confused with <xref:System.Data.Services.DataServiceHost>, which instead handles registration and activation for the service. A default <xref:System.Data.Services.IDataServiceHost> is used in this case.'\n  syntax:\n    content: public DataServiceHost (Type serviceType, Uri[] baseAddresses);\n    parameters:\n    - id: serviceType\n      type: System.Type\n      description: Identifies the [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] to the host.\n    - id: baseAddresses\n      type: System.Uri[]\n      description: The URI of the host.\n  overload: System.Data.Services.DataServiceHost.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Services/DataServiceHost.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\nreferences:\n- uid: System.ServiceModel.Web.WebServiceHost\n  parent: System.ServiceModel.Web\n  isExternal: false\n  name: WebServiceHost\n  nameWithType: WebServiceHost\n  fullName: System.ServiceModel.Web.WebServiceHost\n- uid: System.Data.Services.DataServiceHost.#ctor(System.Type,System.Uri[])\n  parent: System.Data.Services.DataServiceHost\n  isExternal: false\n  name: DataServiceHost(Type, Uri[])\n  nameWithType: DataServiceHost.DataServiceHost(Type, Uri[])\n  fullName: DataServiceHost.DataServiceHost(Type, Uri[])\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Uri\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri\n- uid: System.Uri[]\n  parent: System\n  isExternal: false\n  name: Uri[]\n  nameWithType: Uri[]\n  fullName: System.Uri[]\n  spec.csharp:\n  - uid: System.Uri\n    name: Uri\n    nameWithType: Uri\n    fullName: System.Uri\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Data.Services.DataServiceHost.#ctor*\n  parent: System.Data.Services.DataServiceHost\n  isExternal: false\n  name: DataServiceHost\n  nameWithType: DataServiceHost.DataServiceHost\n  fullName: DataServiceHost.DataServiceHost\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Services/DataServiceHost.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.ServiceModel.Channels.CommunicationObject.Abort\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Abort()\n  nameWithType: CommunicationObject.Abort()\n  fullName: CommunicationObject.Abort()\n- uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: BeginClose(AsyncCallback, Object)\n  nameWithType: CommunicationObject.BeginClose(AsyncCallback, Object)\n  fullName: CommunicationObject.BeginClose(AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: BeginClose(TimeSpan, AsyncCallback, Object)\n  nameWithType: CommunicationObject.BeginClose(TimeSpan, AsyncCallback, Object)\n  fullName: CommunicationObject.BeginClose(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: BeginOpen(AsyncCallback, Object)\n  nameWithType: CommunicationObject.BeginOpen(AsyncCallback, Object)\n  fullName: CommunicationObject.BeginOpen(AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: BeginOpen(TimeSpan, AsyncCallback, Object)\n  nameWithType: CommunicationObject.BeginOpen(TimeSpan, AsyncCallback, Object)\n  fullName: CommunicationObject.BeginOpen(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.Close\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Close()\n  nameWithType: CommunicationObject.Close()\n  fullName: CommunicationObject.Close()\n- uid: System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Close(TimeSpan)\n  nameWithType: CommunicationObject.Close(TimeSpan)\n  fullName: CommunicationObject.Close(TimeSpan)\n- uid: System.ServiceModel.Channels.CommunicationObject.Closed\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Closed\n  nameWithType: CommunicationObject.Closed\n  fullName: CommunicationObject.Closed\n- uid: System.ServiceModel.Channels.CommunicationObject.Closing\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Closing\n  nameWithType: CommunicationObject.Closing\n  fullName: CommunicationObject.Closing\n- uid: System.ServiceModel.ServiceHostBase.DefaultCloseTimeout\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: DefaultCloseTimeout\n  nameWithType: ServiceHostBase.DefaultCloseTimeout\n  fullName: ServiceHostBase.DefaultCloseTimeout\n- uid: System.ServiceModel.ServiceHostBase.DefaultOpenTimeout\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: DefaultOpenTimeout\n  nameWithType: ServiceHostBase.DefaultOpenTimeout\n  fullName: ServiceHostBase.DefaultOpenTimeout\n- uid: System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: EndClose(IAsyncResult)\n  nameWithType: CommunicationObject.EndClose(IAsyncResult)\n  fullName: CommunicationObject.EndClose(IAsyncResult)\n- uid: System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: EndOpen(IAsyncResult)\n  nameWithType: CommunicationObject.EndOpen(IAsyncResult)\n  fullName: CommunicationObject.EndOpen(IAsyncResult)\n- uid: System.ServiceModel.Channels.CommunicationObject.Fault\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Fault()\n  nameWithType: CommunicationObject.Fault()\n  fullName: CommunicationObject.Fault()\n- uid: System.ServiceModel.Channels.CommunicationObject.Faulted\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Faulted\n  nameWithType: CommunicationObject.Faulted\n  fullName: CommunicationObject.Faulted\n- uid: System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: GetCommunicationObjectType()\n  nameWithType: CommunicationObject.GetCommunicationObjectType()\n  fullName: CommunicationObject.GetCommunicationObjectType()\n- uid: System.ServiceModel.Channels.CommunicationObject.IsDisposed\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: IsDisposed\n  nameWithType: CommunicationObject.IsDisposed\n  fullName: CommunicationObject.IsDisposed\n- uid: System.ServiceModel.ServiceHostBase.OnAbort\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: OnAbort()\n  nameWithType: ServiceHostBase.OnAbort()\n  fullName: ServiceHostBase.OnAbort()\n- uid: System.ServiceModel.ServiceHostBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: OnBeginClose(TimeSpan, AsyncCallback, Object)\n  nameWithType: ServiceHostBase.OnBeginClose(TimeSpan, AsyncCallback, Object)\n  fullName: ServiceHostBase.OnBeginClose(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: OnBeginOpen(TimeSpan, AsyncCallback, Object)\n  nameWithType: ServiceHostBase.OnBeginOpen(TimeSpan, AsyncCallback, Object)\n  fullName: ServiceHostBase.OnBeginOpen(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.ServiceHostBase.OnClose(System.TimeSpan)\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: OnClose(TimeSpan)\n  nameWithType: ServiceHostBase.OnClose(TimeSpan)\n  fullName: ServiceHostBase.OnClose(TimeSpan)\n- uid: System.ServiceModel.ServiceHost.OnClosed\n  parent: System.ServiceModel.ServiceHost\n  isExternal: false\n  name: OnClosed()\n  nameWithType: ServiceHost.OnClosed()\n  fullName: ServiceHost.OnClosed()\n- uid: System.ServiceModel.Channels.CommunicationObject.OnClosing\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnClosing()\n  nameWithType: CommunicationObject.OnClosing()\n  fullName: CommunicationObject.OnClosing()\n- uid: System.ServiceModel.ServiceHostBase.OnEndClose(System.IAsyncResult)\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: OnEndClose(IAsyncResult)\n  nameWithType: ServiceHostBase.OnEndClose(IAsyncResult)\n  fullName: ServiceHostBase.OnEndClose(IAsyncResult)\n- uid: System.ServiceModel.ServiceHostBase.OnEndOpen(System.IAsyncResult)\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: OnEndOpen(IAsyncResult)\n  nameWithType: ServiceHostBase.OnEndOpen(IAsyncResult)\n  fullName: ServiceHostBase.OnEndOpen(IAsyncResult)\n- uid: System.ServiceModel.Channels.CommunicationObject.OnFaulted\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnFaulted()\n  nameWithType: CommunicationObject.OnFaulted()\n  fullName: CommunicationObject.OnFaulted()\n- uid: System.ServiceModel.ServiceHostBase.OnOpen(System.TimeSpan)\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: OnOpen(TimeSpan)\n  nameWithType: ServiceHostBase.OnOpen(TimeSpan)\n  fullName: ServiceHostBase.OnOpen(TimeSpan)\n- uid: System.ServiceModel.ServiceHostBase.OnOpened\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: OnOpened()\n  nameWithType: ServiceHostBase.OnOpened()\n  fullName: ServiceHostBase.OnOpened()\n- uid: System.ServiceModel.Web.WebServiceHost.OnOpening\n  parent: System.ServiceModel.Web.WebServiceHost\n  isExternal: false\n  name: OnOpening()\n  nameWithType: WebServiceHost.OnOpening()\n  fullName: WebServiceHost.OnOpening()\n- uid: System.ServiceModel.Channels.CommunicationObject.Open\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Open()\n  nameWithType: CommunicationObject.Open()\n  fullName: CommunicationObject.Open()\n- uid: System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Open(TimeSpan)\n  nameWithType: CommunicationObject.Open(TimeSpan)\n  fullName: CommunicationObject.Open(TimeSpan)\n- uid: System.ServiceModel.Channels.CommunicationObject.Opened\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Opened\n  nameWithType: CommunicationObject.Opened\n  fullName: CommunicationObject.Opened\n- uid: System.ServiceModel.Channels.CommunicationObject.Opening\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Opening\n  nameWithType: CommunicationObject.Opening\n  fullName: CommunicationObject.Opening\n- uid: System.ServiceModel.Channels.CommunicationObject.State\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: State\n  nameWithType: CommunicationObject.State\n  fullName: CommunicationObject.State\n- uid: System.ServiceModel.Channels.CommunicationObject.ThisLock\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: ThisLock\n  nameWithType: CommunicationObject.ThisLock\n  fullName: CommunicationObject.ThisLock\n- uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: ThrowIfDisposed()\n  nameWithType: CommunicationObject.ThrowIfDisposed()\n  fullName: CommunicationObject.ThrowIfDisposed()\n- uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: ThrowIfDisposedOrImmutable()\n  nameWithType: CommunicationObject.ThrowIfDisposedOrImmutable()\n  fullName: CommunicationObject.ThrowIfDisposedOrImmutable()\n- uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: ThrowIfDisposedOrNotOpen()\n  nameWithType: CommunicationObject.ThrowIfDisposedOrNotOpen()\n  fullName: CommunicationObject.ThrowIfDisposedOrNotOpen()\n- uid: System.ServiceModel.ServiceHostBase.AddBaseAddress(System.Uri)\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: AddBaseAddress(Uri)\n  nameWithType: ServiceHostBase.AddBaseAddress(Uri)\n  fullName: ServiceHostBase.AddBaseAddress(Uri)\n- uid: System.ServiceModel.ServiceHostBase.AddDefaultEndpoints\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: AddDefaultEndpoints()\n  nameWithType: ServiceHostBase.AddDefaultEndpoints()\n  fullName: ServiceHostBase.AddDefaultEndpoints()\n- uid: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: AddServiceEndpoint(ServiceEndpoint)\n  nameWithType: ServiceHostBase.AddServiceEndpoint(ServiceEndpoint)\n  fullName: ServiceHostBase.AddServiceEndpoint(ServiceEndpoint)\n- uid: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: AddServiceEndpoint(String, Binding, String)\n  nameWithType: ServiceHostBase.AddServiceEndpoint(String, Binding, String)\n  fullName: ServiceHostBase.AddServiceEndpoint(String, Binding, String)\n- uid: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: AddServiceEndpoint(String, Binding, Uri)\n  nameWithType: ServiceHostBase.AddServiceEndpoint(String, Binding, Uri)\n  fullName: ServiceHostBase.AddServiceEndpoint(String, Binding, Uri)\n- uid: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: AddServiceEndpoint(String, Binding, String, Uri)\n  nameWithType: ServiceHostBase.AddServiceEndpoint(String, Binding, String, Uri)\n  fullName: ServiceHostBase.AddServiceEndpoint(String, Binding, String, Uri)\n- uid: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: AddServiceEndpoint(String, Binding, Uri, Uri)\n  nameWithType: ServiceHostBase.AddServiceEndpoint(String, Binding, Uri, Uri)\n  fullName: ServiceHostBase.AddServiceEndpoint(String, Binding, Uri, Uri)\n- uid: System.ServiceModel.ServiceHost.ApplyConfiguration\n  parent: System.ServiceModel.ServiceHost\n  isExternal: false\n  name: ApplyConfiguration()\n  nameWithType: ServiceHost.ApplyConfiguration()\n  fullName: ServiceHost.ApplyConfiguration()\n- uid: System.ServiceModel.ServiceHostBase.Authentication\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: Authentication\n  nameWithType: ServiceHostBase.Authentication\n  fullName: ServiceHostBase.Authentication\n- uid: System.ServiceModel.ServiceHostBase.Authorization\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: Authorization\n  nameWithType: ServiceHostBase.Authorization\n  fullName: ServiceHostBase.Authorization\n- uid: System.ServiceModel.ServiceHostBase.BaseAddresses\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: BaseAddresses\n  nameWithType: ServiceHostBase.BaseAddresses\n  fullName: ServiceHostBase.BaseAddresses\n- uid: System.ServiceModel.ServiceHostBase.ChannelDispatchers\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: ChannelDispatchers\n  nameWithType: ServiceHostBase.ChannelDispatchers\n  fullName: ServiceHostBase.ChannelDispatchers\n- uid: System.ServiceModel.ServiceHostBase.CloseTimeout\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: CloseTimeout\n  nameWithType: ServiceHostBase.CloseTimeout\n  fullName: ServiceHostBase.CloseTimeout\n- uid: System.ServiceModel.ServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)\n  parent: System.ServiceModel.ServiceHost\n  isExternal: false\n  name: CreateDescription(IDictionary<String,ContractDescription>)\n  nameWithType: ServiceHost.CreateDescription(IDictionary<String,ContractDescription>)\n  fullName: ServiceHost.CreateDescription(IDictionary<String,ContractDescription>)\n- uid: System.ServiceModel.ServiceHostBase.Credentials\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: Credentials\n  nameWithType: ServiceHostBase.Credentials\n  fullName: ServiceHostBase.Credentials\n- uid: System.ServiceModel.ServiceHostBase.Description\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: Description\n  nameWithType: ServiceHostBase.Description\n  fullName: ServiceHostBase.Description\n- uid: System.ServiceModel.ServiceHostBase.Extensions\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: Extensions\n  nameWithType: ServiceHostBase.Extensions\n  fullName: ServiceHostBase.Extensions\n- uid: System.ServiceModel.ServiceHostBase.ImplementedContracts\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: ImplementedContracts\n  nameWithType: ServiceHostBase.ImplementedContracts\n  fullName: ServiceHostBase.ImplementedContracts\n- uid: System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit(System.Int32)\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: IncrementManualFlowControlLimit(Int32)\n  nameWithType: ServiceHostBase.IncrementManualFlowControlLimit(Int32)\n  fullName: ServiceHostBase.IncrementManualFlowControlLimit(Int32)\n- uid: System.ServiceModel.ServiceHostBase.InitializeDescription(System.ServiceModel.UriSchemeKeyedCollection)\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: InitializeDescription(UriSchemeKeyedCollection)\n  nameWithType: ServiceHostBase.InitializeDescription(UriSchemeKeyedCollection)\n  fullName: ServiceHostBase.InitializeDescription(UriSchemeKeyedCollection)\n- uid: System.ServiceModel.ServiceHostBase.InitializeRuntime\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: InitializeRuntime()\n  nameWithType: ServiceHostBase.InitializeRuntime()\n  fullName: ServiceHostBase.InitializeRuntime()\n- uid: System.ServiceModel.ServiceHostBase.LoadConfigurationSection(System.ServiceModel.Configuration.ServiceElement)\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: LoadConfigurationSection(ServiceElement)\n  nameWithType: ServiceHostBase.LoadConfigurationSection(ServiceElement)\n  fullName: ServiceHostBase.LoadConfigurationSection(ServiceElement)\n- uid: System.ServiceModel.ServiceHostBase.ManualFlowControlLimit\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: ManualFlowControlLimit\n  nameWithType: ServiceHostBase.ManualFlowControlLimit\n  fullName: ServiceHostBase.ManualFlowControlLimit\n- uid: System.ServiceModel.ServiceHostBase.OpenTimeout\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: OpenTimeout\n  nameWithType: ServiceHostBase.OpenTimeout\n  fullName: ServiceHostBase.OpenTimeout\n- uid: System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: ReleasePerformanceCounters()\n  nameWithType: ServiceHostBase.ReleasePerformanceCounters()\n  fullName: ServiceHostBase.ReleasePerformanceCounters()\n- uid: System.ServiceModel.ServiceHostBase.SetEndpointAddress(System.ServiceModel.Description.ServiceEndpoint,System.String)\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: SetEndpointAddress(ServiceEndpoint, String)\n  nameWithType: ServiceHostBase.SetEndpointAddress(ServiceEndpoint, String)\n  fullName: ServiceHostBase.SetEndpointAddress(ServiceEndpoint, String)\n- uid: System.ServiceModel.ServiceHostBase.UnknownMessageReceived\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: UnknownMessageReceived\n  nameWithType: ServiceHostBase.UnknownMessageReceived\n  fullName: ServiceHostBase.UnknownMessageReceived\n- uid: System.ServiceModel.ServiceHostBase.System#IDisposable#Dispose\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: IDisposable.Dispose()\n  nameWithType: ServiceHostBase.IDisposable.Dispose()\n  fullName: ServiceHostBase.IDisposable.Dispose()\n- uid: System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)\n  parent: System.ServiceModel.ServiceHost\n  isExternal: false\n  name: AddServiceEndpoint(Type, Binding, String)\n  nameWithType: ServiceHost.AddServiceEndpoint(Type, Binding, String)\n  fullName: ServiceHost.AddServiceEndpoint(Type, Binding, String)\n- uid: System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)\n  parent: System.ServiceModel.ServiceHost\n  isExternal: false\n  name: AddServiceEndpoint(Type, Binding, Uri)\n  nameWithType: ServiceHost.AddServiceEndpoint(Type, Binding, Uri)\n  fullName: ServiceHost.AddServiceEndpoint(Type, Binding, Uri)\n- uid: System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)\n  parent: System.ServiceModel.ServiceHost\n  isExternal: false\n  name: AddServiceEndpoint(Type, Binding, String, Uri)\n  nameWithType: ServiceHost.AddServiceEndpoint(Type, Binding, String, Uri)\n  fullName: ServiceHost.AddServiceEndpoint(Type, Binding, String, Uri)\n- uid: System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)\n  parent: System.ServiceModel.ServiceHost\n  isExternal: false\n  name: AddServiceEndpoint(Type, Binding, Uri, Uri)\n  nameWithType: ServiceHost.AddServiceEndpoint(Type, Binding, Uri, Uri)\n  fullName: ServiceHost.AddServiceEndpoint(Type, Binding, Uri, Uri)\n- uid: System.ServiceModel.ServiceHost.InitializeDescription(System.Object,System.ServiceModel.UriSchemeKeyedCollection)\n  parent: System.ServiceModel.ServiceHost\n  isExternal: false\n  name: InitializeDescription(Object, UriSchemeKeyedCollection)\n  nameWithType: ServiceHost.InitializeDescription(Object, UriSchemeKeyedCollection)\n  fullName: ServiceHost.InitializeDescription(Object, UriSchemeKeyedCollection)\n- uid: System.ServiceModel.ServiceHost.InitializeDescription(System.Type,System.ServiceModel.UriSchemeKeyedCollection)\n  parent: System.ServiceModel.ServiceHost\n  isExternal: false\n  name: InitializeDescription(Type, UriSchemeKeyedCollection)\n  nameWithType: ServiceHost.InitializeDescription(Type, UriSchemeKeyedCollection)\n  fullName: ServiceHost.InitializeDescription(Type, UriSchemeKeyedCollection)\n- uid: System.ServiceModel.ServiceHost.SingletonInstance\n  parent: System.ServiceModel.ServiceHost\n  isExternal: false\n  name: SingletonInstance\n  nameWithType: ServiceHost.SingletonInstance\n  fullName: ServiceHost.SingletonInstance\n"}