### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.AesCng
  commentId: T:System.Security.Cryptography.AesCng
  id: AesCng
  children:
  - System.Security.Cryptography.AesCng.#ctor
  - System.Security.Cryptography.AesCng.#ctor(System.String)
  - System.Security.Cryptography.AesCng.#ctor(System.String,System.Security.Cryptography.CngProvider)
  - System.Security.Cryptography.AesCng.#ctor(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)
  - System.Security.Cryptography.AesCng.CreateDecryptor
  - System.Security.Cryptography.AesCng.CreateDecryptor(System.Byte[],System.Byte[])
  - System.Security.Cryptography.AesCng.CreateEncryptor
  - System.Security.Cryptography.AesCng.CreateEncryptor(System.Byte[],System.Byte[])
  - System.Security.Cryptography.AesCng.Dispose(System.Boolean)
  - System.Security.Cryptography.AesCng.GenerateIV
  - System.Security.Cryptography.AesCng.GenerateKey
  - System.Security.Cryptography.AesCng.Key
  - System.Security.Cryptography.AesCng.KeySize
  langs:
  - csharp
  name: AesCng
  nameWithType: AesCng
  fullName: System.Security.Cryptography.AesCng
  type: Class
  assemblies:
  - System.Security.Cryptography.Cng
  - System.Core
  - netstandard
  namespace: System.Security.Cryptography
  summary: Provides a Cryptography Next Generation (CNG) implementation of the Advanced Encryption Standard (AES) algorithm.
  syntax:
    content: 'public sealed class AesCng : System.Security.Cryptography.Aes'
  inheritance:
  - System.Object
  - System.Security.Cryptography.SymmetricAlgorithm
  - System.Security.Cryptography.Aes
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  - System.Security.Cryptography.Aes.Create
  - System.Security.Cryptography.Aes.Create(System.String)
  - System.Security.Cryptography.Aes.LegalBlockSizes
  - System.Security.Cryptography.Aes.LegalKeySizes
  - System.Security.Cryptography.SymmetricAlgorithm.BlockSize
  - System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue
  - System.Security.Cryptography.SymmetricAlgorithm.Clear
  - System.Security.Cryptography.SymmetricAlgorithm.Dispose
  - System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize
  - System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue
  - System.Security.Cryptography.SymmetricAlgorithm.IV
  - System.Security.Cryptography.SymmetricAlgorithm.IVValue
  - System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue
  - System.Security.Cryptography.SymmetricAlgorithm.KeyValue
  - System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizesValue
  - System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizesValue
  - System.Security.Cryptography.SymmetricAlgorithm.Mode
  - System.Security.Cryptography.SymmetricAlgorithm.ModeValue
  - System.Security.Cryptography.SymmetricAlgorithm.Padding
  - System.Security.Cryptography.SymmetricAlgorithm.PaddingValue
  - System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize(System.Int32)
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.2
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.2
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCng.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.AesCng.#ctor
  commentId: M:System.Security.Cryptography.AesCng.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.AesCng
  langs:
  - csharp
  name: AesCng()
  nameWithType: AesCng.AesCng()
  fullName: AesCng.AesCng()
  type: Constructor
  assemblies:
  - System.Security.Cryptography.Cng
  - System.Core
  - netstandard
  namespace: System.Security.Cryptography
  summary: Initializes a new instance of the <xref href="System.Security.Cryptography.AesCng"></xref> class with an ephemeral key.
  syntax:
    content: public AesCng ();
    parameters: []
  overload: System.Security.Cryptography.AesCng.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.2
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.2
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCng.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.AesCng.#ctor(System.String)
  commentId: M:System.Security.Cryptography.AesCng.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Cryptography.AesCng
  langs:
  - csharp
  name: AesCng(String)
  nameWithType: AesCng.AesCng(String)
  fullName: AesCng.AesCng(String)
  type: Constructor
  assemblies:
  - System.Security.Cryptography.Cng
  - System.Core
  - netstandard
  namespace: System.Security.Cryptography
  summary: Initializes a new instance of the <xref href="System.Security.Cryptography.AesCng"></xref> class with the specified key name, which represents an existing persisted AES key.
  remarks: This constructor uses a default <xref:System.Security.Cryptography.CngKeyOpenOptions> value of <xref:System.Security.Cryptography.CngKeyOpenOptions.None> and <xref:System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider%2A> as the default key storage provider (KSP) to open the key.
  syntax:
    content: public AesCng (string keyName);
    parameters:
    - id: keyName
      type: System.String
      description: The name of the key.
  overload: System.Security.Cryptography.AesCng.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>keyName</code> is `null`.
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: Cryptography Next Generation (CNG) is not supported on this system.
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: All other errors.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.2
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.2
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCng.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.AesCng.#ctor(System.String,System.Security.Cryptography.CngProvider)
  commentId: M:System.Security.Cryptography.AesCng.#ctor(System.String,System.Security.Cryptography.CngProvider)
  id: '#ctor(System.String,System.Security.Cryptography.CngProvider)'
  parent: System.Security.Cryptography.AesCng
  langs:
  - csharp
  name: AesCng(String, CngProvider)
  nameWithType: AesCng.AesCng(String, CngProvider)
  fullName: AesCng.AesCng(String, CngProvider)
  type: Constructor
  assemblies:
  - System.Security.Cryptography.Cng
  - System.Core
  - netstandard
  namespace: System.Security.Cryptography
  summary: Initializes a new instance of the <xref href="System.Security.Cryptography.AesCng"></xref> class with the specified key name, which represents an existing persisted AES key, and the specified key storage provider (KSP).
  remarks: A default <xref:System.Security.Cryptography.CngKeyOpenOptions> value of <xref:System.Security.Cryptography.CngKeyOpenOptions.None> is used to open the key.
  syntax:
    content: public AesCng (string keyName, System.Security.Cryptography.CngProvider provider);
    parameters:
    - id: keyName
      type: System.String
      description: The name of the key.
    - id: provider
      type: System.Security.Cryptography.CngProvider
      description: The KSP that contains the key.
  overload: System.Security.Cryptography.AesCng.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyName</code> is `null`.  \n  \n -or-  \n  \n <code>provider</code> is `null`."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: Cryptography Next Generation (CNG) is not supported on this system.
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: All other errors.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.2
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.2
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCng.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.AesCng.#ctor(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)
  commentId: M:System.Security.Cryptography.AesCng.#ctor(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)
  id: '#ctor(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)'
  parent: System.Security.Cryptography.AesCng
  langs:
  - csharp
  name: AesCng(String, CngProvider, CngKeyOpenOptions)
  nameWithType: AesCng.AesCng(String, CngProvider, CngKeyOpenOptions)
  fullName: AesCng.AesCng(String, CngProvider, CngKeyOpenOptions)
  type: Constructor
  assemblies:
  - System.Security.Cryptography.Cng
  - System.Core
  - netstandard
  namespace: System.Security.Cryptography
  summary: Initializes a new instance of the <xref href="System.Security.Cryptography.AesCng"></xref> class with the specified key name, which represents an existing persisted AES key,  the specified key storage provider (KSP) and key open options.
  syntax:
    content: public AesCng (string keyName, System.Security.Cryptography.CngProvider provider, System.Security.Cryptography.CngKeyOpenOptions openOptions);
    parameters:
    - id: keyName
      type: System.String
      description: The name of the key.
    - id: provider
      type: System.Security.Cryptography.CngProvider
      description: The KSP that contains the key.
    - id: openOptions
      type: System.Security.Cryptography.CngKeyOpenOptions
      description: A bitwise combination of the enumeration values that specify options for opening the key, such as where the key is opened from (machine or user storage) and whether to suppress UI prompting.
  overload: System.Security.Cryptography.AesCng.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyName</code> is `null`.  \n  \n -or-  \n  \n <code>provider</code> is `null`."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: Cryptography Next Generation (CNG) is not supported on this system.
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: All other errors.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.2
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.2
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCng.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.AesCng.CreateDecryptor
  commentId: M:System.Security.Cryptography.AesCng.CreateDecryptor
  id: CreateDecryptor
  parent: System.Security.Cryptography.AesCng
  langs:
  - csharp
  name: CreateDecryptor()
  nameWithType: AesCng.CreateDecryptor()
  fullName: AesCng.CreateDecryptor()
  type: Method
  assemblies:
  - System.Security.Cryptography.Cng
  - System.Core
  - netstandard
  namespace: System.Security.Cryptography
  summary: Creates a symmetric AES decryptor object with the current key and initialization vector (<xref href="System.Security.Cryptography.SymmetricAlgorithm.IV"></xref>).
  remarks: This method decrypts an encrypted message created using the <xref:System.Security.Cryptography.AesCng.CreateEncryptor> overload with the same signature.
  syntax:
    content: public override System.Security.Cryptography.ICryptoTransform CreateDecryptor ();
    parameters: []
    return:
      type: System.Security.Cryptography.ICryptoTransform
      description: A symmetric AES decryptor object.
  overload: System.Security.Cryptography.AesCng.CreateDecryptor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.2
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.2
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCng.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.AesCng.CreateDecryptor(System.Byte[],System.Byte[])
  commentId: M:System.Security.Cryptography.AesCng.CreateDecryptor(System.Byte[],System.Byte[])
  id: CreateDecryptor(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.AesCng
  langs:
  - csharp
  name: CreateDecryptor(Byte[], Byte[])
  nameWithType: AesCng.CreateDecryptor(Byte[], Byte[])
  fullName: AesCng.CreateDecryptor(Byte[], Byte[])
  type: Method
  assemblies:
  - System.Security.Cryptography.Cng
  - System.Core
  - netstandard
  namespace: System.Security.Cryptography
  summary: Creates a symmetric AES decryptor object with the specified key and initialization vector (IV).
  remarks: "This method decrypts an encrypted message created using the <xref:System.Security.Cryptography.AesCng.CreateEncryptor%28System.Byte%5B%5D%2CSystem.Byte%5B%5D%29> overload with the same signature.  \n  \n> [!NOTE]\n>  If you've created the <xref:System.Security.Cryptography.AesCng> object using an existing persisted key and you want to make use of that key when decrypting the message, you want to set the <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> property and then call the  parameterless <xref:System.Security.Cryptography.AesCng.CreateDecryptor> overload instead; otherwise, using this method will create an ephemeral key as specified by the `rgbKey` parameter."
  syntax:
    content: public override System.Security.Cryptography.ICryptoTransform CreateDecryptor (byte[] rgbKey, byte[] rgbIV);
    parameters:
    - id: rgbKey
      type: System.Byte[]
      description: The secret key to use for the AES algorithm. The key size must be 128, 192, or 256 bits.
    - id: rgbIV
      type: System.Byte[]
      description: The initialization vector to use for the AES algorithm.
    return:
      type: System.Security.Cryptography.ICryptoTransform
      description: A symmetric AES decryptor object.
  overload: System.Security.Cryptography.AesCng.CreateDecryptor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>rgbKey</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>rgbKey</code> is not a valid size for this algorithm.  \n  \n -or-  \n  \n <code>rgbIV</code> size does not match the block size for this algorithm."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<code>rgbKey</code> is a known weak key for this algorithm and cannot be used.  \n  \n -or-  \n  \n <code>rgbIV</code> is `null`."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.2
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.2
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCng.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.AesCng.CreateEncryptor
  commentId: M:System.Security.Cryptography.AesCng.CreateEncryptor
  id: CreateEncryptor
  parent: System.Security.Cryptography.AesCng
  langs:
  - csharp
  name: CreateEncryptor()
  nameWithType: AesCng.CreateEncryptor()
  fullName: AesCng.CreateEncryptor()
  type: Method
  assemblies:
  - System.Security.Cryptography.Cng
  - System.Core
  - netstandard
  namespace: System.Security.Cryptography
  summary: Creates a symmetric AES encryptor object using the current key and initialization vector (<xref href="System.Security.Cryptography.SymmetricAlgorithm.IV"></xref>).
  remarks: Use this method to encrypt a message and then use the <xref:System.Security.Cryptography.AesCng.CreateDecryptor%2A> overload with the same signature to decrypt the  result of this method.
  syntax:
    content: public override System.Security.Cryptography.ICryptoTransform CreateEncryptor ();
    parameters: []
    return:
      type: System.Security.Cryptography.ICryptoTransform
      description: A symmetric AES encryptor object.
  overload: System.Security.Cryptography.AesCng.CreateEncryptor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.2
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.2
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCng.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.AesCng.CreateEncryptor(System.Byte[],System.Byte[])
  commentId: M:System.Security.Cryptography.AesCng.CreateEncryptor(System.Byte[],System.Byte[])
  id: CreateEncryptor(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.AesCng
  langs:
  - csharp
  name: CreateEncryptor(Byte[], Byte[])
  nameWithType: AesCng.CreateEncryptor(Byte[], Byte[])
  fullName: AesCng.CreateEncryptor(Byte[], Byte[])
  type: Method
  assemblies:
  - System.Security.Cryptography.Cng
  - System.Core
  - netstandard
  namespace: System.Security.Cryptography
  summary: Creates a symmetric AES encryptor object with the specified key and initialization vector (IV).
  remarks: "Use this method to encrypt a message and then use the <xref:System.Security.Cryptography.AesCng.CreateDecryptor%2A> overload with the same signature to decrypt the  result of this method.  \n  \n> [!NOTE]\n>  If you've created the <xref:System.Security.Cryptography.AesCng> object using an existing persisted key and you want to make use of that key when encrypting the message, you want to set the <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> property and then call the  parameterless <xref:System.Security.Cryptography.AesCng.CreateEncryptor> overload instead; otherwise, using this method will create an ephemeral key as specified by the `rgbKey` parameter."
  syntax:
    content: public override System.Security.Cryptography.ICryptoTransform CreateEncryptor (byte[] rgbKey, byte[] rgbIV);
    parameters:
    - id: rgbKey
      type: System.Byte[]
      description: The secret key to use for the AES algorithm. The key size must be 128, 192, or 256 bits.
    - id: rgbIV
      type: System.Byte[]
      description: The initialization vector to use for the AES algorithm.
    return:
      type: System.Security.Cryptography.ICryptoTransform
      description: A symmetric AES encryptor object.
  overload: System.Security.Cryptography.AesCng.CreateEncryptor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>rgbKey</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>rgbKey</code> is not a valid size for this algorithm.  \n  \n -or-  \n  \n <code>rgbIV</code> size does not match the block size for this algorithm."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<code>rgbKey</code> is a known weak key for this algorithm and cannot be used.  \n  \n -or-  \n  \n <code>rgbIV</code> is `null`."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.2
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.2
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCng.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.AesCng.Dispose(System.Boolean)
  commentId: M:System.Security.Cryptography.AesCng.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Security.Cryptography.AesCng
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: AesCng.Dispose(Boolean)
  fullName: AesCng.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Security.Cryptography.Cng
  - System.Core
  - netstandard
  namespace: System.Security.Cryptography
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: ''
  overload: System.Security.Cryptography.AesCng.Dispose*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.2
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.2
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCng.xml
- uid: System.Security.Cryptography.AesCng.GenerateIV
  commentId: M:System.Security.Cryptography.AesCng.GenerateIV
  id: GenerateIV
  parent: System.Security.Cryptography.AesCng
  langs:
  - csharp
  name: GenerateIV()
  nameWithType: AesCng.GenerateIV()
  fullName: AesCng.GenerateIV()
  type: Method
  assemblies:
  - System.Security.Cryptography.Cng
  - System.Core
  - netstandard
  namespace: System.Security.Cryptography
  summary: Generates a random initialization vector (IV) to use for the AES algorithm.
  syntax:
    content: public override void GenerateIV ();
    parameters: []
  overload: System.Security.Cryptography.AesCng.GenerateIV*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.2
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.2
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCng.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.AesCng.GenerateKey
  commentId: M:System.Security.Cryptography.AesCng.GenerateKey
  id: GenerateKey
  parent: System.Security.Cryptography.AesCng
  langs:
  - csharp
  name: GenerateKey()
  nameWithType: AesCng.GenerateKey()
  fullName: AesCng.GenerateKey()
  type: Method
  assemblies:
  - System.Security.Cryptography.Cng
  - System.Core
  - netstandard
  namespace: System.Security.Cryptography
  summary: Generates a random key to use for the AES algorithm.
  syntax:
    content: public override void GenerateKey ();
    parameters: []
  overload: System.Security.Cryptography.AesCng.GenerateKey*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.2
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.2
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCng.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.AesCng.Key
  commentId: P:System.Security.Cryptography.AesCng.Key
  id: Key
  parent: System.Security.Cryptography.AesCng
  langs:
  - csharp
  name: Key
  nameWithType: AesCng.Key
  fullName: AesCng.Key
  type: Property
  assemblies:
  - System.Security.Cryptography.Cng
  - System.Core
  - netstandard
  namespace: System.Security.Cryptography
  summary: Gets or sets the key for the <xref href="System.Security.Cryptography.AesCng"></xref> algorithm.
  remarks: "If you've created the <xref:System.Security.Cryptography.AesCng> object using an existing persisted key, when you read the value of the <xref:System.Security.Cryptography.AesCng.Key%2A> property, an attempt to export the key will be made. In this case, if the key is not exportable, a <xref:System.Security.Cryptography.CryptographicException> will be thrown.  \n  \n In addition to that, if you set the value of the <xref:System.Security.Cryptography.AesCng.Key%2A> property,  the persisted key will no longer be used and a temporary key will be used instead. If you need to use the persisted key again, a new instance of <xref:System.Security.Cryptography.AesCng> class needs to be created."
  syntax:
    content: public override byte[] Key { get; set; }
    return:
      type: System.Byte[]
      description: The key for the <xref href="System.Security.Cryptography.AesCng"></xref> algorithm.
  overload: System.Security.Cryptography.AesCng.Key*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.2
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.2
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCng.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.AesCng.KeySize
  commentId: P:System.Security.Cryptography.AesCng.KeySize
  id: KeySize
  parent: System.Security.Cryptography.AesCng
  langs:
  - csharp
  name: KeySize
  nameWithType: AesCng.KeySize
  fullName: AesCng.KeySize
  type: Property
  assemblies:
  - System.Security.Cryptography.Cng
  - System.Core
  - netstandard
  namespace: System.Security.Cryptography
  summary: Gets or sets the size, in bits, of the secret key used by the <xref href="System.Security.Cryptography.AesCng"></xref> algorithm.
  remarks: If you've created the <xref:System.Security.Cryptography.AesCng> object using an existing persisted key and you set the value of the <xref:System.Security.Cryptography.AesCng.KeySize%2A> property,  the persisted key will no longer be used and an ephemeral key will be used instead. If you need to use the persisted key again, a new instance of <xref:System.Security.Cryptography.AesCng> class needs to be created.
  syntax:
    content: public override int KeySize { get; set; }
    return:
      type: System.Int32
      description: The size, in bits, of the secret key used by the <xref href="System.Security.Cryptography.AesCng"></xref> algorithm.
  overload: System.Security.Cryptography.AesCng.KeySize*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.2
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.2
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCng.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
references:
- uid: System.Security.Cryptography.Aes
  parent: System.Security.Cryptography
  isExternal: false
  name: Aes
  nameWithType: Aes
  fullName: System.Security.Cryptography.Aes
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.PlatformNotSupportedException
  parent: System
  isExternal: false
  name: PlatformNotSupportedException
  nameWithType: PlatformNotSupportedException
  fullName: System.PlatformNotSupportedException
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.Security.Cryptography.AesCng.#ctor
  parent: System.Security.Cryptography.AesCng
  isExternal: false
  name: AesCng()
  nameWithType: AesCng.AesCng()
  fullName: AesCng.AesCng()
- uid: System.Security.Cryptography.AesCng.#ctor(System.String)
  parent: System.Security.Cryptography.AesCng
  isExternal: false
  name: AesCng(String)
  nameWithType: AesCng.AesCng(String)
  fullName: AesCng.AesCng(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.AesCng.#ctor(System.String,System.Security.Cryptography.CngProvider)
  parent: System.Security.Cryptography.AesCng
  isExternal: false
  name: AesCng(String, CngProvider)
  nameWithType: AesCng.AesCng(String, CngProvider)
  fullName: AesCng.AesCng(String, CngProvider)
- uid: System.Security.Cryptography.CngProvider
  parent: System.Security.Cryptography
  isExternal: false
  name: CngProvider
  nameWithType: CngProvider
  fullName: System.Security.Cryptography.CngProvider
- uid: System.Security.Cryptography.AesCng.#ctor(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)
  parent: System.Security.Cryptography.AesCng
  isExternal: false
  name: AesCng(String, CngProvider, CngKeyOpenOptions)
  nameWithType: AesCng.AesCng(String, CngProvider, CngKeyOpenOptions)
  fullName: AesCng.AesCng(String, CngProvider, CngKeyOpenOptions)
- uid: System.Security.Cryptography.CngKeyOpenOptions
  parent: System.Security.Cryptography
  isExternal: false
  name: CngKeyOpenOptions
  nameWithType: CngKeyOpenOptions
  fullName: System.Security.Cryptography.CngKeyOpenOptions
- uid: System.Security.Cryptography.AesCng.CreateDecryptor
  parent: System.Security.Cryptography.AesCng
  isExternal: false
  name: CreateDecryptor()
  nameWithType: AesCng.CreateDecryptor()
  fullName: AesCng.CreateDecryptor()
- uid: System.Security.Cryptography.ICryptoTransform
  parent: System.Security.Cryptography
  isExternal: false
  name: ICryptoTransform
  nameWithType: ICryptoTransform
  fullName: System.Security.Cryptography.ICryptoTransform
- uid: System.Security.Cryptography.AesCng.CreateDecryptor(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.AesCng
  isExternal: false
  name: CreateDecryptor(Byte[], Byte[])
  nameWithType: AesCng.CreateDecryptor(Byte[], Byte[])
  fullName: AesCng.CreateDecryptor(Byte[], Byte[])
- uid: System.Byte
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Byte[]
  parent: System
  isExternal: false
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.AesCng.CreateEncryptor
  parent: System.Security.Cryptography.AesCng
  isExternal: false
  name: CreateEncryptor()
  nameWithType: AesCng.CreateEncryptor()
  fullName: AesCng.CreateEncryptor()
- uid: System.Security.Cryptography.AesCng.CreateEncryptor(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.AesCng
  isExternal: false
  name: CreateEncryptor(Byte[], Byte[])
  nameWithType: AesCng.CreateEncryptor(Byte[], Byte[])
  fullName: AesCng.CreateEncryptor(Byte[], Byte[])
- uid: System.Security.Cryptography.AesCng.Dispose(System.Boolean)
  parent: System.Security.Cryptography.AesCng
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: AesCng.Dispose(Boolean)
  fullName: AesCng.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.AesCng.GenerateIV
  parent: System.Security.Cryptography.AesCng
  isExternal: false
  name: GenerateIV()
  nameWithType: AesCng.GenerateIV()
  fullName: AesCng.GenerateIV()
- uid: System.Security.Cryptography.AesCng.GenerateKey
  parent: System.Security.Cryptography.AesCng
  isExternal: false
  name: GenerateKey()
  nameWithType: AesCng.GenerateKey()
  fullName: AesCng.GenerateKey()
- uid: System.Security.Cryptography.AesCng.Key
  parent: System.Security.Cryptography.AesCng
  isExternal: false
  name: Key
  nameWithType: AesCng.Key
  fullName: AesCng.Key
- uid: System.Security.Cryptography.AesCng.KeySize
  parent: System.Security.Cryptography.AesCng
  isExternal: false
  name: KeySize
  nameWithType: AesCng.KeySize
  fullName: AesCng.KeySize
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.AesCng.#ctor*
  parent: System.Security.Cryptography.AesCng
  isExternal: false
  name: AesCng
  nameWithType: AesCng.AesCng
  fullName: AesCng.AesCng
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.2
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCng.xml
- uid: System.Security.Cryptography.AesCng.CreateDecryptor*
  parent: System.Security.Cryptography.AesCng
  isExternal: false
  name: CreateDecryptor
  nameWithType: AesCng.CreateDecryptor
  fullName: AesCng.CreateDecryptor
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.2
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCng.xml
- uid: System.Security.Cryptography.AesCng.CreateEncryptor*
  parent: System.Security.Cryptography.AesCng
  isExternal: false
  name: CreateEncryptor
  nameWithType: AesCng.CreateEncryptor
  fullName: AesCng.CreateEncryptor
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.2
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCng.xml
- uid: System.Security.Cryptography.AesCng.Dispose*
  parent: System.Security.Cryptography.AesCng
  isExternal: false
  name: Dispose
  nameWithType: AesCng.Dispose
  fullName: AesCng.Dispose
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.2
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCng.xml
- uid: System.Security.Cryptography.AesCng.GenerateIV*
  parent: System.Security.Cryptography.AesCng
  isExternal: false
  name: GenerateIV
  nameWithType: AesCng.GenerateIV
  fullName: AesCng.GenerateIV
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.2
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCng.xml
- uid: System.Security.Cryptography.AesCng.GenerateKey*
  parent: System.Security.Cryptography.AesCng
  isExternal: false
  name: GenerateKey
  nameWithType: AesCng.GenerateKey
  fullName: AesCng.GenerateKey
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.2
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCng.xml
- uid: System.Security.Cryptography.AesCng.Key*
  parent: System.Security.Cryptography.AesCng
  isExternal: false
  name: Key
  nameWithType: AesCng.Key
  fullName: AesCng.Key
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.2
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCng.xml
- uid: System.Security.Cryptography.AesCng.KeySize*
  parent: System.Security.Cryptography.AesCng
  isExternal: false
  name: KeySize
  nameWithType: AesCng.KeySize
  fullName: AesCng.KeySize
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.2
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesCng.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.Security.Cryptography.SymmetricAlgorithm.BlockSize
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: BlockSize
  nameWithType: SymmetricAlgorithm.BlockSize
  fullName: SymmetricAlgorithm.BlockSize
- uid: System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: BlockSizeValue
  nameWithType: SymmetricAlgorithm.BlockSizeValue
  fullName: SymmetricAlgorithm.BlockSizeValue
- uid: System.Security.Cryptography.SymmetricAlgorithm.Clear
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: Clear()
  nameWithType: SymmetricAlgorithm.Clear()
  fullName: SymmetricAlgorithm.Clear()
- uid: System.Security.Cryptography.Aes.Create
  parent: System.Security.Cryptography.Aes
  isExternal: false
  name: Create()
  nameWithType: Aes.Create()
  fullName: Aes.Create()
- uid: System.Security.Cryptography.Aes.Create(System.String)
  parent: System.Security.Cryptography.Aes
  isExternal: false
  name: Create(String)
  nameWithType: Aes.Create(String)
  fullName: Aes.Create(String)
- uid: System.Security.Cryptography.SymmetricAlgorithm.Dispose
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: Dispose()
  nameWithType: SymmetricAlgorithm.Dispose()
  fullName: SymmetricAlgorithm.Dispose()
- uid: System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: FeedbackSize
  nameWithType: SymmetricAlgorithm.FeedbackSize
  fullName: SymmetricAlgorithm.FeedbackSize
- uid: System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: FeedbackSizeValue
  nameWithType: SymmetricAlgorithm.FeedbackSizeValue
  fullName: SymmetricAlgorithm.FeedbackSizeValue
- uid: System.Security.Cryptography.SymmetricAlgorithm.IV
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: IV
  nameWithType: SymmetricAlgorithm.IV
  fullName: SymmetricAlgorithm.IV
- uid: System.Security.Cryptography.SymmetricAlgorithm.IVValue
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: IVValue
  nameWithType: SymmetricAlgorithm.IVValue
  fullName: SymmetricAlgorithm.IVValue
- uid: System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: KeySizeValue
  nameWithType: SymmetricAlgorithm.KeySizeValue
  fullName: SymmetricAlgorithm.KeySizeValue
- uid: System.Security.Cryptography.SymmetricAlgorithm.KeyValue
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: KeyValue
  nameWithType: SymmetricAlgorithm.KeyValue
  fullName: SymmetricAlgorithm.KeyValue
- uid: System.Security.Cryptography.Aes.LegalBlockSizes
  parent: System.Security.Cryptography.Aes
  isExternal: false
  name: LegalBlockSizes
  nameWithType: Aes.LegalBlockSizes
  fullName: Aes.LegalBlockSizes
- uid: System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizesValue
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: LegalBlockSizesValue
  nameWithType: SymmetricAlgorithm.LegalBlockSizesValue
  fullName: SymmetricAlgorithm.LegalBlockSizesValue
- uid: System.Security.Cryptography.Aes.LegalKeySizes
  parent: System.Security.Cryptography.Aes
  isExternal: false
  name: LegalKeySizes
  nameWithType: Aes.LegalKeySizes
  fullName: Aes.LegalKeySizes
- uid: System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizesValue
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: LegalKeySizesValue
  nameWithType: SymmetricAlgorithm.LegalKeySizesValue
  fullName: SymmetricAlgorithm.LegalKeySizesValue
- uid: System.Security.Cryptography.SymmetricAlgorithm.Mode
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: Mode
  nameWithType: SymmetricAlgorithm.Mode
  fullName: SymmetricAlgorithm.Mode
- uid: System.Security.Cryptography.SymmetricAlgorithm.ModeValue
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: ModeValue
  nameWithType: SymmetricAlgorithm.ModeValue
  fullName: SymmetricAlgorithm.ModeValue
- uid: System.Security.Cryptography.SymmetricAlgorithm.Padding
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: Padding
  nameWithType: SymmetricAlgorithm.Padding
  fullName: SymmetricAlgorithm.Padding
- uid: System.Security.Cryptography.SymmetricAlgorithm.PaddingValue
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: PaddingValue
  nameWithType: SymmetricAlgorithm.PaddingValue
  fullName: SymmetricAlgorithm.PaddingValue
- uid: System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize(System.Int32)
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: ValidKeySize(Int32)
  nameWithType: SymmetricAlgorithm.ValidKeySize(Int32)
  fullName: SymmetricAlgorithm.ValidKeySize(Int32)
