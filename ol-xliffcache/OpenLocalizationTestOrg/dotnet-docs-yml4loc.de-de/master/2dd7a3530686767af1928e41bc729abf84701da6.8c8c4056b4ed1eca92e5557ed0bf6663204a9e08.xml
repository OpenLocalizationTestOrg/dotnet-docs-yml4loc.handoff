{"nodes":[{"content":"An enumeration that describes the type of argument being passed.","nodes":[{"pos":[0,64],"content":"An enumeration that describes the type of argument being passed.","nodes":[{"content":"An enumeration that describes the type of argument being passed.","pos":[0,64]}]}],"pos":[698,763],"yaml":true},{"content":"The argument is an input-only parameter, meaning that it can be used only to pass a value to a method.","nodes":[{"pos":[0,102],"content":"The argument is an input-only parameter, meaning that it can be used only to pass a value to a method.","nodes":[{"content":"The argument is an input-only parameter, meaning that it can be used only to pass a value to a method.","pos":[0,102]}]}],"pos":[1881,1984],"yaml":true},{"content":"The argument is an input/output parameter, meaning that it can be used for passing a value to a method and for getting back a value from a method.","nodes":[{"pos":[0,146],"content":"The argument is an input/output parameter, meaning that it can be used for passing a value to a method and for getting back a value from a method.","nodes":[{"content":"The argument is an input/output parameter, meaning that it can be used for passing a value to a method and for getting back a value from a method.","pos":[0,146]}]}],"pos":[3056,3203],"yaml":true},{"content":"The argument is an output-only parameter, meaning that it can be used only to pass a value back from a method.","nodes":[{"pos":[0,110],"content":"The argument is an output-only parameter, meaning that it can be used only to pass a value back from a method.","nodes":[{"content":"The argument is an output-only parameter, meaning that it can be used only to pass a value back from a method.","pos":[0,110]}]}],"pos":[4266,4377],"yaml":true},{"content":"The argument is a property.","nodes":[{"pos":[0,27],"content":"The argument is a property.","nodes":[{"content":"The argument is a property.","pos":[0,27]}]}],"pos":[5420,5448],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Presentation.View.PropertyKind\n  commentId: T:System.Activities.Presentation.View.PropertyKind\n  id: PropertyKind\n  children:\n  - System.Activities.Presentation.View.PropertyKind.InArgument\n  - System.Activities.Presentation.View.PropertyKind.InOutArgument\n  - System.Activities.Presentation.View.PropertyKind.OutArgument\n  - System.Activities.Presentation.View.PropertyKind.Property\n  langs:\n  - csharp\n  name: PropertyKind\n  nameWithType: PropertyKind\n  fullName: System.Activities.Presentation.View.PropertyKind\n  type: Enum\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.View\n  summary: An enumeration that describes the type of argument being passed.\n  syntax:\n    content: public enum PropertyKind\n  inheritance:\n  - System.Object\n  - System.ValueType\n  - System.Enum\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.View/PropertyKind.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Presentation.View.PropertyKind.InArgument\n  commentId: F:System.Activities.Presentation.View.PropertyKind.InArgument\n  id: InArgument\n  parent: System.Activities.Presentation.View.PropertyKind\n  langs:\n  - csharp\n  name: InArgument\n  nameWithType: PropertyKind.InArgument\n  fullName: PropertyKind.InArgument\n  type: Field\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.View\n  summary: The argument is an input-only parameter, meaning that it can be used only to pass a value to a method.\n  syntax:\n    content: InArgument\n    return:\n      type: System.Activities.Presentation.View.PropertyKind\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.View/PropertyKind.xml\n- uid: System.Activities.Presentation.View.PropertyKind.InOutArgument\n  commentId: F:System.Activities.Presentation.View.PropertyKind.InOutArgument\n  id: InOutArgument\n  parent: System.Activities.Presentation.View.PropertyKind\n  langs:\n  - csharp\n  name: InOutArgument\n  nameWithType: PropertyKind.InOutArgument\n  fullName: PropertyKind.InOutArgument\n  type: Field\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.View\n  summary: The argument is an input/output parameter, meaning that it can be used for passing a value to a method and for getting back a value from a method.\n  syntax:\n    content: InOutArgument\n    return:\n      type: System.Activities.Presentation.View.PropertyKind\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.View/PropertyKind.xml\n- uid: System.Activities.Presentation.View.PropertyKind.OutArgument\n  commentId: F:System.Activities.Presentation.View.PropertyKind.OutArgument\n  id: OutArgument\n  parent: System.Activities.Presentation.View.PropertyKind\n  langs:\n  - csharp\n  name: OutArgument\n  nameWithType: PropertyKind.OutArgument\n  fullName: PropertyKind.OutArgument\n  type: Field\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.View\n  summary: The argument is an output-only parameter, meaning that it can be used only to pass a value back from a method.\n  syntax:\n    content: OutArgument\n    return:\n      type: System.Activities.Presentation.View.PropertyKind\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.View/PropertyKind.xml\n- uid: System.Activities.Presentation.View.PropertyKind.Property\n  commentId: F:System.Activities.Presentation.View.PropertyKind.Property\n  id: Property\n  parent: System.Activities.Presentation.View.PropertyKind\n  langs:\n  - csharp\n  name: Property\n  nameWithType: PropertyKind.Property\n  fullName: PropertyKind.Property\n  type: Field\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.View\n  summary: The argument is a property.\n  syntax:\n    content: Property\n    return:\n      type: System.Activities.Presentation.View.PropertyKind\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.View/PropertyKind.xml\nreferences:\n- uid: System.Enum\n  parent: System\n  isExternal: false\n  name: Enum\n  nameWithType: Enum\n  fullName: System.Enum\n- uid: System.Activities.Presentation.View.PropertyKind.InArgument\n  parent: System.Activities.Presentation.View.PropertyKind\n  isExternal: false\n  name: InArgument\n  nameWithType: PropertyKind.InArgument\n  fullName: PropertyKind.InArgument\n- uid: System.Activities.Presentation.View.PropertyKind\n  parent: System.Activities.Presentation.View\n  isExternal: false\n  name: PropertyKind\n  nameWithType: PropertyKind\n  fullName: System.Activities.Presentation.View.PropertyKind\n- uid: System.Activities.Presentation.View.PropertyKind.InOutArgument\n  parent: System.Activities.Presentation.View.PropertyKind\n  isExternal: false\n  name: InOutArgument\n  nameWithType: PropertyKind.InOutArgument\n  fullName: PropertyKind.InOutArgument\n- uid: System.Activities.Presentation.View.PropertyKind.OutArgument\n  parent: System.Activities.Presentation.View.PropertyKind\n  isExternal: false\n  name: OutArgument\n  nameWithType: PropertyKind.OutArgument\n  fullName: PropertyKind.OutArgument\n- uid: System.Activities.Presentation.View.PropertyKind.Property\n  parent: System.Activities.Presentation.View.PropertyKind\n  isExternal: false\n  name: Property\n  nameWithType: PropertyKind.Property\n  fullName: PropertyKind.Property\n"}