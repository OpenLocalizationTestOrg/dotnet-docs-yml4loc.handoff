{"nodes":[{"content":"Provides methods and properties for parsing structured text files.","nodes":[{"pos":[0,66],"content":"Provides methods and properties for parsing structured text files.","nodes":[{"content":"Provides methods and properties for parsing structured text files.","pos":[0,66]}]}],"pos":[2448,2515],"yaml":true},{"content":"The `TextFieldParser` object provides methods and properties for parsing structured text files. Parsing a text file with the `TextFieldParser` is similar to iterating over a text file, while the `ReadFields` method to extract fields of text is similar to splitting the strings.  \n  \n The `TextFieldParser` can parse two types of files: delimited or fixed-width. Some properties, such as `Delimiters` and `HasFieldsEnclosedInQuotes` are meaningful only when working with delimited files, while the `FieldWidths` property is meaningful only when working with fixed-width files.  \n  \n The following table lists examples of tasks involving the `Microsoft.VisualBasic.FileIO.TextFieldParser` object.  \n  \n|To|See|  \n|--------|---------|  \n|Read from a delimited text file|[How to: Read From Comma-Delimited Text Files](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)|  \n|Read from a fixed-width text file|[How to: Read From Fixed-width Text Files](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)|  \n|Read from a text file with multiple formats|[How to: Read From Text Files with Multiple Formats](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md)|","nodes":[{"pos":[0,277],"content":"The `TextFieldParser` object provides methods and properties for parsing structured text files. Parsing a text file with the `TextFieldParser` is similar to iterating over a text file, while the `ReadFields` method to extract fields of text is similar to splitting the strings.","nodes":[{"content":"The <ph id=\"ph1\">`TextFieldParser`</ph> object provides methods and properties for parsing structured text files.","pos":[0,95],"source":"The `TextFieldParser` object provides methods and properties for parsing structured text files."},{"content":"Parsing a text file with the <ph id=\"ph1\">`TextFieldParser`</ph> is similar to iterating over a text file, while the <ph id=\"ph2\">`ReadFields`</ph> method to extract fields of text is similar to splitting the strings.","pos":[96,277],"source":" Parsing a text file with the `TextFieldParser` is similar to iterating over a text file, while the `ReadFields` method to extract fields of text is similar to splitting the strings."}]},{"pos":[284,575],"content":"The `TextFieldParser` can parse two types of files: delimited or fixed-width. Some properties, such as `Delimiters` and `HasFieldsEnclosedInQuotes` are meaningful only when working with delimited files, while the `FieldWidths` property is meaningful only when working with fixed-width files.","nodes":[{"content":"The <ph id=\"ph1\">`TextFieldParser`</ph> can parse two types of files: delimited or fixed-width.","pos":[0,77],"source":"The `TextFieldParser` can parse two types of files: delimited or fixed-width."},{"content":"Some properties, such as <ph id=\"ph1\">`Delimiters`</ph> and <ph id=\"ph2\">`HasFieldsEnclosedInQuotes`</ph> are meaningful only when working with delimited files, while the <ph id=\"ph3\">`FieldWidths`</ph> property is meaningful only when working with fixed-width files.","pos":[78,291],"source":" Some properties, such as `Delimiters` and `HasFieldsEnclosedInQuotes` are meaningful only when working with delimited files, while the `FieldWidths` property is meaningful only when working with fixed-width files."}]},{"pos":[582,694],"content":"The following table lists examples of tasks involving the <ph id=\"ph1\">`Microsoft.VisualBasic.FileIO.TextFieldParser`</ph> object.","source":"The following table lists examples of tasks involving the `Microsoft.VisualBasic.FileIO.TextFieldParser` object."},{"pos":[701,703],"content":"To","nodes":[{"content":"To","pos":[0,2]}]},{"pos":[704,707],"content":"See","nodes":[{"content":"See","pos":[0,3]}]},{"pos":[735,766],"content":"Read from a delimited text file","nodes":[{"content":"Read from a delimited text file","pos":[0,31]}]},{"pos":[767,934],"content":"<bpt id=\"p1\">[</bpt>How to: Read From Comma-Delimited Text Files<ept id=\"p1\">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)</ept>","source":"[How to: Read From Comma-Delimited Text Files](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)"},{"pos":[939,972],"content":"Read from a fixed-width text file","nodes":[{"content":"Read from a fixed-width text file","pos":[0,33]}]},{"pos":[973,1132],"content":"<bpt id=\"p1\">[</bpt>How to: Read From Fixed-width Text Files<ept id=\"p1\">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)</ept>","source":"[How to: Read From Fixed-width Text Files](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)"},{"pos":[1137,1180],"content":"Read from a text file with multiple formats","nodes":[{"content":"Read from a text file with multiple formats","pos":[0,43]}]},{"pos":[1181,1360],"content":"<bpt id=\"p1\">[</bpt>How to: Read From Text Files with Multiple Formats<ept id=\"p1\">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md)</ept>","source":"[How to: Read From Text Files with Multiple Formats](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md)"}],"pos":[2526,3900],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the `TextFieldParser` class.","nodes":[{"pos":[0,58],"content":"Initializes a new instance of the <ph id=\"ph1\">`TextFieldParser`</ph> class.","source":"Initializes a new instance of the `TextFieldParser` class."}],"pos":[5580,5639],"yaml":true},{"content":"Creates a new `TextFieldParser` object to parse the file or stream that is represented by the `stream` parameter.","nodes":[{"pos":[0,113],"content":"Creates a new <ph id=\"ph1\">`TextFieldParser`</ph> object to parse the file or stream that is represented by the <ph id=\"ph2\">`stream`</ph> parameter.","source":"Creates a new `TextFieldParser` object to parse the file or stream that is represented by the `stream` parameter."}],"pos":[5650,5764],"yaml":true,"extradata":"MT"},{"content":"<xref href=\"System.IO.Stream\"></xref>. The stream to be parsed.","nodes":[{"pos":[0,63],"content":"<xref href=\"System.IO.Stream\"></xref>. The stream to be parsed.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>.","pos":[0,38],"source":"<xref href=\"System.IO.Stream\"></xref>."},{"content":"The stream to be parsed.","pos":[39,63]}]}],"pos":[5918,5982],"yaml":true},{"content":"<code>stream</code> is `Nothing`.","nodes":[{"pos":[0,33],"content":"<ph id=\"ph1\">&lt;code&gt;stream&lt;/code&gt;</ph> is <ph id=\"ph2\">`Nothing`</ph>.","source":"<code>stream</code> is `Nothing`."}],"pos":[6162,6196],"yaml":true},{"content":"<code>stream</code> cannot be read from.","nodes":[{"pos":[0,40],"content":"<ph id=\"ph1\">&lt;code&gt;stream&lt;/code&gt;</ph> cannot be read from.","source":"<code>stream</code> cannot be read from."}],"pos":[6290,6331],"yaml":true},{"content":"Initializes a new instance of the `TextFieldParser` class.","nodes":[{"pos":[0,58],"content":"Initializes a new instance of the <ph id=\"ph1\">`TextFieldParser`</ph> class.","source":"Initializes a new instance of the `TextFieldParser` class."}],"pos":[7382,7441],"yaml":true},{"content":"Creates a new `TextFieldParser` object to parse the file or stream that is represented by the `reader` parameter.","nodes":[{"pos":[0,113],"content":"Creates a new <ph id=\"ph1\">`TextFieldParser`</ph> object to parse the file or stream that is represented by the <ph id=\"ph2\">`reader`</ph> parameter.","source":"Creates a new `TextFieldParser` object to parse the file or stream that is represented by the `reader` parameter."}],"pos":[7452,7566],"yaml":true,"extradata":"MT"},{"content":"<xref href=\"System.IO.TextReader\"></xref>. The <xref href=\"System.IO.TextReader\"></xref> stream to be parsed.","nodes":[{"pos":[0,109],"content":"<xref href=\"System.IO.TextReader\"></xref>. The <xref href=\"System.IO.TextReader\"></xref> stream to be parsed.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph>.","pos":[0,42],"source":"<xref href=\"System.IO.TextReader\"></xref>."},{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph> stream to be parsed.","pos":[43,109],"source":" The <xref href=\"System.IO.TextReader\"></xref> stream to be parsed."}]}],"pos":[7728,7838],"yaml":true},{"content":"<code>reader</code> is `Nothing`.","nodes":[{"pos":[0,33],"content":"<ph id=\"ph1\">&lt;code&gt;reader&lt;/code&gt;</ph> is <ph id=\"ph2\">`Nothing`</ph>.","source":"<code>reader</code> is `Nothing`."}],"pos":[8018,8052],"yaml":true},{"content":"Initializes a new instance of the `TextFieldParser` class.","nodes":[{"pos":[0,58],"content":"Initializes a new instance of the <ph id=\"ph1\">`TextFieldParser`</ph> class.","source":"Initializes a new instance of the `TextFieldParser` class."}],"pos":[9070,9129],"yaml":true},{"content":"Creates a new `TextFieldParser` object to parse the file specified by the `path` parameter.","nodes":[{"pos":[0,91],"content":"Creates a new <ph id=\"ph1\">`TextFieldParser`</ph> object to parse the file specified by the <ph id=\"ph2\">`path`</ph> parameter.","source":"Creates a new `TextFieldParser` object to parse the file specified by the `path` parameter."}],"pos":[9140,9232],"yaml":true,"extradata":"MT"},{"content":"`String`. The complete path of the file to be parsed.","nodes":[{"pos":[0,53],"content":"`String`. The complete path of the file to be parsed.","nodes":[{"content":"<ph id=\"ph1\">`String`</ph>.","pos":[0,9],"source":"`String`."},{"content":"The complete path of the file to be parsed.","pos":[10,53]}]}],"pos":[9369,9425],"yaml":true},{"content":"<code>path</code> is an empty string.","nodes":[{"pos":[0,37],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is an empty string.","source":"<code>path</code> is an empty string."}],"pos":[9605,9643],"yaml":true},{"content":"Initializes a new instance of the `TextFieldParser` class.","nodes":[{"pos":[0,58],"content":"Initializes a new instance of the <ph id=\"ph1\">`TextFieldParser`</ph> class.","source":"Initializes a new instance of the `TextFieldParser` class."}],"pos":[10763,10822],"yaml":true},{"content":"Creates a new `TextFieldParser` object to parse the file or stream that is represented by the `stream` parameter.  \n  \n> [!CAUTION]\n>  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.","nodes":[{"pos":[0,113],"content":"Creates a new <ph id=\"ph1\">`TextFieldParser`</ph> object to parse the file or stream that is represented by the <ph id=\"ph2\">`stream`</ph> parameter.","source":"Creates a new `TextFieldParser` object to parse the file or stream that is represented by the `stream` parameter."},{"pos":[121,361],"content":"[!CAUTION]\n When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.","leadings":["","> "],"nodes":[{"content":"When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.","pos":[12,238]}]}],"pos":[10833,11200],"yaml":true,"extradata":"MT"},{"content":"<xref href=\"System.IO.Stream\"></xref>. The stream to be parsed.","nodes":[{"pos":[0,63],"content":"<xref href=\"System.IO.Stream\"></xref>. The stream to be parsed.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>.","pos":[0,38],"source":"<xref href=\"System.IO.Stream\"></xref>."},{"content":"The stream to be parsed.","pos":[39,63]}]}],"pos":[11392,11456],"yaml":true},{"content":"<xref href=\"System.Text.Encoding\"></xref>. The character encoding to use if encoding is not determined from file. Default is <xref href=\"System.Text.Encoding.UTF8\"></xref>.","nodes":[{"pos":[0,172],"content":"<xref href=\"System.Text.Encoding\"></xref>. The character encoding to use if encoding is not determined from file. Default is <xref href=\"System.Text.Encoding.UTF8\"></xref>.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref href=\"System.Text.Encoding\"&gt;&lt;/xref&gt;</ph>.","pos":[0,42],"source":"<xref href=\"System.Text.Encoding\"></xref>."},{"content":"The character encoding to use if encoding is not determined from file.","pos":[43,113]},{"content":"Default is <ph id=\"ph1\">&lt;xref href=\"System.Text.Encoding.UTF8\"&gt;&lt;/xref&gt;</ph>.","pos":[114,172],"source":" Default is <xref href=\"System.Text.Encoding.UTF8\"></xref>."}]}],"pos":[11534,11707],"yaml":true},{"content":"<code>stream</code> or <code>defaultEncoding</code> is `Nothing`.","nodes":[{"pos":[0,65],"content":"<ph id=\"ph1\">&lt;code&gt;stream&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;defaultEncoding&lt;/code&gt;</ph> is <ph id=\"ph3\">`Nothing`</ph>.","source":"<code>stream</code> or <code>defaultEncoding</code> is `Nothing`."}],"pos":[11887,11953],"yaml":true},{"content":"<code>stream</code> cannot be read from.","nodes":[{"pos":[0,40],"content":"<ph id=\"ph1\">&lt;code&gt;stream&lt;/code&gt;</ph> cannot be read from.","source":"<code>stream</code> cannot be read from."}],"pos":[12047,12088],"yaml":true},{"content":"Initializes a new instance of the `TextFieldParser` class.","nodes":[{"pos":[0,58],"content":"Initializes a new instance of the <ph id=\"ph1\">`TextFieldParser`</ph> class.","source":"Initializes a new instance of the `TextFieldParser` class."}],"pos":[13199,13258],"yaml":true},{"content":"Creates a new `TextFieldParser` object to parse the file specified by the `path` parameter.  \n  \n> [!CAUTION]\n>  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.","nodes":[{"pos":[0,91],"content":"Creates a new <ph id=\"ph1\">`TextFieldParser`</ph> object to parse the file specified by the <ph id=\"ph2\">`path`</ph> parameter.","source":"Creates a new `TextFieldParser` object to parse the file specified by the `path` parameter."},{"pos":[99,339],"content":"[!CAUTION]\n When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.","leadings":["","> "],"nodes":[{"content":"When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.","pos":[12,238]}]}],"pos":[13269,13614],"yaml":true,"extradata":"MT"},{"content":"`String`. The complete path of the file to be parsed.","nodes":[{"pos":[0,53],"content":"`String`. The complete path of the file to be parsed.","nodes":[{"content":"<ph id=\"ph1\">`String`</ph>.","pos":[0,9],"source":"`String`."},{"content":"The complete path of the file to be parsed.","pos":[10,53]}]}],"pos":[13789,13845],"yaml":true},{"content":"<xref href=\"System.Text.Encoding\"></xref>. The character encoding to use if encoding is not determined from file. Default is <xref href=\"System.Text.Encoding.UTF8\"></xref>.","nodes":[{"pos":[0,172],"content":"<xref href=\"System.Text.Encoding\"></xref>. The character encoding to use if encoding is not determined from file. Default is <xref href=\"System.Text.Encoding.UTF8\"></xref>.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref href=\"System.Text.Encoding\"&gt;&lt;/xref&gt;</ph>.","pos":[0,42],"source":"<xref href=\"System.Text.Encoding\"></xref>."},{"content":"The character encoding to use if encoding is not determined from file.","pos":[43,113]},{"content":"Default is <ph id=\"ph1\">&lt;xref href=\"System.Text.Encoding.UTF8\"&gt;&lt;/xref&gt;</ph>.","pos":[114,172],"source":" Default is <xref href=\"System.Text.Encoding.UTF8\"></xref>."}]}],"pos":[13923,14096],"yaml":true},{"content":"<code>path</code> is an empty string or <code>defaultEncoding</code> is `Nothing`.","nodes":[{"pos":[0,82],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is an empty string or <ph id=\"ph2\">&lt;code&gt;defaultEncoding&lt;/code&gt;</ph> is <ph id=\"ph3\">`Nothing`</ph>.","source":"<code>path</code> is an empty string or <code>defaultEncoding</code> is `Nothing`."}],"pos":[14276,14359],"yaml":true},{"content":"Initializes a new instance of the `TextFieldParser` class.","nodes":[{"pos":[0,58],"content":"Initializes a new instance of the <ph id=\"ph1\">`TextFieldParser`</ph> class.","source":"Initializes a new instance of the `TextFieldParser` class."}],"pos":[15551,15610],"yaml":true},{"content":"Creates a new `TextFieldParser` object to parse the file or stream that is represented by the `stream` parameter.  \n  \n If the `detectEncoding` parameter is `True`, this constructor attempts to detect the encoding by looking at the first three bytes of the file or stream. It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte-order marks. Otherwise, the encoding specified by `defaultEncoding` is used.  \n  \n> [!CAUTION]\n>  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.","nodes":[{"pos":[0,113],"content":"Creates a new <ph id=\"ph1\">`TextFieldParser`</ph> object to parse the file or stream that is represented by the <ph id=\"ph2\">`stream`</ph> parameter.","source":"Creates a new `TextFieldParser` object to parse the file or stream that is represented by the `stream` parameter."},{"pos":[120,480],"content":"If the `detectEncoding` parameter is `True`, this constructor attempts to detect the encoding by looking at the first three bytes of the file or stream. It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte-order marks. Otherwise, the encoding specified by `defaultEncoding` is used.","nodes":[{"content":"If the <ph id=\"ph1\">`detectEncoding`</ph> parameter is <ph id=\"ph2\">`True`</ph>, this constructor attempts to detect the encoding by looking at the first three bytes of the file or stream.","pos":[0,152],"source":"If the `detectEncoding` parameter is `True`, this constructor attempts to detect the encoding by looking at the first three bytes of the file or stream."},{"content":"It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte-order marks.","pos":[153,296]},{"content":"Otherwise, the encoding specified by <ph id=\"ph1\">`defaultEncoding`</ph> is used.","pos":[297,360],"source":" Otherwise, the encoding specified by `defaultEncoding` is used."}]},{"pos":[488,728],"content":"[!CAUTION]\n When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.","leadings":["","> "],"nodes":[{"content":"When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.","pos":[12,238]}]}],"pos":[15621,16357],"yaml":true,"extradata":"MT"},{"content":"<xref href=\"System.IO.Stream\"></xref>. The stream to be parsed.","nodes":[{"pos":[0,63],"content":"<xref href=\"System.IO.Stream\"></xref>. The stream to be parsed.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>.","pos":[0,38],"source":"<xref href=\"System.IO.Stream\"></xref>."},{"content":"The stream to be parsed.","pos":[39,63]}]}],"pos":[16570,16634],"yaml":true},{"content":"<xref href=\"System.Text.Encoding\"></xref>. The character encoding to use if encoding is not determined from file. Default is <xref href=\"System.Text.Encoding.UTF8\"></xref>.","nodes":[{"pos":[0,172],"content":"<xref href=\"System.Text.Encoding\"></xref>. The character encoding to use if encoding is not determined from file. Default is <xref href=\"System.Text.Encoding.UTF8\"></xref>.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref href=\"System.Text.Encoding\"&gt;&lt;/xref&gt;</ph>.","pos":[0,42],"source":"<xref href=\"System.Text.Encoding\"></xref>."},{"content":"The character encoding to use if encoding is not determined from file.","pos":[43,113]},{"content":"Default is <ph id=\"ph1\">&lt;xref href=\"System.Text.Encoding.UTF8\"&gt;&lt;/xref&gt;</ph>.","pos":[114,172],"source":" Default is <xref href=\"System.Text.Encoding.UTF8\"></xref>."}]}],"pos":[16712,16885],"yaml":true},{"content":"`Boolean`. Indicates whether to look for byte order marks at the beginning of the file. Default is `True`.","nodes":[{"pos":[0,106],"content":"`Boolean`. Indicates whether to look for byte order marks at the beginning of the file. Default is `True`.","nodes":[{"content":"<ph id=\"ph1\">`Boolean`</ph>.","pos":[0,10],"source":"`Boolean`."},{"content":"Indicates whether to look for byte order marks at the beginning of the file.","pos":[11,87]},{"content":"Default is <ph id=\"ph1\">`True`</ph>.","pos":[88,106],"source":" Default is `True`."}]}],"pos":[16956,17065],"yaml":true},{"content":"<code>stream</code> or <code>defaultEncoding</code> is `Nothing`.","nodes":[{"pos":[0,65],"content":"<ph id=\"ph1\">&lt;code&gt;stream&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;defaultEncoding&lt;/code&gt;</ph> is <ph id=\"ph3\">`Nothing`</ph>.","source":"<code>stream</code> or <code>defaultEncoding</code> is `Nothing`."}],"pos":[17245,17311],"yaml":true},{"content":"<code>stream</code> cannot be read from.","nodes":[{"pos":[0,40],"content":"<ph id=\"ph1\">&lt;code&gt;stream&lt;/code&gt;</ph> cannot be read from.","source":"<code>stream</code> cannot be read from."}],"pos":[17405,17446],"yaml":true},{"content":"Initializes a new instance of the `TextFieldParser` class.","nodes":[{"pos":[0,58],"content":"Initializes a new instance of the <ph id=\"ph1\">`TextFieldParser`</ph> class.","source":"Initializes a new instance of the `TextFieldParser` class."}],"pos":[18629,18688],"yaml":true},{"content":"Creates a new `TextFieldParser` object to parse the file specified by the `path` parameter.  \n  \n If the `detectEncoding` parameter is `True`, this constructor attempts to detect the encoding by looking at the first three bytes of the file or stream. It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte-order marks. Otherwise, the encoding specified by `defaultEncoding` is used.  \n  \n> [!CAUTION]\n>  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.","nodes":[{"pos":[0,91],"content":"Creates a new <ph id=\"ph1\">`TextFieldParser`</ph> object to parse the file specified by the <ph id=\"ph2\">`path`</ph> parameter.","source":"Creates a new `TextFieldParser` object to parse the file specified by the `path` parameter."},{"pos":[98,458],"content":"If the `detectEncoding` parameter is `True`, this constructor attempts to detect the encoding by looking at the first three bytes of the file or stream. It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte-order marks. Otherwise, the encoding specified by `defaultEncoding` is used.","nodes":[{"content":"If the <ph id=\"ph1\">`detectEncoding`</ph> parameter is <ph id=\"ph2\">`True`</ph>, this constructor attempts to detect the encoding by looking at the first three bytes of the file or stream.","pos":[0,152],"source":"If the `detectEncoding` parameter is `True`, this constructor attempts to detect the encoding by looking at the first three bytes of the file or stream."},{"content":"It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte-order marks.","pos":[153,296]},{"content":"Otherwise, the encoding specified by <ph id=\"ph1\">`defaultEncoding`</ph> is used.","pos":[297,360],"source":" Otherwise, the encoding specified by `defaultEncoding` is used."}]},{"pos":[466,706],"content":"[!CAUTION]\n When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.","leadings":["","> "],"nodes":[{"content":"When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.","pos":[12,238]}]}],"pos":[18699,19413],"yaml":true,"extradata":"MT"},{"content":"`String`. The complete path of the file to be parsed.","nodes":[{"pos":[0,53],"content":"`String`. The complete path of the file to be parsed.","nodes":[{"content":"<ph id=\"ph1\">`String`</ph>.","pos":[0,9],"source":"`String`."},{"content":"The complete path of the file to be parsed.","pos":[10,53]}]}],"pos":[19609,19665],"yaml":true},{"content":"<xref href=\"System.Text.Encoding\"></xref>. The character encoding to use if encoding is not determined from file. Default is <xref href=\"System.Text.Encoding.UTF8\"></xref>.","nodes":[{"pos":[0,172],"content":"<xref href=\"System.Text.Encoding\"></xref>. The character encoding to use if encoding is not determined from file. Default is <xref href=\"System.Text.Encoding.UTF8\"></xref>.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref href=\"System.Text.Encoding\"&gt;&lt;/xref&gt;</ph>.","pos":[0,42],"source":"<xref href=\"System.Text.Encoding\"></xref>."},{"content":"The character encoding to use if encoding is not determined from file.","pos":[43,113]},{"content":"Default is <ph id=\"ph1\">&lt;xref href=\"System.Text.Encoding.UTF8\"&gt;&lt;/xref&gt;</ph>.","pos":[114,172],"source":" Default is <xref href=\"System.Text.Encoding.UTF8\"></xref>."}]}],"pos":[19743,19916],"yaml":true},{"content":"`Boolean`. Indicates whether to look for byte order marks at the beginning of the file. Default is `True`.","nodes":[{"pos":[0,106],"content":"`Boolean`. Indicates whether to look for byte order marks at the beginning of the file. Default is `True`.","nodes":[{"content":"<ph id=\"ph1\">`Boolean`</ph>.","pos":[0,10],"source":"`Boolean`."},{"content":"Indicates whether to look for byte order marks at the beginning of the file.","pos":[11,87]},{"content":"Default is <ph id=\"ph1\">`True`</ph>.","pos":[88,106],"source":" Default is `True`."}]}],"pos":[19987,20096],"yaml":true},{"content":"<code>path</code> is an empty string or <code>defaultEncoding</code> is `Nothing`.","nodes":[{"pos":[0,82],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is an empty string or <ph id=\"ph2\">&lt;code&gt;defaultEncoding&lt;/code&gt;</ph> is <ph id=\"ph3\">`Nothing`</ph>.","source":"<code>path</code> is an empty string or <code>defaultEncoding</code> is `Nothing`."}],"pos":[20276,20359],"yaml":true},{"content":"Initializes a new instance of the `TextFieldParser` class.","nodes":[{"pos":[0,58],"content":"Initializes a new instance of the <ph id=\"ph1\">`TextFieldParser`</ph> class.","source":"Initializes a new instance of the `TextFieldParser` class."}],"pos":[21623,21682],"yaml":true},{"content":"Creates a new `TextFieldParser` object to parse the file or stream that is represented by the `stream` parameter.  \n  \n If the `detectEncoding` parameter is `True`, this constructor attempts to detect the encoding by looking at the first three bytes of the file or stream. It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte-order marks. Otherwise, the encoding specified by `defaultEncoding` is used.  \n  \n> [!CAUTION]\n>  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.","nodes":[{"pos":[0,113],"content":"Creates a new <ph id=\"ph1\">`TextFieldParser`</ph> object to parse the file or stream that is represented by the <ph id=\"ph2\">`stream`</ph> parameter.","source":"Creates a new `TextFieldParser` object to parse the file or stream that is represented by the `stream` parameter."},{"pos":[120,480],"content":"If the `detectEncoding` parameter is `True`, this constructor attempts to detect the encoding by looking at the first three bytes of the file or stream. It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte-order marks. Otherwise, the encoding specified by `defaultEncoding` is used.","nodes":[{"content":"If the <ph id=\"ph1\">`detectEncoding`</ph> parameter is <ph id=\"ph2\">`True`</ph>, this constructor attempts to detect the encoding by looking at the first three bytes of the file or stream.","pos":[0,152],"source":"If the `detectEncoding` parameter is `True`, this constructor attempts to detect the encoding by looking at the first three bytes of the file or stream."},{"content":"It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte-order marks.","pos":[153,296]},{"content":"Otherwise, the encoding specified by <ph id=\"ph1\">`defaultEncoding`</ph> is used.","pos":[297,360],"source":" Otherwise, the encoding specified by `defaultEncoding` is used."}]},{"pos":[488,728],"content":"[!CAUTION]\n When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.","leadings":["","> "],"nodes":[{"content":"When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.","pos":[12,238]}]}],"pos":[21693,22429],"yaml":true,"extradata":"MT"},{"content":"<xref href=\"System.IO.Stream\"></xref>. The stream to be parsed.","nodes":[{"pos":[0,63],"content":"<xref href=\"System.IO.Stream\"></xref>. The stream to be parsed.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>.","pos":[0,38],"source":"<xref href=\"System.IO.Stream\"></xref>."},{"content":"The stream to be parsed.","pos":[39,63]}]}],"pos":[22658,22722],"yaml":true},{"content":"<xref href=\"System.Text.Encoding\"></xref>. The character encoding to use if encoding is not determined from file. Default is <xref href=\"System.Text.Encoding.UTF8\"></xref>.","nodes":[{"pos":[0,172],"content":"<xref href=\"System.Text.Encoding\"></xref>. The character encoding to use if encoding is not determined from file. Default is <xref href=\"System.Text.Encoding.UTF8\"></xref>.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref href=\"System.Text.Encoding\"&gt;&lt;/xref&gt;</ph>.","pos":[0,42],"source":"<xref href=\"System.Text.Encoding\"></xref>."},{"content":"The character encoding to use if encoding is not determined from file.","pos":[43,113]},{"content":"Default is <ph id=\"ph1\">&lt;xref href=\"System.Text.Encoding.UTF8\"&gt;&lt;/xref&gt;</ph>.","pos":[114,172],"source":" Default is <xref href=\"System.Text.Encoding.UTF8\"></xref>."}]}],"pos":[22800,22973],"yaml":true},{"content":"`Boolean`. Indicates whether to look for byte order marks at the beginning of the file. Default is `True`.","nodes":[{"pos":[0,106],"content":"`Boolean`. Indicates whether to look for byte order marks at the beginning of the file. Default is `True`.","nodes":[{"content":"<ph id=\"ph1\">`Boolean`</ph>.","pos":[0,10],"source":"`Boolean`."},{"content":"Indicates whether to look for byte order marks at the beginning of the file.","pos":[11,87]},{"content":"Default is <ph id=\"ph1\">`True`</ph>.","pos":[88,106],"source":" Default is `True`."}]}],"pos":[23044,23153],"yaml":true},{"content":"`Boolean`. Indicates whether to leave <code>stream</code> open when the `TextFieldParser` object is closed. Default is `False`.","nodes":[{"pos":[0,127],"content":"`Boolean`. Indicates whether to leave <code>stream</code> open when the `TextFieldParser` object is closed. Default is `False`.","nodes":[{"content":"<ph id=\"ph1\">`Boolean`</ph>.","pos":[0,10],"source":"`Boolean`."},{"content":"Indicates whether to leave <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">stream</ph><ept id=\"p1\">&lt;/code&gt;</ept> open when the <ph id=\"ph2\">`TextFieldParser`</ph> object is closed.","pos":[11,107],"source":" Indicates whether to leave <code>stream</code> open when the `TextFieldParser` object is closed."},{"content":"Default is <ph id=\"ph1\">`False`</ph>.","pos":[108,127],"source":" Default is `False`."}]}],"pos":[23219,23349],"yaml":true},{"content":"<code>stream</code> or <code>defaultEncoding</code> is `Nothing`.","nodes":[{"pos":[0,65],"content":"<ph id=\"ph1\">&lt;code&gt;stream&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;defaultEncoding&lt;/code&gt;</ph> is <ph id=\"ph3\">`Nothing`</ph>.","source":"<code>stream</code> or <code>defaultEncoding</code> is `Nothing`."}],"pos":[23529,23595],"yaml":true},{"content":"<code>stream</code> cannot be read from.","nodes":[{"pos":[0,40],"content":"<ph id=\"ph1\">&lt;code&gt;stream&lt;/code&gt;</ph> cannot be read from.","source":"<code>stream</code> cannot be read from."}],"pos":[23689,23730],"yaml":true},{"content":"Closes the current `TextFieldParser` object.","nodes":[{"pos":[0,44],"content":"Closes the current <ph id=\"ph1\">`TextFieldParser`</ph> object.","source":"Closes the current `TextFieldParser` object."}],"pos":[24648,24693],"yaml":true},{"content":"Defines comment tokens. A comment token is a string that, when placed at the beginning of a line, indicates that the line is a comment and should be ignored by the parser.","nodes":[{"pos":[0,171],"content":"Defines comment tokens. A comment token is a string that, when placed at the beginning of a line, indicates that the line is a comment and should be ignored by the parser.","nodes":[{"content":"Defines comment tokens. A comment token is a string that, when placed at the beginning of a line, indicates that the line is a comment and should be ignored by the parser.","pos":[0,171],"nodes":[{"content":"Defines comment tokens.","pos":[0,23]},{"content":"A comment token is a string that, when placed at the beginning of a line, indicates that the line is a comment and should be ignored by the parser.","pos":[24,171]}]}]}],"pos":[26023,26195],"yaml":true},{"content":"This is an advanced member; it does not show in IntelliSense unless you click the **All** tab.  \n  \n Zero-length comment tokens are ignored.","nodes":[{"pos":[0,94],"content":"This is an advanced member; it does not show in IntelliSense unless you click the <bpt id=\"p1\">**</bpt>All<ept id=\"p1\">**</ept> tab.","source":"This is an advanced member; it does not show in IntelliSense unless you click the **All** tab."},{"pos":[101,140],"content":"Zero-length comment tokens are ignored.","nodes":[{"content":"Zero-length comment tokens are ignored.","pos":[0,39]}]}],"pos":[26206,26351],"yaml":true,"extradata":"MT"},{"content":"A string array that contains all of the comment tokens for the <xref href=\"Microsoft.VisualBasic.FileIO.TextFieldParser\"></xref> object.","nodes":[{"pos":[0,136],"content":"A string array that contains all of the comment tokens for the <ph id=\"ph1\">&lt;xref href=\"Microsoft.VisualBasic.FileIO.TextFieldParser\"&gt;&lt;/xref&gt;</ph> object.","source":"A string array that contains all of the comment tokens for the <xref href=\"Microsoft.VisualBasic.FileIO.TextFieldParser\"></xref> object."}],"pos":[26766,26903],"yaml":true},{"content":"A comment token includes white space.","nodes":[{"pos":[0,37],"content":"A comment token includes white space.","nodes":[{"content":"A comment token includes white space.","pos":[0,37]}]}],"pos":[27083,27121],"yaml":true},{"content":"Defines the delimiters for a text file.","nodes":[{"pos":[0,39],"content":"Defines the delimiters for a text file.","nodes":[{"content":"Defines the delimiters for a text file.","pos":[0,39]}]}],"pos":[28082,28122],"yaml":true},{"content":"This property is meaningful only if the <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType%2A> property is set to `FieldType.Delimited`.  \n  \n Defining the delimiters for a text file can also be accomplished with the <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters%2A> method.  \n  \n The following table lists an example of a task involving the `Delimiters` property.  \n  \n|To|See|  \n|--------|---------|  \n|Read from a delimited text file|[How to: Read From Comma-Delimited Text Files](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)|","nodes":[{"pos":[0,150],"content":"This property is meaningful only if the <ph id=\"ph1\">&lt;xref:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType%2A&gt;</ph> property is set to <ph id=\"ph2\">`FieldType.Delimited`</ph>.","source":"This property is meaningful only if the <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType%2A> property is set to `FieldType.Delimited`."},{"pos":[157,307],"content":"Defining the delimiters for a text file can also be accomplished with the <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters%2A> method.","nodes":[{"content":"Defining the delimiters for a text file can also be accomplished with the <ph id=\"ph1\">&lt;xref:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters%2A&gt;</ph> method.","pos":[0,150],"source":"Defining the delimiters for a text file can also be accomplished with the <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters%2A> method."}]},{"pos":[314,397],"content":"The following table lists an example of a task involving the <ph id=\"ph1\">`Delimiters`</ph> property.","source":"The following table lists an example of a task involving the `Delimiters` property."},{"pos":[404,406],"content":"To","nodes":[{"content":"To","pos":[0,2]}]},{"pos":[407,410],"content":"See","nodes":[{"content":"See","pos":[0,3]}]},{"pos":[438,469],"content":"Read from a delimited text file","nodes":[{"content":"Read from a delimited text file","pos":[0,31]}]},{"pos":[470,637],"content":"<bpt id=\"p1\">[</bpt>How to: Read From Comma-Delimited Text Files<ept id=\"p1\">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)</ept>","source":"[How to: Read From Comma-Delimited Text Files](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)"}],"pos":[28133,28782],"yaml":true,"extradata":"MT"},{"content":"A string array that contains all of the field delimiters for the <xref href=\"Microsoft.VisualBasic.FileIO.TextFieldParser\"></xref> object.","nodes":[{"pos":[0,138],"content":"A string array that contains all of the field delimiters for the <ph id=\"ph1\">&lt;xref href=\"Microsoft.VisualBasic.FileIO.TextFieldParser\"&gt;&lt;/xref&gt;</ph> object.","source":"A string array that contains all of the field delimiters for the <xref href=\"Microsoft.VisualBasic.FileIO.TextFieldParser\"></xref> object."}],"pos":[29164,29303],"yaml":true},{"content":"A delimiter value is set to a newline character, an empty string, or `Nothing`.","nodes":[{"pos":[0,79],"content":"A delimiter value is set to a newline character, an empty string, or <ph id=\"ph1\">`Nothing`</ph>.","source":"A delimiter value is set to a newline character, an empty string, or `Nothing`."}],"pos":[29480,29560],"yaml":true},{"content":"Releases resources used by the <xref href=\"Microsoft.VisualBasic.FileIO.TextFieldParser\"></xref> object.","nodes":[{"pos":[0,104],"content":"Releases resources used by the <ph id=\"ph1\">&lt;xref href=\"Microsoft.VisualBasic.FileIO.TextFieldParser\"&gt;&lt;/xref&gt;</ph> object.","source":"Releases resources used by the <xref href=\"Microsoft.VisualBasic.FileIO.TextFieldParser\"></xref> object."}],"pos":[30490,30595],"yaml":true},{"content":"Releases resources used by the <xref href=\"Microsoft.VisualBasic.FileIO.TextFieldParser\"></xref> object.","nodes":[{"pos":[0,104],"content":"Releases resources used by the <ph id=\"ph1\">&lt;xref href=\"Microsoft.VisualBasic.FileIO.TextFieldParser\"&gt;&lt;/xref&gt;</ph> object.","source":"Releases resources used by the <xref href=\"Microsoft.VisualBasic.FileIO.TextFieldParser\"></xref> object."}],"pos":[31743,31848],"yaml":true},{"content":"Boolean. `True` releases both managed and unmanaged resources; `False` releases only unmanaged resources.","nodes":[{"pos":[0,105],"content":"Boolean. `True` releases both managed and unmanaged resources; `False` releases only unmanaged resources.","nodes":[{"content":"Boolean.","pos":[0,8]},{"content":"<ph id=\"ph1\">`True`</ph> releases both managed and unmanaged resources; <ph id=\"ph2\">`False`</ph> releases only unmanaged resources.","pos":[9,105],"source":"`True` releases both managed and unmanaged resources; `False` releases only unmanaged resources."}]}],"pos":[32002,32108],"yaml":true},{"content":"Returns `True` if there are no non-blank, non-comment lines between the current cursor position and the end of the file.","nodes":[{"pos":[0,120],"content":"Returns <ph id=\"ph1\">`True`</ph> if there are no non-blank, non-comment lines between the current cursor position and the end of the file.","source":"Returns `True` if there are no non-blank, non-comment lines between the current cursor position and the end of the file."}],"pos":[33129,33250],"yaml":true},{"content":"This property can be used when reading from files to determine the end of the data being read.  \n  \n The following table lists examples of tasks involving the `EndOfData` property.  \n  \n|To|See|  \n|--------|---------|  \n|Read from a delimited file|[How to: Read From Comma-Delimited Text Files](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)|  \n|Read from a fixed-width file|[How to: Read From Fixed-width Text Files](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)|","nodes":[{"pos":[0,94],"content":"This property can be used when reading from files to determine the end of the data being read.","nodes":[{"content":"This property can be used when reading from files to determine the end of the data being read.","pos":[0,94]}]},{"pos":[101,180],"content":"The following table lists examples of tasks involving the <ph id=\"ph1\">`EndOfData`</ph> property.","source":"The following table lists examples of tasks involving the `EndOfData` property."},{"pos":[187,189],"content":"To","nodes":[{"content":"To","pos":[0,2]}]},{"pos":[190,193],"content":"See","nodes":[{"content":"See","pos":[0,3]}]},{"pos":[221,247],"content":"Read from a delimited file","nodes":[{"content":"Read from a delimited file","pos":[0,26]}]},{"pos":[248,415],"content":"<bpt id=\"p1\">[</bpt>How to: Read From Comma-Delimited Text Files<ept id=\"p1\">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)</ept>","source":"[How to: Read From Comma-Delimited Text Files](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)"},{"pos":[420,448],"content":"Read from a fixed-width file","nodes":[{"content":"Read from a fixed-width file","pos":[0,28]}]},{"pos":[449,608],"content":"<bpt id=\"p1\">[</bpt>How to: Read From Fixed-width Text Files<ept id=\"p1\">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)</ept>","source":"[How to: Read From Fixed-width Text Files](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)"}],"pos":[33261,33880],"yaml":true,"extradata":"MT"},{"content":"`True` if there is no more data to read; otherwise, `False`.","nodes":[{"pos":[0,60],"content":"<ph id=\"ph1\">`True`</ph> if there is no more data to read; otherwise, <ph id=\"ph2\">`False`</ph>.","source":"`True` if there is no more data to read; otherwise, `False`."}],"pos":[34273,34336],"yaml":true},{"content":"Returns the line that caused the most recent <xref href=\"Microsoft.VisualBasic.FileIO.MalformedLineException\"></xref> exception.","nodes":[{"pos":[0,128],"content":"Returns the line that caused the most recent <ph id=\"ph1\">&lt;xref href=\"Microsoft.VisualBasic.FileIO.MalformedLineException\"&gt;&lt;/xref&gt;</ph> exception.","source":"Returns the line that caused the most recent <xref href=\"Microsoft.VisualBasic.FileIO.MalformedLineException\"></xref> exception."}],"pos":[35359,35488],"yaml":true},{"content":"If no <xref:Microsoft.VisualBasic.FileIO.MalformedLineException> exceptions have been thrown, an empty string is returned.  \n  \n The <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber%2A> property can be used to display the number of the line that caused the exception.  \n  \n The following table lists examples of tasks involving the `ErrorLine` property.  \n  \n|To|See|  \n|--------|---------|  \n|Read from a delimited file|[How to: Read From Comma-Delimited Text Files](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)|  \n|Read from a fixed-width file|[How to: Read From Fixed-width Text Files](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)|","nodes":[{"pos":[0,122],"content":"If no <xref:Microsoft.VisualBasic.FileIO.MalformedLineException> exceptions have been thrown, an empty string is returned.","nodes":[{"content":"If no <ph id=\"ph1\">&lt;xref:Microsoft.VisualBasic.FileIO.MalformedLineException&gt;</ph> exceptions have been thrown, an empty string is returned.","pos":[0,122],"source":"If no <xref:Microsoft.VisualBasic.FileIO.MalformedLineException> exceptions have been thrown, an empty string is returned."}]},{"pos":[129,285],"content":"The <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber%2A> property can be used to display the number of the line that caused the exception.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber%2A&gt;</ph> property can be used to display the number of the line that caused the exception.","pos":[0,156],"source":"The <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber%2A> property can be used to display the number of the line that caused the exception."}]},{"pos":[292,371],"content":"The following table lists examples of tasks involving the <ph id=\"ph1\">`ErrorLine`</ph> property.","source":"The following table lists examples of tasks involving the `ErrorLine` property."},{"pos":[378,380],"content":"To","nodes":[{"content":"To","pos":[0,2]}]},{"pos":[381,384],"content":"See","nodes":[{"content":"See","pos":[0,3]}]},{"pos":[412,438],"content":"Read from a delimited file","nodes":[{"content":"Read from a delimited file","pos":[0,26]}]},{"pos":[439,606],"content":"<bpt id=\"p1\">[</bpt>How to: Read From Comma-Delimited Text Files<ept id=\"p1\">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)</ept>","source":"[How to: Read From Comma-Delimited Text Files](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)"},{"pos":[611,639],"content":"Read from a fixed-width file","nodes":[{"content":"Read from a fixed-width file","pos":[0,28]}]},{"pos":[640,799],"content":"<bpt id=\"p1\">[</bpt>How to: Read From Fixed-width Text Files<ept id=\"p1\">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)</ept>","source":"[How to: Read From Fixed-width Text Files](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)"}],"pos":[35499,36311],"yaml":true,"extradata":"MT"},{"content":"The line that caused the most recent <xref href=\"Microsoft.VisualBasic.FileIO.MalformedLineException\"></xref> exception.","nodes":[{"pos":[0,120],"content":"The line that caused the most recent <ph id=\"ph1\">&lt;xref href=\"Microsoft.VisualBasic.FileIO.MalformedLineException\"&gt;&lt;/xref&gt;</ph> exception.","source":"The line that caused the most recent <xref href=\"Microsoft.VisualBasic.FileIO.MalformedLineException\"></xref> exception."}],"pos":[36730,36851],"yaml":true},{"content":"Returns the number of the line that caused the most recent <xref href=\"Microsoft.VisualBasic.FileIO.MalformedLineException\"></xref> exception.","nodes":[{"pos":[0,142],"content":"Returns the number of the line that caused the most recent <ph id=\"ph1\">&lt;xref href=\"Microsoft.VisualBasic.FileIO.MalformedLineException\"&gt;&lt;/xref&gt;</ph> exception.","source":"Returns the number of the line that caused the most recent <xref href=\"Microsoft.VisualBasic.FileIO.MalformedLineException\"></xref> exception."}],"pos":[37910,38053],"yaml":true},{"content":"If no <xref:Microsoft.VisualBasic.FileIO.MalformedLineException> exceptions have been thrown, -1 is returned.  \n  \n The <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine%2A> property can be used to display the number of the line that caused the exception. Blank lines and comments are not ignored when determining the line number.  \n  \n The following table lists examples of tasks involving the `ErrorLineNumber` property.  \n  \n|To|See|  \n|--------|---------|  \n|Read from a delimited file|[How to: Read From Comma-Delimited Text Files](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)|  \n|Read from a fixed-width file|[How to: Read From Fixed-width Text Files](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)|","nodes":[{"pos":[0,109],"content":"If no <xref:Microsoft.VisualBasic.FileIO.MalformedLineException> exceptions have been thrown, -1 is returned.","nodes":[{"content":"If no <ph id=\"ph1\">&lt;xref:Microsoft.VisualBasic.FileIO.MalformedLineException&gt;</ph> exceptions have been thrown, -1 is returned.","pos":[0,109],"source":"If no <xref:Microsoft.VisualBasic.FileIO.MalformedLineException> exceptions have been thrown, -1 is returned."}]},{"pos":[116,341],"content":"The <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine%2A> property can be used to display the number of the line that caused the exception. Blank lines and comments are not ignored when determining the line number.","nodes":[{"content":"The <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine%2A> property can be used to display the number of the line that caused the exception. Blank lines and comments are not ignored when determining the line number.","pos":[0,225],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine%2A&gt;</ph> property can be used to display the number of the line that caused the exception.","pos":[0,150],"source":"The <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine%2A> property can be used to display the number of the line that caused the exception."},{"content":"Blank lines and comments are not ignored when determining the line number.","pos":[151,225]}]}]},{"pos":[348,433],"content":"The following table lists examples of tasks involving the <ph id=\"ph1\">`ErrorLineNumber`</ph> property.","source":"The following table lists examples of tasks involving the `ErrorLineNumber` property."},{"pos":[440,442],"content":"To","nodes":[{"content":"To","pos":[0,2]}]},{"pos":[443,446],"content":"See","nodes":[{"content":"See","pos":[0,3]}]},{"pos":[474,500],"content":"Read from a delimited file","nodes":[{"content":"Read from a delimited file","pos":[0,26]}]},{"pos":[501,668],"content":"<bpt id=\"p1\">[</bpt>How to: Read From Comma-Delimited Text Files<ept id=\"p1\">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)</ept>","source":"[How to: Read From Comma-Delimited Text Files](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)"},{"pos":[673,701],"content":"Read from a fixed-width file","nodes":[{"content":"Read from a fixed-width file","pos":[0,28]}]},{"pos":[702,861],"content":"<bpt id=\"p1\">[</bpt>How to: Read From Fixed-width Text Files<ept id=\"p1\">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)</ept>","source":"[How to: Read From Fixed-width Text Files](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)"}],"pos":[38064,38938],"yaml":true,"extradata":"MT"},{"content":"The number of the line that caused the most recent <xref href=\"Microsoft.VisualBasic.FileIO.MalformedLineException\"></xref> exception.","nodes":[{"pos":[0,134],"content":"The number of the line that caused the most recent <ph id=\"ph1\">&lt;xref href=\"Microsoft.VisualBasic.FileIO.MalformedLineException\"&gt;&lt;/xref&gt;</ph> exception.","source":"The number of the line that caused the most recent <xref href=\"Microsoft.VisualBasic.FileIO.MalformedLineException\"></xref> exception."}],"pos":[39382,39517],"yaml":true},{"content":"Denotes the width of each column in the text file being parsed.","nodes":[{"pos":[0,63],"content":"Denotes the width of each column in the text file being parsed.","nodes":[{"content":"Denotes the width of each column in the text file being parsed.","pos":[0,63]}]}],"pos":[40558,40622],"yaml":true},{"content":"This property is meaningful only if the <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType%2A> property is set to `FieldType.FixedWidth`. If the last entry in the array is less than or equal to zero, the field is assumed to be of variable width.  \n  \n The <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths%2A> method can also be used to set field widths.  \n  \n The following table lists examples of tasks involving the `FieldWidths` property.  \n  \n|To|See|  \n|--------|---------|  \n|Read from a fixed-width text file|[How to: Read From Fixed-width Text Files](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)|","nodes":[{"pos":[0,259],"content":"This property is meaningful only if the <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType%2A> property is set to `FieldType.FixedWidth`. If the last entry in the array is less than or equal to zero, the field is assumed to be of variable width.","nodes":[{"content":"This property is meaningful only if the <ph id=\"ph1\">&lt;xref:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType%2A&gt;</ph> property is set to <ph id=\"ph2\">`FieldType.FixedWidth`</ph>.","pos":[0,151],"source":"This property is meaningful only if the <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType%2A> property is set to `FieldType.FixedWidth`."},{"content":"If the last entry in the array is less than or equal to zero, the field is assumed to be of variable width.","pos":[152,259]}]},{"pos":[266,384],"content":"The <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths%2A> method can also be used to set field widths.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths%2A&gt;</ph> method can also be used to set field widths.","pos":[0,118],"source":"The <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths%2A> method can also be used to set field widths."}]},{"pos":[391,472],"content":"The following table lists examples of tasks involving the <ph id=\"ph1\">`FieldWidths`</ph> property.","source":"The following table lists examples of tasks involving the `FieldWidths` property."},{"pos":[479,481],"content":"To","nodes":[{"content":"To","pos":[0,2]}]},{"pos":[482,485],"content":"See","nodes":[{"content":"See","pos":[0,3]}]},{"pos":[513,546],"content":"Read from a fixed-width text file","nodes":[{"content":"Read from a fixed-width text file","pos":[0,33]}]},{"pos":[547,706],"content":"<bpt id=\"p1\">[</bpt>How to: Read From Fixed-width Text Files<ept id=\"p1\">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)</ept>","source":"[How to: Read From Fixed-width Text Files](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)"}],"pos":[40633,41351],"yaml":true,"extradata":"MT"},{"content":"An integer array that contains the width of each column in the text file that is being parsed.","nodes":[{"pos":[0,94],"content":"An integer array that contains the width of each column in the text file that is being parsed.","nodes":[{"content":"An integer array that contains the width of each column in the text file that is being parsed.","pos":[0,94]}]}],"pos":[41805,41900],"yaml":true},{"content":"A width value in any location other than the last entry of the array is less than or equal to zero.","nodes":[{"pos":[0,99],"content":"A width value in any location other than the last entry of the array is less than or equal to zero.","nodes":[{"content":"A width value in any location other than the last entry of the array is less than or equal to zero.","pos":[0,99]}]}],"pos":[42078,42178],"yaml":true},{"content":"Allows the <xref href=\"Microsoft.VisualBasic.FileIO.TextFieldParser\"></xref> object to attempt to free resources and perform other cleanup operations before it is reclaimed by garbage collection.","nodes":[{"pos":[0,195],"content":"Allows the <ph id=\"ph1\">&lt;xref href=\"Microsoft.VisualBasic.FileIO.TextFieldParser\"&gt;&lt;/xref&gt;</ph> object to attempt to free resources and perform other cleanup operations before it is reclaimed by garbage collection.","source":"Allows the <xref href=\"Microsoft.VisualBasic.FileIO.TextFieldParser\"></xref> object to attempt to free resources and perform other cleanup operations before it is reclaimed by garbage collection."}],"pos":[43114,43310],"yaml":true},{"content":"Denotes whether fields are enclosed in quotation marks when a delimited file is being parsed.","nodes":[{"pos":[0,93],"content":"Denotes whether fields are enclosed in quotation marks when a delimited file is being parsed.","nodes":[{"content":"Denotes whether fields are enclosed in quotation marks when a delimited file is being parsed.","pos":[0,93]}]}],"pos":[44491,44585],"yaml":true},{"content":"This is an advanced member; it does not show in IntelliSense unless you click the **All** tab.  \n  \n If the property is `True`, the parser assumes that fields are enclosed in quotation marks (\" \") and may contain line endings.  \n  \n If a field is enclosed in quotation marks, for example, `abc, \"field2a,field2b\", field3` and this property is `True`, then all text enclosed in quotation marks will be returned as is; this example would return `abc|field2a,field2b|field3`. Setting this property to `False` would make this example return `abc|\"field2a|field2b\"|field3`.","nodes":[{"pos":[0,94],"content":"This is an advanced member; it does not show in IntelliSense unless you click the <bpt id=\"p1\">**</bpt>All<ept id=\"p1\">**</ept> tab.","source":"This is an advanced member; it does not show in IntelliSense unless you click the **All** tab."},{"pos":[101,226],"content":"If the property is <ph id=\"ph1\">`True`</ph>, the parser assumes that fields are enclosed in quotation marks (\" \") and may contain line endings.","source":"If the property is `True`, the parser assumes that fields are enclosed in quotation marks (\" \") and may contain line endings."},{"pos":[233,568],"content":"If a field is enclosed in quotation marks, for example, `abc, \"field2a,field2b\", field3` and this property is `True`, then all text enclosed in quotation marks will be returned as is; this example would return `abc|field2a,field2b|field3`. Setting this property to `False` would make this example return `abc|\"field2a|field2b\"|field3`.","nodes":[{"content":"If a field is enclosed in quotation marks, for example, <ph id=\"ph1\">`abc, \"field2a,field2b\", field3`</ph> and this property is <ph id=\"ph2\">`True`</ph>, then all text enclosed in quotation marks will be returned as is; this example would return <ph id=\"ph3\">`abc|field2a,field2b|field3`</ph>.","pos":[0,239],"source":"If a field is enclosed in quotation marks, for example, `abc, \"field2a,field2b\", field3` and this property is `True`, then all text enclosed in quotation marks will be returned as is; this example would return `abc|field2a,field2b|field3`."},{"content":"Setting this property to <ph id=\"ph1\">`False`</ph> would make this example return <ph id=\"ph2\">`abc|\"field2a|field2b\"|field3`</ph>.","pos":[240,335],"source":" Setting this property to `False` would make this example return `abc|\"field2a|field2b\"|field3`."}]}],"pos":[44596,45177],"yaml":true,"extradata":"MT"},{"content":"`True` if fields are enclosed in quotation marks; otherwise, `False`.","nodes":[{"pos":[0,69],"content":"<ph id=\"ph1\">`True`</ph> if fields are enclosed in quotation marks; otherwise, <ph id=\"ph2\">`False`</ph>.","source":"`True` if fields are enclosed in quotation marks; otherwise, `False`."}],"pos":[45550,45622],"yaml":true},{"content":"Returns the current line number, or returns -1 if no more characters are available in the stream.","nodes":[{"pos":[0,97],"content":"Returns the current line number, or returns -1 if no more characters are available in the stream.","nodes":[{"content":"Returns the current line number, or returns -1 if no more characters are available in the stream.","pos":[0,97]}]}],"pos":[46684,46782],"yaml":true},{"content":"This is an advanced member; it does not show in IntelliSense unless you click the **All** tab.  \n  \n Blank lines and comments are not ignored when determining the line number.","nodes":[{"pos":[0,94],"content":"This is an advanced member; it does not show in IntelliSense unless you click the <bpt id=\"p1\">**</bpt>All<ept id=\"p1\">**</ept> tab.","source":"This is an advanced member; it does not show in IntelliSense unless you click the **All** tab."},{"pos":[101,175],"content":"Blank lines and comments are not ignored when determining the line number.","nodes":[{"content":"Blank lines and comments are not ignored when determining the line number.","pos":[0,74]}]}],"pos":[46793,46973],"yaml":true,"extradata":"MT"},{"content":"The current line number.","nodes":[{"pos":[0,24],"content":"The current line number.","nodes":[{"content":"The current line number.","pos":[0,24]}]}],"pos":[47340,47365],"yaml":true},{"content":"Reads the specified number of characters without advancing the cursor.","nodes":[{"pos":[0,70],"content":"Reads the specified number of characters without advancing the cursor.","nodes":[{"content":"Reads the specified number of characters without advancing the cursor.","pos":[0,70]}]}],"pos":[48467,48538],"yaml":true},{"content":"The `numberOfChars` value must be less than the total number of characters in the line. If it is not, the string returned by `PeekChars` will be truncated to the length of the line.  \n  \n Blank lines are ignored.  \n  \n End-of-line characters are not returned.  \n  \n The `PeekChars` method performs no parsing; an end-of- line character within a delimited field is interpreted as the actual end of the line.  \n  \n The following table lists examples of tasks involving the `PeekChars` method.  \n  \n|To|See|  \n|--------|---------|  \n|Determine the format of a field before parsing it|[How to: Read From Text Files with Multiple Formats](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md)|","nodes":[{"pos":[0,181],"content":"The `numberOfChars` value must be less than the total number of characters in the line. If it is not, the string returned by `PeekChars` will be truncated to the length of the line.","nodes":[{"content":"The <ph id=\"ph1\">`numberOfChars`</ph> value must be less than the total number of characters in the line.","pos":[0,87],"source":"The `numberOfChars` value must be less than the total number of characters in the line."},{"content":"If it is not, the string returned by <ph id=\"ph1\">`PeekChars`</ph> will be truncated to the length of the line.","pos":[88,181],"source":" If it is not, the string returned by `PeekChars` will be truncated to the length of the line."}]},{"pos":[188,212],"content":"Blank lines are ignored.","nodes":[{"content":"Blank lines are ignored.","pos":[0,24]}]},{"pos":[219,259],"content":"End-of-line characters are not returned.","nodes":[{"content":"End-of-line characters are not returned.","pos":[0,40]}]},{"pos":[266,406],"content":"The <ph id=\"ph1\">`PeekChars`</ph> method performs no parsing; an end-of- line character within a delimited field is interpreted as the actual end of the line.","source":"The `PeekChars` method performs no parsing; an end-of- line character within a delimited field is interpreted as the actual end of the line."},{"pos":[413,490],"content":"The following table lists examples of tasks involving the <ph id=\"ph1\">`PeekChars`</ph> method.","source":"The following table lists examples of tasks involving the `PeekChars` method."},{"pos":[497,499],"content":"To","nodes":[{"content":"To","pos":[0,2]}]},{"pos":[500,503],"content":"See","nodes":[{"content":"See","pos":[0,3]}]},{"pos":[531,580],"content":"Determine the format of a field before parsing it","nodes":[{"content":"Determine the format of a field before parsing it","pos":[0,49]}]},{"pos":[581,760],"content":"<bpt id=\"p1\">[</bpt>How to: Read From Text Files with Multiple Formats<ept id=\"p1\">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md)</ept>","source":"[How to: Read From Text Files with Multiple Formats](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md)"}],"pos":[48549,49325],"yaml":true,"extradata":"MT"},{"content":"`Int32`. Number of characters to read. Required.","nodes":[{"pos":[0,48],"content":"`Int32`. Number of characters to read. Required.","nodes":[{"content":"<ph id=\"ph1\">`Int32`</ph>.","pos":[0,8],"source":"`Int32`."},{"content":"Number of characters to read.","pos":[9,38]},{"content":"Required.","pos":[39,48]}]}],"pos":[49729,49780],"yaml":true},{"content":"A string that contains the specified number of characters read.","nodes":[{"pos":[0,63],"content":"A string that contains the specified number of characters read.","nodes":[{"content":"A string that contains the specified number of characters read.","pos":[0,63]}]}],"pos":[49837,49901],"yaml":true},{"content":"<code>numberOfChars</code> is less than 0.","nodes":[{"pos":[0,42],"content":"<ph id=\"ph1\">&lt;code&gt;numberOfChars&lt;/code&gt;</ph> is less than 0.","source":"<code>numberOfChars</code> is less than 0."}],"pos":[50077,50120],"yaml":true},{"content":"Reads all fields on the current line, returns them as an array of strings, and advances the cursor to the next line containing data.","nodes":[{"pos":[0,132],"content":"Reads all fields on the current line, returns them as an array of strings, and advances the cursor to the next line containing data.","nodes":[{"content":"Reads all fields on the current line, returns them as an array of strings, and advances the cursor to the next line containing data.","pos":[0,132]}]}],"pos":[51068,51201],"yaml":true},{"content":"In order to allow users to parse text files in multiple formats, the `ReadFields` method examines the values of `TextFieldType`, `Delimiters`, and `FieldWidths`, if they are specified, each time it is called. Users need to correctly configure the `TextFieldType` and `FieldWidths` or `Delimiters` properties, as appropriate. If `TextFieldType` is set to `Delimited`, and `Delimiters` is not set, or if `TextFieldType` is set to `FixedWidth` and `FieldWidths`, an exception is thrown.  \n  \n If `ReadFields` encounters blank lines, they are skipped and the next non-blank line is returned.  \n  \n If the `ReadFields` method cannot parse the current line, it raises an exception and does not move to the next line. This enables your application to attempt to parse the line again.  \n  \n The following table lists examples of tasks involving the `ReadFields` method.  \n  \n|To|See|  \n|--------|---------|  \n|Read from a delimited file|[How to: Read From Comma-Delimited Text Files](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)|  \n|Read from a fixed-width file|[How to: Read From Fixed-width Text Files](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)|","nodes":[{"pos":[0,483],"content":"In order to allow users to parse text files in multiple formats, the `ReadFields` method examines the values of `TextFieldType`, `Delimiters`, and `FieldWidths`, if they are specified, each time it is called. Users need to correctly configure the `TextFieldType` and `FieldWidths` or `Delimiters` properties, as appropriate. If `TextFieldType` is set to `Delimited`, and `Delimiters` is not set, or if `TextFieldType` is set to `FixedWidth` and `FieldWidths`, an exception is thrown.","nodes":[{"content":"In order to allow users to parse text files in multiple formats, the <ph id=\"ph1\">`ReadFields`</ph> method examines the values of <ph id=\"ph2\">`TextFieldType`</ph>, <ph id=\"ph3\">`Delimiters`</ph>, and <ph id=\"ph4\">`FieldWidths`</ph>, if they are specified, each time it is called.","pos":[0,208],"source":"In order to allow users to parse text files in multiple formats, the `ReadFields` method examines the values of `TextFieldType`, `Delimiters`, and `FieldWidths`, if they are specified, each time it is called."},{"content":"Users need to correctly configure the <ph id=\"ph1\">`TextFieldType`</ph> and <ph id=\"ph2\">`FieldWidths`</ph> or <ph id=\"ph3\">`Delimiters`</ph> properties, as appropriate.","pos":[209,324],"source":" Users need to correctly configure the `TextFieldType` and `FieldWidths` or `Delimiters` properties, as appropriate."},{"content":"If <ph id=\"ph1\">`TextFieldType`</ph> is set to <ph id=\"ph2\">`Delimited`</ph>, and <ph id=\"ph3\">`Delimiters`</ph> is not set, or if <ph id=\"ph4\">`TextFieldType`</ph> is set to <ph id=\"ph5\">`FixedWidth`</ph> and <ph id=\"ph6\">`FieldWidths`</ph>, an exception is thrown.","pos":[325,483],"source":" If `TextFieldType` is set to `Delimited`, and `Delimiters` is not set, or if `TextFieldType` is set to `FixedWidth` and `FieldWidths`, an exception is thrown."}]},{"pos":[490,587],"content":"If <ph id=\"ph1\">`ReadFields`</ph> encounters blank lines, they are skipped and the next non-blank line is returned.","source":"If `ReadFields` encounters blank lines, they are skipped and the next non-blank line is returned."},{"pos":[594,776],"content":"If the `ReadFields` method cannot parse the current line, it raises an exception and does not move to the next line. This enables your application to attempt to parse the line again.","nodes":[{"content":"If the <ph id=\"ph1\">`ReadFields`</ph> method cannot parse the current line, it raises an exception and does not move to the next line.","pos":[0,116],"source":"If the `ReadFields` method cannot parse the current line, it raises an exception and does not move to the next line."},{"content":"This enables your application to attempt to parse the line again.","pos":[117,182]}]},{"pos":[783,861],"content":"The following table lists examples of tasks involving the <ph id=\"ph1\">`ReadFields`</ph> method.","source":"The following table lists examples of tasks involving the `ReadFields` method."},{"pos":[868,870],"content":"To","nodes":[{"content":"To","pos":[0,2]}]},{"pos":[871,874],"content":"See","nodes":[{"content":"See","pos":[0,3]}]},{"pos":[902,928],"content":"Read from a delimited file","nodes":[{"content":"Read from a delimited file","pos":[0,26]}]},{"pos":[929,1096],"content":"<bpt id=\"p1\">[</bpt>How to: Read From Comma-Delimited Text Files<ept id=\"p1\">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)</ept>","source":"[How to: Read From Comma-Delimited Text Files](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)"},{"pos":[1101,1129],"content":"Read from a fixed-width file","nodes":[{"content":"Read from a fixed-width file","pos":[0,28]}]},{"pos":[1130,1289],"content":"<bpt id=\"p1\">[</bpt>How to: Read From Fixed-width Text Files<ept id=\"p1\">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)</ept>","source":"[How to: Read From Fixed-width Text Files](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)"}],"pos":[51212,52516],"yaml":true,"extradata":"MT"},{"content":"An array of strings that contains field values for the current line.","nodes":[{"pos":[0,68],"content":"An array of strings that contains field values for the current line.","nodes":[{"content":"An array of strings that contains field values for the current line.","pos":[0,68]}]}],"pos":[52948,53017],"yaml":true},{"content":"A field cannot be parsed by using the specified format.","nodes":[{"pos":[0,55],"content":"A field cannot be parsed by using the specified format.","nodes":[{"content":"A field cannot be parsed by using the specified format.","pos":[0,55]}]}],"pos":[53248,53304],"yaml":true},{"content":"Returns the current line as a string and advances the cursor to the next line.","nodes":[{"pos":[0,78],"content":"Returns the current line as a string and advances the cursor to the next line.","nodes":[{"content":"Returns the current line as a string and advances the cursor to the next line.","pos":[0,78]}]}],"pos":[54240,54319],"yaml":true},{"content":"The `ReadLine` method performs no parsing; an end-of-line character within a delimited field is interpreted as the actual end of the line.  \n  \n `Nothing` is returned if the end of the file is reached.","nodes":[{"pos":[0,138],"content":"The <ph id=\"ph1\">`ReadLine`</ph> method performs no parsing; an end-of-line character within a delimited field is interpreted as the actual end of the line.","source":"The `ReadLine` method performs no parsing; an end-of-line character within a delimited field is interpreted as the actual end of the line."},{"pos":[145,201],"content":"<ph id=\"ph1\">`Nothing`</ph> is returned if the end of the file is reached.","source":"`Nothing` is returned if the end of the file is reached."}],"pos":[54330,54536],"yaml":true,"extradata":"MT"},{"content":"The current line from the file or stream.","nodes":[{"pos":[0,41],"content":"The current line from the file or stream.","nodes":[{"content":"The current line from the file or stream.","pos":[0,41]}]}],"pos":[55180,55222],"yaml":true},{"content":"Reads the remainder of the text file and returns it as a string.","nodes":[{"pos":[0,64],"content":"Reads the remainder of the text file and returns it as a string.","nodes":[{"content":"Reads the remainder of the text file and returns it as a string.","pos":[0,64]}]}],"pos":[56265,56330],"yaml":true},{"content":"This is an advanced member; it does not show in IntelliSense unless you click the **All** tab.  \n  \n If there is nothing more to read because the end of the file has been reached, `Nothing` is returned.  \n  \n The `ReadToEnd` method does not ignore blank lines and comments.","nodes":[{"pos":[0,94],"content":"This is an advanced member; it does not show in IntelliSense unless you click the <bpt id=\"p1\">**</bpt>All<ept id=\"p1\">**</ept> tab.","source":"This is an advanced member; it does not show in IntelliSense unless you click the **All** tab."},{"pos":[101,202],"content":"If there is nothing more to read because the end of the file has been reached, <ph id=\"ph1\">`Nothing`</ph> is returned.","source":"If there is nothing more to read because the end of the file has been reached, `Nothing` is returned."},{"pos":[209,273],"content":"The <ph id=\"ph1\">`ReadToEnd`</ph> method does not ignore blank lines and comments.","source":"The `ReadToEnd` method does not ignore blank lines and comments."}],"pos":[56341,56621],"yaml":true,"extradata":"MT"},{"content":"The remaining text from the file or stream.","nodes":[{"pos":[0,43],"content":"The remaining text from the file or stream.","nodes":[{"content":"The remaining text from the file or stream.","pos":[0,43]}]}],"pos":[57112,57156],"yaml":true},{"content":"Sets the delimiters for the reader to the specified values, and sets the field type to `Delimited`.","nodes":[{"pos":[0,99],"content":"Sets the delimiters for the reader to the specified values, and sets the field type to <ph id=\"ph1\">`Delimited`</ph>.","source":"Sets the delimiters for the reader to the specified values, and sets the field type to `Delimited`."}],"pos":[58299,58399],"yaml":true},{"content":"The existing contents of the `Delimiters` property are cleared when this method is set.  \n  \n This method provides a way to set delimiters without creating an array.  \n  \n The following table lists an example of a task involving the `SetDelimiters` method.  \n  \n|To|See|  \n|--------|---------|  \n|Parse a text file|[Parsing Text Files with the TextFieldParser Object](~/docs/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md)|","nodes":[{"pos":[0,87],"content":"The existing contents of the <ph id=\"ph1\">`Delimiters`</ph> property are cleared when this method is set.","source":"The existing contents of the `Delimiters` property are cleared when this method is set."},{"pos":[94,165],"content":"This method provides a way to set delimiters without creating an array.","nodes":[{"content":"This method provides a way to set delimiters without creating an array.","pos":[0,71]}]},{"pos":[172,256],"content":"The following table lists an example of a task involving the <ph id=\"ph1\">`SetDelimiters`</ph> method.","source":"The following table lists an example of a task involving the `SetDelimiters` method."},{"pos":[263,265],"content":"To","nodes":[{"content":"To","pos":[0,2]}]},{"pos":[266,269],"content":"See","nodes":[{"content":"See","pos":[0,3]}]},{"pos":[297,314],"content":"Parse a text file","nodes":[{"content":"Parse a text file","pos":[0,17]}]},{"pos":[315,495],"content":"<bpt id=\"p1\">[</bpt>Parsing Text Files with the TextFieldParser Object<ept id=\"p1\">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md)</ept>","source":"[Parsing Text Files with the TextFieldParser Object](~/docs/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md)"}],"pos":[58410,58917],"yaml":true,"extradata":"MT"},{"content":"Array of type `String`.","nodes":[{"pos":[0,23],"content":"Array of type <ph id=\"ph1\">`String`</ph>.","source":"Array of type `String`."}],"pos":[59403,59427],"yaml":true},{"content":"A delimiter is zero-length.","nodes":[{"pos":[0,27],"content":"A delimiter is zero-length.","nodes":[{"content":"A delimiter is zero-length.","pos":[0,27]}]}],"pos":[59607,59635],"yaml":true},{"content":"Sets the delimiters for the reader to the specified values.","nodes":[{"pos":[0,59],"content":"Sets the delimiters for the reader to the specified values.","nodes":[{"content":"Sets the delimiters for the reader to the specified values.","pos":[0,59]}]}],"pos":[60676,60736],"yaml":true},{"content":"The existing contents of the `Delimiters` property are cleared when this is set.  \n  \n This method provides a way to set delimiters without creating an array.  \n  \n The following table lists example of tasks involving the `SetFieldWidths` method.  \n  \n|To|See|  \n|--------|---------|  \n|Parse a text file.|[Parsing Text Files with the TextFieldParser Object](~/docs/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md)|","nodes":[{"pos":[0,80],"content":"The existing contents of the <ph id=\"ph1\">`Delimiters`</ph> property are cleared when this is set.","source":"The existing contents of the `Delimiters` property are cleared when this is set."},{"pos":[87,158],"content":"This method provides a way to set delimiters without creating an array.","nodes":[{"content":"This method provides a way to set delimiters without creating an array.","pos":[0,71]}]},{"pos":[165,246],"content":"The following table lists example of tasks involving the <ph id=\"ph1\">`SetFieldWidths`</ph> method.","source":"The following table lists example of tasks involving the `SetFieldWidths` method."},{"pos":[253,255],"content":"To","nodes":[{"content":"To","pos":[0,2]}]},{"pos":[256,259],"content":"See","nodes":[{"content":"See","pos":[0,3]}]},{"pos":[287,305],"content":"Parse a text file.","nodes":[{"content":"Parse a text file.","pos":[0,18]}]},{"pos":[306,486],"content":"<bpt id=\"p1\">[</bpt>Parsing Text Files with the TextFieldParser Object<ept id=\"p1\">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md)</ept>","source":"[Parsing Text Files with the TextFieldParser Object](~/docs/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md)"}],"pos":[60747,61245],"yaml":true,"extradata":"MT"},{"content":"Array of `Integer`.","nodes":[{"pos":[0,19],"content":"Array of <ph id=\"ph1\">`Integer`</ph>.","source":"Array of `Integer`."}],"pos":[62081,62101],"yaml":true},{"content":"Indicates whether the file to be parsed is delimited or fixed-width.","nodes":[{"pos":[0,68],"content":"Indicates whether the file to be parsed is delimited or fixed-width.","nodes":[{"content":"Indicates whether the file to be parsed is delimited or fixed-width.","pos":[0,68]}]}],"pos":[63153,63222],"yaml":true},{"content":"The default value of this property is delimited.  \n  \n The following table lists examples of tasks involving the `TextFieldType` property.  \n  \n|To|See|  \n|--------|---------|  \n|Read from a delimited text file|[How to: Read From Comma-Delimited Text Files](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)|  \n|Read from a fixed-width text file|[How to: Read From Fixed-width Text Files](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)|  \n|Read from a text file with multiple formats|[How to: Read From Text Files with Multiple Formats](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md)|","nodes":[{"pos":[0,48],"content":"The default value of this property is delimited.","nodes":[{"content":"The default value of this property is delimited.","pos":[0,48]}]},{"pos":[55,138],"content":"The following table lists examples of tasks involving the <ph id=\"ph1\">`TextFieldType`</ph> property.","source":"The following table lists examples of tasks involving the `TextFieldType` property."},{"pos":[145,147],"content":"To","nodes":[{"content":"To","pos":[0,2]}]},{"pos":[148,151],"content":"See","nodes":[{"content":"See","pos":[0,3]}]},{"pos":[179,210],"content":"Read from a delimited text file","nodes":[{"content":"Read from a delimited text file","pos":[0,31]}]},{"pos":[211,378],"content":"<bpt id=\"p1\">[</bpt>How to: Read From Comma-Delimited Text Files<ept id=\"p1\">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)</ept>","source":"[How to: Read From Comma-Delimited Text Files](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)"},{"pos":[383,416],"content":"Read from a fixed-width text file","nodes":[{"content":"Read from a fixed-width text file","pos":[0,33]}]},{"pos":[417,576],"content":"<bpt id=\"p1\">[</bpt>How to: Read From Fixed-width Text Files<ept id=\"p1\">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)</ept>","source":"[How to: Read From Fixed-width Text Files](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)"},{"pos":[581,624],"content":"Read from a text file with multiple formats","nodes":[{"content":"Read from a text file with multiple formats","pos":[0,43]}]},{"pos":[625,804],"content":"<bpt id=\"p1\">[</bpt>How to: Read From Text Files with Multiple Formats<ept id=\"p1\">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md)</ept>","source":"[How to: Read From Text Files with Multiple Formats](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md)"}],"pos":[63233,64049],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType\"></xref> value that indicates whether the file to be parsed is delimited or fixed-width.","nodes":[{"pos":[0,161],"content":"A <ph id=\"ph1\">&lt;xref href=\"Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType\"&gt;&lt;/xref&gt;</ph> value that indicates whether the file to be parsed is delimited or fixed-width.","source":"A <xref href=\"Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType\"></xref> value that indicates whether the file to be parsed is delimited or fixed-width."}],"pos":[64715,64877],"yaml":true},{"content":"Indicates whether leading and trailing white space should be trimmed from field values.","nodes":[{"pos":[0,87],"content":"Indicates whether leading and trailing white space should be trimmed from field values.","nodes":[{"content":"Indicates whether leading and trailing white space should be trimmed from field values.","pos":[0,87]}]}],"pos":[65934,66022],"yaml":true},{"content":"The default value for this property is `True`.","nodes":[{"pos":[0,46],"content":"The default value for this property is <ph id=\"ph1\">`True`</ph>.","source":"The default value for this property is `True`."}],"pos":[66033,66080],"yaml":true,"extradata":"MT"},{"content":"`True` if leading and trailing white space should be trimmed from field values; otherwise, `False`.","nodes":[{"pos":[0,99],"content":"<ph id=\"ph1\">`True`</ph> if leading and trailing white space should be trimmed from field values; otherwise, <ph id=\"ph2\">`False`</ph>.","source":"`True` if leading and trailing white space should be trimmed from field values; otherwise, `False`."}],"pos":[66461,66563],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser\n  commentId: T:Microsoft.VisualBasic.FileIO.TextFieldParser\n  id: TextFieldParser\n  children:\n  - Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream)\n  - Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.TextReader)\n  - Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String)\n  - Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding)\n  - Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding)\n  - Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)\n  - Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding,System.Boolean)\n  - Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)\n  - Microsoft.VisualBasic.FileIO.TextFieldParser.Close\n  - Microsoft.VisualBasic.FileIO.TextFieldParser.CommentTokens\n  - Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters\n  - Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose\n  - Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose(System.Boolean)\n  - Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData\n  - Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine\n  - Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber\n  - Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths\n  - Microsoft.VisualBasic.FileIO.TextFieldParser.Finalize\n  - Microsoft.VisualBasic.FileIO.TextFieldParser.HasFieldsEnclosedInQuotes\n  - Microsoft.VisualBasic.FileIO.TextFieldParser.LineNumber\n  - Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(System.Int32)\n  - Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields\n  - Microsoft.VisualBasic.FileIO.TextFieldParser.ReadLine\n  - Microsoft.VisualBasic.FileIO.TextFieldParser.ReadToEnd\n  - Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(System.String[])\n  - Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths(System.Int32[])\n  - Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType\n  - Microsoft.VisualBasic.FileIO.TextFieldParser.TrimWhiteSpace\n  langs:\n  - csharp\n  name: TextFieldParser\n  nameWithType: TextFieldParser\n  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser\n  type: Class\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.FileIO\n  summary: Provides methods and properties for parsing structured text files.\n  remarks: \"The `TextFieldParser` object provides methods and properties for parsing structured text files. Parsing a text file with the `TextFieldParser` is similar to iterating over a text file, while the `ReadFields` method to extract fields of text is similar to splitting the strings.  \\n  \\n The `TextFieldParser` can parse two types of files: delimited or fixed-width. Some properties, such as `Delimiters` and `HasFieldsEnclosedInQuotes` are meaningful only when working with delimited files, while the `FieldWidths` property is meaningful only when working with fixed-width files.  \\n  \\n The following table lists examples of tasks involving the `Microsoft.VisualBasic.FileIO.TextFieldParser` object.  \\n  \\n|To|See|  \\n|--------|---------|  \\n|Read from a delimited text file|[How to: Read From Comma-Delimited Text Files](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)|  \\n|Read from a fixed-width text file|[How to: Read From Fixed-width Text Files](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)|  \\n|Read from a text file with multiple formats|[How to: Read From Text Files with Multiple Formats](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md)|\"\n  example:\n  - \"This example parses through a tab-delimited text file, `Bigfile`.  \\n  \\n [!code-vb[VbVbalrTextFieldParser#17](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#17)]\"\n  syntax:\n    content: 'public class TextFieldParser : IDisposable'\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/TextFieldParser.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream)\n  commentId: M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream)\n  id: '#ctor(System.IO.Stream)'\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  langs:\n  - csharp\n  name: TextFieldParser(Stream)\n  nameWithType: TextFieldParser.TextFieldParser(Stream)\n  fullName: TextFieldParser.TextFieldParser(Stream)\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.FileIO\n  summary: Initializes a new instance of the `TextFieldParser` class.\n  remarks: Creates a new `TextFieldParser` object to parse the file or stream that is represented by the `stream` parameter.\n  syntax:\n    content: public TextFieldParser (System.IO.Stream stream);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: <xref href=\"System.IO.Stream\"></xref>. The stream to be parsed.\n  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>stream</code> is `Nothing`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>stream</code> cannot be read from.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/TextFieldParser.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.TextReader)\n  commentId: M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.TextReader)\n  id: '#ctor(System.IO.TextReader)'\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  langs:\n  - csharp\n  name: TextFieldParser(TextReader)\n  nameWithType: TextFieldParser.TextFieldParser(TextReader)\n  fullName: TextFieldParser.TextFieldParser(TextReader)\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.FileIO\n  summary: Initializes a new instance of the `TextFieldParser` class.\n  remarks: Creates a new `TextFieldParser` object to parse the file or stream that is represented by the `reader` parameter.\n  syntax:\n    content: public TextFieldParser (System.IO.TextReader reader);\n    parameters:\n    - id: reader\n      type: System.IO.TextReader\n      description: <xref href=\"System.IO.TextReader\"></xref>. The <xref href=\"System.IO.TextReader\"></xref> stream to be parsed.\n  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>reader</code> is `Nothing`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/TextFieldParser.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String)\n  commentId: M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  langs:\n  - csharp\n  name: TextFieldParser(String)\n  nameWithType: TextFieldParser.TextFieldParser(String)\n  fullName: TextFieldParser.TextFieldParser(String)\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.FileIO\n  summary: Initializes a new instance of the `TextFieldParser` class.\n  remarks: Creates a new `TextFieldParser` object to parse the file specified by the `path` parameter.\n  syntax:\n    content: public TextFieldParser (string path);\n    parameters:\n    - id: path\n      type: System.String\n      description: '`String`. The complete path of the file to be parsed.'\n  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>path</code> is an empty string.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/TextFieldParser.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding)\n  commentId: M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding)\n  id: '#ctor(System.IO.Stream,System.Text.Encoding)'\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  langs:\n  - csharp\n  name: TextFieldParser(Stream, Encoding)\n  nameWithType: TextFieldParser.TextFieldParser(Stream, Encoding)\n  fullName: TextFieldParser.TextFieldParser(Stream, Encoding)\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.FileIO\n  summary: Initializes a new instance of the `TextFieldParser` class.\n  remarks: \"Creates a new `TextFieldParser` object to parse the file or stream that is represented by the `stream` parameter.  \\n  \\n> [!CAUTION]\\n>  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.\"\n  syntax:\n    content: public TextFieldParser (System.IO.Stream stream, System.Text.Encoding defaultEncoding);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: <xref href=\"System.IO.Stream\"></xref>. The stream to be parsed.\n    - id: defaultEncoding\n      type: System.Text.Encoding\n      description: <xref href=\"System.Text.Encoding\"></xref>. The character encoding to use if encoding is not determined from file. Default is <xref href=\"System.Text.Encoding.UTF8\"></xref>.\n  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>stream</code> or <code>defaultEncoding</code> is `Nothing`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>stream</code> cannot be read from.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/TextFieldParser.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding)\n  commentId: M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding)\n  id: '#ctor(System.String,System.Text.Encoding)'\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  langs:\n  - csharp\n  name: TextFieldParser(String, Encoding)\n  nameWithType: TextFieldParser.TextFieldParser(String, Encoding)\n  fullName: TextFieldParser.TextFieldParser(String, Encoding)\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.FileIO\n  summary: Initializes a new instance of the `TextFieldParser` class.\n  remarks: \"Creates a new `TextFieldParser` object to parse the file specified by the `path` parameter.  \\n  \\n> [!CAUTION]\\n>  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.\"\n  syntax:\n    content: public TextFieldParser (string path, System.Text.Encoding defaultEncoding);\n    parameters:\n    - id: path\n      type: System.String\n      description: '`String`. The complete path of the file to be parsed.'\n    - id: defaultEncoding\n      type: System.Text.Encoding\n      description: <xref href=\"System.Text.Encoding\"></xref>. The character encoding to use if encoding is not determined from file. Default is <xref href=\"System.Text.Encoding.UTF8\"></xref>.\n  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>path</code> is an empty string or <code>defaultEncoding</code> is `Nothing`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/TextFieldParser.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)\n  commentId: M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)\n  id: '#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)'\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  langs:\n  - csharp\n  name: TextFieldParser(Stream, Encoding, Boolean)\n  nameWithType: TextFieldParser.TextFieldParser(Stream, Encoding, Boolean)\n  fullName: TextFieldParser.TextFieldParser(Stream, Encoding, Boolean)\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.FileIO\n  summary: Initializes a new instance of the `TextFieldParser` class.\n  remarks: \"Creates a new `TextFieldParser` object to parse the file or stream that is represented by the `stream` parameter.  \\n  \\n If the `detectEncoding` parameter is `True`, this constructor attempts to detect the encoding by looking at the first three bytes of the file or stream. It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte-order marks. Otherwise, the encoding specified by `defaultEncoding` is used.  \\n  \\n> [!CAUTION]\\n>  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.\"\n  syntax:\n    content: public TextFieldParser (System.IO.Stream stream, System.Text.Encoding defaultEncoding, bool detectEncoding);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: <xref href=\"System.IO.Stream\"></xref>. The stream to be parsed.\n    - id: defaultEncoding\n      type: System.Text.Encoding\n      description: <xref href=\"System.Text.Encoding\"></xref>. The character encoding to use if encoding is not determined from file. Default is <xref href=\"System.Text.Encoding.UTF8\"></xref>.\n    - id: detectEncoding\n      type: System.Boolean\n      description: '`Boolean`. Indicates whether to look for byte order marks at the beginning of the file. Default is `True`.'\n  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>stream</code> or <code>defaultEncoding</code> is `Nothing`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>stream</code> cannot be read from.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/TextFieldParser.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding,System.Boolean)\n  commentId: M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding,System.Boolean)\n  id: '#ctor(System.String,System.Text.Encoding,System.Boolean)'\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  langs:\n  - csharp\n  name: TextFieldParser(String, Encoding, Boolean)\n  nameWithType: TextFieldParser.TextFieldParser(String, Encoding, Boolean)\n  fullName: TextFieldParser.TextFieldParser(String, Encoding, Boolean)\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.FileIO\n  summary: Initializes a new instance of the `TextFieldParser` class.\n  remarks: \"Creates a new `TextFieldParser` object to parse the file specified by the `path` parameter.  \\n  \\n If the `detectEncoding` parameter is `True`, this constructor attempts to detect the encoding by looking at the first three bytes of the file or stream. It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte-order marks. Otherwise, the encoding specified by `defaultEncoding` is used.  \\n  \\n> [!CAUTION]\\n>  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.\"\n  syntax:\n    content: public TextFieldParser (string path, System.Text.Encoding defaultEncoding, bool detectEncoding);\n    parameters:\n    - id: path\n      type: System.String\n      description: '`String`. The complete path of the file to be parsed.'\n    - id: defaultEncoding\n      type: System.Text.Encoding\n      description: <xref href=\"System.Text.Encoding\"></xref>. The character encoding to use if encoding is not determined from file. Default is <xref href=\"System.Text.Encoding.UTF8\"></xref>.\n    - id: detectEncoding\n      type: System.Boolean\n      description: '`Boolean`. Indicates whether to look for byte order marks at the beginning of the file. Default is `True`.'\n  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>path</code> is an empty string or <code>defaultEncoding</code> is `Nothing`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/TextFieldParser.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)\n  commentId: M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)\n  id: '#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)'\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  langs:\n  - csharp\n  name: TextFieldParser(Stream, Encoding, Boolean, Boolean)\n  nameWithType: TextFieldParser.TextFieldParser(Stream, Encoding, Boolean, Boolean)\n  fullName: TextFieldParser.TextFieldParser(Stream, Encoding, Boolean, Boolean)\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.FileIO\n  summary: Initializes a new instance of the `TextFieldParser` class.\n  remarks: \"Creates a new `TextFieldParser` object to parse the file or stream that is represented by the `stream` parameter.  \\n  \\n If the `detectEncoding` parameter is `True`, this constructor attempts to detect the encoding by looking at the first three bytes of the file or stream. It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte-order marks. Otherwise, the encoding specified by `defaultEncoding` is used.  \\n  \\n> [!CAUTION]\\n>  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.\"\n  syntax:\n    content: public TextFieldParser (System.IO.Stream stream, System.Text.Encoding defaultEncoding, bool detectEncoding, bool leaveOpen);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: <xref href=\"System.IO.Stream\"></xref>. The stream to be parsed.\n    - id: defaultEncoding\n      type: System.Text.Encoding\n      description: <xref href=\"System.Text.Encoding\"></xref>. The character encoding to use if encoding is not determined from file. Default is <xref href=\"System.Text.Encoding.UTF8\"></xref>.\n    - id: detectEncoding\n      type: System.Boolean\n      description: '`Boolean`. Indicates whether to look for byte order marks at the beginning of the file. Default is `True`.'\n    - id: leaveOpen\n      type: System.Boolean\n      description: '`Boolean`. Indicates whether to leave <code>stream</code> open when the `TextFieldParser` object is closed. Default is `False`.'\n  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>stream</code> or <code>defaultEncoding</code> is `Nothing`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>stream</code> cannot be read from.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/TextFieldParser.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.Close\n  commentId: M:Microsoft.VisualBasic.FileIO.TextFieldParser.Close\n  id: Close\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  langs:\n  - csharp\n  name: Close()\n  nameWithType: TextFieldParser.Close()\n  fullName: TextFieldParser.Close()\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.FileIO\n  summary: Closes the current `TextFieldParser` object.\n  remarks: ''\n  example:\n  - \"This example closes the `TextFieldParser.FileReader`.  \\n  \\n [!code-vb[VbVbalrTextFieldParser#14](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#14)]\"\n  syntax:\n    content: public void Close ();\n    parameters: []\n  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.Close*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/TextFieldParser.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.CommentTokens\n  commentId: P:Microsoft.VisualBasic.FileIO.TextFieldParser.CommentTokens\n  id: CommentTokens\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  langs:\n  - csharp\n  name: CommentTokens\n  nameWithType: TextFieldParser.CommentTokens\n  fullName: TextFieldParser.CommentTokens\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.FileIO\n  summary: Defines comment tokens. A comment token is a string that, when placed at the beginning of a line, indicates that the line is a comment and should be ignored by the parser.\n  remarks: \"This is an advanced member; it does not show in IntelliSense unless you click the **All** tab.  \\n  \\n Zero-length comment tokens are ignored.\"\n  example:\n  - \"This example specifies that for the `TextFieldParser`, `FileReader` lines beginning with a single quotation mark (') should be ignored.  \\n  \\n [!code-vb[VbVbalrTextFieldParser#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#5)]\"\n  syntax:\n    content: public string[] CommentTokens { get; set; }\n    return:\n      type: System.String[]\n      description: A string array that contains all of the comment tokens for the <xref href=\"Microsoft.VisualBasic.FileIO.TextFieldParser\"></xref> object.\n  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.CommentTokens*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: A comment token includes white space.\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/TextFieldParser.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters\n  commentId: P:Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters\n  id: Delimiters\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  langs:\n  - csharp\n  name: Delimiters\n  nameWithType: TextFieldParser.Delimiters\n  fullName: TextFieldParser.Delimiters\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.FileIO\n  summary: Defines the delimiters for a text file.\n  remarks: \"This property is meaningful only if the <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType%2A> property is set to `FieldType.Delimited`.  \\n  \\n Defining the delimiters for a text file can also be accomplished with the <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters%2A> method.  \\n  \\n The following table lists an example of a task involving the `Delimiters` property.  \\n  \\n|To|See|  \\n|--------|---------|  \\n|Read from a delimited text file|[How to: Read From Comma-Delimited Text Files](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)|\"\n  example:\n  - \"This example specifies that the delimiter for the `TextFieldParser` object, `FileReader`, is a comma (,).  \\n  \\n [!code-vb[VbVbalrTextFieldParser#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#9)]\"\n  syntax:\n    content: public string[] Delimiters { get; set; }\n    return:\n      type: System.String[]\n      description: A string array that contains all of the field delimiters for the <xref href=\"Microsoft.VisualBasic.FileIO.TextFieldParser\"></xref> object.\n  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: A delimiter value is set to a newline character, an empty string, or `Nothing`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/TextFieldParser.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose\n  commentId: M:Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose\n  id: Dispose\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: TextFieldParser.Dispose()\n  fullName: TextFieldParser.Dispose()\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.FileIO\n  summary: Releases resources used by the <xref href=\"Microsoft.VisualBasic.FileIO.TextFieldParser\"></xref> object.\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/TextFieldParser.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose(System.Boolean)\n  commentId: M:Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: TextFieldParser.Dispose(Boolean)\n  fullName: TextFieldParser.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.FileIO\n  summary: Releases resources used by the <xref href=\"Microsoft.VisualBasic.FileIO.TextFieldParser\"></xref> object.\n  syntax:\n    content: protected virtual void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: Boolean. `True` releases both managed and unmanaged resources; `False` releases only unmanaged resources.\n  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/TextFieldParser.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData\n  commentId: P:Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData\n  id: EndOfData\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  langs:\n  - csharp\n  name: EndOfData\n  nameWithType: TextFieldParser.EndOfData\n  fullName: TextFieldParser.EndOfData\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.FileIO\n  summary: Returns `True` if there are no non-blank, non-comment lines between the current cursor position and the end of the file.\n  remarks: \"This property can be used when reading from files to determine the end of the data being read.  \\n  \\n The following table lists examples of tasks involving the `EndOfData` property.  \\n  \\n|To|See|  \\n|--------|---------|  \\n|Read from a delimited file|[How to: Read From Comma-Delimited Text Files](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)|  \\n|Read from a fixed-width file|[How to: Read From Fixed-width Text Files](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)|\"\n  example:\n  - \"This example uses the `EndofData` property to loop through all the fields in the file with the `TextFieldReader`, `FileReader`.  \\n  \\n [!code-vb[VbVbalrTextFieldParser#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#6)]\"\n  syntax:\n    content: public bool EndOfData { get; }\n    return:\n      type: System.Boolean\n      description: '`True` if there is no more data to read; otherwise, `False`.'\n  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/TextFieldParser.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine\n  commentId: P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine\n  id: ErrorLine\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  langs:\n  - csharp\n  name: ErrorLine\n  nameWithType: TextFieldParser.ErrorLine\n  fullName: TextFieldParser.ErrorLine\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.FileIO\n  summary: Returns the line that caused the most recent <xref href=\"Microsoft.VisualBasic.FileIO.MalformedLineException\"></xref> exception.\n  remarks: \"If no <xref:Microsoft.VisualBasic.FileIO.MalformedLineException> exceptions have been thrown, an empty string is returned.  \\n  \\n The <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber%2A> property can be used to display the number of the line that caused the exception.  \\n  \\n The following table lists examples of tasks involving the `ErrorLine` property.  \\n  \\n|To|See|  \\n|--------|---------|  \\n|Read from a delimited file|[How to: Read From Comma-Delimited Text Files](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)|  \\n|Read from a fixed-width file|[How to: Read From Fixed-width Text Files](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)|\"\n  example:\n  - \"This example uses the `ErrorLine` property to display the line causing the current <xref:Microsoft.VisualBasic.FileIO.MalformedLineException> exception.  \\n  \\n [!code-vb[VbVbalrTextFieldParser#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#1)]\"\n  syntax:\n    content: public string ErrorLine { get; }\n    return:\n      type: System.String\n      description: The line that caused the most recent <xref href=\"Microsoft.VisualBasic.FileIO.MalformedLineException\"></xref> exception.\n  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/TextFieldParser.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber\n  commentId: P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber\n  id: ErrorLineNumber\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  langs:\n  - csharp\n  name: ErrorLineNumber\n  nameWithType: TextFieldParser.ErrorLineNumber\n  fullName: TextFieldParser.ErrorLineNumber\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.FileIO\n  summary: Returns the number of the line that caused the most recent <xref href=\"Microsoft.VisualBasic.FileIO.MalformedLineException\"></xref> exception.\n  remarks: \"If no <xref:Microsoft.VisualBasic.FileIO.MalformedLineException> exceptions have been thrown, -1 is returned.  \\n  \\n The <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine%2A> property can be used to display the number of the line that caused the exception. Blank lines and comments are not ignored when determining the line number.  \\n  \\n The following table lists examples of tasks involving the `ErrorLineNumber` property.  \\n  \\n|To|See|  \\n|--------|---------|  \\n|Read from a delimited file|[How to: Read From Comma-Delimited Text Files](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)|  \\n|Read from a fixed-width file|[How to: Read From Fixed-width Text Files](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)|\"\n  example:\n  - \"This example uses the `ErrorLineNumber` property to display the location of the line causing the current <xref:Microsoft.VisualBasic.FileIO.MalformedLineException> exception.  \\n  \\n [!code-vb[VbVbalrTextFieldParser#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#3)]\"\n  syntax:\n    content: public long ErrorLineNumber { get; }\n    return:\n      type: System.Int64\n      description: The number of the line that caused the most recent <xref href=\"Microsoft.VisualBasic.FileIO.MalformedLineException\"></xref> exception.\n  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/TextFieldParser.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths\n  commentId: P:Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths\n  id: FieldWidths\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  langs:\n  - csharp\n  name: FieldWidths\n  nameWithType: TextFieldParser.FieldWidths\n  fullName: TextFieldParser.FieldWidths\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.FileIO\n  summary: Denotes the width of each column in the text file being parsed.\n  remarks: \"This property is meaningful only if the <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType%2A> property is set to `FieldType.FixedWidth`. If the last entry in the array is less than or equal to zero, the field is assumed to be of variable width.  \\n  \\n The <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths%2A> method can also be used to set field widths.  \\n  \\n The following table lists examples of tasks involving the `FieldWidths` property.  \\n  \\n|To|See|  \\n|--------|---------|  \\n|Read from a fixed-width text file|[How to: Read From Fixed-width Text Files](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)|\"\n  example:\n  - \"This example reads the file `ParserText.txt`, specifying the widths; the first column is 5 characters wide, the second is 10, the third is 11, and the fourth is of variable width  \\n  \\n [!code-vb[VbVbalrTextFieldParser#16](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#16)]\"\n  syntax:\n    content: public int[] FieldWidths { get; set; }\n    return:\n      type: System.Int32[]\n      description: An integer array that contains the width of each column in the text file that is being parsed.\n  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: A width value in any location other than the last entry of the array is less than or equal to zero.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/TextFieldParser.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.Finalize\n  commentId: M:Microsoft.VisualBasic.FileIO.TextFieldParser.Finalize\n  id: Finalize\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  langs:\n  - csharp\n  name: Finalize()\n  nameWithType: TextFieldParser.Finalize()\n  fullName: TextFieldParser.Finalize()\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.FileIO\n  summary: Allows the <xref href=\"Microsoft.VisualBasic.FileIO.TextFieldParser\"></xref> object to attempt to free resources and perform other cleanup operations before it is reclaimed by garbage collection.\n  syntax:\n    content: ~TextFieldParser ();\n    parameters: []\n  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.Finalize*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/TextFieldParser.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.HasFieldsEnclosedInQuotes\n  commentId: P:Microsoft.VisualBasic.FileIO.TextFieldParser.HasFieldsEnclosedInQuotes\n  id: HasFieldsEnclosedInQuotes\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  langs:\n  - csharp\n  name: HasFieldsEnclosedInQuotes\n  nameWithType: TextFieldParser.HasFieldsEnclosedInQuotes\n  fullName: TextFieldParser.HasFieldsEnclosedInQuotes\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.FileIO\n  summary: Denotes whether fields are enclosed in quotation marks when a delimited file is being parsed.\n  remarks: \"This is an advanced member; it does not show in IntelliSense unless you click the **All** tab.  \\n  \\n If the property is `True`, the parser assumes that fields are enclosed in quotation marks (\\\" \\\") and may contain line endings.  \\n  \\n If a field is enclosed in quotation marks, for example, `abc, \\\"field2a,field2b\\\", field3` and this property is `True`, then all text enclosed in quotation marks will be returned as is; this example would return `abc|field2a,field2b|field3`. Setting this property to `False` would make this example return `abc|\\\"field2a|field2b\\\"|field3`.\"\n  example:\n  - \"This example sets the `HasFieldsEnclosedInQuotes` property to `True` for `myReader`.  \\n  \\n [!code-vb[VbVbalrTextFieldParser#18](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#18)]\"\n  syntax:\n    content: public bool HasFieldsEnclosedInQuotes { get; set; }\n    return:\n      type: System.Boolean\n      description: '`True` if fields are enclosed in quotation marks; otherwise, `False`.'\n  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.HasFieldsEnclosedInQuotes*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/TextFieldParser.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.LineNumber\n  commentId: P:Microsoft.VisualBasic.FileIO.TextFieldParser.LineNumber\n  id: LineNumber\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  langs:\n  - csharp\n  name: LineNumber\n  nameWithType: TextFieldParser.LineNumber\n  fullName: TextFieldParser.LineNumber\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.FileIO\n  summary: Returns the current line number, or returns -1 if no more characters are available in the stream.\n  remarks: \"This is an advanced member; it does not show in IntelliSense unless you click the **All** tab.  \\n  \\n Blank lines and comments are not ignored when determining the line number.\"\n  example:\n  - \"This example searches for the name \\\"Jones\\\" in the text file and reports what line(s) it occurs on.  \\n  \\n [!code-vb[VbVbalrTextFieldParser#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#11)]\"\n  syntax:\n    content: public long LineNumber { get; }\n    return:\n      type: System.Int64\n      description: The current line number.\n  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.LineNumber*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/TextFieldParser.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(System.Int32)\n  commentId: M:Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(System.Int32)\n  id: PeekChars(System.Int32)\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  langs:\n  - csharp\n  name: PeekChars(Int32)\n  nameWithType: TextFieldParser.PeekChars(Int32)\n  fullName: TextFieldParser.PeekChars(Int32)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.FileIO\n  summary: Reads the specified number of characters without advancing the cursor.\n  remarks: \"The `numberOfChars` value must be less than the total number of characters in the line. If it is not, the string returned by `PeekChars` will be truncated to the length of the line.  \\n  \\n Blank lines are ignored.  \\n  \\n End-of-line characters are not returned.  \\n  \\n The `PeekChars` method performs no parsing; an end-of- line character within a delimited field is interpreted as the actual end of the line.  \\n  \\n The following table lists examples of tasks involving the `PeekChars` method.  \\n  \\n|To|See|  \\n|--------|---------|  \\n|Determine the format of a field before parsing it|[How to: Read From Text Files with Multiple Formats](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md)|\"\n  example:\n  - \"This example uses `PeekChars` to find the end of the data and stop parsing the file at that point.  \\n  \\n [!code-vb[VbVbalrTextFieldParser#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#8)]\"\n  syntax:\n    content: public string PeekChars (int numberOfChars);\n    parameters:\n    - id: numberOfChars\n      type: System.Int32\n      description: '`Int32`. Number of characters to read. Required.'\n    return:\n      type: System.String\n      description: A string that contains the specified number of characters read.\n  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>numberOfChars</code> is less than 0.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/TextFieldParser.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields\n  commentId: M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields\n  id: ReadFields\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  langs:\n  - csharp\n  name: ReadFields()\n  nameWithType: TextFieldParser.ReadFields()\n  fullName: TextFieldParser.ReadFields()\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.FileIO\n  summary: Reads all fields on the current line, returns them as an array of strings, and advances the cursor to the next line containing data.\n  remarks: \"In order to allow users to parse text files in multiple formats, the `ReadFields` method examines the values of `TextFieldType`, `Delimiters`, and `FieldWidths`, if they are specified, each time it is called. Users need to correctly configure the `TextFieldType` and `FieldWidths` or `Delimiters` properties, as appropriate. If `TextFieldType` is set to `Delimited`, and `Delimiters` is not set, or if `TextFieldType` is set to `FixedWidth` and `FieldWidths`, an exception is thrown.  \\n  \\n If `ReadFields` encounters blank lines, they are skipped and the next non-blank line is returned.  \\n  \\n If the `ReadFields` method cannot parse the current line, it raises an exception and does not move to the next line. This enables your application to attempt to parse the line again.  \\n  \\n The following table lists examples of tasks involving the `ReadFields` method.  \\n  \\n|To|See|  \\n|--------|---------|  \\n|Read from a delimited file|[How to: Read From Comma-Delimited Text Files](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)|  \\n|Read from a fixed-width file|[How to: Read From Fixed-width Text Files](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)|\"\n  example:\n  - \"This example uses the `ReadFields` method to read from the comma-delimited file `ParserText.txt`. The example writes the fields to `Testfile.txt`.  \\n  \\n [!code-vb[VbVbalrTextFieldParser#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#2)]\"\n  syntax:\n    content: public string[] ReadFields ();\n    parameters: []\n    return:\n      type: System.String[]\n      description: An array of strings that contains field values for the current line.\n  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields*\n  exceptions:\n  - type: Microsoft.VisualBasic.FileIO.MalformedLineException\n    commentId: T:Microsoft.VisualBasic.FileIO.MalformedLineException\n    description: A field cannot be parsed by using the specified format.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/TextFieldParser.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.ReadLine\n  commentId: M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadLine\n  id: ReadLine\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  langs:\n  - csharp\n  name: ReadLine()\n  nameWithType: TextFieldParser.ReadLine()\n  fullName: TextFieldParser.ReadLine()\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.FileIO\n  summary: Returns the current line as a string and advances the cursor to the next line.\n  remarks: \"The `ReadLine` method performs no parsing; an end-of-line character within a delimited field is interpreted as the actual end of the line.  \\n  \\n `Nothing` is returned if the end of the file is reached.\"\n  example:\n  - \"This example reads through the file `ParserText.txt` and writes it to `Testfile.txt`.  \\n  \\n [!code-vb[VbVbalrTextFieldParser#15](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#15)]  \\n  \\n If `Testfile.txt` does not exist, it is created by the `WriteAllText` method.  \\n  \\n This example writes the fields as a single string; to have each line display on its own line in the destination file, a `VbCrLf` character should be appended at the end of each line.\"\n  syntax:\n    content: public string ReadLine ();\n    parameters: []\n    return:\n      type: System.String\n      description: The current line from the file or stream.\n  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.ReadLine*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/TextFieldParser.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.ReadToEnd\n  commentId: M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadToEnd\n  id: ReadToEnd\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  langs:\n  - csharp\n  name: ReadToEnd()\n  nameWithType: TextFieldParser.ReadToEnd()\n  fullName: TextFieldParser.ReadToEnd()\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.FileIO\n  summary: Reads the remainder of the text file and returns it as a string.\n  remarks: \"This is an advanced member; it does not show in IntelliSense unless you click the **All** tab.  \\n  \\n If there is nothing more to read because the end of the file has been reached, `Nothing` is returned.  \\n  \\n The `ReadToEnd` method does not ignore blank lines and comments.\"\n  example:\n  - \"This example uses the `ReadToEnd` method to read the entire file `ParserText.txt` and write it to the file `Testfile.txt`.  \\n  \\n [!code-vb[VbVbalrTextFieldParser#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#10)]  \\n  \\n If `Testfile.txt` does not exist, it is created by the `WriteAllText` method.\"\n  syntax:\n    content: public string ReadToEnd ();\n    parameters: []\n    return:\n      type: System.String\n      description: The remaining text from the file or stream.\n  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.ReadToEnd*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/TextFieldParser.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(System.String[])\n  commentId: M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(System.String[])\n  id: SetDelimiters(System.String[])\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  langs:\n  - csharp\n  name: SetDelimiters(String[])\n  nameWithType: TextFieldParser.SetDelimiters(String[])\n  fullName: TextFieldParser.SetDelimiters(String[])\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.FileIO\n  summary: Sets the delimiters for the reader to the specified values, and sets the field type to `Delimited`.\n  remarks: \"The existing contents of the `Delimiters` property are cleared when this method is set.  \\n  \\n This method provides a way to set delimiters without creating an array.  \\n  \\n The following table lists an example of a task involving the `SetDelimiters` method.  \\n  \\n|To|See|  \\n|--------|---------|  \\n|Parse a text file|[Parsing Text Files with the TextFieldParser Object](~/docs/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md)|\"\n  example:\n  - \"This example opens a text field parser and defines the delimiter as `vbTab`.  \\n  \\n [!code-vb[VbVbalrTextFieldParser#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#4)]  \\n  \\n Replace the path `C:\\\\logs\\\\test.log` with the path and name of the file you wish to parse.\"\n  syntax:\n    content: public void SetDelimiters (string[] delimiters);\n    parameters:\n    - id: delimiters\n      type: System.String[]\n      description: Array of type `String`.\n  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: A delimiter is zero-length.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/TextFieldParser.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths(System.Int32[])\n  commentId: M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths(System.Int32[])\n  id: SetFieldWidths(System.Int32[])\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  langs:\n  - csharp\n  name: SetFieldWidths(Int32[])\n  nameWithType: TextFieldParser.SetFieldWidths(Int32[])\n  fullName: TextFieldParser.SetFieldWidths(Int32[])\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.FileIO\n  summary: Sets the delimiters for the reader to the specified values.\n  remarks: \"The existing contents of the `Delimiters` property are cleared when this is set.  \\n  \\n This method provides a way to set delimiters without creating an array.  \\n  \\n The following table lists example of tasks involving the `SetFieldWidths` method.  \\n  \\n|To|See|  \\n|--------|---------|  \\n|Parse a text file.|[Parsing Text Files with the TextFieldParser Object](~/docs/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md)|\"\n  example:\n  - \"This example opens a text-field parser and defines the field width as `5`.  \\n  \\n [!code-vb[VbVbalrTextFieldParser#12](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#12)]  \\n  \\n Replace the path `C:\\\\logs\\\\test.log` with the path and name of the file you wish to parse.  \\n  \\n The following example opens a text-field parser and defines the field widths as `5`, `10`, and variable.  \\n  \\n [!code-vb[VbVbalrTextFieldParser#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#13)]  \\n  \\n Replace the path `C:\\\\logs\\\\test.log` with the path and name of the file you wish to parse.\"\n  syntax:\n    content: public void SetFieldWidths (int[] fieldWidths);\n    parameters:\n    - id: fieldWidths\n      type: System.Int32[]\n      description: Array of `Integer`.\n  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/TextFieldParser.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType\n  commentId: P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType\n  id: TextFieldType\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  langs:\n  - csharp\n  name: TextFieldType\n  nameWithType: TextFieldParser.TextFieldType\n  fullName: TextFieldParser.TextFieldType\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.FileIO\n  summary: Indicates whether the file to be parsed is delimited or fixed-width.\n  remarks: \"The default value of this property is delimited.  \\n  \\n The following table lists examples of tasks involving the `TextFieldType` property.  \\n  \\n|To|See|  \\n|--------|---------|  \\n|Read from a delimited text file|[How to: Read From Comma-Delimited Text Files](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)|  \\n|Read from a fixed-width text file|[How to: Read From Fixed-width Text Files](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)|  \\n|Read from a text file with multiple formats|[How to: Read From Text Files with Multiple Formats](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md)|\"\n  example:\n  - \"This example creates a `TextFieldParser`, `FileReader`, and specifies that it is delimited.  \\n  \\n [!code-vb[VbVbalrTextFieldParser#19](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#19)]  \\n  \\n This example creates a `TextFieldParser`, `FileReader`, and specifies that it is fixed-width.  \\n  \\n [!code-vb[VbVbalrTextFieldParser#20](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#20)]\"\n  syntax:\n    content: public Microsoft.VisualBasic.FileIO.FieldType TextFieldType { get; set; }\n    return:\n      type: Microsoft.VisualBasic.FileIO.FieldType\n      description: A <xref href=\"Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType\"></xref> value that indicates whether the file to be parsed is delimited or fixed-width.\n  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/TextFieldParser.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.TrimWhiteSpace\n  commentId: P:Microsoft.VisualBasic.FileIO.TextFieldParser.TrimWhiteSpace\n  id: TrimWhiteSpace\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  langs:\n  - csharp\n  name: TrimWhiteSpace\n  nameWithType: TextFieldParser.TrimWhiteSpace\n  fullName: TextFieldParser.TrimWhiteSpace\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.FileIO\n  summary: Indicates whether leading and trailing white space should be trimmed from field values.\n  remarks: The default value for this property is `True`.\n  example:\n  - \"This example creates a `TextFieldParser`, `FileReader`, and sets the `TrimWhiteSpace` property to `True`.  \\n  \\n [!code-vb[VbVbalrTextFieldParser#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#7)]\"\n  syntax:\n    content: public bool TrimWhiteSpace { get; set; }\n    return:\n      type: System.Boolean\n      description: '`True` if leading and trailing white space should be trimmed from field values; otherwise, `False`.'\n  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.TrimWhiteSpace*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/TextFieldParser.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: Microsoft.VisualBasic.FileIO.MalformedLineException\n  parent: Microsoft.VisualBasic.FileIO\n  isExternal: false\n  name: MalformedLineException\n  nameWithType: MalformedLineException\n  fullName: Microsoft.VisualBasic.FileIO.MalformedLineException\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream)\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  isExternal: false\n  name: TextFieldParser(Stream)\n  nameWithType: TextFieldParser.TextFieldParser(Stream)\n  fullName: TextFieldParser.TextFieldParser(Stream)\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.TextReader)\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  isExternal: false\n  name: TextFieldParser(TextReader)\n  nameWithType: TextFieldParser.TextFieldParser(TextReader)\n  fullName: TextFieldParser.TextFieldParser(TextReader)\n- uid: System.IO.TextReader\n  parent: System.IO\n  isExternal: false\n  name: TextReader\n  nameWithType: TextReader\n  fullName: System.IO.TextReader\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String)\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  isExternal: false\n  name: TextFieldParser(String)\n  nameWithType: TextFieldParser.TextFieldParser(String)\n  fullName: TextFieldParser.TextFieldParser(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding)\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  isExternal: false\n  name: TextFieldParser(Stream, Encoding)\n  nameWithType: TextFieldParser.TextFieldParser(Stream, Encoding)\n  fullName: TextFieldParser.TextFieldParser(Stream, Encoding)\n- uid: System.Text.Encoding\n  parent: System.Text\n  isExternal: false\n  name: Encoding\n  nameWithType: Encoding\n  fullName: System.Text.Encoding\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding)\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  isExternal: false\n  name: TextFieldParser(String, Encoding)\n  nameWithType: TextFieldParser.TextFieldParser(String, Encoding)\n  fullName: TextFieldParser.TextFieldParser(String, Encoding)\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  isExternal: false\n  name: TextFieldParser(Stream, Encoding, Boolean)\n  nameWithType: TextFieldParser.TextFieldParser(Stream, Encoding, Boolean)\n  fullName: TextFieldParser.TextFieldParser(Stream, Encoding, Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding,System.Boolean)\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  isExternal: false\n  name: TextFieldParser(String, Encoding, Boolean)\n  nameWithType: TextFieldParser.TextFieldParser(String, Encoding, Boolean)\n  fullName: TextFieldParser.TextFieldParser(String, Encoding, Boolean)\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  isExternal: false\n  name: TextFieldParser(Stream, Encoding, Boolean, Boolean)\n  nameWithType: TextFieldParser.TextFieldParser(Stream, Encoding, Boolean, Boolean)\n  fullName: TextFieldParser.TextFieldParser(Stream, Encoding, Boolean, Boolean)\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.Close\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  isExternal: false\n  name: Close()\n  nameWithType: TextFieldParser.Close()\n  fullName: TextFieldParser.Close()\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.CommentTokens\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  isExternal: false\n  name: CommentTokens\n  nameWithType: TextFieldParser.CommentTokens\n  fullName: TextFieldParser.CommentTokens\n- uid: System.String[]\n  parent: System\n  isExternal: false\n  name: String[]\n  nameWithType: String[]\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  isExternal: false\n  name: Delimiters\n  nameWithType: TextFieldParser.Delimiters\n  fullName: TextFieldParser.Delimiters\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  isExternal: false\n  name: Dispose()\n  nameWithType: TextFieldParser.Dispose()\n  fullName: TextFieldParser.Dispose()\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose(System.Boolean)\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: TextFieldParser.Dispose(Boolean)\n  fullName: TextFieldParser.Dispose(Boolean)\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  isExternal: false\n  name: EndOfData\n  nameWithType: TextFieldParser.EndOfData\n  fullName: TextFieldParser.EndOfData\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  isExternal: false\n  name: ErrorLine\n  nameWithType: TextFieldParser.ErrorLine\n  fullName: TextFieldParser.ErrorLine\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  isExternal: false\n  name: ErrorLineNumber\n  nameWithType: TextFieldParser.ErrorLineNumber\n  fullName: TextFieldParser.ErrorLineNumber\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  isExternal: false\n  name: FieldWidths\n  nameWithType: TextFieldParser.FieldWidths\n  fullName: TextFieldParser.FieldWidths\n- uid: System.Int32\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32[]\n  parent: System\n  isExternal: false\n  name: Int32[]\n  nameWithType: Int32[]\n  fullName: System.Int32[]\n  spec.csharp:\n  - uid: System.Int32\n    name: Int32\n    nameWithType: Int32\n    fullName: System.Int32\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.Finalize\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  isExternal: false\n  name: Finalize()\n  nameWithType: TextFieldParser.Finalize()\n  fullName: TextFieldParser.Finalize()\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.HasFieldsEnclosedInQuotes\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  isExternal: false\n  name: HasFieldsEnclosedInQuotes\n  nameWithType: TextFieldParser.HasFieldsEnclosedInQuotes\n  fullName: TextFieldParser.HasFieldsEnclosedInQuotes\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.LineNumber\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  isExternal: false\n  name: LineNumber\n  nameWithType: TextFieldParser.LineNumber\n  fullName: TextFieldParser.LineNumber\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(System.Int32)\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  isExternal: false\n  name: PeekChars(Int32)\n  nameWithType: TextFieldParser.PeekChars(Int32)\n  fullName: TextFieldParser.PeekChars(Int32)\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  isExternal: false\n  name: ReadFields()\n  nameWithType: TextFieldParser.ReadFields()\n  fullName: TextFieldParser.ReadFields()\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.ReadLine\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  isExternal: false\n  name: ReadLine()\n  nameWithType: TextFieldParser.ReadLine()\n  fullName: TextFieldParser.ReadLine()\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.ReadToEnd\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  isExternal: false\n  name: ReadToEnd()\n  nameWithType: TextFieldParser.ReadToEnd()\n  fullName: TextFieldParser.ReadToEnd()\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(System.String[])\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  isExternal: false\n  name: SetDelimiters(String[])\n  nameWithType: TextFieldParser.SetDelimiters(String[])\n  fullName: TextFieldParser.SetDelimiters(String[])\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths(System.Int32[])\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  isExternal: false\n  name: SetFieldWidths(Int32[])\n  nameWithType: TextFieldParser.SetFieldWidths(Int32[])\n  fullName: TextFieldParser.SetFieldWidths(Int32[])\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  isExternal: false\n  name: TextFieldType\n  nameWithType: TextFieldParser.TextFieldType\n  fullName: TextFieldParser.TextFieldType\n- uid: Microsoft.VisualBasic.FileIO.FieldType\n  parent: Microsoft.VisualBasic.FileIO\n  isExternal: false\n  name: FieldType\n  nameWithType: FieldType\n  fullName: Microsoft.VisualBasic.FileIO.FieldType\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.TrimWhiteSpace\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  isExternal: false\n  name: TrimWhiteSpace\n  nameWithType: TextFieldParser.TrimWhiteSpace\n  fullName: TextFieldParser.TrimWhiteSpace\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor*\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  isExternal: false\n  name: TextFieldParser\n  nameWithType: TextFieldParser.TextFieldParser\n  fullName: TextFieldParser.TextFieldParser\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/TextFieldParser.xml\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.Close*\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  isExternal: false\n  name: Close\n  nameWithType: TextFieldParser.Close\n  fullName: TextFieldParser.Close\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/TextFieldParser.xml\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.CommentTokens*\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  isExternal: false\n  name: CommentTokens\n  nameWithType: TextFieldParser.CommentTokens\n  fullName: TextFieldParser.CommentTokens\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/TextFieldParser.xml\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters*\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  isExternal: false\n  name: Delimiters\n  nameWithType: TextFieldParser.Delimiters\n  fullName: TextFieldParser.Delimiters\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/TextFieldParser.xml\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose*\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  isExternal: false\n  name: Dispose\n  nameWithType: TextFieldParser.Dispose\n  fullName: TextFieldParser.Dispose\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/TextFieldParser.xml\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData*\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  isExternal: false\n  name: EndOfData\n  nameWithType: TextFieldParser.EndOfData\n  fullName: TextFieldParser.EndOfData\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/TextFieldParser.xml\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine*\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  isExternal: false\n  name: ErrorLine\n  nameWithType: TextFieldParser.ErrorLine\n  fullName: TextFieldParser.ErrorLine\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/TextFieldParser.xml\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber*\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  isExternal: false\n  name: ErrorLineNumber\n  nameWithType: TextFieldParser.ErrorLineNumber\n  fullName: TextFieldParser.ErrorLineNumber\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/TextFieldParser.xml\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths*\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  isExternal: false\n  name: FieldWidths\n  nameWithType: TextFieldParser.FieldWidths\n  fullName: TextFieldParser.FieldWidths\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/TextFieldParser.xml\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.Finalize*\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  isExternal: false\n  name: Finalize\n  nameWithType: TextFieldParser.Finalize\n  fullName: TextFieldParser.Finalize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/TextFieldParser.xml\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.HasFieldsEnclosedInQuotes*\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  isExternal: false\n  name: HasFieldsEnclosedInQuotes\n  nameWithType: TextFieldParser.HasFieldsEnclosedInQuotes\n  fullName: TextFieldParser.HasFieldsEnclosedInQuotes\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/TextFieldParser.xml\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.LineNumber*\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  isExternal: false\n  name: LineNumber\n  nameWithType: TextFieldParser.LineNumber\n  fullName: TextFieldParser.LineNumber\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/TextFieldParser.xml\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars*\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  isExternal: false\n  name: PeekChars\n  nameWithType: TextFieldParser.PeekChars\n  fullName: TextFieldParser.PeekChars\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/TextFieldParser.xml\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields*\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  isExternal: false\n  name: ReadFields\n  nameWithType: TextFieldParser.ReadFields\n  fullName: TextFieldParser.ReadFields\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/TextFieldParser.xml\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.ReadLine*\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  isExternal: false\n  name: ReadLine\n  nameWithType: TextFieldParser.ReadLine\n  fullName: TextFieldParser.ReadLine\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/TextFieldParser.xml\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.ReadToEnd*\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  isExternal: false\n  name: ReadToEnd\n  nameWithType: TextFieldParser.ReadToEnd\n  fullName: TextFieldParser.ReadToEnd\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/TextFieldParser.xml\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters*\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  isExternal: false\n  name: SetDelimiters\n  nameWithType: TextFieldParser.SetDelimiters\n  fullName: TextFieldParser.SetDelimiters\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/TextFieldParser.xml\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths*\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  isExternal: false\n  name: SetFieldWidths\n  nameWithType: TextFieldParser.SetFieldWidths\n  fullName: TextFieldParser.SetFieldWidths\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/TextFieldParser.xml\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType*\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  isExternal: false\n  name: TextFieldType\n  nameWithType: TextFieldParser.TextFieldType\n  fullName: TextFieldParser.TextFieldType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/TextFieldParser.xml\n- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.TrimWhiteSpace*\n  parent: Microsoft.VisualBasic.FileIO.TextFieldParser\n  isExternal: false\n  name: TrimWhiteSpace\n  nameWithType: TextFieldParser.TrimWhiteSpace\n  fullName: TextFieldParser.TrimWhiteSpace\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.FileIO/TextFieldParser.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  nameWithType: IDisposable\n  fullName: System.IDisposable\n"}