{"nodes":[{"content":"Allows security actions for <xref href=\"System.Security.Permissions.KeyContainerPermission\"></xref> to be applied to code using declarative security. This class cannot be inherited.","nodes":[{"pos":[0,181],"content":"Allows security actions for <xref href=\"System.Security.Permissions.KeyContainerPermission\"></xref> to be applied to code using declarative security. This class cannot be inherited.","nodes":[{"content":"Allows security actions for <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.KeyContainerPermission\"&gt;&lt;/xref&gt;</ph> to be applied to code using declarative security.","pos":[0,149],"source":"Allows security actions for <xref href=\"System.Security.Permissions.KeyContainerPermission\"></xref> to be applied to code using declarative security."},{"content":"This class cannot be inherited.","pos":[150,181]}]}],"pos":[1178,1360],"yaml":true},{"content":"The scope of the declaration that is allowed depends on the <xref:System.Security.Permissions.SecurityAction> value that is used.  \n  \n The security information declared by a security attribute is stored in the metadata of the attribute target and is accessed by the system at run time. <xref:System.Security.Permissions.KeyContainerPermissionAttribute> is used only for declarative security. For imperative security, use the <xref:System.Security.Permissions.KeyContainerPermission> class.","nodes":[{"pos":[0,129],"content":"The scope of the declaration that is allowed depends on the <xref:System.Security.Permissions.SecurityAction> value that is used.","nodes":[{"content":"The scope of the declaration that is allowed depends on the <ph id=\"ph1\">&lt;xref:System.Security.Permissions.SecurityAction&gt;</ph> value that is used.","pos":[0,129],"source":"The scope of the declaration that is allowed depends on the <xref:System.Security.Permissions.SecurityAction> value that is used."}]},{"pos":[136,490],"content":"The security information declared by a security attribute is stored in the metadata of the attribute target and is accessed by the system at run time. <xref:System.Security.Permissions.KeyContainerPermissionAttribute> is used only for declarative security. For imperative security, use the <xref:System.Security.Permissions.KeyContainerPermission> class.","nodes":[{"content":"The security information declared by a security attribute is stored in the metadata of the attribute target and is accessed by the system at run time. <xref:System.Security.Permissions.KeyContainerPermissionAttribute> is used only for declarative security. For imperative security, use the <xref:System.Security.Permissions.KeyContainerPermission> class.","pos":[0,354],"nodes":[{"content":"The security information declared by a security attribute is stored in the metadata of the attribute target and is accessed by the system at run time.","pos":[0,150]},{"content":"<ph id=\"ph1\">&lt;xref:System.Security.Permissions.KeyContainerPermissionAttribute&gt;</ph> is used only for declarative security.","pos":[151,256],"source":" <xref:System.Security.Permissions.KeyContainerPermissionAttribute> is used only for declarative security."},{"content":"For imperative security, use the <ph id=\"ph1\">&lt;xref:System.Security.Permissions.KeyContainerPermission&gt;</ph> class.","pos":[257,354],"source":" For imperative security, use the <xref:System.Security.Permissions.KeyContainerPermission> class."}]}]}],"pos":[1371,1866],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Security.Permissions.KeyContainerPermissionAttribute\"></xref> class with the specified security action.","nodes":[{"pos":[0,156],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.KeyContainerPermissionAttribute\"&gt;&lt;/xref&gt;</ph> class with the specified security action.","source":"Initializes a new instance of the <xref href=\"System.Security.Permissions.KeyContainerPermissionAttribute\"></xref> class with the specified security action."}],"pos":[7838,7995],"yaml":true},{"content":"One of the <xref href=\"System.Security.Permissions.SecurityAction\"></xref> values.","nodes":[{"pos":[0,82],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.SecurityAction\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Security.Permissions.SecurityAction\"></xref> values."}],"pos":[8217,8300],"yaml":true},{"content":"Creates and returns a new <xref href=\"System.Security.Permissions.KeyContainerPermission\"></xref>.","nodes":[{"pos":[0,98],"content":"Creates and returns a new <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.KeyContainerPermission\"&gt;&lt;/xref&gt;</ph>.","source":"Creates and returns a new <xref href=\"System.Security.Permissions.KeyContainerPermission\"></xref>."}],"pos":[9681,9780],"yaml":true},{"content":"This method should only be called by the security system, never by application code.  \n  \n At compile time, attributes convert security declarations to a serialized form in metadata. The metadata is created from the permission object that this method returns.","nodes":[{"pos":[0,84],"content":"This method should only be called by the security system, never by application code.","nodes":[{"content":"This method should only be called by the security system, never by application code.","pos":[0,84]}]},{"pos":[91,259],"content":"At compile time, attributes convert security declarations to a serialized form in metadata. The metadata is created from the permission object that this method returns.","nodes":[{"content":"At compile time, attributes convert security declarations to a serialized form in metadata. The metadata is created from the permission object that this method returns.","pos":[0,168],"nodes":[{"content":"At compile time, attributes convert security declarations to a serialized form in metadata.","pos":[0,91]},{"content":"The metadata is created from the permission object that this method returns.","pos":[92,168]}]}]}],"pos":[9791,10055],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Security.Permissions.KeyContainerPermission\"></xref> that corresponds to the attribute.","nodes":[{"pos":[0,108],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.KeyContainerPermission\"&gt;&lt;/xref&gt;</ph> that corresponds to the attribute.","source":"A <xref href=\"System.Security.Permissions.KeyContainerPermission\"></xref> that corresponds to the attribute."}],"pos":[10233,10342],"yaml":true},{"content":"Gets or sets the key container permissions.","nodes":[{"pos":[0,43],"content":"Gets or sets the key container permissions.","nodes":[{"content":"Gets or sets the key container permissions.","pos":[0,43]}]}],"pos":[11664,11708],"yaml":true},{"content":"> [!CAUTION]\n>  Many of these flags are powerful and permit access to key containers that should be granted only to highly trusted code.  \n  \n The most powerful of the flags are <xref:System.Security.Permissions.KeyContainerPermissionFlags.Create>, <xref:System.Security.Permissions.KeyContainerPermissionFlags.Delete>, <xref:System.Security.Permissions.KeyContainerPermissionFlags.Import>, <xref:System.Security.Permissions.KeyContainerPermissionFlags.Export>, <xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign>, <xref:System.Security.Permissions.KeyContainerPermissionFlags.Decrypt>, and <xref:System.Security.Permissions.KeyContainerPermissionFlags.AllFlags>. For specific threats posed by the use of these flags, see individual flag descriptions.","nodes":[{"pos":[2,136],"content":"[!CAUTION]\n Many of these flags are powerful and permit access to key containers that should be granted only to highly trusted code.","leadings":["","> "],"nodes":[{"content":"Many of these flags are powerful and permit access to key containers that should be granted only to highly trusted code.","pos":[12,132]}]},{"pos":[143,767],"content":"The most powerful of the flags are <xref:System.Security.Permissions.KeyContainerPermissionFlags.Create>, <xref:System.Security.Permissions.KeyContainerPermissionFlags.Delete>, <xref:System.Security.Permissions.KeyContainerPermissionFlags.Import>, <xref:System.Security.Permissions.KeyContainerPermissionFlags.Export>, <xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign>, <xref:System.Security.Permissions.KeyContainerPermissionFlags.Decrypt>, and <xref:System.Security.Permissions.KeyContainerPermissionFlags.AllFlags>. For specific threats posed by the use of these flags, see individual flag descriptions.","nodes":[{"content":"The most powerful of the flags are <xref:System.Security.Permissions.KeyContainerPermissionFlags.Create>, <xref:System.Security.Permissions.KeyContainerPermissionFlags.Delete>, <xref:System.Security.Permissions.KeyContainerPermissionFlags.Import>, <xref:System.Security.Permissions.KeyContainerPermissionFlags.Export>, <xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign>, <xref:System.Security.Permissions.KeyContainerPermissionFlags.Decrypt>, and <xref:System.Security.Permissions.KeyContainerPermissionFlags.AllFlags>. For specific threats posed by the use of these flags, see individual flag descriptions.","pos":[0,624],"nodes":[{"content":"The most powerful of the flags are <ph id=\"ph1\">&lt;xref:System.Security.Permissions.KeyContainerPermissionFlags.Create&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Security.Permissions.KeyContainerPermissionFlags.Delete&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Security.Permissions.KeyContainerPermissionFlags.Import&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Security.Permissions.KeyContainerPermissionFlags.Export&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign&gt;</ph>, <ph id=\"ph6\">&lt;xref:System.Security.Permissions.KeyContainerPermissionFlags.Decrypt&gt;</ph>, and <ph id=\"ph7\">&lt;xref:System.Security.Permissions.KeyContainerPermissionFlags.AllFlags&gt;</ph>.","pos":[0,536],"source":"The most powerful of the flags are <xref:System.Security.Permissions.KeyContainerPermissionFlags.Create>, <xref:System.Security.Permissions.KeyContainerPermissionFlags.Delete>, <xref:System.Security.Permissions.KeyContainerPermissionFlags.Import>, <xref:System.Security.Permissions.KeyContainerPermissionFlags.Export>, <xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign>, <xref:System.Security.Permissions.KeyContainerPermissionFlags.Decrypt>, and <xref:System.Security.Permissions.KeyContainerPermissionFlags.AllFlags>."},{"content":"For specific threats posed by the use of these flags, see individual flag descriptions.","pos":[537,624]}]}]}],"pos":[11719,12492],"yaml":true,"extradata":"MT"},{"content":"A bitwise combination of the <xref href=\"System.Security.Permissions.KeyContainerPermissionFlags\"></xref> values. The default is <xref href=\"System.Security.Permissions.KeyContainerPermissionFlags.NoFlags\"></xref>.","nodes":[{"pos":[0,214],"content":"A bitwise combination of the <xref href=\"System.Security.Permissions.KeyContainerPermissionFlags\"></xref> values. The default is <xref href=\"System.Security.Permissions.KeyContainerPermissionFlags.NoFlags\"></xref>.","nodes":[{"content":"A bitwise combination of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.KeyContainerPermissionFlags\"&gt;&lt;/xref&gt;</ph> values.","pos":[0,113],"source":"A bitwise combination of the <xref href=\"System.Security.Permissions.KeyContainerPermissionFlags\"></xref> values."},{"content":"The default is <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.KeyContainerPermissionFlags.NoFlags\"&gt;&lt;/xref&gt;</ph>.","pos":[114,214],"source":" The default is <xref href=\"System.Security.Permissions.KeyContainerPermissionFlags.NoFlags\"></xref>."}]}],"pos":[12697,12912],"yaml":true},{"content":"Gets or sets the name of the key container.","nodes":[{"pos":[0,43],"content":"Gets or sets the name of the key container.","nodes":[{"content":"Gets or sets the name of the key container.","pos":[0,43]}]}],"pos":[14289,14333],"yaml":true},{"content":"Use a value of \"*\" to apply the access entry to all key containers within the specified provider name and provider type.","nodes":[{"pos":[0,120],"content":"Use a value of \"*\" to apply the access entry to all key containers within the specified provider name and provider type.","nodes":[{"content":"Use a value of \"*\" to apply the access entry to all key containers within the specified provider name and provider type.","pos":[0,120]}]}],"pos":[14344,14465],"yaml":true,"extradata":"MT"},{"content":"The name of the key container.","nodes":[{"pos":[0,30],"content":"The name of the key container.","nodes":[{"content":"The name of the key container.","pos":[0,30]}]}],"pos":[14590,14621],"yaml":true},{"content":"Gets or sets the key specification.","nodes":[{"pos":[0,35],"content":"Gets or sets the key specification.","nodes":[{"content":"Gets or sets the key specification.","pos":[0,35]}]}],"pos":[15955,15991],"yaml":true},{"content":"If no value is specified, the AT_KEYEXCHANGE value (1) is used. Valid values for this property are AT_KEYEXCHANGE (1) and AT_SIGNATURE (2).","nodes":[{"pos":[0,139],"content":"If no value is specified, the AT_KEYEXCHANGE value (1) is used. Valid values for this property are AT_KEYEXCHANGE (1) and AT_SIGNATURE (2).","nodes":[{"content":"If no value is specified, the AT_KEYEXCHANGE value (1) is used. Valid values for this property are AT_KEYEXCHANGE (1) and AT_SIGNATURE (2).","pos":[0,139],"nodes":[{"content":"If no value is specified, the AT_KEYEXCHANGE value (1) is used.","pos":[0,63]},{"content":"Valid values for this property are AT_KEYEXCHANGE (1) and AT_SIGNATURE (2).","pos":[64,139]}]}]}],"pos":[16002,16142],"yaml":true,"extradata":"MT"},{"content":"One of the AT_ values defined in the Wincrypt.h header file.","nodes":[{"pos":[0,60],"content":"One of the AT_ values defined in the Wincrypt.h header file.","nodes":[{"content":"One of the AT_ values defined in the Wincrypt.h header file.","pos":[0,60]}]}],"pos":[16254,16315],"yaml":true},{"content":"Gets or sets the name of the key store.","nodes":[{"pos":[0,39],"content":"Gets or sets the name of the key store.","nodes":[{"content":"Gets or sets the name of the key store.","pos":[0,39]}]}],"pos":[17646,17686],"yaml":true},{"content":"Valid values are \"User\", \"Machine\", and \"*\". If `null` is specified, the value is set to \"\\*\".","nodes":[{"pos":[0,94],"content":"Valid values are \"User\", \"Machine\", and \"*\". If `null` is specified, the value is set to \"\\*\".","nodes":[{"content":"Valid values are \"User\", \"Machine\", and \"*\".","pos":[0,44]},{"content":"If <ph id=\"ph1\">`null`</ph> is specified, the value is set to \"<ph id=\"ph2\">\\*</ph>\".","pos":[45,94],"source":" If `null` is specified, the value is set to \"\\*\"."}]}],"pos":[17697,17792],"yaml":true,"extradata":"MT"},{"content":"The name of the key store. The default is \"*\".","nodes":[{"pos":[0,46],"content":"The name of the key store. The default is \"*\".","nodes":[{"content":"The name of the key store. The default is \"*\".","pos":[0,46],"nodes":[{"content":"The name of the key store.","pos":[0,26]},{"content":"The default is \"*\".","pos":[27,46]}]}]}],"pos":[17909,17956],"yaml":true},{"content":"Gets or sets the provider name.","nodes":[{"pos":[0,31],"content":"Gets or sets the provider name.","nodes":[{"content":"Gets or sets the provider name.","pos":[0,31]}]}],"pos":[19312,19344],"yaml":true},{"content":"An example of a provider name is \"Microsoft Enhanced Cryptographic Provider\". If `null` is specified, the enhanced cryptographic provider name is used.","nodes":[{"pos":[0,151],"content":"An example of a provider name is \"Microsoft Enhanced Cryptographic Provider\". If `null` is specified, the enhanced cryptographic provider name is used.","nodes":[{"content":"An example of a provider name is \"Microsoft Enhanced Cryptographic Provider\".","pos":[0,77]},{"content":"If <ph id=\"ph1\">`null`</ph> is specified, the enhanced cryptographic provider name is used.","pos":[78,151],"source":" If `null` is specified, the enhanced cryptographic provider name is used."}]}],"pos":[19355,19507],"yaml":true,"extradata":"MT"},{"content":"The name of the provider.","nodes":[{"pos":[0,25],"content":"The name of the provider.","nodes":[{"content":"The name of the provider.","pos":[0,25]}]}],"pos":[19628,19654],"yaml":true},{"content":"Gets or sets the provider type.","nodes":[{"pos":[0,31],"content":"Gets or sets the provider type.","nodes":[{"content":"Gets or sets the provider type.","pos":[0,31]}]}],"pos":[21014,21046],"yaml":true},{"content":"If no value is specified, PROV_RSA_FULL (1) is used.  \n  \n The following values are defined in the Wincrypt.h header file:  \n  \n-   \\#define PROV_RSA_FULL 1  \n  \n-   \\#define PROV_RSA_SIG 2  \n  \n-   \\#define PROV_DSS 3  \n  \n-   \\#define PROV_FORTEZZA 4  \n  \n-   \\#define PROV_MS_EXCHANGE 5  \n  \n-   \\#define PROV_SSL 6  \n  \n-   \\#define PROV_RSA_SCHANNEL 12  \n  \n-   \\#define PROV_DSS_DH 13  \n  \n-   \\#define PROV_EC_ECDSA_SIG 14  \n  \n-   \\#define PROV_EC_ECNRA_SIG 15  \n  \n-   \\#define PROV_EC_ECDSA_FULL 16  \n  \n-   \\#define PROV_EC_ECNRA_FULL 17  \n  \n-   \\#define PROV_DH_SCHANNEL 18  \n  \n-   \\#define PROV_SPYRUS_LYNKS 20  \n  \n-   \\#define PROV_RNG 21  \n  \n-   \\#define PROV_INTEL_SEC 22  \n  \n-   \\#define PROV_REPLACE_OWF 23  \n  \n-   \\#define PROV_RSA_AES 24","nodes":[{"pos":[0,52],"content":"If no value is specified, PROV_RSA_FULL (1) is used.","nodes":[{"content":"If no value is specified, PROV_RSA_FULL (1) is used.","pos":[0,52]}]},{"pos":[59,122],"content":"The following values are defined in the Wincrypt.h header file:","nodes":[{"content":"The following values are defined in the Wincrypt.h header file:","pos":[0,63]}]},{"pos":[132,156],"content":"\\#define PROV_RSA_FULL 1","nodes":[{"content":"<ph id=\"ph1\">\\#</ph>define PROV_RSA_FULL 1","pos":[0,24],"source":"\\#define PROV_RSA_FULL 1"}]},{"pos":[166,189],"content":"\\#define PROV_RSA_SIG 2","nodes":[{"content":"<ph id=\"ph1\">\\#</ph>define PROV_RSA_SIG 2","pos":[0,23],"source":"\\#define PROV_RSA_SIG 2"}]},{"pos":[199,218],"content":"\\#define PROV_DSS 3","nodes":[{"content":"<ph id=\"ph1\">\\#</ph>define PROV_DSS 3","pos":[0,19],"source":"\\#define PROV_DSS 3"}]},{"pos":[228,252],"content":"\\#define PROV_FORTEZZA 4","nodes":[{"content":"<ph id=\"ph1\">\\#</ph>define PROV_FORTEZZA 4","pos":[0,24],"source":"\\#define PROV_FORTEZZA 4"}]},{"pos":[262,289],"content":"\\#define PROV_MS_EXCHANGE 5","nodes":[{"content":"<ph id=\"ph1\">\\#</ph>define PROV_MS_EXCHANGE 5","pos":[0,27],"source":"\\#define PROV_MS_EXCHANGE 5"}]},{"pos":[299,318],"content":"\\#define PROV_SSL 6","nodes":[{"content":"<ph id=\"ph1\">\\#</ph>define PROV_SSL 6","pos":[0,19],"source":"\\#define PROV_SSL 6"}]},{"pos":[328,357],"content":"\\#define PROV_RSA_SCHANNEL 12","nodes":[{"content":"<ph id=\"ph1\">\\#</ph>define PROV_RSA_SCHANNEL 12","pos":[0,29],"source":"\\#define PROV_RSA_SCHANNEL 12"}]},{"pos":[367,390],"content":"\\#define PROV_DSS_DH 13","nodes":[{"content":"<ph id=\"ph1\">\\#</ph>define PROV_DSS_DH 13","pos":[0,23],"source":"\\#define PROV_DSS_DH 13"}]},{"pos":[400,429],"content":"\\#define PROV_EC_ECDSA_SIG 14","nodes":[{"content":"<ph id=\"ph1\">\\#</ph>define PROV_EC_ECDSA_SIG 14","pos":[0,29],"source":"\\#define PROV_EC_ECDSA_SIG 14"}]},{"pos":[439,468],"content":"\\#define PROV_EC_ECNRA_SIG 15","nodes":[{"content":"<ph id=\"ph1\">\\#</ph>define PROV_EC_ECNRA_SIG 15","pos":[0,29],"source":"\\#define PROV_EC_ECNRA_SIG 15"}]},{"pos":[478,508],"content":"\\#define PROV_EC_ECDSA_FULL 16","nodes":[{"content":"<ph id=\"ph1\">\\#</ph>define PROV_EC_ECDSA_FULL 16","pos":[0,30],"source":"\\#define PROV_EC_ECDSA_FULL 16"}]},{"pos":[518,548],"content":"\\#define PROV_EC_ECNRA_FULL 17","nodes":[{"content":"<ph id=\"ph1\">\\#</ph>define PROV_EC_ECNRA_FULL 17","pos":[0,30],"source":"\\#define PROV_EC_ECNRA_FULL 17"}]},{"pos":[558,586],"content":"\\#define PROV_DH_SCHANNEL 18","nodes":[{"content":"<ph id=\"ph1\">\\#</ph>define PROV_DH_SCHANNEL 18","pos":[0,28],"source":"\\#define PROV_DH_SCHANNEL 18"}]},{"pos":[596,625],"content":"\\#define PROV_SPYRUS_LYNKS 20","nodes":[{"content":"<ph id=\"ph1\">\\#</ph>define PROV_SPYRUS_LYNKS 20","pos":[0,29],"source":"\\#define PROV_SPYRUS_LYNKS 20"}]},{"pos":[635,655],"content":"\\#define PROV_RNG 21","nodes":[{"content":"<ph id=\"ph1\">\\#</ph>define PROV_RNG 21","pos":[0,20],"source":"\\#define PROV_RNG 21"}]},{"pos":[665,691],"content":"\\#define PROV_INTEL_SEC 22","nodes":[{"content":"<ph id=\"ph1\">\\#</ph>define PROV_INTEL_SEC 22","pos":[0,26],"source":"\\#define PROV_INTEL_SEC 22"}]},{"pos":[701,729],"content":"\\#define PROV_REPLACE_OWF 23","nodes":[{"content":"<ph id=\"ph1\">\\#</ph>define PROV_REPLACE_OWF 23","pos":[0,28],"source":"\\#define PROV_REPLACE_OWF 23"}]},{"pos":[739,763],"content":"\\#define PROV_RSA_AES 24","nodes":[{"content":"<ph id=\"ph1\">\\#</ph>define PROV_RSA_AES 24","pos":[0,24],"source":"\\#define PROV_RSA_AES 24"}]}],"pos":[21057,21879],"yaml":true,"extradata":"MT"},{"content":"One of the PROV_ values defined in the Wincrypt.h header file.","nodes":[{"pos":[0,62],"content":"One of the PROV_ values defined in the Wincrypt.h header file.","nodes":[{"content":"One of the PROV_ values defined in the Wincrypt.h header file.","pos":[0,62]}]}],"pos":[21996,22059],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Permissions.KeyContainerPermissionAttribute\n  commentId: T:System.Security.Permissions.KeyContainerPermissionAttribute\n  id: KeyContainerPermissionAttribute\n  children:\n  - System.Security.Permissions.KeyContainerPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)\n  - System.Security.Permissions.KeyContainerPermissionAttribute.CreatePermission\n  - System.Security.Permissions.KeyContainerPermissionAttribute.Flags\n  - System.Security.Permissions.KeyContainerPermissionAttribute.KeyContainerName\n  - System.Security.Permissions.KeyContainerPermissionAttribute.KeySpec\n  - System.Security.Permissions.KeyContainerPermissionAttribute.KeyStore\n  - System.Security.Permissions.KeyContainerPermissionAttribute.ProviderName\n  - System.Security.Permissions.KeyContainerPermissionAttribute.ProviderType\n  langs:\n  - csharp\n  name: KeyContainerPermissionAttribute\n  nameWithType: KeyContainerPermissionAttribute\n  fullName: System.Security.Permissions.KeyContainerPermissionAttribute\n  type: Class\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Allows security actions for <xref href=\"System.Security.Permissions.KeyContainerPermission\"></xref> to be applied to code using declarative security. This class cannot be inherited.\n  remarks: \"The scope of the declaration that is allowed depends on the <xref:System.Security.Permissions.SecurityAction> value that is used.  \\n  \\n The security information declared by a security attribute is stored in the metadata of the attribute target and is accessed by the system at run time. <xref:System.Security.Permissions.KeyContainerPermissionAttribute> is used only for declarative security. For imperative security, use the <xref:System.Security.Permissions.KeyContainerPermission> class.\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Constructor | System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class KeyContainerPermissionAttribute : System.Security.Permissions.CodeAccessSecurityAttribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  - System.Security.Permissions.SecurityAttribute\n  - System.Security.Permissions.CodeAccessSecurityAttribute\n  implements: []\n  inheritedMembers:\n  - System.Attribute.Equals(System.Object)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetHashCode\n  - System.Attribute.IsDefaultAttribute\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.Match(System.Object)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Attribute.TypeId\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.Permissions.SecurityAttribute.Action\n  - System.Security.Permissions.SecurityAttribute.Unrestricted\n  attributes:\n  - type: System.AttributeUsageAttribute\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermissionAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.KeyContainerPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)\n  commentId: M:System.Security.Permissions.KeyContainerPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)\n  id: '#ctor(System.Security.Permissions.SecurityAction)'\n  parent: System.Security.Permissions.KeyContainerPermissionAttribute\n  langs:\n  - csharp\n  name: KeyContainerPermissionAttribute(SecurityAction)\n  nameWithType: KeyContainerPermissionAttribute.KeyContainerPermissionAttribute(SecurityAction)\n  fullName: KeyContainerPermissionAttribute.KeyContainerPermissionAttribute(SecurityAction)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Initializes a new instance of the <xref href=\"System.Security.Permissions.KeyContainerPermissionAttribute\"></xref> class with the specified security action.\n  syntax:\n    content: public KeyContainerPermissionAttribute (System.Security.Permissions.SecurityAction action);\n    parameters:\n    - id: action\n      type: System.Security.Permissions.SecurityAction\n      description: One of the <xref href=\"System.Security.Permissions.SecurityAction\"></xref> values.\n  overload: System.Security.Permissions.KeyContainerPermissionAttribute.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermissionAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.KeyContainerPermissionAttribute.CreatePermission\n  commentId: M:System.Security.Permissions.KeyContainerPermissionAttribute.CreatePermission\n  id: CreatePermission\n  parent: System.Security.Permissions.KeyContainerPermissionAttribute\n  langs:\n  - csharp\n  name: CreatePermission()\n  nameWithType: KeyContainerPermissionAttribute.CreatePermission()\n  fullName: KeyContainerPermissionAttribute.CreatePermission()\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Creates and returns a new <xref href=\"System.Security.Permissions.KeyContainerPermission\"></xref>.\n  remarks: \"This method should only be called by the security system, never by application code.  \\n  \\n At compile time, attributes convert security declarations to a serialized form in metadata. The metadata is created from the permission object that this method returns.\"\n  syntax:\n    content: public override System.Security.IPermission CreatePermission ();\n    parameters: []\n    return:\n      type: System.Security.IPermission\n      description: A <xref href=\"System.Security.Permissions.KeyContainerPermission\"></xref> that corresponds to the attribute.\n  overload: System.Security.Permissions.KeyContainerPermissionAttribute.CreatePermission*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermissionAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.KeyContainerPermissionAttribute.Flags\n  commentId: P:System.Security.Permissions.KeyContainerPermissionAttribute.Flags\n  id: Flags\n  parent: System.Security.Permissions.KeyContainerPermissionAttribute\n  langs:\n  - csharp\n  name: Flags\n  nameWithType: KeyContainerPermissionAttribute.Flags\n  fullName: KeyContainerPermissionAttribute.Flags\n  type: Property\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Gets or sets the key container permissions.\n  remarks: \"> [!CAUTION]\\n>  Many of these flags are powerful and permit access to key containers that should be granted only to highly trusted code.  \\n  \\n The most powerful of the flags are <xref:System.Security.Permissions.KeyContainerPermissionFlags.Create>, <xref:System.Security.Permissions.KeyContainerPermissionFlags.Delete>, <xref:System.Security.Permissions.KeyContainerPermissionFlags.Import>, <xref:System.Security.Permissions.KeyContainerPermissionFlags.Export>, <xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign>, <xref:System.Security.Permissions.KeyContainerPermissionFlags.Decrypt>, and <xref:System.Security.Permissions.KeyContainerPermissionFlags.AllFlags>. For specific threats posed by the use of these flags, see individual flag descriptions.\"\n  syntax:\n    content: public System.Security.Permissions.KeyContainerPermissionFlags Flags { get; set; }\n    return:\n      type: System.Security.Permissions.KeyContainerPermissionFlags\n      description: A bitwise combination of the <xref href=\"System.Security.Permissions.KeyContainerPermissionFlags\"></xref> values. The default is <xref href=\"System.Security.Permissions.KeyContainerPermissionFlags.NoFlags\"></xref>.\n  overload: System.Security.Permissions.KeyContainerPermissionAttribute.Flags*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermissionAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.KeyContainerPermissionAttribute.KeyContainerName\n  commentId: P:System.Security.Permissions.KeyContainerPermissionAttribute.KeyContainerName\n  id: KeyContainerName\n  parent: System.Security.Permissions.KeyContainerPermissionAttribute\n  langs:\n  - csharp\n  name: KeyContainerName\n  nameWithType: KeyContainerPermissionAttribute.KeyContainerName\n  fullName: KeyContainerPermissionAttribute.KeyContainerName\n  type: Property\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Gets or sets the name of the key container.\n  remarks: Use a value of \"*\" to apply the access entry to all key containers within the specified provider name and provider type.\n  syntax:\n    content: public string KeyContainerName { get; set; }\n    return:\n      type: System.String\n      description: The name of the key container.\n  overload: System.Security.Permissions.KeyContainerPermissionAttribute.KeyContainerName*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermissionAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.KeyContainerPermissionAttribute.KeySpec\n  commentId: P:System.Security.Permissions.KeyContainerPermissionAttribute.KeySpec\n  id: KeySpec\n  parent: System.Security.Permissions.KeyContainerPermissionAttribute\n  langs:\n  - csharp\n  name: KeySpec\n  nameWithType: KeyContainerPermissionAttribute.KeySpec\n  fullName: KeyContainerPermissionAttribute.KeySpec\n  type: Property\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Gets or sets the key specification.\n  remarks: If no value is specified, the AT_KEYEXCHANGE value (1) is used. Valid values for this property are AT_KEYEXCHANGE (1) and AT_SIGNATURE (2).\n  syntax:\n    content: public int KeySpec { get; set; }\n    return:\n      type: System.Int32\n      description: One of the AT_ values defined in the Wincrypt.h header file.\n  overload: System.Security.Permissions.KeyContainerPermissionAttribute.KeySpec*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermissionAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.KeyContainerPermissionAttribute.KeyStore\n  commentId: P:System.Security.Permissions.KeyContainerPermissionAttribute.KeyStore\n  id: KeyStore\n  parent: System.Security.Permissions.KeyContainerPermissionAttribute\n  langs:\n  - csharp\n  name: KeyStore\n  nameWithType: KeyContainerPermissionAttribute.KeyStore\n  fullName: KeyContainerPermissionAttribute.KeyStore\n  type: Property\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Gets or sets the name of the key store.\n  remarks: Valid values are \"User\", \"Machine\", and \"*\". If `null` is specified, the value is set to \"\\*\".\n  syntax:\n    content: public string KeyStore { get; set; }\n    return:\n      type: System.String\n      description: The name of the key store. The default is \"*\".\n  overload: System.Security.Permissions.KeyContainerPermissionAttribute.KeyStore*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermissionAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.KeyContainerPermissionAttribute.ProviderName\n  commentId: P:System.Security.Permissions.KeyContainerPermissionAttribute.ProviderName\n  id: ProviderName\n  parent: System.Security.Permissions.KeyContainerPermissionAttribute\n  langs:\n  - csharp\n  name: ProviderName\n  nameWithType: KeyContainerPermissionAttribute.ProviderName\n  fullName: KeyContainerPermissionAttribute.ProviderName\n  type: Property\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Gets or sets the provider name.\n  remarks: An example of a provider name is \"Microsoft Enhanced Cryptographic Provider\". If `null` is specified, the enhanced cryptographic provider name is used.\n  syntax:\n    content: public string ProviderName { get; set; }\n    return:\n      type: System.String\n      description: The name of the provider.\n  overload: System.Security.Permissions.KeyContainerPermissionAttribute.ProviderName*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermissionAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.KeyContainerPermissionAttribute.ProviderType\n  commentId: P:System.Security.Permissions.KeyContainerPermissionAttribute.ProviderType\n  id: ProviderType\n  parent: System.Security.Permissions.KeyContainerPermissionAttribute\n  langs:\n  - csharp\n  name: ProviderType\n  nameWithType: KeyContainerPermissionAttribute.ProviderType\n  fullName: KeyContainerPermissionAttribute.ProviderType\n  type: Property\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Gets or sets the provider type.\n  remarks: \"If no value is specified, PROV_RSA_FULL (1) is used.  \\n  \\n The following values are defined in the Wincrypt.h header file:  \\n  \\n-   \\\\#define PROV_RSA_FULL 1  \\n  \\n-   \\\\#define PROV_RSA_SIG 2  \\n  \\n-   \\\\#define PROV_DSS 3  \\n  \\n-   \\\\#define PROV_FORTEZZA 4  \\n  \\n-   \\\\#define PROV_MS_EXCHANGE 5  \\n  \\n-   \\\\#define PROV_SSL 6  \\n  \\n-   \\\\#define PROV_RSA_SCHANNEL 12  \\n  \\n-   \\\\#define PROV_DSS_DH 13  \\n  \\n-   \\\\#define PROV_EC_ECDSA_SIG 14  \\n  \\n-   \\\\#define PROV_EC_ECNRA_SIG 15  \\n  \\n-   \\\\#define PROV_EC_ECDSA_FULL 16  \\n  \\n-   \\\\#define PROV_EC_ECNRA_FULL 17  \\n  \\n-   \\\\#define PROV_DH_SCHANNEL 18  \\n  \\n-   \\\\#define PROV_SPYRUS_LYNKS 20  \\n  \\n-   \\\\#define PROV_RNG 21  \\n  \\n-   \\\\#define PROV_INTEL_SEC 22  \\n  \\n-   \\\\#define PROV_REPLACE_OWF 23  \\n  \\n-   \\\\#define PROV_RSA_AES 24\"\n  syntax:\n    content: public int ProviderType { get; set; }\n    return:\n      type: System.Int32\n      description: One of the PROV_ values defined in the Wincrypt.h header file.\n  overload: System.Security.Permissions.KeyContainerPermissionAttribute.ProviderType*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermissionAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Security.Permissions.CodeAccessSecurityAttribute\n  parent: System.Security.Permissions\n  isExternal: false\n  name: CodeAccessSecurityAttribute\n  nameWithType: CodeAccessSecurityAttribute\n  fullName: System.Security.Permissions.CodeAccessSecurityAttribute\n- uid: System.Security.Permissions.KeyContainerPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)\n  parent: System.Security.Permissions.KeyContainerPermissionAttribute\n  isExternal: false\n  name: KeyContainerPermissionAttribute(SecurityAction)\n  nameWithType: KeyContainerPermissionAttribute.KeyContainerPermissionAttribute(SecurityAction)\n  fullName: KeyContainerPermissionAttribute.KeyContainerPermissionAttribute(SecurityAction)\n- uid: System.Security.Permissions.SecurityAction\n  parent: System.Security.Permissions\n  isExternal: false\n  name: SecurityAction\n  nameWithType: SecurityAction\n  fullName: System.Security.Permissions.SecurityAction\n- uid: System.Security.Permissions.KeyContainerPermissionAttribute.CreatePermission\n  parent: System.Security.Permissions.KeyContainerPermissionAttribute\n  isExternal: false\n  name: CreatePermission()\n  nameWithType: KeyContainerPermissionAttribute.CreatePermission()\n  fullName: KeyContainerPermissionAttribute.CreatePermission()\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Security.Permissions.KeyContainerPermissionAttribute.Flags\n  parent: System.Security.Permissions.KeyContainerPermissionAttribute\n  isExternal: false\n  name: Flags\n  nameWithType: KeyContainerPermissionAttribute.Flags\n  fullName: KeyContainerPermissionAttribute.Flags\n- uid: System.Security.Permissions.KeyContainerPermissionFlags\n  parent: System.Security.Permissions\n  isExternal: false\n  name: KeyContainerPermissionFlags\n  nameWithType: KeyContainerPermissionFlags\n  fullName: System.Security.Permissions.KeyContainerPermissionFlags\n- uid: System.Security.Permissions.KeyContainerPermissionAttribute.KeyContainerName\n  parent: System.Security.Permissions.KeyContainerPermissionAttribute\n  isExternal: false\n  name: KeyContainerName\n  nameWithType: KeyContainerPermissionAttribute.KeyContainerName\n  fullName: KeyContainerPermissionAttribute.KeyContainerName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Permissions.KeyContainerPermissionAttribute.KeySpec\n  parent: System.Security.Permissions.KeyContainerPermissionAttribute\n  isExternal: false\n  name: KeySpec\n  nameWithType: KeyContainerPermissionAttribute.KeySpec\n  fullName: KeyContainerPermissionAttribute.KeySpec\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Permissions.KeyContainerPermissionAttribute.KeyStore\n  parent: System.Security.Permissions.KeyContainerPermissionAttribute\n  isExternal: false\n  name: KeyStore\n  nameWithType: KeyContainerPermissionAttribute.KeyStore\n  fullName: KeyContainerPermissionAttribute.KeyStore\n- uid: System.Security.Permissions.KeyContainerPermissionAttribute.ProviderName\n  parent: System.Security.Permissions.KeyContainerPermissionAttribute\n  isExternal: false\n  name: ProviderName\n  nameWithType: KeyContainerPermissionAttribute.ProviderName\n  fullName: KeyContainerPermissionAttribute.ProviderName\n- uid: System.Security.Permissions.KeyContainerPermissionAttribute.ProviderType\n  parent: System.Security.Permissions.KeyContainerPermissionAttribute\n  isExternal: false\n  name: ProviderType\n  nameWithType: KeyContainerPermissionAttribute.ProviderType\n  fullName: KeyContainerPermissionAttribute.ProviderType\n- uid: System.Security.Permissions.KeyContainerPermissionAttribute.#ctor*\n  parent: System.Security.Permissions.KeyContainerPermissionAttribute\n  isExternal: false\n  name: KeyContainerPermissionAttribute\n  nameWithType: KeyContainerPermissionAttribute.KeyContainerPermissionAttribute\n  fullName: KeyContainerPermissionAttribute.KeyContainerPermissionAttribute\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermissionAttribute.xml\n- uid: System.Security.Permissions.KeyContainerPermissionAttribute.CreatePermission*\n  parent: System.Security.Permissions.KeyContainerPermissionAttribute\n  isExternal: false\n  name: CreatePermission\n  nameWithType: KeyContainerPermissionAttribute.CreatePermission\n  fullName: KeyContainerPermissionAttribute.CreatePermission\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermissionAttribute.xml\n- uid: System.Security.Permissions.KeyContainerPermissionAttribute.Flags*\n  parent: System.Security.Permissions.KeyContainerPermissionAttribute\n  isExternal: false\n  name: Flags\n  nameWithType: KeyContainerPermissionAttribute.Flags\n  fullName: KeyContainerPermissionAttribute.Flags\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermissionAttribute.xml\n- uid: System.Security.Permissions.KeyContainerPermissionAttribute.KeyContainerName*\n  parent: System.Security.Permissions.KeyContainerPermissionAttribute\n  isExternal: false\n  name: KeyContainerName\n  nameWithType: KeyContainerPermissionAttribute.KeyContainerName\n  fullName: KeyContainerPermissionAttribute.KeyContainerName\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermissionAttribute.xml\n- uid: System.Security.Permissions.KeyContainerPermissionAttribute.KeySpec*\n  parent: System.Security.Permissions.KeyContainerPermissionAttribute\n  isExternal: false\n  name: KeySpec\n  nameWithType: KeyContainerPermissionAttribute.KeySpec\n  fullName: KeyContainerPermissionAttribute.KeySpec\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermissionAttribute.xml\n- uid: System.Security.Permissions.KeyContainerPermissionAttribute.KeyStore*\n  parent: System.Security.Permissions.KeyContainerPermissionAttribute\n  isExternal: false\n  name: KeyStore\n  nameWithType: KeyContainerPermissionAttribute.KeyStore\n  fullName: KeyContainerPermissionAttribute.KeyStore\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermissionAttribute.xml\n- uid: System.Security.Permissions.KeyContainerPermissionAttribute.ProviderName*\n  parent: System.Security.Permissions.KeyContainerPermissionAttribute\n  isExternal: false\n  name: ProviderName\n  nameWithType: KeyContainerPermissionAttribute.ProviderName\n  fullName: KeyContainerPermissionAttribute.ProviderName\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermissionAttribute.xml\n- uid: System.Security.Permissions.KeyContainerPermissionAttribute.ProviderType*\n  parent: System.Security.Permissions.KeyContainerPermissionAttribute\n  isExternal: false\n  name: ProviderType\n  nameWithType: KeyContainerPermissionAttribute.ProviderType\n  fullName: KeyContainerPermissionAttribute.ProviderType\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermissionAttribute.xml\n- uid: System.Attribute.Equals(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Attribute.Equals(Object)\n  fullName: Attribute.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Attribute.GetHashCode\n  parent: System.Attribute\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Attribute.GetHashCode()\n  fullName: Attribute.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type)\n  fullName: Attribute.GetCustomAttribute(Module, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type)\n  fullName: Attribute.GetCustomAttributes(Module, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module)\n  nameWithType: Attribute.GetCustomAttributes(Module)\n  fullName: Attribute.GetCustomAttributes(Module)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo)\n  fullName: Attribute.GetCustomAttributes(MemberInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly)\n  nameWithType: Attribute.GetCustomAttributes(Assembly)\n  fullName: Attribute.GetCustomAttributes(Assembly)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type)\n- uid: System.Attribute.IsDefaultAttribute\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefaultAttribute()\n  nameWithType: Attribute.IsDefaultAttribute()\n  fullName: Attribute.IsDefaultAttribute()\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Module, Type, Boolean)\n  fullName: Attribute.IsDefined(Module, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(MemberInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)\n  fullName: Attribute.IsDefined(Assembly, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type)\n  fullName: Attribute.IsDefined(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type)\n  nameWithType: Attribute.IsDefined(Module, Type)\n  fullName: Attribute.IsDefined(Module, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type)\n  nameWithType: Attribute.IsDefined(Assembly, Type)\n  fullName: Attribute.IsDefined(Assembly, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type)\n  fullName: Attribute.IsDefined(ParameterInfo, Type)\n- uid: System.Attribute.Match(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Match(Object)\n  nameWithType: Attribute.Match(Object)\n  fullName: Attribute.Match(Object)\n- uid: System.Attribute.TypeId\n  parent: System.Attribute\n  isExternal: false\n  name: TypeId\n  nameWithType: Attribute.TypeId\n  fullName: Attribute.TypeId\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfoCount(UInt32)\n  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)\n  fullName: Attribute._Attribute.GetTypeInfoCount(UInt32)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n- uid: System.Security.Permissions.SecurityAttribute.Action\n  parent: System.Security.Permissions.SecurityAttribute\n  isExternal: false\n  name: Action\n  nameWithType: SecurityAttribute.Action\n  fullName: SecurityAttribute.Action\n- uid: System.Security.Permissions.SecurityAttribute.Unrestricted\n  parent: System.Security.Permissions.SecurityAttribute\n  isExternal: false\n  name: Unrestricted\n  nameWithType: SecurityAttribute.Unrestricted\n  fullName: SecurityAttribute.Unrestricted\n"}