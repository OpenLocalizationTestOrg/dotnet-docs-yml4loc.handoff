### YamlMime:ManagedReference
items:
- uid: System.Web.Script.Serialization.JavaScriptConverter
  commentId: T:System.Web.Script.Serialization.JavaScriptConverter
  id: JavaScriptConverter
  children:
  - System.Web.Script.Serialization.JavaScriptConverter.#ctor
  - System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)
  - System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)
  - System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes
  langs:
  - csharp
  name: JavaScriptConverter
  nameWithType: JavaScriptConverter
  fullName: System.Web.Script.Serialization.JavaScriptConverter
  type: Class
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: Provides an abstract base class for a custom type converter.
  remarks: "The <xref:System.Web.Script.Serialization.JavaScriptConverter> class enables you to implement serialization and deserialization processes for managed types that are not natively supported by the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class. You can also use <xref:System.Web.Script.Serialization.JavaScriptConverter> when you need more control over the serialization and deserialization process.  \n  \n The <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> property indicates the types for which a custom converter provides converter services.  \n  \n To indicate that a custom converter must be used by the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance, you must register the converter with the instance. If you are using the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class directly, you should use the <xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A> method to register the converter. Otherwise, if you are invoking Web methods from ECMAScript (JavaScript) and you want to use the custom converter, you can register it by adding a `converters` element in the configuration file. For more information, see [How to: Configure ASP.NET Services in Microsoft Ajax](http://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30).  \n  \n When the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance is serializing a type for which it has a custom converter registered, the serializer calls the <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> method. Similarly, when the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance is deserializing a JavaScript Object Notation (JSON) string and recognizes that a type inside the JSON string has a custom converter associated with it, the serializer calls the <xref:System.Web.Script.Serialization.JavaScriptConverter.Deserialize%2A> method."
  example:
  - "The following example shows how to create a custom converter for the <xref:System.Web.UI.WebControls.ListItemCollection> class.  \n  \n [!code-csharp[System.Web.Script.Serialization#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/App_Code/ListItemCollectionConverter.cs#2)]\n [!code-vb[System.Web.Script.Serialization#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/App_Code/ListItemCollectionConverter.vb#2)]"
  syntax:
    content: public abstract class JavaScriptConverter
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Script.Serialization/JavaScriptConverter.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
- uid: System.Web.Script.Serialization.JavaScriptConverter.#ctor
  commentId: M:System.Web.Script.Serialization.JavaScriptConverter.#ctor
  id: '#ctor'
  parent: System.Web.Script.Serialization.JavaScriptConverter
  langs:
  - csharp
  name: JavaScriptConverter()
  nameWithType: JavaScriptConverter.JavaScriptConverter()
  fullName: JavaScriptConverter.JavaScriptConverter()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: Initializes a new instance of the <xref href="System.Web.Script.Serialization.JavaScriptConverter"></xref> class.
  syntax:
    content: protected JavaScriptConverter ();
    parameters: []
  overload: System.Web.Script.Serialization.JavaScriptConverter.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Script.Serialization/JavaScriptConverter.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
- uid: System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)
  commentId: M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)
  id: Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)
  parent: System.Web.Script.Serialization.JavaScriptConverter
  langs:
  - csharp
  name: Deserialize(IDictionary<String,Object>, Type, JavaScriptSerializer)
  nameWithType: JavaScriptConverter.Deserialize(IDictionary<String,Object>, Type, JavaScriptSerializer)
  fullName: JavaScriptConverter.Deserialize(IDictionary<String,Object>, Type, JavaScriptSerializer)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: When overridden in a derived class, converts the provided dictionary into an object of the specified type.
  syntax:
    content: public abstract object Deserialize (System.Collections.Generic.IDictionary<string,object> dictionary, Type type, System.Web.Script.Serialization.JavaScriptSerializer serializer);
    parameters:
    - id: dictionary
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: An <xref href="System.Collections.Generic.IDictionary`2"></xref> instance of property data stored as name/value pairs.
    - id: type
      type: System.Type
      description: The type of the resulting object.
    - id: serializer
      type: System.Web.Script.Serialization.JavaScriptSerializer
      description: The <xref href="System.Web.Script.Serialization.JavaScriptSerializer"></xref> instance.
    return:
      type: System.Object
      description: The deserialized object.
  overload: System.Web.Script.Serialization.JavaScriptConverter.Deserialize*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Script.Serialization/JavaScriptConverter.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
- uid: System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)
  commentId: M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)
  id: Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)
  parent: System.Web.Script.Serialization.JavaScriptConverter
  langs:
  - csharp
  name: Serialize(Object, JavaScriptSerializer)
  nameWithType: JavaScriptConverter.Serialize(Object, JavaScriptSerializer)
  fullName: JavaScriptConverter.Serialize(Object, JavaScriptSerializer)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: When overridden in a derived class, builds a dictionary of name/value pairs.
  remarks: When you serialize a type for which a custom converter is registered, the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance invokes the <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> method.
  syntax:
    content: public abstract System.Collections.Generic.IDictionary<string,object> Serialize (object obj, System.Web.Script.Serialization.JavaScriptSerializer serializer);
    parameters:
    - id: obj
      type: System.Object
      description: The object to serialize.
    - id: serializer
      type: System.Web.Script.Serialization.JavaScriptSerializer
      description: The object that is responsible for the serialization.
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: An object that contains key/value pairs that represent the object’s data.
  overload: System.Web.Script.Serialization.JavaScriptConverter.Serialize*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Script.Serialization/JavaScriptConverter.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
- uid: System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes
  commentId: P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes
  id: SupportedTypes
  parent: System.Web.Script.Serialization.JavaScriptConverter
  langs:
  - csharp
  name: SupportedTypes
  nameWithType: JavaScriptConverter.SupportedTypes
  fullName: JavaScriptConverter.SupportedTypes
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: When overridden in a derived class, gets a collection of the supported types.
  remarks: The <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> property lists the types that are supported by the converter. At run time, a <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance uses this property to determine the mapping of managed types to their corresponding custom converters.
  example:
  - "The following example shows how to override the <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> property in a derived class. In this example, the converter supports only the <xref:System.Web.UI.WebControls.ListItemCollection> type. This code example is part of a larger example provided for the <xref:System.Web.Script.Serialization.JavaScriptConverter> class.  \n  \n [!code-csharp[System.Web.Script.Serialization#3](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/App_Code/ListItemCollectionConverter.cs#3)]\n [!code-vb[System.Web.Script.Serialization#3](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/App_Code/ListItemCollectionConverter.vb#3)]"
  syntax:
    content: public abstract System.Collections.Generic.IEnumerable<Type> SupportedTypes { get; }
    return:
      type: System.Collections.Generic.IEnumerable{System.Type}
      description: An object that implements <xref href="System.Collections.Generic.IEnumerable`1"></xref> that represents the types supported by the converter.
  overload: System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Script.Serialization/JavaScriptConverter.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.Script.Serialization.JavaScriptConverter.#ctor
  parent: System.Web.Script.Serialization.JavaScriptConverter
  isExternal: false
  name: JavaScriptConverter()
  nameWithType: JavaScriptConverter.JavaScriptConverter()
  fullName: JavaScriptConverter.JavaScriptConverter()
- uid: System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)
  parent: System.Web.Script.Serialization.JavaScriptConverter
  isExternal: false
  name: Deserialize(IDictionary<String,Object>, Type, JavaScriptSerializer)
  nameWithType: JavaScriptConverter.Deserialize(IDictionary<String,Object>, Type, JavaScriptSerializer)
  fullName: JavaScriptConverter.Deserialize(IDictionary<String,Object>, Type, JavaScriptSerializer)
- uid: System.Collections.Generic.IDictionary`2
  name: IDictionary<TKey,TValue>
  nameWithType: IDictionary<TKey,TValue>
  fullName: System.Collections.Generic.IDictionary<TKey,TValue>
- uid: System.String
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  isExternal: false
  name: IDictionary<String,Object>
  nameWithType: IDictionary<String,Object>
  fullName: System.Collections.Generic.IDictionary<System.String,System.Object>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.Script.Serialization.JavaScriptSerializer
  parent: System.Web.Script.Serialization
  isExternal: false
  name: JavaScriptSerializer
  nameWithType: JavaScriptSerializer
  fullName: System.Web.Script.Serialization.JavaScriptSerializer
- uid: System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)
  parent: System.Web.Script.Serialization.JavaScriptConverter
  isExternal: false
  name: Serialize(Object, JavaScriptSerializer)
  nameWithType: JavaScriptConverter.Serialize(Object, JavaScriptSerializer)
  fullName: JavaScriptConverter.Serialize(Object, JavaScriptSerializer)
- uid: System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes
  parent: System.Web.Script.Serialization.JavaScriptConverter
  isExternal: false
  name: SupportedTypes
  nameWithType: JavaScriptConverter.SupportedTypes
  fullName: JavaScriptConverter.SupportedTypes
- uid: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
- uid: System.Collections.Generic.IEnumerable{System.Type}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<Type>
  nameWithType: IEnumerable<Type>
  fullName: System.Collections.Generic.IEnumerable<System.Type>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.Script.Serialization.JavaScriptConverter.#ctor*
  parent: System.Web.Script.Serialization.JavaScriptConverter
  isExternal: false
  name: JavaScriptConverter
  nameWithType: JavaScriptConverter.JavaScriptConverter
  fullName: JavaScriptConverter.JavaScriptConverter
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Script.Serialization/JavaScriptConverter.xml
- uid: System.Web.Script.Serialization.JavaScriptConverter.Deserialize*
  parent: System.Web.Script.Serialization.JavaScriptConverter
  isExternal: false
  name: Deserialize
  nameWithType: JavaScriptConverter.Deserialize
  fullName: JavaScriptConverter.Deserialize
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Script.Serialization/JavaScriptConverter.xml
- uid: System.Web.Script.Serialization.JavaScriptConverter.Serialize*
  parent: System.Web.Script.Serialization.JavaScriptConverter
  isExternal: false
  name: Serialize
  nameWithType: JavaScriptConverter.Serialize
  fullName: JavaScriptConverter.Serialize
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Script.Serialization/JavaScriptConverter.xml
- uid: System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes*
  parent: System.Web.Script.Serialization.JavaScriptConverter
  isExternal: false
  name: SupportedTypes
  nameWithType: JavaScriptConverter.SupportedTypes
  fullName: JavaScriptConverter.SupportedTypes
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Script.Serialization/JavaScriptConverter.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
