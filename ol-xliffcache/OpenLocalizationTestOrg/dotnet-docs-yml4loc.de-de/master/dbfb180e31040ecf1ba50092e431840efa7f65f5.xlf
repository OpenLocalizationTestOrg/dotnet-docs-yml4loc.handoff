<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dbfb180e31040ecf1ba50092e431840efa7f65f5</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Security.Cryptography.CngKey.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c31a1aac3704089cb2eff406c3bc7d8bb3342037</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">86a446d94ff61fe645e8ccbee2e110476b79abbf</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defines the core functionality for keys that are used with Cryptography Next Generation (CNG) objects.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class wraps NCrypt keys, not BCrypt keys.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>NCrypt is a subset of CNG that provides key storage functionality.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>BCrypt is a subset that provides base cryptographic services such as random number generation, hash functions, signatures, and encryption keys.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Gets the algorithm that is used by the key.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>An object that specifies the name of an encryption algorithm.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Gets the algorithm group that is used by the key.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>An object that specifies the name of an encryption algorithm group.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Creates a <ph id="ph1">&lt;xref href="System.Security.Cryptography.CngKey"&gt;&lt;/xref&gt;</ph> object that can be used with the specified algorithm.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload creates a key without a name, which means that the key is ephemeral (that is, it will not be persisted).</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>It also creates a default <ph id="ph1">&lt;xref:System.Security.Cryptography.CngKeyCreationParameters&gt;</ph> object that specifies a default <ph id="ph2">&lt;xref:System.Security.Cryptography.CngProvider&gt;</ph> and other advanced parameters for the key.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The algorithm that the key will be used with.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>An ephemeral key.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;algorithm&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Cryptography Next Generation (CNG) is not supported on this system.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>All other errors.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Creates a named <ph id="ph1">&lt;xref href="System.Security.Cryptography.CngKey"&gt;&lt;/xref&gt;</ph> object that provides the specified algorithm.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`keyName`</ph> is provided, this overload creates a persisted key.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`keyName`</ph> is not provided, the key will be ephemeral.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload also creates a default <ph id="ph1">&lt;xref:System.Security.Cryptography.CngKeyCreationParameters&gt;</ph> object that specifies a default <ph id="ph2">&lt;xref:System.Security.Cryptography.CngProvider&gt;</ph> and other advanced parameters for the key.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The algorithm that the key will be used with.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The key name.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If a name is not provided, the key will not be persisted.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>A persisted or ephemeral key that provides the specified algorithm.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;algorithm&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Cryptography Next Generation (CNG) is not supported on this system.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>All other errors.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Creates a named <ph id="ph1">&lt;xref href="System.Security.Cryptography.CngKey"&gt;&lt;/xref&gt;</ph> object that provides the specified algorithm, using the supplied key creation parameters.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`keyName`</ph> is provided, this overload creates a persisted key.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`keyName`</ph> is not provided, the key will be ephemeral.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The algorithm that the key will be used with.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The key name.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>If a name is not provided, the key will not be persisted.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>An object that specifies advanced parameters for the method, including the <ph id="ph1">&lt;xref href="System.Security.Cryptography.CngProvider"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>A persisted or ephemeral key that provides the specified algorithm.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;algorithm&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Cryptography Next Generation (CNG) is not supported on this system.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>All other errors.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Removes the key that is associated with the object.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">&lt;xref:System.Security.Cryptography.CngKey.Delete%2A&gt;</ph> method on an ephemeral key, it closes the handle to the key.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">&lt;xref:System.Security.Cryptography.CngKey.Delete%2A&gt;</ph> method on a named key, the <ph id="ph2">&lt;xref:System.Security.Cryptography.CngKey&gt;</ph> object can no longer be used after the named key is deleted.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>An attempt was made to access a deleted key.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>All other errors.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the current instance of the <ph id="ph1">&lt;xref href="System.Security.Cryptography.CngKey"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call <ph id="ph1">&lt;xref:System.Security.Cryptography.CngKey.Dispose%2A&gt;</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Security.Cryptography.CngKey&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.CngKey.Dispose%2A&gt;</ph> method leaves the <ph id="ph2">&lt;xref:System.Security.Cryptography.CngKey&gt;</ph> in an unusable state.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>After calling <ph id="ph1">&lt;xref:System.Security.Cryptography.CngKey.Dispose%2A&gt;</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Security.Cryptography.CngKey&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.Security.Cryptography.CngKey&gt;</ph> was occupying.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>Always call <ph id="ph1">&lt;xref:System.Security.Cryptography.CngKey.Dispose%2A&gt;</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.Security.Cryptography.CngKey&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.Security.Cryptography.CngKey&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Checks to see whether a named key exists in the specified key storage provider (KSP), according to the specified options.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this overload to check for the existence of a key in a KSP other than the default <ph id="ph1">&lt;xref:System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider%2A&gt;</ph>, and to specify key open options.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The key name.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The KSP to search for the key.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>A bitwise combination of the enumeration values that specify options for opening a key.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the named key exists in the specified provider; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;keyName&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;provider&lt;/code&gt;</ph> is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Cryptography Next Generation (CNG) is not supported on this system.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>All other errors.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Checks to see whether a named key exists in the default key storage provider (KSP).</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default KSP is <ph id="ph1">&lt;xref:System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The key name.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the named key exists in the default KSP; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;keyName&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Cryptography Next Generation (CNG) is not supported on this system.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>All other errors.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Checks to see whether a named key exists in the specified key storage provider (KSP).</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this overload to check for the existence of a key in a KSP other than the default KSP, which is <ph id="ph1">&lt;xref:System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The key name.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The KSP to check for the key.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the named key exists in the specified provider; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;keyName&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;provider&lt;/code&gt;</ph> is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Cryptography Next Generation (CNG) is not supported on this system.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>All other errors.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Exports the key material into a BLOB, in the specified format.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>Cryptography Next Generation (CNG) allows export in any format that the underlying key storage provider (KSP) supports.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, on Windows Vista,the default KSP (which is <ph id="ph1">&lt;xref:System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider%2A&gt;</ph>) only allows export of private keys in the <ph id="ph2">&lt;xref:System.Security.Cryptography.CngKeyBlobFormat.Pkcs8PrivateBlob%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.Cryptography.CngKeyBlobFormat.EccPrivateBlob%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Security.Cryptography.CngKeyBlobFormat.OpaqueTransportBlob%2A&gt;</ph> formats.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>This restriction is controlled by the underlying KSP.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you use a different KSP, other formats may apply.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>An object that specifies the format of the key BLOB.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>A BLOB that contains the key material in the specified format.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;format&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>All other errors.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Typically, the <ph id="ph1">&lt;xref href="System.Security.Cryptography.CngKey.ExportPolicy"&gt;&lt;/xref&gt;</ph> does not allow the key to be exported.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Gets the export policy that is used by the key.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>The export policy controls the export frequency and format for the key.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>An object that specifies the export policy for the key.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Gets a property, given a name and a set of property options.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>The purpose of this method is to return the value of an arbitrary property of the key.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>The typical way to retrieve properties is by using the property accessors provided by the <ph id="ph1">&lt;xref:System.Security.Cryptography.CngKey&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Security.Cryptography.CngKey&gt;</ph> provides wrappers for several, but not all, properties.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.CngKey.GetProperty%2A&gt;</ph> method is primarily used to access the value of a property that is not wrapped.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is useful in the following cases:</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>A new version of the operating system supports a new Cryptography Next Generation (CNG) key property that does not have a wrapper.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>You add a custom property to the key.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`options`</ph> parameter is specifically used to indicate the following:</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>Whether the property is built-in, or custom.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>Whether the property should be persisted with the key.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>These options must match the value that the property was set with, or the property will not be found.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Security.Cryptography.CryptographicException&gt;</ph> is thrown if the property cannot be found.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should call the <ph id="ph1">&lt;xref:System.Security.Cryptography.CngKey.HasProperty%2A&gt;</ph> method first to avoid the exception instead of wrapping the method call in a <ph id="ph2">`try/catch`</ph> block.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The name of the desired property.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>A bitwise combination of the enumeration values that specify options for the named property.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>An object that contains the raw value of the specified property.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>All other errors.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Gets a safe handle that represents a native key (NCRYPT_KEY_HANDLE).</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned handle is a duplicate of the handle in the current <ph id="ph1">&lt;xref:System.Security.Cryptography.CngKey&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>It will persist even if the current <ph id="ph1">&lt;xref:System.Security.Cryptography.CngKey&gt;</ph> is disposed, and must be disposed of separately.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can release the current object and the handle in any order without any adverse effects.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>A safe handle that represents the key.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Checks to see whether the specified property exists on the key.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`options`</ph> parameter is specifically used to indicate the following:</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>Whether the property is built-in, or custom.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>Whether the property should be persisted with the key.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>These options must match the value that the property was set with, or the property will not be found.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method operates correctly even if the property is set to <ph id="ph1">`false`</ph> or zero.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The property name to check.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>A bitwise combination of the enumeration values that specify options for the named property.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the specified property is found; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Creates a new key by importing the specified key material into the specified key storage provider (KSP), using the specified format.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>On Windows operating systems before Windows 7 and Windows Server 2008 R2, some CNG key binary large object (BLOB) formats are not supported.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>An array that contains the key information.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>An object that specifies the format of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">keyBlob</ph><ept id="p1">&lt;/code&gt;</ept> array.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The KSP.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>A new key.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;keyBlob&lt;/code&gt;</ph>, <ph id="ph2">&lt;code&gt;format&lt;/code&gt;</ph>, or <ph id="ph3">&lt;code&gt;provider&lt;/code&gt;</ph> is <ph id="ph4">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Cryptography Next Generation (CNG) is not supported on this system.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>All other errors.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Creates a new key by importing the specified key material into the default key storage provider (KSP) and using the specified format.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default KSP is <ph id="ph1">&lt;xref:System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>On Windows operating systems before Windows 7 and Windows Server 2008 R2, some CNG key binary large object (BLOB) formats are not supported.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>An array that contains the key information.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>An object that specifies the format of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">keyBlob</ph><ept id="p1">&lt;/code&gt;</ept> array.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>A new key.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;keyBlob&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;format&lt;/code&gt;</ph> is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Cryptography Next Generation (CNG) is not supported on this system.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>All other errors.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Gets the persistence state of the key.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property determines whether the key is ephemeral (that is, the key exists only for the lifetime of the handle), or persisted (that is, the key exists independently of the handle).</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>The return value depends on the method that is used to obtain the key:</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the key was not opened by the <ph id="ph1">&lt;xref:System.Security.Cryptography.CngKey.Open%28Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle%2CSystem.Security.Cryptography.CngKeyHandleOpenOptions%29&gt;</ph> method overload, the common language runtime (CLR) is managing the key and can determine whether it is ephemeral.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the key was opened by the <ph id="ph1">&lt;xref:System.Security.Cryptography.CngKey.Open%28Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle%2CSystem.Security.Cryptography.CngKeyHandleOpenOptions%29&gt;</ph> method overload, the CLR cannot determine whether it is ephemeral.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, the key is assumed to be persisted.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if this method is used to open a handle to a key that is created by the CLR, the CLR will be able to determine whether it is ephemeral.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property does not have a public setter; it is read-only.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the key is ephemeral; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Gets the scope (machine or user) of the key.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the key is available on a machine-wide basis; <ph id="ph2">`false`</ph> if the key is only for the current user.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Gets the name of the key.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The name of the key.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>If the key is ephemeral, the value is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Gets the key size in bits.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>The key size in bits.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Gets the cryptographic operations specified by the key.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>A bitwise combination of the enumeration values that specify the usages allowed for the key.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Creates an instance of an <ph id="ph1">&lt;xref href="System.Security.Cryptography.CngKey"&gt;&lt;/xref&gt;</ph> object that represents an existing named key.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload uses the following defaults:</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>Key storage provider (KSP): <ph id="ph1">&lt;xref:System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Security.Cryptography.CngKey.Open%28System.String%2CSystem.Security.Cryptography.CngProvider%29&gt;</ph> overload if you want to specify another KSP.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>Key open options: <ph id="ph1">&lt;xref:System.Security.Cryptography.CngKeyOpenOptions?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>The name of the key.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>An existing key.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;keyName&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Cryptography Next Generation (CNG) is not supported on this system.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>All other errors.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Creates an instance of an <ph id="ph1">&lt;xref href="System.Security.Cryptography.CngKey"&gt;&lt;/xref&gt;</ph> object by using a handle to an existing key.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload enables advanced users to use the CNG classes even if they rely on platform invoke or the managed interop capability of C++.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you have a native library that returns the key as an NCRYPT_KEY_HANDLE, this overload lets you create a managed wrapper around the key and use the CNG classes to manipulate it.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you open a key by using its handle, you cannot determine the key's ephemeral state and must specify it yourself.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT">
          <source>Several properties of the <ph id="ph1">&lt;xref:System.Security.Cryptography.CngKey&gt;</ph> class rely on this value to be correct.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, make sure that you pass the correct flag value to the <ph id="ph1">&lt;xref:System.Security.Cryptography.CngKey.Open%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>A handle to an existing key.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that indicates whether <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">keyHandle</ph><ept id="p1">&lt;/code&gt;</ept> represents an ephemeral key or a named key.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>An existing key.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;keyHandle&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;keyHandle&lt;/code&gt;</ph> is invalid or malformed, or it is already closed.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>This exception is also thrown if the key is an ephemeral key that is created by the common language runtime (CLR), but the <ph id="ph1">&lt;xref href="System.Security.Cryptography.CngKeyHandleOpenOptions.EphemeralKey"&gt;&lt;/xref&gt;</ph> value is not specified.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Cryptography Next Generation (CNG) is not supported on this system.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>All other errors.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Creates an instance of an <ph id="ph1">&lt;xref href="System.Security.Cryptography.CngKey"&gt;&lt;/xref&gt;</ph> object that represents an existing named key, using the specified key storage provider (KSP).</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unlike the <ph id="ph1">&lt;xref:System.Security.Cryptography.CngKey.Open%28System.String%29&gt;</ph> method overload, this overload lets you specify the provider.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, a default <ph id="ph1">&lt;xref:System.Security.Cryptography.CngKeyOpenOptions&gt;</ph> value of <ph id="ph2">&lt;xref:System.Security.Cryptography.CngKeyOpenOptions.None&gt;</ph> is created and bound to the key.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>The name of the key.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>The KSP that contains the key.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>An existing key.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;keyName&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;provider&lt;/code&gt;</ph> is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Cryptography Next Generation (CNG) is not supported on this system.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>All other errors.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Creates an instance of an <ph id="ph1">&lt;xref href="System.Security.Cryptography.CngKey"&gt;&lt;/xref&gt;</ph> object that represents an existing named key, using the specified key storage provider (KSP) and key open options.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unlike the <ph id="ph1">&lt;xref:System.Security.Cryptography.CngKey.Open%28System.String%29&gt;</ph> method overload, this overload lets you specify both the provider and the key open options.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>The name of the key.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>The KSP that contains the key.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>A bitwise combination of the enumeration values that specify options for opening the key, such as where the key is opened from (machine or user storage) and whether to suppress UI prompting.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>An existing key.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;keyName&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;provider&lt;/code&gt;</ph> is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Cryptography Next Generation (CNG) is not supported on this system.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>All other errors.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Gets or sets the window handle (HWND) that should be used for user interface (UI) prompts caused by accessing the key.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT">
          <source>The parent window handle for the key is used in UI prompts, such as smart card PIN prompts.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT">
          <source>This value is not persisted with persisted keys.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT">
          <source>We recommend that you always set this property for keys that display a user interface.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not use the default value of <ph id="ph1">`null`</ph> for such keys.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>The parent window handle for the key.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>Gets the key storage provider (KSP) that manages the key.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>The KSP that manages the key.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>Gets a native handle (an NCRYPT_PROV_HANDLE) to the key storage provider (KSP).</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned handle is a duplicate of the handle in the current <ph id="ph1">&lt;xref:System.Security.Cryptography.CngKey&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT">
          <source>It will persist even if the current <ph id="ph1">&lt;xref:System.Security.Cryptography.CngKey&gt;</ph> is disposed, and must be disposed of separately.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can release the current object and the handle in any order without any adverse effects.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>A handle to the KSP.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>Sets a named property on the key.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method enables you to add a new custom property to an existing key by using a <ph id="ph1">&lt;xref:System.Security.Cryptography.CngProperty&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT">
          <source>The options set on the <ph id="ph1">&lt;xref:System.Security.Cryptography.CngProperty&gt;</ph> object must exactly match the options in the <ph id="ph2">&lt;xref:System.Security.Cryptography.CngKey.GetProperty%2A&gt;</ph> call.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the property will not be found.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>The key property to set.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>Gets parameters that control the user interface (UI) for accessing the key.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT">
          <source>The key UI policy is used with UI prompts such as smart card PIN prompts.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT">
          <source>This policy also controls password dialog boxes for protected keys.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>An object that contains configuration parameters for displaying the UI.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>Gets the unique name for the key.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property gets an alternate name that can be used when accessing the key.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use this property if the original key name does not uniquely identify the persisted key.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider%2A&gt;</ph> property will return the file name of the key as this property.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT">
          <source>The name returned by the <ph id="ph1">&lt;xref:System.Security.Cryptography.CngProvider.MicrosoftSmartCardKeyStorageProvider%2A&gt;</ph> is implementation-dependent.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>An alternate name for the key.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>If the key is ephemeral, the value is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>