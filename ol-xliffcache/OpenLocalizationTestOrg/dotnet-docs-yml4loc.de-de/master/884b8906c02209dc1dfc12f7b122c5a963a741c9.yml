### YamlMime:ManagedReference
items:
- uid: System.Runtime.Remoting.Lifetime.LeaseState
  commentId: T:System.Runtime.Remoting.Lifetime.LeaseState
  id: LeaseState
  children:
  - System.Runtime.Remoting.Lifetime.LeaseState.Active
  - System.Runtime.Remoting.Lifetime.LeaseState.Expired
  - System.Runtime.Remoting.Lifetime.LeaseState.Initial
  - System.Runtime.Remoting.Lifetime.LeaseState.Null
  - System.Runtime.Remoting.Lifetime.LeaseState.Renewing
  langs:
  - csharp
  name: LeaseState
  nameWithType: LeaseState
  fullName: System.Runtime.Remoting.Lifetime.LeaseState
  type: Enum
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Lifetime
  summary: Indicates the possible lease states of a lifetime lease.
  remarks: The <xref:System.Runtime.Remoting.Lifetime.ILease.CurrentState%2A> property returns the lease status for a lease.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public enum LeaseState
  inheritance:
  - System.Object
  - System.ValueType
  - System.Enum
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Lifetime/LeaseState.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Remoting.Lifetime.LeaseState.Active
  commentId: F:System.Runtime.Remoting.Lifetime.LeaseState.Active
  id: Active
  parent: System.Runtime.Remoting.Lifetime.LeaseState
  langs:
  - csharp
  name: Active
  nameWithType: LeaseState.Active
  fullName: LeaseState.Active
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Lifetime
  summary: The lease is active and has not expired.
  syntax:
    content: Active
    return:
      type: System.Runtime.Remoting.Lifetime.LeaseState
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Lifetime/LeaseState.xml
- uid: System.Runtime.Remoting.Lifetime.LeaseState.Expired
  commentId: F:System.Runtime.Remoting.Lifetime.LeaseState.Expired
  id: Expired
  parent: System.Runtime.Remoting.Lifetime.LeaseState
  langs:
  - csharp
  name: Expired
  nameWithType: LeaseState.Expired
  fullName: LeaseState.Expired
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Lifetime
  summary: The lease has expired and cannot be renewed.
  syntax:
    content: Expired
    return:
      type: System.Runtime.Remoting.Lifetime.LeaseState
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Lifetime/LeaseState.xml
- uid: System.Runtime.Remoting.Lifetime.LeaseState.Initial
  commentId: F:System.Runtime.Remoting.Lifetime.LeaseState.Initial
  id: Initial
  parent: System.Runtime.Remoting.Lifetime.LeaseState
  langs:
  - csharp
  name: Initial
  nameWithType: LeaseState.Initial
  fullName: LeaseState.Initial
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Lifetime
  summary: The lease has been created, but is not yet active.
  syntax:
    content: Initial
    return:
      type: System.Runtime.Remoting.Lifetime.LeaseState
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Lifetime/LeaseState.xml
- uid: System.Runtime.Remoting.Lifetime.LeaseState.Null
  commentId: F:System.Runtime.Remoting.Lifetime.LeaseState.Null
  id: "Null"
  parent: System.Runtime.Remoting.Lifetime.LeaseState
  langs:
  - csharp
  name: "Null"
  nameWithType: LeaseState.Null
  fullName: LeaseState.Null
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Lifetime
  summary: The lease is not initialized.
  syntax:
    content: "Null"
    return:
      type: System.Runtime.Remoting.Lifetime.LeaseState
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Lifetime/LeaseState.xml
- uid: System.Runtime.Remoting.Lifetime.LeaseState.Renewing
  commentId: F:System.Runtime.Remoting.Lifetime.LeaseState.Renewing
  id: Renewing
  parent: System.Runtime.Remoting.Lifetime.LeaseState
  langs:
  - csharp
  name: Renewing
  nameWithType: LeaseState.Renewing
  fullName: LeaseState.Renewing
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Lifetime
  summary: The lease has expired and is seeking sponsorship.
  syntax:
    content: Renewing
    return:
      type: System.Runtime.Remoting.Lifetime.LeaseState
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Lifetime/LeaseState.xml
references:
- uid: System.Enum
  parent: System
  isExternal: false
  name: Enum
  nameWithType: Enum
  fullName: System.Enum
- uid: System.Runtime.Remoting.Lifetime.LeaseState.Active
  parent: System.Runtime.Remoting.Lifetime.LeaseState
  isExternal: false
  name: Active
  nameWithType: LeaseState.Active
  fullName: LeaseState.Active
- uid: System.Runtime.Remoting.Lifetime.LeaseState
  parent: System.Runtime.Remoting.Lifetime
  isExternal: false
  name: LeaseState
  nameWithType: LeaseState
  fullName: System.Runtime.Remoting.Lifetime.LeaseState
- uid: System.Runtime.Remoting.Lifetime.LeaseState.Expired
  parent: System.Runtime.Remoting.Lifetime.LeaseState
  isExternal: false
  name: Expired
  nameWithType: LeaseState.Expired
  fullName: LeaseState.Expired
- uid: System.Runtime.Remoting.Lifetime.LeaseState.Initial
  parent: System.Runtime.Remoting.Lifetime.LeaseState
  isExternal: false
  name: Initial
  nameWithType: LeaseState.Initial
  fullName: LeaseState.Initial
- uid: System.Runtime.Remoting.Lifetime.LeaseState.Null
  parent: System.Runtime.Remoting.Lifetime.LeaseState
  isExternal: false
  name: "Null"
  nameWithType: LeaseState.Null
  fullName: LeaseState.Null
- uid: System.Runtime.Remoting.Lifetime.LeaseState.Renewing
  parent: System.Runtime.Remoting.Lifetime.LeaseState
  isExternal: false
  name: Renewing
  nameWithType: LeaseState.Renewing
  fullName: LeaseState.Renewing
