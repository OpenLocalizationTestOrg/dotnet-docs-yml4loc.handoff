{"nodes":[{"content":"Encapsulates a single record in the event log. This class cannot be inherited.","nodes":[{"pos":[0,78],"content":"Encapsulates a single record in the event log. This class cannot be inherited.","nodes":[{"content":"Encapsulates a single record in the event log. This class cannot be inherited.","pos":[0,78],"nodes":[{"content":"Encapsulates a single record in the event log.","pos":[0,46]},{"content":"This class cannot be inherited.","pos":[47,78]}]}]}],"pos":[1284,1363],"yaml":true},{"content":"You usually will not create instances of <xref:System.Diagnostics.EventLogEntry> directly when working with the <xref:System.Diagnostics.EventLog> class. The <xref:System.Diagnostics.EventLog.Entries%2A> member of the <xref:System.Diagnostics.EventLog> class contains a collection of <xref:System.Diagnostics.EventLogEntry> instances, which you iterate over when reading by using the <xref:System.Diagnostics.EventLogEntryCollection.Item%2A?displayProperty=fullName> class index member.  \n  \n> [!IMPORTANT]\n>  This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic.","nodes":[{"pos":[0,486],"content":"You usually will not create instances of <xref:System.Diagnostics.EventLogEntry> directly when working with the <xref:System.Diagnostics.EventLog> class. The <xref:System.Diagnostics.EventLog.Entries%2A> member of the <xref:System.Diagnostics.EventLog> class contains a collection of <xref:System.Diagnostics.EventLogEntry> instances, which you iterate over when reading by using the <xref:System.Diagnostics.EventLogEntryCollection.Item%2A?displayProperty=fullName> class index member.","nodes":[{"content":"You usually will not create instances of <xref:System.Diagnostics.EventLogEntry> directly when working with the <xref:System.Diagnostics.EventLog> class. The <xref:System.Diagnostics.EventLog.Entries%2A> member of the <xref:System.Diagnostics.EventLog> class contains a collection of <xref:System.Diagnostics.EventLogEntry> instances, which you iterate over when reading by using the <xref:System.Diagnostics.EventLogEntryCollection.Item%2A?displayProperty=fullName> class index member.","pos":[0,486],"nodes":[{"content":"You usually will not create instances of <ph id=\"ph1\">&lt;xref:System.Diagnostics.EventLogEntry&gt;</ph> directly when working with the <ph id=\"ph2\">&lt;xref:System.Diagnostics.EventLog&gt;</ph> class.","pos":[0,153],"source":"You usually will not create instances of <xref:System.Diagnostics.EventLogEntry> directly when working with the <xref:System.Diagnostics.EventLog> class."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Diagnostics.EventLog.Entries%2A&gt;</ph> member of the <ph id=\"ph2\">&lt;xref:System.Diagnostics.EventLog&gt;</ph> class contains a collection of <ph id=\"ph3\">&lt;xref:System.Diagnostics.EventLogEntry&gt;</ph> instances, which you iterate over when reading by using the <ph id=\"ph4\">&lt;xref:System.Diagnostics.EventLogEntryCollection.Item%2A?displayProperty=fullName&gt;</ph> class index member.","pos":[154,486],"source":" The <xref:System.Diagnostics.EventLog.Entries%2A> member of the <xref:System.Diagnostics.EventLog> class contains a collection of <xref:System.Diagnostics.EventLogEntry> instances, which you iterate over when reading by using the <xref:System.Diagnostics.EventLogEntryCollection.Item%2A?displayProperty=fullName> class index member."}]}]},{"pos":[494,1020],"content":"[!IMPORTANT]\n This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic.","leadings":["","> "],"nodes":[{"content":" This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic.","pos":[13,524],"nodes":[{"content":"This type implements the <ph id=\"ph1\">&lt;xref:System.IDisposable&gt;</ph> interface.","pos":[1,62],"source":" This type implements the <xref:System.IDisposable> interface."},{"content":"When you have finished using the type, you should dispose of it either directly or indirectly.","pos":[63,157]},{"content":"To dispose of the type directly, call its <ph id=\"ph1\">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method in a <ph id=\"ph2\">`try`</ph><ph id=\"ph3\">/</ph><ph id=\"ph4\">`catch`</ph> block.","pos":[158,269],"source":" To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block."},{"content":"To dispose of it indirectly, use a language construct such as <ph id=\"ph1\">`using`</ph> (in C#) or <ph id=\"ph2\">`Using`</ph> (in Visual Basic).","pos":[270,377],"source":" To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic)."},{"content":"For more information, see the \"Using an Object that Implements IDisposable\" section in the <ph id=\"ph1\">&lt;xref:System.IDisposable&gt;</ph> interface topic.","pos":[378,511],"source":" For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic."}]}]}],"pos":[1374,2402],"yaml":true,"extradata":"MT"},{"content":"Gets the text associated with the <xref href=\"System.Diagnostics.EventLogEntry.CategoryNumber\"></xref> property for this entry.","nodes":[{"pos":[0,127],"content":"Gets the text associated with the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.EventLogEntry.CategoryNumber\"&gt;&lt;/xref&gt;</ph> property for this entry.","source":"Gets the text associated with the <xref href=\"System.Diagnostics.EventLogEntry.CategoryNumber\"></xref> property for this entry."}],"pos":[5339,5467],"yaml":true},{"content":"Each application (event source) can define its own numbered categories and the text strings to which they are mapped. The Event Viewer can use the category to filter events in the log.","nodes":[{"pos":[0,184],"content":"Each application (event source) can define its own numbered categories and the text strings to which they are mapped. The Event Viewer can use the category to filter events in the log.","nodes":[{"content":"Each application (event source) can define its own numbered categories and the text strings to which they are mapped. The Event Viewer can use the category to filter events in the log.","pos":[0,184],"nodes":[{"content":"Each application (event source) can define its own numbered categories and the text strings to which they are mapped.","pos":[0,117]},{"content":"The Event Viewer can use the category to filter events in the log.","pos":[118,184]}]}]}],"pos":[5478,5663],"yaml":true,"extradata":"MT"},{"content":"The application-specific category text.","nodes":[{"pos":[0,39],"content":"The application-specific category text.","nodes":[{"content":"The application-specific category text.","pos":[0,39]}]}],"pos":[5775,5815],"yaml":true},{"content":"The space could not be allocated for one of the insertion strings associated with the category.","nodes":[{"pos":[0,95],"content":"The space could not be allocated for one of the insertion strings associated with the category.","nodes":[{"content":"The space could not be allocated for one of the insertion strings associated with the category.","pos":[0,95]}]}],"pos":[5962,6058],"yaml":true},{"content":"Gets the category number of the event log entry.","nodes":[{"pos":[0,48],"content":"Gets the category number of the event log entry.","nodes":[{"content":"Gets the category number of the event log entry.","pos":[0,48]}]}],"pos":[7039,7088],"yaml":true},{"content":"Each application (event source) can define its own numbered categories and the text strings to which they are mapped. The Event Viewer can use the category to filter events in the log. The categories must be numbered consecutively beginning with the number 1. The category number is specified by the <xref:System.Diagnostics.EventInstance.CategoryId%2A?displayProperty=fullName> property. The Event Viewer can display the category as a numeric value, or it can use the category as a resource identifier to display a localized category string. For more information, see <xref:System.Diagnostics.EventInstance>.","nodes":[{"pos":[0,609],"content":"Each application (event source) can define its own numbered categories and the text strings to which they are mapped. The Event Viewer can use the category to filter events in the log. The categories must be numbered consecutively beginning with the number 1. The category number is specified by the <xref:System.Diagnostics.EventInstance.CategoryId%2A?displayProperty=fullName> property. The Event Viewer can display the category as a numeric value, or it can use the category as a resource identifier to display a localized category string. For more information, see <xref:System.Diagnostics.EventInstance>.","nodes":[{"content":"Each application (event source) can define its own numbered categories and the text strings to which they are mapped. The Event Viewer can use the category to filter events in the log. The categories must be numbered consecutively beginning with the number 1. The category number is specified by the <xref:System.Diagnostics.EventInstance.CategoryId%2A?displayProperty=fullName> property. The Event Viewer can display the category as a numeric value, or it can use the category as a resource identifier to display a localized category string. For more information, see <xref:System.Diagnostics.EventInstance>.","pos":[0,609],"nodes":[{"content":"Each application (event source) can define its own numbered categories and the text strings to which they are mapped.","pos":[0,117]},{"content":"The Event Viewer can use the category to filter events in the log.","pos":[118,184]},{"content":"The categories must be numbered consecutively beginning with the number 1.","pos":[185,259]},{"content":"The category number is specified by the <ph id=\"ph1\">&lt;xref:System.Diagnostics.EventInstance.CategoryId%2A?displayProperty=fullName&gt;</ph> property.","pos":[260,388],"source":" The category number is specified by the <xref:System.Diagnostics.EventInstance.CategoryId%2A?displayProperty=fullName> property."},{"content":"The Event Viewer can display the category as a numeric value, or it can use the category as a resource identifier to display a localized category string.","pos":[389,542]},{"content":"For more information, see <ph id=\"ph1\">&lt;xref:System.Diagnostics.EventInstance&gt;</ph>.","pos":[543,609],"source":" For more information, see <xref:System.Diagnostics.EventInstance>."}]}]}],"pos":[7099,7709],"yaml":true,"extradata":"MT"},{"content":"The application-specific category number for this entry.","nodes":[{"pos":[0,56],"content":"The application-specific category number for this entry.","nodes":[{"content":"The application-specific category number for this entry.","pos":[0,56]}]}],"pos":[7825,7882],"yaml":true},{"content":"Gets the binary data associated with the entry.","nodes":[{"pos":[0,47],"content":"Gets the binary data associated with the entry.","nodes":[{"content":"Gets the binary data associated with the entry.","pos":[0,47]}]}],"pos":[8881,8929],"yaml":true},{"content":"Getting this property creates an array that holds a copy of the entry's event-specific binary data, which the Event Viewer displays in combined hexadecimal and text format. Event-specific data is sometimes used to store information that the application will process independently of the Event Viewer, for example, to make reports from the log file.","nodes":[{"pos":[0,348],"content":"Getting this property creates an array that holds a copy of the entry's event-specific binary data, which the Event Viewer displays in combined hexadecimal and text format. Event-specific data is sometimes used to store information that the application will process independently of the Event Viewer, for example, to make reports from the log file.","nodes":[{"content":"Getting this property creates an array that holds a copy of the entry's event-specific binary data, which the Event Viewer displays in combined hexadecimal and text format. Event-specific data is sometimes used to store information that the application will process independently of the Event Viewer, for example, to make reports from the log file.","pos":[0,348],"nodes":[{"content":"Getting this property creates an array that holds a copy of the entry's event-specific binary data, which the Event Viewer displays in combined hexadecimal and text format.","pos":[0,172]},{"content":"Event-specific data is sometimes used to store information that the application will process independently of the Event Viewer, for example, to make reports from the log file.","pos":[173,348]}]}]}],"pos":[8940,9289],"yaml":true,"extradata":"MT"},{"content":"An array of bytes that holds the binary data associated with the entry.","nodes":[{"pos":[0,71],"content":"An array of bytes that holds the binary data associated with the entry.","nodes":[{"content":"An array of bytes that holds the binary data associated with the entry.","pos":[0,71]}]}],"pos":[9397,9469],"yaml":true},{"content":"Gets the event type of this entry.","nodes":[{"pos":[0,34],"content":"Gets the event type of this entry.","nodes":[{"content":"Gets the event type of this entry.","pos":[0,34]}]}],"pos":[10488,10523],"yaml":true},{"content":"All event types have well-defined common data and can optionally include event-specific data. Each event is of a single type, which the application indicates when it reports the event. The Event Viewer uses the event type to determine which icon to display in the list view of the event log.","nodes":[{"pos":[0,291],"content":"All event types have well-defined common data and can optionally include event-specific data. Each event is of a single type, which the application indicates when it reports the event. The Event Viewer uses the event type to determine which icon to display in the list view of the event log.","nodes":[{"content":"All event types have well-defined common data and can optionally include event-specific data. Each event is of a single type, which the application indicates when it reports the event. The Event Viewer uses the event type to determine which icon to display in the list view of the event log.","pos":[0,291],"nodes":[{"content":"All event types have well-defined common data and can optionally include event-specific data.","pos":[0,93]},{"content":"Each event is of a single type, which the application indicates when it reports the event.","pos":[94,184]},{"content":"The Event Viewer uses the event type to determine which icon to display in the list view of the event log.","pos":[185,291]}]}]}],"pos":[10534,10826],"yaml":true,"extradata":"MT"},{"content":"The event type that is associated with the entry in the event log.","nodes":[{"pos":[0,66],"content":"The event type that is associated with the entry in the event log.","nodes":[{"content":"The event type that is associated with the entry in the event log.","pos":[0,66]}]}],"pos":[11773,11840],"yaml":true},{"content":"Performs a comparison between two event log entries.","nodes":[{"pos":[0,52],"content":"Performs a comparison between two event log entries.","nodes":[{"content":"Performs a comparison between two event log entries.","pos":[0,52]}]}],"pos":[12991,13044],"yaml":true},{"content":"This method performs a byte-by-byte comparison between the two objects. It does not determine whether the two <xref:System.Diagnostics.EventLogEntry> instances refer to the same object.","nodes":[{"pos":[0,185],"content":"This method performs a byte-by-byte comparison between the two objects. It does not determine whether the two <xref:System.Diagnostics.EventLogEntry> instances refer to the same object.","nodes":[{"content":"This method performs a byte-by-byte comparison between the two objects. It does not determine whether the two <xref:System.Diagnostics.EventLogEntry> instances refer to the same object.","pos":[0,185],"nodes":[{"content":"This method performs a byte-by-byte comparison between the two objects.","pos":[0,71]},{"content":"It does not determine whether the two <ph id=\"ph1\">&lt;xref:System.Diagnostics.EventLogEntry&gt;</ph> instances refer to the same object.","pos":[72,185],"source":" It does not determine whether the two <xref:System.Diagnostics.EventLogEntry> instances refer to the same object."}]}]}],"pos":[13055,13241],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Diagnostics.EventLogEntry\"></xref> to compare.","nodes":[{"pos":[0,69],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.EventLogEntry\"&gt;&lt;/xref&gt;</ph> to compare.","source":"The <xref href=\"System.Diagnostics.EventLogEntry\"></xref> to compare."}],"pos":[13431,13501],"yaml":true},{"content":"`true` if the <xref href=\"System.Diagnostics.EventLogEntry\"></xref> objects are identical; otherwise, `false`.","nodes":[{"pos":[0,110],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Diagnostics.EventLogEntry\"&gt;&lt;/xref&gt;</ph> objects are identical; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.Diagnostics.EventLogEntry\"></xref> objects are identical; otherwise, `false`."}],"pos":[13559,13672],"yaml":true},{"content":"Gets the application-specific event identifier for the current event entry.","nodes":[{"pos":[0,75],"content":"Gets the application-specific event identifier for the current event entry.","nodes":[{"content":"Gets the application-specific event identifier for the current event entry.","pos":[0,75]}]}],"pos":[14664,14740],"yaml":true},{"content":"This value represents the event identifier for the entry in the event log, with the top two bits masked off. The <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> property for an event log entry represents the full 32-bit resource identifier for the event in the message resource file for the event source. Two event log entries from the same source can have matching <xref:System.Diagnostics.EventLogEntry.EventID%2A> values, but have different <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> values due to differences in the top two bits of the event identifier.  \n  \n If the application wrote the event entry using one of the <xref:System.Diagnostics.EventLog.WriteEntry%2A> methods, the <xref:System.Diagnostics.EventLogEntry.EventID%2A> property matches the optional `eventId` parameter. If the application wrote the event using <xref:System.Diagnostics.EventLog.WriteEvent%2A> or the Win32 API `ReportEvent`, the <xref:System.Diagnostics.EventLogEntry.EventID%2A> property matches the resource identifier for the event, with the top two bits masked off.","nodes":[{"pos":[0,574],"content":"This value represents the event identifier for the entry in the event log, with the top two bits masked off. The <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> property for an event log entry represents the full 32-bit resource identifier for the event in the message resource file for the event source. Two event log entries from the same source can have matching <xref:System.Diagnostics.EventLogEntry.EventID%2A> values, but have different <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> values due to differences in the top two bits of the event identifier.","nodes":[{"content":"This value represents the event identifier for the entry in the event log, with the top two bits masked off. The <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> property for an event log entry represents the full 32-bit resource identifier for the event in the message resource file for the event source. Two event log entries from the same source can have matching <xref:System.Diagnostics.EventLogEntry.EventID%2A> values, but have different <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> values due to differences in the top two bits of the event identifier.","pos":[0,574],"nodes":[{"content":"This value represents the event identifier for the entry in the event log, with the top two bits masked off.","pos":[0,108]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Diagnostics.EventLogEntry.InstanceId%2A&gt;</ph> property for an event log entry represents the full 32-bit resource identifier for the event in the message resource file for the event source.","pos":[109,310],"source":" The <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> property for an event log entry represents the full 32-bit resource identifier for the event in the message resource file for the event source."},{"content":"Two event log entries from the same source can have matching <ph id=\"ph1\">&lt;xref:System.Diagnostics.EventLogEntry.EventID%2A&gt;</ph> values, but have different <ph id=\"ph2\">&lt;xref:System.Diagnostics.EventLogEntry.InstanceId%2A&gt;</ph> values due to differences in the top two bits of the event identifier.","pos":[311,574],"source":" Two event log entries from the same source can have matching <xref:System.Diagnostics.EventLogEntry.EventID%2A> values, but have different <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> values due to differences in the top two bits of the event identifier."}]}]},{"pos":[581,1069],"content":"If the application wrote the event entry using one of the <xref:System.Diagnostics.EventLog.WriteEntry%2A> methods, the <xref:System.Diagnostics.EventLogEntry.EventID%2A> property matches the optional `eventId` parameter. If the application wrote the event using <xref:System.Diagnostics.EventLog.WriteEvent%2A> or the Win32 API `ReportEvent`, the <xref:System.Diagnostics.EventLogEntry.EventID%2A> property matches the resource identifier for the event, with the top two bits masked off.","nodes":[{"content":"If the application wrote the event entry using one of the <ph id=\"ph1\">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph> methods, the <ph id=\"ph2\">&lt;xref:System.Diagnostics.EventLogEntry.EventID%2A&gt;</ph> property matches the optional <ph id=\"ph3\">`eventId`</ph> parameter.","pos":[0,221],"source":"If the application wrote the event entry using one of the <xref:System.Diagnostics.EventLog.WriteEntry%2A> methods, the <xref:System.Diagnostics.EventLogEntry.EventID%2A> property matches the optional `eventId` parameter."},{"content":"If the application wrote the event using <ph id=\"ph1\">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph> or the Win32 API <ph id=\"ph2\">`ReportEvent`</ph>, the <ph id=\"ph3\">&lt;xref:System.Diagnostics.EventLogEntry.EventID%2A&gt;</ph> property matches the resource identifier for the event, with the top two bits masked off.","pos":[222,488],"source":" If the application wrote the event using <xref:System.Diagnostics.EventLog.WriteEvent%2A> or the Win32 API `ReportEvent`, the <xref:System.Diagnostics.EventLogEntry.EventID%2A> property matches the resource identifier for the event, with the top two bits masked off."}]}],"pos":[14751,15825],"yaml":true,"extradata":"MT"},{"content":"The application-specific identifier for the event message.","nodes":[{"pos":[0,58],"content":"The application-specific identifier for the event message.","nodes":[{"content":"The application-specific identifier for the event message.","pos":[0,58]}]}],"pos":[15984,16043],"yaml":true},{"content":"Gets the index of this entry in the event log.","nodes":[{"pos":[0,46],"content":"Gets the index of this entry in the event log.","nodes":[{"content":"Gets the index of this entry in the event log.","pos":[0,46]}]}],"pos":[17073,17120],"yaml":true},{"content":"This number is not necessarily zero-based.","nodes":[{"pos":[0,42],"content":"This number is not necessarily zero-based.","nodes":[{"content":"This number is not necessarily zero-based.","pos":[0,42]}]}],"pos":[17131,17174],"yaml":true,"extradata":"MT"},{"content":"The index of this entry in the event log.","nodes":[{"pos":[0,41],"content":"The index of this entry in the event log.","nodes":[{"content":"The index of this entry in the event log.","pos":[0,41]}]}],"pos":[17279,17321],"yaml":true},{"content":"Gets the resource identifier that designates the message text of the event entry.","nodes":[{"pos":[0,81],"content":"Gets the resource identifier that designates the message text of the event entry.","nodes":[{"content":"Gets the resource identifier that designates the message text of the event entry.","pos":[0,81]}]}],"pos":[18347,18429],"yaml":true},{"content":"The <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> property uniquely identifies an event entry for a configured event source. The <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> for an event log entry represents the full 32-bit resource identifier for the event in the message resource file for the event source. The <xref:System.Diagnostics.EventLogEntry.EventID%2A> property equals the <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> with the top two bits masked off. Two event log entries from the same source can have matching <xref:System.Diagnostics.EventLogEntry.EventID%2A> values, but have different <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> values due to differences in the top two bits of the resource identifier.  \n  \n If the application wrote the event entry using one of the <xref:System.Diagnostics.EventLog.WriteEntry%2A> methods, the <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> property matches the optional `eventId` parameter. If the application wrote the event using <xref:System.Diagnostics.EventLog.WriteEvent%2A>, the <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> property matches the resource identifier specified in the <xref:System.Diagnostics.EventInstance.InstanceId%2A> of the `instance` parameter. If the application wrote the event using the Win32 API `ReportEvent`, the <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> property matches the resource identifier specified in the `dwEventID` parameter.  \n  \n For details about defining event messages and building event log resource files, see the \"Message Compiler\" topic in the Platform SDK documentation at [http://msdn.microsoft.com](http://msdn.microsoft.com/). For details about event log identifiers, see the \"Event Identifiers\" topic in the Platform SDK.","nodes":[{"pos":[0,755],"content":"The <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> property uniquely identifies an event entry for a configured event source. The <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> for an event log entry represents the full 32-bit resource identifier for the event in the message resource file for the event source. The <xref:System.Diagnostics.EventLogEntry.EventID%2A> property equals the <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> with the top two bits masked off. Two event log entries from the same source can have matching <xref:System.Diagnostics.EventLogEntry.EventID%2A> values, but have different <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> values due to differences in the top two bits of the resource identifier.","nodes":[{"content":"The <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> property uniquely identifies an event entry for a configured event source. The <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> for an event log entry represents the full 32-bit resource identifier for the event in the message resource file for the event source. The <xref:System.Diagnostics.EventLogEntry.EventID%2A> property equals the <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> with the top two bits masked off. Two event log entries from the same source can have matching <xref:System.Diagnostics.EventLogEntry.EventID%2A> values, but have different <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> values due to differences in the top two bits of the resource identifier.","pos":[0,755],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Diagnostics.EventLogEntry.InstanceId%2A&gt;</ph> property uniquely identifies an event entry for a configured event source.","pos":[0,132],"source":"The <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> property uniquely identifies an event entry for a configured event source."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Diagnostics.EventLogEntry.InstanceId%2A&gt;</ph> for an event log entry represents the full 32-bit resource identifier for the event in the message resource file for the event source.","pos":[133,325],"source":" The <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> for an event log entry represents the full 32-bit resource identifier for the event in the message resource file for the event source."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Diagnostics.EventLogEntry.EventID%2A&gt;</ph> property equals the <ph id=\"ph2\">&lt;xref:System.Diagnostics.EventLogEntry.InstanceId%2A&gt;</ph> with the top two bits masked off.","pos":[326,488],"source":" The <xref:System.Diagnostics.EventLogEntry.EventID%2A> property equals the <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> with the top two bits masked off."},{"content":"Two event log entries from the same source can have matching <ph id=\"ph1\">&lt;xref:System.Diagnostics.EventLogEntry.EventID%2A&gt;</ph> values, but have different <ph id=\"ph2\">&lt;xref:System.Diagnostics.EventLogEntry.InstanceId%2A&gt;</ph> values due to differences in the top two bits of the resource identifier.","pos":[489,755],"source":" Two event log entries from the same source can have matching <xref:System.Diagnostics.EventLogEntry.EventID%2A> values, but have different <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> values due to differences in the top two bits of the resource identifier."}]}]},{"pos":[762,1485],"content":"If the application wrote the event entry using one of the <xref:System.Diagnostics.EventLog.WriteEntry%2A> methods, the <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> property matches the optional `eventId` parameter. If the application wrote the event using <xref:System.Diagnostics.EventLog.WriteEvent%2A>, the <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> property matches the resource identifier specified in the <xref:System.Diagnostics.EventInstance.InstanceId%2A> of the `instance` parameter. If the application wrote the event using the Win32 API `ReportEvent`, the <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> property matches the resource identifier specified in the `dwEventID` parameter.","nodes":[{"content":"If the application wrote the event entry using one of the <ph id=\"ph1\">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph> methods, the <ph id=\"ph2\">&lt;xref:System.Diagnostics.EventLogEntry.InstanceId%2A&gt;</ph> property matches the optional <ph id=\"ph3\">`eventId`</ph> parameter.","pos":[0,224],"source":"If the application wrote the event entry using one of the <xref:System.Diagnostics.EventLog.WriteEntry%2A> methods, the <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> property matches the optional `eventId` parameter."},{"content":"If the application wrote the event using <ph id=\"ph1\">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph>, the <ph id=\"ph2\">&lt;xref:System.Diagnostics.EventLogEntry.InstanceId%2A&gt;</ph> property matches the resource identifier specified in the <ph id=\"ph3\">&lt;xref:System.Diagnostics.EventInstance.InstanceId%2A&gt;</ph> of the <ph id=\"ph4\">`instance`</ph> parameter.","pos":[225,514],"source":" If the application wrote the event using <xref:System.Diagnostics.EventLog.WriteEvent%2A>, the <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> property matches the resource identifier specified in the <xref:System.Diagnostics.EventInstance.InstanceId%2A> of the `instance` parameter."},{"content":"If the application wrote the event using the Win32 API <ph id=\"ph1\">`ReportEvent`</ph>, the <ph id=\"ph2\">&lt;xref:System.Diagnostics.EventLogEntry.InstanceId%2A&gt;</ph> property matches the resource identifier specified in the <ph id=\"ph3\">`dwEventID`</ph> parameter.","pos":[515,723],"source":" If the application wrote the event using the Win32 API `ReportEvent`, the <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> property matches the resource identifier specified in the `dwEventID` parameter."}]},{"pos":[1492,1795],"content":"For details about defining event messages and building event log resource files, see the \"Message Compiler\" topic in the Platform SDK documentation at [http://msdn.microsoft.com](http://msdn.microsoft.com/). For details about event log identifiers, see the \"Event Identifiers\" topic in the Platform SDK.","nodes":[{"content":"For details about defining event messages and building event log resource files, see the \"Message Compiler\" topic in the Platform SDK documentation at <bpt id=\"p1\">[</bpt>http://msdn.microsoft.com<ept id=\"p1\">](http://msdn.microsoft.com/)</ept>.","pos":[0,207],"source":"For details about defining event messages and building event log resource files, see the \"Message Compiler\" topic in the Platform SDK documentation at [http://msdn.microsoft.com](http://msdn.microsoft.com/)."},{"content":"For details about event log identifiers, see the \"Event Identifiers\" topic in the Platform SDK.","pos":[208,303]}]}],"pos":[18440,20246],"yaml":true,"extradata":"MT"},{"content":"A resource identifier that corresponds to a string definition in the message resource file of the event source.","nodes":[{"pos":[0,111],"content":"A resource identifier that corresponds to a string definition in the message resource file of the event source.","nodes":[{"content":"A resource identifier that corresponds to a string definition in the message resource file of the event source.","pos":[0,111]}]}],"pos":[21214,21326],"yaml":true},{"content":"Gets the name of the computer on which this entry was generated.","nodes":[{"pos":[0,64],"content":"Gets the name of the computer on which this entry was generated.","nodes":[{"content":"Gets the name of the computer on which this entry was generated.","pos":[0,64]}]}],"pos":[22421,22486],"yaml":true},{"content":"The name of the computer that contains the event log.","nodes":[{"pos":[0,53],"content":"The name of the computer that contains the event log.","nodes":[{"content":"The name of the computer that contains the event log.","pos":[0,53]}]}],"pos":[22601,22655],"yaml":true},{"content":"Gets the localized message associated with this event entry.","nodes":[{"pos":[0,60],"content":"Gets the localized message associated with this event entry.","nodes":[{"content":"Gets the localized message associated with this event entry.","pos":[0,60]}]}],"pos":[23669,23730],"yaml":true},{"content":"Getting this property opens the registry to determine the file name of the .dll file that contains the localized text. If you receive a registry error when testing your source code, verify that the .dll file exists on the computer. If insertion strings are included in the message, catch errors in their allocation.","nodes":[{"pos":[0,315],"content":"Getting this property opens the registry to determine the file name of the .dll file that contains the localized text. If you receive a registry error when testing your source code, verify that the .dll file exists on the computer. If insertion strings are included in the message, catch errors in their allocation.","nodes":[{"content":"Getting this property opens the registry to determine the file name of the .dll file that contains the localized text. If you receive a registry error when testing your source code, verify that the .dll file exists on the computer. If insertion strings are included in the message, catch errors in their allocation.","pos":[0,315],"nodes":[{"content":"Getting this property opens the registry to determine the file name of the .dll file that contains the localized text.","pos":[0,118]},{"content":"If you receive a registry error when testing your source code, verify that the .dll file exists on the computer.","pos":[119,231]},{"content":"If insertion strings are included in the message, catch errors in their allocation.","pos":[232,315]}]}]}],"pos":[23741,24057],"yaml":true,"extradata":"MT"},{"content":"The formatted, localized text for the message. This includes associated replacement strings.","nodes":[{"pos":[0,92],"content":"The formatted, localized text for the message. This includes associated replacement strings.","nodes":[{"content":"The formatted, localized text for the message. This includes associated replacement strings.","pos":[0,92],"nodes":[{"content":"The formatted, localized text for the message.","pos":[0,46]},{"content":"This includes associated replacement strings.","pos":[47,92]}]}]}],"pos":[24168,24261],"yaml":true},{"content":"The space could not be allocated for one of the insertion strings associated with the message.","nodes":[{"pos":[0,94],"content":"The space could not be allocated for one of the insertion strings associated with the message.","nodes":[{"content":"The space could not be allocated for one of the insertion strings associated with the message.","pos":[0,94]}]}],"pos":[24407,24502],"yaml":true},{"content":"Gets the replacement strings associated with the event log entry.","nodes":[{"pos":[0,65],"content":"Gets the replacement strings associated with the event log entry.","nodes":[{"content":"Gets the replacement strings associated with the event log entry.","pos":[0,65]}]}],"pos":[25507,25573],"yaml":true},{"content":"This property retrieves only the replacement strings for the entry. To retrieve the full message, read the <xref:System.Diagnostics.EventLogEntry.Message%2A> property.  \n  \n The <xref:System.Diagnostics.EventLogEntry.ReplacementStrings%2A> property contains the localized versions of replacement strings that are used in the event log entry. If you provide resource files that contain strings in each target language for your application, you can emit event log messages in the language that is used on that computer. To do that, create an instance of the <xref:System.Resources.ResourceManager> class for the resource assembly that contains your replacement strings. The first parameter of the <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29> constructor identifies the resource assembly to be used. Use the <xref:System.Resources.ResourceManager.GetString%2A> method of that instance to supply localized messages for log events. The following code automatically sets the message to the language for the current culture.  \n  \n```  \nResourceManager LocRM = new ResourceManager(\"ReplacementStrings.TestStrings\",   \n      typeof(Program).Assembly);  \nEventLog e1 = new EventLog(\"LocTest\", \"MyMachine\", \"LocTest\");  \n// Get the string associated with the current culture.  \ne1.WriteEntry(LocRM.GetString(\"strMessage\"),  \n   EventLogEntryType.Information);  \n```","nodes":[{"pos":[0,167],"content":"This property retrieves only the replacement strings for the entry. To retrieve the full message, read the <xref:System.Diagnostics.EventLogEntry.Message%2A> property.","nodes":[{"content":"This property retrieves only the replacement strings for the entry. To retrieve the full message, read the <xref:System.Diagnostics.EventLogEntry.Message%2A> property.","pos":[0,167],"nodes":[{"content":"This property retrieves only the replacement strings for the entry.","pos":[0,67]},{"content":"To retrieve the full message, read the <ph id=\"ph1\">&lt;xref:System.Diagnostics.EventLogEntry.Message%2A&gt;</ph> property.","pos":[68,167],"source":" To retrieve the full message, read the <xref:System.Diagnostics.EventLogEntry.Message%2A> property."}]}]},{"pos":[174,1068],"content":"The <xref:System.Diagnostics.EventLogEntry.ReplacementStrings%2A> property contains the localized versions of replacement strings that are used in the event log entry. If you provide resource files that contain strings in each target language for your application, you can emit event log messages in the language that is used on that computer. To do that, create an instance of the <xref:System.Resources.ResourceManager> class for the resource assembly that contains your replacement strings. The first parameter of the <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29> constructor identifies the resource assembly to be used. Use the <xref:System.Resources.ResourceManager.GetString%2A> method of that instance to supply localized messages for log events. The following code automatically sets the message to the language for the current culture.","nodes":[{"content":"The <xref:System.Diagnostics.EventLogEntry.ReplacementStrings%2A> property contains the localized versions of replacement strings that are used in the event log entry. If you provide resource files that contain strings in each target language for your application, you can emit event log messages in the language that is used on that computer. To do that, create an instance of the <xref:System.Resources.ResourceManager> class for the resource assembly that contains your replacement strings. The first parameter of the <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29> constructor identifies the resource assembly to be used. Use the <xref:System.Resources.ResourceManager.GetString%2A> method of that instance to supply localized messages for log events. The following code automatically sets the message to the language for the current culture.","pos":[0,894],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Diagnostics.EventLogEntry.ReplacementStrings%2A&gt;</ph> property contains the localized versions of replacement strings that are used in the event log entry.","pos":[0,167],"source":"The <xref:System.Diagnostics.EventLogEntry.ReplacementStrings%2A> property contains the localized versions of replacement strings that are used in the event log entry."},{"content":"If you provide resource files that contain strings in each target language for your application, you can emit event log messages in the language that is used on that computer.","pos":[168,343]},{"content":"To do that, create an instance of the <ph id=\"ph1\">&lt;xref:System.Resources.ResourceManager&gt;</ph> class for the resource assembly that contains your replacement strings.","pos":[344,493],"source":" To do that, create an instance of the <xref:System.Resources.ResourceManager> class for the resource assembly that contains your replacement strings."},{"content":"The first parameter of the <ph id=\"ph1\">&lt;xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29&gt;</ph> constructor identifies the resource assembly to be used.","pos":[494,673],"source":" The first parameter of the <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29> constructor identifies the resource assembly to be used."},{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Resources.ResourceManager.GetString%2A&gt;</ph> method of that instance to supply localized messages for log events.","pos":[674,803],"source":" Use the <xref:System.Resources.ResourceManager.GetString%2A> method of that instance to supply localized messages for log events."},{"content":"The following code automatically sets the message to the language for the current culture.","pos":[804,894]}]}]}],"pos":[25584,27013],"yaml":true,"extradata":"MT"},{"content":"An array that holds the replacement strings stored in the event entry.","nodes":[{"pos":[0,70],"content":"An array that holds the replacement strings stored in the event entry.","nodes":[{"content":"An array that holds the replacement strings stored in the event entry.","pos":[0,70]}]}],"pos":[27139,27210],"yaml":true},{"content":"Gets the name of the application that generated this event.","nodes":[{"pos":[0,59],"content":"Gets the name of the application that generated this event.","nodes":[{"content":"Gets the name of the application that generated this event.","pos":[0,59]}]}],"pos":[28225,28285],"yaml":true},{"content":"The event source indicates what logged the event. It is often the name of the application or the name of a subcomponent of the application if the application is large. Applications and services usually write to (and therefore are sources for) the Application log or a custom log. Device drivers usually write to the System log.","nodes":[{"pos":[0,327],"content":"The event source indicates what logged the event. It is often the name of the application or the name of a subcomponent of the application if the application is large. Applications and services usually write to (and therefore are sources for) the Application log or a custom log. Device drivers usually write to the System log.","nodes":[{"content":"The event source indicates what logged the event. It is often the name of the application or the name of a subcomponent of the application if the application is large. Applications and services usually write to (and therefore are sources for) the Application log or a custom log. Device drivers usually write to the System log.","pos":[0,327],"nodes":[{"content":"The event source indicates what logged the event.","pos":[0,49]},{"content":"It is often the name of the application or the name of a subcomponent of the application if the application is large.","pos":[50,167]},{"content":"Applications and services usually write to (and therefore are sources for) the Application log or a custom log.","pos":[168,279]},{"content":"Device drivers usually write to the System log.","pos":[280,327]}]}]}],"pos":[28296,28624],"yaml":true,"extradata":"MT"},{"content":"The name registered with the event log as the source of this event.","nodes":[{"pos":[0,67],"content":"The name registered with the event log as the source of this event.","nodes":[{"content":"The name registered with the event log as the source of this event.","pos":[0,67]}]}],"pos":[29558,29626],"yaml":true},{"content":"Gets the local time at which this event was generated.","nodes":[{"pos":[0,54],"content":"Gets the local time at which this event was generated.","nodes":[{"content":"Gets the local time at which this event was generated.","pos":[0,54]}]}],"pos":[30671,30726],"yaml":true},{"content":"This member holds the time that an event was generated. This might not be the same as the time when the event information was written to the event log. For the latter, read the <xref:System.Diagnostics.EventLogEntry.TimeWritten%2A> property.  \n  \n There is usually a lag between the time that an event is generated and the time it is logged. It is more important to know when the event was generated, unless you want to see if there is a significant lag in logging. That can happen if your log files are on a different server and you are experiencing a bottleneck.","nodes":[{"pos":[0,241],"content":"This member holds the time that an event was generated. This might not be the same as the time when the event information was written to the event log. For the latter, read the <xref:System.Diagnostics.EventLogEntry.TimeWritten%2A> property.","nodes":[{"content":"This member holds the time that an event was generated. This might not be the same as the time when the event information was written to the event log. For the latter, read the <xref:System.Diagnostics.EventLogEntry.TimeWritten%2A> property.","pos":[0,241],"nodes":[{"content":"This member holds the time that an event was generated.","pos":[0,55]},{"content":"This might not be the same as the time when the event information was written to the event log.","pos":[56,151]},{"content":"For the latter, read the <ph id=\"ph1\">&lt;xref:System.Diagnostics.EventLogEntry.TimeWritten%2A&gt;</ph> property.","pos":[152,241],"source":" For the latter, read the <xref:System.Diagnostics.EventLogEntry.TimeWritten%2A> property."}]}]},{"pos":[248,564],"content":"There is usually a lag between the time that an event is generated and the time it is logged. It is more important to know when the event was generated, unless you want to see if there is a significant lag in logging. That can happen if your log files are on a different server and you are experiencing a bottleneck.","nodes":[{"content":"There is usually a lag between the time that an event is generated and the time it is logged. It is more important to know when the event was generated, unless you want to see if there is a significant lag in logging. That can happen if your log files are on a different server and you are experiencing a bottleneck.","pos":[0,316],"nodes":[{"content":"There is usually a lag between the time that an event is generated and the time it is logged.","pos":[0,93]},{"content":"It is more important to know when the event was generated, unless you want to see if there is a significant lag in logging.","pos":[94,217]},{"content":"That can happen if your log files are on a different server and you are experiencing a bottleneck.","pos":[218,316]}]}]}],"pos":[30737,31306],"yaml":true,"extradata":"MT"},{"content":"The local time at which this event was generated.","nodes":[{"pos":[0,49],"content":"The local time at which this event was generated.","nodes":[{"content":"The local time at which this event was generated.","pos":[0,49]}]}],"pos":[31427,31477],"yaml":true},{"content":"Gets the local time at which this event was written to the log.","nodes":[{"pos":[0,63],"content":"Gets the local time at which this event was written to the log.","nodes":[{"content":"Gets the local time at which this event was written to the log.","pos":[0,63]}]}],"pos":[32517,32581],"yaml":true},{"content":"This member holds the time that an event's information is written to the event log. This might not be the same time as when the event was generated. For the latter, read the <xref:System.Diagnostics.EventLogEntry.TimeGenerated%2A> property.","nodes":[{"pos":[0,240],"content":"This member holds the time that an event's information is written to the event log. This might not be the same time as when the event was generated. For the latter, read the <xref:System.Diagnostics.EventLogEntry.TimeGenerated%2A> property.","nodes":[{"content":"This member holds the time that an event's information is written to the event log. This might not be the same time as when the event was generated. For the latter, read the <xref:System.Diagnostics.EventLogEntry.TimeGenerated%2A> property.","pos":[0,240],"nodes":[{"content":"This member holds the time that an event's information is written to the event log.","pos":[0,83]},{"content":"This might not be the same time as when the event was generated.","pos":[84,148]},{"content":"For the latter, read the <ph id=\"ph1\">&lt;xref:System.Diagnostics.EventLogEntry.TimeGenerated%2A&gt;</ph> property.","pos":[149,240],"source":" For the latter, read the <xref:System.Diagnostics.EventLogEntry.TimeGenerated%2A> property."}]}]}],"pos":[32592,32833],"yaml":true,"extradata":"MT"},{"content":"The local time at which this event was written to the log.","nodes":[{"pos":[0,58],"content":"The local time at which this event was written to the log.","nodes":[{"content":"The local time at which this event was written to the log.","pos":[0,58]}]}],"pos":[32952,33011],"yaml":true},{"content":"Gets the name of the user who is responsible for this event.","nodes":[{"pos":[0,60],"content":"Gets the name of the user who is responsible for this event.","nodes":[{"content":"Gets the name of the user who is responsible for this event.","pos":[0,60]}]}],"pos":[34031,34092],"yaml":true},{"content":"This property is often blank for events in logs other than the Security log.","nodes":[{"pos":[0,76],"content":"This property is often blank for events in logs other than the Security log.","nodes":[{"content":"This property is often blank for events in logs other than the Security log.","pos":[0,76]}]}],"pos":[34103,34180],"yaml":true,"extradata":"MT"},{"content":"The security identifier (SID) that uniquely identifies a user or group.","nodes":[{"pos":[0,71],"content":"The security identifier (SID) that uniquely identifies a user or group.","nodes":[{"content":"The security identifier (SID) that uniquely identifies a user or group.","pos":[0,71]}]}],"pos":[34292,34364],"yaml":true},{"content":"Account information could not be obtained for the user's SID.","nodes":[{"pos":[0,61],"content":"Account information could not be obtained for the user's SID.","nodes":[{"content":"Account information could not be obtained for the user's SID.","pos":[0,61]}]}],"pos":[34523,34585],"yaml":true},{"content":"Populates a <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> with the data needed to serialize the target object.","nodes":[{"pos":[0,132],"content":"Populates a <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;&lt;/xref&gt;</ph> with the data needed to serialize the target object.","source":"Populates a <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> with the data needed to serialize the target object."}],"pos":[36136,36269],"yaml":true},{"content":"The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> to populate with data.","nodes":[{"pos":[0,94],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;&lt;/xref&gt;</ph> to populate with data.","source":"The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> to populate with data."}],"pos":[36609,36704],"yaml":true},{"content":"The destination (see <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref>) for this serialization.","nodes":[{"pos":[0,112],"content":"The destination (see <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.StreamingContext\"&gt;&lt;/xref&gt;</ph>) for this serialization.","source":"The destination (see <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref>) for this serialization."}],"pos":[36799,36912],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.EventLogEntry\n  commentId: T:System.Diagnostics.EventLogEntry\n  id: EventLogEntry\n  children:\n  - System.Diagnostics.EventLogEntry.Category\n  - System.Diagnostics.EventLogEntry.CategoryNumber\n  - System.Diagnostics.EventLogEntry.Data\n  - System.Diagnostics.EventLogEntry.EntryType\n  - System.Diagnostics.EventLogEntry.Equals(System.Diagnostics.EventLogEntry)\n  - System.Diagnostics.EventLogEntry.EventID\n  - System.Diagnostics.EventLogEntry.Index\n  - System.Diagnostics.EventLogEntry.InstanceId\n  - System.Diagnostics.EventLogEntry.MachineName\n  - System.Diagnostics.EventLogEntry.Message\n  - System.Diagnostics.EventLogEntry.ReplacementStrings\n  - System.Diagnostics.EventLogEntry.Source\n  - System.Diagnostics.EventLogEntry.TimeGenerated\n  - System.Diagnostics.EventLogEntry.TimeWritten\n  - System.Diagnostics.EventLogEntry.UserName\n  - System.Diagnostics.EventLogEntry.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  langs:\n  - csharp\n  name: EventLogEntry\n  nameWithType: EventLogEntry\n  fullName: System.Diagnostics.EventLogEntry\n  type: Class\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Encapsulates a single record in the event log. This class cannot be inherited.\n  remarks: \"You usually will not create instances of <xref:System.Diagnostics.EventLogEntry> directly when working with the <xref:System.Diagnostics.EventLog> class. The <xref:System.Diagnostics.EventLog.Entries%2A> member of the <xref:System.Diagnostics.EventLog> class contains a collection of <xref:System.Diagnostics.EventLogEntry> instances, which you iterate over when reading by using the <xref:System.Diagnostics.EventLogEntryCollection.Item%2A?displayProperty=fullName> class index member.  \\n  \\n> [!IMPORTANT]\\n>  This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \\\"Using an Object that Implements IDisposable\\\" section in the <xref:System.IDisposable> interface topic.\"\n  example:\n  - \"The following code example demonstrates the use of the <xref:System.Diagnostics.EventLogEntry> class. In this example, a `switch` statement uses console input to search for event log entries for the specified event type.  If a match is found, log entry source information is displayed at the console.  \\n  \\n [!code-cpp[EventLogEntry_Source#1](~/samples/snippets/cpp/VS_Snippets_CLR/EventLogEntry_Source/CPP/eventlogentry_source.cpp#1)]\\n [!code-csharp[EventLogEntry_Source#1](~/samples/snippets/csharp/VS_Snippets_CLR/EventLogEntry_Source/CS/eventlogentry_source.cs#1)]\\n [!code-vb[EventLogEntry_Source#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLogEntry_Source/VB/eventlogentry_source.vb#1)]\"\n  syntax:\n    content: 'public sealed class EventLogEntry : System.ComponentModel.Component, System.Runtime.Serialization.ISerializable'\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  - System.ComponentModel.Component\n  implements:\n  - System.Runtime.Serialization.ISerializable\n  inheritedMembers:\n  - System.ComponentModel.Component.CanRaiseEvents\n  - System.ComponentModel.Component.Container\n  - System.ComponentModel.Component.DesignMode\n  - System.ComponentModel.Component.Dispose\n  - System.ComponentModel.Component.Dispose(System.Boolean)\n  - System.ComponentModel.Component.Disposed\n  - System.ComponentModel.Component.Events\n  - System.ComponentModel.Component.GetService(System.Type)\n  - System.ComponentModel.Component.Site\n  - System.ComponentModel.Component.ToString\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/EventLogEntry.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.EventLogEntry.Category\n  commentId: P:System.Diagnostics.EventLogEntry.Category\n  id: Category\n  parent: System.Diagnostics.EventLogEntry\n  langs:\n  - csharp\n  name: Category\n  nameWithType: EventLogEntry.Category\n  fullName: EventLogEntry.Category\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Gets the text associated with the <xref href=\"System.Diagnostics.EventLogEntry.CategoryNumber\"></xref> property for this entry.\n  remarks: Each application (event source) can define its own numbered categories and the text strings to which they are mapped. The Event Viewer can use the category to filter events in the log.\n  syntax:\n    content: public string Category { get; }\n    return:\n      type: System.String\n      description: The application-specific category text.\n  overload: System.Diagnostics.EventLogEntry.Category*\n  exceptions:\n  - type: System.Exception\n    commentId: T:System.Exception\n    description: The space could not be allocated for one of the insertion strings associated with the category.\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/EventLogEntry.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.EventLogEntry.CategoryNumber\n  commentId: P:System.Diagnostics.EventLogEntry.CategoryNumber\n  id: CategoryNumber\n  parent: System.Diagnostics.EventLogEntry\n  langs:\n  - csharp\n  name: CategoryNumber\n  nameWithType: EventLogEntry.CategoryNumber\n  fullName: EventLogEntry.CategoryNumber\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Gets the category number of the event log entry.\n  remarks: Each application (event source) can define its own numbered categories and the text strings to which they are mapped. The Event Viewer can use the category to filter events in the log. The categories must be numbered consecutively beginning with the number 1. The category number is specified by the <xref:System.Diagnostics.EventInstance.CategoryId%2A?displayProperty=fullName> property. The Event Viewer can display the category as a numeric value, or it can use the category as a resource identifier to display a localized category string. For more information, see <xref:System.Diagnostics.EventInstance>.\n  syntax:\n    content: public short CategoryNumber { get; }\n    return:\n      type: System.Int16\n      description: The application-specific category number for this entry.\n  overload: System.Diagnostics.EventLogEntry.CategoryNumber*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/EventLogEntry.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.EventLogEntry.Data\n  commentId: P:System.Diagnostics.EventLogEntry.Data\n  id: Data\n  parent: System.Diagnostics.EventLogEntry\n  langs:\n  - csharp\n  name: Data\n  nameWithType: EventLogEntry.Data\n  fullName: EventLogEntry.Data\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Gets the binary data associated with the entry.\n  remarks: Getting this property creates an array that holds a copy of the entry's event-specific binary data, which the Event Viewer displays in combined hexadecimal and text format. Event-specific data is sometimes used to store information that the application will process independently of the Event Viewer, for example, to make reports from the log file.\n  syntax:\n    content: public byte[] Data { get; }\n    return:\n      type: System.Byte[]\n      description: An array of bytes that holds the binary data associated with the entry.\n  overload: System.Diagnostics.EventLogEntry.Data*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/EventLogEntry.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.EventLogEntry.EntryType\n  commentId: P:System.Diagnostics.EventLogEntry.EntryType\n  id: EntryType\n  parent: System.Diagnostics.EventLogEntry\n  langs:\n  - csharp\n  name: EntryType\n  nameWithType: EventLogEntry.EntryType\n  fullName: EventLogEntry.EntryType\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Gets the event type of this entry.\n  remarks: All event types have well-defined common data and can optionally include event-specific data. Each event is of a single type, which the application indicates when it reports the event. The Event Viewer uses the event type to determine which icon to display in the list view of the event log.\n  example:\n  - \"The following code example demonstrates the use of the <xref:System.Diagnostics.EventLogEntry.EntryType%2A> property. In this example, a `switch` statement uses console input to search for event log entries for the specified <xref:System.Diagnostics.EventLogEntry.EntryType%2A>.  If a match is found, log entry source information is displayed at the console.  \\n  \\n [!code-cpp[EventLogEntry_Source#1](~/samples/snippets/cpp/VS_Snippets_CLR/EventLogEntry_Source/CPP/eventlogentry_source.cpp#1)]\\n [!code-csharp[EventLogEntry_Source#1](~/samples/snippets/csharp/VS_Snippets_CLR/EventLogEntry_Source/CS/eventlogentry_source.cs#1)]\\n [!code-vb[EventLogEntry_Source#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLogEntry_Source/VB/eventlogentry_source.vb#1)]\"\n  syntax:\n    content: public System.Diagnostics.EventLogEntryType EntryType { get; }\n    return:\n      type: System.Diagnostics.EventLogEntryType\n      description: The event type that is associated with the entry in the event log.\n  overload: System.Diagnostics.EventLogEntry.EntryType*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/EventLogEntry.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.EventLogEntry.Equals(System.Diagnostics.EventLogEntry)\n  commentId: M:System.Diagnostics.EventLogEntry.Equals(System.Diagnostics.EventLogEntry)\n  id: Equals(System.Diagnostics.EventLogEntry)\n  parent: System.Diagnostics.EventLogEntry\n  langs:\n  - csharp\n  name: Equals(EventLogEntry)\n  nameWithType: EventLogEntry.Equals(EventLogEntry)\n  fullName: EventLogEntry.Equals(EventLogEntry)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Performs a comparison between two event log entries.\n  remarks: This method performs a byte-by-byte comparison between the two objects. It does not determine whether the two <xref:System.Diagnostics.EventLogEntry> instances refer to the same object.\n  syntax:\n    content: public bool Equals (System.Diagnostics.EventLogEntry otherEntry);\n    parameters:\n    - id: otherEntry\n      type: System.Diagnostics.EventLogEntry\n      description: The <xref href=\"System.Diagnostics.EventLogEntry\"></xref> to compare.\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Diagnostics.EventLogEntry\"></xref> objects are identical; otherwise, `false`.'\n  overload: System.Diagnostics.EventLogEntry.Equals*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/EventLogEntry.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.EventLogEntry.EventID\n  commentId: P:System.Diagnostics.EventLogEntry.EventID\n  id: EventID\n  parent: System.Diagnostics.EventLogEntry\n  langs:\n  - csharp\n  name: EventID\n  nameWithType: EventLogEntry.EventID\n  fullName: EventLogEntry.EventID\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Gets the application-specific event identifier for the current event entry.\n  remarks: \"This value represents the event identifier for the entry in the event log, with the top two bits masked off. The <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> property for an event log entry represents the full 32-bit resource identifier for the event in the message resource file for the event source. Two event log entries from the same source can have matching <xref:System.Diagnostics.EventLogEntry.EventID%2A> values, but have different <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> values due to differences in the top two bits of the event identifier.  \\n  \\n If the application wrote the event entry using one of the <xref:System.Diagnostics.EventLog.WriteEntry%2A> methods, the <xref:System.Diagnostics.EventLogEntry.EventID%2A> property matches the optional `eventId` parameter. If the application wrote the event using <xref:System.Diagnostics.EventLog.WriteEvent%2A> or the Win32 API `ReportEvent`, the <xref:System.Diagnostics.EventLogEntry.EventID%2A> property matches the resource identifier for the event, with the top two bits masked off.\"\n  syntax:\n    content: >-\n      [System.Obsolete(\"Use InstanceId\")]\n\n      public int EventID { get; }\n    return:\n      type: System.Int32\n      description: The application-specific identifier for the event message.\n  overload: System.Diagnostics.EventLogEntry.EventID*\n  exceptions: []\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/EventLogEntry.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.EventLogEntry.Index\n  commentId: P:System.Diagnostics.EventLogEntry.Index\n  id: Index\n  parent: System.Diagnostics.EventLogEntry\n  langs:\n  - csharp\n  name: Index\n  nameWithType: EventLogEntry.Index\n  fullName: EventLogEntry.Index\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Gets the index of this entry in the event log.\n  remarks: This number is not necessarily zero-based.\n  syntax:\n    content: public int Index { get; }\n    return:\n      type: System.Int32\n      description: The index of this entry in the event log.\n  overload: System.Diagnostics.EventLogEntry.Index*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/EventLogEntry.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.EventLogEntry.InstanceId\n  commentId: P:System.Diagnostics.EventLogEntry.InstanceId\n  id: InstanceId\n  parent: System.Diagnostics.EventLogEntry\n  langs:\n  - csharp\n  name: InstanceId\n  nameWithType: EventLogEntry.InstanceId\n  fullName: EventLogEntry.InstanceId\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Gets the resource identifier that designates the message text of the event entry.\n  remarks: \"The <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> property uniquely identifies an event entry for a configured event source. The <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> for an event log entry represents the full 32-bit resource identifier for the event in the message resource file for the event source. The <xref:System.Diagnostics.EventLogEntry.EventID%2A> property equals the <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> with the top two bits masked off. Two event log entries from the same source can have matching <xref:System.Diagnostics.EventLogEntry.EventID%2A> values, but have different <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> values due to differences in the top two bits of the resource identifier.  \\n  \\n If the application wrote the event entry using one of the <xref:System.Diagnostics.EventLog.WriteEntry%2A> methods, the <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> property matches the optional `eventId` parameter. If the application wrote the event using <xref:System.Diagnostics.EventLog.WriteEvent%2A>, the <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> property matches the resource identifier specified in the <xref:System.Diagnostics.EventInstance.InstanceId%2A> of the `instance` parameter. If the application wrote the event using the Win32 API `ReportEvent`, the <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> property matches the resource identifier specified in the `dwEventID` parameter.  \\n  \\n For details about defining event messages and building event log resource files, see the \\\"Message Compiler\\\" topic in the Platform SDK documentation at [http://msdn.microsoft.com](http://msdn.microsoft.com/). For details about event log identifiers, see the \\\"Event Identifiers\\\" topic in the Platform SDK.\"\n  example:\n  - \"The following code example searches an event log for entries with a particular resource identifier. The code example displays the event message for each matching entry, and counts the total number of matching entries in the log. The message text for each entry may or may not be the same; each event message depends on the event source message file, insertion strings, and parameters used when it was written.  \\n  \\n [!code-cpp[EventLog_WriteEvent#10](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#10)]\\n [!code-csharp[EventLog_WriteEvent#10](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#10)]\\n [!code-vb[EventLog_WriteEvent#10](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#10)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public long InstanceId { get; }\n    return:\n      type: System.Int64\n      description: A resource identifier that corresponds to a string definition in the message resource file of the event source.\n  overload: System.Diagnostics.EventLogEntry.InstanceId*\n  exceptions: []\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/EventLogEntry.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.EventLogEntry.MachineName\n  commentId: P:System.Diagnostics.EventLogEntry.MachineName\n  id: MachineName\n  parent: System.Diagnostics.EventLogEntry\n  langs:\n  - csharp\n  name: MachineName\n  nameWithType: EventLogEntry.MachineName\n  fullName: EventLogEntry.MachineName\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Gets the name of the computer on which this entry was generated.\n  syntax:\n    content: public string MachineName { get; }\n    return:\n      type: System.String\n      description: The name of the computer that contains the event log.\n  overload: System.Diagnostics.EventLogEntry.MachineName*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/EventLogEntry.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.EventLogEntry.Message\n  commentId: P:System.Diagnostics.EventLogEntry.Message\n  id: Message\n  parent: System.Diagnostics.EventLogEntry\n  langs:\n  - csharp\n  name: Message\n  nameWithType: EventLogEntry.Message\n  fullName: EventLogEntry.Message\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Gets the localized message associated with this event entry.\n  remarks: Getting this property opens the registry to determine the file name of the .dll file that contains the localized text. If you receive a registry error when testing your source code, verify that the .dll file exists on the computer. If insertion strings are included in the message, catch errors in their allocation.\n  syntax:\n    content: public string Message { get; }\n    return:\n      type: System.String\n      description: The formatted, localized text for the message. This includes associated replacement strings.\n  overload: System.Diagnostics.EventLogEntry.Message*\n  exceptions:\n  - type: System.Exception\n    commentId: T:System.Exception\n    description: The space could not be allocated for one of the insertion strings associated with the message.\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/EventLogEntry.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.EventLogEntry.ReplacementStrings\n  commentId: P:System.Diagnostics.EventLogEntry.ReplacementStrings\n  id: ReplacementStrings\n  parent: System.Diagnostics.EventLogEntry\n  langs:\n  - csharp\n  name: ReplacementStrings\n  nameWithType: EventLogEntry.ReplacementStrings\n  fullName: EventLogEntry.ReplacementStrings\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Gets the replacement strings associated with the event log entry.\n  remarks: \"This property retrieves only the replacement strings for the entry. To retrieve the full message, read the <xref:System.Diagnostics.EventLogEntry.Message%2A> property.  \\n  \\n The <xref:System.Diagnostics.EventLogEntry.ReplacementStrings%2A> property contains the localized versions of replacement strings that are used in the event log entry. If you provide resource files that contain strings in each target language for your application, you can emit event log messages in the language that is used on that computer. To do that, create an instance of the <xref:System.Resources.ResourceManager> class for the resource assembly that contains your replacement strings. The first parameter of the <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29> constructor identifies the resource assembly to be used. Use the <xref:System.Resources.ResourceManager.GetString%2A> method of that instance to supply localized messages for log events. The following code automatically sets the message to the language for the current culture.  \\n  \\n```  \\nResourceManager LocRM = new ResourceManager(\\\"ReplacementStrings.TestStrings\\\",   \\n      typeof(Program).Assembly);  \\nEventLog e1 = new EventLog(\\\"LocTest\\\", \\\"MyMachine\\\", \\\"LocTest\\\");  \\n// Get the string associated with the current culture.  \\ne1.WriteEntry(LocRM.GetString(\\\"strMessage\\\"),  \\n   EventLogEntryType.Information);  \\n```\"\n  syntax:\n    content: public string[] ReplacementStrings { get; }\n    return:\n      type: System.String[]\n      description: An array that holds the replacement strings stored in the event entry.\n  overload: System.Diagnostics.EventLogEntry.ReplacementStrings*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/EventLogEntry.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.EventLogEntry.Source\n  commentId: P:System.Diagnostics.EventLogEntry.Source\n  id: Source\n  parent: System.Diagnostics.EventLogEntry\n  langs:\n  - csharp\n  name: Source\n  nameWithType: EventLogEntry.Source\n  fullName: EventLogEntry.Source\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Gets the name of the application that generated this event.\n  remarks: The event source indicates what logged the event. It is often the name of the application or the name of a subcomponent of the application if the application is large. Applications and services usually write to (and therefore are sources for) the Application log or a custom log. Device drivers usually write to the System log.\n  example:\n  - \"The following code example demonstrates the use of the <xref:System.Diagnostics.EventLogEntry.Source%2A> property. In this example, a `switch` statement uses console input to search for event log entries for the specified <xref:System.Diagnostics.EventLogEntry.EntryType%2A>.  If a match is found, the <xref:System.Diagnostics.EventLogEntry.Source%2A> property information is displayed at the console.  \\n  \\n [!code-cpp[EventLogEntry_Source#1](~/samples/snippets/cpp/VS_Snippets_CLR/EventLogEntry_Source/CPP/eventlogentry_source.cpp#1)]\\n [!code-csharp[EventLogEntry_Source#1](~/samples/snippets/csharp/VS_Snippets_CLR/EventLogEntry_Source/CS/eventlogentry_source.cs#1)]\\n [!code-vb[EventLogEntry_Source#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLogEntry_Source/VB/eventlogentry_source.vb#1)]\"\n  syntax:\n    content: public string Source { get; }\n    return:\n      type: System.String\n      description: The name registered with the event log as the source of this event.\n  overload: System.Diagnostics.EventLogEntry.Source*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/EventLogEntry.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.EventLogEntry.TimeGenerated\n  commentId: P:System.Diagnostics.EventLogEntry.TimeGenerated\n  id: TimeGenerated\n  parent: System.Diagnostics.EventLogEntry\n  langs:\n  - csharp\n  name: TimeGenerated\n  nameWithType: EventLogEntry.TimeGenerated\n  fullName: EventLogEntry.TimeGenerated\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Gets the local time at which this event was generated.\n  remarks: \"This member holds the time that an event was generated. This might not be the same as the time when the event information was written to the event log. For the latter, read the <xref:System.Diagnostics.EventLogEntry.TimeWritten%2A> property.  \\n  \\n There is usually a lag between the time that an event is generated and the time it is logged. It is more important to know when the event was generated, unless you want to see if there is a significant lag in logging. That can happen if your log files are on a different server and you are experiencing a bottleneck.\"\n  syntax:\n    content: public DateTime TimeGenerated { get; }\n    return:\n      type: System.DateTime\n      description: The local time at which this event was generated.\n  overload: System.Diagnostics.EventLogEntry.TimeGenerated*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/EventLogEntry.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.EventLogEntry.TimeWritten\n  commentId: P:System.Diagnostics.EventLogEntry.TimeWritten\n  id: TimeWritten\n  parent: System.Diagnostics.EventLogEntry\n  langs:\n  - csharp\n  name: TimeWritten\n  nameWithType: EventLogEntry.TimeWritten\n  fullName: EventLogEntry.TimeWritten\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Gets the local time at which this event was written to the log.\n  remarks: This member holds the time that an event's information is written to the event log. This might not be the same time as when the event was generated. For the latter, read the <xref:System.Diagnostics.EventLogEntry.TimeGenerated%2A> property.\n  syntax:\n    content: public DateTime TimeWritten { get; }\n    return:\n      type: System.DateTime\n      description: The local time at which this event was written to the log.\n  overload: System.Diagnostics.EventLogEntry.TimeWritten*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/EventLogEntry.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.EventLogEntry.UserName\n  commentId: P:System.Diagnostics.EventLogEntry.UserName\n  id: UserName\n  parent: System.Diagnostics.EventLogEntry\n  langs:\n  - csharp\n  name: UserName\n  nameWithType: EventLogEntry.UserName\n  fullName: EventLogEntry.UserName\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Gets the name of the user who is responsible for this event.\n  remarks: This property is often blank for events in logs other than the Security log.\n  syntax:\n    content: public string UserName { get; }\n    return:\n      type: System.String\n      description: The security identifier (SID) that uniquely identifies a user or group.\n  overload: System.Diagnostics.EventLogEntry.UserName*\n  exceptions:\n  - type: System.SystemException\n    commentId: T:System.SystemException\n    description: Account information could not be obtained for the user's SID.\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/EventLogEntry.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.EventLogEntry.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  commentId: M:System.Diagnostics.EventLogEntry.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  isEii: true\n  parent: System.Diagnostics.EventLogEntry\n  langs:\n  - csharp\n  name: ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: EventLogEntry.ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: EventLogEntry.ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  type: Method\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Populates a <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> with the data needed to serialize the target object.\n  syntax:\n    content: >-\n      [System.MonoTODO(\"Needs serialization support\")]\n\n      void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> to populate with data.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: The destination (see <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref>) for this serialization.\n  overload: System.Diagnostics.EventLogEntry.System#Runtime#Serialization#ISerializable#GetObjectData*\n  exceptions: []\n  attributes:\n  - type: System.MonoTODO\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/EventLogEntry.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.ComponentModel.Component\n  parent: System.ComponentModel\n  isExternal: false\n  name: Component\n  nameWithType: Component\n  fullName: System.ComponentModel.Component\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.SystemException\n  parent: System\n  isExternal: false\n  name: SystemException\n  nameWithType: SystemException\n  fullName: System.SystemException\n- uid: System.Diagnostics.EventLogEntry.Category\n  parent: System.Diagnostics.EventLogEntry\n  isExternal: false\n  name: Category\n  nameWithType: EventLogEntry.Category\n  fullName: EventLogEntry.Category\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.EventLogEntry.CategoryNumber\n  parent: System.Diagnostics.EventLogEntry\n  isExternal: false\n  name: CategoryNumber\n  nameWithType: EventLogEntry.CategoryNumber\n  fullName: EventLogEntry.CategoryNumber\n- uid: System.Int16\n  parent: System\n  isExternal: false\n  name: Int16\n  nameWithType: Int16\n  fullName: System.Int16\n- uid: System.Diagnostics.EventLogEntry.Data\n  parent: System.Diagnostics.EventLogEntry\n  isExternal: false\n  name: Data\n  nameWithType: EventLogEntry.Data\n  fullName: EventLogEntry.Data\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Diagnostics.EventLogEntry.EntryType\n  parent: System.Diagnostics.EventLogEntry\n  isExternal: false\n  name: EntryType\n  nameWithType: EventLogEntry.EntryType\n  fullName: EventLogEntry.EntryType\n- uid: System.Diagnostics.EventLogEntryType\n  parent: System.Diagnostics\n  isExternal: false\n  name: EventLogEntryType\n  nameWithType: EventLogEntryType\n  fullName: System.Diagnostics.EventLogEntryType\n- uid: System.Diagnostics.EventLogEntry.Equals(System.Diagnostics.EventLogEntry)\n  parent: System.Diagnostics.EventLogEntry\n  isExternal: false\n  name: Equals(EventLogEntry)\n  nameWithType: EventLogEntry.Equals(EventLogEntry)\n  fullName: EventLogEntry.Equals(EventLogEntry)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Diagnostics.EventLogEntry\n  parent: System.Diagnostics\n  isExternal: false\n  name: EventLogEntry\n  nameWithType: EventLogEntry\n  fullName: System.Diagnostics.EventLogEntry\n- uid: System.Diagnostics.EventLogEntry.EventID\n  parent: System.Diagnostics.EventLogEntry\n  isExternal: false\n  name: EventID\n  nameWithType: EventLogEntry.EventID\n  fullName: EventLogEntry.EventID\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Diagnostics.EventLogEntry.Index\n  parent: System.Diagnostics.EventLogEntry\n  isExternal: false\n  name: Index\n  nameWithType: EventLogEntry.Index\n  fullName: EventLogEntry.Index\n- uid: System.Diagnostics.EventLogEntry.InstanceId\n  parent: System.Diagnostics.EventLogEntry\n  isExternal: false\n  name: InstanceId\n  nameWithType: EventLogEntry.InstanceId\n  fullName: EventLogEntry.InstanceId\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Diagnostics.EventLogEntry.MachineName\n  parent: System.Diagnostics.EventLogEntry\n  isExternal: false\n  name: MachineName\n  nameWithType: EventLogEntry.MachineName\n  fullName: EventLogEntry.MachineName\n- uid: System.Diagnostics.EventLogEntry.Message\n  parent: System.Diagnostics.EventLogEntry\n  isExternal: false\n  name: Message\n  nameWithType: EventLogEntry.Message\n  fullName: EventLogEntry.Message\n- uid: System.Diagnostics.EventLogEntry.ReplacementStrings\n  parent: System.Diagnostics.EventLogEntry\n  isExternal: false\n  name: ReplacementStrings\n  nameWithType: EventLogEntry.ReplacementStrings\n  fullName: EventLogEntry.ReplacementStrings\n- uid: System.String[]\n  parent: System\n  isExternal: false\n  name: String[]\n  nameWithType: String[]\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Diagnostics.EventLogEntry.Source\n  parent: System.Diagnostics.EventLogEntry\n  isExternal: false\n  name: Source\n  nameWithType: EventLogEntry.Source\n  fullName: EventLogEntry.Source\n- uid: System.Diagnostics.EventLogEntry.TimeGenerated\n  parent: System.Diagnostics.EventLogEntry\n  isExternal: false\n  name: TimeGenerated\n  nameWithType: EventLogEntry.TimeGenerated\n  fullName: EventLogEntry.TimeGenerated\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.Diagnostics.EventLogEntry.TimeWritten\n  parent: System.Diagnostics.EventLogEntry\n  isExternal: false\n  name: TimeWritten\n  nameWithType: EventLogEntry.TimeWritten\n  fullName: EventLogEntry.TimeWritten\n- uid: System.Diagnostics.EventLogEntry.UserName\n  parent: System.Diagnostics.EventLogEntry\n  isExternal: false\n  name: UserName\n  nameWithType: EventLogEntry.UserName\n  fullName: EventLogEntry.UserName\n- uid: System.Diagnostics.EventLogEntry.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Diagnostics.EventLogEntry\n  isExternal: false\n  name: ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: EventLogEntry.ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: EventLogEntry.ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.Diagnostics.EventLogEntry.Category*\n  parent: System.Diagnostics.EventLogEntry\n  isExternal: false\n  name: Category\n  nameWithType: EventLogEntry.Category\n  fullName: EventLogEntry.Category\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/EventLogEntry.xml\n- uid: System.Diagnostics.EventLogEntry.CategoryNumber*\n  parent: System.Diagnostics.EventLogEntry\n  isExternal: false\n  name: CategoryNumber\n  nameWithType: EventLogEntry.CategoryNumber\n  fullName: EventLogEntry.CategoryNumber\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/EventLogEntry.xml\n- uid: System.Diagnostics.EventLogEntry.Data*\n  parent: System.Diagnostics.EventLogEntry\n  isExternal: false\n  name: Data\n  nameWithType: EventLogEntry.Data\n  fullName: EventLogEntry.Data\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/EventLogEntry.xml\n- uid: System.Diagnostics.EventLogEntry.EntryType*\n  parent: System.Diagnostics.EventLogEntry\n  isExternal: false\n  name: EntryType\n  nameWithType: EventLogEntry.EntryType\n  fullName: EventLogEntry.EntryType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/EventLogEntry.xml\n- uid: System.Diagnostics.EventLogEntry.Equals*\n  parent: System.Diagnostics.EventLogEntry\n  isExternal: false\n  name: Equals\n  nameWithType: EventLogEntry.Equals\n  fullName: EventLogEntry.Equals\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/EventLogEntry.xml\n- uid: System.Diagnostics.EventLogEntry.EventID*\n  parent: System.Diagnostics.EventLogEntry\n  isExternal: false\n  name: EventID\n  nameWithType: EventLogEntry.EventID\n  fullName: EventLogEntry.EventID\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/EventLogEntry.xml\n- uid: System.Diagnostics.EventLogEntry.Index*\n  parent: System.Diagnostics.EventLogEntry\n  isExternal: false\n  name: Index\n  nameWithType: EventLogEntry.Index\n  fullName: EventLogEntry.Index\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/EventLogEntry.xml\n- uid: System.Diagnostics.EventLogEntry.InstanceId*\n  parent: System.Diagnostics.EventLogEntry\n  isExternal: false\n  name: InstanceId\n  nameWithType: EventLogEntry.InstanceId\n  fullName: EventLogEntry.InstanceId\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/EventLogEntry.xml\n- uid: System.Diagnostics.EventLogEntry.MachineName*\n  parent: System.Diagnostics.EventLogEntry\n  isExternal: false\n  name: MachineName\n  nameWithType: EventLogEntry.MachineName\n  fullName: EventLogEntry.MachineName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/EventLogEntry.xml\n- uid: System.Diagnostics.EventLogEntry.Message*\n  parent: System.Diagnostics.EventLogEntry\n  isExternal: false\n  name: Message\n  nameWithType: EventLogEntry.Message\n  fullName: EventLogEntry.Message\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/EventLogEntry.xml\n- uid: System.Diagnostics.EventLogEntry.ReplacementStrings*\n  parent: System.Diagnostics.EventLogEntry\n  isExternal: false\n  name: ReplacementStrings\n  nameWithType: EventLogEntry.ReplacementStrings\n  fullName: EventLogEntry.ReplacementStrings\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/EventLogEntry.xml\n- uid: System.Diagnostics.EventLogEntry.Source*\n  parent: System.Diagnostics.EventLogEntry\n  isExternal: false\n  name: Source\n  nameWithType: EventLogEntry.Source\n  fullName: EventLogEntry.Source\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/EventLogEntry.xml\n- uid: System.Diagnostics.EventLogEntry.TimeGenerated*\n  parent: System.Diagnostics.EventLogEntry\n  isExternal: false\n  name: TimeGenerated\n  nameWithType: EventLogEntry.TimeGenerated\n  fullName: EventLogEntry.TimeGenerated\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/EventLogEntry.xml\n- uid: System.Diagnostics.EventLogEntry.TimeWritten*\n  parent: System.Diagnostics.EventLogEntry\n  isExternal: false\n  name: TimeWritten\n  nameWithType: EventLogEntry.TimeWritten\n  fullName: EventLogEntry.TimeWritten\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/EventLogEntry.xml\n- uid: System.Diagnostics.EventLogEntry.UserName*\n  parent: System.Diagnostics.EventLogEntry\n  isExternal: false\n  name: UserName\n  nameWithType: EventLogEntry.UserName\n  fullName: EventLogEntry.UserName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/EventLogEntry.xml\n- uid: System.Diagnostics.EventLogEntry.System#Runtime#Serialization#ISerializable#GetObjectData*\n  parent: System.Diagnostics.EventLogEntry\n  isExternal: false\n  name: System.Runtime.Serialization.ISerializable.GetObjectData\n  nameWithType: EventLogEntry.System.Runtime.Serialization.ISerializable.GetObjectData\n  fullName: EventLogEntry.System.Runtime.Serialization.ISerializable.GetObjectData\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/EventLogEntry.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.ComponentModel.Component.ToString\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: ToString()\n  nameWithType: Component.ToString()\n  fullName: Component.ToString()\n- uid: System.MarshalByRefObject.CreateObjRef(System.Type)\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: CreateObjRef(Type)\n  nameWithType: MarshalByRefObject.CreateObjRef(Type)\n  fullName: MarshalByRefObject.CreateObjRef(Type)\n- uid: System.MarshalByRefObject.GetLifetimeService\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: GetLifetimeService()\n  nameWithType: MarshalByRefObject.GetLifetimeService()\n  fullName: MarshalByRefObject.GetLifetimeService()\n- uid: System.MarshalByRefObject.InitializeLifetimeService\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: InitializeLifetimeService()\n  nameWithType: MarshalByRefObject.InitializeLifetimeService()\n  fullName: MarshalByRefObject.InitializeLifetimeService()\n- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: MemberwiseClone(Boolean)\n  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)\n  fullName: MarshalByRefObject.MemberwiseClone(Boolean)\n- uid: System.ComponentModel.Component.CanRaiseEvents\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: CanRaiseEvents\n  nameWithType: Component.CanRaiseEvents\n  fullName: Component.CanRaiseEvents\n- uid: System.ComponentModel.Component.Container\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Container\n  nameWithType: Component.Container\n  fullName: Component.Container\n- uid: System.ComponentModel.Component.DesignMode\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: DesignMode\n  nameWithType: Component.DesignMode\n  fullName: Component.DesignMode\n- uid: System.ComponentModel.Component.Dispose\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Dispose()\n  nameWithType: Component.Dispose()\n  fullName: Component.Dispose()\n- uid: System.ComponentModel.Component.Dispose(System.Boolean)\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: Component.Dispose(Boolean)\n  fullName: Component.Dispose(Boolean)\n- uid: System.ComponentModel.Component.Disposed\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Disposed\n  nameWithType: Component.Disposed\n  fullName: Component.Disposed\n- uid: System.ComponentModel.Component.Events\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Events\n  nameWithType: Component.Events\n  fullName: Component.Events\n- uid: System.ComponentModel.Component.GetService(System.Type)\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: GetService(Type)\n  nameWithType: Component.GetService(Type)\n  fullName: Component.GetService(Type)\n- uid: System.ComponentModel.Component.Site\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Site\n  nameWithType: Component.Site\n  fullName: Component.Site\n- uid: System.Runtime.Serialization.ISerializable\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: ISerializable\n  nameWithType: ISerializable\n  fullName: System.Runtime.Serialization.ISerializable\n"}