{"nodes":[{"content":"Provides a set of methods and properties that help debug your code.","nodes":[{"pos":[0,67],"content":"Provides a set of methods and properties that help debug your code.","nodes":[{"content":"Provides a set of methods and properties that help debug your code.","pos":[0,67]}]}],"pos":[2327,2395],"yaml":true},{"content":"If you use methods in the <xref:System.Diagnostics.Debug> class to print debugging information and check your logic with assertions, you can make your code more robust without impacting the performance and code size of your shipping product.  \n  \n This class provides methods to display an <xref:System.Diagnostics.Debug.Assert%2A> dialog box, and to emit an assertion that will always fail. This class provides write methods in the following variations: <xref:System.Diagnostics.Debug.Write%2A>, <xref:System.Diagnostics.Debug.WriteLine%2A>, <xref:System.Diagnostics.Debug.WriteIf%2A> and <xref:System.Diagnostics.Debug.WriteLineIf%2A>.  \n  \n The <xref:System.Diagnostics.BooleanSwitch> and <xref:System.Diagnostics.TraceSwitch> classes provide means to dynamically control the tracing output. You can modify the values of these switches without recompiling your application. For information on using the configuration file to set a switch, see the <xref:System.Diagnostics.Switch> class and the [Trace Switches](~/docs/framework/debug-trace-profile/trace-switches.md) topic.  \n  \n You can customize the tracing output's target by adding <xref:System.Diagnostics.TraceListener> instances to or removing instances from the <xref:System.Diagnostics.Debug.Listeners%2A> collection. The <xref:System.Diagnostics.Debug.Listeners%2A> collection is shared by both the <xref:System.Diagnostics.Debug> and the <xref:System.Diagnostics.Trace> classes; adding a trace listener to either class adds the listener to both. By default, the <xref:System.Diagnostics.DefaultTraceListener> class emits trace output.  \n  \n> [!NOTE]\n>  Adding a trace listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection can cause an exception to be thrown while tracing, if a resource used by the trace listener is not available. The conditions and the exception thrown depend on the trace listener and cannot be enumerated in this topic. It may be useful to place calls to the <xref:System.Diagnostics.Debug> methods in `try`/`catch` blocks to detect and handle any exceptions from trace listeners.  \n  \n You can modify the level of indentation using the <xref:System.Diagnostics.Debug.Indent%2A> method or the <xref:System.Diagnostics.Debug.IndentLevel%2A> property. To modify the indent spacing, use the <xref:System.Diagnostics.Debug.IndentSize%2A> property. You can specify whether to automatically flush the output buffer after each write by setting the <xref:System.Diagnostics.Debug.AutoFlush%2A> property to `true`.  \n  \n To set the <xref:System.Diagnostics.Debug.AutoFlush%2A> and <xref:System.Diagnostics.Debug.IndentSize%2A> for <xref:System.Diagnostics.Debug>, you can edit the configuration file corresponding to the name of your application. The configuration file should be formatted as shown in the following example.  \n  \n```  \n<configuration>  \n  <system.diagnostics>  \n    <trace autoflush=\"true\" indentsize=\"7\" />  \n  </system.diagnostics>  \n</configuration>  \n```  \n  \n The <xref:System.Diagnostics.ConditionalAttribute> attribute is applied to the methods of <xref:System.Diagnostics.Debug>. Compilers that support <xref:System.Diagnostics.ConditionalAttribute> ignore calls to these methods unless \"DEBUG\" is defined as a conditional compilation symbol. Refer to a compiler's documentation to determine whether <xref:System.Diagnostics.ConditionalAttribute> is supported and the syntax for defining a conditional compilation symbol.  \n  \n> [!NOTE]\n>  In Visual Studio C# and Visual Basic projects, by default, the \"DEBUG\" conditional compilation symbol is defined for debug builds, and the \"TRACE\" symbol is defined for both debug and release builds. For information about how to disable this behavior, see the Visual Studio documentation. For information about conditional debugging in Visual C++, see [Debug Class (C++/CLI)](http://msdn.microsoft.com/library/076bd528-1b6f-4e8a-a372-eb5849cf969a).  \n  \n To define the \"DEBUG\" conditional compilation symbol in C#, add the `/d:DEBUG` option to the compiler command line when you compile your code using a command line, or add `#define DEBUG` to the top of your file. In Visual Basic, add the `/d:DEBUG=True` option to the compiler command line or add `#Const DEBUG=True` to the file.","nodes":[{"pos":[0,241],"content":"If you use methods in the <xref:System.Diagnostics.Debug> class to print debugging information and check your logic with assertions, you can make your code more robust without impacting the performance and code size of your shipping product.","nodes":[{"content":"If you use methods in the <ph id=\"ph1\">&lt;xref:System.Diagnostics.Debug&gt;</ph> class to print debugging information and check your logic with assertions, you can make your code more robust without impacting the performance and code size of your shipping product.","pos":[0,241],"source":"If you use methods in the <xref:System.Diagnostics.Debug> class to print debugging information and check your logic with assertions, you can make your code more robust without impacting the performance and code size of your shipping product."}]},{"pos":[248,637],"content":"This class provides methods to display an <xref:System.Diagnostics.Debug.Assert%2A> dialog box, and to emit an assertion that will always fail. This class provides write methods in the following variations: <xref:System.Diagnostics.Debug.Write%2A>, <xref:System.Diagnostics.Debug.WriteLine%2A>, <xref:System.Diagnostics.Debug.WriteIf%2A> and <xref:System.Diagnostics.Debug.WriteLineIf%2A>.","nodes":[{"content":"This class provides methods to display an <xref:System.Diagnostics.Debug.Assert%2A> dialog box, and to emit an assertion that will always fail. This class provides write methods in the following variations: <xref:System.Diagnostics.Debug.Write%2A>, <xref:System.Diagnostics.Debug.WriteLine%2A>, <xref:System.Diagnostics.Debug.WriteIf%2A> and <xref:System.Diagnostics.Debug.WriteLineIf%2A>.","pos":[0,389],"nodes":[{"content":"This class provides methods to display an <ph id=\"ph1\">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> dialog box, and to emit an assertion that will always fail.","pos":[0,143],"source":"This class provides methods to display an <xref:System.Diagnostics.Debug.Assert%2A> dialog box, and to emit an assertion that will always fail."},{"content":"This class provides write methods in the following variations: <ph id=\"ph1\">&lt;xref:System.Diagnostics.Debug.Write%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Diagnostics.Debug.WriteLine%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Diagnostics.Debug.WriteIf%2A&gt;</ph> and <ph id=\"ph4\">&lt;xref:System.Diagnostics.Debug.WriteLineIf%2A&gt;</ph>.","pos":[144,389],"source":" This class provides write methods in the following variations: <xref:System.Diagnostics.Debug.Write%2A>, <xref:System.Diagnostics.Debug.WriteLine%2A>, <xref:System.Diagnostics.Debug.WriteIf%2A> and <xref:System.Diagnostics.Debug.WriteLineIf%2A>."}]}]},{"pos":[644,1076],"content":"The <xref:System.Diagnostics.BooleanSwitch> and <xref:System.Diagnostics.TraceSwitch> classes provide means to dynamically control the tracing output. You can modify the values of these switches without recompiling your application. For information on using the configuration file to set a switch, see the <xref:System.Diagnostics.Switch> class and the [Trace Switches](~/docs/framework/debug-trace-profile/trace-switches.md) topic.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Diagnostics.BooleanSwitch&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> classes provide means to dynamically control the tracing output.","pos":[0,150],"source":"The <xref:System.Diagnostics.BooleanSwitch> and <xref:System.Diagnostics.TraceSwitch> classes provide means to dynamically control the tracing output."},{"content":"You can modify the values of these switches without recompiling your application.","pos":[151,232]},{"content":"For information on using the configuration file to set a switch, see the <ph id=\"ph1\">&lt;xref:System.Diagnostics.Switch&gt;</ph> class and the <bpt id=\"p1\">[</bpt>Trace Switches<ept id=\"p1\">](~/docs/framework/debug-trace-profile/trace-switches.md)</ept> topic.","pos":[233,432],"source":" For information on using the configuration file to set a switch, see the <xref:System.Diagnostics.Switch> class and the [Trace Switches](~/docs/framework/debug-trace-profile/trace-switches.md) topic."}]},{"pos":[1083,1598],"content":"You can customize the tracing output's target by adding <xref:System.Diagnostics.TraceListener> instances to or removing instances from the <xref:System.Diagnostics.Debug.Listeners%2A> collection. The <xref:System.Diagnostics.Debug.Listeners%2A> collection is shared by both the <xref:System.Diagnostics.Debug> and the <xref:System.Diagnostics.Trace> classes; adding a trace listener to either class adds the listener to both. By default, the <xref:System.Diagnostics.DefaultTraceListener> class emits trace output.","nodes":[{"content":"You can customize the tracing output's target by adding <xref:System.Diagnostics.TraceListener> instances to or removing instances from the <xref:System.Diagnostics.Debug.Listeners%2A> collection. The <xref:System.Diagnostics.Debug.Listeners%2A> collection is shared by both the <xref:System.Diagnostics.Debug> and the <xref:System.Diagnostics.Trace> classes; adding a trace listener to either class adds the listener to both. By default, the <xref:System.Diagnostics.DefaultTraceListener> class emits trace output.","pos":[0,515],"nodes":[{"content":"You can customize the tracing output's target by adding <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> instances to or removing instances from the <ph id=\"ph2\">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection.","pos":[0,196],"source":"You can customize the tracing output's target by adding <xref:System.Diagnostics.TraceListener> instances to or removing instances from the <xref:System.Diagnostics.Debug.Listeners%2A> collection."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection is shared by both the <ph id=\"ph2\">&lt;xref:System.Diagnostics.Debug&gt;</ph> and the <ph id=\"ph3\">&lt;xref:System.Diagnostics.Trace&gt;</ph> classes; adding a trace listener to either class adds the listener to both.","pos":[197,426],"source":" The <xref:System.Diagnostics.Debug.Listeners%2A> collection is shared by both the <xref:System.Diagnostics.Debug> and the <xref:System.Diagnostics.Trace> classes; adding a trace listener to either class adds the listener to both."},{"content":"By default, the <ph id=\"ph1\">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> class emits trace output.","pos":[427,515],"source":" By default, the <xref:System.Diagnostics.DefaultTraceListener> class emits trace output."}]}]},{"pos":[1606,2083],"content":"[!NOTE]\n Adding a trace listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection can cause an exception to be thrown while tracing, if a resource used by the trace listener is not available. The conditions and the exception thrown depend on the trace listener and cannot be enumerated in this topic. It may be useful to place calls to the <xref:System.Diagnostics.Debug> methods in `try`/`catch` blocks to detect and handle any exceptions from trace listeners.","leadings":["","> "],"nodes":[{"content":" Adding a trace listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection can cause an exception to be thrown while tracing, if a resource used by the trace listener is not available. The conditions and the exception thrown depend on the trace listener and cannot be enumerated in this topic. It may be useful to place calls to the <xref:System.Diagnostics.Debug> methods in `try`/`catch` blocks to detect and handle any exceptions from trace listeners.","pos":[8,475],"nodes":[{"content":"Adding a trace listener to the <ph id=\"ph1\">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection can cause an exception to be thrown while tracing, if a resource used by the trace listener is not available.","pos":[1,197],"source":" Adding a trace listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection can cause an exception to be thrown while tracing, if a resource used by the trace listener is not available."},{"content":"The conditions and the exception thrown depend on the trace listener and cannot be enumerated in this topic.","pos":[198,306]},{"content":"It may be useful to place calls to the <ph id=\"ph1\">&lt;xref:System.Diagnostics.Debug&gt;</ph> methods in <ph id=\"ph2\">`try`</ph><ph id=\"ph3\">/</ph><ph id=\"ph4\">`catch`</ph> blocks to detect and handle any exceptions from trace listeners.","pos":[307,467],"source":" It may be useful to place calls to the <xref:System.Diagnostics.Debug> methods in `try`/`catch` blocks to detect and handle any exceptions from trace listeners."}]}]},{"pos":[2090,2508],"content":"You can modify the level of indentation using the <xref:System.Diagnostics.Debug.Indent%2A> method or the <xref:System.Diagnostics.Debug.IndentLevel%2A> property. To modify the indent spacing, use the <xref:System.Diagnostics.Debug.IndentSize%2A> property. You can specify whether to automatically flush the output buffer after each write by setting the <xref:System.Diagnostics.Debug.AutoFlush%2A> property to `true`.","nodes":[{"content":"You can modify the level of indentation using the <ph id=\"ph1\">&lt;xref:System.Diagnostics.Debug.Indent%2A&gt;</ph> method or the <ph id=\"ph2\">&lt;xref:System.Diagnostics.Debug.IndentLevel%2A&gt;</ph> property.","pos":[0,162],"source":"You can modify the level of indentation using the <xref:System.Diagnostics.Debug.Indent%2A> method or the <xref:System.Diagnostics.Debug.IndentLevel%2A> property."},{"content":"To modify the indent spacing, use the <ph id=\"ph1\">&lt;xref:System.Diagnostics.Debug.IndentSize%2A&gt;</ph> property.","pos":[163,256],"source":" To modify the indent spacing, use the <xref:System.Diagnostics.Debug.IndentSize%2A> property."},{"content":"You can specify whether to automatically flush the output buffer after each write by setting the <ph id=\"ph1\">&lt;xref:System.Diagnostics.Debug.AutoFlush%2A&gt;</ph> property to <ph id=\"ph2\">`true`</ph>.","pos":[257,418],"source":" You can specify whether to automatically flush the output buffer after each write by setting the <xref:System.Diagnostics.Debug.AutoFlush%2A> property to `true`."}]},{"pos":[2515,2818],"content":"To set the <xref:System.Diagnostics.Debug.AutoFlush%2A> and <xref:System.Diagnostics.Debug.IndentSize%2A> for <xref:System.Diagnostics.Debug>, you can edit the configuration file corresponding to the name of your application. The configuration file should be formatted as shown in the following example.","nodes":[{"content":"To set the <xref:System.Diagnostics.Debug.AutoFlush%2A> and <xref:System.Diagnostics.Debug.IndentSize%2A> for <xref:System.Diagnostics.Debug>, you can edit the configuration file corresponding to the name of your application. The configuration file should be formatted as shown in the following example.","pos":[0,303],"nodes":[{"content":"To set the <ph id=\"ph1\">&lt;xref:System.Diagnostics.Debug.AutoFlush%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Diagnostics.Debug.IndentSize%2A&gt;</ph> for <ph id=\"ph3\">&lt;xref:System.Diagnostics.Debug&gt;</ph>, you can edit the configuration file corresponding to the name of your application.","pos":[0,225],"source":"To set the <xref:System.Diagnostics.Debug.AutoFlush%2A> and <xref:System.Diagnostics.Debug.IndentSize%2A> for <xref:System.Diagnostics.Debug>, you can edit the configuration file corresponding to the name of your application."},{"content":"The configuration file should be formatted as shown in the following example.","pos":[226,303]}]}]},{"pos":[2976,3440],"content":"The <xref:System.Diagnostics.ConditionalAttribute> attribute is applied to the methods of <xref:System.Diagnostics.Debug>. Compilers that support <xref:System.Diagnostics.ConditionalAttribute> ignore calls to these methods unless \"DEBUG\" is defined as a conditional compilation symbol. Refer to a compiler's documentation to determine whether <xref:System.Diagnostics.ConditionalAttribute> is supported and the syntax for defining a conditional compilation symbol.","nodes":[{"content":"The <xref:System.Diagnostics.ConditionalAttribute> attribute is applied to the methods of <xref:System.Diagnostics.Debug>. Compilers that support <xref:System.Diagnostics.ConditionalAttribute> ignore calls to these methods unless \"DEBUG\" is defined as a conditional compilation symbol. Refer to a compiler's documentation to determine whether <xref:System.Diagnostics.ConditionalAttribute> is supported and the syntax for defining a conditional compilation symbol.","pos":[0,464],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Diagnostics.ConditionalAttribute&gt;</ph> attribute is applied to the methods of <ph id=\"ph2\">&lt;xref:System.Diagnostics.Debug&gt;</ph>.","pos":[0,122],"source":"The <xref:System.Diagnostics.ConditionalAttribute> attribute is applied to the methods of <xref:System.Diagnostics.Debug>."},{"content":"Compilers that support <ph id=\"ph1\">&lt;xref:System.Diagnostics.ConditionalAttribute&gt;</ph> ignore calls to these methods unless \"DEBUG\" is defined as a conditional compilation symbol.","pos":[123,285],"source":" Compilers that support <xref:System.Diagnostics.ConditionalAttribute> ignore calls to these methods unless \"DEBUG\" is defined as a conditional compilation symbol."},{"content":"Refer to a compiler's documentation to determine whether <ph id=\"ph1\">&lt;xref:System.Diagnostics.ConditionalAttribute&gt;</ph> is supported and the syntax for defining a conditional compilation symbol.","pos":[286,464],"source":" Refer to a compiler's documentation to determine whether <xref:System.Diagnostics.ConditionalAttribute> is supported and the syntax for defining a conditional compilation symbol."}]}]},{"pos":[3448,3907],"content":"[!NOTE]\n In Visual Studio C# and Visual Basic projects, by default, the \"DEBUG\" conditional compilation symbol is defined for debug builds, and the \"TRACE\" symbol is defined for both debug and release builds. For information about how to disable this behavior, see the Visual Studio documentation. For information about conditional debugging in Visual C++, see [Debug Class (C++/CLI)](http://msdn.microsoft.com/library/076bd528-1b6f-4e8a-a372-eb5849cf969a).","leadings":["","> "],"nodes":[{"content":" In Visual Studio C# and Visual Basic projects, by default, the \"DEBUG\" conditional compilation symbol is defined for debug builds, and the \"TRACE\" symbol is defined for both debug and release builds. For information about how to disable this behavior, see the Visual Studio documentation. For information about conditional debugging in Visual C++, see [Debug Class (C++/CLI)](http://msdn.microsoft.com/library/076bd528-1b6f-4e8a-a372-eb5849cf969a).","pos":[8,457],"nodes":[{"content":"In Visual Studio C# and Visual Basic projects, by default, the \"DEBUG\" conditional compilation symbol is defined for debug builds, and the \"TRACE\" symbol is defined for both debug and release builds.","pos":[1,200]},{"content":"For information about how to disable this behavior, see the Visual Studio documentation.","pos":[201,289]},{"content":"For information about conditional debugging in Visual C++, see <bpt id=\"p1\">[</bpt>Debug Class (C++/CLI)<ept id=\"p1\">](http://msdn.microsoft.com/library/076bd528-1b6f-4e8a-a372-eb5849cf969a)</ept>.","pos":[290,449],"source":" For information about conditional debugging in Visual C++, see [Debug Class (C++/CLI)](http://msdn.microsoft.com/library/076bd528-1b6f-4e8a-a372-eb5849cf969a)."}]}]},{"pos":[3914,4242],"content":"To define the \"DEBUG\" conditional compilation symbol in C#, add the `/d:DEBUG` option to the compiler command line when you compile your code using a command line, or add `#define DEBUG` to the top of your file. In Visual Basic, add the `/d:DEBUG=True` option to the compiler command line or add `#Const DEBUG=True` to the file.","nodes":[{"content":"To define the \"DEBUG\" conditional compilation symbol in C#, add the <ph id=\"ph1\">`/d:DEBUG`</ph> option to the compiler command line when you compile your code using a command line, or add <ph id=\"ph2\">`#define DEBUG`</ph> to the top of your file.","pos":[0,211],"source":"To define the \"DEBUG\" conditional compilation symbol in C#, add the `/d:DEBUG` option to the compiler command line when you compile your code using a command line, or add `#define DEBUG` to the top of your file."},{"content":"In Visual Basic, add the <ph id=\"ph1\">`/d:DEBUG=True`</ph> option to the compiler command line or add <ph id=\"ph2\">`#Const DEBUG=True`</ph> to the file.","pos":[212,328],"source":" In Visual Basic, add the `/d:DEBUG=True` option to the compiler command line or add `#Const DEBUG=True` to the file."}]}],"pos":[2406,6691],"yaml":true,"extradata":"MT"},{"content":"Checks for a condition; if the condition is `false`, displays a message box that shows the call stack.","nodes":[{"pos":[0,102],"content":"Checks for a condition; if the condition is <ph id=\"ph1\">`false`</ph>, displays a message box that shows the call stack.","source":"Checks for a condition; if the condition is `false`, displays a message box that shows the call stack."}],"pos":[9208,9311],"yaml":true},{"content":"By default, the <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=fullName> method works only in debug builds. Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=fullName> method if you want to do assertions in release builds. For more information, see [Assertions in Managed Code](http://msdn.microsoft.com/library/70ab2522-6486-4076-a1a9-e0f11cd0f3a1).  \n  \n> [!IMPORTANT]\n>  The `Assert` methods are not available for [!INCLUDE[win8_appstore_long](~/includes/win8-appstore-long-md.md)] apps.  \n  \n Typically, the <xref:System.Diagnostics.Debug.Assert%28System.Boolean%29> method is used to identify logic errors during program development. <xref:System.Diagnostics.Debug.Assert%2A> evaluates the condition. If the result is `false`, it sends a failure message to the <xref:System.Diagnostics.Debug.Listeners%2A> collection. You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.  \n  \n When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers. The message box contains three buttons: **Abort**, **Retry**, and **Ignore**. Clicking the **Abort** button terminates the application. Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not. Clicking **Ignore** continues with the next instruction in the code.  \n  \n> [!NOTE]\n>  [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] apps do not support modal dialog boxes, so they behave the same in user interface mode and non-user interface mode. The message is written to the active trace listeners in debugging mode, or no message is written in release mode.  \n  \n> [!NOTE]\n>  The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>. If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed. The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [\\&lt;clear\\&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [\\&lt;remove\\&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).  \n  \n You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application. In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=fullName> property. The configuration file should be formatted as follows:  \n  \n```  \n<configuration>  \n  <system.diagnostics>  \n    <assert assertuienabled=\"true\" logfilename=\"c:\\\\myFile.log\" />  \n  </system.diagnostics>  \n</configuration>  \n```","nodes":[{"pos":[0,375],"content":"By default, the <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=fullName> method works only in debug builds. Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=fullName> method if you want to do assertions in release builds. For more information, see [Assertions in Managed Code](http://msdn.microsoft.com/library/70ab2522-6486-4076-a1a9-e0f11cd0f3a1).","nodes":[{"content":"By default, the <ph id=\"ph1\">&lt;xref:System.Diagnostics.Debug.Assert%2A?displayProperty=fullName&gt;</ph> method works only in debug builds.","pos":[0,117],"source":"By default, the <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=fullName> method works only in debug builds."},{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Diagnostics.Trace.Assert%2A?displayProperty=fullName&gt;</ph> method if you want to do assertions in release builds.","pos":[118,247],"source":" Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=fullName> method if you want to do assertions in release builds."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Assertions in Managed Code<ept id=\"p1\">](http://msdn.microsoft.com/library/70ab2522-6486-4076-a1a9-e0f11cd0f3a1)</ept>.","pos":[248,375],"source":" For more information, see [Assertions in Managed Code](http://msdn.microsoft.com/library/70ab2522-6486-4076-a1a9-e0f11cd0f3a1)."}]},{"pos":[383,515],"content":"[!IMPORTANT]\n The `Assert` methods are not available for [!INCLUDE[win8_appstore_long](~/includes/win8-appstore-long-md.md)] apps.","leadings":["","> "],"nodes":[{"content":"The <ph id=\"ph1\">`Assert`</ph> methods are not available for <ph id=\"ph2\">[!INCLUDE[win8_appstore_long](~/includes/win8-appstore-long-md.md)]</ph> apps.","pos":[14,130],"source":" The `Assert` methods are not available for [!INCLUDE[win8_appstore_long](~/includes/win8-appstore-long-md.md)] apps."}]},{"pos":[522,1018],"content":"Typically, the <xref:System.Diagnostics.Debug.Assert%28System.Boolean%29> method is used to identify logic errors during program development. <xref:System.Diagnostics.Debug.Assert%2A> evaluates the condition. If the result is `false`, it sends a failure message to the <xref:System.Diagnostics.Debug.Listeners%2A> collection. You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.","nodes":[{"content":"Typically, the <ph id=\"ph1\">&lt;xref:System.Diagnostics.Debug.Assert%28System.Boolean%29&gt;</ph> method is used to identify logic errors during program development.","pos":[0,141],"source":"Typically, the <xref:System.Diagnostics.Debug.Assert%28System.Boolean%29> method is used to identify logic errors during program development."},{"content":"<ph id=\"ph1\">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> evaluates the condition.","pos":[142,208],"source":" <xref:System.Diagnostics.Debug.Assert%2A> evaluates the condition."},{"content":"If the result is <ph id=\"ph1\">`false`</ph>, it sends a failure message to the <ph id=\"ph2\">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection.","pos":[209,325],"source":" If the result is `false`, it sends a failure message to the <xref:System.Diagnostics.Debug.Listeners%2A> collection."},{"content":"You can customize this behavior by adding a <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> to, or removing one from, the <ph id=\"ph2\">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection.","pos":[326,496],"source":" You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection."}]},{"pos":[1025,1505],"content":"When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers. The message box contains three buttons: **Abort**, **Retry**, and **Ignore**. Clicking the **Abort** button terminates the application. Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not. Clicking **Ignore** continues with the next instruction in the code.","nodes":[{"content":"When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers.","pos":[0,129]},{"content":"The message box contains three buttons: <bpt id=\"p1\">**</bpt>Abort<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>Retry<ept id=\"p2\">**</ept>, and <bpt id=\"p3\">**</bpt>Ignore<ept id=\"p3\">**</ept>.","pos":[130,207],"source":" The message box contains three buttons: **Abort**, **Retry**, and **Ignore**."},{"content":"Clicking the <bpt id=\"p1\">**</bpt>Abort<ept id=\"p1\">**</ept> button terminates the application.","pos":[208,265],"source":" Clicking the **Abort** button terminates the application."},{"content":"Clicking <bpt id=\"p1\">**</bpt>Retry<ept id=\"p1\">**</ept> sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.","pos":[266,411],"source":" Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not."},{"content":"Clicking <bpt id=\"p1\">**</bpt>Ignore<ept id=\"p1\">**</ept> continues with the next instruction in the code.","pos":[412,480],"source":" Clicking **Ignore** continues with the next instruction in the code."}]},{"pos":[1513,1819],"content":"[!NOTE]\n [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] apps do not support modal dialog boxes, so they behave the same in user interface mode and non-user interface mode. The message is written to the active trace listeners in debugging mode, or no message is written in release mode.","leadings":["","> "],"nodes":[{"content":" [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] apps do not support modal dialog boxes, so they behave the same in user interface mode and non-user interface mode. The message is written to the active trace listeners in debugging mode, or no message is written in release mode.","pos":[8,304],"nodes":[{"content":"<ph id=\"ph1\"> [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]</ph> apps do not support modal dialog boxes, so they behave the same in user interface mode and non-user interface mode.","pos":[0,182],"source":" [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] apps do not support modal dialog boxes, so they behave the same in user interface mode and non-user interface mode."},{"content":"The message is written to the active trace listeners in debugging mode, or no message is written in release mode.","pos":[183,296]}]}]},{"pos":[1827,2612],"content":"[!NOTE]\n The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>. If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed. The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [\\&lt;clear\\&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [\\&lt;remove\\&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).","leadings":["","> "],"nodes":[{"content":" The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>. If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed. The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [\\&lt;clear\\&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [\\&lt;remove\\&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).","pos":[8,783],"nodes":[{"content":"The display of the message box depends on the presence of the <ph id=\"ph1\">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.","pos":[1,110],"source":" The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>."},{"content":"If the <ph id=\"ph1\">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> is not in the <ph id=\"ph2\">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection, the message box is not displayed.","pos":[111,269],"source":" If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> can be removed by the <bpt id=\"p1\">[</bpt><ph id=\"ph2\">\\&amp;</ph>lt;clear<ph id=\"ph3\">\\&amp;</ph>gt;<ept id=\"p1\">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>, the <bpt id=\"p2\">[</bpt><ph id=\"ph4\">\\&amp;</ph>lt;remove<ph id=\"ph5\">\\&amp;</ph>gt;<ept id=\"p2\">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>, or by calling the <ph id=\"ph6\">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph> method on the <ph id=\"ph7\">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> property (<ph id=\"ph8\">`System.Diagnostics.Trace.Listeners.Clear()`</ph>).","pos":[270,775],"source":" The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [\\&lt;clear\\&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [\\&lt;remove\\&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`)."}]}]},{"pos":[2619,3003],"content":"You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application. In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=fullName> property. The configuration file should be formatted as follows:","nodes":[{"content":"You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application. In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=fullName> property. The configuration file should be formatted as follows:","pos":[0,384],"nodes":[{"content":"You can change the behavior of the <ph id=\"ph1\">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> in the configuration file that corresponds to the name of your application.","pos":[0,157],"source":"You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application."},{"content":"In this file, you can enable and disable the assert message box or set the <ph id=\"ph1\">&lt;xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=fullName&gt;</ph> property.","pos":[158,329],"source":" In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=fullName> property."},{"content":"The configuration file should be formatted as follows:","pos":[330,384]}]}]}],"pos":[9322,12533],"yaml":true,"extradata":"MT"},{"content":"The conditional expression to evaluate. If the condition is `true`, a failure message is not sent and the message box is not displayed.","nodes":[{"pos":[0,135],"content":"The conditional expression to evaluate. If the condition is `true`, a failure message is not sent and the message box is not displayed.","nodes":[{"content":"The conditional expression to evaluate.","pos":[0,39]},{"content":"If the condition is <ph id=\"ph1\">`true`</ph>, a failure message is not sent and the message box is not displayed.","pos":[40,135],"source":" If the condition is `true`, a failure message is not sent and the message box is not displayed."}]}],"pos":[13482,13618],"yaml":true},{"content":"Checks for a condition; if the condition is `false`, outputs a specified message and displays a message box that shows the call stack.","nodes":[{"pos":[0,134],"content":"Checks for a condition; if the condition is <ph id=\"ph1\">`false`</ph>, outputs a specified message and displays a message box that shows the call stack.","source":"Checks for a condition; if the condition is `false`, outputs a specified message and displays a message box that shows the call stack."}],"pos":[15258,15393],"yaml":true},{"content":"By default, the <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=fullName> method works only in debug builds. Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=fullName> method if you want to do assertions in release builds. For more information, see [Assertions in Managed Code](http://msdn.microsoft.com/library/70ab2522-6486-4076-a1a9-e0f11cd0f3a1).  \n  \n Typically, the <xref:System.Diagnostics.Debug.Assert%2A> method is used to identify logic errors during program development. <xref:System.Diagnostics.Debug.Assert%2A> evaluates the condition. If the result is `false`, it sends the specified diagnostic message to the <xref:System.Diagnostics.Debug.Listeners%2A> collection. You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.  \n  \n When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers. The message box contains three buttons: **Abort**, **Retry**, and **Ignore**. Clicking the **Abort** button terminates the application. Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not. Clicking **Ignore** continues with the next instruction in the code.  \n  \n> [!NOTE]\n>  The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>. If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed. The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [\\&lt;clear\\&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [\\&lt;remove\\&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).  \n  \n You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application. In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=fullName> property. The configuration file should be formatted as follows:  \n  \n```  \n<configuration>  \n  <system.diagnostics>  \n    <assert assertuienabled=\"true\" logfilename=\"c:\\\\myFile.log\" />  \n  </system.diagnostics>  \n</configuration>  \n```","nodes":[{"pos":[0,375],"content":"By default, the <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=fullName> method works only in debug builds. Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=fullName> method if you want to do assertions in release builds. For more information, see [Assertions in Managed Code](http://msdn.microsoft.com/library/70ab2522-6486-4076-a1a9-e0f11cd0f3a1).","nodes":[{"content":"By default, the <ph id=\"ph1\">&lt;xref:System.Diagnostics.Debug.Assert%2A?displayProperty=fullName&gt;</ph> method works only in debug builds.","pos":[0,117],"source":"By default, the <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=fullName> method works only in debug builds."},{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Diagnostics.Trace.Assert%2A?displayProperty=fullName&gt;</ph> method if you want to do assertions in release builds.","pos":[118,247],"source":" Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=fullName> method if you want to do assertions in release builds."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Assertions in Managed Code<ept id=\"p1\">](http://msdn.microsoft.com/library/70ab2522-6486-4076-a1a9-e0f11cd0f3a1)</ept>.","pos":[248,375],"source":" For more information, see [Assertions in Managed Code](http://msdn.microsoft.com/library/70ab2522-6486-4076-a1a9-e0f11cd0f3a1)."}]},{"pos":[382,876],"content":"Typically, the <xref:System.Diagnostics.Debug.Assert%2A> method is used to identify logic errors during program development. <xref:System.Diagnostics.Debug.Assert%2A> evaluates the condition. If the result is `false`, it sends the specified diagnostic message to the <xref:System.Diagnostics.Debug.Listeners%2A> collection. You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.","nodes":[{"content":"Typically, the <ph id=\"ph1\">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> method is used to identify logic errors during program development.","pos":[0,124],"source":"Typically, the <xref:System.Diagnostics.Debug.Assert%2A> method is used to identify logic errors during program development."},{"content":"<ph id=\"ph1\">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> evaluates the condition.","pos":[125,191],"source":" <xref:System.Diagnostics.Debug.Assert%2A> evaluates the condition."},{"content":"If the result is <ph id=\"ph1\">`false`</ph>, it sends the specified diagnostic message to the <ph id=\"ph2\">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection.","pos":[192,323],"source":" If the result is `false`, it sends the specified diagnostic message to the <xref:System.Diagnostics.Debug.Listeners%2A> collection."},{"content":"You can customize this behavior by adding a <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> to, or removing one from, the <ph id=\"ph2\">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection.","pos":[324,494],"source":" You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection."}]},{"pos":[883,1363],"content":"When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers. The message box contains three buttons: **Abort**, **Retry**, and **Ignore**. Clicking the **Abort** button terminates the application. Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not. Clicking **Ignore** continues with the next instruction in the code.","nodes":[{"content":"When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers.","pos":[0,129]},{"content":"The message box contains three buttons: <bpt id=\"p1\">**</bpt>Abort<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>Retry<ept id=\"p2\">**</ept>, and <bpt id=\"p3\">**</bpt>Ignore<ept id=\"p3\">**</ept>.","pos":[130,207],"source":" The message box contains three buttons: **Abort**, **Retry**, and **Ignore**."},{"content":"Clicking the <bpt id=\"p1\">**</bpt>Abort<ept id=\"p1\">**</ept> button terminates the application.","pos":[208,265],"source":" Clicking the **Abort** button terminates the application."},{"content":"Clicking <bpt id=\"p1\">**</bpt>Retry<ept id=\"p1\">**</ept> sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.","pos":[266,411],"source":" Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not."},{"content":"Clicking <bpt id=\"p1\">**</bpt>Ignore<ept id=\"p1\">**</ept> continues with the next instruction in the code.","pos":[412,480],"source":" Clicking **Ignore** continues with the next instruction in the code."}]},{"pos":[1371,2156],"content":"[!NOTE]\n The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>. If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed. The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [\\&lt;clear\\&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [\\&lt;remove\\&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).","leadings":["","> "],"nodes":[{"content":" The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>. If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed. The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [\\&lt;clear\\&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [\\&lt;remove\\&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).","pos":[8,783],"nodes":[{"content":"The display of the message box depends on the presence of the <ph id=\"ph1\">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.","pos":[1,110],"source":" The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>."},{"content":"If the <ph id=\"ph1\">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> is not in the <ph id=\"ph2\">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection, the message box is not displayed.","pos":[111,269],"source":" If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> can be removed by the <bpt id=\"p1\">[</bpt><ph id=\"ph2\">\\&amp;</ph>lt;clear<ph id=\"ph3\">\\&amp;</ph>gt;<ept id=\"p1\">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>, the <bpt id=\"p2\">[</bpt><ph id=\"ph4\">\\&amp;</ph>lt;remove<ph id=\"ph5\">\\&amp;</ph>gt;<ept id=\"p2\">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>, or by calling the <ph id=\"ph6\">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph> method on the <ph id=\"ph7\">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> property (<ph id=\"ph8\">`System.Diagnostics.Trace.Listeners.Clear()`</ph>).","pos":[270,775],"source":" The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [\\&lt;clear\\&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [\\&lt;remove\\&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`)."}]}]},{"pos":[2163,2547],"content":"You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application. In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=fullName> property. The configuration file should be formatted as follows:","nodes":[{"content":"You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application. In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=fullName> property. The configuration file should be formatted as follows:","pos":[0,384],"nodes":[{"content":"You can change the behavior of the <ph id=\"ph1\">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> in the configuration file that corresponds to the name of your application.","pos":[0,157],"source":"You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application."},{"content":"In this file, you can enable and disable the assert message box or set the <ph id=\"ph1\">&lt;xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=fullName&gt;</ph> property.","pos":[158,329],"source":" In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=fullName> property."},{"content":"The configuration file should be formatted as follows:","pos":[330,384]}]}]}],"pos":[15404,18153],"yaml":true,"extradata":"MT"},{"content":"The conditional expression to evaluate. If the condition is `true`, the specified message is not sent and the message box is not displayed.","nodes":[{"pos":[0,139],"content":"The conditional expression to evaluate. If the condition is `true`, the specified message is not sent and the message box is not displayed.","nodes":[{"content":"The conditional expression to evaluate.","pos":[0,39]},{"content":"If the condition is <ph id=\"ph1\">`true`</ph>, the specified message is not sent and the message box is not displayed.","pos":[40,139],"source":" If the condition is `true`, the specified message is not sent and the message box is not displayed."}]}],"pos":[18984,19124],"yaml":true},{"content":"The message to send to the <xref href=\"System.Diagnostics.Trace.Listeners\"></xref> collection.","nodes":[{"pos":[0,94],"content":"The message to send to the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.Trace.Listeners\"&gt;&lt;/xref&gt;</ph> collection.","source":"The message to send to the <xref href=\"System.Diagnostics.Trace.Listeners\"></xref> collection."}],"pos":[19187,19282],"yaml":true},{"content":"Checks for a condition; if the condition is `false`, outputs two specified messages and displays a message box that shows the call stack.","nodes":[{"pos":[0,137],"content":"Checks for a condition; if the condition is <ph id=\"ph1\">`false`</ph>, outputs two specified messages and displays a message box that shows the call stack.","source":"Checks for a condition; if the condition is `false`, outputs two specified messages and displays a message box that shows the call stack."}],"pos":[20988,21126],"yaml":true},{"content":"By default, the <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=fullName> method works only in debug builds. Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=fullName> method if you want to do assertions in release builds. For more information, see [Assertions in Managed Code](http://msdn.microsoft.com/library/70ab2522-6486-4076-a1a9-e0f11cd0f3a1).  \n  \n Typically, the <xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%29> method is used to identify logic errors during program development. <xref:System.Diagnostics.Debug.Assert%2A> evaluates the condition. If the result is `false`, it sends the specified diagnostic message and detailed message to the <xref:System.Diagnostics.Debug.Listeners%2A> collection. You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.  \n  \n When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers. The message box contains three buttons: **Abort**, **Retry**, and **Ignore**. Clicking the **Abort** button terminates the application. Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not. Clicking **Ignore** continues with the next instruction in the code.  \n  \n> [!NOTE]\n>  The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>. If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed. The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [\\&lt;clear\\&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [\\&lt;remove\\&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).  \n  \n You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application. In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=fullName> property. The configuration file should be formatted as follows:  \n  \n```  \n<configuration>  \n  <system.diagnostics>  \n    <assert assertuienabled=\"true\" logfilename=\"c:\\\\myFile.log\" />  \n  </system.diagnostics>  \n</configuration>  \n```","nodes":[{"pos":[0,375],"content":"By default, the <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=fullName> method works only in debug builds. Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=fullName> method if you want to do assertions in release builds. For more information, see [Assertions in Managed Code](http://msdn.microsoft.com/library/70ab2522-6486-4076-a1a9-e0f11cd0f3a1).","nodes":[{"content":"By default, the <ph id=\"ph1\">&lt;xref:System.Diagnostics.Debug.Assert%2A?displayProperty=fullName&gt;</ph> method works only in debug builds.","pos":[0,117],"source":"By default, the <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=fullName> method works only in debug builds."},{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Diagnostics.Trace.Assert%2A?displayProperty=fullName&gt;</ph> method if you want to do assertions in release builds.","pos":[118,247],"source":" Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=fullName> method if you want to do assertions in release builds."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Assertions in Managed Code<ept id=\"p1\">](http://msdn.microsoft.com/library/70ab2522-6486-4076-a1a9-e0f11cd0f3a1)</ept>.","pos":[248,375],"source":" For more information, see [Assertions in Managed Code](http://msdn.microsoft.com/library/70ab2522-6486-4076-a1a9-e0f11cd0f3a1)."}]},{"pos":[382,946],"content":"Typically, the <xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%29> method is used to identify logic errors during program development. <xref:System.Diagnostics.Debug.Assert%2A> evaluates the condition. If the result is `false`, it sends the specified diagnostic message and detailed message to the <xref:System.Diagnostics.Debug.Listeners%2A> collection. You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.","nodes":[{"content":"Typically, the <ph id=\"ph1\">&lt;xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%29&gt;</ph> method is used to identify logic errors during program development.","pos":[0,173],"source":"Typically, the <xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%29> method is used to identify logic errors during program development."},{"content":"<ph id=\"ph1\">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> evaluates the condition.","pos":[174,240],"source":" <xref:System.Diagnostics.Debug.Assert%2A> evaluates the condition."},{"content":"If the result is <ph id=\"ph1\">`false`</ph>, it sends the specified diagnostic message and detailed message to the <ph id=\"ph2\">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection.","pos":[241,393],"source":" If the result is `false`, it sends the specified diagnostic message and detailed message to the <xref:System.Diagnostics.Debug.Listeners%2A> collection."},{"content":"You can customize this behavior by adding a <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> to, or removing one from, the <ph id=\"ph2\">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection.","pos":[394,564],"source":" You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection."}]},{"pos":[953,1433],"content":"When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers. The message box contains three buttons: **Abort**, **Retry**, and **Ignore**. Clicking the **Abort** button terminates the application. Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not. Clicking **Ignore** continues with the next instruction in the code.","nodes":[{"content":"When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers.","pos":[0,129]},{"content":"The message box contains three buttons: <bpt id=\"p1\">**</bpt>Abort<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>Retry<ept id=\"p2\">**</ept>, and <bpt id=\"p3\">**</bpt>Ignore<ept id=\"p3\">**</ept>.","pos":[130,207],"source":" The message box contains three buttons: **Abort**, **Retry**, and **Ignore**."},{"content":"Clicking the <bpt id=\"p1\">**</bpt>Abort<ept id=\"p1\">**</ept> button terminates the application.","pos":[208,265],"source":" Clicking the **Abort** button terminates the application."},{"content":"Clicking <bpt id=\"p1\">**</bpt>Retry<ept id=\"p1\">**</ept> sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.","pos":[266,411],"source":" Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not."},{"content":"Clicking <bpt id=\"p1\">**</bpt>Ignore<ept id=\"p1\">**</ept> continues with the next instruction in the code.","pos":[412,480],"source":" Clicking **Ignore** continues with the next instruction in the code."}]},{"pos":[1441,2226],"content":"[!NOTE]\n The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>. If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed. The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [\\&lt;clear\\&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [\\&lt;remove\\&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).","leadings":["","> "],"nodes":[{"content":" The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>. If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed. The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [\\&lt;clear\\&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [\\&lt;remove\\&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).","pos":[8,783],"nodes":[{"content":"The display of the message box depends on the presence of the <ph id=\"ph1\">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.","pos":[1,110],"source":" The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>."},{"content":"If the <ph id=\"ph1\">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> is not in the <ph id=\"ph2\">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection, the message box is not displayed.","pos":[111,269],"source":" If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> can be removed by the <bpt id=\"p1\">[</bpt><ph id=\"ph2\">\\&amp;</ph>lt;clear<ph id=\"ph3\">\\&amp;</ph>gt;<ept id=\"p1\">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>, the <bpt id=\"p2\">[</bpt><ph id=\"ph4\">\\&amp;</ph>lt;remove<ph id=\"ph5\">\\&amp;</ph>gt;<ept id=\"p2\">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>, or by calling the <ph id=\"ph6\">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph> method on the <ph id=\"ph7\">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> property (<ph id=\"ph8\">`System.Diagnostics.Trace.Listeners.Clear()`</ph>).","pos":[270,775],"source":" The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [\\&lt;clear\\&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [\\&lt;remove\\&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`)."}]}]},{"pos":[2233,2617],"content":"You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application. In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=fullName> property. The configuration file should be formatted as follows:","nodes":[{"content":"You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application. In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=fullName> property. The configuration file should be formatted as follows:","pos":[0,384],"nodes":[{"content":"You can change the behavior of the <ph id=\"ph1\">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> in the configuration file that corresponds to the name of your application.","pos":[0,157],"source":"You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application."},{"content":"In this file, you can enable and disable the assert message box or set the <ph id=\"ph1\">&lt;xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=fullName&gt;</ph> property.","pos":[158,329],"source":" In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=fullName> property."},{"content":"The configuration file should be formatted as follows:","pos":[330,384]}]}]}],"pos":[21137,23956],"yaml":true,"extradata":"MT"},{"content":"The conditional expression to evaluate. If the condition is `true`, the specified messages are not sent and the message box is not displayed.","nodes":[{"pos":[0,141],"content":"The conditional expression to evaluate. If the condition is `true`, the specified messages are not sent and the message box is not displayed.","nodes":[{"content":"The conditional expression to evaluate.","pos":[0,39]},{"content":"If the condition is <ph id=\"ph1\">`true`</ph>, the specified messages are not sent and the message box is not displayed.","pos":[40,141],"source":" If the condition is `true`, the specified messages are not sent and the message box is not displayed."}]}],"pos":[24812,24954],"yaml":true},{"content":"The message to send to the <xref href=\"System.Diagnostics.Trace.Listeners\"></xref> collection.","nodes":[{"pos":[0,94],"content":"The message to send to the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.Trace.Listeners\"&gt;&lt;/xref&gt;</ph> collection.","source":"The message to send to the <xref href=\"System.Diagnostics.Trace.Listeners\"></xref> collection."}],"pos":[25017,25112],"yaml":true},{"content":"The detailed message to send to the <xref href=\"System.Diagnostics.Trace.Listeners\"></xref> collection.","nodes":[{"pos":[0,103],"content":"The detailed message to send to the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.Trace.Listeners\"&gt;&lt;/xref&gt;</ph> collection.","source":"The detailed message to send to the <xref href=\"System.Diagnostics.Trace.Listeners\"></xref> collection."}],"pos":[25181,25285],"yaml":true},{"content":"Checks for a condition; if the condition is `false`, outputs two messages (simple and formatted) and displays a message box that shows the call stack.","nodes":[{"pos":[0,150],"content":"Checks for a condition; if the condition is <ph id=\"ph1\">`false`</ph>, outputs two messages (simple and formatted) and displays a message box that shows the call stack.","source":"Checks for a condition; if the condition is `false`, outputs two messages (simple and formatted) and displays a message box that shows the call stack."}],"pos":[26949,27100],"yaml":true},{"content":"This method uses the  of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string. The resulting string is sent to the <xref:System.Diagnostics.Trace.Listeners%2A> collection.  \n  \n By default, the <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=fullName> method works only in debug builds. Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=fullName> method if you want to do assertions in release builds. For more information, see [Assertions in Managed Code](http://msdn.microsoft.com/library/70ab2522-6486-4076-a1a9-e0f11cd0f3a1).  \n  \n Typically, the <xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%2CSystem.Object%5B%5D%29> method is used to identify logic errors during program development. <xref:System.Diagnostics.Debug.Assert%2A> evaluates the condition. If the result is `false`, The <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=fullName> method is called and the `detailMessageFormat` string and `args` array are passed in as parameters. <xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%2CSystem.Object%5B%5D%29> then sends the specified text message and the formatted text message to the <xref:System.Diagnostics.Debug.Listeners%2A> collection. You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.  \n  \n When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers. The message box contains three buttons: **Abort**, **Retry**, and **Ignore**. Clicking the **Abort** button terminates the application. Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not. Clicking **Ignore** continues with the next instruction in the code.  \n  \n> [!NOTE]\n>  The display of the message box is dependent on the presence of the <xref:System.Diagnostics.DefaultTraceListener>. If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed. The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [\\&lt;clear\\&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [\\&lt;remove\\&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).  \n  \n You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application. In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=fullName> property. The configuration file should be formatted as follows:  \n  \n```  \n<configuration>  \n  <system.diagnostics>  \n    <assert assertuienabled=\"true\" logfilename=\"c:\\\\myFile.log\" />  \n  </system.diagnostics>  \n</configuration>  \n```","nodes":[{"pos":[0,240],"content":"This method uses the  of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string. The resulting string is sent to the <xref:System.Diagnostics.Trace.Listeners%2A> collection.","nodes":[{"content":"This method uses the  of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string. The resulting string is sent to the <xref:System.Diagnostics.Trace.Listeners%2A> collection.","pos":[0,240],"nodes":[{"content":"This method uses the  of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.","pos":[0,147]},{"content":"The resulting string is sent to the <ph id=\"ph1\">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection.","pos":[148,240],"source":" The resulting string is sent to the <xref:System.Diagnostics.Trace.Listeners%2A> collection."}]}]},{"pos":[247,622],"content":"By default, the <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=fullName> method works only in debug builds. Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=fullName> method if you want to do assertions in release builds. For more information, see [Assertions in Managed Code](http://msdn.microsoft.com/library/70ab2522-6486-4076-a1a9-e0f11cd0f3a1).","nodes":[{"content":"By default, the <ph id=\"ph1\">&lt;xref:System.Diagnostics.Debug.Assert%2A?displayProperty=fullName&gt;</ph> method works only in debug builds.","pos":[0,117],"source":"By default, the <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=fullName> method works only in debug builds."},{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Diagnostics.Trace.Assert%2A?displayProperty=fullName&gt;</ph> method if you want to do assertions in release builds.","pos":[118,247],"source":" Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=fullName> method if you want to do assertions in release builds."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Assertions in Managed Code<ept id=\"p1\">](http://msdn.microsoft.com/library/70ab2522-6486-4076-a1a9-e0f11cd0f3a1)</ept>.","pos":[248,375],"source":" For more information, see [Assertions in Managed Code](http://msdn.microsoft.com/library/70ab2522-6486-4076-a1a9-e0f11cd0f3a1)."}]},{"pos":[629,1532],"content":"Typically, the <xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%2CSystem.Object%5B%5D%29> method is used to identify logic errors during program development. <xref:System.Diagnostics.Debug.Assert%2A> evaluates the condition. If the result is `false`, The <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=fullName> method is called and the `detailMessageFormat` string and `args` array are passed in as parameters. <xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%2CSystem.Object%5B%5D%29> then sends the specified text message and the formatted text message to the <xref:System.Diagnostics.Debug.Listeners%2A> collection. You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.","nodes":[{"content":"Typically, the <ph id=\"ph1\">&lt;xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%2CSystem.Object%5B%5D%29&gt;</ph> method is used to identify logic errors during program development.","pos":[0,195],"source":"Typically, the <xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%2CSystem.Object%5B%5D%29> method is used to identify logic errors during program development."},{"content":"<ph id=\"ph1\">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> evaluates the condition.","pos":[196,262],"source":" <xref:System.Diagnostics.Debug.Assert%2A> evaluates the condition."},{"content":"If the result is <ph id=\"ph1\">`false`</ph>, The <ph id=\"ph2\">&lt;xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=fullName&gt;</ph> method is called and the <ph id=\"ph3\">`detailMessageFormat`</ph> string and <ph id=\"ph4\">`args`</ph> array are passed in as parameters.","pos":[263,486],"source":" If the result is `false`, The <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=fullName> method is called and the `detailMessageFormat` string and `args` array are passed in as parameters."},{"content":"<ph id=\"ph1\">&lt;xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%2CSystem.Object%5B%5D%29&gt;</ph> then sends the specified text message and the formatted text message to the <ph id=\"ph2\">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection.","pos":[487,732],"source":" <xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%2CSystem.Object%5B%5D%29> then sends the specified text message and the formatted text message to the <xref:System.Diagnostics.Debug.Listeners%2A> collection."},{"content":"You can customize this behavior by adding a <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> to, or removing one from, the <ph id=\"ph2\">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection.","pos":[733,903],"source":" You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection."}]},{"pos":[1539,2019],"content":"When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers. The message box contains three buttons: **Abort**, **Retry**, and **Ignore**. Clicking the **Abort** button terminates the application. Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not. Clicking **Ignore** continues with the next instruction in the code.","nodes":[{"content":"When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers.","pos":[0,129]},{"content":"The message box contains three buttons: <bpt id=\"p1\">**</bpt>Abort<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>Retry<ept id=\"p2\">**</ept>, and <bpt id=\"p3\">**</bpt>Ignore<ept id=\"p3\">**</ept>.","pos":[130,207],"source":" The message box contains three buttons: **Abort**, **Retry**, and **Ignore**."},{"content":"Clicking the <bpt id=\"p1\">**</bpt>Abort<ept id=\"p1\">**</ept> button terminates the application.","pos":[208,265],"source":" Clicking the **Abort** button terminates the application."},{"content":"Clicking <bpt id=\"p1\">**</bpt>Retry<ept id=\"p1\">**</ept> sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.","pos":[266,411],"source":" Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not."},{"content":"Clicking <bpt id=\"p1\">**</bpt>Ignore<ept id=\"p1\">**</ept> continues with the next instruction in the code.","pos":[412,480],"source":" Clicking **Ignore** continues with the next instruction in the code."}]},{"pos":[2027,2817],"content":"[!NOTE]\n The display of the message box is dependent on the presence of the <xref:System.Diagnostics.DefaultTraceListener>. If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed. The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [\\&lt;clear\\&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [\\&lt;remove\\&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).","leadings":["","> "],"nodes":[{"content":" The display of the message box is dependent on the presence of the <xref:System.Diagnostics.DefaultTraceListener>. If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed. The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [\\&lt;clear\\&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [\\&lt;remove\\&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).","pos":[8,788],"nodes":[{"content":"The display of the message box is dependent on the presence of the <ph id=\"ph1\">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.","pos":[1,115],"source":" The display of the message box is dependent on the presence of the <xref:System.Diagnostics.DefaultTraceListener>."},{"content":"If the <ph id=\"ph1\">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> is not in the <ph id=\"ph2\">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection, the message box is not displayed.","pos":[116,274],"source":" If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> can be removed by the <bpt id=\"p1\">[</bpt><ph id=\"ph2\">\\&amp;</ph>lt;clear<ph id=\"ph3\">\\&amp;</ph>gt;<ept id=\"p1\">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>, the <bpt id=\"p2\">[</bpt><ph id=\"ph4\">\\&amp;</ph>lt;remove<ph id=\"ph5\">\\&amp;</ph>gt;<ept id=\"p2\">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>, or by calling the <ph id=\"ph6\">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph> method on the <ph id=\"ph7\">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> property (<ph id=\"ph8\">`System.Diagnostics.Trace.Listeners.Clear()`</ph>).","pos":[275,780],"source":" The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [\\&lt;clear\\&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [\\&lt;remove\\&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`)."}]}]},{"pos":[2824,3208],"content":"You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application. In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=fullName> property. The configuration file should be formatted as follows:","nodes":[{"content":"You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application. In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=fullName> property. The configuration file should be formatted as follows:","pos":[0,384],"nodes":[{"content":"You can change the behavior of the <ph id=\"ph1\">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> in the configuration file that corresponds to the name of your application.","pos":[0,157],"source":"You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application."},{"content":"In this file, you can enable and disable the assert message box or set the <ph id=\"ph1\">&lt;xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=fullName&gt;</ph> property.","pos":[158,329],"source":" In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=fullName> property."},{"content":"The configuration file should be formatted as follows:","pos":[330,384]}]}]}],"pos":[27111,30523],"yaml":true,"extradata":"MT"},{"content":"The conditional expression to evaluate. If the condition is `true`, the specified messages are not sent and the message box is not displayed.","nodes":[{"pos":[0,141],"content":"The conditional expression to evaluate. If the condition is `true`, the specified messages are not sent and the message box is not displayed.","nodes":[{"content":"The conditional expression to evaluate.","pos":[0,39]},{"content":"If the condition is <ph id=\"ph1\">`true`</ph>, the specified messages are not sent and the message box is not displayed.","pos":[40,141],"source":" If the condition is `true`, the specified messages are not sent and the message box is not displayed."}]}],"pos":[30789,30931],"yaml":true},{"content":"The message to send to the <xref href=\"System.Diagnostics.Trace.Listeners\"></xref> collection.","nodes":[{"pos":[0,94],"content":"The message to send to the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.Trace.Listeners\"&gt;&lt;/xref&gt;</ph> collection.","source":"The message to send to the <xref href=\"System.Diagnostics.Trace.Listeners\"></xref> collection."}],"pos":[30994,31089],"yaml":true},{"content":"The composite format string to send to the <xref href=\"System.Diagnostics.Trace.Listeners\"></xref> collection. This message contains text intermixed with zero or more format items, which correspond to objects in the <code>args</code> array.","nodes":[{"pos":[0,240],"content":"The composite format string to send to the <xref href=\"System.Diagnostics.Trace.Listeners\"></xref> collection. This message contains text intermixed with zero or more format items, which correspond to objects in the <code>args</code> array.","nodes":[{"content":"The composite format string to send to the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.Trace.Listeners\"&gt;&lt;/xref&gt;</ph> collection.","pos":[0,110],"source":"The composite format string to send to the <xref href=\"System.Diagnostics.Trace.Listeners\"></xref> collection."},{"content":"This message contains text intermixed with zero or more format items, which correspond to objects in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">args</ph><ept id=\"p1\">&lt;/code&gt;</ept> array.","pos":[111,240],"source":" This message contains text intermixed with zero or more format items, which correspond to objects in the <code>args</code> array."}]}],"pos":[31164,31405],"yaml":true},{"content":"An object array that contains zero or more objects to format.","nodes":[{"pos":[0,61],"content":"An object array that contains zero or more objects to format.","nodes":[{"content":"An object array that contains zero or more objects to format.","pos":[0,61]}]}],"pos":[31467,31529],"yaml":true},{"content":"Gets or sets a value indicating whether <xref href=\"System.Diagnostics.Debug.Flush\"></xref> should be called on the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref> after every write.","nodes":[{"pos":[0,190],"content":"Gets or sets a value indicating whether <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.Debug.Flush\"&gt;&lt;/xref&gt;</ph> should be called on the <ph id=\"ph2\">&lt;xref href=\"System.Diagnostics.Debug.Listeners\"&gt;&lt;/xref&gt;</ph> after every write.","source":"Gets or sets a value indicating whether <xref href=\"System.Diagnostics.Debug.Flush\"></xref> should be called on the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref> after every write."}],"pos":[32928,33119],"yaml":true},{"content":"The default is `false`.  \n  \n Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.Diagnostics.Debug.Flush%2A> or <xref:System.Diagnostics.Debug.Close%2A>. Setting <xref:System.Diagnostics.Debug.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed. This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly. This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.  \n  \n To set the <xref:System.Diagnostics.Debug.AutoFlush%2A> and <xref:System.Diagnostics.Debug.IndentSize%2A> for <xref:System.Diagnostics.Debug>, you can also edit the configuration file corresponding to the name of your application. The configuration file should be formatted as shown in the following example.  \n  \n```  \n<configuration>  \n  <system.diagnostics>  \n    <trace autoflush=\"true\" indentsize=\"7\" />  \n  </system.diagnostics>  \n</configuration>  \n```","nodes":[{"pos":[0,23],"content":"The default is <ph id=\"ph1\">`false`</ph>.","source":"The default is `false`."},{"pos":[30,640],"content":"Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.Diagnostics.Debug.Flush%2A> or <xref:System.Diagnostics.Debug.Close%2A>. Setting <xref:System.Diagnostics.Debug.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed. This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly. This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.","nodes":[{"content":"Flushing the stream will not flush its underlying encoder unless you explicitly call <ph id=\"ph1\">&lt;xref:System.Diagnostics.Debug.Flush%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Diagnostics.Debug.Close%2A&gt;</ph>.","pos":[0,170],"source":"Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.Diagnostics.Debug.Flush%2A> or <xref:System.Diagnostics.Debug.Close%2A>."},{"content":"Setting <ph id=\"ph1\">&lt;xref:System.Diagnostics.Debug.AutoFlush%2A&gt;</ph> to <ph id=\"ph2\">`true`</ph> means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.","pos":[171,339],"source":" Setting <xref:System.Diagnostics.Debug.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed."},{"content":"This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.","pos":[340,464]},{"content":"This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.","pos":[465,610]}]},{"pos":[647,955],"content":"To set the <xref:System.Diagnostics.Debug.AutoFlush%2A> and <xref:System.Diagnostics.Debug.IndentSize%2A> for <xref:System.Diagnostics.Debug>, you can also edit the configuration file corresponding to the name of your application. The configuration file should be formatted as shown in the following example.","nodes":[{"content":"To set the <xref:System.Diagnostics.Debug.AutoFlush%2A> and <xref:System.Diagnostics.Debug.IndentSize%2A> for <xref:System.Diagnostics.Debug>, you can also edit the configuration file corresponding to the name of your application. The configuration file should be formatted as shown in the following example.","pos":[0,308],"nodes":[{"content":"To set the <ph id=\"ph1\">&lt;xref:System.Diagnostics.Debug.AutoFlush%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Diagnostics.Debug.IndentSize%2A&gt;</ph> for <ph id=\"ph3\">&lt;xref:System.Diagnostics.Debug&gt;</ph>, you can also edit the configuration file corresponding to the name of your application.","pos":[0,230],"source":"To set the <xref:System.Diagnostics.Debug.AutoFlush%2A> and <xref:System.Diagnostics.Debug.IndentSize%2A> for <xref:System.Diagnostics.Debug>, you can also edit the configuration file corresponding to the name of your application."},{"content":"The configuration file should be formatted as shown in the following example.","pos":[231,308]}]}]}],"pos":[33130,34255],"yaml":true,"extradata":"MT"},{"content":"`true` if <xref href=\"System.Diagnostics.Debug.Flush\"></xref> is called on the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref> after every write; otherwise, `false`.","nodes":[{"pos":[0,173],"content":"<ph id=\"ph1\">`true`</ph> if <ph id=\"ph2\">&lt;xref href=\"System.Diagnostics.Debug.Flush\"&gt;&lt;/xref&gt;</ph> is called on the <ph id=\"ph3\">&lt;xref href=\"System.Diagnostics.Debug.Listeners\"&gt;&lt;/xref&gt;</ph> after every write; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <xref href=\"System.Diagnostics.Debug.Flush\"></xref> is called on the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref> after every write; otherwise, `false`."}],"pos":[34379,34555],"yaml":true},{"content":"Flushes the output buffer and then calls the `Close` method on each of the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref>.","nodes":[{"pos":[0,131],"content":"Flushes the output buffer and then calls the <ph id=\"ph1\">`Close`</ph> method on each of the <ph id=\"ph2\">&lt;xref href=\"System.Diagnostics.Debug.Listeners\"&gt;&lt;/xref&gt;</ph>.","source":"Flushes the output buffer and then calls the `Close` method on each of the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref>."}],"pos":[35689,35821],"yaml":true},{"content":"Use this method when the output goes to a file, such as to the <xref:System.Diagnostics.TextWriterTraceListener>.  \n  \n Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.Diagnostics.Debug.Flush%2A> or <xref:System.Diagnostics.Debug.Close%2A>. Setting <xref:System.Diagnostics.Debug.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed. This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly. This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.","nodes":[{"pos":[0,113],"content":"Use this method when the output goes to a file, such as to the <xref:System.Diagnostics.TextWriterTraceListener>.","nodes":[{"content":"Use this method when the output goes to a file, such as to the <ph id=\"ph1\">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>.","pos":[0,113],"source":"Use this method when the output goes to a file, such as to the <xref:System.Diagnostics.TextWriterTraceListener>."}]},{"pos":[120,730],"content":"Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.Diagnostics.Debug.Flush%2A> or <xref:System.Diagnostics.Debug.Close%2A>. Setting <xref:System.Diagnostics.Debug.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed. This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly. This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.","nodes":[{"content":"Flushing the stream will not flush its underlying encoder unless you explicitly call <ph id=\"ph1\">&lt;xref:System.Diagnostics.Debug.Flush%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Diagnostics.Debug.Close%2A&gt;</ph>.","pos":[0,170],"source":"Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.Diagnostics.Debug.Flush%2A> or <xref:System.Diagnostics.Debug.Close%2A>."},{"content":"Setting <ph id=\"ph1\">&lt;xref:System.Diagnostics.Debug.AutoFlush%2A&gt;</ph> to <ph id=\"ph2\">`true`</ph> means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.","pos":[171,339],"source":" Setting <xref:System.Diagnostics.Debug.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed."},{"content":"This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.","pos":[340,464]},{"content":"This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.","pos":[465,610]}]}],"pos":[35832,36567],"yaml":true,"extradata":"MT"},{"content":"Emits the specified error message.","nodes":[{"pos":[0,34],"content":"Emits the specified error message.","nodes":[{"content":"Emits the specified error message.","pos":[0,34]}]}],"pos":[38750,38785],"yaml":true},{"content":"The default behavior is that the <xref:System.Diagnostics.DefaultTraceListener> outputs the message to a message box when the application is running in user interface mode and to the <xref:System.Diagnostics.TraceListener> instances in the <xref:System.Diagnostics.Debug.Listeners%2A> collection.  \n  \n> [!NOTE]\n>  The display of the message box is dependent on the presence of the <xref:System.Diagnostics.DefaultTraceListener>. If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed. The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [\\&lt;clear\\&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [\\&lt;remove\\&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).  \n  \n You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.","nodes":[{"pos":[0,296],"content":"The default behavior is that the <xref:System.Diagnostics.DefaultTraceListener> outputs the message to a message box when the application is running in user interface mode and to the <xref:System.Diagnostics.TraceListener> instances in the <xref:System.Diagnostics.Debug.Listeners%2A> collection.","nodes":[{"content":"The default behavior is that the <ph id=\"ph1\">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> outputs the message to a message box when the application is running in user interface mode and to the <ph id=\"ph2\">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> instances in the <ph id=\"ph3\">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection.","pos":[0,296],"source":"The default behavior is that the <xref:System.Diagnostics.DefaultTraceListener> outputs the message to a message box when the application is running in user interface mode and to the <xref:System.Diagnostics.TraceListener> instances in the <xref:System.Diagnostics.Debug.Listeners%2A> collection."}]},{"pos":[304,1094],"content":"[!NOTE]\n The display of the message box is dependent on the presence of the <xref:System.Diagnostics.DefaultTraceListener>. If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed. The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [\\&lt;clear\\&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [\\&lt;remove\\&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).","leadings":["","> "],"nodes":[{"content":" The display of the message box is dependent on the presence of the <xref:System.Diagnostics.DefaultTraceListener>. If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed. The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [\\&lt;clear\\&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [\\&lt;remove\\&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).","pos":[8,788],"nodes":[{"content":"The display of the message box is dependent on the presence of the <ph id=\"ph1\">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.","pos":[1,115],"source":" The display of the message box is dependent on the presence of the <xref:System.Diagnostics.DefaultTraceListener>."},{"content":"If the <ph id=\"ph1\">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> is not in the <ph id=\"ph2\">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection, the message box is not displayed.","pos":[116,274],"source":" If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> can be removed by the <bpt id=\"p1\">[</bpt><ph id=\"ph2\">\\&amp;</ph>lt;clear<ph id=\"ph3\">\\&amp;</ph>gt;<ept id=\"p1\">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>, the <bpt id=\"p2\">[</bpt><ph id=\"ph4\">\\&amp;</ph>lt;remove<ph id=\"ph5\">\\&amp;</ph>gt;<ept id=\"p2\">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>, or by calling the <ph id=\"ph6\">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph> method on the <ph id=\"ph7\">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> property (<ph id=\"ph8\">`System.Diagnostics.Trace.Listeners.Clear()`</ph>).","pos":[275,780],"source":" The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [\\&lt;clear\\&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [\\&lt;remove\\&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`)."}]}]},{"pos":[1101,1271],"content":"You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.","nodes":[{"content":"You can customize this behavior by adding a <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> to, or removing one from, the <ph id=\"ph2\">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection.","pos":[0,170],"source":"You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection."}]}],"pos":[38796,40079],"yaml":true,"extradata":"MT"},{"content":"A message to emit.","nodes":[{"pos":[0,18],"content":"A message to emit.","nodes":[{"content":"A message to emit.","pos":[0,18]}]}],"pos":[41367,41386],"yaml":true},{"content":"Emits an error message and a detailed error message.","nodes":[{"pos":[0,52],"content":"Emits an error message and a detailed error message.","nodes":[{"content":"Emits an error message and a detailed error message.","pos":[0,52]}]}],"pos":[42886,42939],"yaml":true},{"content":"The default behavior is that the <xref:System.Diagnostics.DefaultTraceListener> outputs the message to a message box when the application is running in user interface mode and to the <xref:System.Diagnostics.TraceListener> instances in the <xref:System.Diagnostics.Debug.Listeners%2A> collection.  \n  \n> [!NOTE]\n>  The display of the message box is dependent on the presence of the <xref:System.Diagnostics.DefaultTraceListener>. If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed. The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [\\&lt;clear\\&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [\\&lt;remove\\&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).  \n  \n You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.","nodes":[{"pos":[0,296],"content":"The default behavior is that the <xref:System.Diagnostics.DefaultTraceListener> outputs the message to a message box when the application is running in user interface mode and to the <xref:System.Diagnostics.TraceListener> instances in the <xref:System.Diagnostics.Debug.Listeners%2A> collection.","nodes":[{"content":"The default behavior is that the <ph id=\"ph1\">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> outputs the message to a message box when the application is running in user interface mode and to the <ph id=\"ph2\">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> instances in the <ph id=\"ph3\">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection.","pos":[0,296],"source":"The default behavior is that the <xref:System.Diagnostics.DefaultTraceListener> outputs the message to a message box when the application is running in user interface mode and to the <xref:System.Diagnostics.TraceListener> instances in the <xref:System.Diagnostics.Debug.Listeners%2A> collection."}]},{"pos":[304,1094],"content":"[!NOTE]\n The display of the message box is dependent on the presence of the <xref:System.Diagnostics.DefaultTraceListener>. If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed. The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [\\&lt;clear\\&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [\\&lt;remove\\&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).","leadings":["","> "],"nodes":[{"content":" The display of the message box is dependent on the presence of the <xref:System.Diagnostics.DefaultTraceListener>. If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed. The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [\\&lt;clear\\&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [\\&lt;remove\\&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).","pos":[8,788],"nodes":[{"content":"The display of the message box is dependent on the presence of the <ph id=\"ph1\">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.","pos":[1,115],"source":" The display of the message box is dependent on the presence of the <xref:System.Diagnostics.DefaultTraceListener>."},{"content":"If the <ph id=\"ph1\">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> is not in the <ph id=\"ph2\">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection, the message box is not displayed.","pos":[116,274],"source":" If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> can be removed by the <bpt id=\"p1\">[</bpt><ph id=\"ph2\">\\&amp;</ph>lt;clear<ph id=\"ph3\">\\&amp;</ph>gt;<ept id=\"p1\">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>, the <bpt id=\"p2\">[</bpt><ph id=\"ph4\">\\&amp;</ph>lt;remove<ph id=\"ph5\">\\&amp;</ph>gt;<ept id=\"p2\">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>, or by calling the <ph id=\"ph6\">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph> method on the <ph id=\"ph7\">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> property (<ph id=\"ph8\">`System.Diagnostics.Trace.Listeners.Clear()`</ph>).","pos":[275,780],"source":" The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [\\&lt;clear\\&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [\\&lt;remove\\&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`)."}]}]},{"pos":[1101,1271],"content":"You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.","nodes":[{"content":"You can customize this behavior by adding a <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> to, or removing one from, the <ph id=\"ph2\">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection.","pos":[0,170],"source":"You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection."}]}],"pos":[42950,44233],"yaml":true,"extradata":"MT"},{"content":"A message to emit.","nodes":[{"pos":[0,18],"content":"A message to emit.","nodes":[{"content":"A message to emit.","pos":[0,18]}]}],"pos":[45555,45574],"yaml":true},{"content":"A detailed message to emit.","nodes":[{"pos":[0,27],"content":"A detailed message to emit.","nodes":[{"content":"A detailed message to emit.","pos":[0,27]}]}],"pos":[45643,45671],"yaml":true},{"content":"Flushes the output buffer and causes buffered data to write to the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref> collection.","nodes":[{"pos":[0,134],"content":"Flushes the output buffer and causes buffered data to write to the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.Debug.Listeners\"&gt;&lt;/xref&gt;</ph> collection.","source":"Flushes the output buffer and causes buffered data to write to the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref> collection."}],"pos":[47048,47183],"yaml":true},{"content":"Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.Diagnostics.Debug.Flush%2A> or <xref:System.Diagnostics.Debug.Close%2A>. Setting <xref:System.Diagnostics.Debug.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed. This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly. This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.","nodes":[{"pos":[0,610],"content":"Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.Diagnostics.Debug.Flush%2A> or <xref:System.Diagnostics.Debug.Close%2A>. Setting <xref:System.Diagnostics.Debug.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed. This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly. This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.","nodes":[{"content":"Flushing the stream will not flush its underlying encoder unless you explicitly call <ph id=\"ph1\">&lt;xref:System.Diagnostics.Debug.Flush%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Diagnostics.Debug.Close%2A&gt;</ph>.","pos":[0,170],"source":"Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.Diagnostics.Debug.Flush%2A> or <xref:System.Diagnostics.Debug.Close%2A>."},{"content":"Setting <ph id=\"ph1\">&lt;xref:System.Diagnostics.Debug.AutoFlush%2A&gt;</ph> to <ph id=\"ph2\">`true`</ph> means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.","pos":[171,339],"source":" Setting <xref:System.Diagnostics.Debug.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed."},{"content":"This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.","pos":[340,464]},{"content":"This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.","pos":[465,610]}]}],"pos":[47194,47805],"yaml":true,"extradata":"MT"},{"content":"Increases the current <xref href=\"System.Diagnostics.Debug.IndentLevel\"></xref> by one.","nodes":[{"pos":[0,87],"content":"Increases the current <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.Debug.IndentLevel\"&gt;&lt;/xref&gt;</ph> by one.","source":"Increases the current <xref href=\"System.Diagnostics.Debug.IndentLevel\"></xref> by one."}],"pos":[49960,50048],"yaml":true},{"content":"Gets or sets the indent level.","nodes":[{"pos":[0,30],"content":"Gets or sets the indent level.","nodes":[{"content":"Gets or sets the indent level.","pos":[0,30]}]}],"pos":[52166,52197],"yaml":true},{"content":"The <xref:System.Diagnostics.Debug.IndentLevel%2A> property represents the number of times the indent of size <xref:System.Diagnostics.Debug.IndentSize%2A> is applied.","nodes":[{"pos":[0,167],"content":"The <xref:System.Diagnostics.Debug.IndentLevel%2A> property represents the number of times the indent of size <xref:System.Diagnostics.Debug.IndentSize%2A> is applied.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Diagnostics.Debug.IndentLevel%2A&gt;</ph> property represents the number of times the indent of size <ph id=\"ph2\">&lt;xref:System.Diagnostics.Debug.IndentSize%2A&gt;</ph> is applied.","pos":[0,167],"source":"The <xref:System.Diagnostics.Debug.IndentLevel%2A> property represents the number of times the indent of size <xref:System.Diagnostics.Debug.IndentSize%2A> is applied."}]}],"pos":[52208,52376],"yaml":true,"extradata":"MT"},{"content":"The indent level. The default is 0.","nodes":[{"pos":[0,35],"content":"The indent level. The default is 0.","nodes":[{"content":"The indent level. The default is 0.","pos":[0,35],"nodes":[{"content":"The indent level.","pos":[0,17]},{"content":"The default is 0.","pos":[18,35]}]}]}],"pos":[53246,53282],"yaml":true},{"content":"Gets or sets the number of spaces in an indent.","nodes":[{"pos":[0,47],"content":"Gets or sets the number of spaces in an indent.","nodes":[{"content":"Gets or sets the number of spaces in an indent.","pos":[0,47]}]}],"pos":[54444,54492],"yaml":true},{"content":"A <xref:System.Diagnostics.TextWriterTraceListener> interprets this number as spaces. An <xref:System.Diagnostics.EventLogTraceListener> ignores this value.  \n  \n To set the <xref:System.Diagnostics.Debug.AutoFlush%2A> and <xref:System.Diagnostics.Debug.IndentSize%2A> for <xref:System.Diagnostics.Debug>, you can also edit the configuration file corresponding to the name of your application. The configuration file should be formatted as shown in the following example.  \n  \n```  \n<configuration>  \n  <system.diagnostics>  \n    <trace autoflush=\"true\" indentsize=\"7\" />  \n  </system.diagnostics>  \n</configuration>  \n```","nodes":[{"pos":[0,156],"content":"A <xref:System.Diagnostics.TextWriterTraceListener> interprets this number as spaces. An <xref:System.Diagnostics.EventLogTraceListener> ignores this value.","nodes":[{"content":"A <xref:System.Diagnostics.TextWriterTraceListener> interprets this number as spaces. An <xref:System.Diagnostics.EventLogTraceListener> ignores this value.","pos":[0,156],"nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> interprets this number as spaces.","pos":[0,85],"source":"A <xref:System.Diagnostics.TextWriterTraceListener> interprets this number as spaces."},{"content":"An <ph id=\"ph1\">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph> ignores this value.","pos":[86,156],"source":" An <xref:System.Diagnostics.EventLogTraceListener> ignores this value."}]}]},{"pos":[163,471],"content":"To set the <xref:System.Diagnostics.Debug.AutoFlush%2A> and <xref:System.Diagnostics.Debug.IndentSize%2A> for <xref:System.Diagnostics.Debug>, you can also edit the configuration file corresponding to the name of your application. The configuration file should be formatted as shown in the following example.","nodes":[{"content":"To set the <xref:System.Diagnostics.Debug.AutoFlush%2A> and <xref:System.Diagnostics.Debug.IndentSize%2A> for <xref:System.Diagnostics.Debug>, you can also edit the configuration file corresponding to the name of your application. The configuration file should be formatted as shown in the following example.","pos":[0,308],"nodes":[{"content":"To set the <ph id=\"ph1\">&lt;xref:System.Diagnostics.Debug.AutoFlush%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Diagnostics.Debug.IndentSize%2A&gt;</ph> for <ph id=\"ph3\">&lt;xref:System.Diagnostics.Debug&gt;</ph>, you can also edit the configuration file corresponding to the name of your application.","pos":[0,230],"source":"To set the <xref:System.Diagnostics.Debug.AutoFlush%2A> and <xref:System.Diagnostics.Debug.IndentSize%2A> for <xref:System.Diagnostics.Debug>, you can also edit the configuration file corresponding to the name of your application."},{"content":"The configuration file should be formatted as shown in the following example.","pos":[231,308]}]}]}],"pos":[54503,55142],"yaml":true,"extradata":"MT"},{"content":"The number of spaces in an indent. The default is four.","nodes":[{"pos":[0,55],"content":"The number of spaces in an indent. The default is four.","nodes":[{"content":"The number of spaces in an indent. The default is four.","pos":[0,55],"nodes":[{"content":"The number of spaces in an indent.","pos":[0,34]},{"content":"The default is four.","pos":[35,55]}]}]}],"pos":[55264,55320],"yaml":true},{"content":"Gets the collection of listeners that is monitoring the debug output.","nodes":[{"pos":[0,69],"content":"Gets the collection of listeners that is monitoring the debug output.","nodes":[{"content":"Gets the collection of listeners that is monitoring the debug output.","pos":[0,69]}]}],"pos":[56430,56500],"yaml":true},{"content":"The listeners produce formatted output from the debug output. By default, the collection contains an instance of the <xref:System.Diagnostics.DefaultTraceListener> class. To remove the default listener, call the <xref:System.Diagnostics.TraceListenerCollection.Remove%2A> method, and pass it the instance of the <xref:System.Diagnostics.DefaultTraceListener>. To redirect output to the console window, add an instance of the <xref:System.Diagnostics.ConsoleTraceListener>. To redirect output to a file or stream, add an instance of the <xref:System.Diagnostics.TextWriterTraceListener>.  \n  \n> [!NOTE]\n>  The <xref:System.Diagnostics.Debug.Listeners%2A> collection is shared by both the <xref:System.Diagnostics.Debug> and the <xref:System.Diagnostics.Trace> classes; adding a trace listener to either class adds the listener to both.","nodes":[{"pos":[0,586],"content":"The listeners produce formatted output from the debug output. By default, the collection contains an instance of the <xref:System.Diagnostics.DefaultTraceListener> class. To remove the default listener, call the <xref:System.Diagnostics.TraceListenerCollection.Remove%2A> method, and pass it the instance of the <xref:System.Diagnostics.DefaultTraceListener>. To redirect output to the console window, add an instance of the <xref:System.Diagnostics.ConsoleTraceListener>. To redirect output to a file or stream, add an instance of the <xref:System.Diagnostics.TextWriterTraceListener>.","nodes":[{"content":"The listeners produce formatted output from the debug output. By default, the collection contains an instance of the <xref:System.Diagnostics.DefaultTraceListener> class. To remove the default listener, call the <xref:System.Diagnostics.TraceListenerCollection.Remove%2A> method, and pass it the instance of the <xref:System.Diagnostics.DefaultTraceListener>. To redirect output to the console window, add an instance of the <xref:System.Diagnostics.ConsoleTraceListener>. To redirect output to a file or stream, add an instance of the <xref:System.Diagnostics.TextWriterTraceListener>.","pos":[0,586],"nodes":[{"content":"The listeners produce formatted output from the debug output.","pos":[0,61]},{"content":"By default, the collection contains an instance of the <ph id=\"ph1\">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> class.","pos":[62,170],"source":" By default, the collection contains an instance of the <xref:System.Diagnostics.DefaultTraceListener> class."},{"content":"To remove the default listener, call the <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListenerCollection.Remove%2A&gt;</ph> method, and pass it the instance of the <ph id=\"ph2\">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.","pos":[171,359],"source":" To remove the default listener, call the <xref:System.Diagnostics.TraceListenerCollection.Remove%2A> method, and pass it the instance of the <xref:System.Diagnostics.DefaultTraceListener>."},{"content":"To redirect output to the console window, add an instance of the <ph id=\"ph1\">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph>.","pos":[360,472],"source":" To redirect output to the console window, add an instance of the <xref:System.Diagnostics.ConsoleTraceListener>."},{"content":"To redirect output to a file or stream, add an instance of the <ph id=\"ph1\">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>.","pos":[473,586],"source":" To redirect output to a file or stream, add an instance of the <xref:System.Diagnostics.TextWriterTraceListener>."}]}]},{"pos":[594,834],"content":"[!NOTE]\n The <xref:System.Diagnostics.Debug.Listeners%2A> collection is shared by both the <xref:System.Diagnostics.Debug> and the <xref:System.Diagnostics.Trace> classes; adding a trace listener to either class adds the listener to both.","leadings":["","> "],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection is shared by both the <ph id=\"ph2\">&lt;xref:System.Diagnostics.Debug&gt;</ph> and the <ph id=\"ph3\">&lt;xref:System.Diagnostics.Trace&gt;</ph> classes; adding a trace listener to either class adds the listener to both.","pos":[9,238],"source":" The <xref:System.Diagnostics.Debug.Listeners%2A> collection is shared by both the <xref:System.Diagnostics.Debug> and the <xref:System.Diagnostics.Trace> classes; adding a trace listener to either class adds the listener to both."}]}],"pos":[56511,57351],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref> representing a collection of type <xref href=\"System.Diagnostics.TraceListener\"></xref> that monitors the debug output.","nodes":[{"pos":[0,185],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TraceListenerCollection\"&gt;&lt;/xref&gt;</ph> representing a collection of type <ph id=\"ph2\">&lt;xref href=\"System.Diagnostics.TraceListener\"&gt;&lt;/xref&gt;</ph> that monitors the debug output.","source":"A <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref> representing a collection of type <xref href=\"System.Diagnostics.TraceListener\"></xref> that monitors the debug output."}],"pos":[58213,58399],"yaml":true},{"content":"Writes a message followed by a line terminator to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref> collection.","nodes":[{"pos":[0,144],"content":"Writes a message followed by a line terminator to the trace listeners in the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.Debug.Listeners\"&gt;&lt;/xref&gt;</ph> collection.","source":"Writes a message followed by a line terminator to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref> collection."}],"pos":[59524,59669],"yaml":true},{"content":"The default line terminator is a carriage return followed by a line feed. By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.","nodes":[{"pos":[0,173],"content":"The default line terminator is a carriage return followed by a line feed. By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.","nodes":[{"content":"The default line terminator is a carriage return followed by a line feed. By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.","pos":[0,173],"nodes":[{"content":"The default line terminator is a carriage return followed by a line feed.","pos":[0,73]},{"content":"By default, the output is written to an instance of <ph id=\"ph1\">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.","pos":[74,173],"source":" By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>."}]}]}],"pos":[59680,59854],"yaml":true,"extradata":"MT"},{"content":"The message to write.","nodes":[{"pos":[0,21],"content":"The message to write.","nodes":[{"content":"The message to write.","pos":[0,21]}]}],"pos":[60057,60079],"yaml":true},{"content":"Writes a formatted string followed by a line terminator to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref> collection.","nodes":[{"pos":[0,153],"content":"Writes a formatted string followed by a line terminator to the trace listeners in the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.Debug.Listeners\"&gt;&lt;/xref&gt;</ph> collection.","source":"Writes a formatted string followed by a line terminator to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref> collection."}],"pos":[61414,61568],"yaml":true},{"content":"This method uses the  of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string. By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.","nodes":[{"pos":[0,247],"content":"This method uses the  of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string. By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.","nodes":[{"content":"This method uses the  of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string. By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.","pos":[0,247],"nodes":[{"content":"This method uses the  of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.","pos":[0,147]},{"content":"By default, the output is written to an instance of <ph id=\"ph1\">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.","pos":[148,247],"source":" By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>."}]}]}],"pos":[61579,61827],"yaml":true,"extradata":"MT"},{"content":"A composite format string that contains text intermixed with zero or more format items, which correspond to objects in the <code>args</code> array.","nodes":[{"pos":[0,147],"content":"A composite format string that contains text intermixed with zero or more format items, which correspond to objects in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">args</ph><ept id=\"p1\">&lt;/code&gt;</ept> array.","source":"A composite format string that contains text intermixed with zero or more format items, which correspond to objects in the <code>args</code> array."}],"pos":[62043,62191],"yaml":true},{"content":"An object array containing zero or more objects to format.","nodes":[{"pos":[0,58],"content":"An object array containing zero or more objects to format.","nodes":[{"content":"An object array containing zero or more objects to format.","pos":[0,58]}]}],"pos":[62253,62312],"yaml":true},{"content":"<code>format</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;format&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>format</code> is `null`."}],"pos":[62472,62503],"yaml":true},{"content":"<code>format</code> is invalid.  \n  \n -or-  \n  \n The number that indicates an argument to format is less than zero, or greater than or equal to the number of specified objects to format.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;format&lt;/code&gt;</ph> is invalid.","source":"<code>format</code> is invalid."},{"pos":[38,42],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[49,186],"content":"The number that indicates an argument to format is less than zero, or greater than or equal to the number of specified objects to format.","nodes":[{"content":"The number that indicates an argument to format is less than zero, or greater than or equal to the number of specified objects to format.","pos":[0,137]}]}],"pos":[62593,62786],"yaml":true},{"content":"Decreases the current <xref href=\"System.Diagnostics.Debug.IndentLevel\"></xref> by one.","nodes":[{"pos":[0,87],"content":"Decreases the current <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.Debug.IndentLevel\"&gt;&lt;/xref&gt;</ph> by one.","source":"Decreases the current <xref href=\"System.Diagnostics.Debug.IndentLevel\"></xref> by one."}],"pos":[63937,64025],"yaml":true},{"content":"Writes a category name and message to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref> collection.","nodes":[{"pos":[0,132],"content":"Writes a category name and message to the trace listeners in the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.Debug.Listeners\"&gt;&lt;/xref&gt;</ph> collection.","source":"Writes a category name and message to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref> collection."}],"pos":[66244,66377],"yaml":true},{"content":"By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.  \n  \n Use the `category` parameter to group output messages.  \n  \n This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.","nodes":[{"pos":[0,99],"content":"By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.","nodes":[{"content":"By default, the output is written to an instance of <ph id=\"ph1\">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.","pos":[0,99],"source":"By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>."}]},{"pos":[106,160],"content":"Use the <ph id=\"ph1\">`category`</ph> parameter to group output messages.","source":"Use the `category` parameter to group output messages."},{"pos":[167,267],"content":"This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.","nodes":[{"content":"This method calls the <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> method of the trace listener.","pos":[0,100],"source":"This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener."}]}],"pos":[66388,66662],"yaml":true,"extradata":"MT"},{"content":"A message to write.","nodes":[{"pos":[0,19],"content":"A message to write.","nodes":[{"content":"A message to write.","pos":[0,19]}]}],"pos":[68031,68051],"yaml":true},{"content":"A category name used to organize the output.","nodes":[{"pos":[0,44],"content":"A category name used to organize the output.","nodes":[{"content":"A category name used to organize the output.","pos":[0,44]}]}],"pos":[68115,68160],"yaml":true},{"content":"Writes a category name and the value of the object's <xref href=\"System.Object.ToString\"></xref> method to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref> collection.","nodes":[{"pos":[0,201],"content":"Writes a category name and the value of the object's <ph id=\"ph1\">&lt;xref href=\"System.Object.ToString\"&gt;&lt;/xref&gt;</ph> method to the trace listeners in the <ph id=\"ph2\">&lt;xref href=\"System.Diagnostics.Debug.Listeners\"&gt;&lt;/xref&gt;</ph> collection.","source":"Writes a category name and the value of the object's <xref href=\"System.Object.ToString\"></xref> method to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref> collection."}],"pos":[69667,69869],"yaml":true},{"content":"By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.  \n  \n Use the `category` parameter to group output messages.  \n  \n This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.","nodes":[{"pos":[0,99],"content":"By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.","nodes":[{"content":"By default, the output is written to an instance of <ph id=\"ph1\">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.","pos":[0,99],"source":"By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>."}]},{"pos":[106,160],"content":"Use the <ph id=\"ph1\">`category`</ph> parameter to group output messages.","source":"Use the `category` parameter to group output messages."},{"pos":[167,267],"content":"This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.","nodes":[{"content":"This method calls the <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> method of the trace listener.","pos":[0,100],"source":"This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener."}]}],"pos":[69880,70154],"yaml":true,"extradata":"MT"},{"content":"An object whose name is sent to the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref>.","nodes":[{"pos":[0,92],"content":"An object whose name is sent to the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.Debug.Listeners\"&gt;&lt;/xref&gt;</ph>.","source":"An object whose name is sent to the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref>."}],"pos":[71519,71612],"yaml":true},{"content":"A category name used to organize the output.","nodes":[{"pos":[0,44],"content":"A category name used to organize the output.","nodes":[{"content":"A category name used to organize the output.","pos":[0,44]}]}],"pos":[71676,71721],"yaml":true},{"content":"Writes the value of the object's <xref href=\"System.Object.ToString\"></xref> method to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref> collection.","nodes":[{"pos":[0,181],"content":"Writes the value of the object's <ph id=\"ph1\">&lt;xref href=\"System.Object.ToString\"&gt;&lt;/xref&gt;</ph> method to the trace listeners in the <ph id=\"ph2\">&lt;xref href=\"System.Diagnostics.Debug.Listeners\"&gt;&lt;/xref&gt;</ph> collection.","source":"Writes the value of the object's <xref href=\"System.Object.ToString\"></xref> method to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref> collection."}],"pos":[73162,73344],"yaml":true},{"content":"By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.  \n  \n This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.","nodes":[{"pos":[0,99],"content":"By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.","nodes":[{"content":"By default, the output is written to an instance of <ph id=\"ph1\">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.","pos":[0,99],"source":"By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>."}]},{"pos":[106,206],"content":"This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.","nodes":[{"content":"This method calls the <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> method of the trace listener.","pos":[0,100],"source":"This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener."}]}],"pos":[73355,73566],"yaml":true,"extradata":"MT"},{"content":"An object whose name is sent to the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref>.","nodes":[{"pos":[0,92],"content":"An object whose name is sent to the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.Debug.Listeners\"&gt;&lt;/xref&gt;</ph>.","source":"An object whose name is sent to the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref>."}],"pos":[74914,75007],"yaml":true},{"content":"Writes a message to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref> collection.","nodes":[{"pos":[0,114],"content":"Writes a message to the trace listeners in the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.Debug.Listeners\"&gt;&lt;/xref&gt;</ph> collection.","source":"Writes a message to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref> collection."}],"pos":[76448,76563],"yaml":true},{"content":"By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.  \n  \n This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.","nodes":[{"pos":[0,99],"content":"By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.","nodes":[{"content":"By default, the output is written to an instance of <ph id=\"ph1\">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.","pos":[0,99],"source":"By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>."}]},{"pos":[106,206],"content":"This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.","nodes":[{"content":"This method calls the <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> method of the trace listener.","pos":[0,100],"source":"This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener."}]}],"pos":[76574,76785],"yaml":true,"extradata":"MT"},{"content":"A message to write.","nodes":[{"pos":[0,19],"content":"A message to write.","nodes":[{"content":"A message to write.","pos":[0,19]}]}],"pos":[78137,78157],"yaml":true},{"content":"Writes the value of the object's <xref href=\"System.Object.ToString\"></xref> method to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref> collection if a condition is `true`.","nodes":[{"pos":[0,206],"content":"Writes the value of the object's <ph id=\"ph1\">&lt;xref href=\"System.Object.ToString\"&gt;&lt;/xref&gt;</ph> method to the trace listeners in the <ph id=\"ph2\">&lt;xref href=\"System.Diagnostics.Debug.Listeners\"&gt;&lt;/xref&gt;</ph> collection if a condition is <ph id=\"ph3\">`true`</ph>.","source":"Writes the value of the object's <xref href=\"System.Object.ToString\"></xref> method to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref> collection if a condition is `true`."}],"pos":[79682,79889],"yaml":true},{"content":"By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.  \n  \n This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.","nodes":[{"pos":[0,99],"content":"By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.","nodes":[{"content":"By default, the output is written to an instance of <ph id=\"ph1\">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.","pos":[0,99],"source":"By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>."}]},{"pos":[106,206],"content":"This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.","nodes":[{"content":"This method calls the <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> method of the trace listener.","pos":[0,100],"source":"This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener."}]}],"pos":[79900,80111],"yaml":true,"extradata":"MT"},{"content":"The conditional expression to evaluate. If the condition is `true`, the value is written to the trace listeners in the collection.","nodes":[{"pos":[0,130],"content":"The conditional expression to evaluate. If the condition is `true`, the value is written to the trace listeners in the collection.","nodes":[{"content":"The conditional expression to evaluate.","pos":[0,39]},{"content":"If the condition is <ph id=\"ph1\">`true`</ph>, the value is written to the trace listeners in the collection.","pos":[40,130],"source":" If the condition is `true`, the value is written to the trace listeners in the collection."}]}],"pos":[81499,81630],"yaml":true},{"content":"An object whose name is sent to the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref>.","nodes":[{"pos":[0,92],"content":"An object whose name is sent to the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.Debug.Listeners\"&gt;&lt;/xref&gt;</ph>.","source":"An object whose name is sent to the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref>."}],"pos":[81691,81784],"yaml":true},{"content":"Writes a message to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref> collection if a condition is `true`.","nodes":[{"pos":[0,139],"content":"Writes a message to the trace listeners in the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.Debug.Listeners\"&gt;&lt;/xref&gt;</ph> collection if a condition is <ph id=\"ph2\">`true`</ph>.","source":"Writes a message to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref> collection if a condition is `true`."}],"pos":[83311,83451],"yaml":true},{"content":"By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.  \n  \n This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.","nodes":[{"pos":[0,99],"content":"By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.","nodes":[{"content":"By default, the output is written to an instance of <ph id=\"ph1\">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.","pos":[0,99],"source":"By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>."}]},{"pos":[106,206],"content":"This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.","nodes":[{"content":"This method calls the <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> method of the trace listener.","pos":[0,100],"source":"This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener."}]}],"pos":[83462,83673],"yaml":true,"extradata":"MT"},{"content":"The conditional expression to evaluate. If the condition is `true`, the message is written to the trace listeners in the collection.","nodes":[{"pos":[0,132],"content":"The conditional expression to evaluate. If the condition is `true`, the message is written to the trace listeners in the collection.","nodes":[{"content":"The conditional expression to evaluate.","pos":[0,39]},{"content":"If the condition is <ph id=\"ph1\">`true`</ph>, the message is written to the trace listeners in the collection.","pos":[40,132],"source":" If the condition is `true`, the message is written to the trace listeners in the collection."}]}],"pos":[85061,85194],"yaml":true},{"content":"A message to write.","nodes":[{"pos":[0,19],"content":"A message to write.","nodes":[{"content":"A message to write.","pos":[0,19]}]}],"pos":[85257,85277],"yaml":true},{"content":"Writes a category name and the value of the object's <xref href=\"System.Object.ToString\"></xref> method to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref> collection if a condition is `true`.","nodes":[{"pos":[0,226],"content":"Writes a category name and the value of the object's <ph id=\"ph1\">&lt;xref href=\"System.Object.ToString\"&gt;&lt;/xref&gt;</ph> method to the trace listeners in the <ph id=\"ph2\">&lt;xref href=\"System.Diagnostics.Debug.Listeners\"&gt;&lt;/xref&gt;</ph> collection if a condition is <ph id=\"ph3\">`true`</ph>.","source":"Writes a category name and the value of the object's <xref href=\"System.Object.ToString\"></xref> method to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref> collection if a condition is `true`."}],"pos":[86870,87097],"yaml":true},{"content":"By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.  \n  \n The `category` parameter can be used to group output messages.  \n  \n This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.","nodes":[{"pos":[0,99],"content":"By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.","nodes":[{"content":"By default, the output is written to an instance of <ph id=\"ph1\">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.","pos":[0,99],"source":"By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>."}]},{"pos":[106,168],"content":"The <ph id=\"ph1\">`category`</ph> parameter can be used to group output messages.","source":"The `category` parameter can be used to group output messages."},{"pos":[175,275],"content":"This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.","nodes":[{"content":"This method calls the <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> method of the trace listener.","pos":[0,100],"source":"This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener."}]}],"pos":[87108,87390],"yaml":true,"extradata":"MT"},{"content":"The conditional expression to evaluate. If the condition is `true`, the category name and value are written to the trace listeners in the collection.","nodes":[{"pos":[0,149],"content":"The conditional expression to evaluate. If the condition is `true`, the category name and value are written to the trace listeners in the collection.","nodes":[{"content":"The conditional expression to evaluate.","pos":[0,39]},{"content":"If the condition is <ph id=\"ph1\">`true`</ph>, the category name and value are written to the trace listeners in the collection.","pos":[40,149],"source":" If the condition is `true`, the category name and value are written to the trace listeners in the collection."}]}],"pos":[88818,88968],"yaml":true},{"content":"An object whose name is sent to the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref>.","nodes":[{"pos":[0,92],"content":"An object whose name is sent to the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.Debug.Listeners\"&gt;&lt;/xref&gt;</ph>.","source":"An object whose name is sent to the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref>."}],"pos":[89029,89122],"yaml":true},{"content":"A category name used to organize the output.","nodes":[{"pos":[0,44],"content":"A category name used to organize the output.","nodes":[{"content":"A category name used to organize the output.","pos":[0,44]}]}],"pos":[89186,89231],"yaml":true},{"content":"Writes a category name and message to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref> collection if a condition is `true`.","nodes":[{"pos":[0,157],"content":"Writes a category name and message to the trace listeners in the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.Debug.Listeners\"&gt;&lt;/xref&gt;</ph> collection if a condition is <ph id=\"ph2\">`true`</ph>.","source":"Writes a category name and message to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref> collection if a condition is `true`."}],"pos":[90824,90982],"yaml":true},{"content":"By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.  \n  \n The `category` parameter can be used to group output messages.  \n  \n This method calls the <xref:System.Diagnostics.TraceListener.Write%2A?displayProperty=fullName> method of the trace listener.","nodes":[{"pos":[0,99],"content":"By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.","nodes":[{"content":"By default, the output is written to an instance of <ph id=\"ph1\">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.","pos":[0,99],"source":"By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>."}]},{"pos":[106,168],"content":"The <ph id=\"ph1\">`category`</ph> parameter can be used to group output messages.","source":"The `category` parameter can be used to group output messages."},{"pos":[175,300],"content":"This method calls the <xref:System.Diagnostics.TraceListener.Write%2A?displayProperty=fullName> method of the trace listener.","nodes":[{"content":"This method calls the <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListener.Write%2A?displayProperty=fullName&gt;</ph> method of the trace listener.","pos":[0,125],"source":"This method calls the <xref:System.Diagnostics.TraceListener.Write%2A?displayProperty=fullName> method of the trace listener."}]}],"pos":[90993,91300],"yaml":true,"extradata":"MT"},{"content":"The conditional expression to evaluate. If the condition is `true`, the category name and message are written to the trace listeners in the collection.","nodes":[{"pos":[0,151],"content":"The conditional expression to evaluate. If the condition is `true`, the category name and message are written to the trace listeners in the collection.","nodes":[{"content":"The conditional expression to evaluate.","pos":[0,39]},{"content":"If the condition is <ph id=\"ph1\">`true`</ph>, the category name and message are written to the trace listeners in the collection.","pos":[40,151],"source":" If the condition is `true`, the category name and message are written to the trace listeners in the collection."}]}],"pos":[92708,92860],"yaml":true},{"content":"A message to write.","nodes":[{"pos":[0,19],"content":"A message to write.","nodes":[{"content":"A message to write.","pos":[0,19]}]}],"pos":[92923,92943],"yaml":true},{"content":"A category name used to organize the output.","nodes":[{"pos":[0,44],"content":"A category name used to organize the output.","nodes":[{"content":"A category name used to organize the output.","pos":[0,44]}]}],"pos":[93007,93052],"yaml":true},{"content":"Writes the value of the object's <xref href=\"System.Object.ToString\"></xref> method to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref> collection.","nodes":[{"pos":[0,181],"content":"Writes the value of the object's <ph id=\"ph1\">&lt;xref href=\"System.Object.ToString\"&gt;&lt;/xref&gt;</ph> method to the trace listeners in the <ph id=\"ph2\">&lt;xref href=\"System.Diagnostics.Debug.Listeners\"&gt;&lt;/xref&gt;</ph> collection.","source":"Writes the value of the object's <xref href=\"System.Object.ToString\"></xref> method to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref> collection."}],"pos":[94519,94701],"yaml":true},{"content":"By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.  \n  \n This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.","nodes":[{"pos":[0,99],"content":"By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.","nodes":[{"content":"By default, the output is written to an instance of <ph id=\"ph1\">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.","pos":[0,99],"source":"By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>."}]},{"pos":[106,210],"content":"This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.","nodes":[{"content":"This method calls the <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> method of the trace listener.","pos":[0,104],"source":"This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener."}]}],"pos":[94712,94927],"yaml":true,"extradata":"MT"},{"content":"An object whose name is sent to the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref>.","nodes":[{"pos":[0,92],"content":"An object whose name is sent to the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.Debug.Listeners\"&gt;&lt;/xref&gt;</ph>.","source":"An object whose name is sent to the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref>."}],"pos":[96307,96400],"yaml":true},{"content":"Writes a message followed by a line terminator to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref> collection.","nodes":[{"pos":[0,144],"content":"Writes a message followed by a line terminator to the trace listeners in the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.Debug.Listeners\"&gt;&lt;/xref&gt;</ph> collection.","source":"Writes a message followed by a line terminator to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref> collection."}],"pos":[97989,98134],"yaml":true},{"content":"By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.  \n  \n This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.","nodes":[{"pos":[0,99],"content":"By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.","nodes":[{"content":"By default, the output is written to an instance of <ph id=\"ph1\">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.","pos":[0,99],"source":"By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>."}]},{"pos":[106,210],"content":"This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.","nodes":[{"content":"This method calls the <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> method of the trace listener.","pos":[0,104],"source":"This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener."}]}],"pos":[98145,98360],"yaml":true,"extradata":"MT"},{"content":"A message to write.","nodes":[{"pos":[0,19],"content":"A message to write.","nodes":[{"content":"A message to write.","pos":[0,19]}]}],"pos":[99740,99760],"yaml":true},{"content":"Writes a category name and the value of the object's <xref href=\"System.Object.ToString\"></xref> method to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref> collection.","nodes":[{"pos":[0,201],"content":"Writes a category name and the value of the object's <ph id=\"ph1\">&lt;xref href=\"System.Object.ToString\"&gt;&lt;/xref&gt;</ph> method to the trace listeners in the <ph id=\"ph2\">&lt;xref href=\"System.Diagnostics.Debug.Listeners\"&gt;&lt;/xref&gt;</ph> collection.","source":"Writes a category name and the value of the object's <xref href=\"System.Object.ToString\"></xref> method to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref> collection."}],"pos":[101415,101617],"yaml":true},{"content":"By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.  \n  \n The `category` parameter can be used to group output messages.  \n  \n This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.","nodes":[{"pos":[0,99],"content":"By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.","nodes":[{"content":"By default, the output is written to an instance of <ph id=\"ph1\">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.","pos":[0,99],"source":"By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>."}]},{"pos":[106,168],"content":"The <ph id=\"ph1\">`category`</ph> parameter can be used to group output messages.","source":"The `category` parameter can be used to group output messages."},{"pos":[175,279],"content":"This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.","nodes":[{"content":"This method calls the <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> method of the trace listener.","pos":[0,104],"source":"This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener."}]}],"pos":[101628,101914],"yaml":true,"extradata":"MT"},{"content":"An object whose name is sent to the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref>.","nodes":[{"pos":[0,92],"content":"An object whose name is sent to the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.Debug.Listeners\"&gt;&lt;/xref&gt;</ph>.","source":"An object whose name is sent to the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref>."}],"pos":[103320,103413],"yaml":true},{"content":"A category name used to organize the output.","nodes":[{"pos":[0,44],"content":"A category name used to organize the output.","nodes":[{"content":"A category name used to organize the output.","pos":[0,44]}]}],"pos":[103477,103522],"yaml":true},{"content":"Writes a formatted message followed by a line terminator to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref> collection.","nodes":[{"pos":[0,154],"content":"Writes a formatted message followed by a line terminator to the trace listeners in the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.Debug.Listeners\"&gt;&lt;/xref&gt;</ph> collection.","source":"Writes a formatted message followed by a line terminator to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref> collection."}],"pos":[105069,105224],"yaml":true},{"content":"This method uses the  of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.  \n  \n The  keyword in the syntax for this method implies that the object array can be a single value. The exception to this is the <xref:System.String> object. Explicit overloads take precedence, so an `arg` value of a single string will default to the <xref:System.Diagnostics.Debug.WriteLine%28System.String%2CSystem.String%29?displayProperty=fullName> overload.  \n  \n By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.  \n  \n This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=fullName> method of the trace listener.","nodes":[{"pos":[0,147],"content":"This method uses the  of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.","nodes":[{"content":"This method uses the  of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.","pos":[0,147]}]},{"pos":[154,512],"content":"The  keyword in the syntax for this method implies that the object array can be a single value. The exception to this is the <xref:System.String> object. Explicit overloads take precedence, so an `arg` value of a single string will default to the <xref:System.Diagnostics.Debug.WriteLine%28System.String%2CSystem.String%29?displayProperty=fullName> overload.","nodes":[{"content":"The  keyword in the syntax for this method implies that the object array can be a single value.","pos":[0,95]},{"content":"The exception to this is the <ph id=\"ph1\">&lt;xref:System.String&gt;</ph> object.","pos":[96,153],"source":" The exception to this is the <xref:System.String> object."},{"content":"Explicit overloads take precedence, so an <ph id=\"ph1\">`arg`</ph> value of a single string will default to the <ph id=\"ph2\">&lt;xref:System.Diagnostics.Debug.WriteLine%28System.String%2CSystem.String%29?displayProperty=fullName&gt;</ph> overload.","pos":[154,358],"source":" Explicit overloads take precedence, so an `arg` value of a single string will default to the <xref:System.Diagnostics.Debug.WriteLine%28System.String%2CSystem.String%29?displayProperty=fullName> overload."}]},{"pos":[519,618],"content":"By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.","nodes":[{"content":"By default, the output is written to an instance of <ph id=\"ph1\">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.","pos":[0,99],"source":"By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>."}]},{"pos":[625,754],"content":"This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=fullName> method of the trace listener.","nodes":[{"content":"This method calls the <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=fullName&gt;</ph> method of the trace listener.","pos":[0,129],"source":"This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=fullName> method of the trace listener."}]}],"pos":[105235,105998],"yaml":true,"extradata":"MT"},{"content":"A composite format string that contains text intermixed with zero or more format items, which correspond to objects in the <code>args</code> array.","nodes":[{"pos":[0,147],"content":"A composite format string that contains text intermixed with zero or more format items, which correspond to objects in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">args</ph><ept id=\"p1\">&lt;/code&gt;</ept> array.","source":"A composite format string that contains text intermixed with zero or more format items, which correspond to objects in the <code>args</code> array."}],"pos":[106218,106366],"yaml":true},{"content":"An object array that contains zero or more objects to format.","nodes":[{"pos":[0,61],"content":"An object array that contains zero or more objects to format.","nodes":[{"content":"An object array that contains zero or more objects to format.","pos":[0,61]}]}],"pos":[106428,106490],"yaml":true},{"content":"Writes a category name and message to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref> collection.","nodes":[{"pos":[0,132],"content":"Writes a category name and message to the trace listeners in the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.Debug.Listeners\"&gt;&lt;/xref&gt;</ph> collection.","source":"Writes a category name and message to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref> collection."}],"pos":[108145,108278],"yaml":true},{"content":"By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.  \n  \n The `category` parameter can be used to group output messages.  \n  \n This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.","nodes":[{"pos":[0,99],"content":"By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.","nodes":[{"content":"By default, the output is written to an instance of <ph id=\"ph1\">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.","pos":[0,99],"source":"By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>."}]},{"pos":[106,168],"content":"The <ph id=\"ph1\">`category`</ph> parameter can be used to group output messages.","source":"The `category` parameter can be used to group output messages."},{"pos":[175,279],"content":"This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.","nodes":[{"content":"This method calls the <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> method of the trace listener.","pos":[0,104],"source":"This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener."}]}],"pos":[108289,108575],"yaml":true,"extradata":"MT"},{"content":"A message to write.","nodes":[{"pos":[0,19],"content":"A message to write.","nodes":[{"content":"A message to write.","pos":[0,19]}]}],"pos":[109997,110017],"yaml":true},{"content":"A category name used to organize the output.","nodes":[{"pos":[0,44],"content":"A category name used to organize the output.","nodes":[{"content":"A category name used to organize the output.","pos":[0,44]}]}],"pos":[110081,110126],"yaml":true},{"content":"Writes a category name and the value of the object's <xref href=\"System.Object.ToString\"></xref> method to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref> collection if a condition is `true`.","nodes":[{"pos":[0,226],"content":"Writes a category name and the value of the object's <ph id=\"ph1\">&lt;xref href=\"System.Object.ToString\"&gt;&lt;/xref&gt;</ph> method to the trace listeners in the <ph id=\"ph2\">&lt;xref href=\"System.Diagnostics.Debug.Listeners\"&gt;&lt;/xref&gt;</ph> collection if a condition is <ph id=\"ph3\">`true`</ph>.","source":"Writes a category name and the value of the object's <xref href=\"System.Object.ToString\"></xref> method to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref> collection if a condition is `true`."}],"pos":[111745,111972],"yaml":true},{"content":"By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.  \n  \n The `category` parameter can be used to group output messages.  \n  \n This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.","nodes":[{"pos":[0,99],"content":"By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.","nodes":[{"content":"By default, the output is written to an instance of <ph id=\"ph1\">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.","pos":[0,99],"source":"By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>."}]},{"pos":[106,168],"content":"The <ph id=\"ph1\">`category`</ph> parameter can be used to group output messages.","source":"The `category` parameter can be used to group output messages."},{"pos":[175,279],"content":"This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.","nodes":[{"content":"This method calls the <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> method of the trace listener.","pos":[0,104],"source":"This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener."}]}],"pos":[111983,112269],"yaml":true,"extradata":"MT"},{"content":"The conditional expression to evaluate. If the condition is `true`, the category name and value are written to the trace listeners in the collection.","nodes":[{"pos":[0,149],"content":"The conditional expression to evaluate. If the condition is `true`, the category name and value are written to the trace listeners in the collection.","nodes":[{"content":"The conditional expression to evaluate.","pos":[0,39]},{"content":"If the condition is <ph id=\"ph1\">`true`</ph>, the category name and value are written to the trace listeners in the collection.","pos":[40,149],"source":" If the condition is `true`, the category name and value are written to the trace listeners in the collection."}]}],"pos":[113703,113853],"yaml":true},{"content":"An object whose name is sent to the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref>.","nodes":[{"pos":[0,92],"content":"An object whose name is sent to the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.Debug.Listeners\"&gt;&lt;/xref&gt;</ph>.","source":"An object whose name is sent to the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref>."}],"pos":[113914,114007],"yaml":true},{"content":"A category name used to organize the output.","nodes":[{"pos":[0,44],"content":"A category name used to organize the output.","nodes":[{"content":"A category name used to organize the output.","pos":[0,44]}]}],"pos":[114071,114116],"yaml":true},{"content":"Writes the value of the object's <xref href=\"System.Object.ToString\"></xref> method to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref> collection if a condition is `true`.","nodes":[{"pos":[0,206],"content":"Writes the value of the object's <ph id=\"ph1\">&lt;xref href=\"System.Object.ToString\"&gt;&lt;/xref&gt;</ph> method to the trace listeners in the <ph id=\"ph2\">&lt;xref href=\"System.Diagnostics.Debug.Listeners\"&gt;&lt;/xref&gt;</ph> collection if a condition is <ph id=\"ph3\">`true`</ph>.","source":"Writes the value of the object's <xref href=\"System.Object.ToString\"></xref> method to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref> collection if a condition is `true`."}],"pos":[115671,115878],"yaml":true},{"content":"By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.  \n  \n This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.","nodes":[{"pos":[0,99],"content":"By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.","nodes":[{"content":"By default, the output is written to an instance of <ph id=\"ph1\">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.","pos":[0,99],"source":"By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>."}]},{"pos":[106,210],"content":"This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.","nodes":[{"content":"This method calls the <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> method of the trace listener.","pos":[0,104],"source":"This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener."}]}],"pos":[115889,116104],"yaml":true,"extradata":"MT"},{"content":"The conditional expression to evaluate. If the condition is `true`, the value is written to the trace listeners in the collection.","nodes":[{"pos":[0,130],"content":"The conditional expression to evaluate. If the condition is `true`, the value is written to the trace listeners in the collection.","nodes":[{"content":"The conditional expression to evaluate.","pos":[0,39]},{"content":"If the condition is <ph id=\"ph1\">`true`</ph>, the value is written to the trace listeners in the collection.","pos":[40,130],"source":" If the condition is `true`, the value is written to the trace listeners in the collection."}]}],"pos":[117519,117650],"yaml":true},{"content":"An object whose name is sent to the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref>.","nodes":[{"pos":[0,92],"content":"An object whose name is sent to the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.Debug.Listeners\"&gt;&lt;/xref&gt;</ph>.","source":"An object whose name is sent to the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref>."}],"pos":[117711,117804],"yaml":true},{"content":"Writes a message to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref> collection if a condition is `true`.","nodes":[{"pos":[0,139],"content":"Writes a message to the trace listeners in the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.Debug.Listeners\"&gt;&lt;/xref&gt;</ph> collection if a condition is <ph id=\"ph2\">`true`</ph>.","source":"Writes a message to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref> collection if a condition is `true`."}],"pos":[119359,119499],"yaml":true},{"content":"By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.  \n  \n This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=fullName> method of the trace listener.","nodes":[{"pos":[0,99],"content":"By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.","nodes":[{"content":"By default, the output is written to an instance of <ph id=\"ph1\">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.","pos":[0,99],"source":"By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>."}]},{"pos":[106,235],"content":"This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=fullName> method of the trace listener.","nodes":[{"content":"This method calls the <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=fullName&gt;</ph> method of the trace listener.","pos":[0,129],"source":"This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=fullName> method of the trace listener."}]}],"pos":[119510,119750],"yaml":true,"extradata":"MT"},{"content":"The conditional expression to evaluate. If the condition is `true`, the message is written to the trace listeners in the collection.","nodes":[{"pos":[0,132],"content":"The conditional expression to evaluate. If the condition is `true`, the message is written to the trace listeners in the collection.","nodes":[{"content":"The conditional expression to evaluate.","pos":[0,39]},{"content":"If the condition is <ph id=\"ph1\">`true`</ph>, the message is written to the trace listeners in the collection.","pos":[40,132],"source":" If the condition is `true`, the message is written to the trace listeners in the collection."}]}],"pos":[121166,121299],"yaml":true},{"content":"A message to write.","nodes":[{"pos":[0,19],"content":"A message to write.","nodes":[{"content":"A message to write.","pos":[0,19]}]}],"pos":[121362,121382],"yaml":true},{"content":"Writes a category name and message to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref> collection if a condition is `true`.","nodes":[{"pos":[0,157],"content":"Writes a category name and message to the trace listeners in the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.Debug.Listeners\"&gt;&lt;/xref&gt;</ph> collection if a condition is <ph id=\"ph2\">`true`</ph>.","source":"Writes a category name and message to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref> collection if a condition is `true`."}],"pos":[123123,123281],"yaml":true},{"content":"By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.  \n  \n The `category` parameter can be used to group output messages.  \n  \n This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=fullName> method of the trace listener.","nodes":[{"pos":[0,99],"content":"By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.","nodes":[{"content":"By default, the output is written to an instance of <ph id=\"ph1\">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.","pos":[0,99],"source":"By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>."}]},{"pos":[106,168],"content":"The <ph id=\"ph1\">`category`</ph> parameter can be used to group output messages.","source":"The `category` parameter can be used to group output messages."},{"pos":[175,304],"content":"This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=fullName> method of the trace listener.","nodes":[{"content":"This method calls the <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=fullName&gt;</ph> method of the trace listener.","pos":[0,129],"source":"This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=fullName> method of the trace listener."}]}],"pos":[123292,123603],"yaml":true,"extradata":"MT"},{"content":"`true` to cause a message to be written; otherwise, `false`.","nodes":[{"pos":[0,60],"content":"<ph id=\"ph1\">`true`</ph> to cause a message to be written; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to cause a message to be written; otherwise, `false`."}],"pos":[125058,125121],"yaml":true},{"content":"A message to write.","nodes":[{"pos":[0,19],"content":"A message to write.","nodes":[{"content":"A message to write.","pos":[0,19]}]}],"pos":[125184,125204],"yaml":true},{"content":"A category name used to organize the output.","nodes":[{"pos":[0,44],"content":"A category name used to organize the output.","nodes":[{"content":"A category name used to organize the output.","pos":[0,44]}]}],"pos":[125268,125313],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.Debug\n  commentId: T:System.Diagnostics.Debug\n  id: Debug\n  children:\n  - System.Diagnostics.Debug.Assert(System.Boolean)\n  - System.Diagnostics.Debug.Assert(System.Boolean,System.String)\n  - System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)\n  - System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])\n  - System.Diagnostics.Debug.AutoFlush\n  - System.Diagnostics.Debug.Close\n  - System.Diagnostics.Debug.Fail(System.String)\n  - System.Diagnostics.Debug.Fail(System.String,System.String)\n  - System.Diagnostics.Debug.Flush\n  - System.Diagnostics.Debug.Indent\n  - System.Diagnostics.Debug.IndentLevel\n  - System.Diagnostics.Debug.IndentSize\n  - System.Diagnostics.Debug.Listeners\n  - System.Diagnostics.Debug.Print(System.String)\n  - System.Diagnostics.Debug.Print(System.String,System.Object[])\n  - System.Diagnostics.Debug.Unindent\n  - System.Diagnostics.Debug.Write(System.String,System.String)\n  - System.Diagnostics.Debug.Write(System.Object,System.String)\n  - System.Diagnostics.Debug.Write(System.Object)\n  - System.Diagnostics.Debug.Write(System.String)\n  - System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)\n  - System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)\n  - System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)\n  - System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)\n  - System.Diagnostics.Debug.WriteLine(System.Object)\n  - System.Diagnostics.Debug.WriteLine(System.String)\n  - System.Diagnostics.Debug.WriteLine(System.Object,System.String)\n  - System.Diagnostics.Debug.WriteLine(System.String,System.Object[])\n  - System.Diagnostics.Debug.WriteLine(System.String,System.String)\n  - System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)\n  - System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)\n  - System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)\n  - System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)\n  langs:\n  - csharp\n  name: Debug\n  nameWithType: Debug\n  fullName: System.Diagnostics.Debug\n  type: Class\n  assemblies:\n  - System.Diagnostics.Debug\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Provides a set of methods and properties that help debug your code.\n  remarks: \"If you use methods in the <xref:System.Diagnostics.Debug> class to print debugging information and check your logic with assertions, you can make your code more robust without impacting the performance and code size of your shipping product.  \\n  \\n This class provides methods to display an <xref:System.Diagnostics.Debug.Assert%2A> dialog box, and to emit an assertion that will always fail. This class provides write methods in the following variations: <xref:System.Diagnostics.Debug.Write%2A>, <xref:System.Diagnostics.Debug.WriteLine%2A>, <xref:System.Diagnostics.Debug.WriteIf%2A> and <xref:System.Diagnostics.Debug.WriteLineIf%2A>.  \\n  \\n The <xref:System.Diagnostics.BooleanSwitch> and <xref:System.Diagnostics.TraceSwitch> classes provide means to dynamically control the tracing output. You can modify the values of these switches without recompiling your application. For information on using the configuration file to set a switch, see the <xref:System.Diagnostics.Switch> class and the [Trace Switches](~/docs/framework/debug-trace-profile/trace-switches.md) topic.  \\n  \\n You can customize the tracing output's target by adding <xref:System.Diagnostics.TraceListener> instances to or removing instances from the <xref:System.Diagnostics.Debug.Listeners%2A> collection. The <xref:System.Diagnostics.Debug.Listeners%2A> collection is shared by both the <xref:System.Diagnostics.Debug> and the <xref:System.Diagnostics.Trace> classes; adding a trace listener to either class adds the listener to both. By default, the <xref:System.Diagnostics.DefaultTraceListener> class emits trace output.  \\n  \\n> [!NOTE]\\n>  Adding a trace listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection can cause an exception to be thrown while tracing, if a resource used by the trace listener is not available. The conditions and the exception thrown depend on the trace listener and cannot be enumerated in this topic. It may be useful to place calls to the <xref:System.Diagnostics.Debug> methods in `try`/`catch` blocks to detect and handle any exceptions from trace listeners.  \\n  \\n You can modify the level of indentation using the <xref:System.Diagnostics.Debug.Indent%2A> method or the <xref:System.Diagnostics.Debug.IndentLevel%2A> property. To modify the indent spacing, use the <xref:System.Diagnostics.Debug.IndentSize%2A> property. You can specify whether to automatically flush the output buffer after each write by setting the <xref:System.Diagnostics.Debug.AutoFlush%2A> property to `true`.  \\n  \\n To set the <xref:System.Diagnostics.Debug.AutoFlush%2A> and <xref:System.Diagnostics.Debug.IndentSize%2A> for <xref:System.Diagnostics.Debug>, you can edit the configuration file corresponding to the name of your application. The configuration file should be formatted as shown in the following example.  \\n  \\n```  \\n<configuration>  \\n  <system.diagnostics>  \\n    <trace autoflush=\\\"true\\\" indentsize=\\\"7\\\" />  \\n  </system.diagnostics>  \\n</configuration>  \\n```  \\n  \\n The <xref:System.Diagnostics.ConditionalAttribute> attribute is applied to the methods of <xref:System.Diagnostics.Debug>. Compilers that support <xref:System.Diagnostics.ConditionalAttribute> ignore calls to these methods unless \\\"DEBUG\\\" is defined as a conditional compilation symbol. Refer to a compiler's documentation to determine whether <xref:System.Diagnostics.ConditionalAttribute> is supported and the syntax for defining a conditional compilation symbol.  \\n  \\n> [!NOTE]\\n>  In Visual Studio C# and Visual Basic projects, by default, the \\\"DEBUG\\\" conditional compilation symbol is defined for debug builds, and the \\\"TRACE\\\" symbol is defined for both debug and release builds. For information about how to disable this behavior, see the Visual Studio documentation. For information about conditional debugging in Visual C++, see [Debug Class (C++/CLI)](http://msdn.microsoft.com/library/076bd528-1b6f-4e8a-a372-eb5849cf969a).  \\n  \\n To define the \\\"DEBUG\\\" conditional compilation symbol in C#, add the `/d:DEBUG` option to the compiler command line when you compile your code using a command line, or add `#define DEBUG` to the top of your file. In Visual Basic, add the `/d:DEBUG=True` option to the compiler command line or add `#Const DEBUG=True` to the file.\"\n  example:\n  - \"The following example uses <xref:System.Diagnostics.Debug> to indicate the beginning and end of a program's execution. The example also uses <xref:System.Diagnostics.Debug.Indent%2A> and <xref:System.Diagnostics.Debug.Unindent%2A> to distinguish the tracing output.  \\n  \\n [!code-cpp[Classic Debug Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic Debug Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug Example/CS/source.cs#1)]\\n [!code-vb[Classic Debug Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug Example/VB/source.vb#1)]\"\n  syntax:\n    content: public static class Debug\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/Debug.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.Debug.Assert(System.Boolean)\n  commentId: M:System.Diagnostics.Debug.Assert(System.Boolean)\n  id: Assert(System.Boolean)\n  parent: System.Diagnostics.Debug\n  langs:\n  - csharp\n  name: Assert(Boolean)\n  nameWithType: Debug.Assert(Boolean)\n  fullName: Debug.Assert(Boolean)\n  type: Method\n  assemblies:\n  - System.Diagnostics.Debug\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Checks for a condition; if the condition is `false`, displays a message box that shows the call stack.\n  remarks: \"By default, the <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=fullName> method works only in debug builds. Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=fullName> method if you want to do assertions in release builds. For more information, see [Assertions in Managed Code](http://msdn.microsoft.com/library/70ab2522-6486-4076-a1a9-e0f11cd0f3a1).  \\n  \\n> [!IMPORTANT]\\n>  The `Assert` methods are not available for [!INCLUDE[win8_appstore_long](~/includes/win8-appstore-long-md.md)] apps.  \\n  \\n Typically, the <xref:System.Diagnostics.Debug.Assert%28System.Boolean%29> method is used to identify logic errors during program development. <xref:System.Diagnostics.Debug.Assert%2A> evaluates the condition. If the result is `false`, it sends a failure message to the <xref:System.Diagnostics.Debug.Listeners%2A> collection. You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.  \\n  \\n When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers. The message box contains three buttons: **Abort**, **Retry**, and **Ignore**. Clicking the **Abort** button terminates the application. Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not. Clicking **Ignore** continues with the next instruction in the code.  \\n  \\n> [!NOTE]\\n>  [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] apps do not support modal dialog boxes, so they behave the same in user interface mode and non-user interface mode. The message is written to the active trace listeners in debugging mode, or no message is written in release mode.  \\n  \\n> [!NOTE]\\n>  The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>. If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed. The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [\\\\&lt;clear\\\\&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [\\\\&lt;remove\\\\&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).  \\n  \\n You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application. In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=fullName> property. The configuration file should be formatted as follows:  \\n  \\n```  \\n<configuration>  \\n  <system.diagnostics>  \\n    <assert assertuienabled=\\\"true\\\" logfilename=\\\"c:\\\\\\\\myFile.log\\\" />  \\n  </system.diagnostics>  \\n</configuration>  \\n```\"\n  example:\n  - \"The following example creates an index for an array, performs some action to set the value of the index, and then calls <xref:System.Diagnostics.Debug.Assert%2A> to confirm that the index value is valid. If it is not valid, <xref:System.Diagnostics.Debug.Assert%2A> outputs the call stack.  \\n  \\n [!code-cpp[Classic Debug.Assert Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Assert Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic Debug.Assert Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Assert Example/CS/source.cs#1)]\\n [!code-vb[Classic Debug.Assert Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Assert Example/VB/source.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Diagnostics.Conditional(\"DEBUG\")]\n\n      public static void Assert (bool condition);\n    parameters:\n    - id: condition\n      type: System.Boolean\n      description: The conditional expression to evaluate. If the condition is `true`, a failure message is not sent and the message box is not displayed.\n  overload: System.Diagnostics.Debug.Assert*\n  exceptions: []\n  attributes:\n  - type: System.Diagnostics.ConditionalAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/Debug.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.Debug.Assert(System.Boolean,System.String)\n  commentId: M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)\n  id: Assert(System.Boolean,System.String)\n  parent: System.Diagnostics.Debug\n  langs:\n  - csharp\n  name: Assert(Boolean, String)\n  nameWithType: Debug.Assert(Boolean, String)\n  fullName: Debug.Assert(Boolean, String)\n  type: Method\n  assemblies:\n  - System.Diagnostics.Debug\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Checks for a condition; if the condition is `false`, outputs a specified message and displays a message box that shows the call stack.\n  remarks: \"By default, the <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=fullName> method works only in debug builds. Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=fullName> method if you want to do assertions in release builds. For more information, see [Assertions in Managed Code](http://msdn.microsoft.com/library/70ab2522-6486-4076-a1a9-e0f11cd0f3a1).  \\n  \\n Typically, the <xref:System.Diagnostics.Debug.Assert%2A> method is used to identify logic errors during program development. <xref:System.Diagnostics.Debug.Assert%2A> evaluates the condition. If the result is `false`, it sends the specified diagnostic message to the <xref:System.Diagnostics.Debug.Listeners%2A> collection. You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.  \\n  \\n When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers. The message box contains three buttons: **Abort**, **Retry**, and **Ignore**. Clicking the **Abort** button terminates the application. Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not. Clicking **Ignore** continues with the next instruction in the code.  \\n  \\n> [!NOTE]\\n>  The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>. If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed. The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [\\\\&lt;clear\\\\&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [\\\\&lt;remove\\\\&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).  \\n  \\n You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application. In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=fullName> property. The configuration file should be formatted as follows:  \\n  \\n```  \\n<configuration>  \\n  <system.diagnostics>  \\n    <assert assertuienabled=\\\"true\\\" logfilename=\\\"c:\\\\\\\\myFile.log\\\" />  \\n  </system.diagnostics>  \\n</configuration>  \\n```\"\n  example:\n  - \"The following example checks whether the `type` parameter is valid. If `type` is `null`, <xref:System.Diagnostics.Trace.Assert%2A> outputs a message.  \\n  \\n [!code-cpp[Classic Debug.Assert1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Assert1 Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic Debug.Assert1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Assert1 Example/CS/source.cs#1)]\\n [!code-vb[Classic Debug.Assert1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Assert1 Example/VB/source.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Diagnostics.Conditional(\"DEBUG\")]\n\n      public static void Assert (bool condition, string message);\n    parameters:\n    - id: condition\n      type: System.Boolean\n      description: The conditional expression to evaluate. If the condition is `true`, the specified message is not sent and the message box is not displayed.\n    - id: message\n      type: System.String\n      description: The message to send to the <xref href=\"System.Diagnostics.Trace.Listeners\"></xref> collection.\n  overload: System.Diagnostics.Debug.Assert*\n  exceptions: []\n  attributes:\n  - type: System.Diagnostics.ConditionalAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/Debug.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)\n  commentId: M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)\n  id: Assert(System.Boolean,System.String,System.String)\n  parent: System.Diagnostics.Debug\n  langs:\n  - csharp\n  name: Assert(Boolean, String, String)\n  nameWithType: Debug.Assert(Boolean, String, String)\n  fullName: Debug.Assert(Boolean, String, String)\n  type: Method\n  assemblies:\n  - System.Diagnostics.Debug\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Checks for a condition; if the condition is `false`, outputs two specified messages and displays a message box that shows the call stack.\n  remarks: \"By default, the <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=fullName> method works only in debug builds. Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=fullName> method if you want to do assertions in release builds. For more information, see [Assertions in Managed Code](http://msdn.microsoft.com/library/70ab2522-6486-4076-a1a9-e0f11cd0f3a1).  \\n  \\n Typically, the <xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%29> method is used to identify logic errors during program development. <xref:System.Diagnostics.Debug.Assert%2A> evaluates the condition. If the result is `false`, it sends the specified diagnostic message and detailed message to the <xref:System.Diagnostics.Debug.Listeners%2A> collection. You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.  \\n  \\n When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers. The message box contains three buttons: **Abort**, **Retry**, and **Ignore**. Clicking the **Abort** button terminates the application. Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not. Clicking **Ignore** continues with the next instruction in the code.  \\n  \\n> [!NOTE]\\n>  The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>. If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed. The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [\\\\&lt;clear\\\\&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [\\\\&lt;remove\\\\&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).  \\n  \\n You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application. In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=fullName> property. The configuration file should be formatted as follows:  \\n  \\n```  \\n<configuration>  \\n  <system.diagnostics>  \\n    <assert assertuienabled=\\\"true\\\" logfilename=\\\"c:\\\\\\\\myFile.log\\\" />  \\n  </system.diagnostics>  \\n</configuration>  \\n```\"\n  example:\n  - \"The following example checks whether the `type` parameter is valid. If `type` is `null`, <xref:System.Diagnostics.Trace.Assert%2A> outputs two messages.  \\n  \\n [!code-cpp[Classic Debug.Assert2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Assert2 Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic Debug.Assert2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Assert2 Example/CS/source.cs#1)]\\n [!code-vb[Classic Debug.Assert2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Assert2 Example/VB/source.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Diagnostics.Conditional(\"DEBUG\")]\n\n      public static void Assert (bool condition, string message, string detailMessage);\n    parameters:\n    - id: condition\n      type: System.Boolean\n      description: The conditional expression to evaluate. If the condition is `true`, the specified messages are not sent and the message box is not displayed.\n    - id: message\n      type: System.String\n      description: The message to send to the <xref href=\"System.Diagnostics.Trace.Listeners\"></xref> collection.\n    - id: detailMessage\n      type: System.String\n      description: The detailed message to send to the <xref href=\"System.Diagnostics.Trace.Listeners\"></xref> collection.\n  overload: System.Diagnostics.Debug.Assert*\n  exceptions: []\n  attributes:\n  - type: System.Diagnostics.ConditionalAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/Debug.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])\n  commentId: M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])\n  id: Assert(System.Boolean,System.String,System.String,System.Object[])\n  parent: System.Diagnostics.Debug\n  langs:\n  - csharp\n  name: Assert(Boolean, String, String, Object[])\n  nameWithType: Debug.Assert(Boolean, String, String, Object[])\n  fullName: Debug.Assert(Boolean, String, String, Object[])\n  type: Method\n  assemblies:\n  - System.Diagnostics.Debug\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Checks for a condition; if the condition is `false`, outputs two messages (simple and formatted) and displays a message box that shows the call stack.\n  remarks: \"This method uses the  of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string. The resulting string is sent to the <xref:System.Diagnostics.Trace.Listeners%2A> collection.  \\n  \\n By default, the <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=fullName> method works only in debug builds. Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=fullName> method if you want to do assertions in release builds. For more information, see [Assertions in Managed Code](http://msdn.microsoft.com/library/70ab2522-6486-4076-a1a9-e0f11cd0f3a1).  \\n  \\n Typically, the <xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%2CSystem.Object%5B%5D%29> method is used to identify logic errors during program development. <xref:System.Diagnostics.Debug.Assert%2A> evaluates the condition. If the result is `false`, The <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=fullName> method is called and the `detailMessageFormat` string and `args` array are passed in as parameters. <xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%2CSystem.Object%5B%5D%29> then sends the specified text message and the formatted text message to the <xref:System.Diagnostics.Debug.Listeners%2A> collection. You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.  \\n  \\n When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers. The message box contains three buttons: **Abort**, **Retry**, and **Ignore**. Clicking the **Abort** button terminates the application. Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not. Clicking **Ignore** continues with the next instruction in the code.  \\n  \\n> [!NOTE]\\n>  The display of the message box is dependent on the presence of the <xref:System.Diagnostics.DefaultTraceListener>. If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed. The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [\\\\&lt;clear\\\\&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [\\\\&lt;remove\\\\&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).  \\n  \\n You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application. In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=fullName> property. The configuration file should be formatted as follows:  \\n  \\n```  \\n<configuration>  \\n  <system.diagnostics>  \\n    <assert assertuienabled=\\\"true\\\" logfilename=\\\"c:\\\\\\\\myFile.log\\\" />  \\n  </system.diagnostics>  \\n</configuration>  \\n```\"\n  syntax:\n    content: >-\n      [System.Diagnostics.Conditional(\"DEBUG\")]\n\n      public static void Assert (bool condition, string message, string detailMessageFormat, object[] args);\n    parameters:\n    - id: condition\n      type: System.Boolean\n      description: The conditional expression to evaluate. If the condition is `true`, the specified messages are not sent and the message box is not displayed.\n    - id: message\n      type: System.String\n      description: The message to send to the <xref href=\"System.Diagnostics.Trace.Listeners\"></xref> collection.\n    - id: detailMessageFormat\n      type: System.String\n      description: The composite format string to send to the <xref href=\"System.Diagnostics.Trace.Listeners\"></xref> collection. This message contains text intermixed with zero or more format items, which correspond to objects in the <code>args</code> array.\n    - id: args\n      type: System.Object[]\n      description: An object array that contains zero or more objects to format.\n  overload: System.Diagnostics.Debug.Assert*\n  exceptions: []\n  attributes:\n  - type: System.Diagnostics.ConditionalAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/Debug.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.Debug.AutoFlush\n  commentId: P:System.Diagnostics.Debug.AutoFlush\n  id: AutoFlush\n  parent: System.Diagnostics.Debug\n  langs:\n  - csharp\n  name: AutoFlush\n  nameWithType: Debug.AutoFlush\n  fullName: Debug.AutoFlush\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Diagnostics.Debug\n  namespace: System.Diagnostics\n  summary: Gets or sets a value indicating whether <xref href=\"System.Diagnostics.Debug.Flush\"></xref> should be called on the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref> after every write.\n  remarks: \"The default is `false`.  \\n  \\n Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.Diagnostics.Debug.Flush%2A> or <xref:System.Diagnostics.Debug.Close%2A>. Setting <xref:System.Diagnostics.Debug.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed. This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly. This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.  \\n  \\n To set the <xref:System.Diagnostics.Debug.AutoFlush%2A> and <xref:System.Diagnostics.Debug.IndentSize%2A> for <xref:System.Diagnostics.Debug>, you can also edit the configuration file corresponding to the name of your application. The configuration file should be formatted as shown in the following example.  \\n  \\n```  \\n<configuration>  \\n  <system.diagnostics>  \\n    <trace autoflush=\\\"true\\\" indentsize=\\\"7\\\" />  \\n  </system.diagnostics>  \\n</configuration>  \\n```\"\n  syntax:\n    content: public static bool AutoFlush { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if <xref href=\"System.Diagnostics.Debug.Flush\"></xref> is called on the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref> after every write; otherwise, `false`.'\n  overload: System.Diagnostics.Debug.AutoFlush*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/Debug.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.Debug.Close\n  commentId: M:System.Diagnostics.Debug.Close\n  id: Close\n  parent: System.Diagnostics.Debug\n  langs:\n  - csharp\n  name: Close()\n  nameWithType: Debug.Close()\n  fullName: Debug.Close()\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Diagnostics.Debug\n  namespace: System.Diagnostics\n  summary: Flushes the output buffer and then calls the `Close` method on each of the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref>.\n  remarks: \"Use this method when the output goes to a file, such as to the <xref:System.Diagnostics.TextWriterTraceListener>.  \\n  \\n Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.Diagnostics.Debug.Flush%2A> or <xref:System.Diagnostics.Debug.Close%2A>. Setting <xref:System.Diagnostics.Debug.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed. This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly. This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.\"\n  example:\n  - \"The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> named `myTextListener`. `myTextListener` uses a <xref:System.IO.StreamWriter> called `myOutputWriter` to write to a file named `TestFile.txt`. The example creates the file, stream, and text writer, writes one line of text to the file, and then flushes and closes the output.  \\n  \\n [!code-cpp[Classic Debug.Close Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Close Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic Debug.Close Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Close Example/CS/source.cs#1)]\\n [!code-vb[Classic Debug.Close Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Close Example/VB/source.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Diagnostics.Conditional(\"DEBUG\")]\n\n      public static void Close ();\n    parameters: []\n  overload: System.Diagnostics.Debug.Close*\n  exceptions: []\n  attributes:\n  - type: System.Diagnostics.ConditionalAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/Debug.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.Debug.Fail(System.String)\n  commentId: M:System.Diagnostics.Debug.Fail(System.String)\n  id: Fail(System.String)\n  parent: System.Diagnostics.Debug\n  langs:\n  - csharp\n  name: Fail(String)\n  nameWithType: Debug.Fail(String)\n  fullName: Debug.Fail(String)\n  type: Method\n  assemblies:\n  - System.Diagnostics.Debug\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Emits the specified error message.\n  remarks: \"The default behavior is that the <xref:System.Diagnostics.DefaultTraceListener> outputs the message to a message box when the application is running in user interface mode and to the <xref:System.Diagnostics.TraceListener> instances in the <xref:System.Diagnostics.Debug.Listeners%2A> collection.  \\n  \\n> [!NOTE]\\n>  The display of the message box is dependent on the presence of the <xref:System.Diagnostics.DefaultTraceListener>. If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed. The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [\\\\&lt;clear\\\\&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [\\\\&lt;remove\\\\&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).  \\n  \\n You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.\"\n  example:\n  - \"The following example uses the <xref:System.Diagnostics.Debug.Fail%2A> method to print a message during exception handling.  \\n  \\n [!code-cpp[Classic Debug.Fail Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Fail Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic Debug.Fail Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Fail Example/CS/source.cs#1)]\\n [!code-vb[Classic Debug.Fail Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Fail Example/VB/source.vb#1)]  \\n  \\n You can also use the <xref:System.Diagnostics.Debug.Fail%2A> method in a switch statement.  \\n  \\n [!code-cpp[Classic Debug.Fail Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Fail Example/CPP/source.cpp#2)]\\n [!code-csharp[Classic Debug.Fail Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Fail Example/CS/source.cs#2)]\\n [!code-vb[Classic Debug.Fail Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Fail Example/VB/source.vb#2)]\"\n  syntax:\n    content: >-\n      [System.Diagnostics.Conditional(\"DEBUG\")]\n\n      public static void Fail (string message);\n    parameters:\n    - id: message\n      type: System.String\n      description: A message to emit.\n  overload: System.Diagnostics.Debug.Fail*\n  exceptions: []\n  attributes:\n  - type: System.Diagnostics.ConditionalAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/Debug.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.Debug.Fail(System.String,System.String)\n  commentId: M:System.Diagnostics.Debug.Fail(System.String,System.String)\n  id: Fail(System.String,System.String)\n  parent: System.Diagnostics.Debug\n  langs:\n  - csharp\n  name: Fail(String, String)\n  nameWithType: Debug.Fail(String, String)\n  fullName: Debug.Fail(String, String)\n  type: Method\n  assemblies:\n  - System.Diagnostics.Debug\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Emits an error message and a detailed error message.\n  remarks: \"The default behavior is that the <xref:System.Diagnostics.DefaultTraceListener> outputs the message to a message box when the application is running in user interface mode and to the <xref:System.Diagnostics.TraceListener> instances in the <xref:System.Diagnostics.Debug.Listeners%2A> collection.  \\n  \\n> [!NOTE]\\n>  The display of the message box is dependent on the presence of the <xref:System.Diagnostics.DefaultTraceListener>. If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed. The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [\\\\&lt;clear\\\\&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [\\\\&lt;remove\\\\&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).  \\n  \\n You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.\"\n  example:\n  - \"The following example uses the <xref:System.Diagnostics.Debug.Fail%2A> method to print a message during exception handling.  \\n  \\n [!code-cpp[Classic Debug.Fail1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Fail1 Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic Debug.Fail1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Fail1 Example/CS/source.cs#1)]\\n [!code-vb[Classic Debug.Fail1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Fail1 Example/VB/source.vb#1)]  \\n  \\n You can also use the <xref:System.Diagnostics.Debug.Fail%2A> method in a switch statement.  \\n  \\n [!code-cpp[Classic Debug.Fail1 Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Fail1 Example/CPP/source.cpp#2)]\\n [!code-csharp[Classic Debug.Fail1 Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Fail1 Example/CS/source.cs#2)]\\n [!code-vb[Classic Debug.Fail1 Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Fail1 Example/VB/source.vb#2)]\"\n  syntax:\n    content: >-\n      [System.Diagnostics.Conditional(\"DEBUG\")]\n\n      public static void Fail (string message, string detailMessage);\n    parameters:\n    - id: message\n      type: System.String\n      description: A message to emit.\n    - id: detailMessage\n      type: System.String\n      description: A detailed message to emit.\n  overload: System.Diagnostics.Debug.Fail*\n  exceptions: []\n  attributes:\n  - type: System.Diagnostics.ConditionalAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/Debug.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.Debug.Flush\n  commentId: M:System.Diagnostics.Debug.Flush\n  id: Flush\n  parent: System.Diagnostics.Debug\n  langs:\n  - csharp\n  name: Flush()\n  nameWithType: Debug.Flush()\n  fullName: Debug.Flush()\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Diagnostics.Debug\n  namespace: System.Diagnostics\n  summary: Flushes the output buffer and causes buffered data to write to the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref> collection.\n  remarks: Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.Diagnostics.Debug.Flush%2A> or <xref:System.Diagnostics.Debug.Close%2A>. Setting <xref:System.Diagnostics.Debug.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed. This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly. This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.\n  example:\n  - \"The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> named `myTextListener`. `myTextListener` uses a <xref:System.IO.FileStream> called `myFileStream` to write to a file named `TestFile.txt`. The example creates the stream, opens the file if it exists or creates a new one, writes one line of text to the file, and then flushes and closes the output.  \\n  \\n [!code-cpp[Classic Debug.Close Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Close Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic Debug.Close Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Close Example/CS/source.cs#1)]\\n [!code-vb[Classic Debug.Close Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Close Example/VB/source.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Diagnostics.Conditional(\"DEBUG\")]\n\n      public static void Flush ();\n    parameters: []\n  overload: System.Diagnostics.Debug.Flush*\n  exceptions: []\n  attributes:\n  - type: System.Diagnostics.ConditionalAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/Debug.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.Debug.Indent\n  commentId: M:System.Diagnostics.Debug.Indent\n  id: Indent\n  parent: System.Diagnostics.Debug\n  langs:\n  - csharp\n  name: Indent()\n  nameWithType: Debug.Indent()\n  fullName: Debug.Indent()\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Diagnostics.Debug\n  namespace: System.Diagnostics\n  summary: Increases the current <xref href=\"System.Diagnostics.Debug.IndentLevel\"></xref> by one.\n  remarks: ''\n  example:\n  - \"The following example sets the indent level and emits debugging messages.  \\n  \\n [!code-cpp[Classic Debug.IndentLevel Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic Debug.IndentLevel Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/CS/source.cs#1)]\\n [!code-vb[Classic Debug.IndentLevel Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/VB/source.vb#1)]  \\n  \\n This example produces the following output:  \\n  \\n```  \\n  \\nList of errors:  \\n     Error 1: File not found  \\n     Error 2: Directory not found  \\nEnd of list of errors  \\n  \\n```\"\n  syntax:\n    content: >-\n      [System.Diagnostics.Conditional(\"DEBUG\")]\n\n      public static void Indent ();\n    parameters: []\n  overload: System.Diagnostics.Debug.Indent*\n  exceptions: []\n  attributes:\n  - type: System.Diagnostics.ConditionalAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/Debug.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.Debug.IndentLevel\n  commentId: P:System.Diagnostics.Debug.IndentLevel\n  id: IndentLevel\n  parent: System.Diagnostics.Debug\n  langs:\n  - csharp\n  name: IndentLevel\n  nameWithType: Debug.IndentLevel\n  fullName: Debug.IndentLevel\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Diagnostics.Debug\n  namespace: System.Diagnostics\n  summary: Gets or sets the indent level.\n  remarks: The <xref:System.Diagnostics.Debug.IndentLevel%2A> property represents the number of times the indent of size <xref:System.Diagnostics.Debug.IndentSize%2A> is applied.\n  example:\n  - \"The following example sets the indent level and emits debugging messages.  \\n  \\n [!code-cpp[Classic Debug.IndentLevel Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic Debug.IndentLevel Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/CS/source.cs#1)]\\n [!code-vb[Classic Debug.IndentLevel Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/VB/source.vb#1)]  \\n  \\n This example produces the following output:  \\n  \\n```  \\n  \\nList of errors:  \\n     Error 1: File not found  \\n     Error 2: Directory not found  \\nEnd of list of errors  \\n  \\n```\"\n  syntax:\n    content: public static int IndentLevel { get; set; }\n    return:\n      type: System.Int32\n      description: The indent level. The default is 0.\n  overload: System.Diagnostics.Debug.IndentLevel*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/Debug.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.Debug.IndentSize\n  commentId: P:System.Diagnostics.Debug.IndentSize\n  id: IndentSize\n  parent: System.Diagnostics.Debug\n  langs:\n  - csharp\n  name: IndentSize\n  nameWithType: Debug.IndentSize\n  fullName: Debug.IndentSize\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Diagnostics.Debug\n  namespace: System.Diagnostics\n  summary: Gets or sets the number of spaces in an indent.\n  remarks: \"A <xref:System.Diagnostics.TextWriterTraceListener> interprets this number as spaces. An <xref:System.Diagnostics.EventLogTraceListener> ignores this value.  \\n  \\n To set the <xref:System.Diagnostics.Debug.AutoFlush%2A> and <xref:System.Diagnostics.Debug.IndentSize%2A> for <xref:System.Diagnostics.Debug>, you can also edit the configuration file corresponding to the name of your application. The configuration file should be formatted as shown in the following example.  \\n  \\n```  \\n<configuration>  \\n  <system.diagnostics>  \\n    <trace autoflush=\\\"true\\\" indentsize=\\\"7\\\" />  \\n  </system.diagnostics>  \\n</configuration>  \\n```\"\n  syntax:\n    content: public static int IndentSize { get; set; }\n    return:\n      type: System.Int32\n      description: The number of spaces in an indent. The default is four.\n  overload: System.Diagnostics.Debug.IndentSize*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/Debug.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.Debug.Listeners\n  commentId: P:System.Diagnostics.Debug.Listeners\n  id: Listeners\n  parent: System.Diagnostics.Debug\n  langs:\n  - csharp\n  name: Listeners\n  nameWithType: Debug.Listeners\n  fullName: Debug.Listeners\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Diagnostics\n  summary: Gets the collection of listeners that is monitoring the debug output.\n  remarks: \"The listeners produce formatted output from the debug output. By default, the collection contains an instance of the <xref:System.Diagnostics.DefaultTraceListener> class. To remove the default listener, call the <xref:System.Diagnostics.TraceListenerCollection.Remove%2A> method, and pass it the instance of the <xref:System.Diagnostics.DefaultTraceListener>. To redirect output to the console window, add an instance of the <xref:System.Diagnostics.ConsoleTraceListener>. To redirect output to a file or stream, add an instance of the <xref:System.Diagnostics.TextWriterTraceListener>.  \\n  \\n> [!NOTE]\\n>  The <xref:System.Diagnostics.Debug.Listeners%2A> collection is shared by both the <xref:System.Diagnostics.Debug> and the <xref:System.Diagnostics.Trace> classes; adding a trace listener to either class adds the listener to both.\"\n  example:\n  - \"The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> that outputs to the console screen. The code then adds the new listener to the <xref:System.Diagnostics.Debug.Listeners%2A>.  \\n  \\n [!code-cpp[Classic Debug.Listeners Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Listeners Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic Debug.Listeners Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Listeners Example/CS/source.cs#1)]\\n [!code-vb[Classic Debug.Listeners Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Listeners Example/VB/source.vb#1)]\"\n  syntax:\n    content: public static System.Diagnostics.TraceListenerCollection Listeners { get; }\n    return:\n      type: System.Diagnostics.TraceListenerCollection\n      description: A <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref> representing a collection of type <xref href=\"System.Diagnostics.TraceListener\"></xref> that monitors the debug output.\n  overload: System.Diagnostics.Debug.Listeners*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/Debug.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.Debug.Print(System.String)\n  commentId: M:System.Diagnostics.Debug.Print(System.String)\n  id: Print(System.String)\n  parent: System.Diagnostics.Debug\n  langs:\n  - csharp\n  name: Print(String)\n  nameWithType: Debug.Print(String)\n  fullName: Debug.Print(String)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Diagnostics.Debug\n  namespace: System.Diagnostics\n  summary: Writes a message followed by a line terminator to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref> collection.\n  remarks: The default line terminator is a carriage return followed by a line feed. By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.\n  syntax:\n    content: >-\n      [System.Diagnostics.Conditional(\"DEBUG\")]\n\n      public static void Print (string message);\n    parameters:\n    - id: message\n      type: System.String\n      description: The message to write.\n  overload: System.Diagnostics.Debug.Print*\n  exceptions: []\n  attributes:\n  - type: System.Diagnostics.ConditionalAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/Debug.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.Debug.Print(System.String,System.Object[])\n  commentId: M:System.Diagnostics.Debug.Print(System.String,System.Object[])\n  id: Print(System.String,System.Object[])\n  parent: System.Diagnostics.Debug\n  langs:\n  - csharp\n  name: Print(String, Object[])\n  nameWithType: Debug.Print(String, Object[])\n  fullName: Debug.Print(String, Object[])\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Diagnostics.Debug\n  namespace: System.Diagnostics\n  summary: Writes a formatted string followed by a line terminator to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref> collection.\n  remarks: This method uses the  of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string. By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.\n  syntax:\n    content: >-\n      [System.Diagnostics.Conditional(\"DEBUG\")]\n\n      public static void Print (string format, object[] args);\n    parameters:\n    - id: format\n      type: System.String\n      description: A composite format string that contains text intermixed with zero or more format items, which correspond to objects in the <code>args</code> array.\n    - id: args\n      type: System.Object[]\n      description: An object array containing zero or more objects to format.\n  overload: System.Diagnostics.Debug.Print*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>format</code> is `null`.\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"<code>format</code> is invalid.  \\n  \\n -or-  \\n  \\n The number that indicates an argument to format is less than zero, or greater than or equal to the number of specified objects to format.\"\n  attributes:\n  - type: System.Diagnostics.ConditionalAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/Debug.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.Debug.Unindent\n  commentId: M:System.Diagnostics.Debug.Unindent\n  id: Unindent\n  parent: System.Diagnostics.Debug\n  langs:\n  - csharp\n  name: Unindent()\n  nameWithType: Debug.Unindent()\n  fullName: Debug.Unindent()\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Diagnostics.Debug\n  namespace: System.Diagnostics\n  summary: Decreases the current <xref href=\"System.Diagnostics.Debug.IndentLevel\"></xref> by one.\n  remarks: ''\n  example:\n  - \"The following example sets the indent level and emits debugging messages.  \\n  \\n [!code-cpp[Classic Debug.IndentLevel Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic Debug.IndentLevel Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/CS/source.cs#1)]\\n [!code-vb[Classic Debug.IndentLevel Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/VB/source.vb#1)]  \\n  \\n This example produces the following output:  \\n  \\n```  \\n  \\nList of errors:  \\n     Error 1: File not found  \\n     Error 2: Directory not found  \\nEnd of list of errors  \\n  \\n```\"\n  syntax:\n    content: >-\n      [System.Diagnostics.Conditional(\"DEBUG\")]\n\n      public static void Unindent ();\n    parameters: []\n  overload: System.Diagnostics.Debug.Unindent*\n  exceptions: []\n  attributes:\n  - type: System.Diagnostics.ConditionalAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/Debug.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.Debug.Write(System.String,System.String)\n  commentId: M:System.Diagnostics.Debug.Write(System.String,System.String)\n  id: Write(System.String,System.String)\n  parent: System.Diagnostics.Debug\n  langs:\n  - csharp\n  name: Write(String, String)\n  nameWithType: Debug.Write(String, String)\n  fullName: Debug.Write(String, String)\n  type: Method\n  assemblies:\n  - System.Diagnostics.Debug\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Writes a category name and message to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref> collection.\n  remarks: \"By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.  \\n  \\n Use the `category` parameter to group output messages.  \\n  \\n This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.\"\n  example:\n  - \"The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`. This switch is set outside of the code sample.  \\n  \\n If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>. For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.  \\n  \\n Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message. A line terminator follows the second message.  \\n  \\n [!code-cpp[Classic Debug.Write Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic Debug.Write Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CS/source.cs#1)]\\n [!code-vb[Classic Debug.Write Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Write Example/VB/source.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Diagnostics.Conditional(\"DEBUG\")]\n\n      public static void Write (string message, string category);\n    parameters:\n    - id: message\n      type: System.String\n      description: A message to write.\n    - id: category\n      type: System.String\n      description: A category name used to organize the output.\n  overload: System.Diagnostics.Debug.Write*\n  exceptions: []\n  attributes:\n  - type: System.Diagnostics.ConditionalAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/Debug.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.Debug.Write(System.Object,System.String)\n  commentId: M:System.Diagnostics.Debug.Write(System.Object,System.String)\n  id: Write(System.Object,System.String)\n  parent: System.Diagnostics.Debug\n  langs:\n  - csharp\n  name: Write(Object, String)\n  nameWithType: Debug.Write(Object, String)\n  fullName: Debug.Write(Object, String)\n  type: Method\n  assemblies:\n  - System.Diagnostics.Debug\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Writes a category name and the value of the object's <xref href=\"System.Object.ToString\"></xref> method to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref> collection.\n  remarks: \"By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.  \\n  \\n Use the `category` parameter to group output messages.  \\n  \\n This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.\"\n  example:\n  - \"The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`. This switch is set outside of the code sample.  \\n  \\n If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>. For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.  \\n  \\n Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message. A line terminator follows the second message.  \\n  \\n [!code-cpp[Classic Debug.Write Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic Debug.Write Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CS/source.cs#1)]\\n [!code-vb[Classic Debug.Write Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Write Example/VB/source.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Diagnostics.Conditional(\"DEBUG\")]\n\n      public static void Write (object value, string category);\n    parameters:\n    - id: value\n      type: System.Object\n      description: An object whose name is sent to the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref>.\n    - id: category\n      type: System.String\n      description: A category name used to organize the output.\n  overload: System.Diagnostics.Debug.Write*\n  exceptions: []\n  attributes:\n  - type: System.Diagnostics.ConditionalAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/Debug.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.Debug.Write(System.Object)\n  commentId: M:System.Diagnostics.Debug.Write(System.Object)\n  id: Write(System.Object)\n  parent: System.Diagnostics.Debug\n  langs:\n  - csharp\n  name: Write(Object)\n  nameWithType: Debug.Write(Object)\n  fullName: Debug.Write(Object)\n  type: Method\n  assemblies:\n  - System.Diagnostics.Debug\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Writes the value of the object's <xref href=\"System.Object.ToString\"></xref> method to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref> collection.\n  remarks: \"By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.  \\n  \\n This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.\"\n  example:\n  - \"The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`. This switch is set outside of the code sample.  \\n  \\n If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>. For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.  \\n  \\n Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message. A line terminator follows the second message.  \\n  \\n [!code-cpp[Classic Debug.Write Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic Debug.Write Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CS/source.cs#1)]\\n [!code-vb[Classic Debug.Write Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Write Example/VB/source.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Diagnostics.Conditional(\"DEBUG\")]\n\n      public static void Write (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: An object whose name is sent to the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref>.\n  overload: System.Diagnostics.Debug.Write*\n  exceptions: []\n  attributes:\n  - type: System.Diagnostics.ConditionalAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/Debug.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.Debug.Write(System.String)\n  commentId: M:System.Diagnostics.Debug.Write(System.String)\n  id: Write(System.String)\n  parent: System.Diagnostics.Debug\n  langs:\n  - csharp\n  name: Write(String)\n  nameWithType: Debug.Write(String)\n  fullName: Debug.Write(String)\n  type: Method\n  assemblies:\n  - System.Diagnostics.Debug\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Writes a message to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref> collection.\n  remarks: \"By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.  \\n  \\n This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.\"\n  example:\n  - \"The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`. This switch is set outside of the code sample.  \\n  \\n If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>. For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.  \\n  \\n Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message. A line terminator follows the second message.  \\n  \\n [!code-cpp[Classic Debug.Write Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic Debug.Write Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CS/source.cs#1)]\\n [!code-vb[Classic Debug.Write Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Write Example/VB/source.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Diagnostics.Conditional(\"DEBUG\")]\n\n      public static void Write (string message);\n    parameters:\n    - id: message\n      type: System.String\n      description: A message to write.\n  overload: System.Diagnostics.Debug.Write*\n  exceptions: []\n  attributes:\n  - type: System.Diagnostics.ConditionalAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/Debug.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)\n  commentId: M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)\n  id: WriteIf(System.Boolean,System.Object)\n  parent: System.Diagnostics.Debug\n  langs:\n  - csharp\n  name: WriteIf(Boolean, Object)\n  nameWithType: Debug.WriteIf(Boolean, Object)\n  fullName: Debug.WriteIf(Boolean, Object)\n  type: Method\n  assemblies:\n  - System.Diagnostics.Debug\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Writes the value of the object's <xref href=\"System.Object.ToString\"></xref> method to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref> collection if a condition is `true`.\n  remarks: \"By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.  \\n  \\n This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.\"\n  example:\n  - \"The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`. This switch is set outside of the code sample.  \\n  \\n If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first name of the value parameter to the <xref:System.Diagnostics.Debug.Listeners%2A>. For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.  \\n  \\n Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs a message on the same line as the first message. A line terminator follows the second message.  \\n  \\n [!code-cpp[Classic Debug.WriteIf1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteIf1 Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic Debug.WriteIf1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteIf1 Example/CS/source.cs#1)]\\n [!code-vb[Classic Debug.WriteIf1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteIf1 Example/VB/source.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Diagnostics.Conditional(\"DEBUG\")]\n\n      public static void WriteIf (bool condition, object value);\n    parameters:\n    - id: condition\n      type: System.Boolean\n      description: The conditional expression to evaluate. If the condition is `true`, the value is written to the trace listeners in the collection.\n    - id: value\n      type: System.Object\n      description: An object whose name is sent to the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref>.\n  overload: System.Diagnostics.Debug.WriteIf*\n  exceptions: []\n  attributes:\n  - type: System.Diagnostics.ConditionalAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/Debug.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)\n  commentId: M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)\n  id: WriteIf(System.Boolean,System.String)\n  parent: System.Diagnostics.Debug\n  langs:\n  - csharp\n  name: WriteIf(Boolean, String)\n  nameWithType: Debug.WriteIf(Boolean, String)\n  fullName: Debug.WriteIf(Boolean, String)\n  type: Method\n  assemblies:\n  - System.Diagnostics.Debug\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Writes a message to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref> collection if a condition is `true`.\n  remarks: \"By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.  \\n  \\n This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.\"\n  example:\n  - \"The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`. This switch is set outside of the code sample.  \\n  \\n If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>. For information about adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.  \\n  \\n Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message. A line terminator follows the second message.  \\n  \\n [!code-cpp[Classic Debug.WriteIf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteIf Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic Debug.WriteIf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteIf Example/CS/source.cs#1)]\\n [!code-vb[Classic Debug.WriteIf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteIf Example/VB/source.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Diagnostics.Conditional(\"DEBUG\")]\n\n      public static void WriteIf (bool condition, string message);\n    parameters:\n    - id: condition\n      type: System.Boolean\n      description: The conditional expression to evaluate. If the condition is `true`, the message is written to the trace listeners in the collection.\n    - id: message\n      type: System.String\n      description: A message to write.\n  overload: System.Diagnostics.Debug.WriteIf*\n  exceptions: []\n  attributes:\n  - type: System.Diagnostics.ConditionalAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/Debug.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)\n  commentId: M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)\n  id: WriteIf(System.Boolean,System.Object,System.String)\n  parent: System.Diagnostics.Debug\n  langs:\n  - csharp\n  name: WriteIf(Boolean, Object, String)\n  nameWithType: Debug.WriteIf(Boolean, Object, String)\n  fullName: Debug.WriteIf(Boolean, Object, String)\n  type: Method\n  assemblies:\n  - System.Diagnostics.Debug\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Writes a category name and the value of the object's <xref href=\"System.Object.ToString\"></xref> method to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref> collection if a condition is `true`.\n  remarks: \"By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.  \\n  \\n The `category` parameter can be used to group output messages.  \\n  \\n This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.\"\n  example:\n  - \"The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`. This switch is set outside of the code sample.  \\n  \\n If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Verbose`, the example outputs the name of the `myObject` and the `category` to the <xref:System.Diagnostics.Debug.Listeners%2A>. For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.  \\n  \\n Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Error` or higher, the example outputs the second error message on the same line as the first message. A line terminator follows the second message.  \\n  \\n [!code-cpp[Classic Debug.WriteIf3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteIf3 Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic Debug.WriteIf3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteIf3 Example/CS/source.cs#1)]\\n [!code-vb[Classic Debug.WriteIf3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteIf3 Example/VB/source.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Diagnostics.Conditional(\"DEBUG\")]\n\n      public static void WriteIf (bool condition, object value, string category);\n    parameters:\n    - id: condition\n      type: System.Boolean\n      description: The conditional expression to evaluate. If the condition is `true`, the category name and value are written to the trace listeners in the collection.\n    - id: value\n      type: System.Object\n      description: An object whose name is sent to the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref>.\n    - id: category\n      type: System.String\n      description: A category name used to organize the output.\n  overload: System.Diagnostics.Debug.WriteIf*\n  exceptions: []\n  attributes:\n  - type: System.Diagnostics.ConditionalAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/Debug.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)\n  commentId: M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)\n  id: WriteIf(System.Boolean,System.String,System.String)\n  parent: System.Diagnostics.Debug\n  langs:\n  - csharp\n  name: WriteIf(Boolean, String, String)\n  nameWithType: Debug.WriteIf(Boolean, String, String)\n  fullName: Debug.WriteIf(Boolean, String, String)\n  type: Method\n  assemblies:\n  - System.Diagnostics.Debug\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Writes a category name and message to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref> collection if a condition is `true`.\n  remarks: \"By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.  \\n  \\n The `category` parameter can be used to group output messages.  \\n  \\n This method calls the <xref:System.Diagnostics.TraceListener.Write%2A?displayProperty=fullName> method of the trace listener.\"\n  example:\n  - \"The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`. This switch is set outside of the code sample.  \\n  \\n If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Verbose`, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>. For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.  \\n  \\n Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Error` or higher, the example outputs the second error message on the same line as the first message. A line terminator follows the second message.  \\n  \\n [!code-cpp[Classic Debug.WriteIf2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteIf2 Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic Debug.WriteIf2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteIf2 Example/CS/source.cs#1)]\\n [!code-vb[Classic Debug.WriteIf2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteIf2 Example/VB/source.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Diagnostics.Conditional(\"DEBUG\")]\n\n      public static void WriteIf (bool condition, string message, string category);\n    parameters:\n    - id: condition\n      type: System.Boolean\n      description: The conditional expression to evaluate. If the condition is `true`, the category name and message are written to the trace listeners in the collection.\n    - id: message\n      type: System.String\n      description: A message to write.\n    - id: category\n      type: System.String\n      description: A category name used to organize the output.\n  overload: System.Diagnostics.Debug.WriteIf*\n  exceptions: []\n  attributes:\n  - type: System.Diagnostics.ConditionalAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/Debug.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.Debug.WriteLine(System.Object)\n  commentId: M:System.Diagnostics.Debug.WriteLine(System.Object)\n  id: WriteLine(System.Object)\n  parent: System.Diagnostics.Debug\n  langs:\n  - csharp\n  name: WriteLine(Object)\n  nameWithType: Debug.WriteLine(Object)\n  fullName: Debug.WriteLine(Object)\n  type: Method\n  assemblies:\n  - System.Diagnostics.Debug\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Writes the value of the object's <xref href=\"System.Object.ToString\"></xref> method to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref> collection.\n  remarks: \"By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.  \\n  \\n This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.\"\n  example:\n  - \"The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`. This switch is set outside of the code sample.  \\n  \\n If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>. For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.  \\n  \\n Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the name of the object on the same line as the first message. A line terminator follows the second message.  \\n  \\n [!code-cpp[Classic Debug.WriteLine1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLine1 Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic Debug.WriteLine1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLine1 Example/CS/source.cs#1)]\\n [!code-vb[Classic Debug.WriteLine1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLine1 Example/VB/source.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Diagnostics.Conditional(\"DEBUG\")]\n\n      public static void WriteLine (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: An object whose name is sent to the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref>.\n  overload: System.Diagnostics.Debug.WriteLine*\n  exceptions: []\n  attributes:\n  - type: System.Diagnostics.ConditionalAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/Debug.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.Debug.WriteLine(System.String)\n  commentId: M:System.Diagnostics.Debug.WriteLine(System.String)\n  id: WriteLine(System.String)\n  parent: System.Diagnostics.Debug\n  langs:\n  - csharp\n  name: WriteLine(String)\n  nameWithType: Debug.WriteLine(String)\n  fullName: Debug.WriteLine(String)\n  type: Method\n  assemblies:\n  - System.Diagnostics.Debug\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Writes a message followed by a line terminator to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref> collection.\n  remarks: \"By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.  \\n  \\n This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.\"\n  example:\n  - \"The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`. This switch is set outside of the code sample.  \\n  \\n If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>. For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.  \\n  \\n Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message. A line terminator follows the second message.  \\n  \\n [!code-cpp[Classic Debug.WriteLine Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLine Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic Debug.WriteLine Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLine Example/CS/source.cs#1)]\\n [!code-vb[Classic Debug.WriteLine Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLine Example/VB/source.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Diagnostics.Conditional(\"DEBUG\")]\n\n      public static void WriteLine (string message);\n    parameters:\n    - id: message\n      type: System.String\n      description: A message to write.\n  overload: System.Diagnostics.Debug.WriteLine*\n  exceptions: []\n  attributes:\n  - type: System.Diagnostics.ConditionalAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/Debug.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.Debug.WriteLine(System.Object,System.String)\n  commentId: M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)\n  id: WriteLine(System.Object,System.String)\n  parent: System.Diagnostics.Debug\n  langs:\n  - csharp\n  name: WriteLine(Object, String)\n  nameWithType: Debug.WriteLine(Object, String)\n  fullName: Debug.WriteLine(Object, String)\n  type: Method\n  assemblies:\n  - System.Diagnostics.Debug\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Writes a category name and the value of the object's <xref href=\"System.Object.ToString\"></xref> method to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref> collection.\n  remarks: \"By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.  \\n  \\n The `category` parameter can be used to group output messages.  \\n  \\n This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.\"\n  example:\n  - \"The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`. This switch is set outside of the code sample.  \\n  \\n If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>. For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.  \\n  \\n Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message. The second message is followed by a line terminator.  \\n  \\n [!code-cpp[Classic Debug.WriteLine3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLine3 Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic Debug.WriteLine3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLine3 Example/CS/source.cs#1)]\\n [!code-vb[Classic Debug.WriteLine3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLine3 Example/VB/source.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Diagnostics.Conditional(\"DEBUG\")]\n\n      public static void WriteLine (object value, string category);\n    parameters:\n    - id: value\n      type: System.Object\n      description: An object whose name is sent to the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref>.\n    - id: category\n      type: System.String\n      description: A category name used to organize the output.\n  overload: System.Diagnostics.Debug.WriteLine*\n  exceptions: []\n  attributes:\n  - type: System.Diagnostics.ConditionalAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/Debug.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.Debug.WriteLine(System.String,System.Object[])\n  commentId: M:System.Diagnostics.Debug.WriteLine(System.String,System.Object[])\n  id: WriteLine(System.String,System.Object[])\n  parent: System.Diagnostics.Debug\n  langs:\n  - csharp\n  name: WriteLine(String, Object[])\n  nameWithType: Debug.WriteLine(String, Object[])\n  fullName: Debug.WriteLine(String, Object[])\n  type: Method\n  assemblies:\n  - System.Diagnostics.Debug\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Writes a formatted message followed by a line terminator to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref> collection.\n  remarks: \"This method uses the  of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.  \\n  \\n The  keyword in the syntax for this method implies that the object array can be a single value. The exception to this is the <xref:System.String> object. Explicit overloads take precedence, so an `arg` value of a single string will default to the <xref:System.Diagnostics.Debug.WriteLine%28System.String%2CSystem.String%29?displayProperty=fullName> overload.  \\n  \\n By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.  \\n  \\n This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=fullName> method of the trace listener.\"\n  syntax:\n    content: >-\n      [System.Diagnostics.Conditional(\"DEBUG\")]\n\n      public static void WriteLine (string format, object[] args);\n    parameters:\n    - id: format\n      type: System.String\n      description: A composite format string that contains text intermixed with zero or more format items, which correspond to objects in the <code>args</code> array.\n    - id: args\n      type: System.Object[]\n      description: An object array that contains zero or more objects to format.\n  overload: System.Diagnostics.Debug.WriteLine*\n  exceptions: []\n  attributes:\n  - type: System.Diagnostics.ConditionalAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/Debug.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.Debug.WriteLine(System.String,System.String)\n  commentId: M:System.Diagnostics.Debug.WriteLine(System.String,System.String)\n  id: WriteLine(System.String,System.String)\n  parent: System.Diagnostics.Debug\n  langs:\n  - csharp\n  name: WriteLine(String, String)\n  nameWithType: Debug.WriteLine(String, String)\n  fullName: Debug.WriteLine(String, String)\n  type: Method\n  assemblies:\n  - System.Diagnostics.Debug\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Writes a category name and message to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref> collection.\n  remarks: \"By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.  \\n  \\n The `category` parameter can be used to group output messages.  \\n  \\n This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.\"\n  example:\n  - \"The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`. This switch is set outside of the code sample.  \\n  \\n If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>. For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.  \\n  \\n Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message and the `category` on the same line as the first message. A line terminator follows the second message.  \\n  \\n [!code-cpp[Classic Debug.WriteLine2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLine2 Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic Debug.WriteLine2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLine2 Example/CS/source.cs#1)]\\n [!code-vb[Classic Debug.WriteLine2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLine2 Example/VB/source.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Diagnostics.Conditional(\"DEBUG\")]\n\n      public static void WriteLine (string message, string category);\n    parameters:\n    - id: message\n      type: System.String\n      description: A message to write.\n    - id: category\n      type: System.String\n      description: A category name used to organize the output.\n  overload: System.Diagnostics.Debug.WriteLine*\n  exceptions: []\n  attributes:\n  - type: System.Diagnostics.ConditionalAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/Debug.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)\n  commentId: M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)\n  id: WriteLineIf(System.Boolean,System.Object,System.String)\n  parent: System.Diagnostics.Debug\n  langs:\n  - csharp\n  name: WriteLineIf(Boolean, Object, String)\n  nameWithType: Debug.WriteLineIf(Boolean, Object, String)\n  fullName: Debug.WriteLineIf(Boolean, Object, String)\n  type: Method\n  assemblies:\n  - System.Diagnostics.Debug\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Writes a category name and the value of the object's <xref href=\"System.Object.ToString\"></xref> method to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref> collection if a condition is `true`.\n  remarks: \"By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.  \\n  \\n The `category` parameter can be used to group output messages.  \\n  \\n This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.\"\n  example:\n  - \"The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`. This switch is set outside of the code sample.  \\n  \\n If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>. For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.  \\n  \\n Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message. A line terminator follows the second message.  \\n  \\n [!code-cpp[Classic Debug.WriteLineIf3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf3 Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic Debug.WriteLineIf3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf3 Example/CS/source.cs#1)]\\n [!code-vb[Classic Debug.WriteLineIf3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf3 Example/VB/source.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Diagnostics.Conditional(\"DEBUG\")]\n\n      public static void WriteLineIf (bool condition, object value, string category);\n    parameters:\n    - id: condition\n      type: System.Boolean\n      description: The conditional expression to evaluate. If the condition is `true`, the category name and value are written to the trace listeners in the collection.\n    - id: value\n      type: System.Object\n      description: An object whose name is sent to the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref>.\n    - id: category\n      type: System.String\n      description: A category name used to organize the output.\n  overload: System.Diagnostics.Debug.WriteLineIf*\n  exceptions: []\n  attributes:\n  - type: System.Diagnostics.ConditionalAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/Debug.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)\n  commentId: M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)\n  id: WriteLineIf(System.Boolean,System.Object)\n  parent: System.Diagnostics.Debug\n  langs:\n  - csharp\n  name: WriteLineIf(Boolean, Object)\n  nameWithType: Debug.WriteLineIf(Boolean, Object)\n  fullName: Debug.WriteLineIf(Boolean, Object)\n  type: Method\n  assemblies:\n  - System.Diagnostics.Debug\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Writes the value of the object's <xref href=\"System.Object.ToString\"></xref> method to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref> collection if a condition is `true`.\n  remarks: \"By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.  \\n  \\n This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.\"\n  example:\n  - \"The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`. This switch is set outside of the code sample.  \\n  \\n If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>. For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.  \\n  \\n Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the name of the object on the same line as the first message. A line terminator follows the second message.  \\n  \\n [!code-cpp[Classic Debug.WriteLineIf1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf1 Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic Debug.WriteLineIf1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf1 Example/CS/source.cs#1)]\\n [!code-vb[Classic Debug.WriteLineIf1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf1 Example/VB/source.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Diagnostics.Conditional(\"DEBUG\")]\n\n      public static void WriteLineIf (bool condition, object value);\n    parameters:\n    - id: condition\n      type: System.Boolean\n      description: The conditional expression to evaluate. If the condition is `true`, the value is written to the trace listeners in the collection.\n    - id: value\n      type: System.Object\n      description: An object whose name is sent to the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref>.\n  overload: System.Diagnostics.Debug.WriteLineIf*\n  exceptions: []\n  attributes:\n  - type: System.Diagnostics.ConditionalAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/Debug.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)\n  commentId: M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)\n  id: WriteLineIf(System.Boolean,System.String)\n  parent: System.Diagnostics.Debug\n  langs:\n  - csharp\n  name: WriteLineIf(Boolean, String)\n  nameWithType: Debug.WriteLineIf(Boolean, String)\n  fullName: Debug.WriteLineIf(Boolean, String)\n  type: Method\n  assemblies:\n  - System.Diagnostics.Debug\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Writes a message to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref> collection if a condition is `true`.\n  remarks: \"By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.  \\n  \\n This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=fullName> method of the trace listener.\"\n  example:\n  - \"The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`. This switch is set outside of the code sample.  \\n  \\n If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>. For information about adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.  \\n  \\n Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message. A line terminator follows the second message.  \\n  \\n [!code-cpp[Classic Debug.WriteLineIf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic Debug.WriteLineIf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf Example/CS/source.cs#1)]\\n [!code-vb[Classic Debug.WriteLineIf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf Example/VB/source.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Diagnostics.Conditional(\"DEBUG\")]\n\n      public static void WriteLineIf (bool condition, string message);\n    parameters:\n    - id: condition\n      type: System.Boolean\n      description: The conditional expression to evaluate. If the condition is `true`, the message is written to the trace listeners in the collection.\n    - id: message\n      type: System.String\n      description: A message to write.\n  overload: System.Diagnostics.Debug.WriteLineIf*\n  exceptions: []\n  attributes:\n  - type: System.Diagnostics.ConditionalAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/Debug.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)\n  commentId: M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)\n  id: WriteLineIf(System.Boolean,System.String,System.String)\n  parent: System.Diagnostics.Debug\n  langs:\n  - csharp\n  name: WriteLineIf(Boolean, String, String)\n  nameWithType: Debug.WriteLineIf(Boolean, String, String)\n  fullName: Debug.WriteLineIf(Boolean, String, String)\n  type: Method\n  assemblies:\n  - System.Diagnostics.Debug\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Writes a category name and message to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\"></xref> collection if a condition is `true`.\n  remarks: \"By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.  \\n  \\n The `category` parameter can be used to group output messages.  \\n  \\n This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=fullName> method of the trace listener.\"\n  example:\n  - \"The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`. This switch is set outside of the code sample.  \\n  \\n If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>. For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.  \\n  \\n Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message and the `category` on the same line as the first message. A line terminator follows the second message.  \\n  \\n [!code-cpp[Classic Debug.WriteLineIf2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf2 Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic Debug.WriteLineIf2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf2 Example/CS/source.cs#1)]\\n [!code-vb[Classic Debug.WriteLineIf2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf2 Example/VB/source.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Diagnostics.Conditional(\"DEBUG\")]\n\n      public static void WriteLineIf (bool condition, string message, string category);\n    parameters:\n    - id: condition\n      type: System.Boolean\n      description: '`true` to cause a message to be written; otherwise, `false`.'\n    - id: message\n      type: System.String\n      description: A message to write.\n    - id: category\n      type: System.String\n      description: A category name used to organize the output.\n  overload: System.Diagnostics.Debug.WriteLineIf*\n  exceptions: []\n  attributes:\n  - type: System.Diagnostics.ConditionalAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/Debug.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.FormatException\n  parent: System\n  isExternal: false\n  name: FormatException\n  nameWithType: FormatException\n  fullName: System.FormatException\n- uid: System.Diagnostics.Debug.Assert(System.Boolean)\n  parent: System.Diagnostics.Debug\n  isExternal: false\n  name: Assert(Boolean)\n  nameWithType: Debug.Assert(Boolean)\n  fullName: Debug.Assert(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Diagnostics.Debug.Assert(System.Boolean,System.String)\n  parent: System.Diagnostics.Debug\n  isExternal: false\n  name: Assert(Boolean, String)\n  nameWithType: Debug.Assert(Boolean, String)\n  fullName: Debug.Assert(Boolean, String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)\n  parent: System.Diagnostics.Debug\n  isExternal: false\n  name: Assert(Boolean, String, String)\n  nameWithType: Debug.Assert(Boolean, String, String)\n  fullName: Debug.Assert(Boolean, String, String)\n- uid: System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])\n  parent: System.Diagnostics.Debug\n  isExternal: false\n  name: Assert(Boolean, String, String, Object[])\n  nameWithType: Debug.Assert(Boolean, String, String, Object[])\n  fullName: Debug.Assert(Boolean, String, String, Object[])\n- uid: System.Object[]\n  parent: System\n  isExternal: false\n  name: Object[]\n  nameWithType: Object[]\n  fullName: System.Object[]\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Diagnostics.Debug.AutoFlush\n  parent: System.Diagnostics.Debug\n  isExternal: false\n  name: AutoFlush\n  nameWithType: Debug.AutoFlush\n  fullName: Debug.AutoFlush\n- uid: System.Diagnostics.Debug.Close\n  parent: System.Diagnostics.Debug\n  isExternal: false\n  name: Close()\n  nameWithType: Debug.Close()\n  fullName: Debug.Close()\n- uid: System.Diagnostics.Debug.Fail(System.String)\n  parent: System.Diagnostics.Debug\n  isExternal: false\n  name: Fail(String)\n  nameWithType: Debug.Fail(String)\n  fullName: Debug.Fail(String)\n- uid: System.Diagnostics.Debug.Fail(System.String,System.String)\n  parent: System.Diagnostics.Debug\n  isExternal: false\n  name: Fail(String, String)\n  nameWithType: Debug.Fail(String, String)\n  fullName: Debug.Fail(String, String)\n- uid: System.Diagnostics.Debug.Flush\n  parent: System.Diagnostics.Debug\n  isExternal: false\n  name: Flush()\n  nameWithType: Debug.Flush()\n  fullName: Debug.Flush()\n- uid: System.Diagnostics.Debug.Indent\n  parent: System.Diagnostics.Debug\n  isExternal: false\n  name: Indent()\n  nameWithType: Debug.Indent()\n  fullName: Debug.Indent()\n- uid: System.Diagnostics.Debug.IndentLevel\n  parent: System.Diagnostics.Debug\n  isExternal: false\n  name: IndentLevel\n  nameWithType: Debug.IndentLevel\n  fullName: Debug.IndentLevel\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Diagnostics.Debug.IndentSize\n  parent: System.Diagnostics.Debug\n  isExternal: false\n  name: IndentSize\n  nameWithType: Debug.IndentSize\n  fullName: Debug.IndentSize\n- uid: System.Diagnostics.Debug.Listeners\n  parent: System.Diagnostics.Debug\n  isExternal: false\n  name: Listeners\n  nameWithType: Debug.Listeners\n  fullName: Debug.Listeners\n- uid: System.Diagnostics.TraceListenerCollection\n  parent: System.Diagnostics\n  isExternal: false\n  name: TraceListenerCollection\n  nameWithType: TraceListenerCollection\n  fullName: System.Diagnostics.TraceListenerCollection\n- uid: System.Diagnostics.Debug.Print(System.String)\n  parent: System.Diagnostics.Debug\n  isExternal: false\n  name: Print(String)\n  nameWithType: Debug.Print(String)\n  fullName: Debug.Print(String)\n- uid: System.Diagnostics.Debug.Print(System.String,System.Object[])\n  parent: System.Diagnostics.Debug\n  isExternal: false\n  name: Print(String, Object[])\n  nameWithType: Debug.Print(String, Object[])\n  fullName: Debug.Print(String, Object[])\n- uid: System.Diagnostics.Debug.Unindent\n  parent: System.Diagnostics.Debug\n  isExternal: false\n  name: Unindent()\n  nameWithType: Debug.Unindent()\n  fullName: Debug.Unindent()\n- uid: System.Diagnostics.Debug.Write(System.String,System.String)\n  parent: System.Diagnostics.Debug\n  isExternal: false\n  name: Write(String, String)\n  nameWithType: Debug.Write(String, String)\n  fullName: Debug.Write(String, String)\n- uid: System.Diagnostics.Debug.Write(System.Object,System.String)\n  parent: System.Diagnostics.Debug\n  isExternal: false\n  name: Write(Object, String)\n  nameWithType: Debug.Write(Object, String)\n  fullName: Debug.Write(Object, String)\n- uid: System.Diagnostics.Debug.Write(System.Object)\n  parent: System.Diagnostics.Debug\n  isExternal: false\n  name: Write(Object)\n  nameWithType: Debug.Write(Object)\n  fullName: Debug.Write(Object)\n- uid: System.Diagnostics.Debug.Write(System.String)\n  parent: System.Diagnostics.Debug\n  isExternal: false\n  name: Write(String)\n  nameWithType: Debug.Write(String)\n  fullName: Debug.Write(String)\n- uid: System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)\n  parent: System.Diagnostics.Debug\n  isExternal: false\n  name: WriteIf(Boolean, Object)\n  nameWithType: Debug.WriteIf(Boolean, Object)\n  fullName: Debug.WriteIf(Boolean, Object)\n- uid: System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)\n  parent: System.Diagnostics.Debug\n  isExternal: false\n  name: WriteIf(Boolean, String)\n  nameWithType: Debug.WriteIf(Boolean, String)\n  fullName: Debug.WriteIf(Boolean, String)\n- uid: System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)\n  parent: System.Diagnostics.Debug\n  isExternal: false\n  name: WriteIf(Boolean, Object, String)\n  nameWithType: Debug.WriteIf(Boolean, Object, String)\n  fullName: Debug.WriteIf(Boolean, Object, String)\n- uid: System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)\n  parent: System.Diagnostics.Debug\n  isExternal: false\n  name: WriteIf(Boolean, String, String)\n  nameWithType: Debug.WriteIf(Boolean, String, String)\n  fullName: Debug.WriteIf(Boolean, String, String)\n- uid: System.Diagnostics.Debug.WriteLine(System.Object)\n  parent: System.Diagnostics.Debug\n  isExternal: false\n  name: WriteLine(Object)\n  nameWithType: Debug.WriteLine(Object)\n  fullName: Debug.WriteLine(Object)\n- uid: System.Diagnostics.Debug.WriteLine(System.String)\n  parent: System.Diagnostics.Debug\n  isExternal: false\n  name: WriteLine(String)\n  nameWithType: Debug.WriteLine(String)\n  fullName: Debug.WriteLine(String)\n- uid: System.Diagnostics.Debug.WriteLine(System.Object,System.String)\n  parent: System.Diagnostics.Debug\n  isExternal: false\n  name: WriteLine(Object, String)\n  nameWithType: Debug.WriteLine(Object, String)\n  fullName: Debug.WriteLine(Object, String)\n- uid: System.Diagnostics.Debug.WriteLine(System.String,System.Object[])\n  parent: System.Diagnostics.Debug\n  isExternal: false\n  name: WriteLine(String, Object[])\n  nameWithType: Debug.WriteLine(String, Object[])\n  fullName: Debug.WriteLine(String, Object[])\n- uid: System.Diagnostics.Debug.WriteLine(System.String,System.String)\n  parent: System.Diagnostics.Debug\n  isExternal: false\n  name: WriteLine(String, String)\n  nameWithType: Debug.WriteLine(String, String)\n  fullName: Debug.WriteLine(String, String)\n- uid: System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)\n  parent: System.Diagnostics.Debug\n  isExternal: false\n  name: WriteLineIf(Boolean, Object, String)\n  nameWithType: Debug.WriteLineIf(Boolean, Object, String)\n  fullName: Debug.WriteLineIf(Boolean, Object, String)\n- uid: System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)\n  parent: System.Diagnostics.Debug\n  isExternal: false\n  name: WriteLineIf(Boolean, Object)\n  nameWithType: Debug.WriteLineIf(Boolean, Object)\n  fullName: Debug.WriteLineIf(Boolean, Object)\n- uid: System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)\n  parent: System.Diagnostics.Debug\n  isExternal: false\n  name: WriteLineIf(Boolean, String)\n  nameWithType: Debug.WriteLineIf(Boolean, String)\n  fullName: Debug.WriteLineIf(Boolean, String)\n- uid: System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)\n  parent: System.Diagnostics.Debug\n  isExternal: false\n  name: WriteLineIf(Boolean, String, String)\n  nameWithType: Debug.WriteLineIf(Boolean, String, String)\n  fullName: Debug.WriteLineIf(Boolean, String, String)\n- uid: System.Diagnostics.Debug.Assert*\n  parent: System.Diagnostics.Debug\n  isExternal: false\n  name: Assert\n  nameWithType: Debug.Assert\n  fullName: Debug.Assert\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/Debug.xml\n- uid: System.Diagnostics.Debug.AutoFlush*\n  parent: System.Diagnostics.Debug\n  isExternal: false\n  name: AutoFlush\n  nameWithType: Debug.AutoFlush\n  fullName: Debug.AutoFlush\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/Debug.xml\n- uid: System.Diagnostics.Debug.Close*\n  parent: System.Diagnostics.Debug\n  isExternal: false\n  name: Close\n  nameWithType: Debug.Close\n  fullName: Debug.Close\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/Debug.xml\n- uid: System.Diagnostics.Debug.Fail*\n  parent: System.Diagnostics.Debug\n  isExternal: false\n  name: Fail\n  nameWithType: Debug.Fail\n  fullName: Debug.Fail\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/Debug.xml\n- uid: System.Diagnostics.Debug.Flush*\n  parent: System.Diagnostics.Debug\n  isExternal: false\n  name: Flush\n  nameWithType: Debug.Flush\n  fullName: Debug.Flush\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/Debug.xml\n- uid: System.Diagnostics.Debug.Indent*\n  parent: System.Diagnostics.Debug\n  isExternal: false\n  name: Indent\n  nameWithType: Debug.Indent\n  fullName: Debug.Indent\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/Debug.xml\n- uid: System.Diagnostics.Debug.IndentLevel*\n  parent: System.Diagnostics.Debug\n  isExternal: false\n  name: IndentLevel\n  nameWithType: Debug.IndentLevel\n  fullName: Debug.IndentLevel\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/Debug.xml\n- uid: System.Diagnostics.Debug.IndentSize*\n  parent: System.Diagnostics.Debug\n  isExternal: false\n  name: IndentSize\n  nameWithType: Debug.IndentSize\n  fullName: Debug.IndentSize\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/Debug.xml\n- uid: System.Diagnostics.Debug.Listeners*\n  parent: System.Diagnostics.Debug\n  isExternal: false\n  name: Listeners\n  nameWithType: Debug.Listeners\n  fullName: Debug.Listeners\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/Debug.xml\n- uid: System.Diagnostics.Debug.Print*\n  parent: System.Diagnostics.Debug\n  isExternal: false\n  name: Print\n  nameWithType: Debug.Print\n  fullName: Debug.Print\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/Debug.xml\n- uid: System.Diagnostics.Debug.Unindent*\n  parent: System.Diagnostics.Debug\n  isExternal: false\n  name: Unindent\n  nameWithType: Debug.Unindent\n  fullName: Debug.Unindent\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/Debug.xml\n- uid: System.Diagnostics.Debug.Write*\n  parent: System.Diagnostics.Debug\n  isExternal: false\n  name: Write\n  nameWithType: Debug.Write\n  fullName: Debug.Write\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/Debug.xml\n- uid: System.Diagnostics.Debug.WriteIf*\n  parent: System.Diagnostics.Debug\n  isExternal: false\n  name: WriteIf\n  nameWithType: Debug.WriteIf\n  fullName: Debug.WriteIf\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/Debug.xml\n- uid: System.Diagnostics.Debug.WriteLine*\n  parent: System.Diagnostics.Debug\n  isExternal: false\n  name: WriteLine\n  nameWithType: Debug.WriteLine\n  fullName: Debug.WriteLine\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/Debug.xml\n- uid: System.Diagnostics.Debug.WriteLineIf*\n  parent: System.Diagnostics.Debug\n  isExternal: false\n  name: WriteLineIf\n  nameWithType: Debug.WriteLineIf\n  fullName: Debug.WriteLineIf\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/Debug.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}