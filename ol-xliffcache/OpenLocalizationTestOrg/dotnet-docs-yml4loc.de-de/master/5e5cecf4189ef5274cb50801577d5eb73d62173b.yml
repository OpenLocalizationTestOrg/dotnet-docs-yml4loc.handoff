### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.FontNamesConverter
  commentId: T:System.Web.UI.WebControls.FontNamesConverter
  id: FontNamesConverter
  children:
  - System.Web.UI.WebControls.FontNamesConverter.#ctor
  - System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Web.UI.WebControls.FontNamesConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.Web.UI.WebControls.FontNamesConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  langs:
  - csharp
  name: FontNamesConverter
  nameWithType: FontNamesConverter
  fullName: System.Web.UI.WebControls.FontNamesConverter
  type: Class
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Converts between a string containing a list of font names and an array of strings representing the individual names.
  remarks: "Use the <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom%2A> method of this class to convert a single string containing a list of font names to an array of strings containing the individual names. Each font name in the string must be separated by a comma. For example, the string \"arial, times new roman, verdana\", converts to an array that contains the strings \"arial\", \"times new roman\", and \"verdana\". Notice the commas are removed along with any white space at the beginning or end of the font name. White space in the middle of a font name is not removed.  \n  \n The <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertTo%2A> method performs the reverse operation. It converts an array of strings containing the individual font names to a single string containing a list of the names. For example, an array that contains the strings \"arial\", \"times new roman\", and \"verdana\" converts to the string \"arial,times new roman,verdana\". Notice that commas are automatically inserted between the font names without any white space.  \n  \n Call the <xref:System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom%2A> method to verify that the conversion can be made before calling the <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom%2A> method."
  example:
  - "The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.FontNamesConverter> class to convert a string with a list of font names to an array of strings containing the individual names. The array of strings is then converted back to a single string and displayed.  \n  \n <!-- TODO: review snippet reference [!code-csharp[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/CS/sourcecs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/VB/sourcevb.aspx#1)]  -->"
  syntax:
    content: 'public class FontNamesConverter : System.ComponentModel.TypeConverter'
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  implements: []
  inheritedMembers:
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/FontNamesConverter.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
- uid: System.Web.UI.WebControls.FontNamesConverter.#ctor
  commentId: M:System.Web.UI.WebControls.FontNamesConverter.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.FontNamesConverter
  langs:
  - csharp
  name: FontNamesConverter()
  nameWithType: FontNamesConverter.FontNamesConverter()
  fullName: FontNamesConverter.FontNamesConverter()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Initializes a new instance of the <xref href="System.Web.UI.WebControls.FontNamesConverter"></xref> class.
  remarks: You should never access a type converter directly. Instead, call the appropriate converter by using a <xref:System.ComponentModel.TypeDescriptor> object. For more information, see the examples in <xref:System.ComponentModel.TypeConverter>.
  syntax:
    content: public FontNamesConverter ();
    parameters: []
  overload: System.Web.UI.WebControls.FontNamesConverter.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/FontNamesConverter.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
- uid: System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  commentId: M:System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Web.UI.WebControls.FontNamesConverter
  langs:
  - csharp
  name: CanConvertFrom(ITypeDescriptorContext, Type)
  nameWithType: FontNamesConverter.CanConvertFrom(ITypeDescriptorContext, Type)
  fullName: FontNamesConverter.CanConvertFrom(ITypeDescriptorContext, Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Determines whether this converter can convert an object of the specified data type to an array of strings containing individual font names.
  remarks: "Use the <xref:System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom%2A> method to determine whether the specified data type can be converted to an array of strings containing individual font names.  \n  \n> [!NOTE]\n>  This converter can convert only from a `string` data type. The `sourceType` parameter must be of type <xref:System.String>. Otherwise, this method returns `false` to indicate that the specified data type cannot be converted.  \n  \n You can optionally pass in `null` for the `context` parameter."
  example:
  - "The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom%2A> method. The example determines whether the specified data type can be converted to an array of strings that contains the individual font names before performing the conversion.  \n  \n <!-- TODO: review snippet reference [!code-csharp[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/CS/sourcecs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/VB/sourcevb.aspx#1)]  -->"
  syntax:
    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: A <xref href="System.ComponentModel.ITypeDescriptorContext"></xref> object that provides information about the context of a type converter. You can optionally pass in `null` for this parameter.
    - id: sourceType
      type: System.Type
      description: A <xref href="System.Type"></xref> that represents the data type to convert from.
    return:
      type: System.Boolean
      description: '`true` if the type can be converted; otherwise, `false`.'
  overload: System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/FontNamesConverter.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
- uid: System.Web.UI.WebControls.FontNamesConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  commentId: M:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Web.UI.WebControls.FontNamesConverter
  langs:
  - csharp
  name: ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)
  nameWithType: FontNamesConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)
  fullName: FontNamesConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Converts a string that represents a list of font names into an array of strings containing individual font names.
  remarks: "Use the <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom%2A> method to convert a string containing a list of font names to an array of strings containing the individual names. Each font name in the string must be separated by a comma. For example, the string \"arial, times new roman, verdana\", converts to an array that contains the strings \"arial\", \"times new roman\", and \"verdana\". Notice that the commas are removed along with any white space at the beginning or end of the font name. White space in the middle of a font name is not removed.  \n  \n> [!NOTE]\n>  The `context` and `culture` parameters are not used in this version of the method; they are reserved for future versions of the method. You can optionally pass in `null` for these parameters."
  example:
  - "The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom%2A> method to convert a string with a list of font names to an array of strings containing the individual names.  \n  \n <!-- TODO: review snippet reference [!code-csharp[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/CS/sourcecs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/VB/sourcevb.aspx#1)]  -->"
  syntax:
    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: A <xref href="System.ComponentModel.ITypeDescriptorContext"></xref> object that provides information about the context of a type converter. This parameter is not used in this method. It is reserved for future versions of this method. You can optionally pass in `null` for this parameter.
    - id: culture
      type: System.Globalization.CultureInfo
      description: A <xref href="System.Globalization.CultureInfo"></xref> object that represents information about a culture such as language, calendar system, and so on. This parameter is not used in this method. It is reserved for future versions of this method. You can optionally pass in `null` for this parameter.
    - id: value
      type: System.Object
      description: A <xref href="System.Object"></xref> instance that represents the source string to convert from.
    return:
      type: System.Object
      description: A <xref href="System.Object"></xref> instance that represents the array of strings containing the individual font names.
  overload: System.Web.UI.WebControls.FontNamesConverter.ConvertFrom*
  exceptions:
  - type: System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
    commentId: M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
    description: <code>value</code> is not of type <xref href="System.String"></xref>.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/FontNamesConverter.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
- uid: System.Web.UI.WebControls.FontNamesConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  commentId: M:System.Web.UI.WebControls.FontNamesConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Web.UI.WebControls.FontNamesConverter
  langs:
  - csharp
  name: ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)
  nameWithType: FontNamesConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)
  fullName: FontNamesConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Creates a string that represents a list of font names from an array of strings containing individual font names.
  remarks: "Use the <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertTo%2A> method to convert an array of strings containing the individual font names to a single string containing a list of the names. For example, an array that contains the strings \"arial\", \"times new roman\", and \"verdana\" converts to the string \"arial,times new roman,verdana\". Notice that commas are automatically inserted between the font names without any white space.  \n  \n> [!NOTE]\n>  This converter can convert only to a `string` data type. The `destinationType` parameter must be of type <xref:System.String>.  \n  \n> [!NOTE]\n>  The `context` and `culture` parameters are not used in this version of the method; they are reserved for future versions of the method. You can optionally pass in `null` for these parameters."
  example:
  - "The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertTo%2A> method to convert an array of strings containing the individual names to a single string that contains a list of font names.  \n  \n <!-- TODO: review snippet reference [!code-csharp[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/CS/sourcecs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/VB/sourcevb.aspx#1)]  -->"
  syntax:
    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: A <xref href="System.ComponentModel.ITypeDescriptorContext"></xref> object that provides information about the context of a type converter. This parameter is not used in this method. It is reserved for future versions of this method. You can optionally pass in `null` for this parameter.
    - id: culture
      type: System.Globalization.CultureInfo
      description: A <xref href="System.Globalization.CultureInfo"></xref> object that represents information about a culture such as language, calendar system, and so on. This parameter is not used in this method. It is reserved for future versions of this method. You can optionally pass in `null` for this parameter.
    - id: value
      type: System.Object
      description: An object that represents the source array of strings to convert from.
    - id: destinationType
      type: System.Type
      description: A <xref href="System.Object"></xref> instance object that represents the data type to convert to. This parameter must be of type <xref href="System.String"></xref>.
    return:
      type: System.Object
      description: A <xref href="System.Object"></xref> instance that represents a string containing a list of font names.
  overload: System.Web.UI.WebControls.FontNamesConverter.ConvertTo*
  exceptions:
  - type: System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
    commentId: M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
    description: <code>destinationType</code> is not of type <xref href="System.String"></xref>.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/FontNamesConverter.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
references:
- uid: System.ComponentModel.TypeConverter
  parent: System.ComponentModel
  isExternal: false
  name: TypeConverter
  nameWithType: TypeConverter
  fullName: System.ComponentModel.TypeConverter
- uid: System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetConvertFromException(Object)
  nameWithType: TypeConverter.GetConvertFromException(Object)
  fullName: TypeConverter.GetConvertFromException(Object)
- uid: System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetConvertToException(Object, Type)
  nameWithType: TypeConverter.GetConvertToException(Object, Type)
  fullName: TypeConverter.GetConvertToException(Object, Type)
- uid: System.Web.UI.WebControls.FontNamesConverter.#ctor
  parent: System.Web.UI.WebControls.FontNamesConverter
  isExternal: false
  name: FontNamesConverter()
  nameWithType: FontNamesConverter.FontNamesConverter()
  fullName: FontNamesConverter.FontNamesConverter()
- uid: System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Web.UI.WebControls.FontNamesConverter
  isExternal: false
  name: CanConvertFrom(ITypeDescriptorContext, Type)
  nameWithType: FontNamesConverter.CanConvertFrom(ITypeDescriptorContext, Type)
  fullName: FontNamesConverter.CanConvertFrom(ITypeDescriptorContext, Type)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.WebControls.FontNamesConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Web.UI.WebControls.FontNamesConverter
  isExternal: false
  name: ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)
  nameWithType: FontNamesConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)
  fullName: FontNamesConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: false
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Web.UI.WebControls.FontNamesConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Web.UI.WebControls.FontNamesConverter
  isExternal: false
  name: ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)
  nameWithType: FontNamesConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)
  fullName: FontNamesConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)
- uid: System.Web.UI.WebControls.FontNamesConverter.#ctor*
  parent: System.Web.UI.WebControls.FontNamesConverter
  isExternal: false
  name: FontNamesConverter
  nameWithType: FontNamesConverter.FontNamesConverter
  fullName: FontNamesConverter.FontNamesConverter
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/FontNamesConverter.xml
- uid: System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom*
  parent: System.Web.UI.WebControls.FontNamesConverter
  isExternal: false
  name: CanConvertFrom
  nameWithType: FontNamesConverter.CanConvertFrom
  fullName: FontNamesConverter.CanConvertFrom
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/FontNamesConverter.xml
- uid: System.Web.UI.WebControls.FontNamesConverter.ConvertFrom*
  parent: System.Web.UI.WebControls.FontNamesConverter
  isExternal: false
  name: ConvertFrom
  nameWithType: FontNamesConverter.ConvertFrom
  fullName: FontNamesConverter.ConvertFrom
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/FontNamesConverter.xml
- uid: System.Web.UI.WebControls.FontNamesConverter.ConvertTo*
  parent: System.Web.UI.WebControls.FontNamesConverter
  isExternal: false
  name: ConvertTo
  nameWithType: FontNamesConverter.ConvertTo
  fullName: FontNamesConverter.ConvertTo
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/FontNamesConverter.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: CanConvertFrom(Type)
  nameWithType: TypeConverter.CanConvertFrom(Type)
  fullName: TypeConverter.CanConvertFrom(Type)
- uid: System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: CanConvertTo(Type)
  nameWithType: TypeConverter.CanConvertTo(Type)
  fullName: TypeConverter.CanConvertTo(Type)
- uid: System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: CanConvertTo(ITypeDescriptorContext, Type)
  nameWithType: TypeConverter.CanConvertTo(ITypeDescriptorContext, Type)
  fullName: TypeConverter.CanConvertTo(ITypeDescriptorContext, Type)
- uid: System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertFrom(Object)
  nameWithType: TypeConverter.ConvertFrom(Object)
  fullName: TypeConverter.ConvertFrom(Object)
- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertFromInvariantString(String)
  nameWithType: TypeConverter.ConvertFromInvariantString(String)
  fullName: TypeConverter.ConvertFromInvariantString(String)
- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertFromInvariantString(ITypeDescriptorContext, String)
  nameWithType: TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext, String)
  fullName: TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext, String)
- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertFromString(ITypeDescriptorContext, CultureInfo, String)
  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext, CultureInfo, String)
  fullName: TypeConverter.ConvertFromString(ITypeDescriptorContext, CultureInfo, String)
- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertFromString(String)
  nameWithType: TypeConverter.ConvertFromString(String)
  fullName: TypeConverter.ConvertFromString(String)
- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertFromString(ITypeDescriptorContext, String)
  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext, String)
  fullName: TypeConverter.ConvertFromString(ITypeDescriptorContext, String)
- uid: System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertTo(Object, Type)
  nameWithType: TypeConverter.ConvertTo(Object, Type)
  fullName: TypeConverter.ConvertTo(Object, Type)
- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertToInvariantString(Object)
  nameWithType: TypeConverter.ConvertToInvariantString(Object)
  fullName: TypeConverter.ConvertToInvariantString(Object)
- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertToInvariantString(ITypeDescriptorContext, Object)
  nameWithType: TypeConverter.ConvertToInvariantString(ITypeDescriptorContext, Object)
  fullName: TypeConverter.ConvertToInvariantString(ITypeDescriptorContext, Object)
- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertToString(ITypeDescriptorContext, CultureInfo, Object)
  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext, CultureInfo, Object)
  fullName: TypeConverter.ConvertToString(ITypeDescriptorContext, CultureInfo, Object)
- uid: System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertToString(Object)
  nameWithType: TypeConverter.ConvertToString(Object)
  fullName: TypeConverter.ConvertToString(Object)
- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertToString(ITypeDescriptorContext, Object)
  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext, Object)
  fullName: TypeConverter.ConvertToString(ITypeDescriptorContext, Object)
- uid: System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: CreateInstance(ITypeDescriptorContext, IDictionary)
  nameWithType: TypeConverter.CreateInstance(ITypeDescriptorContext, IDictionary)
  fullName: TypeConverter.CreateInstance(ITypeDescriptorContext, IDictionary)
- uid: System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: CreateInstance(IDictionary)
  nameWithType: TypeConverter.CreateInstance(IDictionary)
  fullName: TypeConverter.CreateInstance(IDictionary)
- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetCreateInstanceSupported()
  nameWithType: TypeConverter.GetCreateInstanceSupported()
  fullName: TypeConverter.GetCreateInstanceSupported()
- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetCreateInstanceSupported(ITypeDescriptorContext)
  nameWithType: TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext)
  fullName: TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext)
- uid: System.ComponentModel.TypeConverter.GetProperties(System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetProperties(Object)
  nameWithType: TypeConverter.GetProperties(Object)
  fullName: TypeConverter.GetProperties(Object)
- uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetProperties(ITypeDescriptorContext, Object)
  nameWithType: TypeConverter.GetProperties(ITypeDescriptorContext, Object)
  fullName: TypeConverter.GetProperties(ITypeDescriptorContext, Object)
- uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetProperties(ITypeDescriptorContext, Object, Attribute[])
  nameWithType: TypeConverter.GetProperties(ITypeDescriptorContext, Object, Attribute[])
  fullName: TypeConverter.GetProperties(ITypeDescriptorContext, Object, Attribute[])
- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetPropertiesSupported(ITypeDescriptorContext)
  nameWithType: TypeConverter.GetPropertiesSupported(ITypeDescriptorContext)
  fullName: TypeConverter.GetPropertiesSupported(ITypeDescriptorContext)
- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetPropertiesSupported()
  nameWithType: TypeConverter.GetPropertiesSupported()
  fullName: TypeConverter.GetPropertiesSupported()
- uid: System.ComponentModel.TypeConverter.GetStandardValues
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetStandardValues()
  nameWithType: TypeConverter.GetStandardValues()
  fullName: TypeConverter.GetStandardValues()
- uid: System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetStandardValues(ITypeDescriptorContext)
  nameWithType: TypeConverter.GetStandardValues(ITypeDescriptorContext)
  fullName: TypeConverter.GetStandardValues(ITypeDescriptorContext)
- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetStandardValuesExclusive()
  nameWithType: TypeConverter.GetStandardValuesExclusive()
  fullName: TypeConverter.GetStandardValuesExclusive()
- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetStandardValuesExclusive(ITypeDescriptorContext)
  nameWithType: TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  fullName: TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetStandardValuesSupported()
  nameWithType: TypeConverter.GetStandardValuesSupported()
  fullName: TypeConverter.GetStandardValuesSupported()
- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetStandardValuesSupported(ITypeDescriptorContext)
  nameWithType: TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  fullName: TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext)
- uid: System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: IsValid(ITypeDescriptorContext, Object)
  nameWithType: TypeConverter.IsValid(ITypeDescriptorContext, Object)
  fullName: TypeConverter.IsValid(ITypeDescriptorContext, Object)
- uid: System.ComponentModel.TypeConverter.IsValid(System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: IsValid(Object)
  nameWithType: TypeConverter.IsValid(Object)
  fullName: TypeConverter.IsValid(Object)
- uid: System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: SortProperties(PropertyDescriptorCollection, String[])
  nameWithType: TypeConverter.SortProperties(PropertyDescriptorCollection, String[])
  fullName: TypeConverter.SortProperties(PropertyDescriptorCollection, String[])
