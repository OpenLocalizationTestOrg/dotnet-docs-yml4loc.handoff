{"nodes":[{"content":"Provides methods for <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref> derived classes to access the functionality of the workflow runtime.","nodes":[{"pos":[0,153],"content":"Provides methods for <ph id=\"ph1\">&lt;xref href=\"System.Activities.Hosting.WorkflowInstance\"&gt;&lt;/xref&gt;</ph> derived classes to access the functionality of the workflow runtime.","source":"Provides methods for <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref> derived classes to access the functionality of the workflow runtime."}],"pos":[3788,3942],"yaml":true},{"content":"Aborts the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref>.","nodes":[{"pos":[0,75],"content":"Aborts the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Hosting.WorkflowInstance\"&gt;&lt;/xref&gt;</ph>.","source":"Aborts the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref>."}],"pos":[5176,5252],"yaml":true},{"content":"Once <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort%2A> is called, most <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl> APIs except <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort%2A> throw an <xref:System.InvalidOperationException>.","nodes":[{"pos":[0,322],"content":"Once <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort%2A> is called, most <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl> APIs except <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort%2A> throw an <xref:System.InvalidOperationException>.","nodes":[{"content":"Once <ph id=\"ph1\">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort%2A&gt;</ph> is called, most <ph id=\"ph2\">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl&gt;</ph> APIs except <ph id=\"ph3\">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort%2A&gt;</ph> throw an <ph id=\"ph4\">&lt;xref:System.InvalidOperationException&gt;</ph>.","pos":[0,322],"source":"Once <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort%2A> is called, most <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl> APIs except <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort%2A> throw an <xref:System.InvalidOperationException>."}]}],"pos":[5263,5586],"yaml":true,"extradata":"MT"},{"content":"Aborts the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref> using the specified exception.","nodes":[{"pos":[0,105],"content":"Aborts the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Hosting.WorkflowInstance\"&gt;&lt;/xref&gt;</ph> using the specified exception.","source":"Aborts the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref> using the specified exception."}],"pos":[6916,7022],"yaml":true},{"content":"Once <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort%2A> is called, most <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl> APIs except <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort%2A> throw an <xref:System.InvalidOperationException>.","nodes":[{"pos":[0,322],"content":"Once <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort%2A> is called, most <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl> APIs except <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort%2A> throw an <xref:System.InvalidOperationException>.","nodes":[{"content":"Once <ph id=\"ph1\">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort%2A&gt;</ph> is called, most <ph id=\"ph2\">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl&gt;</ph> APIs except <ph id=\"ph3\">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort%2A&gt;</ph> throw an <ph id=\"ph4\">&lt;xref:System.InvalidOperationException&gt;</ph>.","pos":[0,322],"source":"Once <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort%2A> is called, most <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl> APIs except <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort%2A> throw an <xref:System.InvalidOperationException>."}]}],"pos":[7033,7356],"yaml":true,"extradata":"MT"},{"content":"The reason for aborting the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref>.","nodes":[{"pos":[0,92],"content":"The reason for aborting the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Hosting.WorkflowInstance\"&gt;&lt;/xref&gt;</ph>.","source":"The reason for aborting the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref>."}],"pos":[7498,7591],"yaml":true},{"content":"Called by the workflow runtime to begin sending pending tracking records to tracking participants asynchronously.","nodes":[{"pos":[0,113],"content":"Called by the workflow runtime to begin sending pending tracking records to tracking participants asynchronously.","nodes":[{"content":"Called by the workflow runtime to begin sending pending tracking records to tracking participants asynchronously.","pos":[0,113]}]}],"pos":[9145,9259],"yaml":true},{"content":"The time period after which to abort the attempt.","nodes":[{"pos":[0,49],"content":"The time period after which to abort the attempt.","nodes":[{"content":"The time period after which to abort the attempt.","pos":[0,49]}]}],"pos":[9467,9517],"yaml":true},{"content":"The method to be called when the track operation has completed.","nodes":[{"pos":[0,63],"content":"The method to be called when the track operation has completed.","nodes":[{"content":"The method to be called when the track operation has completed.","pos":[0,63]}]}],"pos":[9588,9652],"yaml":true},{"content":"The information about the asynchronous operation.","nodes":[{"pos":[0,49],"content":"The information about the asynchronous operation.","nodes":[{"content":"The information about the asynchronous operation.","pos":[0,49]}]}],"pos":[9713,9763],"yaml":true},{"content":"The status of the current track operation.","nodes":[{"pos":[0,42],"content":"The status of the current track operation.","nodes":[{"content":"The status of the current track operation.","pos":[0,42]}]}],"pos":[9826,9869],"yaml":true},{"content":"Called by the workflow runtime to end the track operation.","nodes":[{"pos":[0,58],"content":"Called by the workflow runtime to end the track operation.","nodes":[{"content":"Called by the workflow runtime to end the track operation.","pos":[0,58]}]}],"pos":[11281,11340],"yaml":true},{"content":"The status of the asynchronous track operation.","nodes":[{"pos":[0,47],"content":"The status of the asynchronous track operation.","nodes":[{"content":"The status of the asynchronous track operation.","pos":[0,47]}]}],"pos":[11506,11554],"yaml":true},{"content":"Returns a value that indicates whether the current <xref href=\"System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\"></xref> is equal to the specified object.","nodes":[{"pos":[0,172],"content":"Returns a value that indicates whether the current <ph id=\"ph1\">&lt;xref href=\"System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\"&gt;&lt;/xref&gt;</ph> is equal to the specified object.","source":"Returns a value that indicates whether the current <xref href=\"System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\"></xref> is equal to the specified object."}],"pos":[12826,12999],"yaml":true},{"content":"The object to compare.","nodes":[{"pos":[0,22],"content":"The object to compare.","nodes":[{"content":"The object to compare.","pos":[0,22]}]}],"pos":[13139,13162],"yaml":true},{"content":"`true` of the object is equal to the current <xref href=\"System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,153],"content":"<ph id=\"ph1\">`true`</ph> of the object is equal to the current <ph id=\"ph2\">&lt;xref href=\"System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` of the object is equal to the current <xref href=\"System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\"></xref>; otherwise, `false`."}],"pos":[13220,13376],"yaml":true},{"content":"Called by the workflow runtime to send pending tracking records to tracking participants.","nodes":[{"pos":[0,89],"content":"Called by the workflow runtime to send pending tracking records to tracking participants.","nodes":[{"content":"Called by the workflow runtime to send pending tracking records to tracking participants.","pos":[0,89]}]}],"pos":[14727,14817],"yaml":true},{"content":"The time period after which to abort the attempt.","nodes":[{"pos":[0,49],"content":"The time period after which to abort the attempt.","nodes":[{"content":"The time period after which to abort the attempt.","pos":[0,49]}]}],"pos":[14974,15024],"yaml":true},{"content":"Returns the exception that causes the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref> to abort.","nodes":[{"pos":[0,111],"content":"Returns the exception that causes the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Hosting.WorkflowInstance\"&gt;&lt;/xref&gt;</ph> to abort.","source":"Returns the exception that causes the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref> to abort."}],"pos":[16278,16390],"yaml":true},{"content":"The exception that caused the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref> to abort, or `null` if the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref> did not abort.","nodes":[{"pos":[0,199],"content":"The exception that caused the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Hosting.WorkflowInstance\"&gt;&lt;/xref&gt;</ph> to abort, or <ph id=\"ph2\">`null`</ph> if the <ph id=\"ph3\">&lt;xref href=\"System.Activities.Hosting.WorkflowInstance\"&gt;&lt;/xref&gt;</ph> did not abort.","source":"The exception that caused the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref> to abort, or `null` if the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref> did not abort."}],"pos":[16528,16728],"yaml":true},{"content":"Returns the collection of available bookmarks for the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref>.","nodes":[{"pos":[0,118],"content":"Returns the collection of available bookmarks for the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Hosting.WorkflowInstance\"&gt;&lt;/xref&gt;</ph>.","source":"Returns the collection of available bookmarks for the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref>."}],"pos":[17964,18083],"yaml":true},{"content":"A collection of bookmarks for the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref>.","nodes":[{"pos":[0,98],"content":"A collection of bookmarks for the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Hosting.WorkflowInstance\"&gt;&lt;/xref&gt;</ph>.","source":"A collection of bookmarks for the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref>."}],"pos":[18372,18471],"yaml":true},{"content":"Returns the collection of available bookmarks for the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref> created in the specified <xref href=\"System.Activities.BookmarkScope\"></xref>.","nodes":[{"pos":[0,196],"content":"Returns the collection of available bookmarks for the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Hosting.WorkflowInstance\"&gt;&lt;/xref&gt;</ph> created in the specified <ph id=\"ph2\">&lt;xref href=\"System.Activities.BookmarkScope\"&gt;&lt;/xref&gt;</ph>.","source":"Returns the collection of available bookmarks for the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref> created in the specified <xref href=\"System.Activities.BookmarkScope\"></xref>."}],"pos":[19843,20040],"yaml":true},{"content":"The bookmark scope to inspect.","nodes":[{"pos":[0,30],"content":"The bookmark scope to inspect.","nodes":[{"content":"The bookmark scope to inspect.","pos":[0,30]}]}],"pos":[20309,20340],"yaml":true},{"content":"The collection of bookmarks created in the specified <xref href=\"System.Activities.BookmarkScope\"></xref>.","nodes":[{"pos":[0,106],"content":"The collection of bookmarks created in the specified <ph id=\"ph1\">&lt;xref href=\"System.Activities.BookmarkScope\"&gt;&lt;/xref&gt;</ph>.","source":"The collection of bookmarks created in the specified <xref href=\"System.Activities.BookmarkScope\"></xref>."}],"pos":[20473,20580],"yaml":true},{"content":"Returns the final <xref href=\"System.Activities.ActivityInstanceState\"></xref> of the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref>.","nodes":[{"pos":[0,150],"content":"Returns the final <ph id=\"ph1\">&lt;xref href=\"System.Activities.ActivityInstanceState\"&gt;&lt;/xref&gt;</ph> of the <ph id=\"ph2\">&lt;xref href=\"System.Activities.Hosting.WorkflowInstance\"&gt;&lt;/xref&gt;</ph>.","source":"Returns the final <xref href=\"System.Activities.ActivityInstanceState\"></xref> of the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref>."}],"pos":[21850,22001],"yaml":true},{"content":"One of the enumeration members that describes the state of an activity instance.","nodes":[{"pos":[0,80],"content":"One of the enumeration members that describes the state of an activity instance.","nodes":[{"content":"One of the enumeration members that describes the state of an activity instance.","pos":[0,80]}]}],"pos":[22196,22277],"yaml":true},{"content":"Returns the final <xref href=\"System.Activities.ActivityInstanceState\"></xref> of the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref>, including termination exception.","nodes":[{"pos":[0,183],"content":"Returns the final <ph id=\"ph1\">&lt;xref href=\"System.Activities.ActivityInstanceState\"&gt;&lt;/xref&gt;</ph> of the <ph id=\"ph2\">&lt;xref href=\"System.Activities.Hosting.WorkflowInstance\"&gt;&lt;/xref&gt;</ph>, including termination exception.","source":"Returns the final <xref href=\"System.Activities.ActivityInstanceState\"></xref> of the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref>, including termination exception."}],"pos":[23637,23821],"yaml":true},{"content":"When this method returns, <code>terminationException</code> contains the exception that caused the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref> to terminate, or `null` if the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref> did not terminate. This parameter is passed uninitialized.","nodes":[{"pos":[0,316],"content":"When this method returns, <code>terminationException</code> contains the exception that caused the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref> to terminate, or `null` if the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref> did not terminate. This parameter is passed uninitialized.","nodes":[{"content":"When this method returns, <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">terminationException</ph><ept id=\"p1\">&lt;/code&gt;</ept> contains the exception that caused the <ph id=\"ph2\">&lt;xref href=\"System.Activities.Hosting.WorkflowInstance\"&gt;&lt;/xref&gt;</ph> to terminate, or <ph id=\"ph3\">`null`</ph> if the <ph id=\"ph4\">&lt;xref href=\"System.Activities.Hosting.WorkflowInstance\"&gt;&lt;/xref&gt;</ph> did not terminate.","pos":[0,276],"source":"When this method returns, <code>terminationException</code> contains the exception that caused the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref> to terminate, or `null` if the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref> did not terminate."},{"content":"This parameter is passed uninitialized.","pos":[277,316]}]}],"pos":[24043,24360],"yaml":true},{"content":"One of the enumeration members that describes the state of an activity instance.","nodes":[{"pos":[0,80],"content":"One of the enumeration members that describes the state of an activity instance.","nodes":[{"content":"One of the enumeration members that describes the state of an activity instance.","pos":[0,80]}]}],"pos":[24443,24524],"yaml":true},{"content":"Returns the final <xref href=\"System.Activities.ActivityInstanceState\"></xref> of the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref>, including workflow outputs and termination exception.","nodes":[{"pos":[0,204],"content":"Returns the final <ph id=\"ph1\">&lt;xref href=\"System.Activities.ActivityInstanceState\"&gt;&lt;/xref&gt;</ph> of the <ph id=\"ph2\">&lt;xref href=\"System.Activities.Hosting.WorkflowInstance\"&gt;&lt;/xref&gt;</ph>, including workflow outputs and termination exception.","source":"Returns the final <xref href=\"System.Activities.ActivityInstanceState\"></xref> of the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref>, including workflow outputs and termination exception."}],"pos":[26175,26380],"yaml":true},{"content":"When this method returns, <code>outputs</code> contains a dictionary of <xref href=\"System.Activities.ArgumentDirection.Out\"></xref> arguments of the workflow, keyed by argument name. This parameter is passed uninitialized.","nodes":[{"pos":[0,223],"content":"When this method returns, <code>outputs</code> contains a dictionary of <xref href=\"System.Activities.ArgumentDirection.Out\"></xref> arguments of the workflow, keyed by argument name. This parameter is passed uninitialized.","nodes":[{"content":"When this method returns, <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">outputs</ph><ept id=\"p1\">&lt;/code&gt;</ept> contains a dictionary of <ph id=\"ph2\">&lt;xref href=\"System.Activities.ArgumentDirection.Out\"&gt;&lt;/xref&gt;</ph> arguments of the workflow, keyed by argument name.","pos":[0,183],"source":"When this method returns, <code>outputs</code> contains a dictionary of <xref href=\"System.Activities.ArgumentDirection.Out\"></xref> arguments of the workflow, keyed by argument name."},{"content":"This parameter is passed uninitialized.","pos":[184,223]}]}],"pos":[26707,26931],"yaml":true},{"content":"When this method returns, <code>terminationException</code> contains the exception that caused the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref> to terminate, or `null` if the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref> did not terminate. This parameter is passed uninitialized.","nodes":[{"pos":[0,316],"content":"When this method returns, <code>terminationException</code> contains the exception that caused the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref> to terminate, or `null` if the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref> did not terminate. This parameter is passed uninitialized.","nodes":[{"content":"When this method returns, <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">terminationException</ph><ept id=\"p1\">&lt;/code&gt;</ept> contains the exception that caused the <ph id=\"ph2\">&lt;xref href=\"System.Activities.Hosting.WorkflowInstance\"&gt;&lt;/xref&gt;</ph> to terminate, or <ph id=\"ph3\">`null`</ph> if the <ph id=\"ph4\">&lt;xref href=\"System.Activities.Hosting.WorkflowInstance\"&gt;&lt;/xref&gt;</ph> did not terminate.","pos":[0,276],"source":"When this method returns, <code>terminationException</code> contains the exception that caused the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref> to terminate, or `null` if the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref> did not terminate."},{"content":"This parameter is passed uninitialized.","pos":[277,316]}]}],"pos":[27010,27327],"yaml":true},{"content":"One of the enumeration members that describes the state of an activity instance.","nodes":[{"pos":[0,80],"content":"One of the enumeration members that describes the state of an activity instance.","nodes":[{"content":"One of the enumeration members that describes the state of an activity instance.","pos":[0,80]}]}],"pos":[27410,27491],"yaml":true},{"content":"Returns the hash code for this <xref href=\"System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\"></xref>.","nodes":[{"pos":[0,119],"content":"Returns the hash code for this <ph id=\"ph1\">&lt;xref href=\"System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\"&gt;&lt;/xref&gt;</ph>.","source":"Returns the hash code for this <xref href=\"System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\"></xref>."}],"pos":[28725,28845],"yaml":true},{"content":"The hash code for this <xref href=\"System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\"></xref>.","nodes":[{"pos":[0,111],"content":"The hash code for this <ph id=\"ph1\">&lt;xref href=\"System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\"&gt;&lt;/xref&gt;</ph>.","source":"The hash code for this <xref href=\"System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\"></xref>."}],"pos":[28979,29091],"yaml":true},{"content":"Returns a dictionary of variables in the current scope that have been specified with <xref href=\"System.Activities.VariableModifiers.Mapped\"></xref>.","nodes":[{"pos":[0,149],"content":"Returns a dictionary of variables in the current scope that have been specified with <ph id=\"ph1\">&lt;xref href=\"System.Activities.VariableModifiers.Mapped\"&gt;&lt;/xref&gt;</ph>.","source":"Returns a dictionary of variables in the current scope that have been specified with <xref href=\"System.Activities.VariableModifiers.Mapped\"></xref>."}],"pos":[30360,30510],"yaml":true},{"content":"A dictionary of mapped variables currently in scope.","nodes":[{"pos":[0,52],"content":"A dictionary of mapped variables currently in scope.","nodes":[{"content":"A dictionary of mapped variables currently in scope.","pos":[0,52]}]}],"pos":[30804,30857],"yaml":true},{"content":"Called by the workflow runtime to determine whether this workflow instance has pending tracking records and a tracking participant.","nodes":[{"pos":[0,131],"content":"Called by the workflow runtime to determine whether this workflow instance has pending tracking records and a tracking participant.","nodes":[{"content":"Called by the workflow runtime to determine whether this workflow instance has pending tracking records and a tracking participant.","pos":[0,131]}]}],"pos":[32171,32303],"yaml":true},{"content":"`true` if this workflow instance has pending tracking records and a tracking participant; otherwise, `false`.","nodes":[{"pos":[0,109],"content":"<ph id=\"ph1\">`true`</ph> if this workflow instance has pending tracking records and a tracking participant; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if this workflow instance has pending tracking records and a tracking participant; otherwise, `false`."}],"pos":[32431,32543],"yaml":true},{"content":"Gets a value that indicates whether the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref> is in a state where it can be persisted.","nodes":[{"pos":[0,144],"content":"Gets a value that indicates whether the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Hosting.WorkflowInstance\"&gt;&lt;/xref&gt;</ph> is in a state where it can be persisted.","source":"Gets a value that indicates whether the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref> is in a state where it can be persisted."}],"pos":[33792,33937],"yaml":true},{"content":"`true` if the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref> can be persisted; otherwise, `false`.","nodes":[{"pos":[0,115],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Activities.Hosting.WorkflowInstance\"&gt;&lt;/xref&gt;</ph> can be persisted; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref> can be persisted; otherwise, `false`."}],"pos":[34053,34171],"yaml":true},{"content":"Returns a value that indicates whether two <xref href=\"System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\"></xref> instances are equal.","nodes":[{"pos":[0,151],"content":"Returns a value that indicates whether two <ph id=\"ph1\">&lt;xref href=\"System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\"&gt;&lt;/xref&gt;</ph> instances are equal.","source":"Returns a value that indicates whether two <xref href=\"System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\"></xref> instances are equal."}],"pos":[36053,36205],"yaml":true},{"content":"The first <xref href=\"System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\"></xref> to compare.","nodes":[{"pos":[0,109],"content":"The first <ph id=\"ph1\">&lt;xref href=\"System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\"&gt;&lt;/xref&gt;</ph> to compare.","source":"The first <xref href=\"System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\"></xref> to compare."}],"pos":[36537,36647],"yaml":true},{"content":"The second <xref href=\"System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\"></xref> to compare.","nodes":[{"pos":[0,110],"content":"The second <ph id=\"ph1\">&lt;xref href=\"System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\"&gt;&lt;/xref&gt;</ph> to compare.","source":"The second <xref href=\"System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\"></xref> to compare."}],"pos":[36761,36872],"yaml":true},{"content":"`true` if the two <xref href=\"System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\"></xref> instances are equal; otherwise, `false`.","nodes":[{"pos":[0,146],"content":"<ph id=\"ph1\">`true`</ph> if the two <ph id=\"ph2\">&lt;xref href=\"System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\"&gt;&lt;/xref&gt;</ph> instances are equal; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the two <xref href=\"System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\"></xref> instances are equal; otherwise, `false`."}],"pos":[36930,37079],"yaml":true},{"content":"Returns a value that indicates whether two <xref href=\"System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\"></xref> instances are not equal.","nodes":[{"pos":[0,155],"content":"Returns a value that indicates whether two <ph id=\"ph1\">&lt;xref href=\"System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\"&gt;&lt;/xref&gt;</ph> instances are not equal.","source":"Returns a value that indicates whether two <xref href=\"System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\"></xref> instances are not equal."}],"pos":[38971,39127],"yaml":true},{"content":"The first <xref href=\"System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\"></xref> to compare.","nodes":[{"pos":[0,109],"content":"The first <ph id=\"ph1\">&lt;xref href=\"System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\"&gt;&lt;/xref&gt;</ph> to compare.","source":"The first <xref href=\"System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\"></xref> to compare."}],"pos":[39461,39571],"yaml":true},{"content":"The second <xref href=\"System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\"></xref> to compare.","nodes":[{"pos":[0,110],"content":"The second <ph id=\"ph1\">&lt;xref href=\"System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\"&gt;&lt;/xref&gt;</ph> to compare.","source":"The second <xref href=\"System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\"></xref> to compare."}],"pos":[39685,39796],"yaml":true},{"content":"`true` if the two <xref href=\"System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\"></xref> instances are not equal; otherwise, `false`.","nodes":[{"pos":[0,150],"content":"<ph id=\"ph1\">`true`</ph> if the two <ph id=\"ph2\">&lt;xref href=\"System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\"&gt;&lt;/xref&gt;</ph> instances are not equal; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the two <xref href=\"System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\"></xref> instances are not equal; otherwise, `false`."}],"pos":[39854,40007],"yaml":true},{"content":"Requests that the workflow runtime pause the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref> at the next point of execution where it is possible to persist. Note that the scheduler queue may not be empty at this point.","nodes":[{"pos":[0,234],"content":"Requests that the workflow runtime pause the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref> at the next point of execution where it is possible to persist. Note that the scheduler queue may not be empty at this point.","nodes":[{"content":"Requests that the workflow runtime pause the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Hosting.WorkflowInstance\"&gt;&lt;/xref&gt;</ph> at the next point of execution where it is possible to persist.","pos":[0,172],"source":"Requests that the workflow runtime pause the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref> at the next point of execution where it is possible to persist."},{"content":"Note that the scheduler queue may not be empty at this point.","pos":[173,234]}]}],"pos":[41290,41525],"yaml":true},{"content":"Prepares the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref> state for serialization.","nodes":[{"pos":[0,101],"content":"Prepares the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Hosting.WorkflowInstance\"&gt;&lt;/xref&gt;</ph> state for serialization.","source":"Prepares the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref> state for serialization."}],"pos":[42912,43014],"yaml":true},{"content":"A workflow instance state.","nodes":[{"pos":[0,26],"content":"A workflow instance state.","nodes":[{"content":"A workflow instance state.","pos":[0,26]}]}],"pos":[43155,43182],"yaml":true},{"content":"Requests that the scheduler stops.","nodes":[{"pos":[0,34],"content":"Requests that the scheduler stops.","nodes":[{"content":"Requests that the scheduler stops.","pos":[0,34]}]}],"pos":[44427,44462],"yaml":true},{"content":"Instructs the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref> to begin execution.","nodes":[{"pos":[0,97],"content":"Instructs the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Hosting.WorkflowInstance\"&gt;&lt;/xref&gt;</ph> to begin execution.","source":"Instructs the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref> to begin execution."}],"pos":[45713,45811],"yaml":true},{"content":"Schedules a bookmark resumption with the specified value.","nodes":[{"pos":[0,57],"content":"Schedules a bookmark resumption with the specified value.","nodes":[{"content":"Schedules a bookmark resumption with the specified value.","pos":[0,57]}]}],"pos":[47356,47414],"yaml":true},{"content":"The bookmark to resume.","nodes":[{"pos":[0,23],"content":"The bookmark to resume.","nodes":[{"content":"The bookmark to resume.","pos":[0,23]}]}],"pos":[47660,47684],"yaml":true},{"content":"The data to be passed to the activity that created the <xref href=\"System.Activities.Bookmark\"></xref>.","nodes":[{"pos":[0,103],"content":"The data to be passed to the activity that created the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Bookmark\"&gt;&lt;/xref&gt;</ph>.","source":"The data to be passed to the activity that created the <xref href=\"System.Activities.Bookmark\"></xref>."}],"pos":[47745,47849],"yaml":true},{"content":"One of the enumeration values that indicates the result of a <xref href=\"System.Activities.Bookmark\"></xref> scheduling operation.","nodes":[{"pos":[0,130],"content":"One of the enumeration values that indicates the result of a <ph id=\"ph1\">&lt;xref href=\"System.Activities.Bookmark\"&gt;&lt;/xref&gt;</ph> scheduling operation.","source":"One of the enumeration values that indicates the result of a <xref href=\"System.Activities.Bookmark\"></xref> scheduling operation."}],"pos":[47935,48066],"yaml":true},{"content":"Schedules a <xref href=\"System.Activities.Bookmark\"></xref> resumption from the specified <xref href=\"System.Activities.BookmarkScope\"></xref>.","nodes":[{"pos":[0,143],"content":"Schedules a <ph id=\"ph1\">&lt;xref href=\"System.Activities.Bookmark\"&gt;&lt;/xref&gt;</ph> resumption from the specified <ph id=\"ph2\">&lt;xref href=\"System.Activities.BookmarkScope\"&gt;&lt;/xref&gt;</ph>.","source":"Schedules a <xref href=\"System.Activities.Bookmark\"></xref> resumption from the specified <xref href=\"System.Activities.BookmarkScope\"></xref>."}],"pos":[49713,49857],"yaml":true},{"content":"The bookmark to resume.","nodes":[{"pos":[0,23],"content":"The bookmark to resume.","nodes":[{"content":"The bookmark to resume.","pos":[0,23]}]}],"pos":[50142,50166],"yaml":true},{"content":"The data to be passed to the activity that created the <xref href=\"System.Activities.Bookmark\"></xref>.","nodes":[{"pos":[0,103],"content":"The data to be passed to the activity that created the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Bookmark\"&gt;&lt;/xref&gt;</ph>.","source":"The data to be passed to the activity that created the <xref href=\"System.Activities.Bookmark\"></xref>."}],"pos":[50227,50331],"yaml":true},{"content":"The <xref href=\"System.Activities.Bookmark\"></xref> under which the <xref href=\"System.Activities.Bookmark\"></xref> was created.","nodes":[{"pos":[0,128],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Activities.Bookmark\"&gt;&lt;/xref&gt;</ph> under which the <ph id=\"ph2\">&lt;xref href=\"System.Activities.Bookmark\"&gt;&lt;/xref&gt;</ph> was created.","source":"The <xref href=\"System.Activities.Bookmark\"></xref> under which the <xref href=\"System.Activities.Bookmark\"></xref> was created."}],"pos":[50410,50539],"yaml":true},{"content":"One of the enumeration values that indicates the result of a <xref href=\"System.Activities.Bookmark\"></xref> scheduling operation.","nodes":[{"pos":[0,130],"content":"One of the enumeration values that indicates the result of a <ph id=\"ph1\">&lt;xref href=\"System.Activities.Bookmark\"&gt;&lt;/xref&gt;</ph> scheduling operation.","source":"One of the enumeration values that indicates the result of a <xref href=\"System.Activities.Bookmark\"></xref> scheduling operation."}],"pos":[50625,50756],"yaml":true},{"content":"Schedules the cancellation of the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref>.","nodes":[{"pos":[0,98],"content":"Schedules the cancellation of the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Hosting.WorkflowInstance\"&gt;&lt;/xref&gt;</ph>.","source":"Schedules the cancellation of the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref>."}],"pos":[52016,52115],"yaml":true},{"content":"This method schedules a cancel request for the root activity of the <xref:System.Activities.Hosting.WorkflowInstance>.","nodes":[{"pos":[0,118],"content":"This method schedules a cancel request for the root activity of the <xref:System.Activities.Hosting.WorkflowInstance>.","nodes":[{"content":"This method schedules a cancel request for the root activity of the <ph id=\"ph1\">&lt;xref:System.Activities.Hosting.WorkflowInstance&gt;</ph>.","pos":[0,118],"source":"This method schedules a cancel request for the root activity of the <xref:System.Activities.Hosting.WorkflowInstance>."}]}],"pos":[52126,52245],"yaml":true,"extradata":"MT"},{"content":"Gets the state of the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref>.","nodes":[{"pos":[0,86],"content":"Gets the state of the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Hosting.WorkflowInstance\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the state of the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref>."}],"pos":[53508,53595],"yaml":true},{"content":"One of the enumeration values that specifies the state of a <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref>.","nodes":[{"pos":[0,124],"content":"One of the enumeration values that specifies the state of a <ph id=\"ph1\">&lt;xref href=\"System.Activities.Hosting.WorkflowInstance\"&gt;&lt;/xref&gt;</ph>.","source":"One of the enumeration values that specifies the state of a <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref>."}],"pos":[53779,53904],"yaml":true},{"content":"Transitions the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref> into the terminal <xref href=\"System.Activities.ActivityInstanceState.Faulted\"></xref> state using the specified exception.","nodes":[{"pos":[0,203],"content":"Transitions the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Hosting.WorkflowInstance\"&gt;&lt;/xref&gt;</ph> into the terminal <ph id=\"ph2\">&lt;xref href=\"System.Activities.ActivityInstanceState.Faulted\"&gt;&lt;/xref&gt;</ph> state using the specified exception.","source":"Transitions the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref> into the terminal <xref href=\"System.Activities.ActivityInstanceState.Faulted\"></xref> state using the specified exception."}],"pos":[55194,55398],"yaml":true},{"content":"The exception that is the reason for terminating the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref>.","nodes":[{"pos":[0,117],"content":"The exception that is the reason for terminating the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Hosting.WorkflowInstance\"&gt;&lt;/xref&gt;</ph>.","source":"The exception that is the reason for terminating the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref>."}],"pos":[55544,55662],"yaml":true},{"content":"Called by the workflow runtime to add the specified pending record to the list of pending records.","nodes":[{"pos":[0,98],"content":"Called by the workflow runtime to add the specified pending record to the list of pending records.","nodes":[{"content":"Called by the workflow runtime to add the specified pending record to the list of pending records.","pos":[0,98]}]}],"pos":[57070,57169],"yaml":true},{"content":"The tracking record to add.","nodes":[{"pos":[0,27],"content":"The tracking record to add.","nodes":[{"content":"The tracking record to add.","pos":[0,27]}]}],"pos":[57400,57428],"yaml":true},{"content":"Called by the workflow runtime to determine whether tracking is enabled in this workflow instance.","nodes":[{"pos":[0,98],"content":"Called by the workflow runtime to determine whether tracking is enabled in this workflow instance.","nodes":[{"content":"Called by the workflow runtime to determine whether tracking is enabled in this workflow instance.","pos":[0,98]}]}],"pos":[58669,58768],"yaml":true},{"content":"`true` if tracking is enabled in this workflow instance; otherwise, `false`.","nodes":[{"pos":[0,76],"content":"<ph id=\"ph1\">`true`</ph> if tracking is enabled in this workflow instance; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if tracking is enabled in this workflow instance; otherwise, `false`."}],"pos":[58886,58965],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  commentId: T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  id: WorkflowInstance.WorkflowInstanceControl\n  children:\n  - System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort\n  - System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort(System.Exception)\n  - System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.BeginFlushTrackingRecords(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.EndFlushTrackingRecords(System.IAsyncResult)\n  - System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Equals(System.Object)\n  - System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.FlushTrackingRecords(System.TimeSpan)\n  - System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetAbortReason\n  - System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetBookmarks\n  - System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetBookmarks(System.Activities.BookmarkScope)\n  - System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetCompletionState\n  - System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetCompletionState(System.Exception@)\n  - System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetCompletionState(System.Collections.Generic.IDictionary{System.String,System.Object}@,System.Exception@)\n  - System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetHashCode\n  - System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetMappedVariables\n  - System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.HasPendingTrackingRecords\n  - System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.IsPersistable\n  - System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.op_Equality(System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl,System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl)\n  - System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.op_Inequality(System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl,System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl)\n  - System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.PauseWhenPersistable\n  - System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.PrepareForSerialization\n  - System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause\n  - System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run\n  - System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.ScheduleBookmarkResumption(System.Activities.Bookmark,System.Object)\n  - System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.ScheduleBookmarkResumption(System.Activities.Bookmark,System.Object,System.Activities.BookmarkScope)\n  - System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.ScheduleCancel\n  - System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State\n  - System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Terminate(System.Exception)\n  - System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Track(System.Activities.Tracking.WorkflowInstanceRecord)\n  - System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.TrackingEnabled\n  langs:\n  - csharp\n  name: WorkflowInstance.WorkflowInstanceControl\n  nameWithType: WorkflowInstance.WorkflowInstanceControl\n  fullName: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  type: Struct\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  summary: Provides methods for <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref> derived classes to access the functionality of the workflow runtime.\n  syntax:\n    content: protected struct WorkflowInstance.WorkflowInstanceControl\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance+WorkflowInstanceControl.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort\n  commentId: M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort\n  id: Abort\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  langs:\n  - csharp\n  name: Abort()\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.Abort()\n  fullName: WorkflowInstance.WorkflowInstanceControl.Abort()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  summary: Aborts the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref>.\n  remarks: Once <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort%2A> is called, most <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl> APIs except <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort%2A> throw an <xref:System.InvalidOperationException>.\n  syntax:\n    content: public void Abort ();\n    parameters: []\n  overload: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance+WorkflowInstanceControl.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort(System.Exception)\n  commentId: M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort(System.Exception)\n  id: Abort(System.Exception)\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  langs:\n  - csharp\n  name: Abort(Exception)\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.Abort(Exception)\n  fullName: WorkflowInstance.WorkflowInstanceControl.Abort(Exception)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  summary: Aborts the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref> using the specified exception.\n  remarks: Once <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort%2A> is called, most <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl> APIs except <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort%2A> throw an <xref:System.InvalidOperationException>.\n  syntax:\n    content: public void Abort (Exception reason);\n    parameters:\n    - id: reason\n      type: System.Exception\n      description: The reason for aborting the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref>.\n  overload: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance+WorkflowInstanceControl.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.BeginFlushTrackingRecords(System.TimeSpan,System.AsyncCallback,System.Object)\n  commentId: M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.BeginFlushTrackingRecords(System.TimeSpan,System.AsyncCallback,System.Object)\n  id: BeginFlushTrackingRecords(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  langs:\n  - csharp\n  name: BeginFlushTrackingRecords(TimeSpan, AsyncCallback, Object)\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.BeginFlushTrackingRecords(TimeSpan, AsyncCallback, Object)\n  fullName: WorkflowInstance.WorkflowInstanceControl.BeginFlushTrackingRecords(TimeSpan, AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  summary: Called by the workflow runtime to begin sending pending tracking records to tracking participants asynchronously.\n  syntax:\n    content: public IAsyncResult BeginFlushTrackingRecords (TimeSpan timeout, AsyncCallback callback, object state);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: The time period after which to abort the attempt.\n    - id: callback\n      type: System.AsyncCallback\n      description: The method to be called when the track operation has completed.\n    - id: state\n      type: System.Object\n      description: The information about the asynchronous operation.\n    return:\n      type: System.IAsyncResult\n      description: The status of the current track operation.\n  overload: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.BeginFlushTrackingRecords*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance+WorkflowInstanceControl.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.EndFlushTrackingRecords(System.IAsyncResult)\n  commentId: M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.EndFlushTrackingRecords(System.IAsyncResult)\n  id: EndFlushTrackingRecords(System.IAsyncResult)\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  langs:\n  - csharp\n  name: EndFlushTrackingRecords(IAsyncResult)\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.EndFlushTrackingRecords(IAsyncResult)\n  fullName: WorkflowInstance.WorkflowInstanceControl.EndFlushTrackingRecords(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  summary: Called by the workflow runtime to end the track operation.\n  syntax:\n    content: public void EndFlushTrackingRecords (IAsyncResult result);\n    parameters:\n    - id: result\n      type: System.IAsyncResult\n      description: The status of the asynchronous track operation.\n  overload: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.EndFlushTrackingRecords*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance+WorkflowInstanceControl.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Equals(System.Object)\n  commentId: M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.Equals(Object)\n  fullName: WorkflowInstance.WorkflowInstanceControl.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  summary: Returns a value that indicates whether the current <xref href=\"System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\"></xref> is equal to the specified object.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object to compare.\n    return:\n      type: System.Boolean\n      description: '`true` of the object is equal to the current <xref href=\"System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\"></xref>; otherwise, `false`.'\n  overload: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Equals*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance+WorkflowInstanceControl.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.FlushTrackingRecords(System.TimeSpan)\n  commentId: M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.FlushTrackingRecords(System.TimeSpan)\n  id: FlushTrackingRecords(System.TimeSpan)\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  langs:\n  - csharp\n  name: FlushTrackingRecords(TimeSpan)\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.FlushTrackingRecords(TimeSpan)\n  fullName: WorkflowInstance.WorkflowInstanceControl.FlushTrackingRecords(TimeSpan)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  summary: Called by the workflow runtime to send pending tracking records to tracking participants.\n  syntax:\n    content: public void FlushTrackingRecords (TimeSpan timeout);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: The time period after which to abort the attempt.\n  overload: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.FlushTrackingRecords*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance+WorkflowInstanceControl.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetAbortReason\n  commentId: M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetAbortReason\n  id: GetAbortReason\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  langs:\n  - csharp\n  name: GetAbortReason()\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.GetAbortReason()\n  fullName: WorkflowInstance.WorkflowInstanceControl.GetAbortReason()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  summary: Returns the exception that causes the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref> to abort.\n  syntax:\n    content: public Exception GetAbortReason ();\n    parameters: []\n    return:\n      type: System.Exception\n      description: The exception that caused the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref> to abort, or `null` if the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref> did not abort.\n  overload: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetAbortReason*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance+WorkflowInstanceControl.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetBookmarks\n  commentId: M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetBookmarks\n  id: GetBookmarks\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  langs:\n  - csharp\n  name: GetBookmarks()\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.GetBookmarks()\n  fullName: WorkflowInstance.WorkflowInstanceControl.GetBookmarks()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  summary: Returns the collection of available bookmarks for the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref>.\n  syntax:\n    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Activities.Hosting.BookmarkInfo> GetBookmarks ();\n    parameters: []\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Activities.Hosting.BookmarkInfo}\n      description: A collection of bookmarks for the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref>.\n  overload: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetBookmarks*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance+WorkflowInstanceControl.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetBookmarks(System.Activities.BookmarkScope)\n  commentId: M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetBookmarks(System.Activities.BookmarkScope)\n  id: GetBookmarks(System.Activities.BookmarkScope)\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  langs:\n  - csharp\n  name: GetBookmarks(BookmarkScope)\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.GetBookmarks(BookmarkScope)\n  fullName: WorkflowInstance.WorkflowInstanceControl.GetBookmarks(BookmarkScope)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  summary: Returns the collection of available bookmarks for the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref> created in the specified <xref href=\"System.Activities.BookmarkScope\"></xref>.\n  syntax:\n    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Activities.Hosting.BookmarkInfo> GetBookmarks (System.Activities.BookmarkScope scope);\n    parameters:\n    - id: scope\n      type: System.Activities.BookmarkScope\n      description: The bookmark scope to inspect.\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Activities.Hosting.BookmarkInfo}\n      description: The collection of bookmarks created in the specified <xref href=\"System.Activities.BookmarkScope\"></xref>.\n  overload: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetBookmarks*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance+WorkflowInstanceControl.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetCompletionState\n  commentId: M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetCompletionState\n  id: GetCompletionState\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  langs:\n  - csharp\n  name: GetCompletionState()\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.GetCompletionState()\n  fullName: WorkflowInstance.WorkflowInstanceControl.GetCompletionState()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  summary: Returns the final <xref href=\"System.Activities.ActivityInstanceState\"></xref> of the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref>.\n  syntax:\n    content: public System.Activities.ActivityInstanceState GetCompletionState ();\n    parameters: []\n    return:\n      type: System.Activities.ActivityInstanceState\n      description: One of the enumeration members that describes the state of an activity instance.\n  overload: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetCompletionState*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance+WorkflowInstanceControl.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetCompletionState(System.Exception@)\n  commentId: M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetCompletionState(System.Exception@)\n  id: GetCompletionState(System.Exception@)\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  langs:\n  - csharp\n  name: GetCompletionState(Exception)\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.GetCompletionState(Exception)\n  fullName: WorkflowInstance.WorkflowInstanceControl.GetCompletionState(Exception)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  summary: Returns the final <xref href=\"System.Activities.ActivityInstanceState\"></xref> of the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref>, including termination exception.\n  syntax:\n    content: public System.Activities.ActivityInstanceState GetCompletionState (out Exception terminationException);\n    parameters:\n    - id: terminationException\n      type: System.Exception\n      description: When this method returns, <code>terminationException</code> contains the exception that caused the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref> to terminate, or `null` if the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref> did not terminate. This parameter is passed uninitialized.\n    return:\n      type: System.Activities.ActivityInstanceState\n      description: One of the enumeration members that describes the state of an activity instance.\n  overload: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetCompletionState*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance+WorkflowInstanceControl.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetCompletionState(System.Collections.Generic.IDictionary{System.String,System.Object}@,System.Exception@)\n  commentId: M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetCompletionState(System.Collections.Generic.IDictionary{System.String,System.Object}@,System.Exception@)\n  id: GetCompletionState(System.Collections.Generic.IDictionary{System.String,System.Object}@,System.Exception@)\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  langs:\n  - csharp\n  name: GetCompletionState(IDictionary<String,Object>, Exception)\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.GetCompletionState(IDictionary<String,Object>, Exception)\n  fullName: WorkflowInstance.WorkflowInstanceControl.GetCompletionState(IDictionary<String,Object>, Exception)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  summary: Returns the final <xref href=\"System.Activities.ActivityInstanceState\"></xref> of the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref>, including workflow outputs and termination exception.\n  syntax:\n    content: public System.Activities.ActivityInstanceState GetCompletionState (out System.Collections.Generic.IDictionary<string,object> outputs, out Exception terminationException);\n    parameters:\n    - id: outputs\n      type: System.Collections.Generic.IDictionary{System.String,System.Object}\n      description: When this method returns, <code>outputs</code> contains a dictionary of <xref href=\"System.Activities.ArgumentDirection.Out\"></xref> arguments of the workflow, keyed by argument name. This parameter is passed uninitialized.\n    - id: terminationException\n      type: System.Exception\n      description: When this method returns, <code>terminationException</code> contains the exception that caused the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref> to terminate, or `null` if the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref> did not terminate. This parameter is passed uninitialized.\n    return:\n      type: System.Activities.ActivityInstanceState\n      description: One of the enumeration members that describes the state of an activity instance.\n  overload: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetCompletionState*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance+WorkflowInstanceControl.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetHashCode\n  commentId: M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetHashCode\n  id: GetHashCode\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.GetHashCode()\n  fullName: WorkflowInstance.WorkflowInstanceControl.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  summary: Returns the hash code for this <xref href=\"System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\"></xref>.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The hash code for this <xref href=\"System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\"></xref>.\n  overload: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetHashCode*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance+WorkflowInstanceControl.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetMappedVariables\n  commentId: M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetMappedVariables\n  id: GetMappedVariables\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  langs:\n  - csharp\n  name: GetMappedVariables()\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.GetMappedVariables()\n  fullName: WorkflowInstance.WorkflowInstanceControl.GetMappedVariables()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  summary: Returns a dictionary of variables in the current scope that have been specified with <xref href=\"System.Activities.VariableModifiers.Mapped\"></xref>.\n  syntax:\n    content: public System.Collections.Generic.IDictionary<string,System.Activities.Hosting.LocationInfo> GetMappedVariables ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IDictionary{System.String,System.Activities.Hosting.LocationInfo}\n      description: A dictionary of mapped variables currently in scope.\n  overload: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetMappedVariables*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance+WorkflowInstanceControl.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.HasPendingTrackingRecords\n  commentId: P:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.HasPendingTrackingRecords\n  id: HasPendingTrackingRecords\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  langs:\n  - csharp\n  name: HasPendingTrackingRecords\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.HasPendingTrackingRecords\n  fullName: WorkflowInstance.WorkflowInstanceControl.HasPendingTrackingRecords\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  summary: Called by the workflow runtime to determine whether this workflow instance has pending tracking records and a tracking participant.\n  syntax:\n    content: public bool HasPendingTrackingRecords { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if this workflow instance has pending tracking records and a tracking participant; otherwise, `false`.'\n  overload: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.HasPendingTrackingRecords*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance+WorkflowInstanceControl.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.IsPersistable\n  commentId: P:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.IsPersistable\n  id: IsPersistable\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  langs:\n  - csharp\n  name: IsPersistable\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.IsPersistable\n  fullName: WorkflowInstance.WorkflowInstanceControl.IsPersistable\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  summary: Gets a value that indicates whether the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref> is in a state where it can be persisted.\n  syntax:\n    content: public bool IsPersistable { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref> can be persisted; otherwise, `false`.'\n  overload: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.IsPersistable*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance+WorkflowInstanceControl.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.op_Equality(System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl,System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl)\n  commentId: M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.op_Equality(System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl,System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl)\n  id: op_Equality(System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl,System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl)\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  langs:\n  - csharp\n  name: op_Equality(WorkflowInstance+WorkflowInstanceControl, WorkflowInstance+WorkflowInstanceControl)\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.op_Equality(WorkflowInstance+WorkflowInstanceControl, WorkflowInstance+WorkflowInstanceControl)\n  fullName: WorkflowInstance.WorkflowInstanceControl.op_Equality(WorkflowInstance+WorkflowInstanceControl, WorkflowInstance+WorkflowInstanceControl)\n  type: Operator\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  summary: Returns a value that indicates whether two <xref href=\"System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\"></xref> instances are equal.\n  syntax:\n    content: public static bool op_Equality (System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl left, System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl right);\n    parameters:\n    - id: left\n      type: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl\n      description: The first <xref href=\"System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\"></xref> to compare.\n    - id: right\n      type: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl\n      description: The second <xref href=\"System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\"></xref> to compare.\n    return:\n      type: System.Boolean\n      description: '`true` if the two <xref href=\"System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\"></xref> instances are equal; otherwise, `false`.'\n  overload: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.op_Equality*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance+WorkflowInstanceControl.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.op_Inequality(System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl,System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl)\n  commentId: M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.op_Inequality(System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl,System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl)\n  id: op_Inequality(System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl,System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl)\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  langs:\n  - csharp\n  name: op_Inequality(WorkflowInstance+WorkflowInstanceControl, WorkflowInstance+WorkflowInstanceControl)\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.op_Inequality(WorkflowInstance+WorkflowInstanceControl, WorkflowInstance+WorkflowInstanceControl)\n  fullName: WorkflowInstance.WorkflowInstanceControl.op_Inequality(WorkflowInstance+WorkflowInstanceControl, WorkflowInstance+WorkflowInstanceControl)\n  type: Operator\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  summary: Returns a value that indicates whether two <xref href=\"System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\"></xref> instances are not equal.\n  syntax:\n    content: public static bool op_Inequality (System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl left, System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl right);\n    parameters:\n    - id: left\n      type: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl\n      description: The first <xref href=\"System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\"></xref> to compare.\n    - id: right\n      type: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl\n      description: The second <xref href=\"System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\"></xref> to compare.\n    return:\n      type: System.Boolean\n      description: '`true` if the two <xref href=\"System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\"></xref> instances are not equal; otherwise, `false`.'\n  overload: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.op_Inequality*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance+WorkflowInstanceControl.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.PauseWhenPersistable\n  commentId: M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.PauseWhenPersistable\n  id: PauseWhenPersistable\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  langs:\n  - csharp\n  name: PauseWhenPersistable()\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.PauseWhenPersistable()\n  fullName: WorkflowInstance.WorkflowInstanceControl.PauseWhenPersistable()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  summary: Requests that the workflow runtime pause the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref> at the next point of execution where it is possible to persist. Note that the scheduler queue may not be empty at this point.\n  syntax:\n    content: public void PauseWhenPersistable ();\n    parameters: []\n  overload: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.PauseWhenPersistable*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance+WorkflowInstanceControl.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.PrepareForSerialization\n  commentId: M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.PrepareForSerialization\n  id: PrepareForSerialization\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  langs:\n  - csharp\n  name: PrepareForSerialization()\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.PrepareForSerialization()\n  fullName: WorkflowInstance.WorkflowInstanceControl.PrepareForSerialization()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  summary: Prepares the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref> state for serialization.\n  syntax:\n    content: public object PrepareForSerialization ();\n    parameters: []\n    return:\n      type: System.Object\n      description: A workflow instance state.\n  overload: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.PrepareForSerialization*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance+WorkflowInstanceControl.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause\n  commentId: M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause\n  id: RequestPause\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  langs:\n  - csharp\n  name: RequestPause()\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.RequestPause()\n  fullName: WorkflowInstance.WorkflowInstanceControl.RequestPause()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  summary: Requests that the scheduler stops.\n  syntax:\n    content: public void RequestPause ();\n    parameters: []\n  overload: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance+WorkflowInstanceControl.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run\n  commentId: M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run\n  id: Run\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  langs:\n  - csharp\n  name: Run()\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.Run()\n  fullName: WorkflowInstance.WorkflowInstanceControl.Run()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  summary: Instructs the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref> to begin execution.\n  syntax:\n    content: public void Run ();\n    parameters: []\n  overload: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance+WorkflowInstanceControl.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.ScheduleBookmarkResumption(System.Activities.Bookmark,System.Object)\n  commentId: M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.ScheduleBookmarkResumption(System.Activities.Bookmark,System.Object)\n  id: ScheduleBookmarkResumption(System.Activities.Bookmark,System.Object)\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  langs:\n  - csharp\n  name: ScheduleBookmarkResumption(Bookmark, Object)\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.ScheduleBookmarkResumption(Bookmark, Object)\n  fullName: WorkflowInstance.WorkflowInstanceControl.ScheduleBookmarkResumption(Bookmark, Object)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  summary: Schedules a bookmark resumption with the specified value.\n  syntax:\n    content: public System.Activities.BookmarkResumptionResult ScheduleBookmarkResumption (System.Activities.Bookmark bookmark, object value);\n    parameters:\n    - id: bookmark\n      type: System.Activities.Bookmark\n      description: The bookmark to resume.\n    - id: value\n      type: System.Object\n      description: The data to be passed to the activity that created the <xref href=\"System.Activities.Bookmark\"></xref>.\n    return:\n      type: System.Activities.BookmarkResumptionResult\n      description: One of the enumeration values that indicates the result of a <xref href=\"System.Activities.Bookmark\"></xref> scheduling operation.\n  overload: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.ScheduleBookmarkResumption*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance+WorkflowInstanceControl.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.ScheduleBookmarkResumption(System.Activities.Bookmark,System.Object,System.Activities.BookmarkScope)\n  commentId: M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.ScheduleBookmarkResumption(System.Activities.Bookmark,System.Object,System.Activities.BookmarkScope)\n  id: ScheduleBookmarkResumption(System.Activities.Bookmark,System.Object,System.Activities.BookmarkScope)\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  langs:\n  - csharp\n  name: ScheduleBookmarkResumption(Bookmark, Object, BookmarkScope)\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.ScheduleBookmarkResumption(Bookmark, Object, BookmarkScope)\n  fullName: WorkflowInstance.WorkflowInstanceControl.ScheduleBookmarkResumption(Bookmark, Object, BookmarkScope)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  summary: Schedules a <xref href=\"System.Activities.Bookmark\"></xref> resumption from the specified <xref href=\"System.Activities.BookmarkScope\"></xref>.\n  syntax:\n    content: public System.Activities.BookmarkResumptionResult ScheduleBookmarkResumption (System.Activities.Bookmark bookmark, object value, System.Activities.BookmarkScope scope);\n    parameters:\n    - id: bookmark\n      type: System.Activities.Bookmark\n      description: The bookmark to resume.\n    - id: value\n      type: System.Object\n      description: The data to be passed to the activity that created the <xref href=\"System.Activities.Bookmark\"></xref>.\n    - id: scope\n      type: System.Activities.BookmarkScope\n      description: The <xref href=\"System.Activities.Bookmark\"></xref> under which the <xref href=\"System.Activities.Bookmark\"></xref> was created.\n    return:\n      type: System.Activities.BookmarkResumptionResult\n      description: One of the enumeration values that indicates the result of a <xref href=\"System.Activities.Bookmark\"></xref> scheduling operation.\n  overload: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.ScheduleBookmarkResumption*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance+WorkflowInstanceControl.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.ScheduleCancel\n  commentId: M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.ScheduleCancel\n  id: ScheduleCancel\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  langs:\n  - csharp\n  name: ScheduleCancel()\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.ScheduleCancel()\n  fullName: WorkflowInstance.WorkflowInstanceControl.ScheduleCancel()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  summary: Schedules the cancellation of the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref>.\n  remarks: This method schedules a cancel request for the root activity of the <xref:System.Activities.Hosting.WorkflowInstance>.\n  syntax:\n    content: public void ScheduleCancel ();\n    parameters: []\n  overload: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.ScheduleCancel*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance+WorkflowInstanceControl.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State\n  commentId: P:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State\n  id: State\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  langs:\n  - csharp\n  name: State\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.State\n  fullName: WorkflowInstance.WorkflowInstanceControl.State\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  summary: Gets the state of the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref>.\n  syntax:\n    content: public System.Activities.Hosting.WorkflowInstanceState State { get; }\n    return:\n      type: System.Activities.Hosting.WorkflowInstanceState\n      description: One of the enumeration values that specifies the state of a <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref>.\n  overload: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance+WorkflowInstanceControl.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Terminate(System.Exception)\n  commentId: M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Terminate(System.Exception)\n  id: Terminate(System.Exception)\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  langs:\n  - csharp\n  name: Terminate(Exception)\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.Terminate(Exception)\n  fullName: WorkflowInstance.WorkflowInstanceControl.Terminate(Exception)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  summary: Transitions the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref> into the terminal <xref href=\"System.Activities.ActivityInstanceState.Faulted\"></xref> state using the specified exception.\n  syntax:\n    content: public void Terminate (Exception reason);\n    parameters:\n    - id: reason\n      type: System.Exception\n      description: The exception that is the reason for terminating the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref>.\n  overload: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Terminate*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance+WorkflowInstanceControl.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Track(System.Activities.Tracking.WorkflowInstanceRecord)\n  commentId: M:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Track(System.Activities.Tracking.WorkflowInstanceRecord)\n  id: Track(System.Activities.Tracking.WorkflowInstanceRecord)\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  langs:\n  - csharp\n  name: Track(WorkflowInstanceRecord)\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.Track(WorkflowInstanceRecord)\n  fullName: WorkflowInstance.WorkflowInstanceControl.Track(WorkflowInstanceRecord)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  summary: Called by the workflow runtime to add the specified pending record to the list of pending records.\n  syntax:\n    content: public void Track (System.Activities.Tracking.WorkflowInstanceRecord instanceRecord);\n    parameters:\n    - id: instanceRecord\n      type: System.Activities.Tracking.WorkflowInstanceRecord\n      description: The tracking record to add.\n  overload: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Track*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance+WorkflowInstanceControl.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.TrackingEnabled\n  commentId: P:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.TrackingEnabled\n  id: TrackingEnabled\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  langs:\n  - csharp\n  name: TrackingEnabled\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.TrackingEnabled\n  fullName: WorkflowInstance.WorkflowInstanceControl.TrackingEnabled\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  summary: Called by the workflow runtime to determine whether tracking is enabled in this workflow instance.\n  syntax:\n    content: public bool TrackingEnabled { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if tracking is enabled in this workflow instance; otherwise, `false`.'\n  overload: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.TrackingEnabled*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance+WorkflowInstanceControl.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  nameWithType: ValueType\n  fullName: System.ValueType\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  isExternal: false\n  name: Abort()\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.Abort()\n  fullName: WorkflowInstance.WorkflowInstanceControl.Abort()\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort(System.Exception)\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  isExternal: false\n  name: Abort(Exception)\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.Abort(Exception)\n  fullName: WorkflowInstance.WorkflowInstanceControl.Abort(Exception)\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.BeginFlushTrackingRecords(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  isExternal: false\n  name: BeginFlushTrackingRecords(TimeSpan, AsyncCallback, Object)\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.BeginFlushTrackingRecords(TimeSpan, AsyncCallback, Object)\n  fullName: WorkflowInstance.WorkflowInstanceControl.BeginFlushTrackingRecords(TimeSpan, AsyncCallback, Object)\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: false\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.AsyncCallback\n  parent: System\n  isExternal: false\n  name: AsyncCallback\n  nameWithType: AsyncCallback\n  fullName: System.AsyncCallback\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.EndFlushTrackingRecords(System.IAsyncResult)\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  isExternal: false\n  name: EndFlushTrackingRecords(IAsyncResult)\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.EndFlushTrackingRecords(IAsyncResult)\n  fullName: WorkflowInstance.WorkflowInstanceControl.EndFlushTrackingRecords(IAsyncResult)\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Equals(System.Object)\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.Equals(Object)\n  fullName: WorkflowInstance.WorkflowInstanceControl.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.FlushTrackingRecords(System.TimeSpan)\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  isExternal: false\n  name: FlushTrackingRecords(TimeSpan)\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.FlushTrackingRecords(TimeSpan)\n  fullName: WorkflowInstance.WorkflowInstanceControl.FlushTrackingRecords(TimeSpan)\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetAbortReason\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  isExternal: false\n  name: GetAbortReason()\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.GetAbortReason()\n  fullName: WorkflowInstance.WorkflowInstanceControl.GetAbortReason()\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetBookmarks\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  isExternal: false\n  name: GetBookmarks()\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.GetBookmarks()\n  fullName: WorkflowInstance.WorkflowInstanceControl.GetBookmarks()\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n  name: ReadOnlyCollection<T>\n  nameWithType: ReadOnlyCollection<T>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>\n- uid: System.Activities.Hosting.BookmarkInfo\n  name: BookmarkInfo\n  nameWithType: BookmarkInfo\n  fullName: System.Activities.Hosting.BookmarkInfo\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Activities.Hosting.BookmarkInfo}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: ReadOnlyCollection<BookmarkInfo>\n  nameWithType: ReadOnlyCollection<BookmarkInfo>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Activities.Hosting.BookmarkInfo>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.Hosting.BookmarkInfo\n    name: BookmarkInfo\n    nameWithType: BookmarkInfo\n    fullName: System.Activities.Hosting.BookmarkInfo\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetBookmarks(System.Activities.BookmarkScope)\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  isExternal: false\n  name: GetBookmarks(BookmarkScope)\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.GetBookmarks(BookmarkScope)\n  fullName: WorkflowInstance.WorkflowInstanceControl.GetBookmarks(BookmarkScope)\n- uid: System.Activities.BookmarkScope\n  parent: System.Activities\n  isExternal: false\n  name: BookmarkScope\n  nameWithType: BookmarkScope\n  fullName: System.Activities.BookmarkScope\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetCompletionState\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  isExternal: false\n  name: GetCompletionState()\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.GetCompletionState()\n  fullName: WorkflowInstance.WorkflowInstanceControl.GetCompletionState()\n- uid: System.Activities.ActivityInstanceState\n  parent: System.Activities\n  isExternal: false\n  name: ActivityInstanceState\n  nameWithType: ActivityInstanceState\n  fullName: System.Activities.ActivityInstanceState\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetCompletionState(System.Exception@)\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  isExternal: false\n  name: GetCompletionState(Exception)\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.GetCompletionState(Exception)\n  fullName: WorkflowInstance.WorkflowInstanceControl.GetCompletionState(Exception)\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetCompletionState(System.Collections.Generic.IDictionary{System.String,System.Object}@,System.Exception@)\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  isExternal: false\n  name: GetCompletionState(IDictionary<String,Object>, Exception)\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.GetCompletionState(IDictionary<String,Object>, Exception)\n  fullName: WorkflowInstance.WorkflowInstanceControl.GetCompletionState(IDictionary<String,Object>, Exception)\n- uid: System.Collections.Generic.IDictionary`2\n  name: IDictionary<TKey,TValue>\n  nameWithType: IDictionary<TKey,TValue>\n  fullName: System.Collections.Generic.IDictionary<TKey,TValue>\n- uid: System.String\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Collections.Generic.IDictionary{System.String,System.Object}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IDictionary<String,Object>\n  nameWithType: IDictionary<String,Object>\n  fullName: System.Collections.Generic.IDictionary<System.String,System.Object>\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    nameWithType: IDictionary\n    fullName: System.Collections.Generic.IDictionary\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetHashCode\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.GetHashCode()\n  fullName: WorkflowInstance.WorkflowInstanceControl.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetMappedVariables\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  isExternal: false\n  name: GetMappedVariables()\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.GetMappedVariables()\n  fullName: WorkflowInstance.WorkflowInstanceControl.GetMappedVariables()\n- uid: System.Activities.Hosting.LocationInfo\n  name: LocationInfo\n  nameWithType: LocationInfo\n  fullName: System.Activities.Hosting.LocationInfo\n- uid: System.Collections.Generic.IDictionary{System.String,System.Activities.Hosting.LocationInfo}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IDictionary<String,LocationInfo>\n  nameWithType: IDictionary<String,LocationInfo>\n  fullName: System.Collections.Generic.IDictionary<System.String,System.Activities.Hosting.LocationInfo>\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    nameWithType: IDictionary\n    fullName: System.Collections.Generic.IDictionary\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Activities.Hosting.LocationInfo\n    name: LocationInfo\n    nameWithType: LocationInfo\n    fullName: System.Activities.Hosting.LocationInfo\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.HasPendingTrackingRecords\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  isExternal: false\n  name: HasPendingTrackingRecords\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.HasPendingTrackingRecords\n  fullName: WorkflowInstance.WorkflowInstanceControl.HasPendingTrackingRecords\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.IsPersistable\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  isExternal: false\n  name: IsPersistable\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.IsPersistable\n  fullName: WorkflowInstance.WorkflowInstanceControl.IsPersistable\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.op_Equality(System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl,System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl)\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  isExternal: false\n  name: op_Equality(WorkflowInstance+WorkflowInstanceControl, WorkflowInstance+WorkflowInstanceControl)\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.op_Equality(WorkflowInstance+WorkflowInstanceControl, WorkflowInstance+WorkflowInstanceControl)\n  fullName: WorkflowInstance.WorkflowInstanceControl.op_Equality(WorkflowInstance+WorkflowInstanceControl, WorkflowInstance+WorkflowInstanceControl)\n- uid: System.Activities.Hosting.WorkflowInstance\n  parent: System.Activities.Hosting\n  isExternal: false\n  name: WorkflowInstance\n  nameWithType: WorkflowInstance\n  fullName: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.op_Inequality(System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl,System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl)\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  isExternal: false\n  name: op_Inequality(WorkflowInstance+WorkflowInstanceControl, WorkflowInstance+WorkflowInstanceControl)\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.op_Inequality(WorkflowInstance+WorkflowInstanceControl, WorkflowInstance+WorkflowInstanceControl)\n  fullName: WorkflowInstance.WorkflowInstanceControl.op_Inequality(WorkflowInstance+WorkflowInstanceControl, WorkflowInstance+WorkflowInstanceControl)\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.PauseWhenPersistable\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  isExternal: false\n  name: PauseWhenPersistable()\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.PauseWhenPersistable()\n  fullName: WorkflowInstance.WorkflowInstanceControl.PauseWhenPersistable()\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.PrepareForSerialization\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  isExternal: false\n  name: PrepareForSerialization()\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.PrepareForSerialization()\n  fullName: WorkflowInstance.WorkflowInstanceControl.PrepareForSerialization()\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  isExternal: false\n  name: RequestPause()\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.RequestPause()\n  fullName: WorkflowInstance.WorkflowInstanceControl.RequestPause()\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  isExternal: false\n  name: Run()\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.Run()\n  fullName: WorkflowInstance.WorkflowInstanceControl.Run()\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.ScheduleBookmarkResumption(System.Activities.Bookmark,System.Object)\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  isExternal: false\n  name: ScheduleBookmarkResumption(Bookmark, Object)\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.ScheduleBookmarkResumption(Bookmark, Object)\n  fullName: WorkflowInstance.WorkflowInstanceControl.ScheduleBookmarkResumption(Bookmark, Object)\n- uid: System.Activities.BookmarkResumptionResult\n  parent: System.Activities\n  isExternal: false\n  name: BookmarkResumptionResult\n  nameWithType: BookmarkResumptionResult\n  fullName: System.Activities.BookmarkResumptionResult\n- uid: System.Activities.Bookmark\n  parent: System.Activities\n  isExternal: false\n  name: Bookmark\n  nameWithType: Bookmark\n  fullName: System.Activities.Bookmark\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.ScheduleBookmarkResumption(System.Activities.Bookmark,System.Object,System.Activities.BookmarkScope)\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  isExternal: false\n  name: ScheduleBookmarkResumption(Bookmark, Object, BookmarkScope)\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.ScheduleBookmarkResumption(Bookmark, Object, BookmarkScope)\n  fullName: WorkflowInstance.WorkflowInstanceControl.ScheduleBookmarkResumption(Bookmark, Object, BookmarkScope)\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.ScheduleCancel\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  isExternal: false\n  name: ScheduleCancel()\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.ScheduleCancel()\n  fullName: WorkflowInstance.WorkflowInstanceControl.ScheduleCancel()\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  isExternal: false\n  name: State\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.State\n  fullName: WorkflowInstance.WorkflowInstanceControl.State\n- uid: System.Activities.Hosting.WorkflowInstanceState\n  parent: System.Activities.Hosting\n  isExternal: false\n  name: WorkflowInstanceState\n  nameWithType: WorkflowInstanceState\n  fullName: System.Activities.Hosting.WorkflowInstanceState\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Terminate(System.Exception)\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  isExternal: false\n  name: Terminate(Exception)\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.Terminate(Exception)\n  fullName: WorkflowInstance.WorkflowInstanceControl.Terminate(Exception)\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Track(System.Activities.Tracking.WorkflowInstanceRecord)\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  isExternal: false\n  name: Track(WorkflowInstanceRecord)\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.Track(WorkflowInstanceRecord)\n  fullName: WorkflowInstance.WorkflowInstanceControl.Track(WorkflowInstanceRecord)\n- uid: System.Activities.Tracking.WorkflowInstanceRecord\n  parent: System.Activities.Tracking\n  isExternal: false\n  name: WorkflowInstanceRecord\n  nameWithType: WorkflowInstanceRecord\n  fullName: System.Activities.Tracking.WorkflowInstanceRecord\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.TrackingEnabled\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  isExternal: false\n  name: TrackingEnabled\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.TrackingEnabled\n  fullName: WorkflowInstance.WorkflowInstanceControl.TrackingEnabled\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort*\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  isExternal: false\n  name: Abort\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.Abort\n  fullName: WorkflowInstance.WorkflowInstanceControl.Abort\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance+WorkflowInstanceControl.xml\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.BeginFlushTrackingRecords*\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  isExternal: false\n  name: BeginFlushTrackingRecords\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.BeginFlushTrackingRecords\n  fullName: WorkflowInstance.WorkflowInstanceControl.BeginFlushTrackingRecords\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance+WorkflowInstanceControl.xml\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.EndFlushTrackingRecords*\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  isExternal: false\n  name: EndFlushTrackingRecords\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.EndFlushTrackingRecords\n  fullName: WorkflowInstance.WorkflowInstanceControl.EndFlushTrackingRecords\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance+WorkflowInstanceControl.xml\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Equals*\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  isExternal: false\n  name: Equals\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.Equals\n  fullName: WorkflowInstance.WorkflowInstanceControl.Equals\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance+WorkflowInstanceControl.xml\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.FlushTrackingRecords*\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  isExternal: false\n  name: FlushTrackingRecords\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.FlushTrackingRecords\n  fullName: WorkflowInstance.WorkflowInstanceControl.FlushTrackingRecords\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance+WorkflowInstanceControl.xml\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetAbortReason*\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  isExternal: false\n  name: GetAbortReason\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.GetAbortReason\n  fullName: WorkflowInstance.WorkflowInstanceControl.GetAbortReason\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance+WorkflowInstanceControl.xml\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetBookmarks*\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  isExternal: false\n  name: GetBookmarks\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.GetBookmarks\n  fullName: WorkflowInstance.WorkflowInstanceControl.GetBookmarks\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance+WorkflowInstanceControl.xml\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetCompletionState*\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  isExternal: false\n  name: GetCompletionState\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.GetCompletionState\n  fullName: WorkflowInstance.WorkflowInstanceControl.GetCompletionState\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance+WorkflowInstanceControl.xml\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetHashCode*\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  isExternal: false\n  name: GetHashCode\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.GetHashCode\n  fullName: WorkflowInstance.WorkflowInstanceControl.GetHashCode\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance+WorkflowInstanceControl.xml\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetMappedVariables*\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  isExternal: false\n  name: GetMappedVariables\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.GetMappedVariables\n  fullName: WorkflowInstance.WorkflowInstanceControl.GetMappedVariables\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance+WorkflowInstanceControl.xml\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.HasPendingTrackingRecords*\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  isExternal: false\n  name: HasPendingTrackingRecords\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.HasPendingTrackingRecords\n  fullName: WorkflowInstance.WorkflowInstanceControl.HasPendingTrackingRecords\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance+WorkflowInstanceControl.xml\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.IsPersistable*\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  isExternal: false\n  name: IsPersistable\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.IsPersistable\n  fullName: WorkflowInstance.WorkflowInstanceControl.IsPersistable\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance+WorkflowInstanceControl.xml\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.op_Equality*\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  isExternal: false\n  name: op_Equality\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.op_Equality\n  fullName: WorkflowInstance.WorkflowInstanceControl.op_Equality\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance+WorkflowInstanceControl.xml\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.op_Inequality*\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  isExternal: false\n  name: op_Inequality\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.op_Inequality\n  fullName: WorkflowInstance.WorkflowInstanceControl.op_Inequality\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance+WorkflowInstanceControl.xml\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.PauseWhenPersistable*\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  isExternal: false\n  name: PauseWhenPersistable\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.PauseWhenPersistable\n  fullName: WorkflowInstance.WorkflowInstanceControl.PauseWhenPersistable\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance+WorkflowInstanceControl.xml\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.PrepareForSerialization*\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  isExternal: false\n  name: PrepareForSerialization\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.PrepareForSerialization\n  fullName: WorkflowInstance.WorkflowInstanceControl.PrepareForSerialization\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance+WorkflowInstanceControl.xml\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause*\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  isExternal: false\n  name: RequestPause\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.RequestPause\n  fullName: WorkflowInstance.WorkflowInstanceControl.RequestPause\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance+WorkflowInstanceControl.xml\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run*\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  isExternal: false\n  name: Run\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.Run\n  fullName: WorkflowInstance.WorkflowInstanceControl.Run\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance+WorkflowInstanceControl.xml\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.ScheduleBookmarkResumption*\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  isExternal: false\n  name: ScheduleBookmarkResumption\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.ScheduleBookmarkResumption\n  fullName: WorkflowInstance.WorkflowInstanceControl.ScheduleBookmarkResumption\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance+WorkflowInstanceControl.xml\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.ScheduleCancel*\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  isExternal: false\n  name: ScheduleCancel\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.ScheduleCancel\n  fullName: WorkflowInstance.WorkflowInstanceControl.ScheduleCancel\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance+WorkflowInstanceControl.xml\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State*\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  isExternal: false\n  name: State\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.State\n  fullName: WorkflowInstance.WorkflowInstanceControl.State\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance+WorkflowInstanceControl.xml\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Terminate*\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  isExternal: false\n  name: Terminate\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.Terminate\n  fullName: WorkflowInstance.WorkflowInstanceControl.Terminate\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance+WorkflowInstanceControl.xml\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Track*\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  isExternal: false\n  name: Track\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.Track\n  fullName: WorkflowInstance.WorkflowInstanceControl.Track\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance+WorkflowInstanceControl.xml\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.TrackingEnabled*\n  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\n  isExternal: false\n  name: TrackingEnabled\n  nameWithType: WorkflowInstance.WorkflowInstanceControl.TrackingEnabled\n  fullName: WorkflowInstance.WorkflowInstanceControl.TrackingEnabled\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance+WorkflowInstanceControl.xml\n"}