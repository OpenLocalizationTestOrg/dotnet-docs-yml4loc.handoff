{"nodes":[{"content":"Extends the <xref href=\"System.ComponentModel.Composition.Registration.PartBuilder\"></xref> class to allow the use of expressions to select members.","nodes":[{"pos":[0,148],"content":"Extends the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Composition.Registration.PartBuilder\"&gt;&lt;/xref&gt;</ph> class to allow the use of expressions to select members.","source":"Extends the <xref href=\"System.ComponentModel.Composition.Registration.PartBuilder\"></xref> class to allow the use of expressions to select members."}],"pos":[2208,2357],"yaml":true},{"content":"The type of the target.","nodes":[{"pos":[0,23],"content":"The type of the target.","nodes":[{"content":"The type of the target.","pos":[0,23]}]}],"pos":[2522,2546],"yaml":true},{"content":"Specifies a property that should be exported.","nodes":[{"pos":[0,45],"content":"Specifies a property that should be exported.","nodes":[{"content":"Specifies a property that should be exported.","pos":[0,45]}]}],"pos":[7459,7505],"yaml":true},{"content":"An expression that results in a reference to the target property.","nodes":[{"pos":[0,65],"content":"An expression that results in a reference to the target property.","nodes":[{"content":"An expression that results in a reference to the target property.","pos":[0,65]}]}],"pos":[7818,7884],"yaml":true},{"content":"The current object, to allow chaining.","nodes":[{"pos":[0,38],"content":"The current object, to allow chaining.","nodes":[{"content":"The current object, to allow chaining.","pos":[0,38]}]}],"pos":[7988,8027],"yaml":true},{"content":"<code>propertyFilter</code> is `null`.","nodes":[{"pos":[0,38],"content":"<ph id=\"ph1\">&lt;code&gt;propertyFilter&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>propertyFilter</code> is `null`."}],"pos":[8232,8271],"yaml":true},{"content":"Specifies a property that should be exported, and provides configuration information for the resulting export.","nodes":[{"pos":[0,110],"content":"Specifies a property that should be exported, and provides configuration information for the resulting export.","nodes":[{"content":"Specifies a property that should be exported, and provides configuration information for the resulting export.","pos":[0,110]}]}],"pos":[9962,10073],"yaml":true},{"content":"An expression that results in a reference to the target property.","nodes":[{"pos":[0,65],"content":"An expression that results in a reference to the target property.","nodes":[{"content":"An expression that results in a reference to the target property.","pos":[0,65]}]}],"pos":[10476,10542],"yaml":true},{"content":"An object that contains configuration information about the export. The default value is `null`.","nodes":[{"pos":[0,96],"content":"An object that contains configuration information about the export. The default value is `null`.","nodes":[{"content":"An object that contains configuration information about the export.","pos":[0,67]},{"content":"The default value is <ph id=\"ph1\">`null`</ph>.","pos":[68,96],"source":" The default value is `null`."}]}],"pos":[10679,10776],"yaml":true},{"content":"The current object, to allow chaining.","nodes":[{"pos":[0,38],"content":"The current object, to allow chaining.","nodes":[{"content":"The current object, to allow chaining.","pos":[0,38]}]}],"pos":[10880,10919],"yaml":true},{"content":"<code>propertyFilter</code> is `null`.","nodes":[{"pos":[0,38],"content":"<ph id=\"ph1\">&lt;code&gt;propertyFilter&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>propertyFilter</code> is `null`."}],"pos":[11124,11163],"yaml":true},{"content":"Specifies a property that should be exported as the specified contract type.","nodes":[{"pos":[0,76],"content":"Specifies a property that should be exported as the specified contract type.","nodes":[{"content":"Specifies a property that should be exported as the specified contract type.","pos":[0,76]}]}],"pos":[12599,12676],"yaml":true},{"content":"An expression that results in a reference to the target property.","nodes":[{"pos":[0,65],"content":"An expression that results in a reference to the target property.","nodes":[{"content":"An expression that results in a reference to the target property.","pos":[0,65]}]}],"pos":[13000,13066],"yaml":true},{"content":"The type of the contract.","nodes":[{"pos":[0,25],"content":"The type of the contract.","nodes":[{"content":"The type of the contract.","pos":[0,25]}]}],"pos":[13125,13151],"yaml":true},{"content":"The current object, to allow chaining.","nodes":[{"pos":[0,38],"content":"The current object, to allow chaining.","nodes":[{"content":"The current object, to allow chaining.","pos":[0,38]}]}],"pos":[13255,13294],"yaml":true},{"content":"<code>propertyFilter</code> is `null`.","nodes":[{"pos":[0,38],"content":"<ph id=\"ph1\">&lt;code&gt;propertyFilter&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>propertyFilter</code> is `null`."}],"pos":[13502,13541],"yaml":true},{"content":"Specifies a property that should be exported as the specified contract type, and provides configuration information for the resulting export.","nodes":[{"pos":[0,141],"content":"Specifies a property that should be exported as the specified contract type, and provides configuration information for the resulting export.","nodes":[{"content":"Specifies a property that should be exported as the specified contract type, and provides configuration information for the resulting export.","pos":[0,141]}]}],"pos":[15274,15416],"yaml":true},{"content":"An expression that results in a reference to the target property.","nodes":[{"pos":[0,65],"content":"An expression that results in a reference to the target property.","nodes":[{"content":"An expression that results in a reference to the target property.","pos":[0,65]}]}],"pos":[15830,15896],"yaml":true},{"content":"An object that contains configuration information about the export. The default value is `null`.","nodes":[{"pos":[0,96],"content":"An object that contains configuration information about the export. The default value is `null`.","nodes":[{"content":"An object that contains configuration information about the export.","pos":[0,67]},{"content":"The default value is <ph id=\"ph1\">`null`</ph>.","pos":[68,96],"source":" The default value is `null`."}]}],"pos":[16033,16130],"yaml":true},{"content":"The type of the contract.","nodes":[{"pos":[0,25],"content":"The type of the contract.","nodes":[{"content":"The type of the contract.","pos":[0,25]}]}],"pos":[16189,16215],"yaml":true},{"content":"The current object, to allow chaining.","nodes":[{"pos":[0,38],"content":"The current object, to allow chaining.","nodes":[{"content":"The current object, to allow chaining.","pos":[0,38]}]}],"pos":[16319,16358],"yaml":true},{"content":"<code>propertyFilter</code> is `null`.","nodes":[{"pos":[0,38],"content":"<ph id=\"ph1\">&lt;code&gt;propertyFilter&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>propertyFilter</code> is `null`."}],"pos":[16566,16605],"yaml":true},{"content":"Specifies that a property should be imported.","nodes":[{"pos":[0,45],"content":"Specifies that a property should be imported.","nodes":[{"content":"Specifies that a property should be imported.","pos":[0,45]}]}],"pos":[17999,18045],"yaml":true},{"content":"An expression that results in a reference to the target property.","nodes":[{"pos":[0,65],"content":"An expression that results in a reference to the target property.","nodes":[{"content":"An expression that results in a reference to the target property.","pos":[0,65]}]}],"pos":[18358,18424],"yaml":true},{"content":"The current object, to allow chaining.","nodes":[{"pos":[0,38],"content":"The current object, to allow chaining.","nodes":[{"content":"The current object, to allow chaining.","pos":[0,38]}]}],"pos":[18528,18567],"yaml":true},{"content":"<code>propertyFilter</code> is `null`.","nodes":[{"pos":[0,38],"content":"<ph id=\"ph1\">&lt;code&gt;propertyFilter&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>propertyFilter</code> is `null`."}],"pos":[18772,18811],"yaml":true},{"content":"Specifies that a property should be imported, and provides configuration information for the resulting import.","nodes":[{"pos":[0,110],"content":"Specifies that a property should be imported, and provides configuration information for the resulting import.","nodes":[{"content":"Specifies that a property should be imported, and provides configuration information for the resulting import.","pos":[0,110]}]}],"pos":[20502,20613],"yaml":true},{"content":"An expression that results in a reference to the target property.","nodes":[{"pos":[0,65],"content":"An expression that results in a reference to the target property.","nodes":[{"content":"An expression that results in a reference to the target property.","pos":[0,65]}]}],"pos":[21016,21082],"yaml":true},{"content":"An object that contains configuration information about the import. The default value is `null`.","nodes":[{"pos":[0,96],"content":"An object that contains configuration information about the import. The default value is `null`.","nodes":[{"content":"An object that contains configuration information about the import.","pos":[0,67]},{"content":"The default value is <ph id=\"ph1\">`null`</ph>.","pos":[68,96],"source":" The default value is `null`."}]}],"pos":[21219,21316],"yaml":true},{"content":"The current object, to allow chaining.","nodes":[{"pos":[0,38],"content":"The current object, to allow chaining.","nodes":[{"content":"The current object, to allow chaining.","pos":[0,38]}]}],"pos":[21420,21459],"yaml":true},{"content":"<code>propertyFilter</code> is `null`.","nodes":[{"pos":[0,38],"content":"<ph id=\"ph1\">&lt;code&gt;propertyFilter&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>propertyFilter</code> is `null`."}],"pos":[21664,21703],"yaml":true},{"content":"Specifies that a property should be imported using the specified contract name.","nodes":[{"pos":[0,79],"content":"Specifies that a property should be imported using the specified contract name.","nodes":[{"content":"Specifies that a property should be imported using the specified contract name.","pos":[0,79]}]}],"pos":[23139,23219],"yaml":true},{"content":"An expression that results in a reference to the target property.","nodes":[{"pos":[0,65],"content":"An expression that results in a reference to the target property.","nodes":[{"content":"An expression that results in a reference to the target property.","pos":[0,65]}]}],"pos":[23543,23609],"yaml":true},{"content":"The contract type to use.","nodes":[{"pos":[0,25],"content":"The contract type to use.","nodes":[{"content":"The contract type to use.","pos":[0,25]}]}],"pos":[23668,23694],"yaml":true},{"content":"The current object, to allow chaining.","nodes":[{"pos":[0,38],"content":"The current object, to allow chaining.","nodes":[{"content":"The current object, to allow chaining.","pos":[0,38]}]}],"pos":[23798,23837],"yaml":true},{"content":"<code>propertyFilter</code> is `null`.","nodes":[{"pos":[0,38],"content":"<ph id=\"ph1\">&lt;code&gt;propertyFilter&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>propertyFilter</code> is `null`."}],"pos":[24045,24084],"yaml":true},{"content":"Specifies that a property should be imported using the specified contract name, and provides configuration information for the resulting import.","nodes":[{"pos":[0,144],"content":"Specifies that a property should be imported using the specified contract name, and provides configuration information for the resulting import.","nodes":[{"content":"Specifies that a property should be imported using the specified contract name, and provides configuration information for the resulting import.","pos":[0,144]}]}],"pos":[25817,25962],"yaml":true},{"content":"An expression that results in a reference to the target property.","nodes":[{"pos":[0,65],"content":"An expression that results in a reference to the target property.","nodes":[{"content":"An expression that results in a reference to the target property.","pos":[0,65]}]}],"pos":[26376,26442],"yaml":true},{"content":"An object that contains configuration information about the import. The default value is `null`.","nodes":[{"pos":[0,96],"content":"An object that contains configuration information about the import. The default value is `null`.","nodes":[{"content":"An object that contains configuration information about the import.","pos":[0,67]},{"content":"The default value is <ph id=\"ph1\">`null`</ph>.","pos":[68,96],"source":" The default value is `null`."}]}],"pos":[26579,26676],"yaml":true},{"content":"The contract name to use.","nodes":[{"pos":[0,25],"content":"The contract name to use.","nodes":[{"content":"The contract name to use.","pos":[0,25]}]}],"pos":[26735,26761],"yaml":true},{"content":"The current object, to allow chaining.","nodes":[{"pos":[0,38],"content":"The current object, to allow chaining.","nodes":[{"content":"The current object, to allow chaining.","pos":[0,38]}]}],"pos":[26865,26904],"yaml":true},{"content":"<code>propertyFilter</code> is `null`.","nodes":[{"pos":[0,38],"content":"<ph id=\"ph1\">&lt;code&gt;propertyFilter&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>propertyFilter</code> is `null`."}],"pos":[27112,27151],"yaml":true},{"content":"Specifies the constructor that should be used as an importing constructor.","nodes":[{"pos":[0,74],"content":"Specifies the constructor that should be used as an importing constructor.","nodes":[{"content":"Specifies the constructor that should be used as an importing constructor.","pos":[0,74]}]}],"pos":[28779,28854],"yaml":true},{"content":"An expression that constructs <code>T</code> by using the desired constructor. It is used only for reference, not actually invoked.","nodes":[{"pos":[0,131],"content":"An expression that constructs <code>T</code> by using the desired constructor. It is used only for reference, not actually invoked.","nodes":[{"content":"An expression that constructs <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">T</ph><ept id=\"p1\">&lt;/code&gt;</ept> by using the desired constructor.","pos":[0,78],"source":"An expression that constructs <code>T</code> by using the desired constructor."},{"content":"It is used only for reference, not actually invoked.","pos":[79,131]}]}],"pos":[29295,29427],"yaml":true},{"content":"The current object, to allow chaining.","nodes":[{"pos":[0,38],"content":"The current object, to allow chaining.","nodes":[{"content":"The current object, to allow chaining.","pos":[0,38]}]}],"pos":[29531,29570],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.Composition.Registration.PartBuilder`1\n  commentId: T:System.ComponentModel.Composition.Registration.PartBuilder`1\n  id: PartBuilder`1\n  children:\n  - System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})\n  - System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})\n  - System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})\n  - System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})\n  - System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})\n  - System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ImportBuilder})\n  - System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})\n  - System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ImportBuilder})\n  - System.ComponentModel.Composition.Registration.PartBuilder`1.SelectConstructor(System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.Registration.ParameterImportBuilder,`0}})\n  langs:\n  - csharp\n  name: PartBuilder<T>\n  nameWithType: PartBuilder<T>\n  fullName: System.ComponentModel.Composition.Registration.PartBuilder<T>\n  type: Class\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  summary: Extends the <xref href=\"System.ComponentModel.Composition.Registration.PartBuilder\"></xref> class to allow the use of expressions to select members.\n  syntax:\n    content: 'public class PartBuilder<T> : System.ComponentModel.Composition.Registration.PartBuilder'\n    typeParameters:\n    - id: T\n      description: The type of the target.\n  inheritance:\n  - System.Object\n  - System.ComponentModel.Composition.Registration.PartBuilder\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.Composition.Registration.PartBuilder.AddMetadata(System.String,System.Func{System.Type,System.Object})\n  - System.ComponentModel.Composition.Registration.PartBuilder.AddMetadata(System.String,System.Object)\n  - System.ComponentModel.Composition.Registration.PartBuilder.Export\n  - System.ComponentModel.Composition.Registration.PartBuilder.Export(System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})\n  - System.ComponentModel.Composition.Registration.PartBuilder.Export``1\n  - System.ComponentModel.Composition.Registration.PartBuilder.Export``1(System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})\n  - System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces\n  - System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces(System.Predicate{System.Type})\n  - System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces(System.Predicate{System.Type},System.Action{System.Type,System.ComponentModel.Composition.Registration.ExportBuilder})\n  - System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo})\n  - System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder})\n  - System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo})\n  - System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder})\n  - System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo})\n  - System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder})\n  - System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo})\n  - System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder})\n  - System.ComponentModel.Composition.Registration.PartBuilder.SelectConstructor(System.Func{System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo})\n  - System.ComponentModel.Composition.Registration.PartBuilder.SelectConstructor(System.Func{System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo},System.Action{System.Reflection.ParameterInfo,System.ComponentModel.Composition.Registration.ImportBuilder})\n  - System.ComponentModel.Composition.Registration.PartBuilder.SetCreationPolicy(System.ComponentModel.Composition.CreationPolicy)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Registration/PartBuilder`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})\n  commentId: M:System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})\n  id: ExportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder`1\n  langs:\n  - csharp\n  name: ExportProperty(Expression<Func<T,Object>>)\n  nameWithType: PartBuilder<T>.ExportProperty(Expression<Func<T,Object>>)\n  fullName: PartBuilder<T>.ExportProperty(Expression<Func<T,Object>>)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  summary: Specifies a property that should be exported.\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.PartBuilder<T> ExportProperty (System.Linq.Expressions.Expression<Func<T,object>> propertyFilter);\n    parameters:\n    - id: propertyFilter\n      type: System.Linq.Expressions.Expression{System.Func{T,System.Object}}\n      description: An expression that results in a reference to the target property.\n    return:\n      type: System.ComponentModel.Composition.Registration.PartBuilder`1\n      description: The current object, to allow chaining.\n  overload: System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>propertyFilter</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Registration/PartBuilder`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})\n  commentId: M:System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})\n  id: ExportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder`1\n  langs:\n  - csharp\n  name: ExportProperty(Expression<Func<T,Object>>, Action<ExportBuilder>)\n  nameWithType: PartBuilder<T>.ExportProperty(Expression<Func<T,Object>>, Action<ExportBuilder>)\n  fullName: PartBuilder<T>.ExportProperty(Expression<Func<T,Object>>, Action<ExportBuilder>)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  summary: Specifies a property that should be exported, and provides configuration information for the resulting export.\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.PartBuilder<T> ExportProperty (System.Linq.Expressions.Expression<Func<T,object>> propertyFilter, Action<System.ComponentModel.Composition.Registration.ExportBuilder> exportConfiguration);\n    parameters:\n    - id: propertyFilter\n      type: System.Linq.Expressions.Expression{System.Func{T,System.Object}}\n      description: An expression that results in a reference to the target property.\n    - id: exportConfiguration\n      type: System.Action{System.ComponentModel.Composition.Registration.ExportBuilder}\n      description: An object that contains configuration information about the export. The default value is `null`.\n    return:\n      type: System.ComponentModel.Composition.Registration.PartBuilder`1\n      description: The current object, to allow chaining.\n  overload: System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>propertyFilter</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Registration/PartBuilder`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})\n  commentId: M:System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})\n  id: ExportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder`1\n  langs:\n  - csharp\n  name: ExportProperty<TContract>(Expression<Func<T,Object>>)\n  nameWithType: PartBuilder<T>.ExportProperty<TContract>(Expression<Func<T,Object>>)\n  fullName: PartBuilder<T>.ExportProperty<TContract>(Expression<Func<T,Object>>)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  summary: Specifies a property that should be exported as the specified contract type.\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.PartBuilder<T> ExportProperty<TContract> (System.Linq.Expressions.Expression<Func<T,object>> propertyFilter);\n    parameters:\n    - id: propertyFilter\n      type: System.Linq.Expressions.Expression{System.Func{T,System.Object}}\n      description: An expression that results in a reference to the target property.\n    typeParameters:\n    - id: TContract\n      description: The type of the contract.\n    return:\n      type: System.ComponentModel.Composition.Registration.PartBuilder`1\n      description: The current object, to allow chaining.\n  overload: System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty``1*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>propertyFilter</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Registration/PartBuilder`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})\n  commentId: M:System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})\n  id: ExportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder`1\n  langs:\n  - csharp\n  name: ExportProperty<TContract>(Expression<Func<T,Object>>, Action<ExportBuilder>)\n  nameWithType: PartBuilder<T>.ExportProperty<TContract>(Expression<Func<T,Object>>, Action<ExportBuilder>)\n  fullName: PartBuilder<T>.ExportProperty<TContract>(Expression<Func<T,Object>>, Action<ExportBuilder>)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  summary: Specifies a property that should be exported as the specified contract type, and provides configuration information for the resulting export.\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.PartBuilder<T> ExportProperty<TContract> (System.Linq.Expressions.Expression<Func<T,object>> propertyFilter, Action<System.ComponentModel.Composition.Registration.ExportBuilder> exportConfiguration);\n    parameters:\n    - id: propertyFilter\n      type: System.Linq.Expressions.Expression{System.Func{T,System.Object}}\n      description: An expression that results in a reference to the target property.\n    - id: exportConfiguration\n      type: System.Action{System.ComponentModel.Composition.Registration.ExportBuilder}\n      description: An object that contains configuration information about the export. The default value is `null`.\n    typeParameters:\n    - id: TContract\n      description: The type of the contract.\n    return:\n      type: System.ComponentModel.Composition.Registration.PartBuilder`1\n      description: The current object, to allow chaining.\n  overload: System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty``1*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>propertyFilter</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Registration/PartBuilder`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})\n  commentId: M:System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})\n  id: ImportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder`1\n  langs:\n  - csharp\n  name: ImportProperty(Expression<Func<T,Object>>)\n  nameWithType: PartBuilder<T>.ImportProperty(Expression<Func<T,Object>>)\n  fullName: PartBuilder<T>.ImportProperty(Expression<Func<T,Object>>)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  summary: Specifies that a property should be imported.\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.PartBuilder<T> ImportProperty (System.Linq.Expressions.Expression<Func<T,object>> propertyFilter);\n    parameters:\n    - id: propertyFilter\n      type: System.Linq.Expressions.Expression{System.Func{T,System.Object}}\n      description: An expression that results in a reference to the target property.\n    return:\n      type: System.ComponentModel.Composition.Registration.PartBuilder`1\n      description: The current object, to allow chaining.\n  overload: System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>propertyFilter</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Registration/PartBuilder`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ImportBuilder})\n  commentId: M:System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ImportBuilder})\n  id: ImportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ImportBuilder})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder`1\n  langs:\n  - csharp\n  name: ImportProperty(Expression<Func<T,Object>>, Action<ImportBuilder>)\n  nameWithType: PartBuilder<T>.ImportProperty(Expression<Func<T,Object>>, Action<ImportBuilder>)\n  fullName: PartBuilder<T>.ImportProperty(Expression<Func<T,Object>>, Action<ImportBuilder>)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  summary: Specifies that a property should be imported, and provides configuration information for the resulting import.\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.PartBuilder<T> ImportProperty (System.Linq.Expressions.Expression<Func<T,object>> propertyFilter, Action<System.ComponentModel.Composition.Registration.ImportBuilder> importConfiguration);\n    parameters:\n    - id: propertyFilter\n      type: System.Linq.Expressions.Expression{System.Func{T,System.Object}}\n      description: An expression that results in a reference to the target property.\n    - id: importConfiguration\n      type: System.Action{System.ComponentModel.Composition.Registration.ImportBuilder}\n      description: An object that contains configuration information about the import. The default value is `null`.\n    return:\n      type: System.ComponentModel.Composition.Registration.PartBuilder`1\n      description: The current object, to allow chaining.\n  overload: System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>propertyFilter</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Registration/PartBuilder`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})\n  commentId: M:System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})\n  id: ImportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder`1\n  langs:\n  - csharp\n  name: ImportProperty<TContract>(Expression<Func<T,Object>>)\n  nameWithType: PartBuilder<T>.ImportProperty<TContract>(Expression<Func<T,Object>>)\n  fullName: PartBuilder<T>.ImportProperty<TContract>(Expression<Func<T,Object>>)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  summary: Specifies that a property should be imported using the specified contract name.\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.PartBuilder<T> ImportProperty<TContract> (System.Linq.Expressions.Expression<Func<T,object>> propertyFilter);\n    parameters:\n    - id: propertyFilter\n      type: System.Linq.Expressions.Expression{System.Func{T,System.Object}}\n      description: An expression that results in a reference to the target property.\n    typeParameters:\n    - id: TContract\n      description: The contract type to use.\n    return:\n      type: System.ComponentModel.Composition.Registration.PartBuilder`1\n      description: The current object, to allow chaining.\n  overload: System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty``1*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>propertyFilter</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Registration/PartBuilder`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ImportBuilder})\n  commentId: M:System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ImportBuilder})\n  id: ImportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ImportBuilder})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder`1\n  langs:\n  - csharp\n  name: ImportProperty<TContract>(Expression<Func<T,Object>>, Action<ImportBuilder>)\n  nameWithType: PartBuilder<T>.ImportProperty<TContract>(Expression<Func<T,Object>>, Action<ImportBuilder>)\n  fullName: PartBuilder<T>.ImportProperty<TContract>(Expression<Func<T,Object>>, Action<ImportBuilder>)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  summary: Specifies that a property should be imported using the specified contract name, and provides configuration information for the resulting import.\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.PartBuilder<T> ImportProperty<TContract> (System.Linq.Expressions.Expression<Func<T,object>> propertyFilter, Action<System.ComponentModel.Composition.Registration.ImportBuilder> importConfiguration);\n    parameters:\n    - id: propertyFilter\n      type: System.Linq.Expressions.Expression{System.Func{T,System.Object}}\n      description: An expression that results in a reference to the target property.\n    - id: importConfiguration\n      type: System.Action{System.ComponentModel.Composition.Registration.ImportBuilder}\n      description: An object that contains configuration information about the import. The default value is `null`.\n    typeParameters:\n    - id: TContract\n      description: The contract name to use.\n    return:\n      type: System.ComponentModel.Composition.Registration.PartBuilder`1\n      description: The current object, to allow chaining.\n  overload: System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty``1*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>propertyFilter</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Registration/PartBuilder`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.Registration.PartBuilder`1.SelectConstructor(System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.Registration.ParameterImportBuilder,`0}})\n  commentId: M:System.ComponentModel.Composition.Registration.PartBuilder`1.SelectConstructor(System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.Registration.ParameterImportBuilder,`0}})\n  id: SelectConstructor(System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.Registration.ParameterImportBuilder,`0}})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder`1\n  langs:\n  - csharp\n  name: SelectConstructor(Expression<Func<ParameterImportBuilder,T>>)\n  nameWithType: PartBuilder<T>.SelectConstructor(Expression<Func<ParameterImportBuilder,T>>)\n  fullName: PartBuilder<T>.SelectConstructor(Expression<Func<ParameterImportBuilder,T>>)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  summary: Specifies the constructor that should be used as an importing constructor.\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.PartBuilder<T> SelectConstructor (System.Linq.Expressions.Expression<Func<System.ComponentModel.Composition.Registration.ParameterImportBuilder,T>> constructorFilter);\n    parameters:\n    - id: constructorFilter\n      type: System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.Registration.ParameterImportBuilder,T}}\n      description: An expression that constructs <code>T</code> by using the desired constructor. It is used only for reference, not actually invoked.\n    return:\n      type: System.ComponentModel.Composition.Registration.PartBuilder`1\n      description: The current object, to allow chaining.\n  overload: System.ComponentModel.Composition.Registration.PartBuilder`1.SelectConstructor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Registration/PartBuilder`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.ComponentModel.Composition.Registration.PartBuilder\n  parent: System.ComponentModel.Composition.Registration\n  isExternal: false\n  name: PartBuilder\n  nameWithType: PartBuilder\n  fullName: System.ComponentModel.Composition.Registration.PartBuilder\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder`1\n  isExternal: false\n  name: ExportProperty(Expression<Func<T,Object>>)\n  nameWithType: PartBuilder<T>.ExportProperty(Expression<Func<T,Object>>)\n  fullName: PartBuilder<T>.ExportProperty(Expression<Func<T,Object>>)\n- uid: System.ComponentModel.Composition.Registration.PartBuilder`1\n  parent: System.ComponentModel.Composition.Registration\n  isExternal: false\n  name: PartBuilder<T>\n  nameWithType: PartBuilder<T>\n  fullName: System.ComponentModel.Composition.Registration.PartBuilder<T>\n- uid: System.Linq.Expressions.Expression`1\n  name: Expression<TDelegate>\n  nameWithType: Expression<TDelegate>\n  fullName: System.Linq.Expressions.Expression<TDelegate>\n- uid: System.Func`2\n  name: Func<T,TResult>\n  nameWithType: Func<T,TResult>\n  fullName: System.Func<T,TResult>\n- uid: T\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Object\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Linq.Expressions.Expression{System.Func{T,System.Object}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<T,Object>>\n  nameWithType: Expression<Func<T,Object>>\n  fullName: System.Linq.Expressions.Expression<System.Func<T,System.Object>>\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression`1\n    name: Expression\n    nameWithType: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Func`2\n    name: Func\n    nameWithType: Func\n    fullName: System.Func\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: T\n    name: T\n    nameWithType: T\n    fullName: T\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder`1\n  isExternal: false\n  name: ExportProperty(Expression<Func<T,Object>>, Action<ExportBuilder>)\n  nameWithType: PartBuilder<T>.ExportProperty(Expression<Func<T,Object>>, Action<ExportBuilder>)\n  fullName: PartBuilder<T>.ExportProperty(Expression<Func<T,Object>>, Action<ExportBuilder>)\n- uid: System.Action`1\n  name: Action<T>\n  nameWithType: Action<T>\n  fullName: System.Action<T>\n- uid: System.ComponentModel.Composition.Registration.ExportBuilder\n  name: ExportBuilder\n  nameWithType: ExportBuilder\n  fullName: System.ComponentModel.Composition.Registration.ExportBuilder\n- uid: System.Action{System.ComponentModel.Composition.Registration.ExportBuilder}\n  parent: System\n  isExternal: false\n  name: Action<ExportBuilder>\n  nameWithType: Action<ExportBuilder>\n  fullName: System.Action<System.ComponentModel.Composition.Registration.ExportBuilder>\n  spec.csharp:\n  - uid: System.Action`1\n    name: Action\n    nameWithType: Action\n    fullName: System.Action\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ComponentModel.Composition.Registration.ExportBuilder\n    name: ExportBuilder\n    nameWithType: ExportBuilder\n    fullName: System.ComponentModel.Composition.Registration.ExportBuilder\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder`1\n  isExternal: false\n  name: ExportProperty<TContract>(Expression<Func<T,Object>>)\n  nameWithType: PartBuilder<T>.ExportProperty<TContract>(Expression<Func<T,Object>>)\n  fullName: PartBuilder<T>.ExportProperty<TContract>(Expression<Func<T,Object>>)\n- uid: System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder`1\n  isExternal: false\n  name: ExportProperty<TContract>(Expression<Func<T,Object>>, Action<ExportBuilder>)\n  nameWithType: PartBuilder<T>.ExportProperty<TContract>(Expression<Func<T,Object>>, Action<ExportBuilder>)\n  fullName: PartBuilder<T>.ExportProperty<TContract>(Expression<Func<T,Object>>, Action<ExportBuilder>)\n- uid: System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder`1\n  isExternal: false\n  name: ImportProperty(Expression<Func<T,Object>>)\n  nameWithType: PartBuilder<T>.ImportProperty(Expression<Func<T,Object>>)\n  fullName: PartBuilder<T>.ImportProperty(Expression<Func<T,Object>>)\n- uid: System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ImportBuilder})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder`1\n  isExternal: false\n  name: ImportProperty(Expression<Func<T,Object>>, Action<ImportBuilder>)\n  nameWithType: PartBuilder<T>.ImportProperty(Expression<Func<T,Object>>, Action<ImportBuilder>)\n  fullName: PartBuilder<T>.ImportProperty(Expression<Func<T,Object>>, Action<ImportBuilder>)\n- uid: System.ComponentModel.Composition.Registration.ImportBuilder\n  name: ImportBuilder\n  nameWithType: ImportBuilder\n  fullName: System.ComponentModel.Composition.Registration.ImportBuilder\n- uid: System.Action{System.ComponentModel.Composition.Registration.ImportBuilder}\n  parent: System\n  isExternal: false\n  name: Action<ImportBuilder>\n  nameWithType: Action<ImportBuilder>\n  fullName: System.Action<System.ComponentModel.Composition.Registration.ImportBuilder>\n  spec.csharp:\n  - uid: System.Action`1\n    name: Action\n    nameWithType: Action\n    fullName: System.Action\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ComponentModel.Composition.Registration.ImportBuilder\n    name: ImportBuilder\n    nameWithType: ImportBuilder\n    fullName: System.ComponentModel.Composition.Registration.ImportBuilder\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder`1\n  isExternal: false\n  name: ImportProperty<TContract>(Expression<Func<T,Object>>)\n  nameWithType: PartBuilder<T>.ImportProperty<TContract>(Expression<Func<T,Object>>)\n  fullName: PartBuilder<T>.ImportProperty<TContract>(Expression<Func<T,Object>>)\n- uid: System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ImportBuilder})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder`1\n  isExternal: false\n  name: ImportProperty<TContract>(Expression<Func<T,Object>>, Action<ImportBuilder>)\n  nameWithType: PartBuilder<T>.ImportProperty<TContract>(Expression<Func<T,Object>>, Action<ImportBuilder>)\n  fullName: PartBuilder<T>.ImportProperty<TContract>(Expression<Func<T,Object>>, Action<ImportBuilder>)\n- uid: System.ComponentModel.Composition.Registration.PartBuilder`1.SelectConstructor(System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.Registration.ParameterImportBuilder,`0}})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder`1\n  isExternal: false\n  name: SelectConstructor(Expression<Func<ParameterImportBuilder,T>>)\n  nameWithType: PartBuilder<T>.SelectConstructor(Expression<Func<ParameterImportBuilder,T>>)\n  fullName: PartBuilder<T>.SelectConstructor(Expression<Func<ParameterImportBuilder,T>>)\n- uid: System.ComponentModel.Composition.Registration.ParameterImportBuilder\n  name: ParameterImportBuilder\n  nameWithType: ParameterImportBuilder\n  fullName: System.ComponentModel.Composition.Registration.ParameterImportBuilder\n- uid: System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.Registration.ParameterImportBuilder,T}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<ParameterImportBuilder,T>>\n  nameWithType: Expression<Func<ParameterImportBuilder,T>>\n  fullName: System.Linq.Expressions.Expression<System.Func<System.ComponentModel.Composition.Registration.ParameterImportBuilder,T>>\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression`1\n    name: Expression\n    nameWithType: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Func`2\n    name: Func\n    nameWithType: Func\n    fullName: System.Func\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ComponentModel.Composition.Registration.ParameterImportBuilder\n    name: ParameterImportBuilder\n    nameWithType: ParameterImportBuilder\n    fullName: System.ComponentModel.Composition.Registration.ParameterImportBuilder\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: T\n    name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty*\n  parent: System.ComponentModel.Composition.Registration.PartBuilder`1\n  isExternal: false\n  name: ExportProperty\n  nameWithType: PartBuilder<T>.ExportProperty\n  fullName: PartBuilder<T>.ExportProperty\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Registration/PartBuilder`1.xml\n- uid: System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty``1*\n  parent: System.ComponentModel.Composition.Registration.PartBuilder`1\n  isExternal: false\n  name: ExportProperty<TContract>\n  nameWithType: PartBuilder<T>.ExportProperty<TContract>\n  fullName: PartBuilder<T>.ExportProperty<TContract>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Registration/PartBuilder`1.xml\n- uid: System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty*\n  parent: System.ComponentModel.Composition.Registration.PartBuilder`1\n  isExternal: false\n  name: ImportProperty\n  nameWithType: PartBuilder<T>.ImportProperty\n  fullName: PartBuilder<T>.ImportProperty\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Registration/PartBuilder`1.xml\n- uid: System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty``1*\n  parent: System.ComponentModel.Composition.Registration.PartBuilder`1\n  isExternal: false\n  name: ImportProperty<TContract>\n  nameWithType: PartBuilder<T>.ImportProperty<TContract>\n  fullName: PartBuilder<T>.ImportProperty<TContract>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Registration/PartBuilder`1.xml\n- uid: System.ComponentModel.Composition.Registration.PartBuilder`1.SelectConstructor*\n  parent: System.ComponentModel.Composition.Registration.PartBuilder`1\n  isExternal: false\n  name: SelectConstructor\n  nameWithType: PartBuilder<T>.SelectConstructor\n  fullName: PartBuilder<T>.SelectConstructor\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Registration/PartBuilder`1.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.AddMetadata(System.String,System.Func{System.Type,System.Object})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: AddMetadata(String, Func<Type,Object>)\n  nameWithType: PartBuilder.AddMetadata(String, Func<Type,Object>)\n  fullName: PartBuilder.AddMetadata(String, Func<Type,Object>)\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.AddMetadata(System.String,System.Object)\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: AddMetadata(String, Object)\n  nameWithType: PartBuilder.AddMetadata(String, Object)\n  fullName: PartBuilder.AddMetadata(String, Object)\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.Export\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: Export()\n  nameWithType: PartBuilder.Export()\n  fullName: PartBuilder.Export()\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.Export(System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: Export(Action<ExportBuilder>)\n  nameWithType: PartBuilder.Export(Action<ExportBuilder>)\n  fullName: PartBuilder.Export(Action<ExportBuilder>)\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.Export``1\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: Export<T>()\n  nameWithType: PartBuilder.Export<T>()\n  fullName: PartBuilder.Export<T>()\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.Export``1(System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: Export<T>(Action<ExportBuilder>)\n  nameWithType: PartBuilder.Export<T>(Action<ExportBuilder>)\n  fullName: PartBuilder.Export<T>(Action<ExportBuilder>)\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: ExportInterfaces()\n  nameWithType: PartBuilder.ExportInterfaces()\n  fullName: PartBuilder.ExportInterfaces()\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces(System.Predicate{System.Type})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: ExportInterfaces(Predicate<Type>)\n  nameWithType: PartBuilder.ExportInterfaces(Predicate<Type>)\n  fullName: PartBuilder.ExportInterfaces(Predicate<Type>)\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces(System.Predicate{System.Type},System.Action{System.Type,System.ComponentModel.Composition.Registration.ExportBuilder})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: ExportInterfaces(Predicate<Type>, Action<Type,ExportBuilder>)\n  nameWithType: PartBuilder.ExportInterfaces(Predicate<Type>, Action<Type,ExportBuilder>)\n  fullName: PartBuilder.ExportInterfaces(Predicate<Type>, Action<Type,ExportBuilder>)\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: ExportProperties(Predicate<PropertyInfo>, Action<PropertyInfo,ExportBuilder>)\n  nameWithType: PartBuilder.ExportProperties(Predicate<PropertyInfo>, Action<PropertyInfo,ExportBuilder>)\n  fullName: PartBuilder.ExportProperties(Predicate<PropertyInfo>, Action<PropertyInfo,ExportBuilder>)\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: ExportProperties(Predicate<PropertyInfo>)\n  nameWithType: PartBuilder.ExportProperties(Predicate<PropertyInfo>)\n  fullName: PartBuilder.ExportProperties(Predicate<PropertyInfo>)\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: ExportProperties<T>(Predicate<PropertyInfo>)\n  nameWithType: PartBuilder.ExportProperties<T>(Predicate<PropertyInfo>)\n  fullName: PartBuilder.ExportProperties<T>(Predicate<PropertyInfo>)\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: ExportProperties<T>(Predicate<PropertyInfo>, Action<PropertyInfo,ExportBuilder>)\n  nameWithType: PartBuilder.ExportProperties<T>(Predicate<PropertyInfo>, Action<PropertyInfo,ExportBuilder>)\n  fullName: PartBuilder.ExportProperties<T>(Predicate<PropertyInfo>, Action<PropertyInfo,ExportBuilder>)\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: ImportProperties(Predicate<PropertyInfo>)\n  nameWithType: PartBuilder.ImportProperties(Predicate<PropertyInfo>)\n  fullName: PartBuilder.ImportProperties(Predicate<PropertyInfo>)\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: ImportProperties(Predicate<PropertyInfo>, Action<PropertyInfo,ImportBuilder>)\n  nameWithType: PartBuilder.ImportProperties(Predicate<PropertyInfo>, Action<PropertyInfo,ImportBuilder>)\n  fullName: PartBuilder.ImportProperties(Predicate<PropertyInfo>, Action<PropertyInfo,ImportBuilder>)\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: ImportProperties<T>(Predicate<PropertyInfo>)\n  nameWithType: PartBuilder.ImportProperties<T>(Predicate<PropertyInfo>)\n  fullName: PartBuilder.ImportProperties<T>(Predicate<PropertyInfo>)\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: ImportProperties<T>(Predicate<PropertyInfo>, Action<PropertyInfo,ImportBuilder>)\n  nameWithType: PartBuilder.ImportProperties<T>(Predicate<PropertyInfo>, Action<PropertyInfo,ImportBuilder>)\n  fullName: PartBuilder.ImportProperties<T>(Predicate<PropertyInfo>, Action<PropertyInfo,ImportBuilder>)\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.SelectConstructor(System.Func{System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: SelectConstructor(Func<ConstructorInfo[],ConstructorInfo>)\n  nameWithType: PartBuilder.SelectConstructor(Func<ConstructorInfo[],ConstructorInfo>)\n  fullName: PartBuilder.SelectConstructor(Func<ConstructorInfo[],ConstructorInfo>)\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.SelectConstructor(System.Func{System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo},System.Action{System.Reflection.ParameterInfo,System.ComponentModel.Composition.Registration.ImportBuilder})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: SelectConstructor(Func<ConstructorInfo[],ConstructorInfo>, Action<ParameterInfo,ImportBuilder>)\n  nameWithType: PartBuilder.SelectConstructor(Func<ConstructorInfo[],ConstructorInfo>, Action<ParameterInfo,ImportBuilder>)\n  fullName: PartBuilder.SelectConstructor(Func<ConstructorInfo[],ConstructorInfo>, Action<ParameterInfo,ImportBuilder>)\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.SetCreationPolicy(System.ComponentModel.Composition.CreationPolicy)\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: SetCreationPolicy(CreationPolicy)\n  nameWithType: PartBuilder.SetCreationPolicy(CreationPolicy)\n  fullName: PartBuilder.SetCreationPolicy(CreationPolicy)\n"}