{"nodes":[{"content":"Provides functionality to format the value of an object into a string representation.","nodes":[{"pos":[0,85],"content":"Provides functionality to format the value of an object into a string representation.","nodes":[{"content":"Provides functionality to format the value of an object into a string representation.","pos":[0,85]}]}],"pos":[413,499],"yaml":true},{"content":"The <xref:System.IFormattable> interface converts an object to its string representation based on a format string and a format provider.  \n  \n A format string typically defines the general appearance of an object. For example, the .NET Framework supports the following:  \n  \n-   Standard format strings for formatting enumeration values (see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md)).  \n  \n-   Standard and custom format strings for formatting numeric values (see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md)).  \n  \n-   Standard and custom format strings for formatting date and time values (see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md)).  \n  \n-   Standard and custom format strings for formatting time intervals (see [Standard TimeSpan Format Strings](~/docs/standard/base-types/standard-timespan-format-strings.md) and [Custom TimeSpan Format Strings](~/docs/standard/base-types/custom-timespan-format-strings.md)).  \n  \n You can also define your own format strings to support formatting of your application-defined types.  \n  \n A format provider returns a formatting object that typically defines the symbols used in converting an object to its string representation. For example, when you convert a number to a currency value, a format provider defines the currency symbol that appears in the result string. The .NET Framework defines three format providers:  \n  \n-   The <xref:System.Globalization.CultureInfo?displayProperty=fullName> class, which returns either a <xref:System.Globalization.NumberFormatInfo> object for formatting numeric values, or a <xref:System.Globalization.DateTimeFormatInfo> object for formatting date and time values.  \n  \n-   The <xref:System.Globalization.NumberFormatInfo?displayProperty=fullName> class, which returns an instance of itself for formatting numeric values.  \n  \n-   The <xref:System.Globalization.DateTimeFormatInfo?displayProperty=fullName> class, which returns an instance of itself for formatting date and time values.  \n  \n In addition, you can define your own custom format providers to supply culture-specific, profession-specific, or industry-specific information used in formatting. For more information about implementing custom formatting by using a custom format provider, see <xref:System.ICustomFormatter>.  \n  \n The <xref:System.IFormattable> interface defines a single method, <xref:System.IFormattable.ToString%2A>, that supplies formatting services for the implementing type. The <xref:System.IFormattable.ToString%2A> method can be called directly. In addition, it is called automatically by the <xref:System.Convert.ToString%28System.Object%29?displayProperty=fullName> and <xref:System.Convert.ToString%28System.Object%2CSystem.IFormatProvider%29?displayProperty=fullName> methods, and by methods that use the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) in the .NET Framework. Such methods include <xref:System.Console.WriteLine%28System.String%2CSystem.Object%29?displayProperty=fullName>, <xref:System.String.Format%2A?displayProperty=fullName>, and <xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%29?displayProperty=fullName>, among others. The <xref:System.IFormattable.ToString%2A> method is called for each format item in the method's format string.  \n  \n The <xref:System.IFormattable> interface is implemented by the base data types.","nodes":[{"pos":[0,136],"content":"The <xref:System.IFormattable> interface converts an object to its string representation based on a format string and a format provider.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IFormattable&gt;</ph> interface converts an object to its string representation based on a format string and a format provider.","pos":[0,136],"source":"The <xref:System.IFormattable> interface converts an object to its string representation based on a format string and a format provider."}]},{"pos":[143,269],"content":"A format string typically defines the general appearance of an object. For example, the .NET Framework supports the following:","nodes":[{"content":"A format string typically defines the general appearance of an object. For example, the .NET Framework supports the following:","pos":[0,126],"nodes":[{"content":"A format string typically defines the general appearance of an object.","pos":[0,70]},{"content":"For example, the .NET Framework supports the following:","pos":[71,126]}]}]},{"pos":[279,430],"content":"Standard format strings for formatting enumeration values (see <bpt id=\"p1\">[</bpt>Enumeration Format Strings<ept id=\"p1\">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>).","source":"Standard format strings for formatting enumeration values (see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md))."},{"pos":[440,705],"content":"Standard and custom format strings for formatting numeric values (see <bpt id=\"p1\">[</bpt>Standard Numeric Format Strings<ept id=\"p1\">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id=\"p2\">[</bpt>Custom Numeric Format Strings<ept id=\"p2\">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>).","source":"Standard and custom format strings for formatting numeric values (see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md))."},{"pos":[715,1010],"content":"Standard and custom format strings for formatting date and time values (see <bpt id=\"p1\">[</bpt>Standard Date and Time Format Strings<ept id=\"p1\">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id=\"p2\">[</bpt>Custom Date and Time Format Strings<ept id=\"p2\">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>).","source":"Standard and custom format strings for formatting date and time values (see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md))."},{"pos":[1020,1289],"content":"Standard and custom format strings for formatting time intervals (see <bpt id=\"p1\">[</bpt>Standard TimeSpan Format Strings<ept id=\"p1\">](~/docs/standard/base-types/standard-timespan-format-strings.md)</ept> and <bpt id=\"p2\">[</bpt>Custom TimeSpan Format Strings<ept id=\"p2\">](~/docs/standard/base-types/custom-timespan-format-strings.md)</ept>).","source":"Standard and custom format strings for formatting time intervals (see [Standard TimeSpan Format Strings](~/docs/standard/base-types/standard-timespan-format-strings.md) and [Custom TimeSpan Format Strings](~/docs/standard/base-types/custom-timespan-format-strings.md))."},{"pos":[1296,1396],"content":"You can also define your own format strings to support formatting of your application-defined types.","nodes":[{"content":"You can also define your own format strings to support formatting of your application-defined types.","pos":[0,100]}]},{"pos":[1403,1734],"content":"A format provider returns a formatting object that typically defines the symbols used in converting an object to its string representation. For example, when you convert a number to a currency value, a format provider defines the currency symbol that appears in the result string. The .NET Framework defines three format providers:","nodes":[{"content":"A format provider returns a formatting object that typically defines the symbols used in converting an object to its string representation. For example, when you convert a number to a currency value, a format provider defines the currency symbol that appears in the result string. The .NET Framework defines three format providers:","pos":[0,331],"nodes":[{"content":"A format provider returns a formatting object that typically defines the symbols used in converting an object to its string representation.","pos":[0,139]},{"content":"For example, when you convert a number to a currency value, a format provider defines the currency symbol that appears in the result string.","pos":[140,280]},{"content":"The .NET Framework defines three format providers:","pos":[281,331]}]}]},{"pos":[1744,2021],"content":"The <xref:System.Globalization.CultureInfo?displayProperty=fullName> class, which returns either a <xref:System.Globalization.NumberFormatInfo> object for formatting numeric values, or a <xref:System.Globalization.DateTimeFormatInfo> object for formatting date and time values.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Globalization.CultureInfo?displayProperty=fullName&gt;</ph> class, which returns either a <ph id=\"ph2\">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object for formatting numeric values, or a <ph id=\"ph3\">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object for formatting date and time values.","pos":[0,277],"source":"The <xref:System.Globalization.CultureInfo?displayProperty=fullName> class, which returns either a <xref:System.Globalization.NumberFormatInfo> object for formatting numeric values, or a <xref:System.Globalization.DateTimeFormatInfo> object for formatting date and time values."}]},{"pos":[2031,2178],"content":"The <xref:System.Globalization.NumberFormatInfo?displayProperty=fullName> class, which returns an instance of itself for formatting numeric values.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Globalization.NumberFormatInfo?displayProperty=fullName&gt;</ph> class, which returns an instance of itself for formatting numeric values.","pos":[0,147],"source":"The <xref:System.Globalization.NumberFormatInfo?displayProperty=fullName> class, which returns an instance of itself for formatting numeric values."}]},{"pos":[2188,2343],"content":"The <xref:System.Globalization.DateTimeFormatInfo?displayProperty=fullName> class, which returns an instance of itself for formatting date and time values.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeFormatInfo?displayProperty=fullName&gt;</ph> class, which returns an instance of itself for formatting date and time values.","pos":[0,155],"source":"The <xref:System.Globalization.DateTimeFormatInfo?displayProperty=fullName> class, which returns an instance of itself for formatting date and time values."}]},{"pos":[2350,2641],"content":"In addition, you can define your own custom format providers to supply culture-specific, profession-specific, or industry-specific information used in formatting. For more information about implementing custom formatting by using a custom format provider, see <xref:System.ICustomFormatter>.","nodes":[{"content":"In addition, you can define your own custom format providers to supply culture-specific, profession-specific, or industry-specific information used in formatting. For more information about implementing custom formatting by using a custom format provider, see <xref:System.ICustomFormatter>.","pos":[0,291],"nodes":[{"content":"In addition, you can define your own custom format providers to supply culture-specific, profession-specific, or industry-specific information used in formatting.","pos":[0,162]},{"content":"For more information about implementing custom formatting by using a custom format provider, see <ph id=\"ph1\">&lt;xref:System.ICustomFormatter&gt;</ph>.","pos":[163,291],"source":" For more information about implementing custom formatting by using a custom format provider, see <xref:System.ICustomFormatter>."}]}]},{"pos":[2648,3665],"content":"The <xref:System.IFormattable> interface defines a single method, <xref:System.IFormattable.ToString%2A>, that supplies formatting services for the implementing type. The <xref:System.IFormattable.ToString%2A> method can be called directly. In addition, it is called automatically by the <xref:System.Convert.ToString%28System.Object%29?displayProperty=fullName> and <xref:System.Convert.ToString%28System.Object%2CSystem.IFormatProvider%29?displayProperty=fullName> methods, and by methods that use the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) in the .NET Framework. Such methods include <xref:System.Console.WriteLine%28System.String%2CSystem.Object%29?displayProperty=fullName>, <xref:System.String.Format%2A?displayProperty=fullName>, and <xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%29?displayProperty=fullName>, among others. The <xref:System.IFormattable.ToString%2A> method is called for each format item in the method's format string.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IFormattable&gt;</ph> interface defines a single method, <ph id=\"ph2\">&lt;xref:System.IFormattable.ToString%2A&gt;</ph>, that supplies formatting services for the implementing type.","pos":[0,166],"source":"The <xref:System.IFormattable> interface defines a single method, <xref:System.IFormattable.ToString%2A>, that supplies formatting services for the implementing type."},{"content":"The <ph id=\"ph1\">&lt;xref:System.IFormattable.ToString%2A&gt;</ph> method can be called directly.","pos":[167,240],"source":" The <xref:System.IFormattable.ToString%2A> method can be called directly."},{"content":"In addition, it is called automatically by the <ph id=\"ph1\">&lt;xref:System.Convert.ToString%28System.Object%29?displayProperty=fullName&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Convert.ToString%28System.Object%2CSystem.IFormatProvider%29?displayProperty=fullName&gt;</ph> methods, and by methods that use the <bpt id=\"p1\">[</bpt>composite formatting feature<ept id=\"p1\">](~/docs/standard/base-types/composite-formatting.md)</ept> in the .NET Framework.","pos":[241,609],"source":" In addition, it is called automatically by the <xref:System.Convert.ToString%28System.Object%29?displayProperty=fullName> and <xref:System.Convert.ToString%28System.Object%2CSystem.IFormatProvider%29?displayProperty=fullName> methods, and by methods that use the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) in the .NET Framework."},{"content":"Such methods include <ph id=\"ph1\">&lt;xref:System.Console.WriteLine%28System.String%2CSystem.Object%29?displayProperty=fullName&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.String.Format%2A?displayProperty=fullName&gt;</ph>, and <ph id=\"ph3\">&lt;xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%29?displayProperty=fullName&gt;</ph>, among others.","pos":[610,905],"source":" Such methods include <xref:System.Console.WriteLine%28System.String%2CSystem.Object%29?displayProperty=fullName>, <xref:System.String.Format%2A?displayProperty=fullName>, and <xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%29?displayProperty=fullName>, among others."},{"content":"The <ph id=\"ph1\">&lt;xref:System.IFormattable.ToString%2A&gt;</ph> method is called for each format item in the method's format string.","pos":[906,1017],"source":" The <xref:System.IFormattable.ToString%2A> method is called for each format item in the method's format string."}]},{"pos":[3672,3751],"content":"The <xref:System.IFormattable> interface is implemented by the base data types.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IFormattable&gt;</ph> interface is implemented by the base data types.","pos":[0,79],"source":"The <xref:System.IFormattable> interface is implemented by the base data types."}]}],"pos":[510,4290],"yaml":true,"extradata":"MT"},{"content":"Formats the value of the current instance using the specified format.","nodes":[{"pos":[0,69],"content":"Formats the value of the current instance using the specified format.","nodes":[{"content":"Formats the value of the current instance using the specified format.","pos":[0,69]}]}],"pos":[9506,9576],"yaml":true},{"content":"The <xref:System.IFormattable.ToString%2A> method converts a value to a string representation that can be expressed in multiple ways. Its precise format depends on specific symbols or a specified order defined by specific cultures, professions, or industries. You can call the method directly. It is also called automatically by the <xref:System.Convert.ToString%28System.Object%29?displayProperty=fullName> and <xref:System.Convert.ToString%28System.Object%2CSystem.IFormatProvider%29?displayProperty=fullName> methods, and by methods that use the composite formatting feature in the .NET Framework, such as <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=fullName>, <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=fullName>, and <xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%5B%5D%29?displayProperty=fullName>. (For more information, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).)  \n  \n Composite formatting methods call the <xref:System.IFormattable.ToString%2A> method once for each format item in a format string. The parameters passed to the method depend on the specific formatting method that is called and on the content of the format item, as follows:  \n  \n-   If the format item does not include a format string (for example, if the format item is simply `{0}`), it is passed `null` as the value of the <xref:System.String?displayProperty=fullName> parameter.  \n  \n-   If the format item includes a format string (for example, `{0:G}`), that format string is passed as the value of the <xref:System.String?displayProperty=fullName> parameter.  \n  \n-   If the original method call does not include an <xref:System.IFormatProvider?displayProperty=fullName> parameter, <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName> is passed as the value of the <xref:System.IFormatProvider?displayProperty=fullName> parameter.  \n  \n-   If the original method call includes an <xref:System.IFormatProvider?displayProperty=fullName> parameter, the provider that is supplied in the method call is passed as the value of the <xref:System.IFormatProvider?displayProperty=fullName> parameter.  \n  \n> [!NOTE]\n>  An object's <xref:System.IFormattable.ToString%2A> implementation is called by composite formatting methods only if they are not passed an <xref:System.ICustomFormatter> format provider, or if the <xref:System.ICustomFormatter.Format%2A> method of the custom format provider returns `null`.  \n  \n The .NET Framework includes three format providers, all of which implement the <xref:System.IFormatProvider> interface:  \n  \n-   <xref:System.Globalization.NumberFormatInfo> supplies numeric formatting information, such as the characters to use for decimal and group separators, and the spelling and placement of currency symbols in monetary values.  \n  \n-   <xref:System.Globalization.DateTimeFormatInfo> supplies date-related and time-related formatting information, such as the position of the month, the day, and the year in a date pattern.  \n  \n-   <xref:System.Globalization.CultureInfo> contains the default formatting information in a specific culture, including the numeric format information, and date-related and time-related formatting information.  \n  \n In addition, you can define your own custom format provider.","nodes":[{"pos":[0,1023],"content":"The <xref:System.IFormattable.ToString%2A> method converts a value to a string representation that can be expressed in multiple ways. Its precise format depends on specific symbols or a specified order defined by specific cultures, professions, or industries. You can call the method directly. It is also called automatically by the <xref:System.Convert.ToString%28System.Object%29?displayProperty=fullName> and <xref:System.Convert.ToString%28System.Object%2CSystem.IFormatProvider%29?displayProperty=fullName> methods, and by methods that use the composite formatting feature in the .NET Framework, such as <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=fullName>, <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=fullName>, and <xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%5B%5D%29?displayProperty=fullName>. (For more information, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).)","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IFormattable.ToString%2A&gt;</ph> method converts a value to a string representation that can be expressed in multiple ways.","pos":[0,133],"source":"The <xref:System.IFormattable.ToString%2A> method converts a value to a string representation that can be expressed in multiple ways."},{"content":"Its precise format depends on specific symbols or a specified order defined by specific cultures, professions, or industries.","pos":[134,259]},{"content":"You can call the method directly.","pos":[260,293]},{"content":"It is also called automatically by the <ph id=\"ph1\">&lt;xref:System.Convert.ToString%28System.Object%29?displayProperty=fullName&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Convert.ToString%28System.Object%2CSystem.IFormatProvider%29?displayProperty=fullName&gt;</ph> methods, and by methods that use the composite formatting feature in the .NET Framework, such as <ph id=\"ph3\">&lt;xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=fullName&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=fullName&gt;</ph>, and <ph id=\"ph5\">&lt;xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%5B%5D%29?displayProperty=fullName&gt;</ph>.","pos":[294,919],"source":" It is also called automatically by the <xref:System.Convert.ToString%28System.Object%29?displayProperty=fullName> and <xref:System.Convert.ToString%28System.Object%2CSystem.IFormatProvider%29?displayProperty=fullName> methods, and by methods that use the composite formatting feature in the .NET Framework, such as <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=fullName>, <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=fullName>, and <xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%5B%5D%29?displayProperty=fullName>."},{"content":"(For more information, see <bpt id=\"p1\">[</bpt>Composite Formatting<ept id=\"p1\">](~/docs/standard/base-types/composite-formatting.md)</ept>.)","pos":[920,1023],"source":" (For more information, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).)"}]},{"pos":[1030,1302],"content":"Composite formatting methods call the <xref:System.IFormattable.ToString%2A> method once for each format item in a format string. The parameters passed to the method depend on the specific formatting method that is called and on the content of the format item, as follows:","nodes":[{"content":"Composite formatting methods call the <xref:System.IFormattable.ToString%2A> method once for each format item in a format string. The parameters passed to the method depend on the specific formatting method that is called and on the content of the format item, as follows:","pos":[0,272],"nodes":[{"content":"Composite formatting methods call the <ph id=\"ph1\">&lt;xref:System.IFormattable.ToString%2A&gt;</ph> method once for each format item in a format string.","pos":[0,129],"source":"Composite formatting methods call the <xref:System.IFormattable.ToString%2A> method once for each format item in a format string."},{"content":"The parameters passed to the method depend on the specific formatting method that is called and on the content of the format item, as follows:","pos":[130,272]}]}]},{"pos":[1312,1511],"content":"If the format item does not include a format string (for example, if the format item is simply <ph id=\"ph1\">`{0}`</ph>), it is passed <ph id=\"ph2\">`null`</ph> as the value of the <ph id=\"ph3\">&lt;xref:System.String?displayProperty=fullName&gt;</ph> parameter.","source":"If the format item does not include a format string (for example, if the format item is simply `{0}`), it is passed `null` as the value of the <xref:System.String?displayProperty=fullName> parameter."},{"pos":[1521,1694],"content":"If the format item includes a format string (for example, <ph id=\"ph1\">`{0:G}`</ph>), that format string is passed as the value of the <ph id=\"ph2\">&lt;xref:System.String?displayProperty=fullName&gt;</ph> parameter.","source":"If the format item includes a format string (for example, `{0:G}`), that format string is passed as the value of the <xref:System.String?displayProperty=fullName> parameter."},{"pos":[1704,1996],"content":"If the original method call does not include an <xref:System.IFormatProvider?displayProperty=fullName> parameter, <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName> is passed as the value of the <xref:System.IFormatProvider?displayProperty=fullName> parameter.","nodes":[{"content":"If the original method call does not include an <ph id=\"ph1\">&lt;xref:System.IFormatProvider?displayProperty=fullName&gt;</ph> parameter, <ph id=\"ph2\">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName&gt;</ph> is passed as the value of the <ph id=\"ph3\">&lt;xref:System.IFormatProvider?displayProperty=fullName&gt;</ph> parameter.","pos":[0,292],"source":"If the original method call does not include an <xref:System.IFormatProvider?displayProperty=fullName> parameter, <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName> is passed as the value of the <xref:System.IFormatProvider?displayProperty=fullName> parameter."}]},{"pos":[2006,2256],"content":"If the original method call includes an <xref:System.IFormatProvider?displayProperty=fullName> parameter, the provider that is supplied in the method call is passed as the value of the <xref:System.IFormatProvider?displayProperty=fullName> parameter.","nodes":[{"content":"If the original method call includes an <ph id=\"ph1\">&lt;xref:System.IFormatProvider?displayProperty=fullName&gt;</ph> parameter, the provider that is supplied in the method call is passed as the value of the <ph id=\"ph2\">&lt;xref:System.IFormatProvider?displayProperty=fullName&gt;</ph> parameter.","pos":[0,250],"source":"If the original method call includes an <xref:System.IFormatProvider?displayProperty=fullName> parameter, the provider that is supplied in the method call is passed as the value of the <xref:System.IFormatProvider?displayProperty=fullName> parameter."}]},{"pos":[2264,2565],"content":"[!NOTE]\n An object's <xref:System.IFormattable.ToString%2A> implementation is called by composite formatting methods only if they are not passed an <xref:System.ICustomFormatter> format provider, or if the <xref:System.ICustomFormatter.Format%2A> method of the custom format provider returns `null`.","leadings":["","> "],"nodes":[{"content":"An object's <ph id=\"ph1\">&lt;xref:System.IFormattable.ToString%2A&gt;</ph> implementation is called by composite formatting methods only if they are not passed an <ph id=\"ph2\">&lt;xref:System.ICustomFormatter&gt;</ph> format provider, or if the <ph id=\"ph3\">&lt;xref:System.ICustomFormatter.Format%2A&gt;</ph> method of the custom format provider returns <ph id=\"ph4\">`null`</ph>.","pos":[9,299],"source":" An object's <xref:System.IFormattable.ToString%2A> implementation is called by composite formatting methods only if they are not passed an <xref:System.ICustomFormatter> format provider, or if the <xref:System.ICustomFormatter.Format%2A> method of the custom format provider returns `null`."}]},{"pos":[2572,2691],"content":"The .NET Framework includes three format providers, all of which implement the <xref:System.IFormatProvider> interface:","nodes":[{"content":"The .NET Framework includes three format providers, all of which implement the <ph id=\"ph1\">&lt;xref:System.IFormatProvider&gt;</ph> interface:","pos":[0,119],"source":"The .NET Framework includes three format providers, all of which implement the <xref:System.IFormatProvider> interface:"}]},{"pos":[2701,2921],"content":"<xref:System.Globalization.NumberFormatInfo> supplies numeric formatting information, such as the characters to use for decimal and group separators, and the spelling and placement of currency symbols in monetary values.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> supplies numeric formatting information, such as the characters to use for decimal and group separators, and the spelling and placement of currency symbols in monetary values.","pos":[0,220],"source":"<xref:System.Globalization.NumberFormatInfo> supplies numeric formatting information, such as the characters to use for decimal and group separators, and the spelling and placement of currency symbols in monetary values."}]},{"pos":[2931,3116],"content":"<xref:System.Globalization.DateTimeFormatInfo> supplies date-related and time-related formatting information, such as the position of the month, the day, and the year in a date pattern.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> supplies date-related and time-related formatting information, such as the position of the month, the day, and the year in a date pattern.","pos":[0,185],"source":"<xref:System.Globalization.DateTimeFormatInfo> supplies date-related and time-related formatting information, such as the position of the month, the day, and the year in a date pattern."}]},{"pos":[3126,3332],"content":"<xref:System.Globalization.CultureInfo> contains the default formatting information in a specific culture, including the numeric format information, and date-related and time-related formatting information.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Globalization.CultureInfo&gt;</ph> contains the default formatting information in a specific culture, including the numeric format information, and date-related and time-related formatting information.","pos":[0,206],"source":"<xref:System.Globalization.CultureInfo> contains the default formatting information in a specific culture, including the numeric format information, and date-related and time-related formatting information."}]},{"pos":[3339,3399],"content":"In addition, you can define your own custom format provider.","nodes":[{"content":"In addition, you can define your own custom format provider.","pos":[0,60]}]}],"pos":[9587,13012],"yaml":true,"extradata":"MT"},{"content":"The format to use.  \n  \n -or-  \n  \n A null reference (`Nothing` in Visual Basic) to use the default format defined for the type of the <xref href=\"System.IFormattable\"></xref> implementation.","nodes":[{"pos":[0,18],"content":"The format to use.","nodes":[{"content":"The format to use.","pos":[0,18]}]},{"pos":[25,29],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[36,191],"content":"A null reference (<ph id=\"ph1\">`Nothing`</ph> in Visual Basic) to use the default format defined for the type of the <ph id=\"ph2\">&lt;xref href=\"System.IFormattable\"&gt;&lt;/xref&gt;</ph> implementation.","source":"A null reference (`Nothing` in Visual Basic) to use the default format defined for the type of the <xref href=\"System.IFormattable\"></xref> implementation."}],"pos":[13684,13884],"yaml":true},{"content":"The provider to use to format the value.  \n  \n -or-  \n  \n A null reference (`Nothing` in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.","nodes":[{"pos":[0,40],"content":"The provider to use to format the value.","nodes":[{"content":"The provider to use to format the value.","pos":[0,40]}]},{"pos":[47,51],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[58,200],"content":"A null reference (<ph id=\"ph1\">`Nothing`</ph> in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.","source":"A null reference (`Nothing` in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system."}],"pos":[13963,14170],"yaml":true},{"content":"The value of the current instance in the specified format.","nodes":[{"pos":[0,58],"content":"The value of the current instance in the specified format.","nodes":[{"content":"The value of the current instance in the specified format.","pos":[0,58]}]}],"pos":[14227,14286],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IFormattable\n  commentId: T:System.IFormattable\n  id: IFormattable\n  children:\n  - System.IFormattable.ToString(System.String,System.IFormatProvider)\n  langs:\n  - csharp\n  name: IFormattable\n  nameWithType: IFormattable\n  fullName: System.IFormattable\n  type: Interface\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Provides functionality to format the value of an object into a string representation.\n  remarks: \"The <xref:System.IFormattable> interface converts an object to its string representation based on a format string and a format provider.  \\n  \\n A format string typically defines the general appearance of an object. For example, the .NET Framework supports the following:  \\n  \\n-   Standard format strings for formatting enumeration values (see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md)).  \\n  \\n-   Standard and custom format strings for formatting numeric values (see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md)).  \\n  \\n-   Standard and custom format strings for formatting date and time values (see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md)).  \\n  \\n-   Standard and custom format strings for formatting time intervals (see [Standard TimeSpan Format Strings](~/docs/standard/base-types/standard-timespan-format-strings.md) and [Custom TimeSpan Format Strings](~/docs/standard/base-types/custom-timespan-format-strings.md)).  \\n  \\n You can also define your own format strings to support formatting of your application-defined types.  \\n  \\n A format provider returns a formatting object that typically defines the symbols used in converting an object to its string representation. For example, when you convert a number to a currency value, a format provider defines the currency symbol that appears in the result string. The .NET Framework defines three format providers:  \\n  \\n-   The <xref:System.Globalization.CultureInfo?displayProperty=fullName> class, which returns either a <xref:System.Globalization.NumberFormatInfo> object for formatting numeric values, or a <xref:System.Globalization.DateTimeFormatInfo> object for formatting date and time values.  \\n  \\n-   The <xref:System.Globalization.NumberFormatInfo?displayProperty=fullName> class, which returns an instance of itself for formatting numeric values.  \\n  \\n-   The <xref:System.Globalization.DateTimeFormatInfo?displayProperty=fullName> class, which returns an instance of itself for formatting date and time values.  \\n  \\n In addition, you can define your own custom format providers to supply culture-specific, profession-specific, or industry-specific information used in formatting. For more information about implementing custom formatting by using a custom format provider, see <xref:System.ICustomFormatter>.  \\n  \\n The <xref:System.IFormattable> interface defines a single method, <xref:System.IFormattable.ToString%2A>, that supplies formatting services for the implementing type. The <xref:System.IFormattable.ToString%2A> method can be called directly. In addition, it is called automatically by the <xref:System.Convert.ToString%28System.Object%29?displayProperty=fullName> and <xref:System.Convert.ToString%28System.Object%2CSystem.IFormatProvider%29?displayProperty=fullName> methods, and by methods that use the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) in the .NET Framework. Such methods include <xref:System.Console.WriteLine%28System.String%2CSystem.Object%29?displayProperty=fullName>, <xref:System.String.Format%2A?displayProperty=fullName>, and <xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%29?displayProperty=fullName>, among others. The <xref:System.IFormattable.ToString%2A> method is called for each format item in the method's format string.  \\n  \\n The <xref:System.IFormattable> interface is implemented by the base data types.\"\n  example:\n  - \"The following example defines a `Temperature` class that implements the <xref:System.IFormattable> interface. The class supports four format specifiers: \\\"G\\\" and \\\"C\\\", which indicate that the temperature is to be displayed in Celsius; \\\"F\\\", which indicates that the temperature is to be displayed in Fahrenheit; and \\\"K\\\", which indicates that the temperature is to be displayed in Kelvin. In addition, the <xref:System.IFormattable.ToString%2A?displayProperty=fullName> implementation also can handle a format string that is `null` or empty. The other two `ToString` methods defined by the `Temperature` class simply wrap a call to the <xref:System.IFormattable.ToString%2A?displayProperty=fullName> implementation.  \\n  \\n [!code-csharp[System.IFormattable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iformattable/cs/example1.cs#1)]\\n [!code-vb[System.IFormattable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iformattable/vb/example1.vb#1)]  \\n  \\n The following example then calls the <xref:System.IFormattable.ToString%2A?displayProperty=fullName> implementation either directly or by using a composite format string.  \\n  \\n [!code-csharp[System.IFormattable#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iformattable/cs/example1.cs#2)]\\n [!code-vb[System.IFormattable#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iformattable/vb/example1.vb#2)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public interface IFormattable\n  derivedClasses:\n  - System.Byte\n  - System.DateTime\n  - System.DateTimeOffset\n  - System.Decimal\n  - System.Double\n  - System.Enum\n  - System.FormattableString\n  - System.Guid\n  - System.Int16\n  - System.Int32\n  - System.Int64\n  - System.SByte\n  - System.Single\n  - System.TimeSpan\n  - System.UInt16\n  - System.UInt32\n  - System.UInt64\n  - System.Numerics.BigInteger\n  - System.Numerics.Complex\n  - System.Numerics.Vector2\n  - System.Numerics.Vector3\n  - System.Numerics.Vector4\n  - System.Numerics.Vector`1\n  - System.Windows.FontStretch\n  - System.Windows.FontStyle\n  - System.Windows.FontWeight\n  - System.Windows.Int32Rect\n  - System.Windows.Point\n  - System.Windows.Rect\n  - System.Windows.Size\n  - System.Windows.Vector\n  - System.Windows.Media.Brush\n  - System.Windows.Media.Color\n  - System.Windows.Media.DoubleCollection\n  - System.Windows.Media.GeneralTransform\n  - System.Windows.Media.Geometry\n  - System.Windows.Media.GradientStop\n  - System.Windows.Media.GradientStopCollection\n  - System.Windows.Media.ImageSource\n  - System.Windows.Media.Int32Collection\n  - System.Windows.Media.Matrix\n  - System.Windows.Media.PathFigure\n  - System.Windows.Media.PathFigureCollection\n  - System.Windows.Media.PointCollection\n  - System.Windows.Media.VectorCollection\n  - System.Windows.Media.Animation.KeySpline\n  - System.Windows.Media.Animation.RepeatBehavior\n  - System.Windows.Media.Media3D.Camera\n  - System.Windows.Media.Media3D.GeneralTransform3D\n  - System.Windows.Media.Media3D.Material\n  - System.Windows.Media.Media3D.Matrix3D\n  - System.Windows.Media.Media3D.Model3D\n  - System.Windows.Media.Media3D.Point3D\n  - System.Windows.Media.Media3D.Point3DCollection\n  - System.Windows.Media.Media3D.Point4D\n  - System.Windows.Media.Media3D.Quaternion\n  - System.Windows.Media.Media3D.Rect3D\n  - System.Windows.Media.Media3D.Rotation3D\n  - System.Windows.Media.Media3D.Size3D\n  - System.Windows.Media.Media3D.Vector3D\n  - System.Windows.Media.Media3D.Vector3DCollection\n  implements: []\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/IFormattable.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.IFormattable.ToString(System.String,System.IFormatProvider)\n  commentId: M:System.IFormattable.ToString(System.String,System.IFormatProvider)\n  id: ToString(System.String,System.IFormatProvider)\n  parent: System.IFormattable\n  langs:\n  - csharp\n  name: ToString(String, IFormatProvider)\n  nameWithType: IFormattable.ToString(String, IFormatProvider)\n  fullName: IFormattable.ToString(String, IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Formats the value of the current instance using the specified format.\n  remarks: \"The <xref:System.IFormattable.ToString%2A> method converts a value to a string representation that can be expressed in multiple ways. Its precise format depends on specific symbols or a specified order defined by specific cultures, professions, or industries. You can call the method directly. It is also called automatically by the <xref:System.Convert.ToString%28System.Object%29?displayProperty=fullName> and <xref:System.Convert.ToString%28System.Object%2CSystem.IFormatProvider%29?displayProperty=fullName> methods, and by methods that use the composite formatting feature in the .NET Framework, such as <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=fullName>, <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=fullName>, and <xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%5B%5D%29?displayProperty=fullName>. (For more information, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).)  \\n  \\n Composite formatting methods call the <xref:System.IFormattable.ToString%2A> method once for each format item in a format string. The parameters passed to the method depend on the specific formatting method that is called and on the content of the format item, as follows:  \\n  \\n-   If the format item does not include a format string (for example, if the format item is simply `{0}`), it is passed `null` as the value of the <xref:System.String?displayProperty=fullName> parameter.  \\n  \\n-   If the format item includes a format string (for example, `{0:G}`), that format string is passed as the value of the <xref:System.String?displayProperty=fullName> parameter.  \\n  \\n-   If the original method call does not include an <xref:System.IFormatProvider?displayProperty=fullName> parameter, <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName> is passed as the value of the <xref:System.IFormatProvider?displayProperty=fullName> parameter.  \\n  \\n-   If the original method call includes an <xref:System.IFormatProvider?displayProperty=fullName> parameter, the provider that is supplied in the method call is passed as the value of the <xref:System.IFormatProvider?displayProperty=fullName> parameter.  \\n  \\n> [!NOTE]\\n>  An object's <xref:System.IFormattable.ToString%2A> implementation is called by composite formatting methods only if they are not passed an <xref:System.ICustomFormatter> format provider, or if the <xref:System.ICustomFormatter.Format%2A> method of the custom format provider returns `null`.  \\n  \\n The .NET Framework includes three format providers, all of which implement the <xref:System.IFormatProvider> interface:  \\n  \\n-   <xref:System.Globalization.NumberFormatInfo> supplies numeric formatting information, such as the characters to use for decimal and group separators, and the spelling and placement of currency symbols in monetary values.  \\n  \\n-   <xref:System.Globalization.DateTimeFormatInfo> supplies date-related and time-related formatting information, such as the position of the month, the day, and the year in a date pattern.  \\n  \\n-   <xref:System.Globalization.CultureInfo> contains the default formatting information in a specific culture, including the numeric format information, and date-related and time-related formatting information.  \\n  \\n In addition, you can define your own custom format provider.\"\n  example:\n  - \"The following example demonstrates a `Temperature` class that implements the <xref:System.IFormattable.ToString%2A> method. This code example is part of a larger example provided for the <xref:System.IFormattable> class.  \\n  \\n [!code-csharp[System.IFormattable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iformattable/cs/example1.cs#1)]\\n [!code-vb[System.IFormattable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iformattable/vb/example1.vb#1)]\"\n  syntax:\n    content: public string ToString (string format, IFormatProvider formatProvider);\n    parameters:\n    - id: format\n      type: System.String\n      description: \"The format to use.  \\n  \\n -or-  \\n  \\n A null reference (`Nothing` in Visual Basic) to use the default format defined for the type of the <xref href=\\\"System.IFormattable\\\"></xref> implementation.\"\n    - id: formatProvider\n      type: System.IFormatProvider\n      description: \"The provider to use to format the value.  \\n  \\n -or-  \\n  \\n A null reference (`Nothing` in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.\"\n    return:\n      type: System.String\n      description: The value of the current instance in the specified format.\n  overload: System.IFormattable.ToString*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/IFormattable.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.IFormattable.ToString(System.String,System.IFormatProvider)\n  parent: System.IFormattable\n  isExternal: false\n  name: ToString(String, IFormatProvider)\n  nameWithType: IFormattable.ToString(String, IFormatProvider)\n  fullName: IFormattable.ToString(String, IFormatProvider)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IFormatProvider\n  parent: System\n  isExternal: false\n  name: IFormatProvider\n  nameWithType: IFormatProvider\n  fullName: System.IFormatProvider\n- uid: System.IFormattable.ToString*\n  parent: System.IFormattable\n  isExternal: false\n  name: ToString\n  nameWithType: IFormattable.ToString\n  fullName: IFormattable.ToString\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/IFormattable.xml\n"}