{"nodes":[{"content":"Resolves security context tokens.","nodes":[{"pos":[0,33],"content":"Resolves security context tokens.","nodes":[{"content":"Resolves security context tokens.","pos":[0,33]}]}],"pos":[2784,2818],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver\"></xref> class.","nodes":[{"pos":[0,134],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver\"></xref> class."}],"pos":[6036,6171],"yaml":true},{"content":"If `removeOldestTokensOnCacheFull` is `false`, `AddContext` throws a <xref:System.ServiceModel.QuotaExceededException> if the cache capacity has been reached.","nodes":[{"pos":[0,158],"content":"If <ph id=\"ph1\">`removeOldestTokensOnCacheFull`</ph> is <ph id=\"ph2\">`false`</ph>, <ph id=\"ph3\">`AddContext`</ph> throws a <ph id=\"ph4\">&lt;xref:System.ServiceModel.QuotaExceededException&gt;</ph> if the cache capacity has been reached.","source":"If `removeOldestTokensOnCacheFull` is `false`, `AddContext` throws a <xref:System.ServiceModel.QuotaExceededException> if the cache capacity has been reached."}],"pos":[6182,6341],"yaml":true,"extradata":"MT"},{"content":"The size of the security context cache.","nodes":[{"pos":[0,39],"content":"The size of the security context cache.","nodes":[{"content":"The size of the security context cache.","pos":[0,39]}]}],"pos":[6579,6619],"yaml":true},{"content":"`true` if the oldest tokens should be removed when the cache is full; otherwise, `false`.","nodes":[{"pos":[0,89],"content":"<ph id=\"ph1\">`true`</ph> if the oldest tokens should be removed when the cache is full; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the oldest tokens should be removed when the cache is full; otherwise, `false`."}],"pos":[6705,6797],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver\"></xref> class with the specified security context cache capacity and clock skew maximum.","nodes":[{"pos":[0,208],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver\"&gt;&lt;/xref&gt;</ph> class with the specified security context cache capacity and clock skew maximum.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver\"></xref> class with the specified security context cache capacity and clock skew maximum."}],"pos":[8323,8532],"yaml":true},{"content":"The size of the security context cache.","nodes":[{"pos":[0,39],"content":"The size of the security context cache.","nodes":[{"content":"The size of the security context cache.","pos":[0,39]}]}],"pos":[8790,8830],"yaml":true},{"content":"`true` if the oldest tokens should be removed when the cache is full; otherwise, `false`.","nodes":[{"pos":[0,89],"content":"<ph id=\"ph1\">`true`</ph> if the oldest tokens should be removed when the cache is full; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the oldest tokens should be removed when the cache is full; otherwise, `false`."}],"pos":[8916,9008],"yaml":true},{"content":"The maximum allowable time difference between client and server clock settings.","nodes":[{"pos":[0,79],"content":"The maximum allowable time difference between client and server clock settings.","nodes":[{"content":"The maximum allowable time difference between client and server clock settings.","pos":[0,79]}]}],"pos":[9075,9155],"yaml":true},{"content":"Adds a security context security token to the token cache.","nodes":[{"pos":[0,58],"content":"Adds a security context security token to the token cache.","nodes":[{"content":"Adds a security context security token to the token cache.","pos":[0,58]}]}],"pos":[10686,10745],"yaml":true},{"content":"The security context token.","nodes":[{"pos":[0,27],"content":"The security context token.","nodes":[{"content":"The security context token.","pos":[0,27]}]}],"pos":[10993,11021],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.RemoveOldestTokensOnCacheFull\"></xref> property is `false` and the cache capacity has been reached or exceeded.","nodes":[{"pos":[0,200],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.RemoveOldestTokensOnCacheFull\"&gt;&lt;/xref&gt;</ph> property is <ph id=\"ph2\">`false`</ph> and the cache capacity has been reached or exceeded.","source":"The <xref href=\"System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.RemoveOldestTokensOnCacheFull\"></xref> property is `false` and the cache capacity has been reached or exceeded."}],"pos":[11262,11463],"yaml":true},{"content":"Clears the token cache of content.","nodes":[{"pos":[0,34],"content":"Clears the token cache of content.","nodes":[{"content":"Clears the token cache of content.","pos":[0,34]}]}],"pos":[12621,12656],"yaml":true},{"content":"Returns the maximum allowable time difference between client and server clock settings.","nodes":[{"pos":[0,87],"content":"Returns the maximum allowable time difference between client and server clock settings.","nodes":[{"content":"Returns the maximum allowable time difference between client and server clock settings.","pos":[0,87]}]}],"pos":[13975,14063],"yaml":true},{"content":"The maximum allowable time difference between client and server clock settings.","nodes":[{"pos":[0,79],"content":"The maximum allowable time difference between client and server clock settings.","nodes":[{"content":"The maximum allowable time difference between client and server clock settings.","pos":[0,79]}]}],"pos":[14180,14260],"yaml":true},{"content":"Gets a collection of security context security token IDs that match a specified context ID.","nodes":[{"pos":[0,91],"content":"Gets a collection of security context security token IDs that match a specified context ID.","nodes":[{"content":"Gets a collection of security context security token IDs that match a specified context ID.","pos":[0,91]}]}],"pos":[15624,15716],"yaml":true},{"content":"The specified security context ID.","nodes":[{"pos":[0,34],"content":"The specified security context ID.","nodes":[{"content":"The specified security context ID.","pos":[0,34]}]}],"pos":[15989,16024],"yaml":true},{"content":"A generic collection of security context tokens.","nodes":[{"pos":[0,48],"content":"A generic collection of security context tokens.","nodes":[{"content":"A generic collection of security context tokens.","pos":[0,48]}]}],"pos":[16175,16224],"yaml":true},{"content":"Gets the security context security token ID that matches a specified context ID and generation.","nodes":[{"pos":[0,95],"content":"Gets the security context security token ID that matches a specified context ID and generation.","nodes":[{"content":"Gets the security context security token ID that matches a specified context ID and generation.","pos":[0,95]}]}],"pos":[17659,17755],"yaml":true},{"content":"The specified security context ID.","nodes":[{"pos":[0,34],"content":"The specified security context ID.","nodes":[{"content":"The specified security context ID.","pos":[0,34]}]}],"pos":[18013,18048],"yaml":true},{"content":"The generation.","nodes":[{"pos":[0,15],"content":"The generation.","nodes":[{"content":"The generation.","pos":[0,15]}]}],"pos":[18120,18136],"yaml":true},{"content":"The matching security context token.","nodes":[{"pos":[0,36],"content":"The matching security context token.","nodes":[{"content":"The matching security context token.","pos":[0,36]}]}],"pos":[18244,18281],"yaml":true},{"content":"Removes all tokens from the cache that match a given context ID.","nodes":[{"pos":[0,64],"content":"Removes all tokens from the cache that match a given context ID.","nodes":[{"content":"Removes all tokens from the cache that match a given context ID.","pos":[0,64]}]}],"pos":[19664,19729],"yaml":true},{"content":"The specified security context ID.","nodes":[{"pos":[0,34],"content":"The specified security context ID.","nodes":[{"content":"The specified security context ID.","pos":[0,34]}]}],"pos":[19902,19937],"yaml":true},{"content":"Removes the token from the cache that matches a given context ID and generation.","nodes":[{"pos":[0,80],"content":"Removes the token from the cache that matches a given context ID and generation.","nodes":[{"content":"Removes the token from the cache that matches a given context ID and generation.","pos":[0,80]}]}],"pos":[21393,21474],"yaml":true},{"content":"The specified security context ID.","nodes":[{"pos":[0,34],"content":"The specified security context ID.","nodes":[{"content":"The specified security context ID.","pos":[0,34]}]}],"pos":[21675,21710],"yaml":true},{"content":"The generation.","nodes":[{"pos":[0,15],"content":"The generation.","nodes":[{"content":"The generation.","pos":[0,15]}]}],"pos":[21782,21798],"yaml":true},{"content":"Gets a value that indicates whether the oldest tokens should be removed when the cache is full.","nodes":[{"pos":[0,95],"content":"Gets a value that indicates whether the oldest tokens should be removed when the cache is full.","nodes":[{"content":"Gets a value that indicates whether the oldest tokens should be removed when the cache is full.","pos":[0,95]}]}],"pos":[23165,23261],"yaml":true},{"content":"`true` if the oldest tokens should be removed when the cache is full; otherwise, `false`.","nodes":[{"pos":[0,89],"content":"<ph id=\"ph1\">`true`</ph> if the oldest tokens should be removed when the cache is full; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the oldest tokens should be removed when the cache is full; otherwise, `false`."}],"pos":[23393,23485],"yaml":true},{"content":"Gets the security context token cache size.","nodes":[{"pos":[0,43],"content":"Gets the security context token cache size.","nodes":[{"content":"Gets the security context token cache size.","pos":[0,43]}]}],"pos":[24892,24936],"yaml":true},{"content":"The security context token cache size.","nodes":[{"pos":[0,38],"content":"The security context token cache size.","nodes":[{"content":"The security context token cache size.","pos":[0,38]}]}],"pos":[25069,25108],"yaml":true},{"content":"Attempts to add a token to the cache.","nodes":[{"pos":[0,37],"content":"Attempts to add a token to the cache.","nodes":[{"content":"Attempts to add a token to the cache.","pos":[0,37]}]}],"pos":[26685,26723],"yaml":true},{"content":"The security context token.","nodes":[{"pos":[0,27],"content":"The security context token.","nodes":[{"content":"The security context token.","pos":[0,27]}]}],"pos":[26974,27002],"yaml":true},{"content":"`true` if the token was added successfully to the cache; otherwise, `false`.","nodes":[{"pos":[0,76],"content":"<ph id=\"ph1\">`true`</ph> if the token was added successfully to the cache; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the token was added successfully to the cache; otherwise, `false`."}],"pos":[27060,27139],"yaml":true},{"content":"The <code>token</code> is `null`.","nodes":[{"pos":[0,33],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">token</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph2\">`null`</ph>.","source":"The <code>token</code> is `null`."}],"pos":[27355,27389],"yaml":true},{"content":"The <code>token</code> date or time is outside limits.","nodes":[{"pos":[0,54],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">token</ph><ept id=\"p1\">&lt;/code&gt;</ept> date or time is outside limits.","source":"The <code>token</code> date or time is outside limits."}],"pos":[27483,27538],"yaml":true},{"content":"Attempts to resolve the security key core, given a specified key identifier clause.","nodes":[{"pos":[0,83],"content":"Attempts to resolve the security key core, given a specified key identifier clause.","nodes":[{"content":"Attempts to resolve the security key core, given a specified key identifier clause.","pos":[0,83]}]}],"pos":[29182,29266],"yaml":true},{"content":"The security key identifier clause.","nodes":[{"pos":[0,35],"content":"The security key identifier clause.","nodes":[{"content":"The security key identifier clause.","pos":[0,35]}]}],"pos":[29600,29636],"yaml":true},{"content":"When this method returns, contains resolved key core. This parameter is passed uninitialized.","nodes":[{"pos":[0,93],"content":"When this method returns, contains resolved key core. This parameter is passed uninitialized.","nodes":[{"content":"When this method returns, contains resolved key core. This parameter is passed uninitialized.","pos":[0,93],"nodes":[{"content":"When this method returns, contains resolved key core.","pos":[0,53]},{"content":"This parameter is passed uninitialized.","pos":[54,93]}]}]}],"pos":[29721,29815],"yaml":true},{"content":"`true` if the key core was successfully resolved; otherwise, `false`.","nodes":[{"pos":[0,69],"content":"<ph id=\"ph1\">`true`</ph> if the key core was successfully resolved; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the key core was successfully resolved; otherwise, `false`."}],"pos":[29873,29945],"yaml":true},{"content":"Attempts to resolve the token, given a specified key identifier.","nodes":[{"pos":[0,64],"content":"Attempts to resolve the token, given a specified key identifier.","nodes":[{"content":"Attempts to resolve the token, given a specified key identifier.","pos":[0,64]}]}],"pos":[31658,31723],"yaml":true},{"content":"The security key identifier.","nodes":[{"pos":[0,28],"content":"The security key identifier.","nodes":[{"content":"The security key identifier.","pos":[0,28]}]}],"pos":[32031,32060],"yaml":true},{"content":"When this method returns, contains the resolved key core. This parameter is passed uninitialized.","nodes":[{"pos":[0,97],"content":"When this method returns, contains the resolved key core. This parameter is passed uninitialized.","nodes":[{"content":"When this method returns, contains the resolved key core. This parameter is passed uninitialized.","pos":[0,97],"nodes":[{"content":"When this method returns, contains the resolved key core.","pos":[0,57]},{"content":"This parameter is passed uninitialized.","pos":[58,97]}]}]}],"pos":[32149,32247],"yaml":true},{"content":"`true` if the key token was successfully resolved; otherwise, `false`.","nodes":[{"pos":[0,70],"content":"<ph id=\"ph1\">`true`</ph> if the key token was successfully resolved; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the key token was successfully resolved; otherwise, `false`."}],"pos":[32305,32378],"yaml":true},{"content":"Attempts to resolve the token, given a specified key identifier clause.","nodes":[{"pos":[0,71],"content":"Attempts to resolve the token, given a specified key identifier clause.","nodes":[{"content":"Attempts to resolve the token, given a specified key identifier clause.","pos":[0,71]}]}],"pos":[34121,34193],"yaml":true},{"content":"The security key identifier clause.","nodes":[{"pos":[0,35],"content":"The security key identifier clause.","nodes":[{"content":"The security key identifier clause.","pos":[0,35]}]}],"pos":[34525,34561],"yaml":true},{"content":"When this method returns, contains the resolved key core. This parameter is passed uninitialized.","nodes":[{"pos":[0,97],"content":"When this method returns, contains the resolved key core. This parameter is passed uninitialized.","nodes":[{"content":"When this method returns, contains the resolved key core. This parameter is passed uninitialized.","pos":[0,97],"nodes":[{"content":"When this method returns, contains the resolved key core.","pos":[0,57]},{"content":"This parameter is passed uninitialized.","pos":[58,97]}]}]}],"pos":[34650,34748],"yaml":true},{"content":"`true` if the key token was successfully resolved; otherwise, `false`.","nodes":[{"pos":[0,70],"content":"<ph id=\"ph1\">`true`</ph> if the key token was successfully resolved; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the key token was successfully resolved; otherwise, `false`."}],"pos":[34806,34879],"yaml":true},{"content":"Updates the expiration date for a token in the cache.","nodes":[{"pos":[0,53],"content":"Updates the expiration date for a token in the cache.","nodes":[{"content":"Updates the expiration date for a token in the cache.","pos":[0,53]}]}],"pos":[36586,36640],"yaml":true},{"content":"The security context.","nodes":[{"pos":[0,21],"content":"The security context.","nodes":[{"content":"The security context.","pos":[0,21]}]}],"pos":[36931,36953],"yaml":true},{"content":"The new expiration time and date.","nodes":[{"pos":[0,33],"content":"The new expiration time and date.","nodes":[{"content":"The new expiration time and date.","pos":[0,33]}]}],"pos":[37025,37059],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver\n  commentId: T:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver\n  id: SecurityContextSecurityTokenResolver\n  children:\n  - System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.#ctor(System.Int32,System.Boolean)\n  - System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.#ctor(System.Int32,System.Boolean,System.TimeSpan)\n  - System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.AddContext(System.ServiceModel.Security.Tokens.SecurityContextSecurityToken)\n  - System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.ClearContexts\n  - System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.ClockSkew\n  - System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.GetAllContexts(System.Xml.UniqueId)\n  - System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.GetContext(System.Xml.UniqueId,System.Xml.UniqueId)\n  - System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.RemoveAllContexts(System.Xml.UniqueId)\n  - System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.RemoveContext(System.Xml.UniqueId,System.Xml.UniqueId)\n  - System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.RemoveOldestTokensOnCacheFull\n  - System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.SecurityContextTokenCacheCapacity\n  - System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.TryAddContext(System.ServiceModel.Security.Tokens.SecurityContextSecurityToken)\n  - System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)\n  - System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)\n  - System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)\n  - System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.UpdateContextCachingTime(System.ServiceModel.Security.Tokens.SecurityContextSecurityToken,System.DateTime)\n  langs:\n  - csharp\n  name: SecurityContextSecurityTokenResolver\n  nameWithType: SecurityContextSecurityTokenResolver\n  fullName: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver\n  type: Class\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security.Tokens\n  summary: Resolves security context tokens.\n  syntax:\n    content: 'public class SecurityContextSecurityTokenResolver : System.IdentityModel.Selectors.SecurityTokenResolver, System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache'\n  inheritance:\n  - System.Object\n  - System.IdentityModel.Selectors.SecurityTokenResolver\n  implements:\n  - System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache\n  inheritedMembers:\n  - System.IdentityModel.Selectors.SecurityTokenResolver.CreateDefaultSecurityTokenResolver(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityToken},System.Boolean)\n  - System.IdentityModel.Selectors.SecurityTokenResolver.LoadCustomConfiguration(System.Xml.XmlNodeList)\n  - System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  - System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier)\n  - System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  - System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)\n  - System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)\n  - System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security.Tokens/SecurityContextSecurityTokenResolver.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.#ctor(System.Int32,System.Boolean)\n  commentId: M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.#ctor(System.Int32,System.Boolean)\n  id: '#ctor(System.Int32,System.Boolean)'\n  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver\n  langs:\n  - csharp\n  name: SecurityContextSecurityTokenResolver(Int32, Boolean)\n  nameWithType: SecurityContextSecurityTokenResolver.SecurityContextSecurityTokenResolver(Int32, Boolean)\n  fullName: SecurityContextSecurityTokenResolver.SecurityContextSecurityTokenResolver(Int32, Boolean)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver\"></xref> class.\n  remarks: If `removeOldestTokensOnCacheFull` is `false`, `AddContext` throws a <xref:System.ServiceModel.QuotaExceededException> if the cache capacity has been reached.\n  syntax:\n    content: public SecurityContextSecurityTokenResolver (int securityContextCacheCapacity, bool removeOldestTokensOnCacheFull);\n    parameters:\n    - id: securityContextCacheCapacity\n      type: System.Int32\n      description: The size of the security context cache.\n    - id: removeOldestTokensOnCacheFull\n      type: System.Boolean\n      description: '`true` if the oldest tokens should be removed when the cache is full; otherwise, `false`.'\n  overload: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security.Tokens/SecurityContextSecurityTokenResolver.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.#ctor(System.Int32,System.Boolean,System.TimeSpan)\n  commentId: M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.#ctor(System.Int32,System.Boolean,System.TimeSpan)\n  id: '#ctor(System.Int32,System.Boolean,System.TimeSpan)'\n  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver\n  langs:\n  - csharp\n  name: SecurityContextSecurityTokenResolver(Int32, Boolean, TimeSpan)\n  nameWithType: SecurityContextSecurityTokenResolver.SecurityContextSecurityTokenResolver(Int32, Boolean, TimeSpan)\n  fullName: SecurityContextSecurityTokenResolver.SecurityContextSecurityTokenResolver(Int32, Boolean, TimeSpan)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver\"></xref> class with the specified security context cache capacity and clock skew maximum.\n  syntax:\n    content: public SecurityContextSecurityTokenResolver (int securityContextCacheCapacity, bool removeOldestTokensOnCacheFull, TimeSpan clockSkew);\n    parameters:\n    - id: securityContextCacheCapacity\n      type: System.Int32\n      description: The size of the security context cache.\n    - id: removeOldestTokensOnCacheFull\n      type: System.Boolean\n      description: '`true` if the oldest tokens should be removed when the cache is full; otherwise, `false`.'\n    - id: clockSkew\n      type: System.TimeSpan\n      description: The maximum allowable time difference between client and server clock settings.\n  overload: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security.Tokens/SecurityContextSecurityTokenResolver.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.AddContext(System.ServiceModel.Security.Tokens.SecurityContextSecurityToken)\n  commentId: M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.AddContext(System.ServiceModel.Security.Tokens.SecurityContextSecurityToken)\n  id: AddContext(System.ServiceModel.Security.Tokens.SecurityContextSecurityToken)\n  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver\n  langs:\n  - csharp\n  name: AddContext(SecurityContextSecurityToken)\n  nameWithType: SecurityContextSecurityTokenResolver.AddContext(SecurityContextSecurityToken)\n  fullName: SecurityContextSecurityTokenResolver.AddContext(SecurityContextSecurityToken)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security.Tokens\n  summary: Adds a security context security token to the token cache.\n  syntax:\n    content: public void AddContext (System.ServiceModel.Security.Tokens.SecurityContextSecurityToken token);\n    parameters:\n    - id: token\n      type: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken\n      description: The security context token.\n  overload: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.AddContext*\n  exceptions:\n  - type: System.ServiceModel.QuotaExceededException\n    commentId: T:System.ServiceModel.QuotaExceededException\n    description: The <xref href=\"System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.RemoveOldestTokensOnCacheFull\"></xref> property is `false` and the cache capacity has been reached or exceeded.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security.Tokens/SecurityContextSecurityTokenResolver.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.ClearContexts\n  commentId: M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.ClearContexts\n  id: ClearContexts\n  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver\n  langs:\n  - csharp\n  name: ClearContexts()\n  nameWithType: SecurityContextSecurityTokenResolver.ClearContexts()\n  fullName: SecurityContextSecurityTokenResolver.ClearContexts()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security.Tokens\n  summary: Clears the token cache of content.\n  syntax:\n    content: public void ClearContexts ();\n    parameters: []\n  overload: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.ClearContexts*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security.Tokens/SecurityContextSecurityTokenResolver.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.ClockSkew\n  commentId: P:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.ClockSkew\n  id: ClockSkew\n  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver\n  langs:\n  - csharp\n  name: ClockSkew\n  nameWithType: SecurityContextSecurityTokenResolver.ClockSkew\n  fullName: SecurityContextSecurityTokenResolver.ClockSkew\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security.Tokens\n  summary: Returns the maximum allowable time difference between client and server clock settings.\n  syntax:\n    content: public TimeSpan ClockSkew { get; }\n    return:\n      type: System.TimeSpan\n      description: The maximum allowable time difference between client and server clock settings.\n  overload: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.ClockSkew*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security.Tokens/SecurityContextSecurityTokenResolver.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.GetAllContexts(System.Xml.UniqueId)\n  commentId: M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.GetAllContexts(System.Xml.UniqueId)\n  id: GetAllContexts(System.Xml.UniqueId)\n  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver\n  langs:\n  - csharp\n  name: GetAllContexts(UniqueId)\n  nameWithType: SecurityContextSecurityTokenResolver.GetAllContexts(UniqueId)\n  fullName: SecurityContextSecurityTokenResolver.GetAllContexts(UniqueId)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security.Tokens\n  summary: Gets a collection of security context security token IDs that match a specified context ID.\n  syntax:\n    content: public System.Collections.ObjectModel.Collection<System.ServiceModel.Security.Tokens.SecurityContextSecurityToken> GetAllContexts (System.Xml.UniqueId contextId);\n    parameters:\n    - id: contextId\n      type: System.Xml.UniqueId\n      description: The specified security context ID.\n    return:\n      type: System.Collections.ObjectModel.Collection{System.ServiceModel.Security.Tokens.SecurityContextSecurityToken}\n      description: A generic collection of security context tokens.\n  overload: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.GetAllContexts*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security.Tokens/SecurityContextSecurityTokenResolver.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.GetContext(System.Xml.UniqueId,System.Xml.UniqueId)\n  commentId: M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.GetContext(System.Xml.UniqueId,System.Xml.UniqueId)\n  id: GetContext(System.Xml.UniqueId,System.Xml.UniqueId)\n  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver\n  langs:\n  - csharp\n  name: GetContext(UniqueId, UniqueId)\n  nameWithType: SecurityContextSecurityTokenResolver.GetContext(UniqueId, UniqueId)\n  fullName: SecurityContextSecurityTokenResolver.GetContext(UniqueId, UniqueId)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security.Tokens\n  summary: Gets the security context security token ID that matches a specified context ID and generation.\n  syntax:\n    content: public System.ServiceModel.Security.Tokens.SecurityContextSecurityToken GetContext (System.Xml.UniqueId contextId, System.Xml.UniqueId generation);\n    parameters:\n    - id: contextId\n      type: System.Xml.UniqueId\n      description: The specified security context ID.\n    - id: generation\n      type: System.Xml.UniqueId\n      description: The generation.\n    return:\n      type: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken\n      description: The matching security context token.\n  overload: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.GetContext*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security.Tokens/SecurityContextSecurityTokenResolver.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.RemoveAllContexts(System.Xml.UniqueId)\n  commentId: M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.RemoveAllContexts(System.Xml.UniqueId)\n  id: RemoveAllContexts(System.Xml.UniqueId)\n  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver\n  langs:\n  - csharp\n  name: RemoveAllContexts(UniqueId)\n  nameWithType: SecurityContextSecurityTokenResolver.RemoveAllContexts(UniqueId)\n  fullName: SecurityContextSecurityTokenResolver.RemoveAllContexts(UniqueId)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security.Tokens\n  summary: Removes all tokens from the cache that match a given context ID.\n  syntax:\n    content: public void RemoveAllContexts (System.Xml.UniqueId contextId);\n    parameters:\n    - id: contextId\n      type: System.Xml.UniqueId\n      description: The specified security context ID.\n  overload: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.RemoveAllContexts*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security.Tokens/SecurityContextSecurityTokenResolver.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.RemoveContext(System.Xml.UniqueId,System.Xml.UniqueId)\n  commentId: M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.RemoveContext(System.Xml.UniqueId,System.Xml.UniqueId)\n  id: RemoveContext(System.Xml.UniqueId,System.Xml.UniqueId)\n  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver\n  langs:\n  - csharp\n  name: RemoveContext(UniqueId, UniqueId)\n  nameWithType: SecurityContextSecurityTokenResolver.RemoveContext(UniqueId, UniqueId)\n  fullName: SecurityContextSecurityTokenResolver.RemoveContext(UniqueId, UniqueId)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security.Tokens\n  summary: Removes the token from the cache that matches a given context ID and generation.\n  syntax:\n    content: public void RemoveContext (System.Xml.UniqueId contextId, System.Xml.UniqueId generation);\n    parameters:\n    - id: contextId\n      type: System.Xml.UniqueId\n      description: The specified security context ID.\n    - id: generation\n      type: System.Xml.UniqueId\n      description: The generation.\n  overload: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.RemoveContext*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security.Tokens/SecurityContextSecurityTokenResolver.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.RemoveOldestTokensOnCacheFull\n  commentId: P:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.RemoveOldestTokensOnCacheFull\n  id: RemoveOldestTokensOnCacheFull\n  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver\n  langs:\n  - csharp\n  name: RemoveOldestTokensOnCacheFull\n  nameWithType: SecurityContextSecurityTokenResolver.RemoveOldestTokensOnCacheFull\n  fullName: SecurityContextSecurityTokenResolver.RemoveOldestTokensOnCacheFull\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security.Tokens\n  summary: Gets a value that indicates whether the oldest tokens should be removed when the cache is full.\n  syntax:\n    content: public bool RemoveOldestTokensOnCacheFull { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the oldest tokens should be removed when the cache is full; otherwise, `false`.'\n  overload: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.RemoveOldestTokensOnCacheFull*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security.Tokens/SecurityContextSecurityTokenResolver.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.SecurityContextTokenCacheCapacity\n  commentId: P:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.SecurityContextTokenCacheCapacity\n  id: SecurityContextTokenCacheCapacity\n  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver\n  langs:\n  - csharp\n  name: SecurityContextTokenCacheCapacity\n  nameWithType: SecurityContextSecurityTokenResolver.SecurityContextTokenCacheCapacity\n  fullName: SecurityContextSecurityTokenResolver.SecurityContextTokenCacheCapacity\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security.Tokens\n  summary: Gets the security context token cache size.\n  syntax:\n    content: public int SecurityContextTokenCacheCapacity { get; }\n    return:\n      type: System.Int32\n      description: The security context token cache size.\n  overload: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.SecurityContextTokenCacheCapacity*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security.Tokens/SecurityContextSecurityTokenResolver.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.TryAddContext(System.ServiceModel.Security.Tokens.SecurityContextSecurityToken)\n  commentId: M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.TryAddContext(System.ServiceModel.Security.Tokens.SecurityContextSecurityToken)\n  id: TryAddContext(System.ServiceModel.Security.Tokens.SecurityContextSecurityToken)\n  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver\n  langs:\n  - csharp\n  name: TryAddContext(SecurityContextSecurityToken)\n  nameWithType: SecurityContextSecurityTokenResolver.TryAddContext(SecurityContextSecurityToken)\n  fullName: SecurityContextSecurityTokenResolver.TryAddContext(SecurityContextSecurityToken)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security.Tokens\n  summary: Attempts to add a token to the cache.\n  syntax:\n    content: public bool TryAddContext (System.ServiceModel.Security.Tokens.SecurityContextSecurityToken token);\n    parameters:\n    - id: token\n      type: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken\n      description: The security context token.\n    return:\n      type: System.Boolean\n      description: '`true` if the token was added successfully to the cache; otherwise, `false`.'\n  overload: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.TryAddContext*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>token</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>token</code> date or time is outside limits.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security.Tokens/SecurityContextSecurityTokenResolver.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)\n  commentId: M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)\n  id: TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)\n  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver\n  langs:\n  - csharp\n  name: TryResolveSecurityKeyCore(SecurityKeyIdentifierClause, SecurityKey)\n  nameWithType: SecurityContextSecurityTokenResolver.TryResolveSecurityKeyCore(SecurityKeyIdentifierClause, SecurityKey)\n  fullName: SecurityContextSecurityTokenResolver.TryResolveSecurityKeyCore(SecurityKeyIdentifierClause, SecurityKey)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security.Tokens\n  summary: Attempts to resolve the security key core, given a specified key identifier clause.\n  syntax:\n    content: protected override bool TryResolveSecurityKeyCore (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityKey key);\n    parameters:\n    - id: keyIdentifierClause\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n      description: The security key identifier clause.\n    - id: key\n      type: System.IdentityModel.Tokens.SecurityKey\n      description: When this method returns, contains resolved key core. This parameter is passed uninitialized.\n    return:\n      type: System.Boolean\n      description: '`true` if the key core was successfully resolved; otherwise, `false`.'\n  overload: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.TryResolveSecurityKeyCore*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security.Tokens/SecurityContextSecurityTokenResolver.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)\n  commentId: M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)\n  id: TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)\n  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver\n  langs:\n  - csharp\n  name: TryResolveTokenCore(SecurityKeyIdentifier, SecurityToken)\n  nameWithType: SecurityContextSecurityTokenResolver.TryResolveTokenCore(SecurityKeyIdentifier, SecurityToken)\n  fullName: SecurityContextSecurityTokenResolver.TryResolveTokenCore(SecurityKeyIdentifier, SecurityToken)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security.Tokens\n  summary: Attempts to resolve the token, given a specified key identifier.\n  syntax:\n    content: protected override bool TryResolveTokenCore (System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier, out System.IdentityModel.Tokens.SecurityToken token);\n    parameters:\n    - id: keyIdentifier\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifier\n      description: The security key identifier.\n    - id: token\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: When this method returns, contains the resolved key core. This parameter is passed uninitialized.\n    return:\n      type: System.Boolean\n      description: '`true` if the key token was successfully resolved; otherwise, `false`.'\n  overload: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.TryResolveTokenCore*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security.Tokens/SecurityContextSecurityTokenResolver.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)\n  commentId: M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)\n  id: TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)\n  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver\n  langs:\n  - csharp\n  name: TryResolveTokenCore(SecurityKeyIdentifierClause, SecurityToken)\n  nameWithType: SecurityContextSecurityTokenResolver.TryResolveTokenCore(SecurityKeyIdentifierClause, SecurityToken)\n  fullName: SecurityContextSecurityTokenResolver.TryResolveTokenCore(SecurityKeyIdentifierClause, SecurityToken)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security.Tokens\n  summary: Attempts to resolve the token, given a specified key identifier clause.\n  syntax:\n    content: protected override bool TryResolveTokenCore (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityToken token);\n    parameters:\n    - id: keyIdentifierClause\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n      description: The security key identifier clause.\n    - id: token\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: When this method returns, contains the resolved key core. This parameter is passed uninitialized.\n    return:\n      type: System.Boolean\n      description: '`true` if the key token was successfully resolved; otherwise, `false`.'\n  overload: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.TryResolveTokenCore*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security.Tokens/SecurityContextSecurityTokenResolver.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.UpdateContextCachingTime(System.ServiceModel.Security.Tokens.SecurityContextSecurityToken,System.DateTime)\n  commentId: M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.UpdateContextCachingTime(System.ServiceModel.Security.Tokens.SecurityContextSecurityToken,System.DateTime)\n  id: UpdateContextCachingTime(System.ServiceModel.Security.Tokens.SecurityContextSecurityToken,System.DateTime)\n  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver\n  langs:\n  - csharp\n  name: UpdateContextCachingTime(SecurityContextSecurityToken, DateTime)\n  nameWithType: SecurityContextSecurityTokenResolver.UpdateContextCachingTime(SecurityContextSecurityToken, DateTime)\n  fullName: SecurityContextSecurityTokenResolver.UpdateContextCachingTime(SecurityContextSecurityToken, DateTime)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security.Tokens\n  summary: Updates the expiration date for a token in the cache.\n  syntax:\n    content: public void UpdateContextCachingTime (System.ServiceModel.Security.Tokens.SecurityContextSecurityToken context, DateTime expirationTime);\n    parameters:\n    - id: context\n      type: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken\n      description: The security context.\n    - id: expirationTime\n      type: System.DateTime\n      description: The new expiration time and date.\n  overload: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.UpdateContextCachingTime*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security.Tokens/SecurityContextSecurityTokenResolver.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver\n  parent: System.IdentityModel.Selectors\n  isExternal: false\n  name: SecurityTokenResolver\n  nameWithType: SecurityTokenResolver\n  fullName: System.IdentityModel.Selectors.SecurityTokenResolver\n- uid: System.ServiceModel.QuotaExceededException\n  parent: System.ServiceModel\n  isExternal: false\n  name: QuotaExceededException\n  nameWithType: QuotaExceededException\n  fullName: System.ServiceModel.QuotaExceededException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.#ctor(System.Int32,System.Boolean)\n  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver\n  isExternal: false\n  name: SecurityContextSecurityTokenResolver(Int32, Boolean)\n  nameWithType: SecurityContextSecurityTokenResolver.SecurityContextSecurityTokenResolver(Int32, Boolean)\n  fullName: SecurityContextSecurityTokenResolver.SecurityContextSecurityTokenResolver(Int32, Boolean)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.#ctor(System.Int32,System.Boolean,System.TimeSpan)\n  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver\n  isExternal: false\n  name: SecurityContextSecurityTokenResolver(Int32, Boolean, TimeSpan)\n  nameWithType: SecurityContextSecurityTokenResolver.SecurityContextSecurityTokenResolver(Int32, Boolean, TimeSpan)\n  fullName: SecurityContextSecurityTokenResolver.SecurityContextSecurityTokenResolver(Int32, Boolean, TimeSpan)\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.AddContext(System.ServiceModel.Security.Tokens.SecurityContextSecurityToken)\n  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver\n  isExternal: false\n  name: AddContext(SecurityContextSecurityToken)\n  nameWithType: SecurityContextSecurityTokenResolver.AddContext(SecurityContextSecurityToken)\n  fullName: SecurityContextSecurityTokenResolver.AddContext(SecurityContextSecurityToken)\n- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken\n  parent: System.ServiceModel.Security.Tokens\n  isExternal: false\n  name: SecurityContextSecurityToken\n  nameWithType: SecurityContextSecurityToken\n  fullName: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken\n- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.ClearContexts\n  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver\n  isExternal: false\n  name: ClearContexts()\n  nameWithType: SecurityContextSecurityTokenResolver.ClearContexts()\n  fullName: SecurityContextSecurityTokenResolver.ClearContexts()\n- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.ClockSkew\n  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver\n  isExternal: false\n  name: ClockSkew\n  nameWithType: SecurityContextSecurityTokenResolver.ClockSkew\n  fullName: SecurityContextSecurityTokenResolver.ClockSkew\n- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.GetAllContexts(System.Xml.UniqueId)\n  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver\n  isExternal: false\n  name: GetAllContexts(UniqueId)\n  nameWithType: SecurityContextSecurityTokenResolver.GetAllContexts(UniqueId)\n  fullName: SecurityContextSecurityTokenResolver.GetAllContexts(UniqueId)\n- uid: System.Collections.ObjectModel.Collection`1\n  name: Collection<T>\n  nameWithType: Collection<T>\n  fullName: System.Collections.ObjectModel.Collection<T>\n- uid: System.Collections.ObjectModel.Collection{System.ServiceModel.Security.Tokens.SecurityContextSecurityToken}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: Collection<SecurityContextSecurityToken>\n  nameWithType: Collection<SecurityContextSecurityToken>\n  fullName: System.Collections.ObjectModel.Collection<System.ServiceModel.Security.Tokens.SecurityContextSecurityToken>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.Collection`1\n    name: Collection\n    nameWithType: Collection\n    fullName: System.Collections.ObjectModel.Collection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken\n    name: SecurityContextSecurityToken\n    nameWithType: SecurityContextSecurityToken\n    fullName: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Xml.UniqueId\n  parent: System.Xml\n  isExternal: false\n  name: UniqueId\n  nameWithType: UniqueId\n  fullName: System.Xml.UniqueId\n- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.GetContext(System.Xml.UniqueId,System.Xml.UniqueId)\n  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver\n  isExternal: false\n  name: GetContext(UniqueId, UniqueId)\n  nameWithType: SecurityContextSecurityTokenResolver.GetContext(UniqueId, UniqueId)\n  fullName: SecurityContextSecurityTokenResolver.GetContext(UniqueId, UniqueId)\n- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.RemoveAllContexts(System.Xml.UniqueId)\n  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver\n  isExternal: false\n  name: RemoveAllContexts(UniqueId)\n  nameWithType: SecurityContextSecurityTokenResolver.RemoveAllContexts(UniqueId)\n  fullName: SecurityContextSecurityTokenResolver.RemoveAllContexts(UniqueId)\n- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.RemoveContext(System.Xml.UniqueId,System.Xml.UniqueId)\n  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver\n  isExternal: false\n  name: RemoveContext(UniqueId, UniqueId)\n  nameWithType: SecurityContextSecurityTokenResolver.RemoveContext(UniqueId, UniqueId)\n  fullName: SecurityContextSecurityTokenResolver.RemoveContext(UniqueId, UniqueId)\n- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.RemoveOldestTokensOnCacheFull\n  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver\n  isExternal: false\n  name: RemoveOldestTokensOnCacheFull\n  nameWithType: SecurityContextSecurityTokenResolver.RemoveOldestTokensOnCacheFull\n  fullName: SecurityContextSecurityTokenResolver.RemoveOldestTokensOnCacheFull\n- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.SecurityContextTokenCacheCapacity\n  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver\n  isExternal: false\n  name: SecurityContextTokenCacheCapacity\n  nameWithType: SecurityContextSecurityTokenResolver.SecurityContextTokenCacheCapacity\n  fullName: SecurityContextSecurityTokenResolver.SecurityContextTokenCacheCapacity\n- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.TryAddContext(System.ServiceModel.Security.Tokens.SecurityContextSecurityToken)\n  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver\n  isExternal: false\n  name: TryAddContext(SecurityContextSecurityToken)\n  nameWithType: SecurityContextSecurityTokenResolver.TryAddContext(SecurityContextSecurityToken)\n  fullName: SecurityContextSecurityTokenResolver.TryAddContext(SecurityContextSecurityToken)\n- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)\n  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver\n  isExternal: false\n  name: TryResolveSecurityKeyCore(SecurityKeyIdentifierClause, SecurityKey)\n  nameWithType: SecurityContextSecurityTokenResolver.TryResolveSecurityKeyCore(SecurityKeyIdentifierClause, SecurityKey)\n  fullName: SecurityContextSecurityTokenResolver.TryResolveSecurityKeyCore(SecurityKeyIdentifierClause, SecurityKey)\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityKeyIdentifierClause\n  nameWithType: SecurityKeyIdentifierClause\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n- uid: System.IdentityModel.Tokens.SecurityKey\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityKey\n  nameWithType: SecurityKey\n  fullName: System.IdentityModel.Tokens.SecurityKey\n- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)\n  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver\n  isExternal: false\n  name: TryResolveTokenCore(SecurityKeyIdentifier, SecurityToken)\n  nameWithType: SecurityContextSecurityTokenResolver.TryResolveTokenCore(SecurityKeyIdentifier, SecurityToken)\n  fullName: SecurityContextSecurityTokenResolver.TryResolveTokenCore(SecurityKeyIdentifier, SecurityToken)\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityKeyIdentifier\n  nameWithType: SecurityKeyIdentifier\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier\n- uid: System.IdentityModel.Tokens.SecurityToken\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityToken\n  nameWithType: SecurityToken\n  fullName: System.IdentityModel.Tokens.SecurityToken\n- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)\n  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver\n  isExternal: false\n  name: TryResolveTokenCore(SecurityKeyIdentifierClause, SecurityToken)\n  nameWithType: SecurityContextSecurityTokenResolver.TryResolveTokenCore(SecurityKeyIdentifierClause, SecurityToken)\n  fullName: SecurityContextSecurityTokenResolver.TryResolveTokenCore(SecurityKeyIdentifierClause, SecurityToken)\n- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.UpdateContextCachingTime(System.ServiceModel.Security.Tokens.SecurityContextSecurityToken,System.DateTime)\n  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver\n  isExternal: false\n  name: UpdateContextCachingTime(SecurityContextSecurityToken, DateTime)\n  nameWithType: SecurityContextSecurityTokenResolver.UpdateContextCachingTime(SecurityContextSecurityToken, DateTime)\n  fullName: SecurityContextSecurityTokenResolver.UpdateContextCachingTime(SecurityContextSecurityToken, DateTime)\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.#ctor*\n  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver\n  isExternal: false\n  name: SecurityContextSecurityTokenResolver\n  nameWithType: SecurityContextSecurityTokenResolver.SecurityContextSecurityTokenResolver\n  fullName: SecurityContextSecurityTokenResolver.SecurityContextSecurityTokenResolver\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security.Tokens/SecurityContextSecurityTokenResolver.xml\n- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.AddContext*\n  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver\n  isExternal: false\n  name: AddContext\n  nameWithType: SecurityContextSecurityTokenResolver.AddContext\n  fullName: SecurityContextSecurityTokenResolver.AddContext\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security.Tokens/SecurityContextSecurityTokenResolver.xml\n- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.ClearContexts*\n  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver\n  isExternal: false\n  name: ClearContexts\n  nameWithType: SecurityContextSecurityTokenResolver.ClearContexts\n  fullName: SecurityContextSecurityTokenResolver.ClearContexts\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security.Tokens/SecurityContextSecurityTokenResolver.xml\n- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.ClockSkew*\n  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver\n  isExternal: false\n  name: ClockSkew\n  nameWithType: SecurityContextSecurityTokenResolver.ClockSkew\n  fullName: SecurityContextSecurityTokenResolver.ClockSkew\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security.Tokens/SecurityContextSecurityTokenResolver.xml\n- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.GetAllContexts*\n  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver\n  isExternal: false\n  name: GetAllContexts\n  nameWithType: SecurityContextSecurityTokenResolver.GetAllContexts\n  fullName: SecurityContextSecurityTokenResolver.GetAllContexts\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security.Tokens/SecurityContextSecurityTokenResolver.xml\n- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.GetContext*\n  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver\n  isExternal: false\n  name: GetContext\n  nameWithType: SecurityContextSecurityTokenResolver.GetContext\n  fullName: SecurityContextSecurityTokenResolver.GetContext\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security.Tokens/SecurityContextSecurityTokenResolver.xml\n- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.RemoveAllContexts*\n  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver\n  isExternal: false\n  name: RemoveAllContexts\n  nameWithType: SecurityContextSecurityTokenResolver.RemoveAllContexts\n  fullName: SecurityContextSecurityTokenResolver.RemoveAllContexts\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security.Tokens/SecurityContextSecurityTokenResolver.xml\n- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.RemoveContext*\n  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver\n  isExternal: false\n  name: RemoveContext\n  nameWithType: SecurityContextSecurityTokenResolver.RemoveContext\n  fullName: SecurityContextSecurityTokenResolver.RemoveContext\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security.Tokens/SecurityContextSecurityTokenResolver.xml\n- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.RemoveOldestTokensOnCacheFull*\n  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver\n  isExternal: false\n  name: RemoveOldestTokensOnCacheFull\n  nameWithType: SecurityContextSecurityTokenResolver.RemoveOldestTokensOnCacheFull\n  fullName: SecurityContextSecurityTokenResolver.RemoveOldestTokensOnCacheFull\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security.Tokens/SecurityContextSecurityTokenResolver.xml\n- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.SecurityContextTokenCacheCapacity*\n  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver\n  isExternal: false\n  name: SecurityContextTokenCacheCapacity\n  nameWithType: SecurityContextSecurityTokenResolver.SecurityContextTokenCacheCapacity\n  fullName: SecurityContextSecurityTokenResolver.SecurityContextTokenCacheCapacity\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security.Tokens/SecurityContextSecurityTokenResolver.xml\n- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.TryAddContext*\n  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver\n  isExternal: false\n  name: TryAddContext\n  nameWithType: SecurityContextSecurityTokenResolver.TryAddContext\n  fullName: SecurityContextSecurityTokenResolver.TryAddContext\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security.Tokens/SecurityContextSecurityTokenResolver.xml\n- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.TryResolveSecurityKeyCore*\n  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver\n  isExternal: false\n  name: TryResolveSecurityKeyCore\n  nameWithType: SecurityContextSecurityTokenResolver.TryResolveSecurityKeyCore\n  fullName: SecurityContextSecurityTokenResolver.TryResolveSecurityKeyCore\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security.Tokens/SecurityContextSecurityTokenResolver.xml\n- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.TryResolveTokenCore*\n  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver\n  isExternal: false\n  name: TryResolveTokenCore\n  nameWithType: SecurityContextSecurityTokenResolver.TryResolveTokenCore\n  fullName: SecurityContextSecurityTokenResolver.TryResolveTokenCore\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security.Tokens/SecurityContextSecurityTokenResolver.xml\n- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.UpdateContextCachingTime*\n  parent: System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver\n  isExternal: false\n  name: UpdateContextCachingTime\n  nameWithType: SecurityContextSecurityTokenResolver.UpdateContextCachingTime\n  fullName: SecurityContextSecurityTokenResolver.UpdateContextCachingTime\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security.Tokens/SecurityContextSecurityTokenResolver.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.CreateDefaultSecurityTokenResolver(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityToken},System.Boolean)\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  isExternal: false\n  name: CreateDefaultSecurityTokenResolver(ReadOnlyCollection<SecurityToken>, Boolean)\n  nameWithType: SecurityTokenResolver.CreateDefaultSecurityTokenResolver(ReadOnlyCollection<SecurityToken>, Boolean)\n  fullName: SecurityTokenResolver.CreateDefaultSecurityTokenResolver(ReadOnlyCollection<SecurityToken>, Boolean)\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.LoadCustomConfiguration(System.Xml.XmlNodeList)\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  isExternal: false\n  name: LoadCustomConfiguration(XmlNodeList)\n  nameWithType: SecurityTokenResolver.LoadCustomConfiguration(XmlNodeList)\n  fullName: SecurityTokenResolver.LoadCustomConfiguration(XmlNodeList)\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  isExternal: false\n  name: ResolveSecurityKey(SecurityKeyIdentifierClause)\n  nameWithType: SecurityTokenResolver.ResolveSecurityKey(SecurityKeyIdentifierClause)\n  fullName: SecurityTokenResolver.ResolveSecurityKey(SecurityKeyIdentifierClause)\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier)\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  isExternal: false\n  name: ResolveToken(SecurityKeyIdentifier)\n  nameWithType: SecurityTokenResolver.ResolveToken(SecurityKeyIdentifier)\n  fullName: SecurityTokenResolver.ResolveToken(SecurityKeyIdentifier)\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  isExternal: false\n  name: ResolveToken(SecurityKeyIdentifierClause)\n  nameWithType: SecurityTokenResolver.ResolveToken(SecurityKeyIdentifierClause)\n  fullName: SecurityTokenResolver.ResolveToken(SecurityKeyIdentifierClause)\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  isExternal: false\n  name: TryResolveSecurityKey(SecurityKeyIdentifierClause, SecurityKey)\n  nameWithType: SecurityTokenResolver.TryResolveSecurityKey(SecurityKeyIdentifierClause, SecurityKey)\n  fullName: SecurityTokenResolver.TryResolveSecurityKey(SecurityKeyIdentifierClause, SecurityKey)\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  isExternal: false\n  name: TryResolveToken(SecurityKeyIdentifier, SecurityToken)\n  nameWithType: SecurityTokenResolver.TryResolveToken(SecurityKeyIdentifier, SecurityToken)\n  fullName: SecurityTokenResolver.TryResolveToken(SecurityKeyIdentifier, SecurityToken)\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  isExternal: false\n  name: TryResolveToken(SecurityKeyIdentifierClause, SecurityToken)\n  nameWithType: SecurityTokenResolver.TryResolveToken(SecurityKeyIdentifierClause, SecurityToken)\n  fullName: SecurityTokenResolver.TryResolveToken(SecurityKeyIdentifierClause, SecurityToken)\n- uid: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache\n  parent: System.ServiceModel.Security.Tokens\n  isExternal: false\n  name: ISecurityContextSecurityTokenCache\n  nameWithType: ISecurityContextSecurityTokenCache\n  fullName: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache\n"}