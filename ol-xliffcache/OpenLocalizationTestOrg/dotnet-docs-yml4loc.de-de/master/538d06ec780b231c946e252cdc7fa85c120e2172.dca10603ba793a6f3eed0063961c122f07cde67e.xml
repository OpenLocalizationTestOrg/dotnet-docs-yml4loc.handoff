{"nodes":[{"content":"Specifies the style and behavior of a control.","nodes":[{"pos":[0,46],"content":"Specifies the style and behavior of a control.","nodes":[{"content":"Specifies the style and behavior of a control.","pos":[0,46]}]}],"pos":[1303,1350],"yaml":true},{"content":"Controls use this enumeration in various properties and methods to specify functionality. A control can enable a style by calling the <xref:System.Windows.Forms.Control.SetStyle%2A> method and passing in the appropriate <xref:System.Windows.Forms.ControlStyles> bit (or bits) and the Boolean value to set the bit(s) to. For example, the following line of Visual Basic code would enable double-buffering.  \n  \n```  \nmyControl.SetStyle(UserPaint Or AllPaintingInWmPaint Or DoubleBuffer, True)  \n```  \n  \n If the AllPaintingInWmPaint bit is set to `true`, the window message WM_ERASEBKGND is ignored, and both <xref:System.Windows.Forms.Control.OnPaintBackground%2A> and <xref:System.Windows.Forms.Control.OnPaint%2A> methods are called directly from the window message WM_PAINT. This generally reduces flicker unless other controls send the window message WM_ERASEBKGND to the control. You might send the window message WM_ERASEBKGRND to achieve a pseudo-transparent effect similar to SupportsTransparentBackColor; for example, a <xref:System.Windows.Forms.ToolBar> with flat appearance does this.  \n  \n To fully enable double-buffering, you can set the OptimizedDoubleBuffer and AllPaintingInWmPaint bits to `true`. However the preferred method for enabling double buffering, which yields the same result, is to set the <xref:System.Windows.Forms.Control.DoubleBuffered%2A> property for the control to `true`.  \n  \n If the SupportsTransparentBackColor bit is set to `true`, and the <xref:System.Windows.Forms.Control.BackColor%2A> is set to a color whose alpha component is less than 255, <xref:System.Windows.Forms.Control.OnPaintBackground%2A> will simulate transparency by asking its parent control to paint the background. This is not true transparency.  \n  \n> [!NOTE]\n>  If there is another control between the control and its parent, the current control will not show the control in the middle.  \n  \n When the UserMouse bit is set to `true`, the following methods are still called: <xref:System.Windows.Forms.Control.OnMouseDown%2A?displayProperty=fullName>, <xref:System.Windows.Forms.Control.OnMouseUp%2A?displayProperty=fullName>, <xref:System.Windows.Forms.Control.OnMouseEnter%2A?displayProperty=fullName>, <xref:System.Windows.Forms.Control.OnMouseMove%2A?displayProperty=fullName>, <xref:System.Windows.Forms.Control.OnMouseHover%2A?displayProperty=fullName>, <xref:System.Windows.Forms.Control.OnMouseLeave%2A?displayProperty=fullName>, and <xref:System.Windows.Forms.Control.OnMouseWheel%2A?displayProperty=fullName>.  \n  \n When the control is clicked, if the StandardClick bit is set to `true` the <xref:System.Windows.Forms.Control.OnClick%2A?displayProperty=fullName> method is called and it raises the <xref:System.Windows.Forms.Control.Click?displayProperty=fullName> event. When the control is double-clicked, and both the StandardClick and StandardDoubleClick bits are set to `true`, the click is passed on to the <xref:System.Windows.Forms.Control.DoubleClick> event. Then the <xref:System.Windows.Forms.Control.OnDoubleClick%2A?displayProperty=fullName> method is called and it raises the <xref:System.Windows.Forms.Control.DoubleClick?displayProperty=fullName> event. However, the control can call <xref:System.Windows.Forms.Control.OnClick%2A> or <xref:System.Windows.Forms.Control.OnDoubleClick%2A> directly regardless of the StandardClick and StandardDoubleClick bit values. For more information on control click and double click behaviors, see the <xref:System.Windows.Forms.Control.Click?displayProperty=fullName> and <xref:System.Windows.Forms.Control.DoubleClick?displayProperty=fullName> topics.  \n  \n When the UseTextForAccessibility bit is set and there is a value in the control's `Text` property, the value of that control's `Text` property determines the control's default Active Accessibility name and shortcut key. Otherwise, the text of the preceding <xref:System.Windows.Forms.Label> control will be used instead. This style is set by default. Certain built-in control types, such as <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.ComboBox>, reset this style so that the `Text` property of those controls will not be used by Active Accessibility.","nodes":[{"pos":[0,403],"content":"Controls use this enumeration in various properties and methods to specify functionality. A control can enable a style by calling the <xref:System.Windows.Forms.Control.SetStyle%2A> method and passing in the appropriate <xref:System.Windows.Forms.ControlStyles> bit (or bits) and the Boolean value to set the bit(s) to. For example, the following line of Visual Basic code would enable double-buffering.","nodes":[{"content":"Controls use this enumeration in various properties and methods to specify functionality. A control can enable a style by calling the <xref:System.Windows.Forms.Control.SetStyle%2A> method and passing in the appropriate <xref:System.Windows.Forms.ControlStyles> bit (or bits) and the Boolean value to set the bit(s) to. For example, the following line of Visual Basic code would enable double-buffering.","pos":[0,403],"nodes":[{"content":"Controls use this enumeration in various properties and methods to specify functionality.","pos":[0,89]},{"content":"A control can enable a style by calling the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.SetStyle%2A&gt;</ph> method and passing in the appropriate <ph id=\"ph2\">&lt;xref:System.Windows.Forms.ControlStyles&gt;</ph> bit (or bits) and the Boolean value to set the bit(s) to.","pos":[90,319],"source":" A control can enable a style by calling the <xref:System.Windows.Forms.Control.SetStyle%2A> method and passing in the appropriate <xref:System.Windows.Forms.ControlStyles> bit (or bits) and the Boolean value to set the bit(s) to."},{"content":"For example, the following line of Visual Basic code would enable double-buffering.","pos":[320,403]}]}]},{"pos":[503,1095],"content":"If the AllPaintingInWmPaint bit is set to `true`, the window message WM_ERASEBKGND is ignored, and both <xref:System.Windows.Forms.Control.OnPaintBackground%2A> and <xref:System.Windows.Forms.Control.OnPaint%2A> methods are called directly from the window message WM_PAINT. This generally reduces flicker unless other controls send the window message WM_ERASEBKGND to the control. You might send the window message WM_ERASEBKGRND to achieve a pseudo-transparent effect similar to SupportsTransparentBackColor; for example, a <xref:System.Windows.Forms.ToolBar> with flat appearance does this.","nodes":[{"content":"If the AllPaintingInWmPaint bit is set to <ph id=\"ph1\">`true`</ph>, the window message WM_ERASEBKGND is ignored, and both <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.OnPaintBackground%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt;</ph> methods are called directly from the window message WM_PAINT.","pos":[0,273],"source":"If the AllPaintingInWmPaint bit is set to `true`, the window message WM_ERASEBKGND is ignored, and both <xref:System.Windows.Forms.Control.OnPaintBackground%2A> and <xref:System.Windows.Forms.Control.OnPaint%2A> methods are called directly from the window message WM_PAINT."},{"content":"This generally reduces flicker unless other controls send the window message WM_ERASEBKGND to the control.","pos":[274,380]},{"content":"You might send the window message WM_ERASEBKGRND to achieve a pseudo-transparent effect similar to SupportsTransparentBackColor; for example, a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.ToolBar&gt;</ph> with flat appearance does this.","pos":[381,592],"source":" You might send the window message WM_ERASEBKGRND to achieve a pseudo-transparent effect similar to SupportsTransparentBackColor; for example, a <xref:System.Windows.Forms.ToolBar> with flat appearance does this."}]},{"pos":[1102,1408],"content":"To fully enable double-buffering, you can set the OptimizedDoubleBuffer and AllPaintingInWmPaint bits to `true`. However the preferred method for enabling double buffering, which yields the same result, is to set the <xref:System.Windows.Forms.Control.DoubleBuffered%2A> property for the control to `true`.","nodes":[{"content":"To fully enable double-buffering, you can set the OptimizedDoubleBuffer and AllPaintingInWmPaint bits to <ph id=\"ph1\">`true`</ph>.","pos":[0,112],"source":"To fully enable double-buffering, you can set the OptimizedDoubleBuffer and AllPaintingInWmPaint bits to `true`."},{"content":"However the preferred method for enabling double buffering, which yields the same result, is to set the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.DoubleBuffered%2A&gt;</ph> property for the control to <ph id=\"ph2\">`true`</ph>.","pos":[113,306],"source":" However the preferred method for enabling double buffering, which yields the same result, is to set the <xref:System.Windows.Forms.Control.DoubleBuffered%2A> property for the control to `true`."}]},{"pos":[1415,1756],"content":"If the SupportsTransparentBackColor bit is set to `true`, and the <xref:System.Windows.Forms.Control.BackColor%2A> is set to a color whose alpha component is less than 255, <xref:System.Windows.Forms.Control.OnPaintBackground%2A> will simulate transparency by asking its parent control to paint the background. This is not true transparency.","nodes":[{"content":"If the SupportsTransparentBackColor bit is set to <ph id=\"ph1\">`true`</ph>, and the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> is set to a color whose alpha component is less than 255, <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.OnPaintBackground%2A&gt;</ph> will simulate transparency by asking its parent control to paint the background.","pos":[0,310],"source":"If the SupportsTransparentBackColor bit is set to `true`, and the <xref:System.Windows.Forms.Control.BackColor%2A> is set to a color whose alpha component is less than 255, <xref:System.Windows.Forms.Control.OnPaintBackground%2A> will simulate transparency by asking its parent control to paint the background."},{"content":"This is not true transparency.","pos":[311,341]}]},{"pos":[1764,1899],"content":"[!NOTE]\n If there is another control between the control and its parent, the current control will not show the control in the middle.","leadings":["","> "],"nodes":[{"content":"If there is another control between the control and its parent, the current control will not show the control in the middle.","pos":[9,133]}]},{"pos":[1906,2531],"content":"When the UserMouse bit is set to <ph id=\"ph1\">`true`</ph>, the following methods are still called: <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.OnMouseDown%2A?displayProperty=fullName&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.OnMouseUp%2A?displayProperty=fullName&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.OnMouseEnter%2A?displayProperty=fullName&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.Windows.Forms.Control.OnMouseMove%2A?displayProperty=fullName&gt;</ph>, <ph id=\"ph6\">&lt;xref:System.Windows.Forms.Control.OnMouseHover%2A?displayProperty=fullName&gt;</ph>, <ph id=\"ph7\">&lt;xref:System.Windows.Forms.Control.OnMouseLeave%2A?displayProperty=fullName&gt;</ph>, and <ph id=\"ph8\">&lt;xref:System.Windows.Forms.Control.OnMouseWheel%2A?displayProperty=fullName&gt;</ph>.","source":"When the UserMouse bit is set to `true`, the following methods are still called: <xref:System.Windows.Forms.Control.OnMouseDown%2A?displayProperty=fullName>, <xref:System.Windows.Forms.Control.OnMouseUp%2A?displayProperty=fullName>, <xref:System.Windows.Forms.Control.OnMouseEnter%2A?displayProperty=fullName>, <xref:System.Windows.Forms.Control.OnMouseMove%2A?displayProperty=fullName>, <xref:System.Windows.Forms.Control.OnMouseHover%2A?displayProperty=fullName>, <xref:System.Windows.Forms.Control.OnMouseLeave%2A?displayProperty=fullName>, and <xref:System.Windows.Forms.Control.OnMouseWheel%2A?displayProperty=fullName>."},{"pos":[2538,3627],"content":"When the control is clicked, if the StandardClick bit is set to `true` the <xref:System.Windows.Forms.Control.OnClick%2A?displayProperty=fullName> method is called and it raises the <xref:System.Windows.Forms.Control.Click?displayProperty=fullName> event. When the control is double-clicked, and both the StandardClick and StandardDoubleClick bits are set to `true`, the click is passed on to the <xref:System.Windows.Forms.Control.DoubleClick> event. Then the <xref:System.Windows.Forms.Control.OnDoubleClick%2A?displayProperty=fullName> method is called and it raises the <xref:System.Windows.Forms.Control.DoubleClick?displayProperty=fullName> event. However, the control can call <xref:System.Windows.Forms.Control.OnClick%2A> or <xref:System.Windows.Forms.Control.OnDoubleClick%2A> directly regardless of the StandardClick and StandardDoubleClick bit values. For more information on control click and double click behaviors, see the <xref:System.Windows.Forms.Control.Click?displayProperty=fullName> and <xref:System.Windows.Forms.Control.DoubleClick?displayProperty=fullName> topics.","nodes":[{"content":"When the control is clicked, if the StandardClick bit is set to <ph id=\"ph1\">`true`</ph> the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.OnClick%2A?displayProperty=fullName&gt;</ph> method is called and it raises the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.Click?displayProperty=fullName&gt;</ph> event.","pos":[0,255],"source":"When the control is clicked, if the StandardClick bit is set to `true` the <xref:System.Windows.Forms.Control.OnClick%2A?displayProperty=fullName> method is called and it raises the <xref:System.Windows.Forms.Control.Click?displayProperty=fullName> event."},{"content":"When the control is double-clicked, and both the StandardClick and StandardDoubleClick bits are set to <ph id=\"ph1\">`true`</ph>, the click is passed on to the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;</ph> event.","pos":[256,451],"source":" When the control is double-clicked, and both the StandardClick and StandardDoubleClick bits are set to `true`, the click is passed on to the <xref:System.Windows.Forms.Control.DoubleClick> event."},{"content":"Then the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnDoubleClick%2A?displayProperty=fullName&gt;</ph> method is called and it raises the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.DoubleClick?displayProperty=fullName&gt;</ph> event.","pos":[452,653],"source":" Then the <xref:System.Windows.Forms.Control.OnDoubleClick%2A?displayProperty=fullName> method is called and it raises the <xref:System.Windows.Forms.Control.DoubleClick?displayProperty=fullName> event."},{"content":"However, the control can call <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.OnClick%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.OnDoubleClick%2A&gt;</ph> directly regardless of the StandardClick and StandardDoubleClick bit values.","pos":[654,863],"source":" However, the control can call <xref:System.Windows.Forms.Control.OnClick%2A> or <xref:System.Windows.Forms.Control.OnDoubleClick%2A> directly regardless of the StandardClick and StandardDoubleClick bit values."},{"content":"For more information on control click and double click behaviors, see the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Click?displayProperty=fullName&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.DoubleClick?displayProperty=fullName&gt;</ph> topics.","pos":[864,1089],"source":" For more information on control click and double click behaviors, see the <xref:System.Windows.Forms.Control.Click?displayProperty=fullName> and <xref:System.Windows.Forms.Control.DoubleClick?displayProperty=fullName> topics."}]},{"pos":[3634,4207],"content":"When the UseTextForAccessibility bit is set and there is a value in the control's `Text` property, the value of that control's `Text` property determines the control's default Active Accessibility name and shortcut key. Otherwise, the text of the preceding <xref:System.Windows.Forms.Label> control will be used instead. This style is set by default. Certain built-in control types, such as <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.ComboBox>, reset this style so that the `Text` property of those controls will not be used by Active Accessibility.","nodes":[{"content":"When the UseTextForAccessibility bit is set and there is a value in the control's <ph id=\"ph1\">`Text`</ph> property, the value of that control's <ph id=\"ph2\">`Text`</ph> property determines the control's default Active Accessibility name and shortcut key.","pos":[0,219],"source":"When the UseTextForAccessibility bit is set and there is a value in the control's `Text` property, the value of that control's `Text` property determines the control's default Active Accessibility name and shortcut key."},{"content":"Otherwise, the text of the preceding <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Label&gt;</ph> control will be used instead.","pos":[220,320],"source":" Otherwise, the text of the preceding <xref:System.Windows.Forms.Label> control will be used instead."},{"content":"This style is set by default.","pos":[321,350]},{"content":"Certain built-in control types, such as <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>, reset this style so that the <ph id=\"ph3\">`Text`</ph> property of those controls will not be used by Active Accessibility.","pos":[351,573],"source":" Certain built-in control types, such as <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.ComboBox>, reset this style so that the `Text` property of those controls will not be used by Active Accessibility."}]}],"pos":[1361,5590],"yaml":true,"extradata":"MT"},{"content":"If `true`, the control ignores the window message WM_ERASEBKGND to reduce flicker. This style should only be applied if the <xref href=\"System.Windows.Forms.ControlStyles.UserPaint\"></xref> bit is set to `true`.","nodes":[{"pos":[0,211],"content":"If `true`, the control ignores the window message WM_ERASEBKGND to reduce flicker. This style should only be applied if the <xref href=\"System.Windows.Forms.ControlStyles.UserPaint\"></xref> bit is set to `true`.","nodes":[{"content":"If <ph id=\"ph1\">`true`</ph>, the control ignores the window message WM_ERASEBKGND to reduce flicker.","pos":[0,82],"source":"If `true`, the control ignores the window message WM_ERASEBKGND to reduce flicker."},{"content":"This style should only be applied if the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.ControlStyles.UserPaint\"&gt;&lt;/xref&gt;</ph> bit is set to <ph id=\"ph2\">`true`</ph>.","pos":[83,211],"source":" This style should only be applied if the <xref href=\"System.Windows.Forms.ControlStyles.UserPaint\"></xref> bit is set to `true`."}]}],"pos":[7359,7571],"yaml":true},{"content":"If `true`, the control keeps a copy of the text rather than getting it from the <xref href=\"System.Windows.Forms.Control.Handle\"></xref> each time it is needed. This style defaults to `false`. This behavior improves performance, but makes it difficult to keep the text synchronized.","nodes":[{"pos":[0,282],"content":"If `true`, the control keeps a copy of the text rather than getting it from the <xref href=\"System.Windows.Forms.Control.Handle\"></xref> each time it is needed. This style defaults to `false`. This behavior improves performance, but makes it difficult to keep the text synchronized.","nodes":[{"content":"If <ph id=\"ph1\">`true`</ph>, the control keeps a copy of the text rather than getting it from the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Forms.Control.Handle\"&gt;&lt;/xref&gt;</ph> each time it is needed.","pos":[0,160],"source":"If `true`, the control keeps a copy of the text rather than getting it from the <xref href=\"System.Windows.Forms.Control.Handle\"></xref> each time it is needed."},{"content":"This style defaults to <ph id=\"ph1\">`false`</ph>.","pos":[161,192],"source":" This style defaults to `false`."},{"content":"This behavior improves performance, but makes it difficult to keep the text synchronized.","pos":[193,282]}]}],"pos":[8536,8819],"yaml":true},{"content":"If `true`, the control is a container-like control.","nodes":[{"pos":[0,51],"content":"If <ph id=\"ph1\">`true`</ph>, the control is a container-like control.","source":"If `true`, the control is a container-like control."}],"pos":[9815,9867],"yaml":true},{"content":"If `true`, drawing is performed in a buffer, and after it completes, the result is output to the screen. Double-buffering prevents flicker caused by the redrawing of the control. If you set <xref href=\"System.Windows.Forms.ControlStyles.DoubleBuffer\"></xref> to `true`, you should also set <xref href=\"System.Windows.Forms.ControlStyles.UserPaint\"></xref> and <xref href=\"System.Windows.Forms.ControlStyles.AllPaintingInWmPaint\"></xref> to `true`.","nodes":[{"pos":[0,447],"content":"If `true`, drawing is performed in a buffer, and after it completes, the result is output to the screen. Double-buffering prevents flicker caused by the redrawing of the control. If you set <xref href=\"System.Windows.Forms.ControlStyles.DoubleBuffer\"></xref> to `true`, you should also set <xref href=\"System.Windows.Forms.ControlStyles.UserPaint\"></xref> and <xref href=\"System.Windows.Forms.ControlStyles.AllPaintingInWmPaint\"></xref> to `true`.","nodes":[{"content":"If <ph id=\"ph1\">`true`</ph>, drawing is performed in a buffer, and after it completes, the result is output to the screen.","pos":[0,104],"source":"If `true`, drawing is performed in a buffer, and after it completes, the result is output to the screen."},{"content":"Double-buffering prevents flicker caused by the redrawing of the control.","pos":[105,178]},{"content":"If you set <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.ControlStyles.DoubleBuffer\"&gt;&lt;/xref&gt;</ph> to <ph id=\"ph2\">`true`</ph>, you should also set <ph id=\"ph3\">&lt;xref href=\"System.Windows.Forms.ControlStyles.UserPaint\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph4\">&lt;xref href=\"System.Windows.Forms.ControlStyles.AllPaintingInWmPaint\"&gt;&lt;/xref&gt;</ph> to <ph id=\"ph5\">`true`</ph>.","pos":[179,447],"source":" If you set <xref href=\"System.Windows.Forms.ControlStyles.DoubleBuffer\"></xref> to `true`, you should also set <xref href=\"System.Windows.Forms.ControlStyles.UserPaint\"></xref> and <xref href=\"System.Windows.Forms.ControlStyles.AllPaintingInWmPaint\"></xref> to `true`."}]}],"pos":[10846,11294],"yaml":true},{"content":"If `true`, the <xref href=\"System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)\"></xref> method is called for every message sent to the control's <xref href=\"System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)\"></xref>. This style defaults to `false`. <xref href=\"System.Windows.Forms.ControlStyles.EnableNotifyMessage\"></xref> does not work in partial trust.","nodes":[{"pos":[0,397],"content":"If `true`, the <xref href=\"System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)\"></xref> method is called for every message sent to the control's <xref href=\"System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)\"></xref>. This style defaults to `false`. <xref href=\"System.Windows.Forms.ControlStyles.EnableNotifyMessage\"></xref> does not work in partial trust.","nodes":[{"content":"If <ph id=\"ph1\">`true`</ph>, the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)\"&gt;&lt;/xref&gt;</ph> method is called for every message sent to the control's <ph id=\"ph3\">&lt;xref href=\"System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)\"&gt;&lt;/xref&gt;</ph>.","pos":[0,257],"source":"If `true`, the <xref href=\"System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)\"></xref> method is called for every message sent to the control's <xref href=\"System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)\"></xref>."},{"content":"This style defaults to <ph id=\"ph1\">`false`</ph>.","pos":[258,289],"source":" This style defaults to `false`."},{"content":"<ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.ControlStyles.EnableNotifyMessage\"&gt;&lt;/xref&gt;</ph> does not work in partial trust.","pos":[290,397],"source":"<xref href=\"System.Windows.Forms.ControlStyles.EnableNotifyMessage\"></xref> does not work in partial trust."}]}],"pos":[12328,12726],"yaml":true},{"content":"If `true`, the control has a fixed height when auto-scaled. For example, if a layout operation attempts to rescale the control to accommodate a new <xref href=\"System.Drawing.Font\"></xref>, the control's <xref href=\"System.Windows.Forms.Control.Height\"></xref> remains unchanged.","nodes":[{"pos":[0,279],"content":"If `true`, the control has a fixed height when auto-scaled. For example, if a layout operation attempts to rescale the control to accommodate a new <xref href=\"System.Drawing.Font\"></xref>, the control's <xref href=\"System.Windows.Forms.Control.Height\"></xref> remains unchanged.","nodes":[{"content":"If <ph id=\"ph1\">`true`</ph>, the control has a fixed height when auto-scaled.","pos":[0,59],"source":"If `true`, the control has a fixed height when auto-scaled."},{"content":"For example, if a layout operation attempts to rescale the control to accommodate a new <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Font\"&gt;&lt;/xref&gt;</ph>, the control's <ph id=\"ph2\">&lt;xref href=\"System.Windows.Forms.Control.Height\"&gt;&lt;/xref&gt;</ph> remains unchanged.","pos":[60,279],"source":" For example, if a layout operation attempts to rescale the control to accommodate a new <xref href=\"System.Drawing.Font\"></xref>, the control's <xref href=\"System.Windows.Forms.Control.Height\"></xref> remains unchanged."}]}],"pos":[13702,13982],"yaml":true},{"content":"If `true`, the control has a fixed width when auto-scaled. For example, if a layout operation attempts to rescale the control to accommodate a new <xref href=\"System.Drawing.Font\"></xref>, the control's <xref href=\"System.Windows.Forms.Control.Width\"></xref> remains unchanged.","nodes":[{"pos":[0,277],"content":"If `true`, the control has a fixed width when auto-scaled. For example, if a layout operation attempts to rescale the control to accommodate a new <xref href=\"System.Drawing.Font\"></xref>, the control's <xref href=\"System.Windows.Forms.Control.Width\"></xref> remains unchanged.","nodes":[{"content":"If <ph id=\"ph1\">`true`</ph>, the control has a fixed width when auto-scaled.","pos":[0,58],"source":"If `true`, the control has a fixed width when auto-scaled."},{"content":"For example, if a layout operation attempts to rescale the control to accommodate a new <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Font\"&gt;&lt;/xref&gt;</ph>, the control's <ph id=\"ph2\">&lt;xref href=\"System.Windows.Forms.Control.Width\"&gt;&lt;/xref&gt;</ph> remains unchanged.","pos":[59,277],"source":" For example, if a layout operation attempts to rescale the control to accommodate a new <xref href=\"System.Drawing.Font\"></xref>, the control's <xref href=\"System.Windows.Forms.Control.Width\"></xref> remains unchanged."}]}],"pos":[14944,15222],"yaml":true},{"content":"If `true`, the control is drawn opaque and the background is not painted.","nodes":[{"pos":[0,73],"content":"If <ph id=\"ph1\">`true`</ph>, the control is drawn opaque and the background is not painted.","source":"If `true`, the control is drawn opaque and the background is not painted."}],"pos":[16159,16233],"yaml":true},{"content":"If `true`, the control is first drawn to a buffer rather than directly to the screen, which can reduce flicker. If you set this property to `true`, you should also set the <xref href=\"System.Windows.Forms.ControlStyles.AllPaintingInWmPaint\"></xref> to `true`.","nodes":[{"pos":[0,259],"content":"If `true`, the control is first drawn to a buffer rather than directly to the screen, which can reduce flicker. If you set this property to `true`, you should also set the <xref href=\"System.Windows.Forms.ControlStyles.AllPaintingInWmPaint\"></xref> to `true`.","nodes":[{"content":"If <ph id=\"ph1\">`true`</ph>, the control is first drawn to a buffer rather than directly to the screen, which can reduce flicker.","pos":[0,111],"source":"If `true`, the control is first drawn to a buffer rather than directly to the screen, which can reduce flicker."},{"content":"If you set this property to <ph id=\"ph1\">`true`</ph>, you should also set the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Forms.ControlStyles.AllPaintingInWmPaint\"&gt;&lt;/xref&gt;</ph> to <ph id=\"ph3\">`true`</ph>.","pos":[112,259],"source":" If you set this property to `true`, you should also set the <xref href=\"System.Windows.Forms.ControlStyles.AllPaintingInWmPaint\"></xref> to `true`."}]}],"pos":[17256,17516],"yaml":true},{"content":"If `true`, the control is redrawn when it is resized.","nodes":[{"pos":[0,53],"content":"If <ph id=\"ph1\">`true`</ph>, the control is redrawn when it is resized.","source":"If `true`, the control is redrawn when it is resized."}],"pos":[18500,18554],"yaml":true},{"content":"If `true`, the control can receive focus.","nodes":[{"pos":[0,41],"content":"If <ph id=\"ph1\">`true`</ph>, the control can receive focus.","source":"If `true`, the control can receive focus."}],"pos":[19517,19559],"yaml":true},{"content":"If `true`, the control implements the standard <xref href=\"System.Windows.Forms.Control.Click\"></xref> behavior.","nodes":[{"pos":[0,112],"content":"If <ph id=\"ph1\">`true`</ph>, the control implements the standard <ph id=\"ph2\">&lt;xref href=\"System.Windows.Forms.Control.Click\"&gt;&lt;/xref&gt;</ph> behavior.","source":"If `true`, the control implements the standard <xref href=\"System.Windows.Forms.Control.Click\"></xref> behavior."}],"pos":[20538,20651],"yaml":true},{"content":"If `true`, the control implements the standard <xref href=\"System.Windows.Forms.Control.DoubleClick\"></xref> behavior. This style is ignored if the <xref href=\"System.Windows.Forms.ControlStyles.StandardClick\"></xref> bit is not set to `true`.","nodes":[{"pos":[0,243],"content":"If `true`, the control implements the standard <xref href=\"System.Windows.Forms.Control.DoubleClick\"></xref> behavior. This style is ignored if the <xref href=\"System.Windows.Forms.ControlStyles.StandardClick\"></xref> bit is not set to `true`.","nodes":[{"content":"If <ph id=\"ph1\">`true`</ph>, the control implements the standard <ph id=\"ph2\">&lt;xref href=\"System.Windows.Forms.Control.DoubleClick\"&gt;&lt;/xref&gt;</ph> behavior.","pos":[0,118],"source":"If `true`, the control implements the standard <xref href=\"System.Windows.Forms.Control.DoubleClick\"></xref> behavior."},{"content":"This style is ignored if the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.ControlStyles.StandardClick\"&gt;&lt;/xref&gt;</ph> bit is not set to <ph id=\"ph2\">`true`</ph>.","pos":[119,243],"source":" This style is ignored if the <xref href=\"System.Windows.Forms.ControlStyles.StandardClick\"></xref> bit is not set to `true`."}]}],"pos":[21669,21913],"yaml":true},{"content":"If `true`, the control accepts a <xref href=\"System.Windows.Forms.Control.BackColor\"></xref> with an alpha component of less than 255 to simulate transparency. Transparency will be simulated only if the <xref href=\"System.Windows.Forms.ControlStyles.UserPaint\"></xref> bit is set to `true` and the parent control is derived from <xref href=\"System.Windows.Forms.Control\"></xref>.","nodes":[{"pos":[0,379],"content":"If `true`, the control accepts a <xref href=\"System.Windows.Forms.Control.BackColor\"></xref> with an alpha component of less than 255 to simulate transparency. Transparency will be simulated only if the <xref href=\"System.Windows.Forms.ControlStyles.UserPaint\"></xref> bit is set to `true` and the parent control is derived from <xref href=\"System.Windows.Forms.Control\"></xref>.","nodes":[{"content":"If <ph id=\"ph1\">`true`</ph>, the control accepts a <ph id=\"ph2\">&lt;xref href=\"System.Windows.Forms.Control.BackColor\"&gt;&lt;/xref&gt;</ph> with an alpha component of less than 255 to simulate transparency.","pos":[0,159],"source":"If `true`, the control accepts a <xref href=\"System.Windows.Forms.Control.BackColor\"></xref> with an alpha component of less than 255 to simulate transparency."},{"content":"Transparency will be simulated only if the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.ControlStyles.UserPaint\"&gt;&lt;/xref&gt;</ph> bit is set to <ph id=\"ph2\">`true`</ph> and the parent control is derived from <ph id=\"ph3\">&lt;xref href=\"System.Windows.Forms.Control\"&gt;&lt;/xref&gt;</ph>.","pos":[160,379],"source":" Transparency will be simulated only if the <xref href=\"System.Windows.Forms.ControlStyles.UserPaint\"></xref> bit is set to `true` and the parent control is derived from <xref href=\"System.Windows.Forms.Control\"></xref>."}]}],"pos":[22991,23371],"yaml":true},{"content":"If `true`, the control does its own mouse processing, and mouse events are not handled by the operating system.","nodes":[{"pos":[0,111],"content":"If <ph id=\"ph1\">`true`</ph>, the control does its own mouse processing, and mouse events are not handled by the operating system.","source":"If `true`, the control does its own mouse processing, and mouse events are not handled by the operating system."}],"pos":[24344,24456],"yaml":true},{"content":"If `true`, the control paints itself rather than the operating system doing so. If `false`, the <xref href=\"System.Windows.Forms.Control.Paint\"></xref> event is not raised. This style only applies to classes derived from <xref href=\"System.Windows.Forms.Control\"></xref>.","nodes":[{"pos":[0,271],"content":"If `true`, the control paints itself rather than the operating system doing so. If `false`, the <xref href=\"System.Windows.Forms.Control.Paint\"></xref> event is not raised. This style only applies to classes derived from <xref href=\"System.Windows.Forms.Control\"></xref>.","nodes":[{"content":"If <ph id=\"ph1\">`true`</ph>, the control paints itself rather than the operating system doing so.","pos":[0,79],"source":"If `true`, the control paints itself rather than the operating system doing so."},{"content":"If <ph id=\"ph1\">`false`</ph>, the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Forms.Control.Paint\"&gt;&lt;/xref&gt;</ph> event is not raised.","pos":[80,172],"source":" If `false`, the <xref href=\"System.Windows.Forms.Control.Paint\"></xref> event is not raised."},{"content":"This style only applies to classes derived from <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control\"&gt;&lt;/xref&gt;</ph>.","pos":[173,271],"source":" This style only applies to classes derived from <xref href=\"System.Windows.Forms.Control\"></xref>."}]}],"pos":[25410,25682],"yaml":true},{"content":"Specifies that the value of the control's <code>Text</code> property, if set, determines the control's default Active Accessibility name and shortcut key.","nodes":[{"pos":[0,154],"content":"Specifies that the value of the control's <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">Text</ph><ept id=\"p1\">&lt;/code&gt;</ept> property, if set, determines the control's default Active Accessibility name and shortcut key.","source":"Specifies that the value of the control's <code>Text</code> property, if set, determines the control's default Active Accessibility name and shortcut key."}],"pos":[26720,26875],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Forms.ControlStyles\n  commentId: T:System.Windows.Forms.ControlStyles\n  id: ControlStyles\n  children:\n  - System.Windows.Forms.ControlStyles.AllPaintingInWmPaint\n  - System.Windows.Forms.ControlStyles.CacheText\n  - System.Windows.Forms.ControlStyles.ContainerControl\n  - System.Windows.Forms.ControlStyles.DoubleBuffer\n  - System.Windows.Forms.ControlStyles.EnableNotifyMessage\n  - System.Windows.Forms.ControlStyles.FixedHeight\n  - System.Windows.Forms.ControlStyles.FixedWidth\n  - System.Windows.Forms.ControlStyles.Opaque\n  - System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer\n  - System.Windows.Forms.ControlStyles.ResizeRedraw\n  - System.Windows.Forms.ControlStyles.Selectable\n  - System.Windows.Forms.ControlStyles.StandardClick\n  - System.Windows.Forms.ControlStyles.StandardDoubleClick\n  - System.Windows.Forms.ControlStyles.SupportsTransparentBackColor\n  - System.Windows.Forms.ControlStyles.UserMouse\n  - System.Windows.Forms.ControlStyles.UserPaint\n  - System.Windows.Forms.ControlStyles.UseTextForAccessibility\n  langs:\n  - csharp\n  name: ControlStyles\n  nameWithType: ControlStyles\n  fullName: System.Windows.Forms.ControlStyles\n  type: Enum\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Specifies the style and behavior of a control.\n  remarks: \"Controls use this enumeration in various properties and methods to specify functionality. A control can enable a style by calling the <xref:System.Windows.Forms.Control.SetStyle%2A> method and passing in the appropriate <xref:System.Windows.Forms.ControlStyles> bit (or bits) and the Boolean value to set the bit(s) to. For example, the following line of Visual Basic code would enable double-buffering.  \\n  \\n```  \\nmyControl.SetStyle(UserPaint Or AllPaintingInWmPaint Or DoubleBuffer, True)  \\n```  \\n  \\n If the AllPaintingInWmPaint bit is set to `true`, the window message WM_ERASEBKGND is ignored, and both <xref:System.Windows.Forms.Control.OnPaintBackground%2A> and <xref:System.Windows.Forms.Control.OnPaint%2A> methods are called directly from the window message WM_PAINT. This generally reduces flicker unless other controls send the window message WM_ERASEBKGND to the control. You might send the window message WM_ERASEBKGRND to achieve a pseudo-transparent effect similar to SupportsTransparentBackColor; for example, a <xref:System.Windows.Forms.ToolBar> with flat appearance does this.  \\n  \\n To fully enable double-buffering, you can set the OptimizedDoubleBuffer and AllPaintingInWmPaint bits to `true`. However the preferred method for enabling double buffering, which yields the same result, is to set the <xref:System.Windows.Forms.Control.DoubleBuffered%2A> property for the control to `true`.  \\n  \\n If the SupportsTransparentBackColor bit is set to `true`, and the <xref:System.Windows.Forms.Control.BackColor%2A> is set to a color whose alpha component is less than 255, <xref:System.Windows.Forms.Control.OnPaintBackground%2A> will simulate transparency by asking its parent control to paint the background. This is not true transparency.  \\n  \\n> [!NOTE]\\n>  If there is another control between the control and its parent, the current control will not show the control in the middle.  \\n  \\n When the UserMouse bit is set to `true`, the following methods are still called: <xref:System.Windows.Forms.Control.OnMouseDown%2A?displayProperty=fullName>, <xref:System.Windows.Forms.Control.OnMouseUp%2A?displayProperty=fullName>, <xref:System.Windows.Forms.Control.OnMouseEnter%2A?displayProperty=fullName>, <xref:System.Windows.Forms.Control.OnMouseMove%2A?displayProperty=fullName>, <xref:System.Windows.Forms.Control.OnMouseHover%2A?displayProperty=fullName>, <xref:System.Windows.Forms.Control.OnMouseLeave%2A?displayProperty=fullName>, and <xref:System.Windows.Forms.Control.OnMouseWheel%2A?displayProperty=fullName>.  \\n  \\n When the control is clicked, if the StandardClick bit is set to `true` the <xref:System.Windows.Forms.Control.OnClick%2A?displayProperty=fullName> method is called and it raises the <xref:System.Windows.Forms.Control.Click?displayProperty=fullName> event. When the control is double-clicked, and both the StandardClick and StandardDoubleClick bits are set to `true`, the click is passed on to the <xref:System.Windows.Forms.Control.DoubleClick> event. Then the <xref:System.Windows.Forms.Control.OnDoubleClick%2A?displayProperty=fullName> method is called and it raises the <xref:System.Windows.Forms.Control.DoubleClick?displayProperty=fullName> event. However, the control can call <xref:System.Windows.Forms.Control.OnClick%2A> or <xref:System.Windows.Forms.Control.OnDoubleClick%2A> directly regardless of the StandardClick and StandardDoubleClick bit values. For more information on control click and double click behaviors, see the <xref:System.Windows.Forms.Control.Click?displayProperty=fullName> and <xref:System.Windows.Forms.Control.DoubleClick?displayProperty=fullName> topics.  \\n  \\n When the UseTextForAccessibility bit is set and there is a value in the control's `Text` property, the value of that control's `Text` property determines the control's default Active Accessibility name and shortcut key. Otherwise, the text of the preceding <xref:System.Windows.Forms.Label> control will be used instead. This style is set by default. Certain built-in control types, such as <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.ComboBox>, reset this style so that the `Text` property of those controls will not be used by Active Accessibility.\"\n  example:\n  - \"The following example demonstrates a use of <xref:System.Windows.Forms.ControlStyles> with the <xref:System.Windows.Forms.Control.StyleChanged> event.  \\n  \\n [!code-cpp[Control_StyleChanged#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control_StyleChanged/CPP/control_stylechanged.cpp#1)]\\n [!code-csharp[Control_StyleChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control_StyleChanged/CS/control_stylechanged.cs#1)]\\n [!code-vb[Control_StyleChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control_StyleChanged/VB/control_stylechanged.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Flags]\n\n      public enum ControlStyles\n  inheritance:\n  - System.Object\n  - System.ValueType\n  - System.Enum\n  attributes:\n  - type: System.FlagsAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/ControlStyles.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.ControlStyles.AllPaintingInWmPaint\n  commentId: F:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint\n  id: AllPaintingInWmPaint\n  parent: System.Windows.Forms.ControlStyles\n  langs:\n  - csharp\n  name: AllPaintingInWmPaint\n  nameWithType: ControlStyles.AllPaintingInWmPaint\n  fullName: ControlStyles.AllPaintingInWmPaint\n  type: Field\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: If `true`, the control ignores the window message WM_ERASEBKGND to reduce flicker. This style should only be applied if the <xref href=\"System.Windows.Forms.ControlStyles.UserPaint\"></xref> bit is set to `true`.\n  syntax:\n    content: AllPaintingInWmPaint\n    return:\n      type: System.Windows.Forms.ControlStyles\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/ControlStyles.xml\n- uid: System.Windows.Forms.ControlStyles.CacheText\n  commentId: F:System.Windows.Forms.ControlStyles.CacheText\n  id: CacheText\n  parent: System.Windows.Forms.ControlStyles\n  langs:\n  - csharp\n  name: CacheText\n  nameWithType: ControlStyles.CacheText\n  fullName: ControlStyles.CacheText\n  type: Field\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: If `true`, the control keeps a copy of the text rather than getting it from the <xref href=\"System.Windows.Forms.Control.Handle\"></xref> each time it is needed. This style defaults to `false`. This behavior improves performance, but makes it difficult to keep the text synchronized.\n  syntax:\n    content: CacheText\n    return:\n      type: System.Windows.Forms.ControlStyles\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/ControlStyles.xml\n- uid: System.Windows.Forms.ControlStyles.ContainerControl\n  commentId: F:System.Windows.Forms.ControlStyles.ContainerControl\n  id: ContainerControl\n  parent: System.Windows.Forms.ControlStyles\n  langs:\n  - csharp\n  name: ContainerControl\n  nameWithType: ControlStyles.ContainerControl\n  fullName: ControlStyles.ContainerControl\n  type: Field\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: If `true`, the control is a container-like control.\n  syntax:\n    content: ContainerControl\n    return:\n      type: System.Windows.Forms.ControlStyles\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/ControlStyles.xml\n- uid: System.Windows.Forms.ControlStyles.DoubleBuffer\n  commentId: F:System.Windows.Forms.ControlStyles.DoubleBuffer\n  id: DoubleBuffer\n  parent: System.Windows.Forms.ControlStyles\n  langs:\n  - csharp\n  name: DoubleBuffer\n  nameWithType: ControlStyles.DoubleBuffer\n  fullName: ControlStyles.DoubleBuffer\n  type: Field\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: If `true`, drawing is performed in a buffer, and after it completes, the result is output to the screen. Double-buffering prevents flicker caused by the redrawing of the control. If you set <xref href=\"System.Windows.Forms.ControlStyles.DoubleBuffer\"></xref> to `true`, you should also set <xref href=\"System.Windows.Forms.ControlStyles.UserPaint\"></xref> and <xref href=\"System.Windows.Forms.ControlStyles.AllPaintingInWmPaint\"></xref> to `true`.\n  syntax:\n    content: DoubleBuffer\n    return:\n      type: System.Windows.Forms.ControlStyles\n      description: ''\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/ControlStyles.xml\n- uid: System.Windows.Forms.ControlStyles.EnableNotifyMessage\n  commentId: F:System.Windows.Forms.ControlStyles.EnableNotifyMessage\n  id: EnableNotifyMessage\n  parent: System.Windows.Forms.ControlStyles\n  langs:\n  - csharp\n  name: EnableNotifyMessage\n  nameWithType: ControlStyles.EnableNotifyMessage\n  fullName: ControlStyles.EnableNotifyMessage\n  type: Field\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: If `true`, the <xref href=\"System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)\"></xref> method is called for every message sent to the control's <xref href=\"System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)\"></xref>. This style defaults to `false`. <xref href=\"System.Windows.Forms.ControlStyles.EnableNotifyMessage\"></xref> does not work in partial trust.\n  syntax:\n    content: EnableNotifyMessage\n    return:\n      type: System.Windows.Forms.ControlStyles\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/ControlStyles.xml\n- uid: System.Windows.Forms.ControlStyles.FixedHeight\n  commentId: F:System.Windows.Forms.ControlStyles.FixedHeight\n  id: FixedHeight\n  parent: System.Windows.Forms.ControlStyles\n  langs:\n  - csharp\n  name: FixedHeight\n  nameWithType: ControlStyles.FixedHeight\n  fullName: ControlStyles.FixedHeight\n  type: Field\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: If `true`, the control has a fixed height when auto-scaled. For example, if a layout operation attempts to rescale the control to accommodate a new <xref href=\"System.Drawing.Font\"></xref>, the control's <xref href=\"System.Windows.Forms.Control.Height\"></xref> remains unchanged.\n  syntax:\n    content: FixedHeight\n    return:\n      type: System.Windows.Forms.ControlStyles\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/ControlStyles.xml\n- uid: System.Windows.Forms.ControlStyles.FixedWidth\n  commentId: F:System.Windows.Forms.ControlStyles.FixedWidth\n  id: FixedWidth\n  parent: System.Windows.Forms.ControlStyles\n  langs:\n  - csharp\n  name: FixedWidth\n  nameWithType: ControlStyles.FixedWidth\n  fullName: ControlStyles.FixedWidth\n  type: Field\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: If `true`, the control has a fixed width when auto-scaled. For example, if a layout operation attempts to rescale the control to accommodate a new <xref href=\"System.Drawing.Font\"></xref>, the control's <xref href=\"System.Windows.Forms.Control.Width\"></xref> remains unchanged.\n  syntax:\n    content: FixedWidth\n    return:\n      type: System.Windows.Forms.ControlStyles\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/ControlStyles.xml\n- uid: System.Windows.Forms.ControlStyles.Opaque\n  commentId: F:System.Windows.Forms.ControlStyles.Opaque\n  id: Opaque\n  parent: System.Windows.Forms.ControlStyles\n  langs:\n  - csharp\n  name: Opaque\n  nameWithType: ControlStyles.Opaque\n  fullName: ControlStyles.Opaque\n  type: Field\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: If `true`, the control is drawn opaque and the background is not painted.\n  syntax:\n    content: Opaque\n    return:\n      type: System.Windows.Forms.ControlStyles\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/ControlStyles.xml\n- uid: System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer\n  commentId: F:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer\n  id: OptimizedDoubleBuffer\n  parent: System.Windows.Forms.ControlStyles\n  langs:\n  - csharp\n  name: OptimizedDoubleBuffer\n  nameWithType: ControlStyles.OptimizedDoubleBuffer\n  fullName: ControlStyles.OptimizedDoubleBuffer\n  type: Field\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: If `true`, the control is first drawn to a buffer rather than directly to the screen, which can reduce flicker. If you set this property to `true`, you should also set the <xref href=\"System.Windows.Forms.ControlStyles.AllPaintingInWmPaint\"></xref> to `true`.\n  syntax:\n    content: OptimizedDoubleBuffer\n    return:\n      type: System.Windows.Forms.ControlStyles\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/ControlStyles.xml\n- uid: System.Windows.Forms.ControlStyles.ResizeRedraw\n  commentId: F:System.Windows.Forms.ControlStyles.ResizeRedraw\n  id: ResizeRedraw\n  parent: System.Windows.Forms.ControlStyles\n  langs:\n  - csharp\n  name: ResizeRedraw\n  nameWithType: ControlStyles.ResizeRedraw\n  fullName: ControlStyles.ResizeRedraw\n  type: Field\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: If `true`, the control is redrawn when it is resized.\n  syntax:\n    content: ResizeRedraw\n    return:\n      type: System.Windows.Forms.ControlStyles\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/ControlStyles.xml\n- uid: System.Windows.Forms.ControlStyles.Selectable\n  commentId: F:System.Windows.Forms.ControlStyles.Selectable\n  id: Selectable\n  parent: System.Windows.Forms.ControlStyles\n  langs:\n  - csharp\n  name: Selectable\n  nameWithType: ControlStyles.Selectable\n  fullName: ControlStyles.Selectable\n  type: Field\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: If `true`, the control can receive focus.\n  syntax:\n    content: Selectable\n    return:\n      type: System.Windows.Forms.ControlStyles\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/ControlStyles.xml\n- uid: System.Windows.Forms.ControlStyles.StandardClick\n  commentId: F:System.Windows.Forms.ControlStyles.StandardClick\n  id: StandardClick\n  parent: System.Windows.Forms.ControlStyles\n  langs:\n  - csharp\n  name: StandardClick\n  nameWithType: ControlStyles.StandardClick\n  fullName: ControlStyles.StandardClick\n  type: Field\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: If `true`, the control implements the standard <xref href=\"System.Windows.Forms.Control.Click\"></xref> behavior.\n  syntax:\n    content: StandardClick\n    return:\n      type: System.Windows.Forms.ControlStyles\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/ControlStyles.xml\n- uid: System.Windows.Forms.ControlStyles.StandardDoubleClick\n  commentId: F:System.Windows.Forms.ControlStyles.StandardDoubleClick\n  id: StandardDoubleClick\n  parent: System.Windows.Forms.ControlStyles\n  langs:\n  - csharp\n  name: StandardDoubleClick\n  nameWithType: ControlStyles.StandardDoubleClick\n  fullName: ControlStyles.StandardDoubleClick\n  type: Field\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: If `true`, the control implements the standard <xref href=\"System.Windows.Forms.Control.DoubleClick\"></xref> behavior. This style is ignored if the <xref href=\"System.Windows.Forms.ControlStyles.StandardClick\"></xref> bit is not set to `true`.\n  syntax:\n    content: StandardDoubleClick\n    return:\n      type: System.Windows.Forms.ControlStyles\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/ControlStyles.xml\n- uid: System.Windows.Forms.ControlStyles.SupportsTransparentBackColor\n  commentId: F:System.Windows.Forms.ControlStyles.SupportsTransparentBackColor\n  id: SupportsTransparentBackColor\n  parent: System.Windows.Forms.ControlStyles\n  langs:\n  - csharp\n  name: SupportsTransparentBackColor\n  nameWithType: ControlStyles.SupportsTransparentBackColor\n  fullName: ControlStyles.SupportsTransparentBackColor\n  type: Field\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: If `true`, the control accepts a <xref href=\"System.Windows.Forms.Control.BackColor\"></xref> with an alpha component of less than 255 to simulate transparency. Transparency will be simulated only if the <xref href=\"System.Windows.Forms.ControlStyles.UserPaint\"></xref> bit is set to `true` and the parent control is derived from <xref href=\"System.Windows.Forms.Control\"></xref>.\n  syntax:\n    content: SupportsTransparentBackColor\n    return:\n      type: System.Windows.Forms.ControlStyles\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/ControlStyles.xml\n- uid: System.Windows.Forms.ControlStyles.UserMouse\n  commentId: F:System.Windows.Forms.ControlStyles.UserMouse\n  id: UserMouse\n  parent: System.Windows.Forms.ControlStyles\n  langs:\n  - csharp\n  name: UserMouse\n  nameWithType: ControlStyles.UserMouse\n  fullName: ControlStyles.UserMouse\n  type: Field\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: If `true`, the control does its own mouse processing, and mouse events are not handled by the operating system.\n  syntax:\n    content: UserMouse\n    return:\n      type: System.Windows.Forms.ControlStyles\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/ControlStyles.xml\n- uid: System.Windows.Forms.ControlStyles.UserPaint\n  commentId: F:System.Windows.Forms.ControlStyles.UserPaint\n  id: UserPaint\n  parent: System.Windows.Forms.ControlStyles\n  langs:\n  - csharp\n  name: UserPaint\n  nameWithType: ControlStyles.UserPaint\n  fullName: ControlStyles.UserPaint\n  type: Field\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: If `true`, the control paints itself rather than the operating system doing so. If `false`, the <xref href=\"System.Windows.Forms.Control.Paint\"></xref> event is not raised. This style only applies to classes derived from <xref href=\"System.Windows.Forms.Control\"></xref>.\n  syntax:\n    content: UserPaint\n    return:\n      type: System.Windows.Forms.ControlStyles\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/ControlStyles.xml\n- uid: System.Windows.Forms.ControlStyles.UseTextForAccessibility\n  commentId: F:System.Windows.Forms.ControlStyles.UseTextForAccessibility\n  id: UseTextForAccessibility\n  parent: System.Windows.Forms.ControlStyles\n  langs:\n  - csharp\n  name: UseTextForAccessibility\n  nameWithType: ControlStyles.UseTextForAccessibility\n  fullName: ControlStyles.UseTextForAccessibility\n  type: Field\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Specifies that the value of the control's <code>Text</code> property, if set, determines the control's default Active Accessibility name and shortcut key.\n  syntax:\n    content: UseTextForAccessibility\n    return:\n      type: System.Windows.Forms.ControlStyles\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/ControlStyles.xml\nreferences:\n- uid: System.Enum\n  parent: System\n  isExternal: false\n  name: Enum\n  nameWithType: Enum\n  fullName: System.Enum\n- uid: System.Windows.Forms.ControlStyles.AllPaintingInWmPaint\n  parent: System.Windows.Forms.ControlStyles\n  isExternal: false\n  name: AllPaintingInWmPaint\n  nameWithType: ControlStyles.AllPaintingInWmPaint\n  fullName: ControlStyles.AllPaintingInWmPaint\n- uid: System.Windows.Forms.ControlStyles\n  parent: System.Windows.Forms\n  isExternal: false\n  name: ControlStyles\n  nameWithType: ControlStyles\n  fullName: System.Windows.Forms.ControlStyles\n- uid: System.Windows.Forms.ControlStyles.CacheText\n  parent: System.Windows.Forms.ControlStyles\n  isExternal: false\n  name: CacheText\n  nameWithType: ControlStyles.CacheText\n  fullName: ControlStyles.CacheText\n- uid: System.Windows.Forms.ControlStyles.ContainerControl\n  parent: System.Windows.Forms.ControlStyles\n  isExternal: false\n  name: ContainerControl\n  nameWithType: ControlStyles.ContainerControl\n  fullName: ControlStyles.ContainerControl\n- uid: System.Windows.Forms.ControlStyles.DoubleBuffer\n  parent: System.Windows.Forms.ControlStyles\n  isExternal: false\n  name: DoubleBuffer\n  nameWithType: ControlStyles.DoubleBuffer\n  fullName: ControlStyles.DoubleBuffer\n- uid: System.Windows.Forms.ControlStyles.EnableNotifyMessage\n  parent: System.Windows.Forms.ControlStyles\n  isExternal: false\n  name: EnableNotifyMessage\n  nameWithType: ControlStyles.EnableNotifyMessage\n  fullName: ControlStyles.EnableNotifyMessage\n- uid: System.Windows.Forms.ControlStyles.FixedHeight\n  parent: System.Windows.Forms.ControlStyles\n  isExternal: false\n  name: FixedHeight\n  nameWithType: ControlStyles.FixedHeight\n  fullName: ControlStyles.FixedHeight\n- uid: System.Windows.Forms.ControlStyles.FixedWidth\n  parent: System.Windows.Forms.ControlStyles\n  isExternal: false\n  name: FixedWidth\n  nameWithType: ControlStyles.FixedWidth\n  fullName: ControlStyles.FixedWidth\n- uid: System.Windows.Forms.ControlStyles.Opaque\n  parent: System.Windows.Forms.ControlStyles\n  isExternal: false\n  name: Opaque\n  nameWithType: ControlStyles.Opaque\n  fullName: ControlStyles.Opaque\n- uid: System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer\n  parent: System.Windows.Forms.ControlStyles\n  isExternal: false\n  name: OptimizedDoubleBuffer\n  nameWithType: ControlStyles.OptimizedDoubleBuffer\n  fullName: ControlStyles.OptimizedDoubleBuffer\n- uid: System.Windows.Forms.ControlStyles.ResizeRedraw\n  parent: System.Windows.Forms.ControlStyles\n  isExternal: false\n  name: ResizeRedraw\n  nameWithType: ControlStyles.ResizeRedraw\n  fullName: ControlStyles.ResizeRedraw\n- uid: System.Windows.Forms.ControlStyles.Selectable\n  parent: System.Windows.Forms.ControlStyles\n  isExternal: false\n  name: Selectable\n  nameWithType: ControlStyles.Selectable\n  fullName: ControlStyles.Selectable\n- uid: System.Windows.Forms.ControlStyles.StandardClick\n  parent: System.Windows.Forms.ControlStyles\n  isExternal: false\n  name: StandardClick\n  nameWithType: ControlStyles.StandardClick\n  fullName: ControlStyles.StandardClick\n- uid: System.Windows.Forms.ControlStyles.StandardDoubleClick\n  parent: System.Windows.Forms.ControlStyles\n  isExternal: false\n  name: StandardDoubleClick\n  nameWithType: ControlStyles.StandardDoubleClick\n  fullName: ControlStyles.StandardDoubleClick\n- uid: System.Windows.Forms.ControlStyles.SupportsTransparentBackColor\n  parent: System.Windows.Forms.ControlStyles\n  isExternal: false\n  name: SupportsTransparentBackColor\n  nameWithType: ControlStyles.SupportsTransparentBackColor\n  fullName: ControlStyles.SupportsTransparentBackColor\n- uid: System.Windows.Forms.ControlStyles.UserMouse\n  parent: System.Windows.Forms.ControlStyles\n  isExternal: false\n  name: UserMouse\n  nameWithType: ControlStyles.UserMouse\n  fullName: ControlStyles.UserMouse\n- uid: System.Windows.Forms.ControlStyles.UserPaint\n  parent: System.Windows.Forms.ControlStyles\n  isExternal: false\n  name: UserPaint\n  nameWithType: ControlStyles.UserPaint\n  fullName: ControlStyles.UserPaint\n- uid: System.Windows.Forms.ControlStyles.UseTextForAccessibility\n  parent: System.Windows.Forms.ControlStyles\n  isExternal: false\n  name: UseTextForAccessibility\n  nameWithType: ControlStyles.UseTextForAccessibility\n  fullName: ControlStyles.UseTextForAccessibility\n"}