{"nodes":[{"content":"Provides high-level access to the definition of a binding, which connects the properties of binding target objects (typically, WPF elements), and any data source (for example, a database, an XML file, or any object that contains data).","nodes":[{"pos":[0,235],"content":"Provides high-level access to the definition of a binding, which connects the properties of binding target objects (typically, WPF elements), and any data source (for example, a database, an XML file, or any object that contains data).","nodes":[{"content":"Provides high-level access to the definition of a binding, which connects the properties of binding target objects (typically, WPF elements), and any data source (for example, a database, an XML file, or any object that contains data).","pos":[0,235]}]}],"pos":[2680,2916],"yaml":true},{"content":"[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] data binding provides a simple and consistent way for applications to present and interact with data. Data binding enables you to synchronize the values of the properties of two different objects.  \n  \n To establish a binding, use the <xref:System.Windows.Data.Binding> class or one of the other classes that inherit <xref:System.Windows.Data.BindingBase>. Regardless of what object you are binding and the nature of your data source, each binding follows the model illustrated by the following figure.  \n  \n ![Basic data binding diagram](~/add/media/databindingmostbasic.png \"Basic data binding diagram\")  \n  \n The figure demonstrates the following fundamental [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] data binding concepts.  \n  \n-   Each binding typically has these four components: a binding target object, a target property, a binding source, and a <xref:System.Windows.Data.Binding.Path%2A> to the value in the binding source to use. For example, if you want to bind the content of a <xref:System.Windows.Controls.TextBox> to the Name property of an Employee object, your target object is the <xref:System.Windows.Controls.TextBox>, the target property is the <xref:System.Windows.Controls.TextBox.Text%2A> property, the value to use is Name, and the source object is the Employee object.  \n  \n-   The target property must be a dependency property. This also means that you cannot bind a field. Most properties of <xref:System.Windows.UIElement> objects are dependency properties and most dependency properties, except read-only ones, support data binding by default. (Only <xref:System.Windows.DependencyObject> types can define dependency properties and all <xref:System.Windows.UIElement> objects derive from <xref:System.Windows.DependencyObject>.)  \n  \n-   Although not specified in the figure, it should be noted that the binding source object is not restricted to being a custom [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] object. [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] data binding supports data in the form of [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] objects and [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]. To provide some examples, your binding source may be a <xref:System.Windows.UIElement>, any list object, a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] object that is associated with [!INCLUDE[TLA#tla_adonet](~/includes/tlasharptla-adonet-md.md)] data or Web Services, or an XmlNode that contains your [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] data.  \n  \n Use the <xref:System.Windows.Data.Binding.Mode%2A> property to specify the direction of the data flow. To detect source changes in one-way or two-way bindings, the source must implement a suitable property change notification mechanism such as <xref:System.ComponentModel.INotifyPropertyChanged>. For an example, see [How to: Implement Property Change Notification](~/docs/framework/wpf/data/how-to-implement-property-change-notification.md). The <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> property specifies the timing of source updates. For more information, see \"Basic Data Binding Concepts\" in [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).  \n  \n<a name=\"xamlAttributeUsage_PriorityBinding\"></a>   \n## XAML Attribute Usage  \n  \n```  \n<object property=\"{Binding  declaration}\"/>  \n```  \n  \n<a name=\"xamlValues_PriorityBinding\"></a>   \n## XAML Values  \n *declaration*  \n Zero or more attribute-assignment clauses separated by commas (,). For more information, see [Binding Markup Extension](~/docs/framework/wpf/advanced/binding-markup-extension.md) or [Binding Declarations Overview](~/docs/framework/wpf/data/binding-declarations-overview.md).","nodes":[{"pos":[0,266],"content":"[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] data binding provides a simple and consistent way for applications to present and interact with data. Data binding enables you to synchronize the values of the properties of two different objects.","nodes":[{"content":"<ph id=\"ph1\">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> data binding provides a simple and consistent way for applications to present and interact with data.","pos":[0,171],"source":"[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] data binding provides a simple and consistent way for applications to present and interact with data."},{"content":"Data binding enables you to synchronize the values of the properties of two different objects.","pos":[172,266]}]},{"pos":[273,572],"content":"To establish a binding, use the <xref:System.Windows.Data.Binding> class or one of the other classes that inherit <xref:System.Windows.Data.BindingBase>. Regardless of what object you are binding and the nature of your data source, each binding follows the model illustrated by the following figure.","nodes":[{"content":"To establish a binding, use the <xref:System.Windows.Data.Binding> class or one of the other classes that inherit <xref:System.Windows.Data.BindingBase>. Regardless of what object you are binding and the nature of your data source, each binding follows the model illustrated by the following figure.","pos":[0,299],"nodes":[{"content":"To establish a binding, use the <ph id=\"ph1\">&lt;xref:System.Windows.Data.Binding&gt;</ph> class or one of the other classes that inherit <ph id=\"ph2\">&lt;xref:System.Windows.Data.BindingBase&gt;</ph>.","pos":[0,153],"source":"To establish a binding, use the <xref:System.Windows.Data.Binding> class or one of the other classes that inherit <xref:System.Windows.Data.BindingBase>."},{"content":"Regardless of what object you are binding and the nature of your data source, each binding follows the model illustrated by the following figure.","pos":[154,299]}]}]},{"pos":[579,675],"content":"<bpt id=\"p1\">![</bpt>Basic data binding diagram<ept id=\"p1\">]</ept><bpt id=\"p2\">(~/add/media/databindingmostbasic.png \"</bpt>Basic data binding diagram<ept id=\"p2\">\")</ept>","source":"![Basic data binding diagram](~/add/media/databindingmostbasic.png \"Basic data binding diagram\")"},{"pos":[682,826],"content":"The figure demonstrates the following fundamental <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> data binding concepts.","source":"The figure demonstrates the following fundamental [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] data binding concepts."},{"pos":[836,1394],"content":"Each binding typically has these four components: a binding target object, a target property, a binding source, and a <xref:System.Windows.Data.Binding.Path%2A> to the value in the binding source to use. For example, if you want to bind the content of a <xref:System.Windows.Controls.TextBox> to the Name property of an Employee object, your target object is the <xref:System.Windows.Controls.TextBox>, the target property is the <xref:System.Windows.Controls.TextBox.Text%2A> property, the value to use is Name, and the source object is the Employee object.","nodes":[{"content":"Each binding typically has these four components: a binding target object, a target property, a binding source, and a <xref:System.Windows.Data.Binding.Path%2A> to the value in the binding source to use. For example, if you want to bind the content of a <xref:System.Windows.Controls.TextBox> to the Name property of an Employee object, your target object is the <xref:System.Windows.Controls.TextBox>, the target property is the <xref:System.Windows.Controls.TextBox.Text%2A> property, the value to use is Name, and the source object is the Employee object.","pos":[0,558],"nodes":[{"content":"Each binding typically has these four components: a binding target object, a target property, a binding source, and a <ph id=\"ph1\">&lt;xref:System.Windows.Data.Binding.Path%2A&gt;</ph> to the value in the binding source to use.","pos":[0,203],"source":"Each binding typically has these four components: a binding target object, a target property, a binding source, and a <xref:System.Windows.Data.Binding.Path%2A> to the value in the binding source to use."},{"content":"For example, if you want to bind the content of a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> to the Name property of an Employee object, your target object is the <ph id=\"ph2\">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>, the target property is the <ph id=\"ph3\">&lt;xref:System.Windows.Controls.TextBox.Text%2A&gt;</ph> property, the value to use is Name, and the source object is the Employee object.","pos":[204,558],"source":" For example, if you want to bind the content of a <xref:System.Windows.Controls.TextBox> to the Name property of an Employee object, your target object is the <xref:System.Windows.Controls.TextBox>, the target property is the <xref:System.Windows.Controls.TextBox.Text%2A> property, the value to use is Name, and the source object is the Employee object."}]}]},{"pos":[1404,1858],"content":"The target property must be a dependency property. This also means that you cannot bind a field. Most properties of <xref:System.Windows.UIElement> objects are dependency properties and most dependency properties, except read-only ones, support data binding by default. (Only <xref:System.Windows.DependencyObject> types can define dependency properties and all <xref:System.Windows.UIElement> objects derive from <xref:System.Windows.DependencyObject>.)","nodes":[{"content":"The target property must be a dependency property. This also means that you cannot bind a field. Most properties of <xref:System.Windows.UIElement> objects are dependency properties and most dependency properties, except read-only ones, support data binding by default. (Only <xref:System.Windows.DependencyObject> types can define dependency properties and all <xref:System.Windows.UIElement> objects derive from <xref:System.Windows.DependencyObject>.)","pos":[0,454],"nodes":[{"content":"The target property must be a dependency property.","pos":[0,50]},{"content":"This also means that you cannot bind a field.","pos":[51,96]},{"content":"Most properties of <ph id=\"ph1\">&lt;xref:System.Windows.UIElement&gt;</ph> objects are dependency properties and most dependency properties, except read-only ones, support data binding by default.","pos":[97,269],"source":" Most properties of <xref:System.Windows.UIElement> objects are dependency properties and most dependency properties, except read-only ones, support data binding by default."},{"content":"(Only <ph id=\"ph1\">&lt;xref:System.Windows.DependencyObject&gt;</ph> types can define dependency properties and all <ph id=\"ph2\">&lt;xref:System.Windows.UIElement&gt;</ph> objects derive from <ph id=\"ph3\">&lt;xref:System.Windows.DependencyObject&gt;</ph>.)","pos":[270,454],"source":" (Only <xref:System.Windows.DependencyObject> types can define dependency properties and all <xref:System.Windows.UIElement> objects derive from <xref:System.Windows.DependencyObject>.)"}]}]},{"pos":[1868,2689],"content":"Although not specified in the figure, it should be noted that the binding source object is not restricted to being a custom [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] object. [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] data binding supports data in the form of [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] objects and [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]. To provide some examples, your binding source may be a <xref:System.Windows.UIElement>, any list object, a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] object that is associated with [!INCLUDE[TLA#tla_adonet](~/includes/tlasharptla-adonet-md.md)] data or Web Services, or an XmlNode that contains your [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] data.","nodes":[{"content":"Although not specified in the figure, it should be noted that the binding source object is not restricted to being a custom <ph id=\"ph1\">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph> object.","pos":[0,191],"source":"Although not specified in the figure, it should be noted that the binding source object is not restricted to being a custom [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] object."},{"content":"<ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> data binding supports data in the form of <ph id=\"ph2\">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph> objects and <ph id=\"ph3\">[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]</ph>.","pos":[192,438],"source":"[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] data binding supports data in the form of [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] objects and [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]."},{"content":"To provide some examples, your binding source may be a <ph id=\"ph1\">&lt;xref:System.Windows.UIElement&gt;</ph>, any list object, a <ph id=\"ph2\">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph> object that is associated with <ph id=\"ph3\">[!INCLUDE[TLA#tla_adonet](~/includes/tlasharptla-adonet-md.md)]</ph> data or Web Services, or an XmlNode that contains your <ph id=\"ph4\">[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]</ph> data.","pos":[439,821],"source":" To provide some examples, your binding source may be a <xref:System.Windows.UIElement>, any list object, a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] object that is associated with [!INCLUDE[TLA#tla_adonet](~/includes/tlasharptla-adonet-md.md)] data or Web Services, or an XmlNode that contains your [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] data."}]},{"pos":[2696,3385],"content":"Use the <xref:System.Windows.Data.Binding.Mode%2A> property to specify the direction of the data flow. To detect source changes in one-way or two-way bindings, the source must implement a suitable property change notification mechanism such as <xref:System.ComponentModel.INotifyPropertyChanged>. For an example, see [How to: Implement Property Change Notification](~/docs/framework/wpf/data/how-to-implement-property-change-notification.md). The <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> property specifies the timing of source updates. For more information, see \"Basic Data Binding Concepts\" in [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Windows.Data.Binding.Mode%2A&gt;</ph> property to specify the direction of the data flow.","pos":[0,102],"source":"Use the <xref:System.Windows.Data.Binding.Mode%2A> property to specify the direction of the data flow."},{"content":"To detect source changes in one-way or two-way bindings, the source must implement a suitable property change notification mechanism such as <ph id=\"ph1\">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph>.","pos":[103,296],"source":" To detect source changes in one-way or two-way bindings, the source must implement a suitable property change notification mechanism such as <xref:System.ComponentModel.INotifyPropertyChanged>."},{"content":"For an example, see <bpt id=\"p1\">[</bpt>How to: Implement Property Change Notification<ept id=\"p1\">](~/docs/framework/wpf/data/how-to-implement-property-change-notification.md)</ept>.","pos":[297,442],"source":" For an example, see [How to: Implement Property Change Notification](~/docs/framework/wpf/data/how-to-implement-property-change-notification.md)."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt;</ph> property specifies the timing of source updates.","pos":[443,553],"source":" The <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> property specifies the timing of source updates."},{"content":"For more information, see \"Basic Data Binding Concepts\" in <bpt id=\"p1\">[</bpt>Data Binding Overview<ept id=\"p1\">](~/docs/framework/wpf/data/data-binding-overview.md)</ept>.","pos":[554,689],"source":" For more information, see \"Basic Data Binding Concepts\" in [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md)."}]},{"pos":[3447,3467],"content":"XAML Attribute Usage","linkify":"XAML Attribute Usage","nodes":[{"content":"XAML Attribute Usage","pos":[0,20]}]},{"pos":[3582,3593],"content":"XAML Values","linkify":"XAML Values","nodes":[{"content":"XAML Values","pos":[0,11]}]},{"pos":[3597,3888],"content":"*declaration*  \n Zero or more attribute-assignment clauses separated by commas (,). For more information, see [Binding Markup Extension](~/docs/framework/wpf/advanced/binding-markup-extension.md) or [Binding Declarations Overview](~/docs/framework/wpf/data/binding-declarations-overview.md).","nodes":[{"content":"<bpt id=\"p1\">*</bpt>declaration<ept id=\"p1\">*</ept>","pos":[0,13],"source":"*declaration*"},{"content":" Zero or more attribute-assignment clauses separated by commas (,). For more information, see [Binding Markup Extension](~/docs/framework/wpf/advanced/binding-markup-extension.md) or [Binding Declarations Overview](~/docs/framework/wpf/data/binding-declarations-overview.md).","pos":[16,291],"nodes":[{"content":"Zero or more attribute-assignment clauses separated by commas (,).","pos":[1,67]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Binding Markup Extension<ept id=\"p1\">](~/docs/framework/wpf/advanced/binding-markup-extension.md)</ept> or <bpt id=\"p2\">[</bpt>Binding Declarations Overview<ept id=\"p2\">](~/docs/framework/wpf/data/binding-declarations-overview.md)</ept>.","pos":[68,275],"source":" For more information, see [Binding Markup Extension](~/docs/framework/wpf/advanced/binding-markup-extension.md) or [Binding Declarations Overview](~/docs/framework/wpf/data/binding-declarations-overview.md)."}]}]}],"pos":[2927,6854],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Data.Binding\"></xref> class.","nodes":[{"pos":[0,89],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Data.Binding\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Windows.Data.Binding\"></xref> class."}],"pos":[8678,8768],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Data.Binding\"></xref> class with an initial path.","nodes":[{"pos":[0,110],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Data.Binding\"&gt;&lt;/xref&gt;</ph> class with an initial path.","source":"Initializes a new instance of the <xref href=\"System.Windows.Data.Binding\"></xref> class with an initial path."}],"pos":[9826,9937],"yaml":true},{"content":"The initial <xref href=\"System.Windows.Data.Binding.Path\"></xref> for the binding.","nodes":[{"pos":[0,82],"content":"The initial <ph id=\"ph1\">&lt;xref href=\"System.Windows.Data.Binding.Path\"&gt;&lt;/xref&gt;</ph> for the binding.","source":"The initial <xref href=\"System.Windows.Data.Binding.Path\"></xref> for the binding."}],"pos":[10066,10149],"yaml":true},{"content":"Adds a handler for the <xref href=\"System.Windows.Data.Binding.SourceUpdated\"></xref> attached event.","nodes":[{"pos":[0,101],"content":"Adds a handler for the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Data.Binding.SourceUpdated\"&gt;&lt;/xref&gt;</ph> attached event.","source":"Adds a handler for the <xref href=\"System.Windows.Data.Binding.SourceUpdated\"></xref> attached event."}],"pos":[11625,11727],"yaml":true},{"content":"This method supports attached event usage in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].","nodes":[{"pos":[0,107],"content":"This method supports attached event usage in <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>.","source":"This method supports attached event usage in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]."}],"pos":[11738,11846],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to the event.","nodes":[{"pos":[0,130],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.UIElement\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Windows.ContentElement\"&gt;&lt;/xref&gt;</ph> that listens to the event.","source":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to the event."}],"pos":[12117,12248],"yaml":true},{"content":"The handler to add.","nodes":[{"pos":[0,19],"content":"The handler to add.","nodes":[{"content":"The handler to add.","pos":[0,19]}]}],"pos":[12360,12380],"yaml":true},{"content":"Adds a handler for the <xref href=\"System.Windows.Data.Binding.TargetUpdated\"></xref> attached event.","nodes":[{"pos":[0,101],"content":"Adds a handler for the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Data.Binding.TargetUpdated\"&gt;&lt;/xref&gt;</ph> attached event.","source":"Adds a handler for the <xref href=\"System.Windows.Data.Binding.TargetUpdated\"></xref> attached event."}],"pos":[13852,13954],"yaml":true},{"content":"This method supports attached event usage in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].","nodes":[{"pos":[0,107],"content":"This method supports attached event usage in <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>.","source":"This method supports attached event usage in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]."}],"pos":[13965,14073],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to the event.","nodes":[{"pos":[0,130],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.UIElement\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Windows.ContentElement\"&gt;&lt;/xref&gt;</ph> that listens to the event.","source":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to the event."}],"pos":[14344,14475],"yaml":true},{"content":"The handler to add.","nodes":[{"pos":[0,19],"content":"The handler to add.","nodes":[{"content":"The handler to add.","pos":[0,19]}]}],"pos":[14587,14607],"yaml":true},{"content":"Gets or sets opaque data passed to the asynchronous data dispatcher.","nodes":[{"pos":[0,68],"content":"Gets or sets opaque data passed to the asynchronous data dispatcher.","nodes":[{"content":"Gets or sets opaque data passed to the asynchronous data dispatcher.","pos":[0,68]}]}],"pos":[15572,15641],"yaml":true},{"content":"Data passed to the asynchronous data dispatcher.","nodes":[{"pos":[0,48],"content":"Data passed to the asynchronous data dispatcher.","nodes":[{"content":"Data passed to the asynchronous data dispatcher.","pos":[0,48]}]}],"pos":[15760,15809],"yaml":true},{"content":"Gets or sets a value that indicates whether to evaluate the <xref href=\"System.Windows.Data.Binding.Path\"></xref> relative to the data item or the <xref href=\"System.Windows.Data.DataSourceProvider\"></xref> object.","nodes":[{"pos":[0,214],"content":"Gets or sets a value that indicates whether to evaluate the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Data.Binding.Path\"&gt;&lt;/xref&gt;</ph> relative to the data item or the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Data.DataSourceProvider\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets or sets a value that indicates whether to evaluate the <xref href=\"System.Windows.Data.Binding.Path\"></xref> relative to the data item or the <xref href=\"System.Windows.Data.DataSourceProvider\"></xref> object."}],"pos":[16844,17059],"yaml":true},{"content":"The normal behavior (when this property is `false`) includes special treatment for <xref:System.Windows.Data.DataSourceProvider> objects. In this case, the binding engine evaluates the <xref:System.Windows.Data.Binding.Path%2A> relative to the object obtained from the <xref:System.Windows.Data.DataSourceProvider.Data%2A> property. In addition, the binding listens for the <xref:System.Windows.Data.DataSourceProvider.DataChanged> event and reacts accordingly. Setting this property to `true` overrides this behavior and gives the binding access to properties of the <xref:System.Windows.Data.DataSourceProvider> object itself.","nodes":[{"pos":[0,628],"content":"The normal behavior (when this property is `false`) includes special treatment for <xref:System.Windows.Data.DataSourceProvider> objects. In this case, the binding engine evaluates the <xref:System.Windows.Data.Binding.Path%2A> relative to the object obtained from the <xref:System.Windows.Data.DataSourceProvider.Data%2A> property. In addition, the binding listens for the <xref:System.Windows.Data.DataSourceProvider.DataChanged> event and reacts accordingly. Setting this property to `true` overrides this behavior and gives the binding access to properties of the <xref:System.Windows.Data.DataSourceProvider> object itself.","nodes":[{"content":"The normal behavior (when this property is <ph id=\"ph1\">`false`</ph>) includes special treatment for <ph id=\"ph2\">&lt;xref:System.Windows.Data.DataSourceProvider&gt;</ph> objects.","pos":[0,137],"source":"The normal behavior (when this property is `false`) includes special treatment for <xref:System.Windows.Data.DataSourceProvider> objects."},{"content":"In this case, the binding engine evaluates the <ph id=\"ph1\">&lt;xref:System.Windows.Data.Binding.Path%2A&gt;</ph> relative to the object obtained from the <ph id=\"ph2\">&lt;xref:System.Windows.Data.DataSourceProvider.Data%2A&gt;</ph> property.","pos":[138,332],"source":" In this case, the binding engine evaluates the <xref:System.Windows.Data.Binding.Path%2A> relative to the object obtained from the <xref:System.Windows.Data.DataSourceProvider.Data%2A> property."},{"content":"In addition, the binding listens for the <ph id=\"ph1\">&lt;xref:System.Windows.Data.DataSourceProvider.DataChanged&gt;</ph> event and reacts accordingly.","pos":[333,461],"source":" In addition, the binding listens for the <xref:System.Windows.Data.DataSourceProvider.DataChanged> event and reacts accordingly."},{"content":"Setting this property to <ph id=\"ph1\">`true`</ph> overrides this behavior and gives the binding access to properties of the <ph id=\"ph2\">&lt;xref:System.Windows.Data.DataSourceProvider&gt;</ph> object itself.","pos":[462,628],"source":" Setting this property to `true` overrides this behavior and gives the binding access to properties of the <xref:System.Windows.Data.DataSourceProvider> object itself."}]}],"pos":[17070,17699],"yaml":true,"extradata":"MT"},{"content":"`false` to evaluate the path relative to the data item itself; otherwise, `true`. The default is `false`.","nodes":[{"pos":[0,105],"content":"`false` to evaluate the path relative to the data item itself; otherwise, `true`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`false`</ph> to evaluate the path relative to the data item itself; otherwise, <ph id=\"ph2\">`true`</ph>.","pos":[0,81],"source":"`false` to evaluate the path relative to the data item itself; otherwise, `true`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[82,105],"source":" The default is `false`."}]}],"pos":[17828,17936],"yaml":true},{"content":"Gets or sets the converter to use.","nodes":[{"pos":[0,34],"content":"Gets or sets the converter to use.","nodes":[{"content":"Gets or sets the converter to use.","pos":[0,34]}]}],"pos":[18910,18945],"yaml":true},{"content":"A binding implicitly uses a default converter that tries to do a type conversion between the source value and the target value. If a conversion cannot be made, the default converter returns `null`.  \n  \n If you want to associate a custom value converter with a binding, you should create a class that implements the <xref:System.Windows.Data.IValueConverter> interface and supply implementations for the <xref:System.Windows.Data.IValueConverter.Convert%2A> and <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> methods. Value converters can change data from one type to another, translate between cultural details such as character sets, or modify other aspects of their presentation. For examples of typical conversion scenarios, see \"Data Conversion\" in the [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).  \n  \n<a name=\"xamlAttributeUsage_Converter\"></a>   \n## XAML Attribute Usage  \n  \n```  \n<object Converter=\"myConverter\"/>  \n```  \n  \n<a name=\"xamlValues_Converter\"></a>   \n## XAML Values  \n *myConverter*  \n A resource reference to a class that implements the <xref:System.Windows.Data.IValueConverter> interface, which includes implementations of the <xref:System.Windows.Data.IValueConverter.Convert%2A> and <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> methods. To refer to a value converter, use the [StaticResource Markup Extension](~/docs/framework/wpf/advanced/staticresource-markup-extension.md).","nodes":[{"pos":[0,197],"content":"A binding implicitly uses a default converter that tries to do a type conversion between the source value and the target value. If a conversion cannot be made, the default converter returns `null`.","nodes":[{"content":"A binding implicitly uses a default converter that tries to do a type conversion between the source value and the target value.","pos":[0,127]},{"content":"If a conversion cannot be made, the default converter returns <ph id=\"ph1\">`null`</ph>.","pos":[128,197],"source":" If a conversion cannot be made, the default converter returns `null`."}]},{"pos":[204,845],"content":"If you want to associate a custom value converter with a binding, you should create a class that implements the <xref:System.Windows.Data.IValueConverter> interface and supply implementations for the <xref:System.Windows.Data.IValueConverter.Convert%2A> and <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> methods. Value converters can change data from one type to another, translate between cultural details such as character sets, or modify other aspects of their presentation. For examples of typical conversion scenarios, see \"Data Conversion\" in the [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).","nodes":[{"content":"If you want to associate a custom value converter with a binding, you should create a class that implements the <ph id=\"ph1\">&lt;xref:System.Windows.Data.IValueConverter&gt;</ph> interface and supply implementations for the <ph id=\"ph2\">&lt;xref:System.Windows.Data.IValueConverter.Convert%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Windows.Data.IValueConverter.ConvertBack%2A&gt;</ph> methods.","pos":[0,324],"source":"If you want to associate a custom value converter with a binding, you should create a class that implements the <xref:System.Windows.Data.IValueConverter> interface and supply implementations for the <xref:System.Windows.Data.IValueConverter.Convert%2A> and <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> methods."},{"content":"Value converters can change data from one type to another, translate between cultural details such as character sets, or modify other aspects of their presentation.","pos":[325,489]},{"content":"For examples of typical conversion scenarios, see \"Data Conversion\" in the <bpt id=\"p1\">[</bpt>Data Binding Overview<ept id=\"p1\">](~/docs/framework/wpf/data/data-binding-overview.md)</ept>.","pos":[490,641],"source":" For examples of typical conversion scenarios, see \"Data Conversion\" in the [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md)."}]},{"pos":[901,921],"content":"XAML Attribute Usage","linkify":"XAML Attribute Usage","nodes":[{"content":"XAML Attribute Usage","pos":[0,20]}]},{"pos":[1020,1031],"content":"XAML Values","linkify":"XAML Values","nodes":[{"content":"XAML Values","pos":[0,11]}]},{"pos":[1035,1460],"content":"*myConverter*  \n A resource reference to a class that implements the <xref:System.Windows.Data.IValueConverter> interface, which includes implementations of the <xref:System.Windows.Data.IValueConverter.Convert%2A> and <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> methods. To refer to a value converter, use the [StaticResource Markup Extension](~/docs/framework/wpf/advanced/staticresource-markup-extension.md).","nodes":[{"content":"<bpt id=\"p1\">*</bpt>myConverter<ept id=\"p1\">*</ept>","pos":[0,13],"source":"*myConverter*"},{"content":" A resource reference to a class that implements the <xref:System.Windows.Data.IValueConverter> interface, which includes implementations of the <xref:System.Windows.Data.IValueConverter.Convert%2A> and <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> methods. To refer to a value converter, use the [StaticResource Markup Extension](~/docs/framework/wpf/advanced/staticresource-markup-extension.md).","pos":[16,425],"nodes":[{"content":"A resource reference to a class that implements the <ph id=\"ph1\">&lt;xref:System.Windows.Data.IValueConverter&gt;</ph> interface, which includes implementations of the <ph id=\"ph2\">&lt;xref:System.Windows.Data.IValueConverter.Convert%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Windows.Data.IValueConverter.ConvertBack%2A&gt;</ph> methods.","pos":[1,269],"source":" A resource reference to a class that implements the <xref:System.Windows.Data.IValueConverter> interface, which includes implementations of the <xref:System.Windows.Data.IValueConverter.Convert%2A> and <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> methods."},{"content":"To refer to a value converter, use the <bpt id=\"p1\">[</bpt>StaticResource Markup Extension<ept id=\"p1\">](~/docs/framework/wpf/advanced/staticresource-markup-extension.md)</ept>.","pos":[270,409],"source":" To refer to a value converter, use the [StaticResource Markup Extension](~/docs/framework/wpf/advanced/staticresource-markup-extension.md)."}]}]}],"pos":[18956,20441],"yaml":true,"extradata":"MT"},{"content":"A value of type <xref href=\"System.Windows.Data.IValueConverter\"></xref>. The default is `null`.","nodes":[{"pos":[0,96],"content":"A value of type <xref href=\"System.Windows.Data.IValueConverter\"></xref>. The default is `null`.","nodes":[{"content":"A value of type <ph id=\"ph1\">&lt;xref href=\"System.Windows.Data.IValueConverter\"&gt;&lt;/xref&gt;</ph>.","pos":[0,73],"source":"A value of type <xref href=\"System.Windows.Data.IValueConverter\"></xref>."},{"content":"The default is <ph id=\"ph1\">`null`</ph>.","pos":[74,96],"source":" The default is `null`."}]}],"pos":[20610,20707],"yaml":true},{"content":"Gets or sets the culture in which to evaluate the converter.","nodes":[{"pos":[0,60],"content":"Gets or sets the culture in which to evaluate the converter.","nodes":[{"content":"Gets or sets the culture in which to evaluate the converter.","pos":[0,60]}]}],"pos":[21711,21772],"yaml":true},{"content":"If you do not set this property, the binding engine uses the `Language` property of the binding target object. In [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] this defaults to \"en-US\" or inherits the value from the root element (or any element) of the page, if one has been explicitly set.  \n  \n For information about data conversion, see the Data Conversion section in the [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).","nodes":[{"pos":[0,306],"content":"If you do not set this property, the binding engine uses the `Language` property of the binding target object. In [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] this defaults to \"en-US\" or inherits the value from the root element (or any element) of the page, if one has been explicitly set.","nodes":[{"content":"If you do not set this property, the binding engine uses the <ph id=\"ph1\">`Language`</ph> property of the binding target object.","pos":[0,110],"source":"If you do not set this property, the binding engine uses the `Language` property of the binding target object."},{"content":"In <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> this defaults to \"en-US\" or inherits the value from the root element (or any element) of the page, if one has been explicitly set.","pos":[111,306],"source":" In [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] this defaults to \"en-US\" or inherits the value from the root element (or any element) of the page, if one has been explicitly set."}]},{"pos":[313,467],"content":"For information about data conversion, see the Data Conversion section in the <bpt id=\"p1\">[</bpt>Data Binding Overview<ept id=\"p1\">](~/docs/framework/wpf/data/data-binding-overview.md)</ept>.","source":"For information about data conversion, see the Data Conversion section in the [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md)."}],"pos":[21783,22257],"yaml":true,"extradata":"MT"},{"content":"The default is `null`.","nodes":[{"pos":[0,22],"content":"The default is <ph id=\"ph1\">`null`</ph>.","source":"The default is `null`."}],"pos":[22541,22564],"yaml":true},{"content":"Gets or sets the parameter to pass to the <xref href=\"System.Windows.Data.Binding.Converter\"></xref>.","nodes":[{"pos":[0,101],"content":"Gets or sets the parameter to pass to the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Data.Binding.Converter\"&gt;&lt;/xref&gt;</ph>.","source":"Gets or sets the parameter to pass to the <xref href=\"System.Windows.Data.Binding.Converter\"></xref>."}],"pos":[23639,23741],"yaml":true},{"content":"You can use the <xref:System.Windows.Data.Binding.ConverterParameter%2A> property to specify how an object is converted.  This property passes additional information to a converter that you use on a binding.  When you specify a <xref:System.Windows.Data.Binding.ConverterParameter%2A>, the value is passed to the <xref:System.Windows.Data.IValueConverter.Convert%2A> and <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> methods as the `parameter` parameter.  \n  \n For an example, see [How to: Produce a Value Based on a List of Bound Items](~/docs/framework/wpf/data/how-to-produce-a-value-based-on-a-list-of-bound-items.md). That example shows an implementation of an <xref:System.Windows.Data.IMultiValueConverter> but the usage still applies.","nodes":[{"pos":[0,466],"content":"You can use the <xref:System.Windows.Data.Binding.ConverterParameter%2A> property to specify how an object is converted.  This property passes additional information to a converter that you use on a binding.  When you specify a <xref:System.Windows.Data.Binding.ConverterParameter%2A>, the value is passed to the <xref:System.Windows.Data.IValueConverter.Convert%2A> and <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> methods as the `parameter` parameter.","nodes":[{"content":"You can use the <ph id=\"ph1\">&lt;xref:System.Windows.Data.Binding.ConverterParameter%2A&gt;</ph> property to specify how an object is converted.","pos":[0,120],"source":"You can use the <xref:System.Windows.Data.Binding.ConverterParameter%2A> property to specify how an object is converted."},{"content":"This property passes additional information to a converter that you use on a binding.","pos":[122,207]},{"content":"When you specify a <ph id=\"ph1\">&lt;xref:System.Windows.Data.Binding.ConverterParameter%2A&gt;</ph>, the value is passed to the <ph id=\"ph2\">&lt;xref:System.Windows.Data.IValueConverter.Convert%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Windows.Data.IValueConverter.ConvertBack%2A&gt;</ph> methods as the <ph id=\"ph4\">`parameter`</ph> parameter.","pos":[209,466],"source":"  When you specify a <xref:System.Windows.Data.Binding.ConverterParameter%2A>, the value is passed to the <xref:System.Windows.Data.IValueConverter.Convert%2A> and <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> methods as the `parameter` parameter."}]},{"pos":[473,754],"content":"For an example, see [How to: Produce a Value Based on a List of Bound Items](~/docs/framework/wpf/data/how-to-produce-a-value-based-on-a-list-of-bound-items.md). That example shows an implementation of an <xref:System.Windows.Data.IMultiValueConverter> but the usage still applies.","nodes":[{"content":"For an example, see <bpt id=\"p1\">[</bpt>How to: Produce a Value Based on a List of Bound Items<ept id=\"p1\">](~/docs/framework/wpf/data/how-to-produce-a-value-based-on-a-list-of-bound-items.md)</ept>.","pos":[0,161],"source":"For an example, see [How to: Produce a Value Based on a List of Bound Items](~/docs/framework/wpf/data/how-to-produce-a-value-based-on-a-list-of-bound-items.md)."},{"content":"That example shows an implementation of an <ph id=\"ph1\">&lt;xref:System.Windows.Data.IMultiValueConverter&gt;</ph> but the usage still applies.","pos":[162,281],"source":" That example shows an implementation of an <xref:System.Windows.Data.IMultiValueConverter> but the usage still applies."}]}],"pos":[23752,24511],"yaml":true,"extradata":"MT"},{"content":"The parameter to pass to the <xref href=\"System.Windows.Data.Binding.Converter\"></xref>. The default is `null`.","nodes":[{"pos":[0,111],"content":"The parameter to pass to the <xref href=\"System.Windows.Data.Binding.Converter\"></xref>. The default is `null`.","nodes":[{"content":"The parameter to pass to the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Data.Binding.Converter\"&gt;&lt;/xref&gt;</ph>.","pos":[0,88],"source":"The parameter to pass to the <xref href=\"System.Windows.Data.Binding.Converter\"></xref>."},{"content":"The default is <ph id=\"ph1\">`null`</ph>.","pos":[89,111],"source":" The default is `null`."}]}],"pos":[24638,24750],"yaml":true},{"content":"Used as a returned value to instruct the binding engine not to perform any action.","nodes":[{"pos":[0,82],"content":"Used as a returned value to instruct the binding engine not to perform any action.","nodes":[{"content":"Used as a returned value to instruct the binding engine not to perform any action.","pos":[0,82]}]}],"pos":[25718,25801],"yaml":true},{"content":"A binding source property or a converter can return <xref:System.Windows.Data.Binding.DoNothing?displayProperty=fullName> to instruct the binding engine not to perform any action. For example, to instruct the binding engine not to transfer a value to the binding target, not to move to the next <xref:System.Windows.Data.Binding> in a <xref:System.Windows.Data.PriorityBinding>, or not to use the `FallBackValue` or default value.","nodes":[{"pos":[0,430],"content":"A binding source property or a converter can return <xref:System.Windows.Data.Binding.DoNothing?displayProperty=fullName> to instruct the binding engine not to perform any action. For example, to instruct the binding engine not to transfer a value to the binding target, not to move to the next <xref:System.Windows.Data.Binding> in a <xref:System.Windows.Data.PriorityBinding>, or not to use the `FallBackValue` or default value.","nodes":[{"content":"A binding source property or a converter can return <ph id=\"ph1\">&lt;xref:System.Windows.Data.Binding.DoNothing?displayProperty=fullName&gt;</ph> to instruct the binding engine not to perform any action.","pos":[0,179],"source":"A binding source property or a converter can return <xref:System.Windows.Data.Binding.DoNothing?displayProperty=fullName> to instruct the binding engine not to perform any action."},{"content":"For example, to instruct the binding engine not to transfer a value to the binding target, not to move to the next <ph id=\"ph1\">&lt;xref:System.Windows.Data.Binding&gt;</ph> in a <ph id=\"ph2\">&lt;xref:System.Windows.Data.PriorityBinding&gt;</ph>, or not to use the <ph id=\"ph3\">`FallBackValue`</ph> or default value.","pos":[180,430],"source":" For example, to instruct the binding engine not to transfer a value to the binding target, not to move to the next <xref:System.Windows.Data.Binding> in a <xref:System.Windows.Data.PriorityBinding>, or not to use the `FallBackValue` or default value."}]}],"pos":[25812,26243],"yaml":true,"extradata":"MT"},{"content":"Gets or sets the name of the element to use as the binding source object.","nodes":[{"pos":[0,73],"content":"Gets or sets the name of the element to use as the binding source object.","nodes":[{"content":"Gets or sets the name of the element to use as the binding source object.","pos":[0,73]}]}],"pos":[27251,27325],"yaml":true},{"content":"This property is useful when you want to bind to the property of another element in your application. For example, if you want to use a <xref:System.Windows.Controls.Slider> to control the height of another control in your application, or if you want to bind the <xref:System.Windows.Controls.ContentControl.Content%2A> of your control to the <xref:System.Windows.Controls.Primitives.Selector.SelectedValue%2A> property of your <xref:System.Windows.Controls.ListBox> control.  \n  \n By default, bindings inherit the data context specified by the `DataContext` property, if one has been set. However, the <xref:System.Windows.Data.Binding.ElementName%2A> property is one of the ways you can explicitly set the source of a <xref:System.Windows.Data.Binding> and override the inherited data context. For more information, see [How to: Specify the Binding Source](~/docs/framework/wpf/data/how-to-specify-the-binding-source.md).  \n  \n The <xref:System.Windows.Data.Binding.Source%2A> and <xref:System.Windows.Data.Binding.RelativeSource%2A> properties of the <xref:System.Windows.Data.Binding> class also enable you to set the source of the binding explicitly. However, only one of the three properties, <xref:System.Windows.Data.Binding.ElementName%2A>, <xref:System.Windows.Data.Binding.Source%2A>, and <xref:System.Windows.Data.Binding.RelativeSource%2A>, should be set for each binding, or a conflict might occur. This property throws an exception if there is a binding source conflict.","nodes":[{"pos":[0,475],"content":"This property is useful when you want to bind to the property of another element in your application. For example, if you want to use a <xref:System.Windows.Controls.Slider> to control the height of another control in your application, or if you want to bind the <xref:System.Windows.Controls.ContentControl.Content%2A> of your control to the <xref:System.Windows.Controls.Primitives.Selector.SelectedValue%2A> property of your <xref:System.Windows.Controls.ListBox> control.","nodes":[{"content":"This property is useful when you want to bind to the property of another element in your application. For example, if you want to use a <xref:System.Windows.Controls.Slider> to control the height of another control in your application, or if you want to bind the <xref:System.Windows.Controls.ContentControl.Content%2A> of your control to the <xref:System.Windows.Controls.Primitives.Selector.SelectedValue%2A> property of your <xref:System.Windows.Controls.ListBox> control.","pos":[0,475],"nodes":[{"content":"This property is useful when you want to bind to the property of another element in your application.","pos":[0,101]},{"content":"For example, if you want to use a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Slider&gt;</ph> to control the height of another control in your application, or if you want to bind the <ph id=\"ph2\">&lt;xref:System.Windows.Controls.ContentControl.Content%2A&gt;</ph> of your control to the <ph id=\"ph3\">&lt;xref:System.Windows.Controls.Primitives.Selector.SelectedValue%2A&gt;</ph> property of your <ph id=\"ph4\">&lt;xref:System.Windows.Controls.ListBox&gt;</ph> control.","pos":[102,475],"source":" For example, if you want to use a <xref:System.Windows.Controls.Slider> to control the height of another control in your application, or if you want to bind the <xref:System.Windows.Controls.ContentControl.Content%2A> of your control to the <xref:System.Windows.Controls.Primitives.Selector.SelectedValue%2A> property of your <xref:System.Windows.Controls.ListBox> control."}]}]},{"pos":[482,923],"content":"By default, bindings inherit the data context specified by the `DataContext` property, if one has been set. However, the <xref:System.Windows.Data.Binding.ElementName%2A> property is one of the ways you can explicitly set the source of a <xref:System.Windows.Data.Binding> and override the inherited data context. For more information, see [How to: Specify the Binding Source](~/docs/framework/wpf/data/how-to-specify-the-binding-source.md).","nodes":[{"content":"By default, bindings inherit the data context specified by the <ph id=\"ph1\">`DataContext`</ph> property, if one has been set.","pos":[0,107],"source":"By default, bindings inherit the data context specified by the `DataContext` property, if one has been set."},{"content":"However, the <ph id=\"ph1\">&lt;xref:System.Windows.Data.Binding.ElementName%2A&gt;</ph> property is one of the ways you can explicitly set the source of a <ph id=\"ph2\">&lt;xref:System.Windows.Data.Binding&gt;</ph> and override the inherited data context.","pos":[108,313],"source":" However, the <xref:System.Windows.Data.Binding.ElementName%2A> property is one of the ways you can explicitly set the source of a <xref:System.Windows.Data.Binding> and override the inherited data context."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>How to: Specify the Binding Source<ept id=\"p1\">](~/docs/framework/wpf/data/how-to-specify-the-binding-source.md)</ept>.","pos":[314,441],"source":" For more information, see [How to: Specify the Binding Source](~/docs/framework/wpf/data/how-to-specify-the-binding-source.md)."}]},{"pos":[930,1485],"content":"The <xref:System.Windows.Data.Binding.Source%2A> and <xref:System.Windows.Data.Binding.RelativeSource%2A> properties of the <xref:System.Windows.Data.Binding> class also enable you to set the source of the binding explicitly. However, only one of the three properties, <xref:System.Windows.Data.Binding.ElementName%2A>, <xref:System.Windows.Data.Binding.Source%2A>, and <xref:System.Windows.Data.Binding.RelativeSource%2A>, should be set for each binding, or a conflict might occur. This property throws an exception if there is a binding source conflict.","nodes":[{"content":"The <xref:System.Windows.Data.Binding.Source%2A> and <xref:System.Windows.Data.Binding.RelativeSource%2A> properties of the <xref:System.Windows.Data.Binding> class also enable you to set the source of the binding explicitly. However, only one of the three properties, <xref:System.Windows.Data.Binding.ElementName%2A>, <xref:System.Windows.Data.Binding.Source%2A>, and <xref:System.Windows.Data.Binding.RelativeSource%2A>, should be set for each binding, or a conflict might occur. This property throws an exception if there is a binding source conflict.","pos":[0,555],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Data.Binding.Source%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Data.Binding.RelativeSource%2A&gt;</ph> properties of the <ph id=\"ph3\">&lt;xref:System.Windows.Data.Binding&gt;</ph> class also enable you to set the source of the binding explicitly.","pos":[0,225],"source":"The <xref:System.Windows.Data.Binding.Source%2A> and <xref:System.Windows.Data.Binding.RelativeSource%2A> properties of the <xref:System.Windows.Data.Binding> class also enable you to set the source of the binding explicitly."},{"content":"However, only one of the three properties, <ph id=\"ph1\">&lt;xref:System.Windows.Data.Binding.ElementName%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Windows.Data.Binding.Source%2A&gt;</ph>, and <ph id=\"ph3\">&lt;xref:System.Windows.Data.Binding.RelativeSource%2A&gt;</ph>, should be set for each binding, or a conflict might occur.","pos":[226,482],"source":" However, only one of the three properties, <xref:System.Windows.Data.Binding.ElementName%2A>, <xref:System.Windows.Data.Binding.Source%2A>, and <xref:System.Windows.Data.Binding.RelativeSource%2A>, should be set for each binding, or a conflict might occur."},{"content":"This property throws an exception if there is a binding source conflict.","pos":[483,555]}]}]}],"pos":[27336,28828],"yaml":true,"extradata":"MT"},{"content":"The value of the `Name` property or [x:Name Directive](~/docs/framework/xaml-services/x-name-directive.md) of the element of interest. You can refer to elements in code only if they are registered to the appropriate <xref href=\"System.Windows.NameScope\"></xref> through `RegisterName`. For more information, see [WPF XAML Namescopes](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md).  \n  \n The default is `null`.","nodes":[{"pos":[0,388],"content":"The value of the `Name` property or [x:Name Directive](~/docs/framework/xaml-services/x-name-directive.md) of the element of interest. You can refer to elements in code only if they are registered to the appropriate <xref href=\"System.Windows.NameScope\"></xref> through `RegisterName`. For more information, see [WPF XAML Namescopes](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md).","nodes":[{"content":"The value of the <ph id=\"ph1\">`Name`</ph> property or <bpt id=\"p1\">[</bpt>x:Name Directive<ept id=\"p1\">](~/docs/framework/xaml-services/x-name-directive.md)</ept> of the element of interest.","pos":[0,134],"source":"The value of the `Name` property or [x:Name Directive](~/docs/framework/xaml-services/x-name-directive.md) of the element of interest."},{"content":"You can refer to elements in code only if they are registered to the appropriate <ph id=\"ph1\">&lt;xref href=\"System.Windows.NameScope\"&gt;&lt;/xref&gt;</ph> through <ph id=\"ph2\">`RegisterName`</ph>.","pos":[135,285],"source":" You can refer to elements in code only if they are registered to the appropriate <xref href=\"System.Windows.NameScope\"></xref> through `RegisterName`."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>WPF XAML Namescopes<ept id=\"p1\">](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md)</ept>.","pos":[286,388],"source":" For more information, see [WPF XAML Namescopes](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md)."}]},{"pos":[395,417],"content":"The default is <ph id=\"ph1\">`null`</ph>.","source":"The default is `null`."}],"pos":[28948,29372],"yaml":true},{"content":"Returns an [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] namespace manager object used by the binding attached to the specified object.","nodes":[{"pos":[0,147],"content":"Returns an <ph id=\"ph1\">[!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)]</ph> namespace manager object used by the binding attached to the specified object.","source":"Returns an [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] namespace manager object used by the binding attached to the specified object."}],"pos":[30565,30713],"yaml":true},{"content":"This method supports attached property usage for the <xref:System.Windows.Data.Binding.XmlNamespaceManager%2A> attached property.  \n  \n [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] namespace managers are relevant only if the data in the binding came from an [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] binding source (<xref:System.Windows.Data.XmlDataProvider> object).  \n  \n If a namespace manager was not specifically applied either in the original data source creation or by subsequently calling <xref:System.Windows.Data.Binding.SetXmlNamespaceManager%2A> on the binding, then this method will return `null`.  \n  \n This method will always return `null` if the data behind the binding is not [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)].","nodes":[{"pos":[0,129],"content":"This method supports attached property usage for the <xref:System.Windows.Data.Binding.XmlNamespaceManager%2A> attached property.","nodes":[{"content":"This method supports attached property usage for the <ph id=\"ph1\">&lt;xref:System.Windows.Data.Binding.XmlNamespaceManager%2A&gt;</ph> attached property.","pos":[0,129],"source":"This method supports attached property usage for the <xref:System.Windows.Data.Binding.XmlNamespaceManager%2A> attached property."}]},{"pos":[136,400],"content":"<ph id=\"ph1\">[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]</ph> namespace managers are relevant only if the data in the binding came from an <ph id=\"ph2\">[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]</ph> binding source (<ph id=\"ph3\">&lt;xref:System.Windows.Data.XmlDataProvider&gt;</ph> object).","source":"[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] namespace managers are relevant only if the data in the binding came from an [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] binding source (<xref:System.Windows.Data.XmlDataProvider> object)."},{"pos":[407,643],"content":"If a namespace manager was not specifically applied either in the original data source creation or by subsequently calling <ph id=\"ph1\">&lt;xref:System.Windows.Data.Binding.SetXmlNamespaceManager%2A&gt;</ph> on the binding, then this method will return <ph id=\"ph2\">`null`</ph>.","source":"If a namespace manager was not specifically applied either in the original data source creation or by subsequently calling <xref:System.Windows.Data.Binding.SetXmlNamespaceManager%2A> on the binding, then this method will return `null`."},{"pos":[650,786],"content":"This method will always return <ph id=\"ph1\">`null`</ph> if the data behind the binding is not <ph id=\"ph2\">[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]</ph>.","source":"This method will always return `null` if the data behind the binding is not [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]."}],"pos":[30724,31519],"yaml":true,"extradata":"MT"},{"content":"The object from which to get namespace information.","nodes":[{"pos":[0,51],"content":"The object from which to get namespace information.","nodes":[{"content":"The object from which to get namespace information.","pos":[0,51]}]}],"pos":[31748,31800],"yaml":true},{"content":"A returned object used for viewing [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] namespaces that relate to the binding on the passed object element. This object should be cast as <xref href=\"System.Xml.XmlNamespaceManager\"></xref>.","nodes":[{"pos":[0,245],"content":"A returned object used for viewing [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] namespaces that relate to the binding on the passed object element. This object should be cast as <xref href=\"System.Xml.XmlNamespaceManager\"></xref>.","nodes":[{"content":"A returned object used for viewing <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]</ph> namespaces that relate to the binding on the passed object element.","pos":[0,162],"source":"A returned object used for viewing [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] namespaces that relate to the binding on the passed object element."},{"content":"This object should be cast as <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlNamespaceManager\"&gt;&lt;/xref&gt;</ph>.","pos":[163,245],"source":" This object should be cast as <xref href=\"System.Xml.XmlNamespaceManager\"></xref>."}]}],"pos":[31874,32120],"yaml":true},{"content":"The <code>target</code> parameter cannot be `null`.","nodes":[{"pos":[0,51],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">target</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter cannot be <ph id=\"ph2\">`null`</ph>.","source":"The <code>target</code> parameter cannot be `null`."}],"pos":[32300,32352],"yaml":true},{"content":"Used as the <xref href=\"System.ComponentModel.PropertyChangedEventArgs.PropertyName\"></xref> of <xref href=\"System.ComponentModel.PropertyChangedEventArgs\"></xref> to indicate that an indexer property has changed.","nodes":[{"pos":[0,213],"content":"Used as the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.PropertyChangedEventArgs.PropertyName\"&gt;&lt;/xref&gt;</ph> of <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.PropertyChangedEventArgs\"&gt;&lt;/xref&gt;</ph> to indicate that an indexer property has changed.","source":"Used as the <xref href=\"System.ComponentModel.PropertyChangedEventArgs.PropertyName\"></xref> of <xref href=\"System.ComponentModel.PropertyChangedEventArgs\"></xref> to indicate that an indexer property has changed."}],"pos":[33216,33430],"yaml":true},{"content":"Gets or sets a value that indicates whether the <xref href=\"System.Windows.Data.Binding\"></xref> should get and set values asynchronously.","nodes":[{"pos":[0,138],"content":"Gets or sets a value that indicates whether the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Data.Binding\"&gt;&lt;/xref&gt;</ph> should get and set values asynchronously.","source":"Gets or sets a value that indicates whether the <xref href=\"System.Windows.Data.Binding\"></xref> should get and set values asynchronously."}],"pos":[34428,34567],"yaml":true},{"content":"Use the <xref:System.Windows.Data.Binding.IsAsync%2A> property when the `get` accessor of your binding source property might take a long time. One example is an image property with a `get` accessor that downloads from the Web. Setting <xref:System.Windows.Data.Binding.IsAsync%2A> to `true` avoids blocking the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] while the download occurs.  \n  \n While waiting for the value to arrive, the binding reports the <xref:System.Windows.Data.BindingBase.FallbackValue%2A>, if one is available, or the default value of the binding target property.  \n  \n However, there should not be many scenarios where you need to use the <xref:System.Windows.Data.Binding.IsAsync%2A> property. The [!INCLUDE[TLA2#tla_net](~/includes/tla2sharptla-net-md.md)] guidelines recommend against defining properties that are orders of magnitude slower than a field set would be. When you are creating your class, consider handling extremely slow operations outside of the `get` accessor and caching the result. For more information, see [NIB: Choosing Between Properties and Methods](http://msdn.microsoft.com/en-us/55825e8f-7e2e-448a-9505-7217cc91b1af).","nodes":[{"pos":[0,395],"content":"Use the <xref:System.Windows.Data.Binding.IsAsync%2A> property when the `get` accessor of your binding source property might take a long time. One example is an image property with a `get` accessor that downloads from the Web. Setting <xref:System.Windows.Data.Binding.IsAsync%2A> to `true` avoids blocking the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] while the download occurs.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Windows.Data.Binding.IsAsync%2A&gt;</ph> property when the <ph id=\"ph2\">`get`</ph> accessor of your binding source property might take a long time.","pos":[0,142],"source":"Use the <xref:System.Windows.Data.Binding.IsAsync%2A> property when the `get` accessor of your binding source property might take a long time."},{"content":"One example is an image property with a <ph id=\"ph1\">`get`</ph> accessor that downloads from the Web.","pos":[143,226],"source":" One example is an image property with a `get` accessor that downloads from the Web."},{"content":"Setting <ph id=\"ph1\">&lt;xref:System.Windows.Data.Binding.IsAsync%2A&gt;</ph> to <ph id=\"ph2\">`true`</ph> avoids blocking the <ph id=\"ph3\">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> while the download occurs.","pos":[227,395],"source":" Setting <xref:System.Windows.Data.Binding.IsAsync%2A> to `true` avoids blocking the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] while the download occurs."}]},{"pos":[402,595],"content":"While waiting for the value to arrive, the binding reports the <xref:System.Windows.Data.BindingBase.FallbackValue%2A>, if one is available, or the default value of the binding target property.","nodes":[{"content":"While waiting for the value to arrive, the binding reports the <ph id=\"ph1\">&lt;xref:System.Windows.Data.BindingBase.FallbackValue%2A&gt;</ph>, if one is available, or the default value of the binding target property.","pos":[0,193],"source":"While waiting for the value to arrive, the binding reports the <xref:System.Windows.Data.BindingBase.FallbackValue%2A>, if one is available, or the default value of the binding target property."}]},{"pos":[602,1179],"content":"However, there should not be many scenarios where you need to use the <xref:System.Windows.Data.Binding.IsAsync%2A> property. The [!INCLUDE[TLA2#tla_net](~/includes/tla2sharptla-net-md.md)] guidelines recommend against defining properties that are orders of magnitude slower than a field set would be. When you are creating your class, consider handling extremely slow operations outside of the `get` accessor and caching the result. For more information, see [NIB: Choosing Between Properties and Methods](http://msdn.microsoft.com/en-us/55825e8f-7e2e-448a-9505-7217cc91b1af).","nodes":[{"content":"However, there should not be many scenarios where you need to use the <ph id=\"ph1\">&lt;xref:System.Windows.Data.Binding.IsAsync%2A&gt;</ph> property.","pos":[0,125],"source":"However, there should not be many scenarios where you need to use the <xref:System.Windows.Data.Binding.IsAsync%2A> property."},{"content":"The <ph id=\"ph1\">[!INCLUDE[TLA2#tla_net](~/includes/tla2sharptla-net-md.md)]</ph> guidelines recommend against defining properties that are orders of magnitude slower than a field set would be.","pos":[126,301],"source":" The [!INCLUDE[TLA2#tla_net](~/includes/tla2sharptla-net-md.md)] guidelines recommend against defining properties that are orders of magnitude slower than a field set would be."},{"content":"When you are creating your class, consider handling extremely slow operations outside of the <ph id=\"ph1\">`get`</ph> accessor and caching the result.","pos":[302,433],"source":" When you are creating your class, consider handling extremely slow operations outside of the `get` accessor and caching the result."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>NIB: Choosing Between Properties and Methods<ept id=\"p1\">](http://msdn.microsoft.com/en-us/55825e8f-7e2e-448a-9505-7217cc91b1af)</ept>.","pos":[434,577],"source":" For more information, see [NIB: Choosing Between Properties and Methods](http://msdn.microsoft.com/en-us/55825e8f-7e2e-448a-9505-7217cc91b1af)."}]}],"pos":[34578,35764],"yaml":true,"extradata":"MT"},{"content":"The default is `null`.","nodes":[{"pos":[0,22],"content":"The default is <ph id=\"ph1\">`null`</ph>.","source":"The default is `null`."}],"pos":[35879,35902],"yaml":true},{"content":"Gets or sets a value that indicates the direction of the data flow in the binding.","nodes":[{"pos":[0,82],"content":"Gets or sets a value that indicates the direction of the data flow in the binding.","nodes":[{"content":"Gets or sets a value that indicates the direction of the data flow in the binding.","pos":[0,82]}]}],"pos":[36832,36915],"yaml":true},{"content":"To support <xref:System.Windows.Data.BindingMode.OneWay> and <xref:System.Windows.Data.BindingMode.TwoWay> bindings, the underlying data must implement <xref:System.ComponentModel.INotifyPropertyChanged>. For details, see [How to: Implement Property Change Notification](~/docs/framework/wpf/data/how-to-implement-property-change-notification.md).  \n  \n For <xref:System.Windows.Data.BindingMode.TwoWay> or <xref:System.Windows.Data.BindingMode.OneWayToSource> bindings, you can control the target-to-source updates by setting the <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> property. For more information, see <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>.  \n  \n For more information on the different binding modes, see [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).","nodes":[{"pos":[0,347],"content":"To support <xref:System.Windows.Data.BindingMode.OneWay> and <xref:System.Windows.Data.BindingMode.TwoWay> bindings, the underlying data must implement <xref:System.ComponentModel.INotifyPropertyChanged>. For details, see [How to: Implement Property Change Notification](~/docs/framework/wpf/data/how-to-implement-property-change-notification.md).","nodes":[{"content":"To support <ph id=\"ph1\">&lt;xref:System.Windows.Data.BindingMode.OneWay&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Data.BindingMode.TwoWay&gt;</ph> bindings, the underlying data must implement <ph id=\"ph3\">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph>.","pos":[0,204],"source":"To support <xref:System.Windows.Data.BindingMode.OneWay> and <xref:System.Windows.Data.BindingMode.TwoWay> bindings, the underlying data must implement <xref:System.ComponentModel.INotifyPropertyChanged>."},{"content":"For details, see <bpt id=\"p1\">[</bpt>How to: Implement Property Change Notification<ept id=\"p1\">](~/docs/framework/wpf/data/how-to-implement-property-change-notification.md)</ept>.","pos":[205,347],"source":" For details, see [How to: Implement Property Change Notification](~/docs/framework/wpf/data/how-to-implement-property-change-notification.md)."}]},{"pos":[354,683],"content":"For <xref:System.Windows.Data.BindingMode.TwoWay> or <xref:System.Windows.Data.BindingMode.OneWayToSource> bindings, you can control the target-to-source updates by setting the <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> property. For more information, see <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>.","nodes":[{"content":"For <xref:System.Windows.Data.BindingMode.TwoWay> or <xref:System.Windows.Data.BindingMode.OneWayToSource> bindings, you can control the target-to-source updates by setting the <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> property. For more information, see <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>.","pos":[0,329],"nodes":[{"content":"For <ph id=\"ph1\">&lt;xref:System.Windows.Data.BindingMode.TwoWay&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.Data.BindingMode.OneWayToSource&gt;</ph> bindings, you can control the target-to-source updates by setting the <ph id=\"ph3\">&lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt;</ph> property.","pos":[0,244],"source":"For <xref:System.Windows.Data.BindingMode.TwoWay> or <xref:System.Windows.Data.BindingMode.OneWayToSource> bindings, you can control the target-to-source updates by setting the <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> property."},{"content":"For more information, see <ph id=\"ph1\">&lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt;</ph>.","pos":[245,329],"source":" For more information, see <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>."}]}]},{"pos":[690,823],"content":"For more information on the different binding modes, see <bpt id=\"p1\">[</bpt>Data Binding Overview<ept id=\"p1\">](~/docs/framework/wpf/data/data-binding-overview.md)</ept>.","source":"For more information on the different binding modes, see [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md)."}],"pos":[36926,37756],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Windows.Data.BindingMode\"></xref> values. The default is <xref href=\"System.Windows.Data.BindingMode.Default\"></xref>, which returns the default binding mode value of the target dependency property. However, the default value varies for each dependency property. In general, user-editable control properties, such as those of text boxes and check boxes, default to two-way bindings, whereas most other properties default to one-way bindings.  \n  \n A programmatic way to determine whether a dependency property binds one-way or two-way by default is to get the property metadata of the property using <xref href=\"System.Windows.DependencyProperty.GetMetadata(System.Type)\"></xref> and then check the Boolean value of the <xref href=\"System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault\"></xref> property.","nodes":[{"pos":[0,471],"content":"One of the <xref href=\"System.Windows.Data.BindingMode\"></xref> values. The default is <xref href=\"System.Windows.Data.BindingMode.Default\"></xref>, which returns the default binding mode value of the target dependency property. However, the default value varies for each dependency property. In general, user-editable control properties, such as those of text boxes and check boxes, default to two-way bindings, whereas most other properties default to one-way bindings.","nodes":[{"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Data.BindingMode\"&gt;&lt;/xref&gt;</ph> values.","pos":[0,71],"source":"One of the <xref href=\"System.Windows.Data.BindingMode\"></xref> values."},{"content":"The default is <ph id=\"ph1\">&lt;xref href=\"System.Windows.Data.BindingMode.Default\"&gt;&lt;/xref&gt;</ph>, which returns the default binding mode value of the target dependency property.","pos":[72,228],"source":" The default is <xref href=\"System.Windows.Data.BindingMode.Default\"></xref>, which returns the default binding mode value of the target dependency property."},{"content":"However, the default value varies for each dependency property.","pos":[229,292]},{"content":"In general, user-editable control properties, such as those of text boxes and check boxes, default to two-way bindings, whereas most other properties default to one-way bindings.","pos":[293,471]}]},{"pos":[478,842],"content":"A programmatic way to determine whether a dependency property binds one-way or two-way by default is to get the property metadata of the property using <ph id=\"ph1\">&lt;xref href=\"System.Windows.DependencyProperty.GetMetadata(System.Type)\"&gt;&lt;/xref&gt;</ph> and then check the Boolean value of the <ph id=\"ph2\">&lt;xref href=\"System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault\"&gt;&lt;/xref&gt;</ph> property.","source":"A programmatic way to determine whether a dependency property binds one-way or two-way by default is to get the property metadata of the property using <xref href=\"System.Windows.DependencyProperty.GetMetadata(System.Type)\"></xref> and then check the Boolean value of the <xref href=\"System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault\"></xref> property."}],"pos":[37912,38767],"yaml":true},{"content":"Gets or sets a value that indicates whether to raise the <xref href=\"System.Windows.Data.Binding.SourceUpdated\"></xref> event when a value is transferred from the binding target to the binding source.","nodes":[{"pos":[0,200],"content":"Gets or sets a value that indicates whether to raise the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Data.Binding.SourceUpdated\"&gt;&lt;/xref&gt;</ph> event when a value is transferred from the binding target to the binding source.","source":"Gets or sets a value that indicates whether to raise the <xref href=\"System.Windows.Data.Binding.SourceUpdated\"></xref> event when a value is transferred from the binding target to the binding source."}],"pos":[39796,39997],"yaml":true},{"content":"`true` if the <xref href=\"System.Windows.Data.Binding.SourceUpdated\"></xref> event should be raised when the binding source value is updated; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,185],"content":"`true` if the <xref href=\"System.Windows.Data.Binding.SourceUpdated\"></xref> event should be raised when the binding source value is updated; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Data.Binding.SourceUpdated\"&gt;&lt;/xref&gt;</ph> event should be raised when the binding source value is updated; otherwise, <ph id=\"ph3\">`false`</ph>.","pos":[0,161],"source":"`true` if the <xref href=\"System.Windows.Data.Binding.SourceUpdated\"></xref> event should be raised when the binding source value is updated; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[162,185],"source":" The default is `false`."}]}],"pos":[40126,40314],"yaml":true},{"content":"Gets or sets a value that indicates whether to raise the <xref href=\"System.Windows.Data.Binding.TargetUpdated\"></xref> event when a value is transferred from the binding source to the binding target.","nodes":[{"pos":[0,200],"content":"Gets or sets a value that indicates whether to raise the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Data.Binding.TargetUpdated\"&gt;&lt;/xref&gt;</ph> event when a value is transferred from the binding source to the binding target.","source":"Gets or sets a value that indicates whether to raise the <xref href=\"System.Windows.Data.Binding.TargetUpdated\"></xref> event when a value is transferred from the binding source to the binding target."}],"pos":[41360,41561],"yaml":true},{"content":"`true` if the <xref href=\"System.Windows.Data.Binding.TargetUpdated\"></xref> event should be raised when the binding target value is updated; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,185],"content":"`true` if the <xref href=\"System.Windows.Data.Binding.TargetUpdated\"></xref> event should be raised when the binding target value is updated; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Data.Binding.TargetUpdated\"&gt;&lt;/xref&gt;</ph> event should be raised when the binding target value is updated; otherwise, <ph id=\"ph3\">`false`</ph>.","pos":[0,161],"source":"`true` if the <xref href=\"System.Windows.Data.Binding.TargetUpdated\"></xref> event should be raised when the binding target value is updated; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[162,185],"source":" The default is `false`."}]}],"pos":[41690,41878],"yaml":true},{"content":"Gets or sets a value that indicates whether to raise the <xref href=\"System.Windows.Controls.Validation.Error\"></xref> attached event on the bound object.","nodes":[{"pos":[0,154],"content":"Gets or sets a value that indicates whether to raise the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Controls.Validation.Error\"&gt;&lt;/xref&gt;</ph> attached event on the bound object.","source":"Gets or sets a value that indicates whether to raise the <xref href=\"System.Windows.Controls.Validation.Error\"></xref> attached event on the bound object."}],"pos":[42936,43091],"yaml":true},{"content":"If the binding has <xref:System.Windows.Data.Binding.ValidationRules%2A> associated with it, the binding engine checks each rule each time it transfers the target property value to the source property. If a rule invalidates a value, the binding engine creates a <xref:System.Windows.Controls.ValidationError> object and adds it to the <xref:System.Windows.Controls.Validation>.<xref:System.Windows.Controls.Validation.Errors%2A> collection of the bound object. When the <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> property is not empty, the <xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=fullName> attached property of the object is set to `true`. If the <xref:System.Windows.Data.Binding.NotifyOnValidationError%2A> property of the <xref:System.Windows.Data.Binding> is set to `true`, then the binding engine raises the <xref:System.Windows.Controls.Validation.Error?displayProperty=fullName> attached event on the object.  \n  \n For a detailed discussion of the validation process, see the Data Validation section in the [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).","nodes":[{"pos":[0,978],"content":"If the binding has <xref:System.Windows.Data.Binding.ValidationRules%2A> associated with it, the binding engine checks each rule each time it transfers the target property value to the source property. If a rule invalidates a value, the binding engine creates a <xref:System.Windows.Controls.ValidationError> object and adds it to the <xref:System.Windows.Controls.Validation>.<xref:System.Windows.Controls.Validation.Errors%2A> collection of the bound object. When the <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> property is not empty, the <xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=fullName> attached property of the object is set to `true`. If the <xref:System.Windows.Data.Binding.NotifyOnValidationError%2A> property of the <xref:System.Windows.Data.Binding> is set to `true`, then the binding engine raises the <xref:System.Windows.Controls.Validation.Error?displayProperty=fullName> attached event on the object.","nodes":[{"content":"If the binding has <ph id=\"ph1\">&lt;xref:System.Windows.Data.Binding.ValidationRules%2A&gt;</ph> associated with it, the binding engine checks each rule each time it transfers the target property value to the source property.","pos":[0,201],"source":"If the binding has <xref:System.Windows.Data.Binding.ValidationRules%2A> associated with it, the binding engine checks each rule each time it transfers the target property value to the source property."},{"content":"If a rule invalidates a value, the binding engine creates a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.ValidationError&gt;</ph> object and adds it to the <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Validation&gt;</ph>.<ph id=\"ph3\">&lt;xref:System.Windows.Controls.Validation.Errors%2A&gt;</ph> collection of the bound object.","pos":[202,460],"source":" If a rule invalidates a value, the binding engine creates a <xref:System.Windows.Controls.ValidationError> object and adds it to the <xref:System.Windows.Controls.Validation>.<xref:System.Windows.Controls.Validation.Errors%2A> collection of the bound object."},{"content":"When the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName&gt;</ph> property is not empty, the <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=fullName&gt;</ph> attached property of the object is set to <ph id=\"ph3\">`true`</ph>.","pos":[461,702],"source":" When the <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> property is not empty, the <xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=fullName> attached property of the object is set to `true`."},{"content":"If the <ph id=\"ph1\">&lt;xref:System.Windows.Data.Binding.NotifyOnValidationError%2A&gt;</ph> property of the <ph id=\"ph2\">&lt;xref:System.Windows.Data.Binding&gt;</ph> is set to <ph id=\"ph3\">`true`</ph>, then the binding engine raises the <ph id=\"ph4\">&lt;xref:System.Windows.Controls.Validation.Error?displayProperty=fullName&gt;</ph> attached event on the object.","pos":[703,978],"source":" If the <xref:System.Windows.Data.Binding.NotifyOnValidationError%2A> property of the <xref:System.Windows.Data.Binding> is set to `true`, then the binding engine raises the <xref:System.Windows.Controls.Validation.Error?displayProperty=fullName> attached event on the object."}]},{"pos":[985,1153],"content":"For a detailed discussion of the validation process, see the Data Validation section in the <bpt id=\"p1\">[</bpt>Data Binding Overview<ept id=\"p1\">](~/docs/framework/wpf/data/data-binding-overview.md)</ept>.","source":"For a detailed discussion of the validation process, see the Data Validation section in the [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md)."}],"pos":[43102,44260],"yaml":true,"extradata":"MT"},{"content":"`true` if the <xref href=\"System.Windows.Controls.Validation.Error\"></xref> attached event should be raised on the bound object when there is a validation error during source updates; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,227],"content":"`true` if the <xref href=\"System.Windows.Controls.Validation.Error\"></xref> attached event should be raised on the bound object when there is a validation error during source updates; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Controls.Validation.Error\"&gt;&lt;/xref&gt;</ph> attached event should be raised on the bound object when there is a validation error during source updates; otherwise, <ph id=\"ph3\">`false`</ph>.","pos":[0,203],"source":"`true` if the <xref href=\"System.Windows.Controls.Validation.Error\"></xref> attached event should be raised on the bound object when there is a validation error during source updates; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[204,227],"source":" The default is `false`."}]}],"pos":[44391,44621],"yaml":true},{"content":"Gets or sets the path to the binding source property.","nodes":[{"pos":[0,53],"content":"Gets or sets the path to the binding source property.","nodes":[{"content":"Gets or sets the path to the binding source property.","pos":[0,53]}]}],"pos":[45567,45621],"yaml":true},{"content":"Each binding typically has these four components: a binding target object, a target property, a binding source, and a path to the value in the binding source to use. For more information about these data binding concepts, see [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).  \n  \n Use the <xref:System.Windows.Data.Binding.Path%2A> property to specify the source value you want to bind to:  \n  \n-   In the simplest case, the <xref:System.Windows.Data.Binding.Path%2A> property value is the name of the property of the source object to use for the binding, such as `Path=PropertyName`.  \n  \n-   Subproperties of a property can be specified by a syntax similar to that used in [!INCLUDE[TLA#tla_cshrp](~/includes/tlasharptla-cshrp-md.md)]. For instance, the clause `Path=ShoppingCart.Order` sets the binding to the subproperty `Order` of the object or property `ShoppingCart`.  \n  \n-   To bind to an attached property, place parentheses around the attached property. For example, to bind to the attached property <xref:System.Windows.Controls.DockPanel.Dock%2A?displayProperty=fullName>, the syntax is `Path=(DockPanel.Dock)`.  \n  \n-   Indexers of a property can be specified within square brackets following the property name where the indexer is applied. For instance, the clause `Path=ShoppingCart[0]` sets the binding to the index that corresponds to how your property's internal indexing handles the literal string \"0\". Multiple indexers are also supported.  \n  \n-   Indexers and subproperties can be mixed in a `Path` clause; for example, `Path=ShoppingCart.ShippingInfo[MailingAddress,Street].`  \n  \n-   Inside indexers you can have multiple indexer parameters separated by commas (,). The type of each parameter can be specified with parentheses. For example, you can have `Path=\"[(sys:Int32)42,(sys:Int32)24]\"`, where `sys` is mapped to the `System` namespace.  \n  \n-   When the source is a collection view, the current item can be specified with a slash (/). For example, the clause `Path=/` sets the binding to the current item in the view. When the source is a collection, this syntax specifies the current item of the default collection view.  \n  \n-   Property names and slashes can be combined to traverse properties that are collections. For example, `Path=/Offices/ManagerName` specifies the current item of the source collection, which contains an `Offices` property that is also a collection. Its current item is an object that contains a `ManagerName` property.  \n  \n-   Optionally, a period (.) path can be used to bind to the current source. For example, `Text=\"{Binding}\"` is equivalent to `Text=\"{Binding Path=.}\"`.  \n  \n For information about path syntax, see [Binding Declarations Overview](~/docs/framework/wpf/data/binding-declarations-overview.md) or [PropertyPath XAML Syntax](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md).  \n  \n For [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] bindings, see the <xref:System.Windows.Data.Binding.XPath%2A> property.  \n  \n To bind to an entire object, you do not need to specify the <xref:System.Windows.Data.Binding.Path%2A> property. For more information, see \"Specifying the Path to the Value\" in [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).","nodes":[{"pos":[0,302],"content":"Each binding typically has these four components: a binding target object, a target property, a binding source, and a path to the value in the binding source to use. For more information about these data binding concepts, see [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).","nodes":[{"content":"Each binding typically has these four components: a binding target object, a target property, a binding source, and a path to the value in the binding source to use.","pos":[0,165]},{"content":"For more information about these data binding concepts, see <bpt id=\"p1\">[</bpt>Data Binding Overview<ept id=\"p1\">](~/docs/framework/wpf/data/data-binding-overview.md)</ept>.","pos":[166,302],"source":" For more information about these data binding concepts, see [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md)."}]},{"pos":[309,417],"content":"Use the <xref:System.Windows.Data.Binding.Path%2A> property to specify the source value you want to bind to:","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Windows.Data.Binding.Path%2A&gt;</ph> property to specify the source value you want to bind to:","pos":[0,108],"source":"Use the <xref:System.Windows.Data.Binding.Path%2A> property to specify the source value you want to bind to:"}]},{"pos":[427,612],"content":"In the simplest case, the <ph id=\"ph1\">&lt;xref:System.Windows.Data.Binding.Path%2A&gt;</ph> property value is the name of the property of the source object to use for the binding, such as <ph id=\"ph2\">`Path=PropertyName`</ph>.","source":"In the simplest case, the <xref:System.Windows.Data.Binding.Path%2A> property value is the name of the property of the source object to use for the binding, such as `Path=PropertyName`."},{"pos":[622,902],"content":"Subproperties of a property can be specified by a syntax similar to that used in [!INCLUDE[TLA#tla_cshrp](~/includes/tlasharptla-cshrp-md.md)]. For instance, the clause `Path=ShoppingCart.Order` sets the binding to the subproperty `Order` of the object or property `ShoppingCart`.","nodes":[{"content":"Subproperties of a property can be specified by a syntax similar to that used in <ph id=\"ph1\">[!INCLUDE[TLA#tla_cshrp](~/includes/tlasharptla-cshrp-md.md)]</ph>.","pos":[0,143],"source":"Subproperties of a property can be specified by a syntax similar to that used in [!INCLUDE[TLA#tla_cshrp](~/includes/tlasharptla-cshrp-md.md)]."},{"content":"For instance, the clause <ph id=\"ph1\">`Path=ShoppingCart.Order`</ph> sets the binding to the subproperty <ph id=\"ph2\">`Order`</ph> of the object or property <ph id=\"ph3\">`ShoppingCart`</ph>.","pos":[144,280],"source":" For instance, the clause `Path=ShoppingCart.Order` sets the binding to the subproperty `Order` of the object or property `ShoppingCart`."}]},{"pos":[912,1152],"content":"To bind to an attached property, place parentheses around the attached property. For example, to bind to the attached property <xref:System.Windows.Controls.DockPanel.Dock%2A?displayProperty=fullName>, the syntax is `Path=(DockPanel.Dock)`.","nodes":[{"content":"To bind to an attached property, place parentheses around the attached property.","pos":[0,80]},{"content":"For example, to bind to the attached property <ph id=\"ph1\">&lt;xref:System.Windows.Controls.DockPanel.Dock%2A?displayProperty=fullName&gt;</ph>, the syntax is <ph id=\"ph2\">`Path=(DockPanel.Dock)`</ph>.","pos":[81,240],"source":" For example, to bind to the attached property <xref:System.Windows.Controls.DockPanel.Dock%2A?displayProperty=fullName>, the syntax is `Path=(DockPanel.Dock)`."}]},{"pos":[1162,1488],"content":"Indexers of a property can be specified within square brackets following the property name where the indexer is applied. For instance, the clause `Path=ShoppingCart[0]` sets the binding to the index that corresponds to how your property's internal indexing handles the literal string \"0\". Multiple indexers are also supported.","nodes":[{"content":"Indexers of a property can be specified within square brackets following the property name where the indexer is applied.","pos":[0,120]},{"content":"For instance, the clause <ph id=\"ph1\">`Path=ShoppingCart[0]`</ph> sets the binding to the index that corresponds to how your property's internal indexing handles the literal string \"0\".","pos":[121,288],"source":" For instance, the clause `Path=ShoppingCart[0]` sets the binding to the index that corresponds to how your property's internal indexing handles the literal string \"0\"."},{"content":"Multiple indexers are also supported.","pos":[289,326]}]},{"pos":[1498,1627],"content":"Indexers and subproperties can be mixed in a <ph id=\"ph1\">`Path`</ph> clause; for example, <ph id=\"ph2\">`Path=ShoppingCart.ShippingInfo[MailingAddress,Street].`</ph>","source":"Indexers and subproperties can be mixed in a `Path` clause; for example, `Path=ShoppingCart.ShippingInfo[MailingAddress,Street].`"},{"pos":[1637,1895],"content":"Inside indexers you can have multiple indexer parameters separated by commas (,). The type of each parameter can be specified with parentheses. For example, you can have `Path=\"[(sys:Int32)42,(sys:Int32)24]\"`, where `sys` is mapped to the `System` namespace.","nodes":[{"content":"Inside indexers you can have multiple indexer parameters separated by commas (,).","pos":[0,81]},{"content":"The type of each parameter can be specified with parentheses.","pos":[82,143]},{"content":"For example, you can have <ph id=\"ph1\">`Path=\"[(sys:Int32)42,(sys:Int32)24]\"`</ph>, where <ph id=\"ph2\">`sys`</ph> is mapped to the <ph id=\"ph3\">`System`</ph> namespace.","pos":[144,258],"source":" For example, you can have `Path=\"[(sys:Int32)42,(sys:Int32)24]\"`, where `sys` is mapped to the `System` namespace."}]},{"pos":[1905,2181],"content":"When the source is a collection view, the current item can be specified with a slash (/). For example, the clause `Path=/` sets the binding to the current item in the view. When the source is a collection, this syntax specifies the current item of the default collection view.","nodes":[{"content":"When the source is a collection view, the current item can be specified with a slash (/).","pos":[0,89]},{"content":"For example, the clause <ph id=\"ph1\">`Path=/`</ph> sets the binding to the current item in the view.","pos":[90,172],"source":" For example, the clause `Path=/` sets the binding to the current item in the view."},{"content":"When the source is a collection, this syntax specifies the current item of the default collection view.","pos":[173,276]}]},{"pos":[2191,2506],"content":"Property names and slashes can be combined to traverse properties that are collections. For example, `Path=/Offices/ManagerName` specifies the current item of the source collection, which contains an `Offices` property that is also a collection. Its current item is an object that contains a `ManagerName` property.","nodes":[{"content":"Property names and slashes can be combined to traverse properties that are collections.","pos":[0,87]},{"content":"For example, <ph id=\"ph1\">`Path=/Offices/ManagerName`</ph> specifies the current item of the source collection, which contains an <ph id=\"ph2\">`Offices`</ph> property that is also a collection.","pos":[88,245],"source":" For example, `Path=/Offices/ManagerName` specifies the current item of the source collection, which contains an `Offices` property that is also a collection."},{"content":"Its current item is an object that contains a <ph id=\"ph1\">`ManagerName`</ph> property.","pos":[246,315],"source":" Its current item is an object that contains a `ManagerName` property."}]},{"pos":[2516,2664],"content":"Optionally, a period (.) path can be used to bind to the current source. For example, `Text=\"{Binding}\"` is equivalent to `Text=\"{Binding Path=.}\"`.","nodes":[{"content":"Optionally, a period (.) path can be used to bind to the current source.","pos":[0,72]},{"content":"For example, <ph id=\"ph1\">`Text=\"{Binding}\"`</ph> is equivalent to <ph id=\"ph2\">`Text=\"{Binding Path=.}\"`</ph>.","pos":[73,148],"source":" For example, `Text=\"{Binding}\"` is equivalent to `Text=\"{Binding Path=.}\"`."}]},{"pos":[2671,2891],"content":"For information about path syntax, see <bpt id=\"p1\">[</bpt>Binding Declarations Overview<ept id=\"p1\">](~/docs/framework/wpf/data/binding-declarations-overview.md)</ept> or <bpt id=\"p2\">[</bpt>PropertyPath XAML Syntax<ept id=\"p2\">](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md)</ept>.","source":"For information about path syntax, see [Binding Declarations Overview](~/docs/framework/wpf/data/binding-declarations-overview.md) or [PropertyPath XAML Syntax](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md)."},{"pos":[2898,3031],"content":"For <ph id=\"ph1\">[!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)]</ph> bindings, see the <ph id=\"ph2\">&lt;xref:System.Windows.Data.Binding.XPath%2A&gt;</ph> property.","source":"For [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] bindings, see the <xref:System.Windows.Data.Binding.XPath%2A> property."},{"pos":[3038,3291],"content":"To bind to an entire object, you do not need to specify the <xref:System.Windows.Data.Binding.Path%2A> property. For more information, see \"Specifying the Path to the Value\" in [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).","nodes":[{"content":"To bind to an entire object, you do not need to specify the <ph id=\"ph1\">&lt;xref:System.Windows.Data.Binding.Path%2A&gt;</ph> property.","pos":[0,112],"source":"To bind to an entire object, you do not need to specify the <xref:System.Windows.Data.Binding.Path%2A> property."},{"content":"For more information, see \"Specifying the Path to the Value\" in <bpt id=\"p1\">[</bpt>Data Binding Overview<ept id=\"p1\">](~/docs/framework/wpf/data/data-binding-overview.md)</ept>.","pos":[113,253],"source":" For more information, see \"Specifying the Path to the Value\" in [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md)."}]}],"pos":[45632,48962],"yaml":true,"extradata":"MT"},{"content":"The path to the binding source. The default is `null`.","nodes":[{"pos":[0,54],"content":"The path to the binding source. The default is `null`.","nodes":[{"content":"The path to the binding source.","pos":[0,31]},{"content":"The default is <ph id=\"ph1\">`null`</ph>.","pos":[32,54],"source":" The default is `null`."}]}],"pos":[49771,49826],"yaml":true},{"content":"Gets or sets the binding source by specifying its location relative to the position of the binding target.","nodes":[{"pos":[0,106],"content":"Gets or sets the binding source by specifying its location relative to the position of the binding target.","nodes":[{"content":"Gets or sets the binding source by specifying its location relative to the position of the binding target.","pos":[0,106]}]}],"pos":[50796,50903],"yaml":true},{"content":"This property is commonly used to bind one property of an object to another property of the same object, or to define a binding in a style or template.  \n  \n By default, bindings inherit the data context specified by the `DataContext` property, if one has been set. However, the <xref:System.Windows.Data.Binding.RelativeSource%2A> property is one of the ways you can explicitly set the source of a <xref:System.Windows.Data.Binding> and override the inherited data context. For more information, see [How to: Specify the Binding Source](~/docs/framework/wpf/data/how-to-specify-the-binding-source.md).  \n  \n The <xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=fullName> and <xref:System.Windows.Data.Binding.Source%2A?displayProperty=fullName> properties also enable you to set the source of the binding explicitly. However, only one of the three properties, <xref:System.Windows.Data.Binding.ElementName%2A>, <xref:System.Windows.Data.Binding.Source%2A>, and <xref:System.Windows.Data.Binding.RelativeSource%2A>, should be set for each binding, or a conflict can occur. This property throws an exception if there is a binding source conflict.  \n  \n For [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] information, see [RelativeSource MarkupExtension](~/docs/framework/wpf/advanced/relativesource-markupextension.md).  \n  \n<a name=\"xamlTextUsage_RelativeSource\"></a>   \n## XAML Text Usage","nodes":[{"pos":[0,151],"content":"This property is commonly used to bind one property of an object to another property of the same object, or to define a binding in a style or template.","nodes":[{"content":"This property is commonly used to bind one property of an object to another property of the same object, or to define a binding in a style or template.","pos":[0,151]}]},{"pos":[158,602],"content":"By default, bindings inherit the data context specified by the `DataContext` property, if one has been set. However, the <xref:System.Windows.Data.Binding.RelativeSource%2A> property is one of the ways you can explicitly set the source of a <xref:System.Windows.Data.Binding> and override the inherited data context. For more information, see [How to: Specify the Binding Source](~/docs/framework/wpf/data/how-to-specify-the-binding-source.md).","nodes":[{"content":"By default, bindings inherit the data context specified by the <ph id=\"ph1\">`DataContext`</ph> property, if one has been set.","pos":[0,107],"source":"By default, bindings inherit the data context specified by the `DataContext` property, if one has been set."},{"content":"However, the <ph id=\"ph1\">&lt;xref:System.Windows.Data.Binding.RelativeSource%2A&gt;</ph> property is one of the ways you can explicitly set the source of a <ph id=\"ph2\">&lt;xref:System.Windows.Data.Binding&gt;</ph> and override the inherited data context.","pos":[108,316],"source":" However, the <xref:System.Windows.Data.Binding.RelativeSource%2A> property is one of the ways you can explicitly set the source of a <xref:System.Windows.Data.Binding> and override the inherited data context."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>How to: Specify the Binding Source<ept id=\"p1\">](~/docs/framework/wpf/data/how-to-specify-the-binding-source.md)</ept>.","pos":[317,444],"source":" For more information, see [How to: Specify the Binding Source](~/docs/framework/wpf/data/how-to-specify-the-binding-source.md)."}]},{"pos":[609,1161],"content":"The <xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=fullName> and <xref:System.Windows.Data.Binding.Source%2A?displayProperty=fullName> properties also enable you to set the source of the binding explicitly. However, only one of the three properties, <xref:System.Windows.Data.Binding.ElementName%2A>, <xref:System.Windows.Data.Binding.Source%2A>, and <xref:System.Windows.Data.Binding.RelativeSource%2A>, should be set for each binding, or a conflict can occur. This property throws an exception if there is a binding source conflict.","nodes":[{"content":"The <xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=fullName> and <xref:System.Windows.Data.Binding.Source%2A?displayProperty=fullName> properties also enable you to set the source of the binding explicitly. However, only one of the three properties, <xref:System.Windows.Data.Binding.ElementName%2A>, <xref:System.Windows.Data.Binding.Source%2A>, and <xref:System.Windows.Data.Binding.RelativeSource%2A>, should be set for each binding, or a conflict can occur. This property throws an exception if there is a binding source conflict.","pos":[0,552],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=fullName&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Data.Binding.Source%2A?displayProperty=fullName&gt;</ph> properties also enable you to set the source of the binding explicitly.","pos":[0,224],"source":"The <xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=fullName> and <xref:System.Windows.Data.Binding.Source%2A?displayProperty=fullName> properties also enable you to set the source of the binding explicitly."},{"content":"However, only one of the three properties, <ph id=\"ph1\">&lt;xref:System.Windows.Data.Binding.ElementName%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Windows.Data.Binding.Source%2A&gt;</ph>, and <ph id=\"ph3\">&lt;xref:System.Windows.Data.Binding.RelativeSource%2A&gt;</ph>, should be set for each binding, or a conflict can occur.","pos":[225,479],"source":" However, only one of the three properties, <xref:System.Windows.Data.Binding.ElementName%2A>, <xref:System.Windows.Data.Binding.Source%2A>, and <xref:System.Windows.Data.Binding.RelativeSource%2A>, should be set for each binding, or a conflict can occur."},{"content":"This property throws an exception if there is a binding source conflict.","pos":[480,552]}]}]},{"pos":[1168,1349],"content":"For <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> information, see <bpt id=\"p1\">[</bpt>RelativeSource MarkupExtension<ept id=\"p1\">](~/docs/framework/wpf/advanced/relativesource-markupextension.md)</ept>.","source":"For [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] information, see [RelativeSource MarkupExtension](~/docs/framework/wpf/advanced/relativesource-markupextension.md)."},{"pos":[1405,1420],"content":"XAML Text Usage","linkify":"XAML Text Usage","nodes":[{"content":"XAML Text Usage","pos":[0,15]}]}],"pos":[50914,52348],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Windows.Data.RelativeSource\"></xref> object specifying the relative location of the binding source to use. The default is `null`.","nodes":[{"pos":[0,150],"content":"A <xref href=\"System.Windows.Data.RelativeSource\"></xref> object specifying the relative location of the binding source to use. The default is `null`.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Data.RelativeSource\"&gt;&lt;/xref&gt;</ph> object specifying the relative location of the binding source to use.","pos":[0,127],"source":"A <xref href=\"System.Windows.Data.RelativeSource\"></xref> object specifying the relative location of the binding source to use."},{"content":"The default is <ph id=\"ph1\">`null`</ph>.","pos":[128,150],"source":" The default is `null`."}]}],"pos":[53294,53445],"yaml":true},{"content":"Removes a handler for the <xref href=\"System.Windows.Data.Binding.SourceUpdated\"></xref> attached event.","nodes":[{"pos":[0,104],"content":"Removes a handler for the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Data.Binding.SourceUpdated\"&gt;&lt;/xref&gt;</ph> attached event.","source":"Removes a handler for the <xref href=\"System.Windows.Data.Binding.SourceUpdated\"></xref> attached event."}],"pos":[54943,55048],"yaml":true},{"content":"This method supports attached event usage in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].","nodes":[{"pos":[0,107],"content":"This method supports attached event usage in <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>.","source":"This method supports attached event usage in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]."}],"pos":[55059,55167],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to the event.","nodes":[{"pos":[0,130],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.UIElement\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Windows.ContentElement\"&gt;&lt;/xref&gt;</ph> that listens to the event.","source":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to the event."}],"pos":[55441,55572],"yaml":true},{"content":"The handler to remove.","nodes":[{"pos":[0,22],"content":"The handler to remove.","nodes":[{"content":"The handler to remove.","pos":[0,22]}]}],"pos":[55684,55707],"yaml":true},{"content":"Removes a handler for the <xref href=\"System.Windows.Data.Binding.TargetUpdated\"></xref> attached event.","nodes":[{"pos":[0,104],"content":"Removes a handler for the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Data.Binding.TargetUpdated\"&gt;&lt;/xref&gt;</ph> attached event.","source":"Removes a handler for the <xref href=\"System.Windows.Data.Binding.TargetUpdated\"></xref> attached event."}],"pos":[57222,57327],"yaml":true},{"content":"This method supports attached event usage in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].","nodes":[{"pos":[0,107],"content":"This method supports attached event usage in <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>.","source":"This method supports attached event usage in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]."}],"pos":[57338,57446],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to the event.","nodes":[{"pos":[0,130],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.UIElement\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Windows.ContentElement\"&gt;&lt;/xref&gt;</ph> that listens to the event.","source":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to the event."}],"pos":[57720,57851],"yaml":true},{"content":"The handler to remove.","nodes":[{"pos":[0,22],"content":"The handler to remove.","nodes":[{"content":"The handler to remove.","pos":[0,22]}]}],"pos":[57963,57986],"yaml":true},{"content":"Sets a namespace manager object used by the binding attached to the provided element.","nodes":[{"pos":[0,85],"content":"Sets a namespace manager object used by the binding attached to the provided element.","nodes":[{"content":"Sets a namespace manager object used by the binding attached to the provided element.","pos":[0,85]}]}],"pos":[59311,59397],"yaml":true},{"content":"This method supports attached property usage for the <xref:System.Windows.Data.Binding.XmlNamespaceManager%2A> attached property.","nodes":[{"pos":[0,129],"content":"This method supports attached property usage for the <xref:System.Windows.Data.Binding.XmlNamespaceManager%2A> attached property.","nodes":[{"content":"This method supports attached property usage for the <ph id=\"ph1\">&lt;xref:System.Windows.Data.Binding.XmlNamespaceManager%2A&gt;</ph> attached property.","pos":[0,129],"source":"This method supports attached property usage for the <xref:System.Windows.Data.Binding.XmlNamespaceManager%2A> attached property."}]}],"pos":[59408,59538],"yaml":true,"extradata":"MT"},{"content":"The object from which to get namespace information.","nodes":[{"pos":[0,51],"content":"The object from which to get namespace information.","nodes":[{"content":"The object from which to get namespace information.","pos":[0,51]}]}],"pos":[59779,59831],"yaml":true},{"content":"The <xref href=\"System.Xml.XmlNamespaceManager\"></xref> to use for namespace evaluation in the passed element.","nodes":[{"pos":[0,110],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlNamespaceManager\"&gt;&lt;/xref&gt;</ph> to use for namespace evaluation in the passed element.","source":"The <xref href=\"System.Xml.XmlNamespaceManager\"></xref> to use for namespace evaluation in the passed element."}],"pos":[59909,60020],"yaml":true},{"content":"<code>target</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;target&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>target</code> is `null`."}],"pos":[60200,60231],"yaml":true},{"content":"Indicates whether the <xref href=\"System.Windows.Data.Binding.Path\"></xref> property should be persisted.","nodes":[{"pos":[0,105],"content":"Indicates whether the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Data.Binding.Path\"&gt;&lt;/xref&gt;</ph> property should be persisted.","source":"Indicates whether the <xref href=\"System.Windows.Data.Binding.Path\"></xref> property should be persisted."}],"pos":[61172,61278],"yaml":true},{"content":"This `ShouldSerialize` method is provided because the <xref:System.Windows.Data.Binding.Path%2A> property does not have a simple default value. This method indicates whether the property has changed from its default value. You typically invoke this method if you are either developing a designer for the <xref:System.Windows.Data.Binding> or developing your own control incorporating the <xref:System.Windows.Data.Binding>.","nodes":[{"pos":[0,423],"content":"This `ShouldSerialize` method is provided because the <xref:System.Windows.Data.Binding.Path%2A> property does not have a simple default value. This method indicates whether the property has changed from its default value. You typically invoke this method if you are either developing a designer for the <xref:System.Windows.Data.Binding> or developing your own control incorporating the <xref:System.Windows.Data.Binding>.","nodes":[{"content":"This <ph id=\"ph1\">`ShouldSerialize`</ph> method is provided because the <ph id=\"ph2\">&lt;xref:System.Windows.Data.Binding.Path%2A&gt;</ph> property does not have a simple default value.","pos":[0,143],"source":"This `ShouldSerialize` method is provided because the <xref:System.Windows.Data.Binding.Path%2A> property does not have a simple default value."},{"content":"This method indicates whether the property has changed from its default value.","pos":[144,222]},{"content":"You typically invoke this method if you are either developing a designer for the <ph id=\"ph1\">&lt;xref:System.Windows.Data.Binding&gt;</ph> or developing your own control incorporating the <ph id=\"ph2\">&lt;xref:System.Windows.Data.Binding&gt;</ph>.","pos":[223,423],"source":" You typically invoke this method if you are either developing a designer for the <xref:System.Windows.Data.Binding> or developing your own control incorporating the <xref:System.Windows.Data.Binding>."}]}],"pos":[61289,61713],"yaml":true,"extradata":"MT"},{"content":"`true` if the property value has changed from its default; otherwise, `false`.","nodes":[{"pos":[0,78],"content":"<ph id=\"ph1\">`true`</ph> if the property value has changed from its default; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the property value has changed from its default; otherwise, `false`."}],"pos":[61849,61930],"yaml":true},{"content":"Indicates whether the <xref href=\"System.Windows.Data.Binding.Source\"></xref> property should be persisted.","nodes":[{"pos":[0,107],"content":"Indicates whether the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Data.Binding.Source\"&gt;&lt;/xref&gt;</ph> property should be persisted.","source":"Indicates whether the <xref href=\"System.Windows.Data.Binding.Source\"></xref> property should be persisted."}],"pos":[62978,63086],"yaml":true},{"content":"This `ShouldSerialize` method is provided because the <xref:System.Windows.Data.Binding.Source%2A> property does not have a simple default value. This method indicates whether the property has changed from its default value. You typically invoke this method if you are either developing a designer for the <xref:System.Windows.Data.Binding> or developing your own control incorporating the <xref:System.Windows.Data.Binding>.","nodes":[{"pos":[0,425],"content":"This `ShouldSerialize` method is provided because the <xref:System.Windows.Data.Binding.Source%2A> property does not have a simple default value. This method indicates whether the property has changed from its default value. You typically invoke this method if you are either developing a designer for the <xref:System.Windows.Data.Binding> or developing your own control incorporating the <xref:System.Windows.Data.Binding>.","nodes":[{"content":"This <ph id=\"ph1\">`ShouldSerialize`</ph> method is provided because the <ph id=\"ph2\">&lt;xref:System.Windows.Data.Binding.Source%2A&gt;</ph> property does not have a simple default value.","pos":[0,145],"source":"This `ShouldSerialize` method is provided because the <xref:System.Windows.Data.Binding.Source%2A> property does not have a simple default value."},{"content":"This method indicates whether the property has changed from its default value.","pos":[146,224]},{"content":"You typically invoke this method if you are either developing a designer for the <ph id=\"ph1\">&lt;xref:System.Windows.Data.Binding&gt;</ph> or developing your own control incorporating the <ph id=\"ph2\">&lt;xref:System.Windows.Data.Binding&gt;</ph>.","pos":[225,425],"source":" You typically invoke this method if you are either developing a designer for the <xref:System.Windows.Data.Binding> or developing your own control incorporating the <xref:System.Windows.Data.Binding>."}]}],"pos":[63097,63523],"yaml":true,"extradata":"MT"},{"content":"`true` if the property value has changed from its default; otherwise, `false`.","nodes":[{"pos":[0,78],"content":"<ph id=\"ph1\">`true`</ph> if the property value has changed from its default; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the property value has changed from its default; otherwise, `false`."}],"pos":[63661,63742],"yaml":true},{"content":"Indicates whether the <xref href=\"System.Windows.Data.Binding.ValidationRules\"></xref> property should be persisted.","nodes":[{"pos":[0,116],"content":"Indicates whether the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Data.Binding.ValidationRules\"&gt;&lt;/xref&gt;</ph> property should be persisted.","source":"Indicates whether the <xref href=\"System.Windows.Data.Binding.ValidationRules\"></xref> property should be persisted."}],"pos":[64824,64941],"yaml":true},{"content":"This `ShouldSerialize` method is provided because the <xref:System.Windows.Data.Binding.ValidationRules%2A> property does not have a simple default value. This method indicates whether the property has changed from its default value. You typically invoke this method if you are either developing a designer for the <xref:System.Windows.Data.Binding> or developing your own control incorporating the <xref:System.Windows.Data.Binding>.","nodes":[{"pos":[0,434],"content":"This `ShouldSerialize` method is provided because the <xref:System.Windows.Data.Binding.ValidationRules%2A> property does not have a simple default value. This method indicates whether the property has changed from its default value. You typically invoke this method if you are either developing a designer for the <xref:System.Windows.Data.Binding> or developing your own control incorporating the <xref:System.Windows.Data.Binding>.","nodes":[{"content":"This <ph id=\"ph1\">`ShouldSerialize`</ph> method is provided because the <ph id=\"ph2\">&lt;xref:System.Windows.Data.Binding.ValidationRules%2A&gt;</ph> property does not have a simple default value.","pos":[0,154],"source":"This `ShouldSerialize` method is provided because the <xref:System.Windows.Data.Binding.ValidationRules%2A> property does not have a simple default value."},{"content":"This method indicates whether the property has changed from its default value.","pos":[155,233]},{"content":"You typically invoke this method if you are either developing a designer for the <ph id=\"ph1\">&lt;xref:System.Windows.Data.Binding&gt;</ph> or developing your own control incorporating the <ph id=\"ph2\">&lt;xref:System.Windows.Data.Binding&gt;</ph>.","pos":[234,434],"source":" You typically invoke this method if you are either developing a designer for the <xref:System.Windows.Data.Binding> or developing your own control incorporating the <xref:System.Windows.Data.Binding>."}]}],"pos":[64952,65387],"yaml":true,"extradata":"MT"},{"content":"`true` if the property value has changed from its default; otherwise, `false`.","nodes":[{"pos":[0,78],"content":"<ph id=\"ph1\">`true`</ph> if the property value has changed from its default; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the property value has changed from its default; otherwise, `false`."}],"pos":[65534,65615],"yaml":true},{"content":"Gets or sets the object to use as the binding source.","nodes":[{"pos":[0,53],"content":"Gets or sets the object to use as the binding source.","nodes":[{"content":"Gets or sets the object to use as the binding source.","pos":[0,53]}]}],"pos":[66580,66634],"yaml":true},{"content":"By default, bindings inherit the data context specified by the `DataContext` property, if one has been set. However, the <xref:System.Windows.Data.Binding.Source%2A> property is one of the ways you can explicitly set the source of a <xref:System.Windows.Data.Binding> and override the inherited data context. If you do not need the functionality of establishing a scope in which several properties inherit the same data context, you can use the <xref:System.Windows.Data.Binding.Source%2A> property instead of the `DataContext` property.  \n  \n The <xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=fullName> and <xref:System.Windows.Data.Binding.RelativeSource%2A?displayProperty=fullName> properties also enable you to set the source of the binding explicitly. However, only one of the three properties, <xref:System.Windows.Data.Binding.ElementName%2A>, <xref:System.Windows.Data.Binding.Source%2A>, and <xref:System.Windows.Data.Binding.RelativeSource%2A>, should be set for each binding, or a conflict can occur. This property throws an exception if there is a binding source conflict.  \n  \n To clear this property, set it to <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName>.  \n  \n<a name=\"xamlAttributeUsage_Source\"></a>   \n## XAML Attribute Usage  \n  \n```  \n<object Source=\"object\"/>  \n```  \n  \n<a name=\"xamlValues_Source\"></a>   \n## XAML Values  \n *object*  \n An existing object. To refer to an existing object, use the [StaticResource Markup Extension](~/docs/framework/wpf/advanced/staticresource-markup-extension.md)","nodes":[{"pos":[0,537],"content":"By default, bindings inherit the data context specified by the `DataContext` property, if one has been set. However, the <xref:System.Windows.Data.Binding.Source%2A> property is one of the ways you can explicitly set the source of a <xref:System.Windows.Data.Binding> and override the inherited data context. If you do not need the functionality of establishing a scope in which several properties inherit the same data context, you can use the <xref:System.Windows.Data.Binding.Source%2A> property instead of the `DataContext` property.","nodes":[{"content":"By default, bindings inherit the data context specified by the <ph id=\"ph1\">`DataContext`</ph> property, if one has been set.","pos":[0,107],"source":"By default, bindings inherit the data context specified by the `DataContext` property, if one has been set."},{"content":"However, the <ph id=\"ph1\">&lt;xref:System.Windows.Data.Binding.Source%2A&gt;</ph> property is one of the ways you can explicitly set the source of a <ph id=\"ph2\">&lt;xref:System.Windows.Data.Binding&gt;</ph> and override the inherited data context.","pos":[108,308],"source":" However, the <xref:System.Windows.Data.Binding.Source%2A> property is one of the ways you can explicitly set the source of a <xref:System.Windows.Data.Binding> and override the inherited data context."},{"content":"If you do not need the functionality of establishing a scope in which several properties inherit the same data context, you can use the <ph id=\"ph1\">&lt;xref:System.Windows.Data.Binding.Source%2A&gt;</ph> property instead of the <ph id=\"ph2\">`DataContext`</ph> property.","pos":[309,537],"source":" If you do not need the functionality of establishing a scope in which several properties inherit the same data context, you can use the <xref:System.Windows.Data.Binding.Source%2A> property instead of the `DataContext` property."}]},{"pos":[544,1104],"content":"The <xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=fullName> and <xref:System.Windows.Data.Binding.RelativeSource%2A?displayProperty=fullName> properties also enable you to set the source of the binding explicitly. However, only one of the three properties, <xref:System.Windows.Data.Binding.ElementName%2A>, <xref:System.Windows.Data.Binding.Source%2A>, and <xref:System.Windows.Data.Binding.RelativeSource%2A>, should be set for each binding, or a conflict can occur. This property throws an exception if there is a binding source conflict.","nodes":[{"content":"The <xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=fullName> and <xref:System.Windows.Data.Binding.RelativeSource%2A?displayProperty=fullName> properties also enable you to set the source of the binding explicitly. However, only one of the three properties, <xref:System.Windows.Data.Binding.ElementName%2A>, <xref:System.Windows.Data.Binding.Source%2A>, and <xref:System.Windows.Data.Binding.RelativeSource%2A>, should be set for each binding, or a conflict can occur. This property throws an exception if there is a binding source conflict.","pos":[0,560],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=fullName&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Data.Binding.RelativeSource%2A?displayProperty=fullName&gt;</ph> properties also enable you to set the source of the binding explicitly.","pos":[0,232],"source":"The <xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=fullName> and <xref:System.Windows.Data.Binding.RelativeSource%2A?displayProperty=fullName> properties also enable you to set the source of the binding explicitly."},{"content":"However, only one of the three properties, <ph id=\"ph1\">&lt;xref:System.Windows.Data.Binding.ElementName%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Windows.Data.Binding.Source%2A&gt;</ph>, and <ph id=\"ph3\">&lt;xref:System.Windows.Data.Binding.RelativeSource%2A&gt;</ph>, should be set for each binding, or a conflict can occur.","pos":[233,487],"source":" However, only one of the three properties, <xref:System.Windows.Data.Binding.ElementName%2A>, <xref:System.Windows.Data.Binding.Source%2A>, and <xref:System.Windows.Data.Binding.RelativeSource%2A>, should be set for each binding, or a conflict can occur."},{"content":"This property throws an exception if there is a binding source conflict.","pos":[488,560]}]}]},{"pos":[1111,1222],"content":"To clear this property, set it to <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName>.","nodes":[{"content":"To clear this property, set it to <ph id=\"ph1\">&lt;xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName&gt;</ph>.","pos":[0,111],"source":"To clear this property, set it to <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName>."}]},{"pos":[1275,1295],"content":"XAML Attribute Usage","linkify":"XAML Attribute Usage","nodes":[{"content":"XAML Attribute Usage","pos":[0,20]}]},{"pos":[1383,1394],"content":"XAML Values","linkify":"XAML Values","nodes":[{"content":"XAML Values","pos":[0,11]}]},{"pos":[1398,1569],"content":"*object*  \n An existing object. To refer to an existing object, use the [StaticResource Markup Extension](~/docs/framework/wpf/advanced/staticresource-markup-extension.md)","nodes":[{"content":"<bpt id=\"p1\">*</bpt>object<ept id=\"p1\">*</ept>","pos":[0,8],"source":"*object*"},{"content":" An existing object. To refer to an existing object, use the [StaticResource Markup Extension](~/docs/framework/wpf/advanced/staticresource-markup-extension.md)","pos":[11,171],"nodes":[{"content":"An existing object.","pos":[1,20]},{"content":"To refer to an existing object, use the <bpt id=\"p1\">[</bpt>StaticResource Markup Extension<ept id=\"p1\">](~/docs/framework/wpf/advanced/staticresource-markup-extension.md)</ept>","pos":[21,160],"source":" To refer to an existing object, use the [StaticResource Markup Extension](~/docs/framework/wpf/advanced/staticresource-markup-extension.md)"}]}]}],"pos":[66645,68239],"yaml":true,"extradata":"MT"},{"content":"The object to use as the binding source.","nodes":[{"pos":[0,40],"content":"The object to use as the binding source.","nodes":[{"content":"The object to use as the binding source.","pos":[0,40]}]}],"pos":[69873,69914],"yaml":true},{"content":"Identifies the <xref href=\"System.Windows.Data.Binding.SourceUpdated\"></xref> attached event.","nodes":[{"pos":[0,93],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Data.Binding.SourceUpdated\"&gt;&lt;/xref&gt;</ph> attached event.","source":"Identifies the <xref href=\"System.Windows.Data.Binding.SourceUpdated\"></xref> attached event."}],"pos":[70907,71001],"yaml":true},{"content":"Identifies the <xref href=\"System.Windows.Data.Binding.TargetUpdated\"></xref> attached event.","nodes":[{"pos":[0,93],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Data.Binding.TargetUpdated\"&gt;&lt;/xref&gt;</ph> attached event.","source":"Identifies the <xref href=\"System.Windows.Data.Binding.TargetUpdated\"></xref> attached event."}],"pos":[72112,72206],"yaml":true},{"content":"Gets or sets a handler you can use to provide custom logic for handling exceptions that the binding engine encounters during the update of the binding source value. This is only applicable if you have associated an <xref href=\"System.Windows.Controls.ExceptionValidationRule\"></xref> with your binding.","nodes":[{"pos":[0,302],"content":"Gets or sets a handler you can use to provide custom logic for handling exceptions that the binding engine encounters during the update of the binding source value. This is only applicable if you have associated an <xref href=\"System.Windows.Controls.ExceptionValidationRule\"></xref> with your binding.","nodes":[{"content":"Gets or sets a handler you can use to provide custom logic for handling exceptions that the binding engine encounters during the update of the binding source value.","pos":[0,164]},{"content":"This is only applicable if you have associated an <ph id=\"ph1\">&lt;xref href=\"System.Windows.Controls.ExceptionValidationRule\"&gt;&lt;/xref&gt;</ph> with your binding.","pos":[165,302],"source":" This is only applicable if you have associated an <xref href=\"System.Windows.Controls.ExceptionValidationRule\"></xref> with your binding."}]}],"pos":[73374,73677],"yaml":true},{"content":"The <xref:System.Windows.Controls.ExceptionValidationRule> is a built-in validation rule that checks for exceptions thrown during the update of the binding source property. If you have associated the <xref:System.Windows.Controls.ExceptionValidationRule> with your <xref:System.Windows.Data.Binding> object, you can use this property to set a handler to provide custom logic for handling these exceptions. If an <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> is not specified on the <xref:System.Windows.Data.Binding>, the binding engine creates a <xref:System.Windows.Controls.ValidationError> with the exception and adds it to the <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> collection of the bound element.","nodes":[{"pos":[0,761],"content":"The <xref:System.Windows.Controls.ExceptionValidationRule> is a built-in validation rule that checks for exceptions thrown during the update of the binding source property. If you have associated the <xref:System.Windows.Controls.ExceptionValidationRule> with your <xref:System.Windows.Data.Binding> object, you can use this property to set a handler to provide custom logic for handling these exceptions. If an <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> is not specified on the <xref:System.Windows.Data.Binding>, the binding engine creates a <xref:System.Windows.Controls.ValidationError> with the exception and adds it to the <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> collection of the bound element.","nodes":[{"content":"The <xref:System.Windows.Controls.ExceptionValidationRule> is a built-in validation rule that checks for exceptions thrown during the update of the binding source property. If you have associated the <xref:System.Windows.Controls.ExceptionValidationRule> with your <xref:System.Windows.Data.Binding> object, you can use this property to set a handler to provide custom logic for handling these exceptions. If an <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> is not specified on the <xref:System.Windows.Data.Binding>, the binding engine creates a <xref:System.Windows.Controls.ValidationError> with the exception and adds it to the <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> collection of the bound element.","pos":[0,761],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Controls.ExceptionValidationRule&gt;</ph> is a built-in validation rule that checks for exceptions thrown during the update of the binding source property.","pos":[0,172],"source":"The <xref:System.Windows.Controls.ExceptionValidationRule> is a built-in validation rule that checks for exceptions thrown during the update of the binding source property."},{"content":"If you have associated the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.ExceptionValidationRule&gt;</ph> with your <ph id=\"ph2\">&lt;xref:System.Windows.Data.Binding&gt;</ph> object, you can use this property to set a handler to provide custom logic for handling these exceptions.","pos":[173,405],"source":" If you have associated the <xref:System.Windows.Controls.ExceptionValidationRule> with your <xref:System.Windows.Data.Binding> object, you can use this property to set a handler to provide custom logic for handling these exceptions."},{"content":"If an <ph id=\"ph1\">&lt;xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A&gt;</ph> is not specified on the <ph id=\"ph2\">&lt;xref:System.Windows.Data.Binding&gt;</ph>, the binding engine creates a <ph id=\"ph3\">&lt;xref:System.Windows.Controls.ValidationError&gt;</ph> with the exception and adds it to the <ph id=\"ph4\">&lt;xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName&gt;</ph> collection of the bound element.","pos":[406,761],"source":" If an <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> is not specified on the <xref:System.Windows.Data.Binding>, the binding engine creates a <xref:System.Windows.Controls.ValidationError> with the exception and adds it to the <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> collection of the bound element."}]}]}],"pos":[73688,74450],"yaml":true,"extradata":"MT"},{"content":"A method that provides custom logic for handling exceptions that the binding engine encounters during the update of the binding source value.","nodes":[{"pos":[0,141],"content":"A method that provides custom logic for handling exceptions that the binding engine encounters during the update of the binding source value.","nodes":[{"content":"A method that provides custom logic for handling exceptions that the binding engine encounters during the update of the binding source value.","pos":[0,141]}]}],"pos":[76283,76425],"yaml":true},{"content":"Gets or sets a value that determines the timing of binding source updates.","nodes":[{"pos":[0,74],"content":"Gets or sets a value that determines the timing of binding source updates.","nodes":[{"content":"Gets or sets a value that determines the timing of binding source updates.","pos":[0,74]}]}],"pos":[77465,77540],"yaml":true},{"content":"Bindings that are <xref:System.Windows.Data.BindingMode.TwoWay> or <xref:System.Windows.Data.BindingMode.OneWayToSource> listen for changes in the target property and propagate them back to the source. This is known as updating the source. Usually, these updates happen whenever the target property changes. This is fine for check boxes and other simple controls, but it is usually not appropriate for text fields. Updating after every keystroke can diminish performance and it denies the user the usual opportunity to backspace and fix typing errors before committing to the new value. Therefore, the default <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> value of the <xref:System.Windows.Controls.TextBox.Text%2A> property is <xref:System.Windows.Data.UpdateSourceTrigger.LostFocus> and not <xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged>.  \n  \n If you set the <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> value to <xref:System.Windows.Data.UpdateSourceTrigger.Explicit>, you must call the <xref:System.Windows.Data.BindingExpression.UpdateSource%2A> method or the changes will not propagate back to the source.","nodes":[{"pos":[0,868],"content":"Bindings that are <xref:System.Windows.Data.BindingMode.TwoWay> or <xref:System.Windows.Data.BindingMode.OneWayToSource> listen for changes in the target property and propagate them back to the source. This is known as updating the source. Usually, these updates happen whenever the target property changes. This is fine for check boxes and other simple controls, but it is usually not appropriate for text fields. Updating after every keystroke can diminish performance and it denies the user the usual opportunity to backspace and fix typing errors before committing to the new value. Therefore, the default <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> value of the <xref:System.Windows.Controls.TextBox.Text%2A> property is <xref:System.Windows.Data.UpdateSourceTrigger.LostFocus> and not <xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged>.","nodes":[{"content":"Bindings that are <xref:System.Windows.Data.BindingMode.TwoWay> or <xref:System.Windows.Data.BindingMode.OneWayToSource> listen for changes in the target property and propagate them back to the source. This is known as updating the source. Usually, these updates happen whenever the target property changes. This is fine for check boxes and other simple controls, but it is usually not appropriate for text fields. Updating after every keystroke can diminish performance and it denies the user the usual opportunity to backspace and fix typing errors before committing to the new value. Therefore, the default <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> value of the <xref:System.Windows.Controls.TextBox.Text%2A> property is <xref:System.Windows.Data.UpdateSourceTrigger.LostFocus> and not <xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged>.","pos":[0,868],"nodes":[{"content":"Bindings that are <ph id=\"ph1\">&lt;xref:System.Windows.Data.BindingMode.TwoWay&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.Data.BindingMode.OneWayToSource&gt;</ph> listen for changes in the target property and propagate them back to the source.","pos":[0,201],"source":"Bindings that are <xref:System.Windows.Data.BindingMode.TwoWay> or <xref:System.Windows.Data.BindingMode.OneWayToSource> listen for changes in the target property and propagate them back to the source."},{"content":"This is known as updating the source.","pos":[202,239]},{"content":"Usually, these updates happen whenever the target property changes.","pos":[240,307]},{"content":"This is fine for check boxes and other simple controls, but it is usually not appropriate for text fields.","pos":[308,414]},{"content":"Updating after every keystroke can diminish performance and it denies the user the usual opportunity to backspace and fix typing errors before committing to the new value.","pos":[415,586]},{"content":"Therefore, the default <ph id=\"ph1\">&lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt;</ph> value of the <ph id=\"ph2\">&lt;xref:System.Windows.Controls.TextBox.Text%2A&gt;</ph> property is <ph id=\"ph3\">&lt;xref:System.Windows.Data.UpdateSourceTrigger.LostFocus&gt;</ph> and not <ph id=\"ph4\">&lt;xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged&gt;</ph>.","pos":[587,868],"source":" Therefore, the default <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> value of the <xref:System.Windows.Controls.TextBox.Text%2A> property is <xref:System.Windows.Data.UpdateSourceTrigger.LostFocus> and not <xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged>."}]}]},{"pos":[875,1153],"content":"If you set the <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> value to <xref:System.Windows.Data.UpdateSourceTrigger.Explicit>, you must call the <xref:System.Windows.Data.BindingExpression.UpdateSource%2A> method or the changes will not propagate back to the source.","nodes":[{"content":"If you set the <ph id=\"ph1\">&lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt;</ph> value to <ph id=\"ph2\">&lt;xref:System.Windows.Data.UpdateSourceTrigger.Explicit&gt;</ph>, you must call the <ph id=\"ph3\">&lt;xref:System.Windows.Data.BindingExpression.UpdateSource%2A&gt;</ph> method or the changes will not propagate back to the source.","pos":[0,278],"source":"If you set the <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> value to <xref:System.Windows.Data.UpdateSourceTrigger.Explicit>, you must call the <xref:System.Windows.Data.BindingExpression.UpdateSource%2A> method or the changes will not propagate back to the source."}]}],"pos":[77551,78709],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Windows.Data.UpdateSourceTrigger\"></xref> values. The default is <xref href=\"System.Windows.Data.UpdateSourceTrigger.Default\"></xref>, which returns the default <xref href=\"System.Windows.Data.UpdateSourceTrigger\"></xref> value of the target dependency property. However, the default value for most dependency properties is <xref href=\"System.Windows.Data.UpdateSourceTrigger.PropertyChanged\"></xref>, while the <xref href=\"System.Windows.Controls.TextBox.Text\"></xref> property has a default value of <xref href=\"System.Windows.Data.UpdateSourceTrigger.LostFocus\"></xref>.  \n  \n A programmatic way to determine the default <xref href=\"System.Windows.Data.Binding.UpdateSourceTrigger\"></xref> value of a dependency property is to get the property metadata of the property using <xref href=\"System.Windows.DependencyProperty.GetMetadata(System.Type)\"></xref> and then check the value of the <xref href=\"System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger\"></xref> property.","nodes":[{"pos":[0,603],"content":"One of the <xref href=\"System.Windows.Data.UpdateSourceTrigger\"></xref> values. The default is <xref href=\"System.Windows.Data.UpdateSourceTrigger.Default\"></xref>, which returns the default <xref href=\"System.Windows.Data.UpdateSourceTrigger\"></xref> value of the target dependency property. However, the default value for most dependency properties is <xref href=\"System.Windows.Data.UpdateSourceTrigger.PropertyChanged\"></xref>, while the <xref href=\"System.Windows.Controls.TextBox.Text\"></xref> property has a default value of <xref href=\"System.Windows.Data.UpdateSourceTrigger.LostFocus\"></xref>.","nodes":[{"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Data.UpdateSourceTrigger\"&gt;&lt;/xref&gt;</ph> values.","pos":[0,79],"source":"One of the <xref href=\"System.Windows.Data.UpdateSourceTrigger\"></xref> values."},{"content":"The default is <ph id=\"ph1\">&lt;xref href=\"System.Windows.Data.UpdateSourceTrigger.Default\"&gt;&lt;/xref&gt;</ph>, which returns the default <ph id=\"ph2\">&lt;xref href=\"System.Windows.Data.UpdateSourceTrigger\"&gt;&lt;/xref&gt;</ph> value of the target dependency property.","pos":[80,292],"source":" The default is <xref href=\"System.Windows.Data.UpdateSourceTrigger.Default\"></xref>, which returns the default <xref href=\"System.Windows.Data.UpdateSourceTrigger\"></xref> value of the target dependency property."},{"content":"However, the default value for most dependency properties is <ph id=\"ph1\">&lt;xref href=\"System.Windows.Data.UpdateSourceTrigger.PropertyChanged\"&gt;&lt;/xref&gt;</ph>, while the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Controls.TextBox.Text\"&gt;&lt;/xref&gt;</ph> property has a default value of <ph id=\"ph3\">&lt;xref href=\"System.Windows.Data.UpdateSourceTrigger.LostFocus\"&gt;&lt;/xref&gt;</ph>.","pos":[293,603],"source":" However, the default value for most dependency properties is <xref href=\"System.Windows.Data.UpdateSourceTrigger.PropertyChanged\"></xref>, while the <xref href=\"System.Windows.Controls.TextBox.Text\"></xref> property has a default value of <xref href=\"System.Windows.Data.UpdateSourceTrigger.LostFocus\"></xref>."}]},{"pos":[610,1018],"content":"A programmatic way to determine the default <ph id=\"ph1\">&lt;xref href=\"System.Windows.Data.Binding.UpdateSourceTrigger\"&gt;&lt;/xref&gt;</ph> value of a dependency property is to get the property metadata of the property using <ph id=\"ph2\">&lt;xref href=\"System.Windows.DependencyProperty.GetMetadata(System.Type)\"&gt;&lt;/xref&gt;</ph> and then check the value of the <ph id=\"ph3\">&lt;xref href=\"System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger\"&gt;&lt;/xref&gt;</ph> property.","source":"A programmatic way to determine the default <xref href=\"System.Windows.Data.Binding.UpdateSourceTrigger\"></xref> value of a dependency property is to get the property metadata of the property using <xref href=\"System.Windows.DependencyProperty.GetMetadata(System.Type)\"></xref> and then check the value of the <xref href=\"System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger\"></xref> property."}],"pos":[78896,79937],"yaml":true},{"content":"Gets or sets a value that indicates whether to include the <xref href=\"System.Windows.Controls.DataErrorValidationRule\"></xref>.","nodes":[{"pos":[0,128],"content":"Gets or sets a value that indicates whether to include the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Controls.DataErrorValidationRule\"&gt;&lt;/xref&gt;</ph>.","source":"Gets or sets a value that indicates whether to include the <xref href=\"System.Windows.Controls.DataErrorValidationRule\"></xref>."}],"pos":[80959,81088],"yaml":true},{"content":"Setting this property provides an alternative to using the <xref:System.Windows.Controls.DataErrorValidationRule> element explicitly. The <xref:System.Windows.Controls.DataErrorValidationRule> is a built-in validation rule that checks for errors that are raised by the <xref:System.ComponentModel.IDataErrorInfo> implementation of the source object. If an error is raised, the binding engine creates a <xref:System.Windows.Controls.ValidationError> with the error and adds it to the <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> collection of the bound element. The lack of an error clears this validation feedback, unless another rule raises a validation issue.  \n  \n <xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A> is introduced in the .NET Framework version 3.5.  For more information, see [.NET Framework Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).","nodes":[{"pos":[0,693],"content":"Setting this property provides an alternative to using the <xref:System.Windows.Controls.DataErrorValidationRule> element explicitly. The <xref:System.Windows.Controls.DataErrorValidationRule> is a built-in validation rule that checks for errors that are raised by the <xref:System.ComponentModel.IDataErrorInfo> implementation of the source object. If an error is raised, the binding engine creates a <xref:System.Windows.Controls.ValidationError> with the error and adds it to the <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> collection of the bound element. The lack of an error clears this validation feedback, unless another rule raises a validation issue.","nodes":[{"content":"Setting this property provides an alternative to using the <xref:System.Windows.Controls.DataErrorValidationRule> element explicitly. The <xref:System.Windows.Controls.DataErrorValidationRule> is a built-in validation rule that checks for errors that are raised by the <xref:System.ComponentModel.IDataErrorInfo> implementation of the source object. If an error is raised, the binding engine creates a <xref:System.Windows.Controls.ValidationError> with the error and adds it to the <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> collection of the bound element. The lack of an error clears this validation feedback, unless another rule raises a validation issue.","pos":[0,693],"nodes":[{"content":"Setting this property provides an alternative to using the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.DataErrorValidationRule&gt;</ph> element explicitly.","pos":[0,133],"source":"Setting this property provides an alternative to using the <xref:System.Windows.Controls.DataErrorValidationRule> element explicitly."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Controls.DataErrorValidationRule&gt;</ph> is a built-in validation rule that checks for errors that are raised by the <ph id=\"ph2\">&lt;xref:System.ComponentModel.IDataErrorInfo&gt;</ph> implementation of the source object.","pos":[134,349],"source":" The <xref:System.Windows.Controls.DataErrorValidationRule> is a built-in validation rule that checks for errors that are raised by the <xref:System.ComponentModel.IDataErrorInfo> implementation of the source object."},{"content":"If an error is raised, the binding engine creates a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.ValidationError&gt;</ph> with the error and adds it to the <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName&gt;</ph> collection of the bound element.","pos":[350,592],"source":" If an error is raised, the binding engine creates a <xref:System.Windows.Controls.ValidationError> with the error and adds it to the <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> collection of the bound element."},{"content":"The lack of an error clears this validation feedback, unless another rule raises a validation issue.","pos":[593,693]}]}]},{"pos":[700,942],"content":"<xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A> is introduced in the .NET Framework version 3.5.  For more information, see [.NET Framework Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A&gt;</ph> is introduced in the .NET Framework version 3.5.","pos":[0,108],"source":"<xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A> is introduced in the .NET Framework version 3.5."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>.NET Framework Versions and Dependencies<ept id=\"p1\">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.","pos":[110,242],"source":"  For more information, see [.NET Framework Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md)."}]}],"pos":[81099,82046],"yaml":true,"extradata":"MT"},{"content":"`true` to include the <xref href=\"System.Windows.Controls.DataErrorValidationRule\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,111],"content":"<ph id=\"ph1\">`true`</ph> to include the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Controls.DataErrorValidationRule\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` to include the <xref href=\"System.Windows.Controls.DataErrorValidationRule\"></xref>; otherwise, `false`."}],"pos":[83513,83627],"yaml":true},{"content":"Gets or sets a value that indicates whether to include the <xref href=\"System.Windows.Controls.ExceptionValidationRule\"></xref>.","nodes":[{"pos":[0,128],"content":"Gets or sets a value that indicates whether to include the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Controls.ExceptionValidationRule\"&gt;&lt;/xref&gt;</ph>.","source":"Gets or sets a value that indicates whether to include the <xref href=\"System.Windows.Controls.ExceptionValidationRule\"></xref>."}],"pos":[84651,84780],"yaml":true},{"content":"Setting this property provides an alternative to using the <xref:System.Windows.Controls.ExceptionValidationRule> element explicitly. The <xref:System.Windows.Controls.ExceptionValidationRule> is a built-in validation rule that checks for exceptions that are thrown during the update of the source property. If an exception is thrown, the binding engine creates a <xref:System.Windows.Controls.ValidationError> with the exception and adds it to the <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> collection of the bound element. The lack of an error clears this validation feedback, unless another rule raises a validation issue.  \n  \n <xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A> is introduced in the .NET Framework version 3.5.  For more information, see [.NET Framework Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).","nodes":[{"pos":[0,659],"content":"Setting this property provides an alternative to using the <xref:System.Windows.Controls.ExceptionValidationRule> element explicitly. The <xref:System.Windows.Controls.ExceptionValidationRule> is a built-in validation rule that checks for exceptions that are thrown during the update of the source property. If an exception is thrown, the binding engine creates a <xref:System.Windows.Controls.ValidationError> with the exception and adds it to the <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> collection of the bound element. The lack of an error clears this validation feedback, unless another rule raises a validation issue.","nodes":[{"content":"Setting this property provides an alternative to using the <xref:System.Windows.Controls.ExceptionValidationRule> element explicitly. The <xref:System.Windows.Controls.ExceptionValidationRule> is a built-in validation rule that checks for exceptions that are thrown during the update of the source property. If an exception is thrown, the binding engine creates a <xref:System.Windows.Controls.ValidationError> with the exception and adds it to the <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> collection of the bound element. The lack of an error clears this validation feedback, unless another rule raises a validation issue.","pos":[0,659],"nodes":[{"content":"Setting this property provides an alternative to using the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.ExceptionValidationRule&gt;</ph> element explicitly.","pos":[0,133],"source":"Setting this property provides an alternative to using the <xref:System.Windows.Controls.ExceptionValidationRule> element explicitly."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Controls.ExceptionValidationRule&gt;</ph> is a built-in validation rule that checks for exceptions that are thrown during the update of the source property.","pos":[134,307],"source":" The <xref:System.Windows.Controls.ExceptionValidationRule> is a built-in validation rule that checks for exceptions that are thrown during the update of the source property."},{"content":"If an exception is thrown, the binding engine creates a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.ValidationError&gt;</ph> with the exception and adds it to the <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName&gt;</ph> collection of the bound element.","pos":[308,558],"source":" If an exception is thrown, the binding engine creates a <xref:System.Windows.Controls.ValidationError> with the exception and adds it to the <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> collection of the bound element."},{"content":"The lack of an error clears this validation feedback, unless another rule raises a validation issue.","pos":[559,659]}]}]},{"pos":[666,908],"content":"<xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A> is introduced in the .NET Framework version 3.5.  For more information, see [.NET Framework Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A&gt;</ph> is introduced in the .NET Framework version 3.5.","pos":[0,108],"source":"<xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A> is introduced in the .NET Framework version 3.5."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>.NET Framework Versions and Dependencies<ept id=\"p1\">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.","pos":[110,242],"source":"  For more information, see [.NET Framework Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md)."}]}],"pos":[84791,85704],"yaml":true,"extradata":"MT"},{"content":"`true` to include the <xref href=\"System.Windows.Controls.ExceptionValidationRule\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,111],"content":"<ph id=\"ph1\">`true`</ph> to include the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Controls.ExceptionValidationRule\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` to include the <xref href=\"System.Windows.Controls.ExceptionValidationRule\"></xref>; otherwise, `false`."}],"pos":[87112,87226],"yaml":true},{"content":"Gets or sets a value that indicates whether to include the <xref href=\"System.Windows.Controls.NotifyDataErrorValidationRule\"></xref>.","nodes":[{"pos":[0,134],"content":"Gets or sets a value that indicates whether to include the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Controls.NotifyDataErrorValidationRule\"&gt;&lt;/xref&gt;</ph>.","source":"Gets or sets a value that indicates whether to include the <xref href=\"System.Windows.Controls.NotifyDataErrorValidationRule\"></xref>."}],"pos":[88308,88443],"yaml":true},{"content":"When <xref:System.Windows.Data.Binding.ValidatesOnNotifyDataErrors%2A> is `true`, the binding checks for and reports errors that are raised by a data source that implements <xref:System.ComponentModel.INotifyDataErrorInfo>.","nodes":[{"pos":[0,223],"content":"When <ph id=\"ph1\">&lt;xref:System.Windows.Data.Binding.ValidatesOnNotifyDataErrors%2A&gt;</ph> is <ph id=\"ph2\">`true`</ph>, the binding checks for and reports errors that are raised by a data source that implements <ph id=\"ph3\">&lt;xref:System.ComponentModel.INotifyDataErrorInfo&gt;</ph>.","source":"When <xref:System.Windows.Data.Binding.ValidatesOnNotifyDataErrors%2A> is `true`, the binding checks for and reports errors that are raised by a data source that implements <xref:System.ComponentModel.INotifyDataErrorInfo>."}],"pos":[88454,88678],"yaml":true,"extradata":"MT"},{"content":"`true` to include the <xref href=\"System.Windows.Controls.NotifyDataErrorValidationRule\"></xref>; otherwise, `false`. The default is `true`.","nodes":[{"pos":[0,140],"content":"`true` to include the <xref href=\"System.Windows.Controls.NotifyDataErrorValidationRule\"></xref>; otherwise, `false`. The default is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> to include the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Controls.NotifyDataErrorValidationRule\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph3\">`false`</ph>.","pos":[0,117],"source":"`true` to include the <xref href=\"System.Windows.Controls.NotifyDataErrorValidationRule\"></xref>; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`true`</ph>.","pos":[118,140],"source":" The default is `true`."}]}],"pos":[88813,88956],"yaml":true},{"content":"Gets a collection of rules that check the validity of the user input.","nodes":[{"pos":[0,69],"content":"Gets a collection of rules that check the validity of the user input.","nodes":[{"content":"Gets a collection of rules that check the validity of the user input.","pos":[0,69]}]}],"pos":[89950,90020],"yaml":true},{"content":"The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] data binding model enables you to associate <xref:System.Windows.Data.Binding.ValidationRules%2A> with your <xref:System.Windows.Data.Binding> or <xref:System.Windows.Data.MultiBinding> object. You can create custom rules by deriving from the <xref:System.Windows.Controls.ValidationRule> class and implementing the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, or you can use the built-in <xref:System.Windows.Controls.ExceptionValidationRule>, which invalidates a value if there are exceptions during source updates.  \n  \n The binding engine checks each <xref:System.Windows.Controls.ValidationRule> associated with a binding each time an input value (the binding target property value) is transferred to the binding source property. For a detailed discussion of the validation process, see the Data Validation section in the [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).  \n  \n> [!NOTE]\n>  This property can be set in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] only by using the collection syntax shown, or by accessing the collection object and using its various methods, such as `Add`. The property to access the collection object is read-only, whereas the collection itself is read-write.  \n  \n<a name=\"xamlPropertyElementUsage_ValidationRules\"></a>   \n## XAML Property Element Usage  \n  \n```  \n<object>  \n  <object.ValidationRules>  \n    oneOrMoreValidationRules  \n  </object.ValidationRules>  \n</object>  \n  \n```  \n  \n<a name=\"xamlValues_ValidationRules\"></a>   \n## XAML Values  \n *oneOrMoreValidationRules*  \n One or more <xref:System.Windows.Controls.ValidationRule> objects. You can use the <xref:System.Windows.Controls.ExceptionValidationRule> class or create custom rules by subclassing the <xref:System.Windows.Controls.ValidationRule> class.","nodes":[{"pos":[0,614],"content":"The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] data binding model enables you to associate <xref:System.Windows.Data.Binding.ValidationRules%2A> with your <xref:System.Windows.Data.Binding> or <xref:System.Windows.Data.MultiBinding> object. You can create custom rules by deriving from the <xref:System.Windows.Controls.ValidationRule> class and implementing the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, or you can use the built-in <xref:System.Windows.Controls.ExceptionValidationRule>, which invalidates a value if there are exceptions during source updates.","nodes":[{"content":"The <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> data binding model enables you to associate <ph id=\"ph2\">&lt;xref:System.Windows.Data.Binding.ValidationRules%2A&gt;</ph> with your <ph id=\"ph3\">&lt;xref:System.Windows.Data.Binding&gt;</ph> or <ph id=\"ph4\">&lt;xref:System.Windows.Data.MultiBinding&gt;</ph> object.","pos":[0,269],"source":"The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] data binding model enables you to associate <xref:System.Windows.Data.Binding.ValidationRules%2A> with your <xref:System.Windows.Data.Binding> or <xref:System.Windows.Data.MultiBinding> object."},{"content":"You can create custom rules by deriving from the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> class and implementing the <ph id=\"ph2\">&lt;xref:System.Windows.Controls.ValidationRule.Validate%2A&gt;</ph> method, or you can use the built-in <ph id=\"ph3\">&lt;xref:System.Windows.Controls.ExceptionValidationRule&gt;</ph>, which invalidates a value if there are exceptions during source updates.","pos":[270,614],"source":" You can create custom rules by deriving from the <xref:System.Windows.Controls.ValidationRule> class and implementing the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, or you can use the built-in <xref:System.Windows.Controls.ExceptionValidationRule>, which invalidates a value if there are exceptions during source updates."}]},{"pos":[621,1000],"content":"The binding engine checks each <xref:System.Windows.Controls.ValidationRule> associated with a binding each time an input value (the binding target property value) is transferred to the binding source property. For a detailed discussion of the validation process, see the Data Validation section in the [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).","nodes":[{"content":"The binding engine checks each <ph id=\"ph1\">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> associated with a binding each time an input value (the binding target property value) is transferred to the binding source property.","pos":[0,210],"source":"The binding engine checks each <xref:System.Windows.Controls.ValidationRule> associated with a binding each time an input value (the binding target property value) is transferred to the binding source property."},{"content":"For a detailed discussion of the validation process, see the Data Validation section in the <bpt id=\"p1\">[</bpt>Data Binding Overview<ept id=\"p1\">](~/docs/framework/wpf/data/data-binding-overview.md)</ept>.","pos":[211,379],"source":" For a detailed discussion of the validation process, see the Data Validation section in the [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md)."}]},{"pos":[1008,1337],"content":"[!NOTE]\n This property can be set in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] only by using the collection syntax shown, or by accessing the collection object and using its various methods, such as `Add`. The property to access the collection object is read-only, whereas the collection itself is read-write.","leadings":["","> "],"nodes":[{"content":" This property can be set in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] only by using the collection syntax shown, or by accessing the collection object and using its various methods, such as `Add`. The property to access the collection object is read-only, whereas the collection itself is read-write.","pos":[8,327],"nodes":[{"content":"This property can be set in <ph id=\"ph1\">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph> only by using the collection syntax shown, or by accessing the collection object and using its various methods, such as <ph id=\"ph2\">`Add`</ph>.","pos":[1,215],"source":" This property can be set in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] only by using the collection syntax shown, or by accessing the collection object and using its various methods, such as `Add`."},{"content":"The property to access the collection object is read-only, whereas the collection itself is read-write.","pos":[216,319]}]}]},{"pos":[1405,1432],"content":"XAML Property Element Usage","linkify":"XAML Property Element Usage","nodes":[{"content":"XAML Property Element Usage","pos":[0,27]}]},{"pos":[1617,1628],"content":"XAML Values","linkify":"XAML Values","nodes":[{"content":"XAML Values","pos":[0,11]}]},{"pos":[1632,1900],"content":"*oneOrMoreValidationRules*  \n One or more <xref:System.Windows.Controls.ValidationRule> objects. You can use the <xref:System.Windows.Controls.ExceptionValidationRule> class or create custom rules by subclassing the <xref:System.Windows.Controls.ValidationRule> class.","nodes":[{"content":"<bpt id=\"p1\">*</bpt>oneOrMoreValidationRules<ept id=\"p1\">*</ept>","pos":[0,26],"source":"*oneOrMoreValidationRules*"},{"content":" One or more <xref:System.Windows.Controls.ValidationRule> objects. You can use the <xref:System.Windows.Controls.ExceptionValidationRule> class or create custom rules by subclassing the <xref:System.Windows.Controls.ValidationRule> class.","pos":[29,268],"nodes":[{"content":"One or more <ph id=\"ph1\">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> objects.","pos":[1,67],"source":" One or more <xref:System.Windows.Controls.ValidationRule> objects."},{"content":"You can use the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.ExceptionValidationRule&gt;</ph> class or create custom rules by subclassing the <ph id=\"ph2\">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> class.","pos":[68,239],"source":" You can use the <xref:System.Windows.Controls.ExceptionValidationRule> class or create custom rules by subclassing the <xref:System.Windows.Controls.ValidationRule> class."}]}]}],"pos":[90031,91960],"yaml":true,"extradata":"MT"},{"content":"A collection of <xref href=\"System.Windows.Controls.ValidationRule\"></xref> objects.","nodes":[{"pos":[0,84],"content":"A collection of <ph id=\"ph1\">&lt;xref href=\"System.Windows.Controls.ValidationRule\"&gt;&lt;/xref&gt;</ph> objects.","source":"A collection of <xref href=\"System.Windows.Controls.ValidationRule\"></xref> objects."}],"pos":[92222,92307],"yaml":true},{"content":"Identifies the <xref href=\"System.Windows.Data.Binding.XmlNamespaceManager\"></xref> attached property.","nodes":[{"pos":[0,102],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Data.Binding.XmlNamespaceManager\"&gt;&lt;/xref&gt;</ph> attached property.","source":"Identifies the <xref href=\"System.Windows.Data.Binding.XmlNamespaceManager\"></xref> attached property."}],"pos":[93363,93466],"yaml":true},{"content":"Gets or sets an `XPath` query that returns the value on the [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] binding source to use.","nodes":[{"pos":[0,140],"content":"Gets or sets an <ph id=\"ph1\">`XPath`</ph> query that returns the value on the <ph id=\"ph2\">[!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)]</ph> binding source to use.","source":"Gets or sets an `XPath` query that returns the value on the [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] binding source to use."}],"pos":[94525,94666],"yaml":true},{"content":"When the binding source is [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] data instead of a [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] object, the <xref:System.Windows.Data.Binding.XPath%2A> property is used instead of the <xref:System.Windows.Data.Binding.Path%2A> property to indicate the path to the value on the binding source to use.  \n  \n By setting the <xref:System.Windows.Data.Binding.XPath%2A> property, you are creating an `XPath` query to select a node or a collection of nodes (<xref:System.Xml.XmlElement?displayProperty=fullName> and <xref:System.Xml.XmlAttribute?displayProperty=fullName> both derive from <xref:System.Xml.XmlNode?displayProperty=fullName>). <xref:System.Xml.XmlNode?displayProperty=fullName> is a [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] object, which means you can bind to its properties using the <xref:System.Windows.Data.Binding.Path%2A> property.  \n  \n The <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=fullName> method handles the `XPath` expressions from the <xref:System.Windows.Data.Binding.XPath%2A> property. `XPath` functions are not supported. For `XPath` expression information, see the <xref:System.Xml.XmlNode.SelectNodes%2A> documentation and some examples provided in the Example section.  \n  \n LINQ to XML objects <xref:System.Xml.Linq.XDocument> and <xref:System.Xml.Linq.XElement> do not use `XPath`. For details, see [How to: Bind to XDocument, XElement, or LINQ for XML Query Results](~/docs/framework/wpf/data/how-to-bind-to-xdocument-xelement-or-linq-for-xml-query-results.md).","nodes":[{"pos":[0,364],"content":"When the binding source is <ph id=\"ph1\">[!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)]</ph> data instead of a <ph id=\"ph2\">[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]</ph> object, the <ph id=\"ph3\">&lt;xref:System.Windows.Data.Binding.XPath%2A&gt;</ph> property is used instead of the <ph id=\"ph4\">&lt;xref:System.Windows.Data.Binding.Path%2A&gt;</ph> property to indicate the path to the value on the binding source to use.","source":"When the binding source is [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] data instead of a [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] object, the <xref:System.Windows.Data.Binding.XPath%2A> property is used instead of the <xref:System.Windows.Data.Binding.Path%2A> property to indicate the path to the value on the binding source to use."},{"pos":[371,928],"content":"By setting the <xref:System.Windows.Data.Binding.XPath%2A> property, you are creating an `XPath` query to select a node or a collection of nodes (<xref:System.Xml.XmlElement?displayProperty=fullName> and <xref:System.Xml.XmlAttribute?displayProperty=fullName> both derive from <xref:System.Xml.XmlNode?displayProperty=fullName>). <xref:System.Xml.XmlNode?displayProperty=fullName> is a [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] object, which means you can bind to its properties using the <xref:System.Windows.Data.Binding.Path%2A> property.","nodes":[{"content":"By setting the <ph id=\"ph1\">&lt;xref:System.Windows.Data.Binding.XPath%2A&gt;</ph> property, you are creating an <ph id=\"ph2\">`XPath`</ph> query to select a node or a collection of nodes (<ph id=\"ph3\">&lt;xref:System.Xml.XmlElement?displayProperty=fullName&gt;</ph> and <ph id=\"ph4\">&lt;xref:System.Xml.XmlAttribute?displayProperty=fullName&gt;</ph> both derive from <ph id=\"ph5\">&lt;xref:System.Xml.XmlNode?displayProperty=fullName&gt;</ph>).","pos":[0,329],"source":"By setting the <xref:System.Windows.Data.Binding.XPath%2A> property, you are creating an `XPath` query to select a node or a collection of nodes (<xref:System.Xml.XmlElement?displayProperty=fullName> and <xref:System.Xml.XmlAttribute?displayProperty=fullName> both derive from <xref:System.Xml.XmlNode?displayProperty=fullName>)."},{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XmlNode?displayProperty=fullName&gt;</ph> is a <ph id=\"ph2\">[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]</ph> object, which means you can bind to its properties using the <ph id=\"ph3\">&lt;xref:System.Windows.Data.Binding.Path%2A&gt;</ph> property.","pos":[330,557],"source":" <xref:System.Xml.XmlNode?displayProperty=fullName> is a [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] object, which means you can bind to its properties using the <xref:System.Windows.Data.Binding.Path%2A> property."}]},{"pos":[935,1293],"content":"The <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=fullName> method handles the `XPath` expressions from the <xref:System.Windows.Data.Binding.XPath%2A> property. `XPath` functions are not supported. For `XPath` expression information, see the <xref:System.Xml.XmlNode.SelectNodes%2A> documentation and some examples provided in the Example section.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=fullName&gt;</ph> method handles the <ph id=\"ph2\">`XPath`</ph> expressions from the <ph id=\"ph3\">&lt;xref:System.Windows.Data.Binding.XPath%2A&gt;</ph> property.","pos":[0,171],"source":"The <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=fullName> method handles the `XPath` expressions from the <xref:System.Windows.Data.Binding.XPath%2A> property."},{"content":"<ph id=\"ph1\">`XPath`</ph> functions are not supported.","pos":[172,208],"source":"`XPath` functions are not supported."},{"content":"For <ph id=\"ph1\">`XPath`</ph> expression information, see the <ph id=\"ph2\">&lt;xref:System.Xml.XmlNode.SelectNodes%2A&gt;</ph> documentation and some examples provided in the Example section.","pos":[209,358],"source":" For `XPath` expression information, see the <xref:System.Xml.XmlNode.SelectNodes%2A> documentation and some examples provided in the Example section."}]},{"pos":[1300,1589],"content":"LINQ to XML objects <xref:System.Xml.Linq.XDocument> and <xref:System.Xml.Linq.XElement> do not use `XPath`. For details, see [How to: Bind to XDocument, XElement, or LINQ for XML Query Results](~/docs/framework/wpf/data/how-to-bind-to-xdocument-xelement-or-linq-for-xml-query-results.md).","nodes":[{"content":"LINQ to XML objects <ph id=\"ph1\">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Xml.Linq.XElement&gt;</ph> do not use <ph id=\"ph3\">`XPath`</ph>.","pos":[0,108],"source":"LINQ to XML objects <xref:System.Xml.Linq.XDocument> and <xref:System.Xml.Linq.XElement> do not use `XPath`."},{"content":"For details, see <bpt id=\"p1\">[</bpt>How to: Bind to XDocument, XElement, or LINQ for XML Query Results<ept id=\"p1\">](~/docs/framework/wpf/data/how-to-bind-to-xdocument-xelement-or-linq-for-xml-query-results.md)</ept>.","pos":[109,289],"source":" For details, see [How to: Bind to XDocument, XElement, or LINQ for XML Query Results](~/docs/framework/wpf/data/how-to-bind-to-xdocument-xelement-or-linq-for-xml-query-results.md)."}]}],"pos":[94677,96275],"yaml":true,"extradata":"MT"},{"content":"The `XPath` query. The default is `null`.","nodes":[{"pos":[0,41],"content":"The `XPath` query. The default is `null`.","nodes":[{"content":"The <ph id=\"ph1\">`XPath`</ph> query.","pos":[0,18],"source":"The `XPath` query."},{"content":"The default is <ph id=\"ph1\">`null`</ph>.","pos":[19,41],"source":" The default is `null`."}]}],"pos":[96389,96431],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Data.Binding\n  commentId: T:System.Windows.Data.Binding\n  id: Binding\n  children:\n  - System.Windows.Data.Binding.#ctor\n  - System.Windows.Data.Binding.#ctor(System.String)\n  - System.Windows.Data.Binding.AddSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})\n  - System.Windows.Data.Binding.AddTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})\n  - System.Windows.Data.Binding.AsyncState\n  - System.Windows.Data.Binding.BindsDirectlyToSource\n  - System.Windows.Data.Binding.Converter\n  - System.Windows.Data.Binding.ConverterCulture\n  - System.Windows.Data.Binding.ConverterParameter\n  - System.Windows.Data.Binding.DoNothing\n  - System.Windows.Data.Binding.ElementName\n  - System.Windows.Data.Binding.GetXmlNamespaceManager(System.Windows.DependencyObject)\n  - System.Windows.Data.Binding.IndexerName\n  - System.Windows.Data.Binding.IsAsync\n  - System.Windows.Data.Binding.Mode\n  - System.Windows.Data.Binding.NotifyOnSourceUpdated\n  - System.Windows.Data.Binding.NotifyOnTargetUpdated\n  - System.Windows.Data.Binding.NotifyOnValidationError\n  - System.Windows.Data.Binding.Path\n  - System.Windows.Data.Binding.RelativeSource\n  - System.Windows.Data.Binding.RemoveSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})\n  - System.Windows.Data.Binding.RemoveTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})\n  - System.Windows.Data.Binding.SetXmlNamespaceManager(System.Windows.DependencyObject,System.Xml.XmlNamespaceManager)\n  - System.Windows.Data.Binding.ShouldSerializePath\n  - System.Windows.Data.Binding.ShouldSerializeSource\n  - System.Windows.Data.Binding.ShouldSerializeValidationRules\n  - System.Windows.Data.Binding.Source\n  - System.Windows.Data.Binding.SourceUpdatedEvent\n  - System.Windows.Data.Binding.TargetUpdatedEvent\n  - System.Windows.Data.Binding.UpdateSourceExceptionFilter\n  - System.Windows.Data.Binding.UpdateSourceTrigger\n  - System.Windows.Data.Binding.ValidatesOnDataErrors\n  - System.Windows.Data.Binding.ValidatesOnExceptions\n  - System.Windows.Data.Binding.ValidatesOnNotifyDataErrors\n  - System.Windows.Data.Binding.ValidationRules\n  - System.Windows.Data.Binding.XmlNamespaceManagerProperty\n  - System.Windows.Data.Binding.XPath\n  langs:\n  - csharp\n  name: Binding\n  nameWithType: Binding\n  fullName: System.Windows.Data.Binding\n  type: Class\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Data\n  summary: Provides high-level access to the definition of a binding, which connects the properties of binding target objects (typically, WPF elements), and any data source (for example, a database, an XML file, or any object that contains data).\n  remarks: \"[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] data binding provides a simple and consistent way for applications to present and interact with data. Data binding enables you to synchronize the values of the properties of two different objects.  \\n  \\n To establish a binding, use the <xref:System.Windows.Data.Binding> class or one of the other classes that inherit <xref:System.Windows.Data.BindingBase>. Regardless of what object you are binding and the nature of your data source, each binding follows the model illustrated by the following figure.  \\n  \\n ![Basic data binding diagram](~/add/media/databindingmostbasic.png \\\"Basic data binding diagram\\\")  \\n  \\n The figure demonstrates the following fundamental [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] data binding concepts.  \\n  \\n-   Each binding typically has these four components: a binding target object, a target property, a binding source, and a <xref:System.Windows.Data.Binding.Path%2A> to the value in the binding source to use. For example, if you want to bind the content of a <xref:System.Windows.Controls.TextBox> to the Name property of an Employee object, your target object is the <xref:System.Windows.Controls.TextBox>, the target property is the <xref:System.Windows.Controls.TextBox.Text%2A> property, the value to use is Name, and the source object is the Employee object.  \\n  \\n-   The target property must be a dependency property. This also means that you cannot bind a field. Most properties of <xref:System.Windows.UIElement> objects are dependency properties and most dependency properties, except read-only ones, support data binding by default. (Only <xref:System.Windows.DependencyObject> types can define dependency properties and all <xref:System.Windows.UIElement> objects derive from <xref:System.Windows.DependencyObject>.)  \\n  \\n-   Although not specified in the figure, it should be noted that the binding source object is not restricted to being a custom [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] object. [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] data binding supports data in the form of [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] objects and [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]. To provide some examples, your binding source may be a <xref:System.Windows.UIElement>, any list object, a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] object that is associated with [!INCLUDE[TLA#tla_adonet](~/includes/tlasharptla-adonet-md.md)] data or Web Services, or an XmlNode that contains your [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] data.  \\n  \\n Use the <xref:System.Windows.Data.Binding.Mode%2A> property to specify the direction of the data flow. To detect source changes in one-way or two-way bindings, the source must implement a suitable property change notification mechanism such as <xref:System.ComponentModel.INotifyPropertyChanged>. For an example, see [How to: Implement Property Change Notification](~/docs/framework/wpf/data/how-to-implement-property-change-notification.md). The <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> property specifies the timing of source updates. For more information, see \\\"Basic Data Binding Concepts\\\" in [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).  \\n  \\n<a name=\\\"xamlAttributeUsage_PriorityBinding\\\"></a>   \\n## XAML Attribute Usage  \\n  \\n```  \\n<object property=\\\"{Binding  declaration}\\\"/>  \\n```  \\n  \\n<a name=\\\"xamlValues_PriorityBinding\\\"></a>   \\n## XAML Values  \\n *declaration*  \\n Zero or more attribute-assignment clauses separated by commas (,). For more information, see [Binding Markup Extension](~/docs/framework/wpf/advanced/binding-markup-extension.md) or [Binding Declarations Overview](~/docs/framework/wpf/data/binding-declarations-overview.md).\"\n  syntax:\n    content: 'public class Binding : System.Windows.Data.BindingBase'\n  inheritance:\n  - System.Object\n  - System.Windows.Markup.MarkupExtension\n  - System.Windows.Data.BindingBase\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Windows.Data.BindingBase.BindingGroupName\n  - System.Windows.Data.BindingBase.Delay\n  - System.Windows.Data.BindingBase.FallbackValue\n  - System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)\n  - System.Windows.Data.BindingBase.ShouldSerializeFallbackValue\n  - System.Windows.Data.BindingBase.ShouldSerializeTargetNullValue\n  - System.Windows.Data.BindingBase.StringFormat\n  - System.Windows.Data.BindingBase.TargetNullValue\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/Binding.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Data.Binding.#ctor\n  commentId: M:System.Windows.Data.Binding.#ctor\n  id: '#ctor'\n  parent: System.Windows.Data.Binding\n  langs:\n  - csharp\n  name: Binding()\n  nameWithType: Binding.Binding()\n  fullName: Binding.Binding()\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Data\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Data.Binding\"></xref> class.\n  syntax:\n    content: public Binding ();\n    parameters: []\n  overload: System.Windows.Data.Binding.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/Binding.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Data.Binding.#ctor(System.String)\n  commentId: M:System.Windows.Data.Binding.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Windows.Data.Binding\n  langs:\n  - csharp\n  name: Binding(String)\n  nameWithType: Binding.Binding(String)\n  fullName: Binding.Binding(String)\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Data\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Data.Binding\"></xref> class with an initial path.\n  syntax:\n    content: public Binding (string path);\n    parameters:\n    - id: path\n      type: System.String\n      description: The initial <xref href=\"System.Windows.Data.Binding.Path\"></xref> for the binding.\n  overload: System.Windows.Data.Binding.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/Binding.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Data.Binding.AddSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})\n  commentId: M:System.Windows.Data.Binding.AddSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})\n  id: AddSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})\n  parent: System.Windows.Data.Binding\n  langs:\n  - csharp\n  name: AddSourceUpdatedHandler(DependencyObject, EventHandler<DataTransferEventArgs>)\n  nameWithType: Binding.AddSourceUpdatedHandler(DependencyObject, EventHandler<DataTransferEventArgs>)\n  fullName: Binding.AddSourceUpdatedHandler(DependencyObject, EventHandler<DataTransferEventArgs>)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Data\n  summary: Adds a handler for the <xref href=\"System.Windows.Data.Binding.SourceUpdated\"></xref> attached event.\n  remarks: This method supports attached event usage in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].\n  syntax:\n    content: public static void AddSourceUpdatedHandler (System.Windows.DependencyObject element, EventHandler<System.Windows.Data.DataTransferEventArgs> handler);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to the event.\n    - id: handler\n      type: System.EventHandler{System.Windows.Data.DataTransferEventArgs}\n      description: The handler to add.\n  overload: System.Windows.Data.Binding.AddSourceUpdatedHandler*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/Binding.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Data.Binding.AddTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})\n  commentId: M:System.Windows.Data.Binding.AddTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})\n  id: AddTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})\n  parent: System.Windows.Data.Binding\n  langs:\n  - csharp\n  name: AddTargetUpdatedHandler(DependencyObject, EventHandler<DataTransferEventArgs>)\n  nameWithType: Binding.AddTargetUpdatedHandler(DependencyObject, EventHandler<DataTransferEventArgs>)\n  fullName: Binding.AddTargetUpdatedHandler(DependencyObject, EventHandler<DataTransferEventArgs>)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Data\n  summary: Adds a handler for the <xref href=\"System.Windows.Data.Binding.TargetUpdated\"></xref> attached event.\n  remarks: This method supports attached event usage in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].\n  syntax:\n    content: public static void AddTargetUpdatedHandler (System.Windows.DependencyObject element, EventHandler<System.Windows.Data.DataTransferEventArgs> handler);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to the event.\n    - id: handler\n      type: System.EventHandler{System.Windows.Data.DataTransferEventArgs}\n      description: The handler to add.\n  overload: System.Windows.Data.Binding.AddTargetUpdatedHandler*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/Binding.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Data.Binding.AsyncState\n  commentId: P:System.Windows.Data.Binding.AsyncState\n  id: AsyncState\n  parent: System.Windows.Data.Binding\n  langs:\n  - csharp\n  name: AsyncState\n  nameWithType: Binding.AsyncState\n  fullName: Binding.AsyncState\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Data\n  summary: Gets or sets opaque data passed to the asynchronous data dispatcher.\n  syntax:\n    content: public object AsyncState { get; set; }\n    return:\n      type: System.Object\n      description: Data passed to the asynchronous data dispatcher.\n  overload: System.Windows.Data.Binding.AsyncState*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/Binding.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Data.Binding.BindsDirectlyToSource\n  commentId: P:System.Windows.Data.Binding.BindsDirectlyToSource\n  id: BindsDirectlyToSource\n  parent: System.Windows.Data.Binding\n  langs:\n  - csharp\n  name: BindsDirectlyToSource\n  nameWithType: Binding.BindsDirectlyToSource\n  fullName: Binding.BindsDirectlyToSource\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Data\n  summary: Gets or sets a value that indicates whether to evaluate the <xref href=\"System.Windows.Data.Binding.Path\"></xref> relative to the data item or the <xref href=\"System.Windows.Data.DataSourceProvider\"></xref> object.\n  remarks: The normal behavior (when this property is `false`) includes special treatment for <xref:System.Windows.Data.DataSourceProvider> objects. In this case, the binding engine evaluates the <xref:System.Windows.Data.Binding.Path%2A> relative to the object obtained from the <xref:System.Windows.Data.DataSourceProvider.Data%2A> property. In addition, the binding listens for the <xref:System.Windows.Data.DataSourceProvider.DataChanged> event and reacts accordingly. Setting this property to `true` overrides this behavior and gives the binding access to properties of the <xref:System.Windows.Data.DataSourceProvider> object itself.\n  syntax:\n    content: public bool BindsDirectlyToSource { get; set; }\n    return:\n      type: System.Boolean\n      description: '`false` to evaluate the path relative to the data item itself; otherwise, `true`. The default is `false`.'\n  overload: System.Windows.Data.Binding.BindsDirectlyToSource*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/Binding.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Data.Binding.Converter\n  commentId: P:System.Windows.Data.Binding.Converter\n  id: Converter\n  parent: System.Windows.Data.Binding\n  langs:\n  - csharp\n  name: Converter\n  nameWithType: Binding.Converter\n  fullName: Binding.Converter\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Data\n  summary: Gets or sets the converter to use.\n  remarks: \"A binding implicitly uses a default converter that tries to do a type conversion between the source value and the target value. If a conversion cannot be made, the default converter returns `null`.  \\n  \\n If you want to associate a custom value converter with a binding, you should create a class that implements the <xref:System.Windows.Data.IValueConverter> interface and supply implementations for the <xref:System.Windows.Data.IValueConverter.Convert%2A> and <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> methods. Value converters can change data from one type to another, translate between cultural details such as character sets, or modify other aspects of their presentation. For examples of typical conversion scenarios, see \\\"Data Conversion\\\" in the [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).  \\n  \\n<a name=\\\"xamlAttributeUsage_Converter\\\"></a>   \\n## XAML Attribute Usage  \\n  \\n```  \\n<object Converter=\\\"myConverter\\\"/>  \\n```  \\n  \\n<a name=\\\"xamlValues_Converter\\\"></a>   \\n## XAML Values  \\n *myConverter*  \\n A resource reference to a class that implements the <xref:System.Windows.Data.IValueConverter> interface, which includes implementations of the <xref:System.Windows.Data.IValueConverter.Convert%2A> and <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> methods. To refer to a value converter, use the [StaticResource Markup Extension](~/docs/framework/wpf/advanced/staticresource-markup-extension.md).\"\n  syntax:\n    content: public System.Windows.Data.IValueConverter Converter { get; set; }\n    return:\n      type: System.Windows.Data.IValueConverter\n      description: A value of type <xref href=\"System.Windows.Data.IValueConverter\"></xref>. The default is `null`.\n  overload: System.Windows.Data.Binding.Converter*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/Binding.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Data.Binding.ConverterCulture\n  commentId: P:System.Windows.Data.Binding.ConverterCulture\n  id: ConverterCulture\n  parent: System.Windows.Data.Binding\n  langs:\n  - csharp\n  name: ConverterCulture\n  nameWithType: Binding.ConverterCulture\n  fullName: Binding.ConverterCulture\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Data\n  summary: Gets or sets the culture in which to evaluate the converter.\n  remarks: \"If you do not set this property, the binding engine uses the `Language` property of the binding target object. In [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] this defaults to \\\"en-US\\\" or inherits the value from the root element (or any element) of the page, if one has been explicitly set.  \\n  \\n For information about data conversion, see the Data Conversion section in the [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).\"\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.Windows.CultureInfoIetfLanguageTagConverter))]\n\n      public System.Globalization.CultureInfo ConverterCulture { get; set; }\n    return:\n      type: System.Globalization.CultureInfo\n      description: The default is `null`.\n  overload: System.Windows.Data.Binding.ConverterCulture*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.TypeConverterAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/Binding.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Data.Binding.ConverterParameter\n  commentId: P:System.Windows.Data.Binding.ConverterParameter\n  id: ConverterParameter\n  parent: System.Windows.Data.Binding\n  langs:\n  - csharp\n  name: ConverterParameter\n  nameWithType: Binding.ConverterParameter\n  fullName: Binding.ConverterParameter\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Data\n  summary: Gets or sets the parameter to pass to the <xref href=\"System.Windows.Data.Binding.Converter\"></xref>.\n  remarks: \"You can use the <xref:System.Windows.Data.Binding.ConverterParameter%2A> property to specify how an object is converted.  This property passes additional information to a converter that you use on a binding.  When you specify a <xref:System.Windows.Data.Binding.ConverterParameter%2A>, the value is passed to the <xref:System.Windows.Data.IValueConverter.Convert%2A> and <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> methods as the `parameter` parameter.  \\n  \\n For an example, see [How to: Produce a Value Based on a List of Bound Items](~/docs/framework/wpf/data/how-to-produce-a-value-based-on-a-list-of-bound-items.md). That example shows an implementation of an <xref:System.Windows.Data.IMultiValueConverter> but the usage still applies.\"\n  syntax:\n    content: public object ConverterParameter { get; set; }\n    return:\n      type: System.Object\n      description: The parameter to pass to the <xref href=\"System.Windows.Data.Binding.Converter\"></xref>. The default is `null`.\n  overload: System.Windows.Data.Binding.ConverterParameter*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/Binding.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Data.Binding.DoNothing\n  commentId: F:System.Windows.Data.Binding.DoNothing\n  id: DoNothing\n  parent: System.Windows.Data.Binding\n  langs:\n  - csharp\n  name: DoNothing\n  nameWithType: Binding.DoNothing\n  fullName: Binding.DoNothing\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Data\n  summary: Used as a returned value to instruct the binding engine not to perform any action.\n  remarks: A binding source property or a converter can return <xref:System.Windows.Data.Binding.DoNothing?displayProperty=fullName> to instruct the binding engine not to perform any action. For example, to instruct the binding engine not to transfer a value to the binding target, not to move to the next <xref:System.Windows.Data.Binding> in a <xref:System.Windows.Data.PriorityBinding>, or not to use the `FallBackValue` or default value.\n  syntax:\n    content: public static readonly object DoNothing;\n    return:\n      type: System.Object\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/Binding.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Data.Binding.ElementName\n  commentId: P:System.Windows.Data.Binding.ElementName\n  id: ElementName\n  parent: System.Windows.Data.Binding\n  langs:\n  - csharp\n  name: ElementName\n  nameWithType: Binding.ElementName\n  fullName: Binding.ElementName\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Data\n  summary: Gets or sets the name of the element to use as the binding source object.\n  remarks: \"This property is useful when you want to bind to the property of another element in your application. For example, if you want to use a <xref:System.Windows.Controls.Slider> to control the height of another control in your application, or if you want to bind the <xref:System.Windows.Controls.ContentControl.Content%2A> of your control to the <xref:System.Windows.Controls.Primitives.Selector.SelectedValue%2A> property of your <xref:System.Windows.Controls.ListBox> control.  \\n  \\n By default, bindings inherit the data context specified by the `DataContext` property, if one has been set. However, the <xref:System.Windows.Data.Binding.ElementName%2A> property is one of the ways you can explicitly set the source of a <xref:System.Windows.Data.Binding> and override the inherited data context. For more information, see [How to: Specify the Binding Source](~/docs/framework/wpf/data/how-to-specify-the-binding-source.md).  \\n  \\n The <xref:System.Windows.Data.Binding.Source%2A> and <xref:System.Windows.Data.Binding.RelativeSource%2A> properties of the <xref:System.Windows.Data.Binding> class also enable you to set the source of the binding explicitly. However, only one of the three properties, <xref:System.Windows.Data.Binding.ElementName%2A>, <xref:System.Windows.Data.Binding.Source%2A>, and <xref:System.Windows.Data.Binding.RelativeSource%2A>, should be set for each binding, or a conflict might occur. This property throws an exception if there is a binding source conflict.\"\n  syntax:\n    content: public string ElementName { get; set; }\n    return:\n      type: System.String\n      description: \"The value of the `Name` property or [x:Name Directive](~/docs/framework/xaml-services/x-name-directive.md) of the element of interest. You can refer to elements in code only if they are registered to the appropriate <xref href=\\\"System.Windows.NameScope\\\"></xref> through `RegisterName`. For more information, see [WPF XAML Namescopes](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md).  \\n  \\n The default is `null`.\"\n  overload: System.Windows.Data.Binding.ElementName*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/Binding.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Data.Binding.GetXmlNamespaceManager(System.Windows.DependencyObject)\n  commentId: M:System.Windows.Data.Binding.GetXmlNamespaceManager(System.Windows.DependencyObject)\n  id: GetXmlNamespaceManager(System.Windows.DependencyObject)\n  parent: System.Windows.Data.Binding\n  langs:\n  - csharp\n  name: GetXmlNamespaceManager(DependencyObject)\n  nameWithType: Binding.GetXmlNamespaceManager(DependencyObject)\n  fullName: Binding.GetXmlNamespaceManager(DependencyObject)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Data\n  summary: Returns an [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] namespace manager object used by the binding attached to the specified object.\n  remarks: \"This method supports attached property usage for the <xref:System.Windows.Data.Binding.XmlNamespaceManager%2A> attached property.  \\n  \\n [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] namespace managers are relevant only if the data in the binding came from an [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] binding source (<xref:System.Windows.Data.XmlDataProvider> object).  \\n  \\n If a namespace manager was not specifically applied either in the original data source creation or by subsequently calling <xref:System.Windows.Data.Binding.SetXmlNamespaceManager%2A> on the binding, then this method will return `null`.  \\n  \\n This method will always return `null` if the data behind the binding is not [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)].\"\n  syntax:\n    content: public static System.Xml.XmlNamespaceManager GetXmlNamespaceManager (System.Windows.DependencyObject target);\n    parameters:\n    - id: target\n      type: System.Windows.DependencyObject\n      description: The object from which to get namespace information.\n    return:\n      type: System.Xml.XmlNamespaceManager\n      description: A returned object used for viewing [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] namespaces that relate to the binding on the passed object element. This object should be cast as <xref href=\"System.Xml.XmlNamespaceManager\"></xref>.\n  overload: System.Windows.Data.Binding.GetXmlNamespaceManager*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>target</code> parameter cannot be `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/Binding.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Data.Binding.IndexerName\n  commentId: F:System.Windows.Data.Binding.IndexerName\n  id: IndexerName\n  parent: System.Windows.Data.Binding\n  langs:\n  - csharp\n  name: IndexerName\n  nameWithType: Binding.IndexerName\n  fullName: Binding.IndexerName\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Data\n  summary: Used as the <xref href=\"System.ComponentModel.PropertyChangedEventArgs.PropertyName\"></xref> of <xref href=\"System.ComponentModel.PropertyChangedEventArgs\"></xref> to indicate that an indexer property has changed.\n  syntax:\n    content: public const string IndexerName;\n    return:\n      type: System.String\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/Binding.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Data.Binding.IsAsync\n  commentId: P:System.Windows.Data.Binding.IsAsync\n  id: IsAsync\n  parent: System.Windows.Data.Binding\n  langs:\n  - csharp\n  name: IsAsync\n  nameWithType: Binding.IsAsync\n  fullName: Binding.IsAsync\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Data\n  summary: Gets or sets a value that indicates whether the <xref href=\"System.Windows.Data.Binding\"></xref> should get and set values asynchronously.\n  remarks: \"Use the <xref:System.Windows.Data.Binding.IsAsync%2A> property when the `get` accessor of your binding source property might take a long time. One example is an image property with a `get` accessor that downloads from the Web. Setting <xref:System.Windows.Data.Binding.IsAsync%2A> to `true` avoids blocking the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] while the download occurs.  \\n  \\n While waiting for the value to arrive, the binding reports the <xref:System.Windows.Data.BindingBase.FallbackValue%2A>, if one is available, or the default value of the binding target property.  \\n  \\n However, there should not be many scenarios where you need to use the <xref:System.Windows.Data.Binding.IsAsync%2A> property. The [!INCLUDE[TLA2#tla_net](~/includes/tla2sharptla-net-md.md)] guidelines recommend against defining properties that are orders of magnitude slower than a field set would be. When you are creating your class, consider handling extremely slow operations outside of the `get` accessor and caching the result. For more information, see [NIB: Choosing Between Properties and Methods](http://msdn.microsoft.com/en-us/55825e8f-7e2e-448a-9505-7217cc91b1af).\"\n  syntax:\n    content: public bool IsAsync { get; set; }\n    return:\n      type: System.Boolean\n      description: The default is `null`.\n  overload: System.Windows.Data.Binding.IsAsync*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/Binding.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Data.Binding.Mode\n  commentId: P:System.Windows.Data.Binding.Mode\n  id: Mode\n  parent: System.Windows.Data.Binding\n  langs:\n  - csharp\n  name: Mode\n  nameWithType: Binding.Mode\n  fullName: Binding.Mode\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Data\n  summary: Gets or sets a value that indicates the direction of the data flow in the binding.\n  remarks: \"To support <xref:System.Windows.Data.BindingMode.OneWay> and <xref:System.Windows.Data.BindingMode.TwoWay> bindings, the underlying data must implement <xref:System.ComponentModel.INotifyPropertyChanged>. For details, see [How to: Implement Property Change Notification](~/docs/framework/wpf/data/how-to-implement-property-change-notification.md).  \\n  \\n For <xref:System.Windows.Data.BindingMode.TwoWay> or <xref:System.Windows.Data.BindingMode.OneWayToSource> bindings, you can control the target-to-source updates by setting the <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> property. For more information, see <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>.  \\n  \\n For more information on the different binding modes, see [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).\"\n  syntax:\n    content: public System.Windows.Data.BindingMode Mode { get; set; }\n    return:\n      type: System.Windows.Data.BindingMode\n      description: \"One of the <xref href=\\\"System.Windows.Data.BindingMode\\\"></xref> values. The default is <xref href=\\\"System.Windows.Data.BindingMode.Default\\\"></xref>, which returns the default binding mode value of the target dependency property. However, the default value varies for each dependency property. In general, user-editable control properties, such as those of text boxes and check boxes, default to two-way bindings, whereas most other properties default to one-way bindings.  \\n  \\n A programmatic way to determine whether a dependency property binds one-way or two-way by default is to get the property metadata of the property using <xref href=\\\"System.Windows.DependencyProperty.GetMetadata(System.Type)\\\"></xref> and then check the Boolean value of the <xref href=\\\"System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault\\\"></xref> property.\"\n  overload: System.Windows.Data.Binding.Mode*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/Binding.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Data.Binding.NotifyOnSourceUpdated\n  commentId: P:System.Windows.Data.Binding.NotifyOnSourceUpdated\n  id: NotifyOnSourceUpdated\n  parent: System.Windows.Data.Binding\n  langs:\n  - csharp\n  name: NotifyOnSourceUpdated\n  nameWithType: Binding.NotifyOnSourceUpdated\n  fullName: Binding.NotifyOnSourceUpdated\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Data\n  summary: Gets or sets a value that indicates whether to raise the <xref href=\"System.Windows.Data.Binding.SourceUpdated\"></xref> event when a value is transferred from the binding target to the binding source.\n  syntax:\n    content: public bool NotifyOnSourceUpdated { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Windows.Data.Binding.SourceUpdated\"></xref> event should be raised when the binding source value is updated; otherwise, `false`. The default is `false`.'\n  overload: System.Windows.Data.Binding.NotifyOnSourceUpdated*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/Binding.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Data.Binding.NotifyOnTargetUpdated\n  commentId: P:System.Windows.Data.Binding.NotifyOnTargetUpdated\n  id: NotifyOnTargetUpdated\n  parent: System.Windows.Data.Binding\n  langs:\n  - csharp\n  name: NotifyOnTargetUpdated\n  nameWithType: Binding.NotifyOnTargetUpdated\n  fullName: Binding.NotifyOnTargetUpdated\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Data\n  summary: Gets or sets a value that indicates whether to raise the <xref href=\"System.Windows.Data.Binding.TargetUpdated\"></xref> event when a value is transferred from the binding source to the binding target.\n  syntax:\n    content: public bool NotifyOnTargetUpdated { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Windows.Data.Binding.TargetUpdated\"></xref> event should be raised when the binding target value is updated; otherwise, `false`. The default is `false`.'\n  overload: System.Windows.Data.Binding.NotifyOnTargetUpdated*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/Binding.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Data.Binding.NotifyOnValidationError\n  commentId: P:System.Windows.Data.Binding.NotifyOnValidationError\n  id: NotifyOnValidationError\n  parent: System.Windows.Data.Binding\n  langs:\n  - csharp\n  name: NotifyOnValidationError\n  nameWithType: Binding.NotifyOnValidationError\n  fullName: Binding.NotifyOnValidationError\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Data\n  summary: Gets or sets a value that indicates whether to raise the <xref href=\"System.Windows.Controls.Validation.Error\"></xref> attached event on the bound object.\n  remarks: \"If the binding has <xref:System.Windows.Data.Binding.ValidationRules%2A> associated with it, the binding engine checks each rule each time it transfers the target property value to the source property. If a rule invalidates a value, the binding engine creates a <xref:System.Windows.Controls.ValidationError> object and adds it to the <xref:System.Windows.Controls.Validation>.<xref:System.Windows.Controls.Validation.Errors%2A> collection of the bound object. When the <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> property is not empty, the <xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=fullName> attached property of the object is set to `true`. If the <xref:System.Windows.Data.Binding.NotifyOnValidationError%2A> property of the <xref:System.Windows.Data.Binding> is set to `true`, then the binding engine raises the <xref:System.Windows.Controls.Validation.Error?displayProperty=fullName> attached event on the object.  \\n  \\n For a detailed discussion of the validation process, see the Data Validation section in the [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).\"\n  syntax:\n    content: public bool NotifyOnValidationError { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Windows.Controls.Validation.Error\"></xref> attached event should be raised on the bound object when there is a validation error during source updates; otherwise, `false`. The default is `false`.'\n  overload: System.Windows.Data.Binding.NotifyOnValidationError*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/Binding.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Data.Binding.Path\n  commentId: P:System.Windows.Data.Binding.Path\n  id: Path\n  parent: System.Windows.Data.Binding\n  langs:\n  - csharp\n  name: Path\n  nameWithType: Binding.Path\n  fullName: Binding.Path\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Data\n  summary: Gets or sets the path to the binding source property.\n  remarks: \"Each binding typically has these four components: a binding target object, a target property, a binding source, and a path to the value in the binding source to use. For more information about these data binding concepts, see [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).  \\n  \\n Use the <xref:System.Windows.Data.Binding.Path%2A> property to specify the source value you want to bind to:  \\n  \\n-   In the simplest case, the <xref:System.Windows.Data.Binding.Path%2A> property value is the name of the property of the source object to use for the binding, such as `Path=PropertyName`.  \\n  \\n-   Subproperties of a property can be specified by a syntax similar to that used in [!INCLUDE[TLA#tla_cshrp](~/includes/tlasharptla-cshrp-md.md)]. For instance, the clause `Path=ShoppingCart.Order` sets the binding to the subproperty `Order` of the object or property `ShoppingCart`.  \\n  \\n-   To bind to an attached property, place parentheses around the attached property. For example, to bind to the attached property <xref:System.Windows.Controls.DockPanel.Dock%2A?displayProperty=fullName>, the syntax is `Path=(DockPanel.Dock)`.  \\n  \\n-   Indexers of a property can be specified within square brackets following the property name where the indexer is applied. For instance, the clause `Path=ShoppingCart[0]` sets the binding to the index that corresponds to how your property's internal indexing handles the literal string \\\"0\\\". Multiple indexers are also supported.  \\n  \\n-   Indexers and subproperties can be mixed in a `Path` clause; for example, `Path=ShoppingCart.ShippingInfo[MailingAddress,Street].`  \\n  \\n-   Inside indexers you can have multiple indexer parameters separated by commas (,). The type of each parameter can be specified with parentheses. For example, you can have `Path=\\\"[(sys:Int32)42,(sys:Int32)24]\\\"`, where `sys` is mapped to the `System` namespace.  \\n  \\n-   When the source is a collection view, the current item can be specified with a slash (/). For example, the clause `Path=/` sets the binding to the current item in the view. When the source is a collection, this syntax specifies the current item of the default collection view.  \\n  \\n-   Property names and slashes can be combined to traverse properties that are collections. For example, `Path=/Offices/ManagerName` specifies the current item of the source collection, which contains an `Offices` property that is also a collection. Its current item is an object that contains a `ManagerName` property.  \\n  \\n-   Optionally, a period (.) path can be used to bind to the current source. For example, `Text=\\\"{Binding}\\\"` is equivalent to `Text=\\\"{Binding Path=.}\\\"`.  \\n  \\n For information about path syntax, see [Binding Declarations Overview](~/docs/framework/wpf/data/binding-declarations-overview.md) or [PropertyPath XAML Syntax](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md).  \\n  \\n For [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] bindings, see the <xref:System.Windows.Data.Binding.XPath%2A> property.  \\n  \\n To bind to an entire object, you do not need to specify the <xref:System.Windows.Data.Binding.Path%2A> property. For more information, see \\\"Specifying the Path to the Value\\\" in [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).\"\n  example:\n  - \"The following example shows a style trigger that creates a <xref:System.Windows.Controls.ToolTip> that reports a validation error message. The value of the setter binds to the error content of the current <xref:System.Windows.Controls.TextBox> (the <xref:System.Windows.Controls.TextBox> using the style) using the <xref:System.Windows.Data.Binding.RelativeSource%2A> property. For more information on this example, see [How to: Implement Binding Validation](~/docs/framework/wpf/data/how-to-implement-binding-validation.md).  \\n  \\n [!code-xml[BindValidation#5](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml#5)]\"\n  syntax:\n    content: public System.Windows.PropertyPath Path { get; set; }\n    return:\n      type: System.Windows.PropertyPath\n      description: The path to the binding source. The default is `null`.\n  overload: System.Windows.Data.Binding.Path*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/Binding.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Data.Binding.RelativeSource\n  commentId: P:System.Windows.Data.Binding.RelativeSource\n  id: RelativeSource\n  parent: System.Windows.Data.Binding\n  langs:\n  - csharp\n  name: RelativeSource\n  nameWithType: Binding.RelativeSource\n  fullName: Binding.RelativeSource\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Data\n  summary: Gets or sets the binding source by specifying its location relative to the position of the binding target.\n  remarks: \"This property is commonly used to bind one property of an object to another property of the same object, or to define a binding in a style or template.  \\n  \\n By default, bindings inherit the data context specified by the `DataContext` property, if one has been set. However, the <xref:System.Windows.Data.Binding.RelativeSource%2A> property is one of the ways you can explicitly set the source of a <xref:System.Windows.Data.Binding> and override the inherited data context. For more information, see [How to: Specify the Binding Source](~/docs/framework/wpf/data/how-to-specify-the-binding-source.md).  \\n  \\n The <xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=fullName> and <xref:System.Windows.Data.Binding.Source%2A?displayProperty=fullName> properties also enable you to set the source of the binding explicitly. However, only one of the three properties, <xref:System.Windows.Data.Binding.ElementName%2A>, <xref:System.Windows.Data.Binding.Source%2A>, and <xref:System.Windows.Data.Binding.RelativeSource%2A>, should be set for each binding, or a conflict can occur. This property throws an exception if there is a binding source conflict.  \\n  \\n For [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] information, see [RelativeSource MarkupExtension](~/docs/framework/wpf/advanced/relativesource-markupextension.md).  \\n  \\n<a name=\\\"xamlTextUsage_RelativeSource\\\"></a>   \\n## XAML Text Usage\"\n  example:\n  - \"The following example shows a style trigger that creates a <xref:System.Windows.Controls.ToolTip> that reports a validation error message. The value of the setter binds to the error content of the current <xref:System.Windows.Controls.TextBox> (the <xref:System.Windows.Controls.TextBox> using the style) using the <xref:System.Windows.Data.Binding.RelativeSource%2A> property. For more information on this example, see [How to: Implement Binding Validation](~/docs/framework/wpf/data/how-to-implement-binding-validation.md).  \\n  \\n [!code-xml[BindValidation#5](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml#5)]  \\n  \\n To see the full example, see [Binding Validation Sample](http://go.microsoft.com/fwlink/?LinkID=159972).\"\n  syntax:\n    content: public System.Windows.Data.RelativeSource RelativeSource { get; set; }\n    return:\n      type: System.Windows.Data.RelativeSource\n      description: A <xref href=\"System.Windows.Data.RelativeSource\"></xref> object specifying the relative location of the binding source to use. The default is `null`.\n  overload: System.Windows.Data.Binding.RelativeSource*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/Binding.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Data.Binding.RemoveSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})\n  commentId: M:System.Windows.Data.Binding.RemoveSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})\n  id: RemoveSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})\n  parent: System.Windows.Data.Binding\n  langs:\n  - csharp\n  name: RemoveSourceUpdatedHandler(DependencyObject, EventHandler<DataTransferEventArgs>)\n  nameWithType: Binding.RemoveSourceUpdatedHandler(DependencyObject, EventHandler<DataTransferEventArgs>)\n  fullName: Binding.RemoveSourceUpdatedHandler(DependencyObject, EventHandler<DataTransferEventArgs>)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Data\n  summary: Removes a handler for the <xref href=\"System.Windows.Data.Binding.SourceUpdated\"></xref> attached event.\n  remarks: This method supports attached event usage in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].\n  syntax:\n    content: public static void RemoveSourceUpdatedHandler (System.Windows.DependencyObject element, EventHandler<System.Windows.Data.DataTransferEventArgs> handler);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to the event.\n    - id: handler\n      type: System.EventHandler{System.Windows.Data.DataTransferEventArgs}\n      description: The handler to remove.\n  overload: System.Windows.Data.Binding.RemoveSourceUpdatedHandler*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/Binding.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Data.Binding.RemoveTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})\n  commentId: M:System.Windows.Data.Binding.RemoveTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})\n  id: RemoveTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})\n  parent: System.Windows.Data.Binding\n  langs:\n  - csharp\n  name: RemoveTargetUpdatedHandler(DependencyObject, EventHandler<DataTransferEventArgs>)\n  nameWithType: Binding.RemoveTargetUpdatedHandler(DependencyObject, EventHandler<DataTransferEventArgs>)\n  fullName: Binding.RemoveTargetUpdatedHandler(DependencyObject, EventHandler<DataTransferEventArgs>)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Data\n  summary: Removes a handler for the <xref href=\"System.Windows.Data.Binding.TargetUpdated\"></xref> attached event.\n  remarks: This method supports attached event usage in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].\n  syntax:\n    content: public static void RemoveTargetUpdatedHandler (System.Windows.DependencyObject element, EventHandler<System.Windows.Data.DataTransferEventArgs> handler);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to the event.\n    - id: handler\n      type: System.EventHandler{System.Windows.Data.DataTransferEventArgs}\n      description: The handler to remove.\n  overload: System.Windows.Data.Binding.RemoveTargetUpdatedHandler*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/Binding.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Data.Binding.SetXmlNamespaceManager(System.Windows.DependencyObject,System.Xml.XmlNamespaceManager)\n  commentId: M:System.Windows.Data.Binding.SetXmlNamespaceManager(System.Windows.DependencyObject,System.Xml.XmlNamespaceManager)\n  id: SetXmlNamespaceManager(System.Windows.DependencyObject,System.Xml.XmlNamespaceManager)\n  parent: System.Windows.Data.Binding\n  langs:\n  - csharp\n  name: SetXmlNamespaceManager(DependencyObject, XmlNamespaceManager)\n  nameWithType: Binding.SetXmlNamespaceManager(DependencyObject, XmlNamespaceManager)\n  fullName: Binding.SetXmlNamespaceManager(DependencyObject, XmlNamespaceManager)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Data\n  summary: Sets a namespace manager object used by the binding attached to the provided element.\n  remarks: This method supports attached property usage for the <xref:System.Windows.Data.Binding.XmlNamespaceManager%2A> attached property.\n  syntax:\n    content: public static void SetXmlNamespaceManager (System.Windows.DependencyObject target, System.Xml.XmlNamespaceManager value);\n    parameters:\n    - id: target\n      type: System.Windows.DependencyObject\n      description: The object from which to get namespace information.\n    - id: value\n      type: System.Xml.XmlNamespaceManager\n      description: The <xref href=\"System.Xml.XmlNamespaceManager\"></xref> to use for namespace evaluation in the passed element.\n  overload: System.Windows.Data.Binding.SetXmlNamespaceManager*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>target</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/Binding.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Data.Binding.ShouldSerializePath\n  commentId: M:System.Windows.Data.Binding.ShouldSerializePath\n  id: ShouldSerializePath\n  parent: System.Windows.Data.Binding\n  langs:\n  - csharp\n  name: ShouldSerializePath()\n  nameWithType: Binding.ShouldSerializePath()\n  fullName: Binding.ShouldSerializePath()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Data\n  summary: Indicates whether the <xref href=\"System.Windows.Data.Binding.Path\"></xref> property should be persisted.\n  remarks: This `ShouldSerialize` method is provided because the <xref:System.Windows.Data.Binding.Path%2A> property does not have a simple default value. This method indicates whether the property has changed from its default value. You typically invoke this method if you are either developing a designer for the <xref:System.Windows.Data.Binding> or developing your own control incorporating the <xref:System.Windows.Data.Binding>.\n  syntax:\n    content: public bool ShouldSerializePath ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the property value has changed from its default; otherwise, `false`.'\n  overload: System.Windows.Data.Binding.ShouldSerializePath*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/Binding.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Data.Binding.ShouldSerializeSource\n  commentId: M:System.Windows.Data.Binding.ShouldSerializeSource\n  id: ShouldSerializeSource\n  parent: System.Windows.Data.Binding\n  langs:\n  - csharp\n  name: ShouldSerializeSource()\n  nameWithType: Binding.ShouldSerializeSource()\n  fullName: Binding.ShouldSerializeSource()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Data\n  summary: Indicates whether the <xref href=\"System.Windows.Data.Binding.Source\"></xref> property should be persisted.\n  remarks: This `ShouldSerialize` method is provided because the <xref:System.Windows.Data.Binding.Source%2A> property does not have a simple default value. This method indicates whether the property has changed from its default value. You typically invoke this method if you are either developing a designer for the <xref:System.Windows.Data.Binding> or developing your own control incorporating the <xref:System.Windows.Data.Binding>.\n  syntax:\n    content: public bool ShouldSerializeSource ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the property value has changed from its default; otherwise, `false`.'\n  overload: System.Windows.Data.Binding.ShouldSerializeSource*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/Binding.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Data.Binding.ShouldSerializeValidationRules\n  commentId: M:System.Windows.Data.Binding.ShouldSerializeValidationRules\n  id: ShouldSerializeValidationRules\n  parent: System.Windows.Data.Binding\n  langs:\n  - csharp\n  name: ShouldSerializeValidationRules()\n  nameWithType: Binding.ShouldSerializeValidationRules()\n  fullName: Binding.ShouldSerializeValidationRules()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Data\n  summary: Indicates whether the <xref href=\"System.Windows.Data.Binding.ValidationRules\"></xref> property should be persisted.\n  remarks: This `ShouldSerialize` method is provided because the <xref:System.Windows.Data.Binding.ValidationRules%2A> property does not have a simple default value. This method indicates whether the property has changed from its default value. You typically invoke this method if you are either developing a designer for the <xref:System.Windows.Data.Binding> or developing your own control incorporating the <xref:System.Windows.Data.Binding>.\n  syntax:\n    content: public bool ShouldSerializeValidationRules ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the property value has changed from its default; otherwise, `false`.'\n  overload: System.Windows.Data.Binding.ShouldSerializeValidationRules*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/Binding.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Data.Binding.Source\n  commentId: P:System.Windows.Data.Binding.Source\n  id: Source\n  parent: System.Windows.Data.Binding\n  langs:\n  - csharp\n  name: Source\n  nameWithType: Binding.Source\n  fullName: Binding.Source\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Data\n  summary: Gets or sets the object to use as the binding source.\n  remarks: \"By default, bindings inherit the data context specified by the `DataContext` property, if one has been set. However, the <xref:System.Windows.Data.Binding.Source%2A> property is one of the ways you can explicitly set the source of a <xref:System.Windows.Data.Binding> and override the inherited data context. If you do not need the functionality of establishing a scope in which several properties inherit the same data context, you can use the <xref:System.Windows.Data.Binding.Source%2A> property instead of the `DataContext` property.  \\n  \\n The <xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=fullName> and <xref:System.Windows.Data.Binding.RelativeSource%2A?displayProperty=fullName> properties also enable you to set the source of the binding explicitly. However, only one of the three properties, <xref:System.Windows.Data.Binding.ElementName%2A>, <xref:System.Windows.Data.Binding.Source%2A>, and <xref:System.Windows.Data.Binding.RelativeSource%2A>, should be set for each binding, or a conflict can occur. This property throws an exception if there is a binding source conflict.  \\n  \\n To clear this property, set it to <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName>.  \\n  \\n<a name=\\\"xamlAttributeUsage_Source\\\"></a>   \\n## XAML Attribute Usage  \\n  \\n```  \\n<object Source=\\\"object\\\"/>  \\n```  \\n  \\n<a name=\\\"xamlValues_Source\\\"></a>   \\n## XAML Values  \\n *object*  \\n An existing object. To refer to an existing object, use the [StaticResource Markup Extension](~/docs/framework/wpf/advanced/staticresource-markup-extension.md)\"\n  example:\n  - \"In this example, you have a `Person` object with a string property named `PersonName`. The `Person` object is defined in the namespace called `SDKSample`.  \\n  \\n The following example instantiates the `Person` object with a `PersonName` property value of `Joe`. This is done in the `Resources` section and assigned an `x:Key`.  \\n  \\n [!code-xml[SimpleBinding#Instantiation](~/samples/snippets/csharp/VS_Snippets_Wpf/SimpleBinding/CSharp/Page1.xaml#instantiation)]  \\n[!code-xml[SimpleBinding#2](~/samples/snippets/csharp/VS_Snippets_Wpf/SimpleBinding/CSharp/Page1.xaml#2)]  \\n[!code-xml[SimpleBinding#EndWindow](~/samples/snippets/csharp/VS_Snippets_Wpf/SimpleBinding/CSharp/Page1.xaml#endwindow)]  \\n  \\n To bind to the `PersonName` property you would do the following:  \\n  \\n [!code-xml[SimpleBinding#BDO1](~/samples/snippets/csharp/VS_Snippets_Wpf/SimpleBinding/CSharp/Page1.xaml#bdo1)]  \\n  \\n As a result, the <xref:System.Windows.Controls.TextBlock> appears with the value \\\"Joe\\\".  \\n  \\n In the following example, the <xref:System.Windows.Data.Binding.Source%2A> values of the <xref:System.Windows.Data.Binding> objects are set to the `static` property <xref:System.Windows.Application.Current%2A?displayProperty=fullName>:  \\n  \\n [!code-xml[DataBindingLab#ComboBoxMultiBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/AddProductWindow.xaml#comboboxmultibinding)]  \\n  \\n For the full example, see [Data Binding Demo](http://go.microsoft.com/fwlink/?LinkID=163703).\"\n  syntax:\n    content: public object Source { get; set; }\n    return:\n      type: System.Object\n      description: The object to use as the binding source.\n  overload: System.Windows.Data.Binding.Source*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/Binding.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Data.Binding.SourceUpdatedEvent\n  commentId: F:System.Windows.Data.Binding.SourceUpdatedEvent\n  id: SourceUpdatedEvent\n  parent: System.Windows.Data.Binding\n  langs:\n  - csharp\n  name: SourceUpdatedEvent\n  nameWithType: Binding.SourceUpdatedEvent\n  fullName: Binding.SourceUpdatedEvent\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Data\n  summary: Identifies the <xref href=\"System.Windows.Data.Binding.SourceUpdated\"></xref> attached event.\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent SourceUpdatedEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/Binding.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Data.Binding.TargetUpdatedEvent\n  commentId: F:System.Windows.Data.Binding.TargetUpdatedEvent\n  id: TargetUpdatedEvent\n  parent: System.Windows.Data.Binding\n  langs:\n  - csharp\n  name: TargetUpdatedEvent\n  nameWithType: Binding.TargetUpdatedEvent\n  fullName: Binding.TargetUpdatedEvent\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Data\n  summary: Identifies the <xref href=\"System.Windows.Data.Binding.TargetUpdated\"></xref> attached event.\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent TargetUpdatedEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/Binding.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Data.Binding.UpdateSourceExceptionFilter\n  commentId: P:System.Windows.Data.Binding.UpdateSourceExceptionFilter\n  id: UpdateSourceExceptionFilter\n  parent: System.Windows.Data.Binding\n  langs:\n  - csharp\n  name: UpdateSourceExceptionFilter\n  nameWithType: Binding.UpdateSourceExceptionFilter\n  fullName: Binding.UpdateSourceExceptionFilter\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Data\n  summary: Gets or sets a handler you can use to provide custom logic for handling exceptions that the binding engine encounters during the update of the binding source value. This is only applicable if you have associated an <xref href=\"System.Windows.Controls.ExceptionValidationRule\"></xref> with your binding.\n  remarks: The <xref:System.Windows.Controls.ExceptionValidationRule> is a built-in validation rule that checks for exceptions thrown during the update of the binding source property. If you have associated the <xref:System.Windows.Controls.ExceptionValidationRule> with your <xref:System.Windows.Data.Binding> object, you can use this property to set a handler to provide custom logic for handling these exceptions. If an <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> is not specified on the <xref:System.Windows.Data.Binding>, the binding engine creates a <xref:System.Windows.Controls.ValidationError> with the exception and adds it to the <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> collection of the bound element.\n  example:\n  - \"The <xref:System.Windows.Controls.TextBox.Text%2A> property of the following <xref:System.Windows.Controls.TextBox> is data-bound to a source property `Age3` that is of type `int`. The <xref:System.Windows.Controls.ExceptionValidationRule> checks for exceptions that are thrown during the update of the source property (such as when the user enters a value that cannot be converted to an integer).  \\n  \\n [!code-xml[BindValidation#tbExceptionFilter](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml#tbexceptionfilter)]  \\n  \\n You can provide custom logic to handle those exceptions. The following example shows how to use the <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> property to set an <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>.  \\n  \\n [!code-csharp[BindValidation#filtercallback](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml.cs#filtercallback)]  \\n  \\n The following is an example implementation of an <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>.  \\n  \\n [!code-csharp[BindValidation#Handler](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml.cs#handler)]  \\n  \\n The <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback> can also return `null`, the exception itself, or a <xref:System.Windows.Controls.ValidationError>. For more information, see <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>.  \\n  \\n For the complete sample, see [Binding Validation Sample](http://go.microsoft.com/fwlink/?LinkID=159972).\"\n  syntax:\n    content: public System.Windows.Data.UpdateSourceExceptionFilterCallback UpdateSourceExceptionFilter { get; set; }\n    return:\n      type: System.Windows.Data.UpdateSourceExceptionFilterCallback\n      description: A method that provides custom logic for handling exceptions that the binding engine encounters during the update of the binding source value.\n  overload: System.Windows.Data.Binding.UpdateSourceExceptionFilter*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/Binding.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Data.Binding.UpdateSourceTrigger\n  commentId: P:System.Windows.Data.Binding.UpdateSourceTrigger\n  id: UpdateSourceTrigger\n  parent: System.Windows.Data.Binding\n  langs:\n  - csharp\n  name: UpdateSourceTrigger\n  nameWithType: Binding.UpdateSourceTrigger\n  fullName: Binding.UpdateSourceTrigger\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Data\n  summary: Gets or sets a value that determines the timing of binding source updates.\n  remarks: \"Bindings that are <xref:System.Windows.Data.BindingMode.TwoWay> or <xref:System.Windows.Data.BindingMode.OneWayToSource> listen for changes in the target property and propagate them back to the source. This is known as updating the source. Usually, these updates happen whenever the target property changes. This is fine for check boxes and other simple controls, but it is usually not appropriate for text fields. Updating after every keystroke can diminish performance and it denies the user the usual opportunity to backspace and fix typing errors before committing to the new value. Therefore, the default <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> value of the <xref:System.Windows.Controls.TextBox.Text%2A> property is <xref:System.Windows.Data.UpdateSourceTrigger.LostFocus> and not <xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged>.  \\n  \\n If you set the <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> value to <xref:System.Windows.Data.UpdateSourceTrigger.Explicit>, you must call the <xref:System.Windows.Data.BindingExpression.UpdateSource%2A> method or the changes will not propagate back to the source.\"\n  syntax:\n    content: public System.Windows.Data.UpdateSourceTrigger UpdateSourceTrigger { get; set; }\n    return:\n      type: System.Windows.Data.UpdateSourceTrigger\n      description: \"One of the <xref href=\\\"System.Windows.Data.UpdateSourceTrigger\\\"></xref> values. The default is <xref href=\\\"System.Windows.Data.UpdateSourceTrigger.Default\\\"></xref>, which returns the default <xref href=\\\"System.Windows.Data.UpdateSourceTrigger\\\"></xref> value of the target dependency property. However, the default value for most dependency properties is <xref href=\\\"System.Windows.Data.UpdateSourceTrigger.PropertyChanged\\\"></xref>, while the <xref href=\\\"System.Windows.Controls.TextBox.Text\\\"></xref> property has a default value of <xref href=\\\"System.Windows.Data.UpdateSourceTrigger.LostFocus\\\"></xref>.  \\n  \\n A programmatic way to determine the default <xref href=\\\"System.Windows.Data.Binding.UpdateSourceTrigger\\\"></xref> value of a dependency property is to get the property metadata of the property using <xref href=\\\"System.Windows.DependencyProperty.GetMetadata(System.Type)\\\"></xref> and then check the value of the <xref href=\\\"System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger\\\"></xref> property.\"\n  overload: System.Windows.Data.Binding.UpdateSourceTrigger*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/Binding.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Data.Binding.ValidatesOnDataErrors\n  commentId: P:System.Windows.Data.Binding.ValidatesOnDataErrors\n  id: ValidatesOnDataErrors\n  parent: System.Windows.Data.Binding\n  langs:\n  - csharp\n  name: ValidatesOnDataErrors\n  nameWithType: Binding.ValidatesOnDataErrors\n  fullName: Binding.ValidatesOnDataErrors\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Data\n  summary: Gets or sets a value that indicates whether to include the <xref href=\"System.Windows.Controls.DataErrorValidationRule\"></xref>.\n  remarks: \"Setting this property provides an alternative to using the <xref:System.Windows.Controls.DataErrorValidationRule> element explicitly. The <xref:System.Windows.Controls.DataErrorValidationRule> is a built-in validation rule that checks for errors that are raised by the <xref:System.ComponentModel.IDataErrorInfo> implementation of the source object. If an error is raised, the binding engine creates a <xref:System.Windows.Controls.ValidationError> with the error and adds it to the <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> collection of the bound element. The lack of an error clears this validation feedback, unless another rule raises a validation issue.  \\n  \\n <xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A> is introduced in the .NET Framework version 3.5.  For more information, see [.NET Framework Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).\"\n  example:\n  - \"The following examples uses <xref:System.ComponentModel.IDataErrorInfo> and <xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A> to validate user input in a <xref:System.Windows.Controls.TextBox>. The first example creates a data type that implements <xref:System.ComponentModel.IDataErrorInfo> to report validation errors.  \\n  \\n [!code-csharp[BindingValidationAttributesSnippets#IDataErrorInfoData](~/samples/snippets/csharp/VS_Snippets_Wpf/bindingvalidationattributessnippets/csharp/data.cs#idataerrorinfodata)]\\n [!code-vb[BindingValidationAttributesSnippets#IDataErrorInfoData](~/samples/snippets/visualbasic/VS_Snippets_Wpf/bindingvalidationattributessnippets/visualbasic/window1.xaml.vb#idataerrorinfodata)]  \\n  \\n The following example binds the `Age` property to the <xref:System.Windows.Controls.TextBox> and sets <xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A> to `true` on the <xref:System.Windows.Data.Binding>.  When the user enters an invalid value, a red border appears in the <xref:System.Windows.Controls.TextBox> and the <xref:System.Windows.Controls.ToolTip> reports the error message.  \\n  \\n [!code-xml[BindingValidationAttributesSnippets#IDataErrorInfoXaml](~/samples/snippets/csharp/VS_Snippets_Wpf/bindingvalidationattributessnippets/csharp/window1.xaml#idataerrorinfoxaml)]\"\n  syntax:\n    content: public bool ValidatesOnDataErrors { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` to include the <xref href=\"System.Windows.Controls.DataErrorValidationRule\"></xref>; otherwise, `false`.'\n  overload: System.Windows.Data.Binding.ValidatesOnDataErrors*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/Binding.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Data.Binding.ValidatesOnExceptions\n  commentId: P:System.Windows.Data.Binding.ValidatesOnExceptions\n  id: ValidatesOnExceptions\n  parent: System.Windows.Data.Binding\n  langs:\n  - csharp\n  name: ValidatesOnExceptions\n  nameWithType: Binding.ValidatesOnExceptions\n  fullName: Binding.ValidatesOnExceptions\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Data\n  summary: Gets or sets a value that indicates whether to include the <xref href=\"System.Windows.Controls.ExceptionValidationRule\"></xref>.\n  remarks: \"Setting this property provides an alternative to using the <xref:System.Windows.Controls.ExceptionValidationRule> element explicitly. The <xref:System.Windows.Controls.ExceptionValidationRule> is a built-in validation rule that checks for exceptions that are thrown during the update of the source property. If an exception is thrown, the binding engine creates a <xref:System.Windows.Controls.ValidationError> with the exception and adds it to the <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> collection of the bound element. The lack of an error clears this validation feedback, unless another rule raises a validation issue.  \\n  \\n <xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A> is introduced in the .NET Framework version 3.5.  For more information, see [.NET Framework Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).\"\n  example:\n  - \"The following examples use <xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A> to validate user input in a <xref:System.Windows.Controls.TextBox>. The first example creates a data type that throws an exception when the `Age` property is set to an invalid property.  \\n  \\n [!code-csharp[BindingValidationAttributesSnippets#ThrowExceptionData](~/samples/snippets/csharp/VS_Snippets_Wpf/bindingvalidationattributessnippets/csharp/data.cs#throwexceptiondata)]\\n [!code-vb[BindingValidationAttributesSnippets#ThrowExceptionData](~/samples/snippets/visualbasic/VS_Snippets_Wpf/bindingvalidationattributessnippets/visualbasic/window1.xaml.vb#throwexceptiondata)]  \\n  \\n The following example binds the `Age` property to the <xref:System.Windows.Controls.TextBox> and sets <xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A> to `true` on the <xref:System.Windows.Data.Binding>. When the user enters an invalid value, a red border appears in the <xref:System.Windows.Controls.TextBox> and the <xref:System.Windows.Controls.ToolTip> reports the error message.  \\n  \\n [!code-xml[BindingValidationAttributesSnippets#ThrowExceptionXaml](~/samples/snippets/csharp/VS_Snippets_Wpf/bindingvalidationattributessnippets/csharp/window1.xaml#throwexceptionxaml)]\"\n  syntax:\n    content: public bool ValidatesOnExceptions { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` to include the <xref href=\"System.Windows.Controls.ExceptionValidationRule\"></xref>; otherwise, `false`.'\n  overload: System.Windows.Data.Binding.ValidatesOnExceptions*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/Binding.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Data.Binding.ValidatesOnNotifyDataErrors\n  commentId: P:System.Windows.Data.Binding.ValidatesOnNotifyDataErrors\n  id: ValidatesOnNotifyDataErrors\n  parent: System.Windows.Data.Binding\n  langs:\n  - csharp\n  name: ValidatesOnNotifyDataErrors\n  nameWithType: Binding.ValidatesOnNotifyDataErrors\n  fullName: Binding.ValidatesOnNotifyDataErrors\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Data\n  summary: Gets or sets a value that indicates whether to include the <xref href=\"System.Windows.Controls.NotifyDataErrorValidationRule\"></xref>.\n  remarks: When <xref:System.Windows.Data.Binding.ValidatesOnNotifyDataErrors%2A> is `true`, the binding checks for and reports errors that are raised by a data source that implements <xref:System.ComponentModel.INotifyDataErrorInfo>.\n  syntax:\n    content: public bool ValidatesOnNotifyDataErrors { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` to include the <xref href=\"System.Windows.Controls.NotifyDataErrorValidationRule\"></xref>; otherwise, `false`. The default is `true`.'\n  overload: System.Windows.Data.Binding.ValidatesOnNotifyDataErrors*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/Binding.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Data.Binding.ValidationRules\n  commentId: P:System.Windows.Data.Binding.ValidationRules\n  id: ValidationRules\n  parent: System.Windows.Data.Binding\n  langs:\n  - csharp\n  name: ValidationRules\n  nameWithType: Binding.ValidationRules\n  fullName: Binding.ValidationRules\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Data\n  summary: Gets a collection of rules that check the validity of the user input.\n  remarks: \"The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] data binding model enables you to associate <xref:System.Windows.Data.Binding.ValidationRules%2A> with your <xref:System.Windows.Data.Binding> or <xref:System.Windows.Data.MultiBinding> object. You can create custom rules by deriving from the <xref:System.Windows.Controls.ValidationRule> class and implementing the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, or you can use the built-in <xref:System.Windows.Controls.ExceptionValidationRule>, which invalidates a value if there are exceptions during source updates.  \\n  \\n The binding engine checks each <xref:System.Windows.Controls.ValidationRule> associated with a binding each time an input value (the binding target property value) is transferred to the binding source property. For a detailed discussion of the validation process, see the Data Validation section in the [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).  \\n  \\n> [!NOTE]\\n>  This property can be set in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] only by using the collection syntax shown, or by accessing the collection object and using its various methods, such as `Add`. The property to access the collection object is read-only, whereas the collection itself is read-write.  \\n  \\n<a name=\\\"xamlPropertyElementUsage_ValidationRules\\\"></a>   \\n## XAML Property Element Usage  \\n  \\n```  \\n<object>  \\n  <object.ValidationRules>  \\n    oneOrMoreValidationRules  \\n  </object.ValidationRules>  \\n</object>  \\n  \\n```  \\n  \\n<a name=\\\"xamlValues_ValidationRules\\\"></a>   \\n## XAML Values  \\n *oneOrMoreValidationRules*  \\n One or more <xref:System.Windows.Controls.ValidationRule> objects. You can use the <xref:System.Windows.Controls.ExceptionValidationRule> class or create custom rules by subclassing the <xref:System.Windows.Controls.ValidationRule> class.\"\n  syntax:\n    content: public System.Collections.ObjectModel.Collection<System.Windows.Controls.ValidationRule> ValidationRules { get; }\n    return:\n      type: System.Collections.ObjectModel.Collection{System.Windows.Controls.ValidationRule}\n      description: A collection of <xref href=\"System.Windows.Controls.ValidationRule\"></xref> objects.\n  overload: System.Windows.Data.Binding.ValidationRules*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/Binding.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Data.Binding.XmlNamespaceManagerProperty\n  commentId: F:System.Windows.Data.Binding.XmlNamespaceManagerProperty\n  id: XmlNamespaceManagerProperty\n  parent: System.Windows.Data.Binding\n  langs:\n  - csharp\n  name: XmlNamespaceManagerProperty\n  nameWithType: Binding.XmlNamespaceManagerProperty\n  fullName: Binding.XmlNamespaceManagerProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Data\n  summary: Identifies the <xref href=\"System.Windows.Data.Binding.XmlNamespaceManager\"></xref> attached property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty XmlNamespaceManagerProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/Binding.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Data.Binding.XPath\n  commentId: P:System.Windows.Data.Binding.XPath\n  id: XPath\n  parent: System.Windows.Data.Binding\n  langs:\n  - csharp\n  name: XPath\n  nameWithType: Binding.XPath\n  fullName: Binding.XPath\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Data\n  summary: Gets or sets an `XPath` query that returns the value on the [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] binding source to use.\n  remarks: \"When the binding source is [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] data instead of a [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] object, the <xref:System.Windows.Data.Binding.XPath%2A> property is used instead of the <xref:System.Windows.Data.Binding.Path%2A> property to indicate the path to the value on the binding source to use.  \\n  \\n By setting the <xref:System.Windows.Data.Binding.XPath%2A> property, you are creating an `XPath` query to select a node or a collection of nodes (<xref:System.Xml.XmlElement?displayProperty=fullName> and <xref:System.Xml.XmlAttribute?displayProperty=fullName> both derive from <xref:System.Xml.XmlNode?displayProperty=fullName>). <xref:System.Xml.XmlNode?displayProperty=fullName> is a [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] object, which means you can bind to its properties using the <xref:System.Windows.Data.Binding.Path%2A> property.  \\n  \\n The <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=fullName> method handles the `XPath` expressions from the <xref:System.Windows.Data.Binding.XPath%2A> property. `XPath` functions are not supported. For `XPath` expression information, see the <xref:System.Xml.XmlNode.SelectNodes%2A> documentation and some examples provided in the Example section.  \\n  \\n LINQ to XML objects <xref:System.Xml.Linq.XDocument> and <xref:System.Xml.Linq.XElement> do not use `XPath`. For details, see [How to: Bind to XDocument, XElement, or LINQ for XML Query Results](~/docs/framework/wpf/data/how-to-bind-to-xdocument-xelement-or-linq-for-xml-query-results.md).\"\n  syntax:\n    content: public string XPath { get; set; }\n    return:\n      type: System.String\n      description: The `XPath` query. The default is `null`.\n  overload: System.Windows.Data.Binding.XPath*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/Binding.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Windows.Data.BindingBase\n  parent: System.Windows.Data\n  isExternal: false\n  name: BindingBase\n  nameWithType: BindingBase\n  fullName: System.Windows.Data.BindingBase\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Windows.Data.Binding.#ctor\n  parent: System.Windows.Data.Binding\n  isExternal: false\n  name: Binding()\n  nameWithType: Binding.Binding()\n  fullName: Binding.Binding()\n- uid: System.Windows.Data.Binding.#ctor(System.String)\n  parent: System.Windows.Data.Binding\n  isExternal: false\n  name: Binding(String)\n  nameWithType: Binding.Binding(String)\n  fullName: Binding.Binding(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Data.Binding.AddSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})\n  parent: System.Windows.Data.Binding\n  isExternal: false\n  name: AddSourceUpdatedHandler(DependencyObject, EventHandler<DataTransferEventArgs>)\n  nameWithType: Binding.AddSourceUpdatedHandler(DependencyObject, EventHandler<DataTransferEventArgs>)\n  fullName: Binding.AddSourceUpdatedHandler(DependencyObject, EventHandler<DataTransferEventArgs>)\n- uid: System.Windows.DependencyObject\n  parent: System.Windows\n  isExternal: false\n  name: DependencyObject\n  nameWithType: DependencyObject\n  fullName: System.Windows.DependencyObject\n- uid: System.EventHandler`1\n  name: EventHandler<TEventArgs>\n  nameWithType: EventHandler<TEventArgs>\n  fullName: System.EventHandler<TEventArgs>\n- uid: System.Windows.Data.DataTransferEventArgs\n  name: DataTransferEventArgs\n  nameWithType: DataTransferEventArgs\n  fullName: System.Windows.Data.DataTransferEventArgs\n- uid: System.EventHandler{System.Windows.Data.DataTransferEventArgs}\n  parent: System\n  isExternal: false\n  name: EventHandler<DataTransferEventArgs>\n  nameWithType: EventHandler<DataTransferEventArgs>\n  fullName: System.EventHandler<System.Windows.Data.DataTransferEventArgs>\n  spec.csharp:\n  - uid: System.EventHandler`1\n    name: EventHandler\n    nameWithType: EventHandler\n    fullName: System.EventHandler\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Windows.Data.DataTransferEventArgs\n    name: DataTransferEventArgs\n    nameWithType: DataTransferEventArgs\n    fullName: System.Windows.Data.DataTransferEventArgs\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Windows.Data.Binding.AddTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})\n  parent: System.Windows.Data.Binding\n  isExternal: false\n  name: AddTargetUpdatedHandler(DependencyObject, EventHandler<DataTransferEventArgs>)\n  nameWithType: Binding.AddTargetUpdatedHandler(DependencyObject, EventHandler<DataTransferEventArgs>)\n  fullName: Binding.AddTargetUpdatedHandler(DependencyObject, EventHandler<DataTransferEventArgs>)\n- uid: System.Windows.Data.Binding.AsyncState\n  parent: System.Windows.Data.Binding\n  isExternal: false\n  name: AsyncState\n  nameWithType: Binding.AsyncState\n  fullName: Binding.AsyncState\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Data.Binding.BindsDirectlyToSource\n  parent: System.Windows.Data.Binding\n  isExternal: false\n  name: BindsDirectlyToSource\n  nameWithType: Binding.BindsDirectlyToSource\n  fullName: Binding.BindsDirectlyToSource\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Data.Binding.Converter\n  parent: System.Windows.Data.Binding\n  isExternal: false\n  name: Converter\n  nameWithType: Binding.Converter\n  fullName: Binding.Converter\n- uid: System.Windows.Data.IValueConverter\n  parent: System.Windows.Data\n  isExternal: false\n  name: IValueConverter\n  nameWithType: IValueConverter\n  fullName: System.Windows.Data.IValueConverter\n- uid: System.Windows.Data.Binding.ConverterCulture\n  parent: System.Windows.Data.Binding\n  isExternal: false\n  name: ConverterCulture\n  nameWithType: Binding.ConverterCulture\n  fullName: Binding.ConverterCulture\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Windows.Data.Binding.ConverterParameter\n  parent: System.Windows.Data.Binding\n  isExternal: false\n  name: ConverterParameter\n  nameWithType: Binding.ConverterParameter\n  fullName: Binding.ConverterParameter\n- uid: System.Windows.Data.Binding.DoNothing\n  parent: System.Windows.Data.Binding\n  isExternal: false\n  name: DoNothing\n  nameWithType: Binding.DoNothing\n  fullName: Binding.DoNothing\n- uid: System.Windows.Data.Binding.ElementName\n  parent: System.Windows.Data.Binding\n  isExternal: false\n  name: ElementName\n  nameWithType: Binding.ElementName\n  fullName: Binding.ElementName\n- uid: System.Windows.Data.Binding.GetXmlNamespaceManager(System.Windows.DependencyObject)\n  parent: System.Windows.Data.Binding\n  isExternal: false\n  name: GetXmlNamespaceManager(DependencyObject)\n  nameWithType: Binding.GetXmlNamespaceManager(DependencyObject)\n  fullName: Binding.GetXmlNamespaceManager(DependencyObject)\n- uid: System.Xml.XmlNamespaceManager\n  parent: System.Xml\n  isExternal: false\n  name: XmlNamespaceManager\n  nameWithType: XmlNamespaceManager\n  fullName: System.Xml.XmlNamespaceManager\n- uid: System.Windows.Data.Binding.IndexerName\n  parent: System.Windows.Data.Binding\n  isExternal: false\n  name: IndexerName\n  nameWithType: Binding.IndexerName\n  fullName: Binding.IndexerName\n- uid: System.Windows.Data.Binding.IsAsync\n  parent: System.Windows.Data.Binding\n  isExternal: false\n  name: IsAsync\n  nameWithType: Binding.IsAsync\n  fullName: Binding.IsAsync\n- uid: System.Windows.Data.Binding.Mode\n  parent: System.Windows.Data.Binding\n  isExternal: false\n  name: Mode\n  nameWithType: Binding.Mode\n  fullName: Binding.Mode\n- uid: System.Windows.Data.BindingMode\n  parent: System.Windows.Data\n  isExternal: false\n  name: BindingMode\n  nameWithType: BindingMode\n  fullName: System.Windows.Data.BindingMode\n- uid: System.Windows.Data.Binding.NotifyOnSourceUpdated\n  parent: System.Windows.Data.Binding\n  isExternal: false\n  name: NotifyOnSourceUpdated\n  nameWithType: Binding.NotifyOnSourceUpdated\n  fullName: Binding.NotifyOnSourceUpdated\n- uid: System.Windows.Data.Binding.NotifyOnTargetUpdated\n  parent: System.Windows.Data.Binding\n  isExternal: false\n  name: NotifyOnTargetUpdated\n  nameWithType: Binding.NotifyOnTargetUpdated\n  fullName: Binding.NotifyOnTargetUpdated\n- uid: System.Windows.Data.Binding.NotifyOnValidationError\n  parent: System.Windows.Data.Binding\n  isExternal: false\n  name: NotifyOnValidationError\n  nameWithType: Binding.NotifyOnValidationError\n  fullName: Binding.NotifyOnValidationError\n- uid: System.Windows.Data.Binding.Path\n  parent: System.Windows.Data.Binding\n  isExternal: false\n  name: Path\n  nameWithType: Binding.Path\n  fullName: Binding.Path\n- uid: System.Windows.PropertyPath\n  parent: System.Windows\n  isExternal: false\n  name: PropertyPath\n  nameWithType: PropertyPath\n  fullName: System.Windows.PropertyPath\n- uid: System.Windows.Data.Binding.RelativeSource\n  parent: System.Windows.Data.Binding\n  isExternal: false\n  name: RelativeSource\n  nameWithType: Binding.RelativeSource\n  fullName: Binding.RelativeSource\n- uid: System.Windows.Data.RelativeSource\n  parent: System.Windows.Data\n  isExternal: false\n  name: RelativeSource\n  nameWithType: RelativeSource\n  fullName: System.Windows.Data.RelativeSource\n- uid: System.Windows.Data.Binding.RemoveSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})\n  parent: System.Windows.Data.Binding\n  isExternal: false\n  name: RemoveSourceUpdatedHandler(DependencyObject, EventHandler<DataTransferEventArgs>)\n  nameWithType: Binding.RemoveSourceUpdatedHandler(DependencyObject, EventHandler<DataTransferEventArgs>)\n  fullName: Binding.RemoveSourceUpdatedHandler(DependencyObject, EventHandler<DataTransferEventArgs>)\n- uid: System.Windows.Data.Binding.RemoveTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})\n  parent: System.Windows.Data.Binding\n  isExternal: false\n  name: RemoveTargetUpdatedHandler(DependencyObject, EventHandler<DataTransferEventArgs>)\n  nameWithType: Binding.RemoveTargetUpdatedHandler(DependencyObject, EventHandler<DataTransferEventArgs>)\n  fullName: Binding.RemoveTargetUpdatedHandler(DependencyObject, EventHandler<DataTransferEventArgs>)\n- uid: System.Windows.Data.Binding.SetXmlNamespaceManager(System.Windows.DependencyObject,System.Xml.XmlNamespaceManager)\n  parent: System.Windows.Data.Binding\n  isExternal: false\n  name: SetXmlNamespaceManager(DependencyObject, XmlNamespaceManager)\n  nameWithType: Binding.SetXmlNamespaceManager(DependencyObject, XmlNamespaceManager)\n  fullName: Binding.SetXmlNamespaceManager(DependencyObject, XmlNamespaceManager)\n- uid: System.Windows.Data.Binding.ShouldSerializePath\n  parent: System.Windows.Data.Binding\n  isExternal: false\n  name: ShouldSerializePath()\n  nameWithType: Binding.ShouldSerializePath()\n  fullName: Binding.ShouldSerializePath()\n- uid: System.Windows.Data.Binding.ShouldSerializeSource\n  parent: System.Windows.Data.Binding\n  isExternal: false\n  name: ShouldSerializeSource()\n  nameWithType: Binding.ShouldSerializeSource()\n  fullName: Binding.ShouldSerializeSource()\n- uid: System.Windows.Data.Binding.ShouldSerializeValidationRules\n  parent: System.Windows.Data.Binding\n  isExternal: false\n  name: ShouldSerializeValidationRules()\n  nameWithType: Binding.ShouldSerializeValidationRules()\n  fullName: Binding.ShouldSerializeValidationRules()\n- uid: System.Windows.Data.Binding.Source\n  parent: System.Windows.Data.Binding\n  isExternal: false\n  name: Source\n  nameWithType: Binding.Source\n  fullName: Binding.Source\n- uid: System.Windows.Data.Binding.SourceUpdatedEvent\n  parent: System.Windows.Data.Binding\n  isExternal: false\n  name: SourceUpdatedEvent\n  nameWithType: Binding.SourceUpdatedEvent\n  fullName: Binding.SourceUpdatedEvent\n- uid: System.Windows.RoutedEvent\n  parent: System.Windows\n  isExternal: false\n  name: RoutedEvent\n  nameWithType: RoutedEvent\n  fullName: System.Windows.RoutedEvent\n- uid: System.Windows.Data.Binding.TargetUpdatedEvent\n  parent: System.Windows.Data.Binding\n  isExternal: false\n  name: TargetUpdatedEvent\n  nameWithType: Binding.TargetUpdatedEvent\n  fullName: Binding.TargetUpdatedEvent\n- uid: System.Windows.Data.Binding.UpdateSourceExceptionFilter\n  parent: System.Windows.Data.Binding\n  isExternal: false\n  name: UpdateSourceExceptionFilter\n  nameWithType: Binding.UpdateSourceExceptionFilter\n  fullName: Binding.UpdateSourceExceptionFilter\n- uid: System.Windows.Data.UpdateSourceExceptionFilterCallback\n  parent: System.Windows.Data\n  isExternal: false\n  name: UpdateSourceExceptionFilterCallback\n  nameWithType: UpdateSourceExceptionFilterCallback\n  fullName: System.Windows.Data.UpdateSourceExceptionFilterCallback\n- uid: System.Windows.Data.Binding.UpdateSourceTrigger\n  parent: System.Windows.Data.Binding\n  isExternal: false\n  name: UpdateSourceTrigger\n  nameWithType: Binding.UpdateSourceTrigger\n  fullName: Binding.UpdateSourceTrigger\n- uid: System.Windows.Data.UpdateSourceTrigger\n  parent: System.Windows.Data\n  isExternal: false\n  name: UpdateSourceTrigger\n  nameWithType: UpdateSourceTrigger\n  fullName: System.Windows.Data.UpdateSourceTrigger\n- uid: System.Windows.Data.Binding.ValidatesOnDataErrors\n  parent: System.Windows.Data.Binding\n  isExternal: false\n  name: ValidatesOnDataErrors\n  nameWithType: Binding.ValidatesOnDataErrors\n  fullName: Binding.ValidatesOnDataErrors\n- uid: System.Windows.Data.Binding.ValidatesOnExceptions\n  parent: System.Windows.Data.Binding\n  isExternal: false\n  name: ValidatesOnExceptions\n  nameWithType: Binding.ValidatesOnExceptions\n  fullName: Binding.ValidatesOnExceptions\n- uid: System.Windows.Data.Binding.ValidatesOnNotifyDataErrors\n  parent: System.Windows.Data.Binding\n  isExternal: false\n  name: ValidatesOnNotifyDataErrors\n  nameWithType: Binding.ValidatesOnNotifyDataErrors\n  fullName: Binding.ValidatesOnNotifyDataErrors\n- uid: System.Windows.Data.Binding.ValidationRules\n  parent: System.Windows.Data.Binding\n  isExternal: false\n  name: ValidationRules\n  nameWithType: Binding.ValidationRules\n  fullName: Binding.ValidationRules\n- uid: System.Collections.ObjectModel.Collection`1\n  name: Collection<T>\n  nameWithType: Collection<T>\n  fullName: System.Collections.ObjectModel.Collection<T>\n- uid: System.Windows.Controls.ValidationRule\n  name: ValidationRule\n  nameWithType: ValidationRule\n  fullName: System.Windows.Controls.ValidationRule\n- uid: System.Collections.ObjectModel.Collection{System.Windows.Controls.ValidationRule}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: Collection<ValidationRule>\n  nameWithType: Collection<ValidationRule>\n  fullName: System.Collections.ObjectModel.Collection<System.Windows.Controls.ValidationRule>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.Collection`1\n    name: Collection\n    nameWithType: Collection\n    fullName: System.Collections.ObjectModel.Collection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Windows.Controls.ValidationRule\n    name: ValidationRule\n    nameWithType: ValidationRule\n    fullName: System.Windows.Controls.ValidationRule\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Windows.Data.Binding.XmlNamespaceManagerProperty\n  parent: System.Windows.Data.Binding\n  isExternal: false\n  name: XmlNamespaceManagerProperty\n  nameWithType: Binding.XmlNamespaceManagerProperty\n  fullName: Binding.XmlNamespaceManagerProperty\n- uid: System.Windows.DependencyProperty\n  parent: System.Windows\n  isExternal: false\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Windows.DependencyProperty\n- uid: System.Windows.Data.Binding.XPath\n  parent: System.Windows.Data.Binding\n  isExternal: false\n  name: XPath\n  nameWithType: Binding.XPath\n  fullName: Binding.XPath\n- uid: System.Windows.Data.Binding.#ctor*\n  parent: System.Windows.Data.Binding\n  isExternal: false\n  name: Binding\n  nameWithType: Binding.Binding\n  fullName: Binding.Binding\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/Binding.xml\n- uid: System.Windows.Data.Binding.AddSourceUpdatedHandler*\n  parent: System.Windows.Data.Binding\n  isExternal: false\n  name: AddSourceUpdatedHandler\n  nameWithType: Binding.AddSourceUpdatedHandler\n  fullName: Binding.AddSourceUpdatedHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/Binding.xml\n- uid: System.Windows.Data.Binding.AddTargetUpdatedHandler*\n  parent: System.Windows.Data.Binding\n  isExternal: false\n  name: AddTargetUpdatedHandler\n  nameWithType: Binding.AddTargetUpdatedHandler\n  fullName: Binding.AddTargetUpdatedHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/Binding.xml\n- uid: System.Windows.Data.Binding.AsyncState*\n  parent: System.Windows.Data.Binding\n  isExternal: false\n  name: AsyncState\n  nameWithType: Binding.AsyncState\n  fullName: Binding.AsyncState\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/Binding.xml\n- uid: System.Windows.Data.Binding.BindsDirectlyToSource*\n  parent: System.Windows.Data.Binding\n  isExternal: false\n  name: BindsDirectlyToSource\n  nameWithType: Binding.BindsDirectlyToSource\n  fullName: Binding.BindsDirectlyToSource\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/Binding.xml\n- uid: System.Windows.Data.Binding.Converter*\n  parent: System.Windows.Data.Binding\n  isExternal: false\n  name: Converter\n  nameWithType: Binding.Converter\n  fullName: Binding.Converter\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/Binding.xml\n- uid: System.Windows.Data.Binding.ConverterCulture*\n  parent: System.Windows.Data.Binding\n  isExternal: false\n  name: ConverterCulture\n  nameWithType: Binding.ConverterCulture\n  fullName: Binding.ConverterCulture\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/Binding.xml\n- uid: System.Windows.Data.Binding.ConverterParameter*\n  parent: System.Windows.Data.Binding\n  isExternal: false\n  name: ConverterParameter\n  nameWithType: Binding.ConverterParameter\n  fullName: Binding.ConverterParameter\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/Binding.xml\n- uid: System.Windows.Data.Binding.ElementName*\n  parent: System.Windows.Data.Binding\n  isExternal: false\n  name: ElementName\n  nameWithType: Binding.ElementName\n  fullName: Binding.ElementName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/Binding.xml\n- uid: System.Windows.Data.Binding.GetXmlNamespaceManager*\n  parent: System.Windows.Data.Binding\n  isExternal: false\n  name: GetXmlNamespaceManager\n  nameWithType: Binding.GetXmlNamespaceManager\n  fullName: Binding.GetXmlNamespaceManager\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/Binding.xml\n- uid: System.Windows.Data.Binding.IsAsync*\n  parent: System.Windows.Data.Binding\n  isExternal: false\n  name: IsAsync\n  nameWithType: Binding.IsAsync\n  fullName: Binding.IsAsync\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/Binding.xml\n- uid: System.Windows.Data.Binding.Mode*\n  parent: System.Windows.Data.Binding\n  isExternal: false\n  name: Mode\n  nameWithType: Binding.Mode\n  fullName: Binding.Mode\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/Binding.xml\n- uid: System.Windows.Data.Binding.NotifyOnSourceUpdated*\n  parent: System.Windows.Data.Binding\n  isExternal: false\n  name: NotifyOnSourceUpdated\n  nameWithType: Binding.NotifyOnSourceUpdated\n  fullName: Binding.NotifyOnSourceUpdated\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/Binding.xml\n- uid: System.Windows.Data.Binding.NotifyOnTargetUpdated*\n  parent: System.Windows.Data.Binding\n  isExternal: false\n  name: NotifyOnTargetUpdated\n  nameWithType: Binding.NotifyOnTargetUpdated\n  fullName: Binding.NotifyOnTargetUpdated\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/Binding.xml\n- uid: System.Windows.Data.Binding.NotifyOnValidationError*\n  parent: System.Windows.Data.Binding\n  isExternal: false\n  name: NotifyOnValidationError\n  nameWithType: Binding.NotifyOnValidationError\n  fullName: Binding.NotifyOnValidationError\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/Binding.xml\n- uid: System.Windows.Data.Binding.Path*\n  parent: System.Windows.Data.Binding\n  isExternal: false\n  name: Path\n  nameWithType: Binding.Path\n  fullName: Binding.Path\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/Binding.xml\n- uid: System.Windows.Data.Binding.RelativeSource*\n  parent: System.Windows.Data.Binding\n  isExternal: false\n  name: RelativeSource\n  nameWithType: Binding.RelativeSource\n  fullName: Binding.RelativeSource\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/Binding.xml\n- uid: System.Windows.Data.Binding.RemoveSourceUpdatedHandler*\n  parent: System.Windows.Data.Binding\n  isExternal: false\n  name: RemoveSourceUpdatedHandler\n  nameWithType: Binding.RemoveSourceUpdatedHandler\n  fullName: Binding.RemoveSourceUpdatedHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/Binding.xml\n- uid: System.Windows.Data.Binding.RemoveTargetUpdatedHandler*\n  parent: System.Windows.Data.Binding\n  isExternal: false\n  name: RemoveTargetUpdatedHandler\n  nameWithType: Binding.RemoveTargetUpdatedHandler\n  fullName: Binding.RemoveTargetUpdatedHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/Binding.xml\n- uid: System.Windows.Data.Binding.SetXmlNamespaceManager*\n  parent: System.Windows.Data.Binding\n  isExternal: false\n  name: SetXmlNamespaceManager\n  nameWithType: Binding.SetXmlNamespaceManager\n  fullName: Binding.SetXmlNamespaceManager\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/Binding.xml\n- uid: System.Windows.Data.Binding.ShouldSerializePath*\n  parent: System.Windows.Data.Binding\n  isExternal: false\n  name: ShouldSerializePath\n  nameWithType: Binding.ShouldSerializePath\n  fullName: Binding.ShouldSerializePath\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/Binding.xml\n- uid: System.Windows.Data.Binding.ShouldSerializeSource*\n  parent: System.Windows.Data.Binding\n  isExternal: false\n  name: ShouldSerializeSource\n  nameWithType: Binding.ShouldSerializeSource\n  fullName: Binding.ShouldSerializeSource\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/Binding.xml\n- uid: System.Windows.Data.Binding.ShouldSerializeValidationRules*\n  parent: System.Windows.Data.Binding\n  isExternal: false\n  name: ShouldSerializeValidationRules\n  nameWithType: Binding.ShouldSerializeValidationRules\n  fullName: Binding.ShouldSerializeValidationRules\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/Binding.xml\n- uid: System.Windows.Data.Binding.Source*\n  parent: System.Windows.Data.Binding\n  isExternal: false\n  name: Source\n  nameWithType: Binding.Source\n  fullName: Binding.Source\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/Binding.xml\n- uid: System.Windows.Data.Binding.UpdateSourceExceptionFilter*\n  parent: System.Windows.Data.Binding\n  isExternal: false\n  name: UpdateSourceExceptionFilter\n  nameWithType: Binding.UpdateSourceExceptionFilter\n  fullName: Binding.UpdateSourceExceptionFilter\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/Binding.xml\n- uid: System.Windows.Data.Binding.UpdateSourceTrigger*\n  parent: System.Windows.Data.Binding\n  isExternal: false\n  name: UpdateSourceTrigger\n  nameWithType: Binding.UpdateSourceTrigger\n  fullName: Binding.UpdateSourceTrigger\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/Binding.xml\n- uid: System.Windows.Data.Binding.ValidatesOnDataErrors*\n  parent: System.Windows.Data.Binding\n  isExternal: false\n  name: ValidatesOnDataErrors\n  nameWithType: Binding.ValidatesOnDataErrors\n  fullName: Binding.ValidatesOnDataErrors\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/Binding.xml\n- uid: System.Windows.Data.Binding.ValidatesOnExceptions*\n  parent: System.Windows.Data.Binding\n  isExternal: false\n  name: ValidatesOnExceptions\n  nameWithType: Binding.ValidatesOnExceptions\n  fullName: Binding.ValidatesOnExceptions\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/Binding.xml\n- uid: System.Windows.Data.Binding.ValidatesOnNotifyDataErrors*\n  parent: System.Windows.Data.Binding\n  isExternal: false\n  name: ValidatesOnNotifyDataErrors\n  nameWithType: Binding.ValidatesOnNotifyDataErrors\n  fullName: Binding.ValidatesOnNotifyDataErrors\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/Binding.xml\n- uid: System.Windows.Data.Binding.ValidationRules*\n  parent: System.Windows.Data.Binding\n  isExternal: false\n  name: ValidationRules\n  nameWithType: Binding.ValidationRules\n  fullName: Binding.ValidationRules\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/Binding.xml\n- uid: System.Windows.Data.Binding.XPath*\n  parent: System.Windows.Data.Binding\n  isExternal: false\n  name: XPath\n  nameWithType: Binding.XPath\n  fullName: Binding.XPath\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Data/Binding.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)\n  parent: System.Windows.Data.BindingBase\n  isExternal: false\n  name: ProvideValue(IServiceProvider)\n  nameWithType: BindingBase.ProvideValue(IServiceProvider)\n  fullName: BindingBase.ProvideValue(IServiceProvider)\n- uid: System.Windows.Data.BindingBase.BindingGroupName\n  parent: System.Windows.Data.BindingBase\n  isExternal: false\n  name: BindingGroupName\n  nameWithType: BindingBase.BindingGroupName\n  fullName: BindingBase.BindingGroupName\n- uid: System.Windows.Data.BindingBase.Delay\n  parent: System.Windows.Data.BindingBase\n  isExternal: false\n  name: Delay\n  nameWithType: BindingBase.Delay\n  fullName: BindingBase.Delay\n- uid: System.Windows.Data.BindingBase.FallbackValue\n  parent: System.Windows.Data.BindingBase\n  isExternal: false\n  name: FallbackValue\n  nameWithType: BindingBase.FallbackValue\n  fullName: BindingBase.FallbackValue\n- uid: System.Windows.Data.BindingBase.ShouldSerializeFallbackValue\n  parent: System.Windows.Data.BindingBase\n  isExternal: false\n  name: ShouldSerializeFallbackValue()\n  nameWithType: BindingBase.ShouldSerializeFallbackValue()\n  fullName: BindingBase.ShouldSerializeFallbackValue()\n- uid: System.Windows.Data.BindingBase.ShouldSerializeTargetNullValue\n  parent: System.Windows.Data.BindingBase\n  isExternal: false\n  name: ShouldSerializeTargetNullValue()\n  nameWithType: BindingBase.ShouldSerializeTargetNullValue()\n  fullName: BindingBase.ShouldSerializeTargetNullValue()\n- uid: System.Windows.Data.BindingBase.StringFormat\n  parent: System.Windows.Data.BindingBase\n  isExternal: false\n  name: StringFormat\n  nameWithType: BindingBase.StringFormat\n  fullName: BindingBase.StringFormat\n- uid: System.Windows.Data.BindingBase.TargetNullValue\n  parent: System.Windows.Data.BindingBase\n  isExternal: false\n  name: TargetNullValue\n  nameWithType: BindingBase.TargetNullValue\n  fullName: BindingBase.TargetNullValue\n"}