{"nodes":[{"content":"Holds values for an object type registered on the service end as a server-activated type object (single call or singleton).","nodes":[{"pos":[0,123],"content":"Holds values for an object type registered on the service end as a server-activated type object (single call or singleton).","nodes":[{"content":"Holds values for an object type registered on the service end as a server-activated type object (single call or singleton).","pos":[0,123]}]}],"pos":[1050,1174],"yaml":true},{"content":"Server-activated object types can be either single call or singleton. If an object type is single call, a new instance of it is created each time a call from the client comes in. All calls to a singleton object are handled by one instance of that object.  \n  \n Any client that knows the URI of this object can obtain a proxy for this object by registering the channel it prefers with <xref:System.Runtime.Remoting.Channels.ChannelServices> and activating the object by calling `new` or <xref:System.Activator.GetObject%2A?displayProperty=fullName>.  \n  \n It is important to note that the remote object itself is not created by the registration process. This only happens when a client attempts to call a method on the object or activates the object from the client side.  \n  \n For a more detailed description of server-activated objects and remote object activation, see [&#91;\\<topic://cpconActivation>&#93;](http://msdn.microsoft.com/en-us/e90d0c64-00da-4080-ae78-a6c558825c25).","nodes":[{"pos":[0,254],"content":"Server-activated object types can be either single call or singleton. If an object type is single call, a new instance of it is created each time a call from the client comes in. All calls to a singleton object are handled by one instance of that object.","nodes":[{"content":"Server-activated object types can be either single call or singleton. If an object type is single call, a new instance of it is created each time a call from the client comes in. All calls to a singleton object are handled by one instance of that object.","pos":[0,254],"nodes":[{"content":"Server-activated object types can be either single call or singleton.","pos":[0,69]},{"content":"If an object type is single call, a new instance of it is created each time a call from the client comes in.","pos":[70,178]},{"content":"All calls to a singleton object are handled by one instance of that object.","pos":[179,254]}]}]},{"pos":[261,548],"content":"Any client that knows the URI of this object can obtain a proxy for this object by registering the channel it prefers with <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Channels.ChannelServices&gt;</ph> and activating the object by calling <ph id=\"ph2\">`new`</ph> or <ph id=\"ph3\">&lt;xref:System.Activator.GetObject%2A?displayProperty=fullName&gt;</ph>.","source":"Any client that knows the URI of this object can obtain a proxy for this object by registering the channel it prefers with <xref:System.Runtime.Remoting.Channels.ChannelServices> and activating the object by calling `new` or <xref:System.Activator.GetObject%2A?displayProperty=fullName>."},{"pos":[555,770],"content":"It is important to note that the remote object itself is not created by the registration process. This only happens when a client attempts to call a method on the object or activates the object from the client side.","nodes":[{"content":"It is important to note that the remote object itself is not created by the registration process. This only happens when a client attempts to call a method on the object or activates the object from the client side.","pos":[0,215],"nodes":[{"content":"It is important to note that the remote object itself is not created by the registration process.","pos":[0,97]},{"content":"This only happens when a client attempts to call a method on the object or activates the object from the client side.","pos":[98,215]}]}]},{"pos":[777,980],"content":"For a more detailed description of server-activated objects and remote object activation, see <bpt id=\"p1\">[</bpt>&amp;#91;<ph id=\"ph1\">\\&lt;</ph>topic://cpconActivation&gt;&amp;#93;<ept id=\"p1\">](http://msdn.microsoft.com/en-us/e90d0c64-00da-4080-ae78-a6c558825c25)</ept>.","source":"For a more detailed description of server-activated objects and remote object activation, see [&#91;\\<topic://cpconActivation>&#93;](http://msdn.microsoft.com/en-us/e90d0c64-00da-4080-ae78-a6c558825c25)."}],"pos":[1185,2175],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Runtime.Remoting.WellKnownServiceTypeEntry\"></xref> class with the given <xref href=\"System.Type\"></xref>, object URI, and <xref href=\"System.Runtime.Remoting.WellKnownObjectMode\"></xref>.","nodes":[{"pos":[0,241],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Remoting.WellKnownServiceTypeEntry\"&gt;&lt;/xref&gt;</ph> class with the given <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph>, object URI, and <ph id=\"ph3\">&lt;xref href=\"System.Runtime.Remoting.WellKnownObjectMode\"&gt;&lt;/xref&gt;</ph>.","source":"Initializes a new instance of the <xref href=\"System.Runtime.Remoting.WellKnownServiceTypeEntry\"></xref> class with the given <xref href=\"System.Type\"></xref>, object URI, and <xref href=\"System.Runtime.Remoting.WellKnownObjectMode\"></xref>."}],"pos":[4854,5096],"yaml":true},{"content":"The <xref href=\"System.Type\"></xref> of the server-activated service type object.","nodes":[{"pos":[0,81],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> of the server-activated service type object.","source":"The <xref href=\"System.Type\"></xref> of the server-activated service type object."}],"pos":[5307,5389],"yaml":true},{"content":"The URI of the server-activated type.","nodes":[{"pos":[0,37],"content":"The URI of the server-activated type.","nodes":[{"content":"The URI of the server-activated type.","pos":[0,37]}]}],"pos":[5454,5492],"yaml":true},{"content":"The <xref href=\"System.Runtime.Remoting.WellKnownObjectMode\"></xref> of the type, which defines how the object is activated.","nodes":[{"pos":[0,124],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Remoting.WellKnownObjectMode\"&gt;&lt;/xref&gt;</ph> of the type, which defines how the object is activated.","source":"The <xref href=\"System.Runtime.Remoting.WellKnownObjectMode\"></xref> of the type, which defines how the object is activated."}],"pos":[5582,5707],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Runtime.Remoting.WellKnownServiceTypeEntry\"></xref> class with the given type name, assembly name, object URI, and <xref href=\"System.Runtime.Remoting.WellKnownObjectMode\"></xref>.","nodes":[{"pos":[0,233],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Remoting.WellKnownServiceTypeEntry\"&gt;&lt;/xref&gt;</ph> class with the given type name, assembly name, object URI, and <ph id=\"ph2\">&lt;xref href=\"System.Runtime.Remoting.WellKnownObjectMode\"&gt;&lt;/xref&gt;</ph>.","source":"Initializes a new instance of the <xref href=\"System.Runtime.Remoting.WellKnownServiceTypeEntry\"></xref> class with the given type name, assembly name, object URI, and <xref href=\"System.Runtime.Remoting.WellKnownObjectMode\"></xref>."}],"pos":[7310,7544],"yaml":true},{"content":"The full type name of the server-activated service type.","nodes":[{"pos":[0,56],"content":"The full type name of the server-activated service type.","nodes":[{"content":"The full type name of the server-activated service type.","pos":[0,56]}]}],"pos":[7788,7845],"yaml":true},{"content":"The assembly name of the server-activated service type.","nodes":[{"pos":[0,55],"content":"The assembly name of the server-activated service type.","nodes":[{"content":"The assembly name of the server-activated service type.","pos":[0,55]}]}],"pos":[7913,7969],"yaml":true},{"content":"The URI of the server-activated object.","nodes":[{"pos":[0,39],"content":"The URI of the server-activated object.","nodes":[{"content":"The URI of the server-activated object.","pos":[0,39]}]}],"pos":[8034,8074],"yaml":true},{"content":"The <xref href=\"System.Runtime.Remoting.WellKnownObjectMode\"></xref> of the type, which defines how the object is activated.","nodes":[{"pos":[0,124],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Remoting.WellKnownObjectMode\"&gt;&lt;/xref&gt;</ph> of the type, which defines how the object is activated.","source":"The <xref href=\"System.Runtime.Remoting.WellKnownObjectMode\"></xref> of the type, which defines how the object is activated."}],"pos":[8164,8289],"yaml":true},{"content":"Gets or sets the context attributes for the server-activated service type.","nodes":[{"pos":[0,74],"content":"Gets or sets the context attributes for the server-activated service type.","nodes":[{"content":"Gets or sets the context attributes for the server-activated service type.","pos":[0,74]}]}],"pos":[9503,9578],"yaml":true},{"content":"Currently, this indexer is not implemented and operations on it will not produce any results.  \n  \n Context attributes provide context properties that, when added to a context, can enforce policies such as synchronization and transactions.","nodes":[{"pos":[0,93],"content":"Currently, this indexer is not implemented and operations on it will not produce any results.","nodes":[{"content":"Currently, this indexer is not implemented and operations on it will not produce any results.","pos":[0,93]}]},{"pos":[100,239],"content":"Context attributes provide context properties that, when added to a context, can enforce policies such as synchronization and transactions.","nodes":[{"content":"Context attributes provide context properties that, when added to a context, can enforce policies such as synchronization and transactions.","pos":[0,139]}]}],"pos":[9589,9833],"yaml":true,"extradata":"MT"},{"content":"Gets or sets the context attributes for the server-activated service type.","nodes":[{"pos":[0,74],"content":"Gets or sets the context attributes for the server-activated service type.","nodes":[{"content":"Gets or sets the context attributes for the server-activated service type.","pos":[0,74]}]}],"pos":[10044,10119],"yaml":true},{"content":"Gets the <xref href=\"System.Runtime.Remoting.WellKnownObjectMode\"></xref> of the server-activated service type.","nodes":[{"pos":[0,111],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Remoting.WellKnownObjectMode\"&gt;&lt;/xref&gt;</ph> of the server-activated service type.","source":"Gets the <xref href=\"System.Runtime.Remoting.WellKnownObjectMode\"></xref> of the server-activated service type."}],"pos":[11267,11379],"yaml":true},{"content":"The <xref href=\"System.Runtime.Remoting.WellKnownObjectMode\"></xref> of the server-activated service type.","nodes":[{"pos":[0,106],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Remoting.WellKnownObjectMode\"&gt;&lt;/xref&gt;</ph> of the server-activated service type.","source":"The <xref href=\"System.Runtime.Remoting.WellKnownObjectMode\"></xref> of the server-activated service type."}],"pos":[11554,11661],"yaml":true},{"content":"Gets the <xref href=\"System.Type\"></xref> of the server-activated service type.","nodes":[{"pos":[0,79],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> of the server-activated service type.","source":"Gets the <xref href=\"System.Type\"></xref> of the server-activated service type."}],"pos":[12832,12912],"yaml":true},{"content":"The <xref href=\"System.Type\"></xref> of the server-activated service type.","nodes":[{"pos":[0,74],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> of the server-activated service type.","source":"The <xref href=\"System.Type\"></xref> of the server-activated service type."}],"pos":[13022,13097],"yaml":true},{"content":"Gets the URI of the well-known service type.","nodes":[{"pos":[0,44],"content":"Gets the URI of the well-known service type.","nodes":[{"content":"Gets the URI of the well-known service type.","pos":[0,44]}]}],"pos":[14268,14313],"yaml":true},{"content":"The URI of the server-activated service type.","nodes":[{"pos":[0,45],"content":"The URI of the server-activated service type.","nodes":[{"content":"The URI of the server-activated service type.","pos":[0,45]}]}],"pos":[14426,14472],"yaml":true},{"content":"Returns the type name, assembly name, object URI and the <xref href=\"System.Runtime.Remoting.WellKnownObjectMode\"></xref> of the server-activated type as a <xref href=\"System.String\"></xref>.","nodes":[{"pos":[0,191],"content":"Returns the type name, assembly name, object URI and the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Remoting.WellKnownObjectMode\"&gt;&lt;/xref&gt;</ph> of the server-activated type as a <ph id=\"ph2\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph>.","source":"Returns the type name, assembly name, object URI and the <xref href=\"System.Runtime.Remoting.WellKnownObjectMode\"></xref> of the server-activated type as a <xref href=\"System.String\"></xref>."}],"pos":[15640,15832],"yaml":true},{"content":"The type name, assembly name, object URI, and the <xref href=\"System.Runtime.Remoting.WellKnownObjectMode\"></xref> of the server-activated type as a <xref href=\"System.String\"></xref>.","nodes":[{"pos":[0,184],"content":"The type name, assembly name, object URI, and the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Remoting.WellKnownObjectMode\"&gt;&lt;/xref&gt;</ph> of the server-activated type as a <ph id=\"ph2\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph>.","source":"The type name, assembly name, object URI, and the <xref href=\"System.Runtime.Remoting.WellKnownObjectMode\"></xref> of the server-activated type as a <xref href=\"System.String\"></xref>."}],"pos":[15967,16152],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.Remoting.WellKnownServiceTypeEntry\n  commentId: T:System.Runtime.Remoting.WellKnownServiceTypeEntry\n  id: WellKnownServiceTypeEntry\n  children:\n  - System.Runtime.Remoting.WellKnownServiceTypeEntry.#ctor(System.Type,System.String,System.Runtime.Remoting.WellKnownObjectMode)\n  - System.Runtime.Remoting.WellKnownServiceTypeEntry.#ctor(System.String,System.String,System.String,System.Runtime.Remoting.WellKnownObjectMode)\n  - System.Runtime.Remoting.WellKnownServiceTypeEntry.ContextAttributes\n  - System.Runtime.Remoting.WellKnownServiceTypeEntry.Mode\n  - System.Runtime.Remoting.WellKnownServiceTypeEntry.ObjectType\n  - System.Runtime.Remoting.WellKnownServiceTypeEntry.ObjectUri\n  - System.Runtime.Remoting.WellKnownServiceTypeEntry.ToString\n  langs:\n  - csharp\n  name: WellKnownServiceTypeEntry\n  nameWithType: WellKnownServiceTypeEntry\n  fullName: System.Runtime.Remoting.WellKnownServiceTypeEntry\n  type: Class\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting\n  summary: Holds values for an object type registered on the service end as a server-activated type object (single call or singleton).\n  remarks: \"Server-activated object types can be either single call or singleton. If an object type is single call, a new instance of it is created each time a call from the client comes in. All calls to a singleton object are handled by one instance of that object.  \\n  \\n Any client that knows the URI of this object can obtain a proxy for this object by registering the channel it prefers with <xref:System.Runtime.Remoting.Channels.ChannelServices> and activating the object by calling `new` or <xref:System.Activator.GetObject%2A?displayProperty=fullName>.  \\n  \\n It is important to note that the remote object itself is not created by the registration process. This only happens when a client attempts to call a method on the object or activates the object from the client side.  \\n  \\n For a more detailed description of server-activated objects and remote object activation, see [&#91;\\\\<topic://cpconActivation>&#93;](http://msdn.microsoft.com/en-us/e90d0c64-00da-4080-ae78-a6c558825c25).\"\n  example:\n  - >-\n    [!code-cpp[WellKnownServiceTypeEntry_Server#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WellKnownServiceTypeEntry_Server/CPP/wellknownservicetypeentry_server.cpp#1)]\n     [!code-csharp[WellKnownServiceTypeEntry_Server#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WellKnownServiceTypeEntry_Server/CS/wellknownservicetypeentry_server.cs#1)]\n     [!code-vb[WellKnownServiceTypeEntry_Server#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WellKnownServiceTypeEntry_Server/VB/wellknownservicetypeentry_server.vb#1)]\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class WellKnownServiceTypeEntry : System.Runtime.Remoting.TypeEntry\n  inheritance:\n  - System.Object\n  - System.Runtime.Remoting.TypeEntry\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Runtime.Remoting.TypeEntry.AssemblyName\n  - System.Runtime.Remoting.TypeEntry.TypeName\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/WellKnownServiceTypeEntry.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.WellKnownServiceTypeEntry.#ctor(System.Type,System.String,System.Runtime.Remoting.WellKnownObjectMode)\n  commentId: M:System.Runtime.Remoting.WellKnownServiceTypeEntry.#ctor(System.Type,System.String,System.Runtime.Remoting.WellKnownObjectMode)\n  id: '#ctor(System.Type,System.String,System.Runtime.Remoting.WellKnownObjectMode)'\n  parent: System.Runtime.Remoting.WellKnownServiceTypeEntry\n  langs:\n  - csharp\n  name: WellKnownServiceTypeEntry(Type, String, WellKnownObjectMode)\n  nameWithType: WellKnownServiceTypeEntry.WellKnownServiceTypeEntry(Type, String, WellKnownObjectMode)\n  fullName: WellKnownServiceTypeEntry.WellKnownServiceTypeEntry(Type, String, WellKnownObjectMode)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting\n  summary: Initializes a new instance of the <xref href=\"System.Runtime.Remoting.WellKnownServiceTypeEntry\"></xref> class with the given <xref href=\"System.Type\"></xref>, object URI, and <xref href=\"System.Runtime.Remoting.WellKnownObjectMode\"></xref>.\n  syntax:\n    content: public WellKnownServiceTypeEntry (Type type, string objectUri, System.Runtime.Remoting.WellKnownObjectMode mode);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> of the server-activated service type object.\n    - id: objectUri\n      type: System.String\n      description: The URI of the server-activated type.\n    - id: mode\n      type: System.Runtime.Remoting.WellKnownObjectMode\n      description: The <xref href=\"System.Runtime.Remoting.WellKnownObjectMode\"></xref> of the type, which defines how the object is activated.\n  overload: System.Runtime.Remoting.WellKnownServiceTypeEntry.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/WellKnownServiceTypeEntry.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.WellKnownServiceTypeEntry.#ctor(System.String,System.String,System.String,System.Runtime.Remoting.WellKnownObjectMode)\n  commentId: M:System.Runtime.Remoting.WellKnownServiceTypeEntry.#ctor(System.String,System.String,System.String,System.Runtime.Remoting.WellKnownObjectMode)\n  id: '#ctor(System.String,System.String,System.String,System.Runtime.Remoting.WellKnownObjectMode)'\n  parent: System.Runtime.Remoting.WellKnownServiceTypeEntry\n  langs:\n  - csharp\n  name: WellKnownServiceTypeEntry(String, String, String, WellKnownObjectMode)\n  nameWithType: WellKnownServiceTypeEntry.WellKnownServiceTypeEntry(String, String, String, WellKnownObjectMode)\n  fullName: WellKnownServiceTypeEntry.WellKnownServiceTypeEntry(String, String, String, WellKnownObjectMode)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting\n  summary: Initializes a new instance of the <xref href=\"System.Runtime.Remoting.WellKnownServiceTypeEntry\"></xref> class with the given type name, assembly name, object URI, and <xref href=\"System.Runtime.Remoting.WellKnownObjectMode\"></xref>.\n  syntax:\n    content: public WellKnownServiceTypeEntry (string typeName, string assemblyName, string objectUri, System.Runtime.Remoting.WellKnownObjectMode mode);\n    parameters:\n    - id: typeName\n      type: System.String\n      description: The full type name of the server-activated service type.\n    - id: assemblyName\n      type: System.String\n      description: The assembly name of the server-activated service type.\n    - id: objectUri\n      type: System.String\n      description: The URI of the server-activated object.\n    - id: mode\n      type: System.Runtime.Remoting.WellKnownObjectMode\n      description: The <xref href=\"System.Runtime.Remoting.WellKnownObjectMode\"></xref> of the type, which defines how the object is activated.\n  overload: System.Runtime.Remoting.WellKnownServiceTypeEntry.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/WellKnownServiceTypeEntry.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.WellKnownServiceTypeEntry.ContextAttributes\n  commentId: P:System.Runtime.Remoting.WellKnownServiceTypeEntry.ContextAttributes\n  id: ContextAttributes\n  parent: System.Runtime.Remoting.WellKnownServiceTypeEntry\n  langs:\n  - csharp\n  name: ContextAttributes\n  nameWithType: WellKnownServiceTypeEntry.ContextAttributes\n  fullName: WellKnownServiceTypeEntry.ContextAttributes\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting\n  summary: Gets or sets the context attributes for the server-activated service type.\n  remarks: \"Currently, this indexer is not implemented and operations on it will not produce any results.  \\n  \\n Context attributes provide context properties that, when added to a context, can enforce policies such as synchronization and transactions.\"\n  syntax:\n    content: public System.Runtime.Remoting.Contexts.IContextAttribute[] ContextAttributes { get; set; }\n    return:\n      type: System.Runtime.Remoting.Contexts.IContextAttribute[]\n      description: Gets or sets the context attributes for the server-activated service type.\n  overload: System.Runtime.Remoting.WellKnownServiceTypeEntry.ContextAttributes*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/WellKnownServiceTypeEntry.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.WellKnownServiceTypeEntry.Mode\n  commentId: P:System.Runtime.Remoting.WellKnownServiceTypeEntry.Mode\n  id: Mode\n  parent: System.Runtime.Remoting.WellKnownServiceTypeEntry\n  langs:\n  - csharp\n  name: Mode\n  nameWithType: WellKnownServiceTypeEntry.Mode\n  fullName: WellKnownServiceTypeEntry.Mode\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting\n  summary: Gets the <xref href=\"System.Runtime.Remoting.WellKnownObjectMode\"></xref> of the server-activated service type.\n  syntax:\n    content: public System.Runtime.Remoting.WellKnownObjectMode Mode { get; }\n    return:\n      type: System.Runtime.Remoting.WellKnownObjectMode\n      description: The <xref href=\"System.Runtime.Remoting.WellKnownObjectMode\"></xref> of the server-activated service type.\n  overload: System.Runtime.Remoting.WellKnownServiceTypeEntry.Mode*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/WellKnownServiceTypeEntry.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.WellKnownServiceTypeEntry.ObjectType\n  commentId: P:System.Runtime.Remoting.WellKnownServiceTypeEntry.ObjectType\n  id: ObjectType\n  parent: System.Runtime.Remoting.WellKnownServiceTypeEntry\n  langs:\n  - csharp\n  name: ObjectType\n  nameWithType: WellKnownServiceTypeEntry.ObjectType\n  fullName: WellKnownServiceTypeEntry.ObjectType\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting\n  summary: Gets the <xref href=\"System.Type\"></xref> of the server-activated service type.\n  syntax:\n    content: public Type ObjectType { get; }\n    return:\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> of the server-activated service type.\n  overload: System.Runtime.Remoting.WellKnownServiceTypeEntry.ObjectType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/WellKnownServiceTypeEntry.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.WellKnownServiceTypeEntry.ObjectUri\n  commentId: P:System.Runtime.Remoting.WellKnownServiceTypeEntry.ObjectUri\n  id: ObjectUri\n  parent: System.Runtime.Remoting.WellKnownServiceTypeEntry\n  langs:\n  - csharp\n  name: ObjectUri\n  nameWithType: WellKnownServiceTypeEntry.ObjectUri\n  fullName: WellKnownServiceTypeEntry.ObjectUri\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting\n  summary: Gets the URI of the well-known service type.\n  syntax:\n    content: public string ObjectUri { get; }\n    return:\n      type: System.String\n      description: The URI of the server-activated service type.\n  overload: System.Runtime.Remoting.WellKnownServiceTypeEntry.ObjectUri*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/WellKnownServiceTypeEntry.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.WellKnownServiceTypeEntry.ToString\n  commentId: M:System.Runtime.Remoting.WellKnownServiceTypeEntry.ToString\n  id: ToString\n  parent: System.Runtime.Remoting.WellKnownServiceTypeEntry\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: WellKnownServiceTypeEntry.ToString()\n  fullName: WellKnownServiceTypeEntry.ToString()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting\n  summary: Returns the type name, assembly name, object URI and the <xref href=\"System.Runtime.Remoting.WellKnownObjectMode\"></xref> of the server-activated type as a <xref href=\"System.String\"></xref>.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: The type name, assembly name, object URI, and the <xref href=\"System.Runtime.Remoting.WellKnownObjectMode\"></xref> of the server-activated type as a <xref href=\"System.String\"></xref>.\n  overload: System.Runtime.Remoting.WellKnownServiceTypeEntry.ToString*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/WellKnownServiceTypeEntry.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\nreferences:\n- uid: System.Runtime.Remoting.TypeEntry\n  parent: System.Runtime.Remoting\n  isExternal: false\n  name: TypeEntry\n  nameWithType: TypeEntry\n  fullName: System.Runtime.Remoting.TypeEntry\n- uid: System.Runtime.Remoting.WellKnownServiceTypeEntry.#ctor(System.Type,System.String,System.Runtime.Remoting.WellKnownObjectMode)\n  parent: System.Runtime.Remoting.WellKnownServiceTypeEntry\n  isExternal: false\n  name: WellKnownServiceTypeEntry(Type, String, WellKnownObjectMode)\n  nameWithType: WellKnownServiceTypeEntry.WellKnownServiceTypeEntry(Type, String, WellKnownObjectMode)\n  fullName: WellKnownServiceTypeEntry.WellKnownServiceTypeEntry(Type, String, WellKnownObjectMode)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Runtime.Remoting.WellKnownObjectMode\n  parent: System.Runtime.Remoting\n  isExternal: false\n  name: WellKnownObjectMode\n  nameWithType: WellKnownObjectMode\n  fullName: System.Runtime.Remoting.WellKnownObjectMode\n- uid: System.Runtime.Remoting.WellKnownServiceTypeEntry.#ctor(System.String,System.String,System.String,System.Runtime.Remoting.WellKnownObjectMode)\n  parent: System.Runtime.Remoting.WellKnownServiceTypeEntry\n  isExternal: false\n  name: WellKnownServiceTypeEntry(String, String, String, WellKnownObjectMode)\n  nameWithType: WellKnownServiceTypeEntry.WellKnownServiceTypeEntry(String, String, String, WellKnownObjectMode)\n  fullName: WellKnownServiceTypeEntry.WellKnownServiceTypeEntry(String, String, String, WellKnownObjectMode)\n- uid: System.Runtime.Remoting.WellKnownServiceTypeEntry.ContextAttributes\n  parent: System.Runtime.Remoting.WellKnownServiceTypeEntry\n  isExternal: false\n  name: ContextAttributes\n  nameWithType: WellKnownServiceTypeEntry.ContextAttributes\n  fullName: WellKnownServiceTypeEntry.ContextAttributes\n- uid: System.Runtime.Remoting.Contexts.IContextAttribute\n  name: IContextAttribute\n  nameWithType: IContextAttribute\n  fullName: System.Runtime.Remoting.Contexts.IContextAttribute\n- uid: System.Runtime.Remoting.Contexts.IContextAttribute[]\n  parent: System.Runtime.Remoting.Contexts\n  isExternal: false\n  name: IContextAttribute[]\n  nameWithType: IContextAttribute[]\n  fullName: System.Runtime.Remoting.Contexts.IContextAttribute[]\n  spec.csharp:\n  - uid: System.Runtime.Remoting.Contexts.IContextAttribute\n    name: IContextAttribute\n    nameWithType: IContextAttribute\n    fullName: System.Runtime.Remoting.Contexts.IContextAttribute\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Runtime.Remoting.WellKnownServiceTypeEntry.Mode\n  parent: System.Runtime.Remoting.WellKnownServiceTypeEntry\n  isExternal: false\n  name: Mode\n  nameWithType: WellKnownServiceTypeEntry.Mode\n  fullName: WellKnownServiceTypeEntry.Mode\n- uid: System.Runtime.Remoting.WellKnownServiceTypeEntry.ObjectType\n  parent: System.Runtime.Remoting.WellKnownServiceTypeEntry\n  isExternal: false\n  name: ObjectType\n  nameWithType: WellKnownServiceTypeEntry.ObjectType\n  fullName: WellKnownServiceTypeEntry.ObjectType\n- uid: System.Runtime.Remoting.WellKnownServiceTypeEntry.ObjectUri\n  parent: System.Runtime.Remoting.WellKnownServiceTypeEntry\n  isExternal: false\n  name: ObjectUri\n  nameWithType: WellKnownServiceTypeEntry.ObjectUri\n  fullName: WellKnownServiceTypeEntry.ObjectUri\n- uid: System.Runtime.Remoting.WellKnownServiceTypeEntry.ToString\n  parent: System.Runtime.Remoting.WellKnownServiceTypeEntry\n  isExternal: false\n  name: ToString()\n  nameWithType: WellKnownServiceTypeEntry.ToString()\n  fullName: WellKnownServiceTypeEntry.ToString()\n- uid: System.Runtime.Remoting.WellKnownServiceTypeEntry.#ctor*\n  parent: System.Runtime.Remoting.WellKnownServiceTypeEntry\n  isExternal: false\n  name: WellKnownServiceTypeEntry\n  nameWithType: WellKnownServiceTypeEntry.WellKnownServiceTypeEntry\n  fullName: WellKnownServiceTypeEntry.WellKnownServiceTypeEntry\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/WellKnownServiceTypeEntry.xml\n- uid: System.Runtime.Remoting.WellKnownServiceTypeEntry.ContextAttributes*\n  parent: System.Runtime.Remoting.WellKnownServiceTypeEntry\n  isExternal: false\n  name: ContextAttributes\n  nameWithType: WellKnownServiceTypeEntry.ContextAttributes\n  fullName: WellKnownServiceTypeEntry.ContextAttributes\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/WellKnownServiceTypeEntry.xml\n- uid: System.Runtime.Remoting.WellKnownServiceTypeEntry.Mode*\n  parent: System.Runtime.Remoting.WellKnownServiceTypeEntry\n  isExternal: false\n  name: Mode\n  nameWithType: WellKnownServiceTypeEntry.Mode\n  fullName: WellKnownServiceTypeEntry.Mode\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/WellKnownServiceTypeEntry.xml\n- uid: System.Runtime.Remoting.WellKnownServiceTypeEntry.ObjectType*\n  parent: System.Runtime.Remoting.WellKnownServiceTypeEntry\n  isExternal: false\n  name: ObjectType\n  nameWithType: WellKnownServiceTypeEntry.ObjectType\n  fullName: WellKnownServiceTypeEntry.ObjectType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/WellKnownServiceTypeEntry.xml\n- uid: System.Runtime.Remoting.WellKnownServiceTypeEntry.ObjectUri*\n  parent: System.Runtime.Remoting.WellKnownServiceTypeEntry\n  isExternal: false\n  name: ObjectUri\n  nameWithType: WellKnownServiceTypeEntry.ObjectUri\n  fullName: WellKnownServiceTypeEntry.ObjectUri\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/WellKnownServiceTypeEntry.xml\n- uid: System.Runtime.Remoting.WellKnownServiceTypeEntry.ToString*\n  parent: System.Runtime.Remoting.WellKnownServiceTypeEntry\n  isExternal: false\n  name: ToString\n  nameWithType: WellKnownServiceTypeEntry.ToString\n  fullName: WellKnownServiceTypeEntry.ToString\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/WellKnownServiceTypeEntry.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Runtime.Remoting.TypeEntry.AssemblyName\n  parent: System.Runtime.Remoting.TypeEntry\n  isExternal: false\n  name: AssemblyName\n  nameWithType: TypeEntry.AssemblyName\n  fullName: TypeEntry.AssemblyName\n- uid: System.Runtime.Remoting.TypeEntry.TypeName\n  parent: System.Runtime.Remoting.TypeEntry\n  isExternal: false\n  name: TypeName\n  nameWithType: TypeEntry.TypeName\n  fullName: TypeEntry.TypeName\n"}