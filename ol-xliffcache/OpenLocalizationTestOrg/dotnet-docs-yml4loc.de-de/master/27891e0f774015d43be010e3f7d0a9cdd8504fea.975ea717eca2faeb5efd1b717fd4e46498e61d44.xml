{"nodes":[{"content":"Provides an API to construct <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref>s and allows that API to be accessed as extension methods on the expression type itself.","nodes":[{"pos":[0,182],"content":"Provides an API to construct <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;&lt;/xref&gt;</ph>s and allows that API to be accessed as extension methods on the expression type itself.","source":"Provides an API to construct <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref>s and allows that API to be accessed as extension methods on the expression type itself."}],"pos":[22979,23162],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbFunctionAggregate\"></xref>.","nodes":[{"pos":[0,87],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbFunctionAggregate\"&gt;&lt;/xref&gt;</ph>.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbFunctionAggregate\"></xref>."}],"pos":[25000,25088],"yaml":true},{"content":"The function that defines the aggregate operation.","nodes":[{"pos":[0,50],"content":"The function that defines the aggregate operation.","nodes":[{"content":"The function that defines the aggregate operation.","pos":[0,50]}]}],"pos":[25399,25450],"yaml":true},{"content":"The argument over which the aggregate function should be calculated.","nodes":[{"pos":[0,68],"content":"The argument over which the aggregate function should be calculated.","nodes":[{"content":"The argument over which the aggregate function should be calculated.","pos":[0,68]}]}],"pos":[25545,25614],"yaml":true},{"content":"A new function aggregate with a reference to the given function and argument. The function aggregate's Distinct property will have the value `false`.","nodes":[{"pos":[0,149],"content":"A new function aggregate with a reference to the given function and argument. The function aggregate's Distinct property will have the value `false`.","nodes":[{"content":"A new function aggregate with a reference to the given function and argument.","pos":[0,77]},{"content":"The function aggregate's Distinct property will have the value <ph id=\"ph1\">`false`</ph>.","pos":[78,149],"source":" The function aggregate's Distinct property will have the value `false`."}]}],"pos":[25709,25859],"yaml":true},{"content":"<code>function</code> or <code>argument</code> null.","nodes":[{"pos":[0,52],"content":"<ph id=\"ph1\">&lt;code&gt;function&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;argument&lt;/code&gt;</ph> null.","source":"<code>function</code> or <code>argument</code> null."}],"pos":[26068,26121],"yaml":true},{"content":"<code>function</code> is not an aggregate function or has more than one argument, or the result type of <code>argument</code> is not equal or promotable to the parameter type of <code>function</code>.","nodes":[{"pos":[0,200],"content":"<ph id=\"ph1\">&lt;code&gt;function&lt;/code&gt;</ph> is not an aggregate function or has more than one argument, or the result type of <ph id=\"ph2\">&lt;code&gt;argument&lt;/code&gt;</ph> is not equal or promotable to the parameter type of <ph id=\"ph3\">&lt;code&gt;function&lt;/code&gt;</ph>.","source":"<code>function</code> is not an aggregate function or has more than one argument, or the result type of <code>argument</code> is not equal or promotable to the parameter type of <code>function</code>."}],"pos":[26215,26416],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbFunctionAggregate\"></xref> that is applied in a distinct fashion.","nodes":[{"pos":[0,125],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbFunctionAggregate\"&gt;&lt;/xref&gt;</ph> that is applied in a distinct fashion.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbFunctionAggregate\"></xref> that is applied in a distinct fashion."}],"pos":[27895,28021],"yaml":true},{"content":"The function that defines the aggregate operation.","nodes":[{"pos":[0,50],"content":"The function that defines the aggregate operation.","nodes":[{"content":"The function that defines the aggregate operation.","pos":[0,50]}]}],"pos":[28340,28391],"yaml":true},{"content":"The argument over which the aggregate function should be calculated.","nodes":[{"pos":[0,68],"content":"The argument over which the aggregate function should be calculated.","nodes":[{"content":"The argument over which the aggregate function should be calculated.","pos":[0,68]}]}],"pos":[28486,28555],"yaml":true},{"content":"A new function aggregate with a reference to the given function and argument. The function aggregate's Distinct property will have the value `true`.","nodes":[{"pos":[0,148],"content":"A new function aggregate with a reference to the given function and argument. The function aggregate's Distinct property will have the value `true`.","nodes":[{"content":"A new function aggregate with a reference to the given function and argument.","pos":[0,77]},{"content":"The function aggregate's Distinct property will have the value <ph id=\"ph1\">`true`</ph>.","pos":[78,148],"source":" The function aggregate's Distinct property will have the value `true`."}]}],"pos":[28650,28799],"yaml":true},{"content":"<code>function</code> or <code>argument</code> is null.","nodes":[{"pos":[0,55],"content":"<ph id=\"ph1\">&lt;code&gt;function&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;argument&lt;/code&gt;</ph> is null.","source":"<code>function</code> or <code>argument</code> is null."}],"pos":[29016,29072],"yaml":true},{"content":"<code>function</code> is not an aggregate function or has more than one argument, or the result type of <code>argument</code> is not equal or promotable to the parameter type of <code>function</code>.","nodes":[{"pos":[0,200],"content":"<ph id=\"ph1\">&lt;code&gt;function&lt;/code&gt;</ph> is not an aggregate function or has more than one argument, or the result type of <ph id=\"ph2\">&lt;code&gt;argument&lt;/code&gt;</ph> is not equal or promotable to the parameter type of <ph id=\"ph3\">&lt;code&gt;function&lt;/code&gt;</ph>.","source":"<code>function</code> is not an aggregate function or has more than one argument, or the result type of <code>argument</code> is not equal or promotable to the parameter type of <code>function</code>."}],"pos":[29166,29367],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbQuantifierExpression\"></xref> that determines whether the given predicate holds for all elements of the input set.","nodes":[{"pos":[0,174],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbQuantifierExpression\"&gt;&lt;/xref&gt;</ph> that determines whether the given predicate holds for all elements of the input set.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbQuantifierExpression\"></xref> that determines whether the given predicate holds for all elements of the input set."}],"pos":[31020,31195],"yaml":true},{"content":"An expression that specifies the input set.","nodes":[{"pos":[0,43],"content":"An expression that specifies the input set.","nodes":[{"content":"An expression that specifies the input set.","pos":[0,43]}]}],"pos":[31567,31611],"yaml":true},{"content":"A method representing a predicate to evaluate for each member of the input set.    This method must produce an expression with a Boolean result type that provides the predicate logic.","nodes":[{"pos":[0,183],"content":"A method representing a predicate to evaluate for each member of the input set.    This method must produce an expression with a Boolean result type that provides the predicate logic.","nodes":[{"content":"A method representing a predicate to evaluate for each member of the input set.    This method must produce an expression with a Boolean result type that provides the predicate logic.","pos":[0,183],"nodes":[{"content":"A method representing a predicate to evaluate for each member of the input set.","pos":[0,79]},{"content":"This method must produce an expression with a Boolean result type that provides the predicate logic.","pos":[83,183]}]}]}],"pos":[31765,31949],"yaml":true},{"content":"A new DbQuantifierExpression that represents the All operation.","nodes":[{"pos":[0,63],"content":"A new DbQuantifierExpression that represents the All operation.","nodes":[{"content":"A new DbQuantifierExpression that represents the All operation.","pos":[0,63]}]}],"pos":[32047,32111],"yaml":true},{"content":"The expression produced by <code>predicate</code> is null.","nodes":[{"pos":[0,58],"content":"The expression produced by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">predicate</ph><ept id=\"p1\">&lt;/code&gt;</ept> is null.","source":"The expression produced by <code>predicate</code> is null."}],"pos":[32314,32373],"yaml":true},{"content":"The expression produced by <code>Predicate</code> does not have a Boolean result type.","nodes":[{"pos":[0,86],"content":"The expression produced by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">Predicate</ph><ept id=\"p1\">&lt;/code&gt;</ept> does not have a Boolean result type.","source":"The expression produced by <code>Predicate</code> does not have a Boolean result type."}],"pos":[32467,32554],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbQuantifierExpression\"></xref> that determines whether the given predicate holds for all elements of the input set.","nodes":[{"pos":[0,174],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbQuantifierExpression\"&gt;&lt;/xref&gt;</ph> that determines whether the given predicate holds for all elements of the input set.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbQuantifierExpression\"></xref> that determines whether the given predicate holds for all elements of the input set."}],"pos":[34018,34193],"yaml":true},{"content":"An expression binding that specifies the input set.","nodes":[{"pos":[0,51],"content":"An expression binding that specifies the input set.","nodes":[{"content":"An expression binding that specifies the input set.","pos":[0,51]}]}],"pos":[34526,34578],"yaml":true},{"content":"An expression representing a predicate to evaluate for each member of the input set.","nodes":[{"pos":[0,84],"content":"An expression representing a predicate to evaluate for each member of the input set.","nodes":[{"content":"An expression representing a predicate to evaluate for each member of the input set.","pos":[0,84]}]}],"pos":[34674,34759],"yaml":true},{"content":"A new DbQuantifierExpression that represents the All operation.","nodes":[{"pos":[0,63],"content":"A new DbQuantifierExpression that represents the All operation.","nodes":[{"content":"A new DbQuantifierExpression that represents the All operation.","pos":[0,63]}]}],"pos":[34857,34921],"yaml":true},{"content":"<code>input</code> or <code>predicate</code> is null.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">&lt;code&gt;input&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;predicate&lt;/code&gt;</ph> is null.","source":"<code>input</code> or <code>predicate</code> is null."}],"pos":[35124,35178],"yaml":true},{"content":"<code>predicate</code> does not have a Boolean result type.","nodes":[{"pos":[0,59],"content":"<ph id=\"ph1\">&lt;code&gt;predicate&lt;/code&gt;</ph> does not have a Boolean result type.","source":"<code>predicate</code> does not have a Boolean result type."}],"pos":[35272,35332],"yaml":true},{"content":"Creates an <xref href=\"System.Data.Common.CommandTrees.DbAndExpression\"></xref> that performs the logical And of the left and right arguments.","nodes":[{"pos":[0,142],"content":"Creates an <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbAndExpression\"&gt;&lt;/xref&gt;</ph> that performs the logical And of the left and right arguments.","source":"Creates an <xref href=\"System.Data.Common.CommandTrees.DbAndExpression\"></xref> that performs the logical And of the left and right arguments."}],"pos":[36754,36897],"yaml":true},{"content":"A Boolean expression that specifies the left argument.","nodes":[{"pos":[0,54],"content":"A Boolean expression that specifies the left argument.","nodes":[{"content":"A Boolean expression that specifies the left argument.","pos":[0,54]}]}],"pos":[37203,37258],"yaml":true},{"content":"A Boolean expression that specifies the right argument.","nodes":[{"pos":[0,55],"content":"A Boolean expression that specifies the right argument.","nodes":[{"content":"A Boolean expression that specifies the right argument.","pos":[0,55]}]}],"pos":[37350,37406],"yaml":true},{"content":"A new DbAndExpression with the specified arguments.","nodes":[{"pos":[0,51],"content":"A new DbAndExpression with the specified arguments.","nodes":[{"content":"A new DbAndExpression with the specified arguments.","pos":[0,51]}]}],"pos":[37497,37549],"yaml":true},{"content":"<code>left</code> or <code>right</code> is null.","nodes":[{"pos":[0,48],"content":"<ph id=\"ph1\">&lt;code&gt;left&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;right&lt;/code&gt;</ph> is null.","source":"<code>left</code> or <code>right</code> is null."}],"pos":[37752,37801],"yaml":true},{"content":"<code>left</code> and <code>right</code> does not have a Boolean result type.","nodes":[{"pos":[0,77],"content":"<ph id=\"ph1\">&lt;code&gt;left&lt;/code&gt;</ph> and <ph id=\"ph2\">&lt;code&gt;right&lt;/code&gt;</ph> does not have a Boolean result type.","source":"<code>left</code> and <code>right</code> does not have a Boolean result type."}],"pos":[37895,37973],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that determines whether the specified set argument is non-empty.","nodes":[{"pos":[0,144],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;&lt;/xref&gt;</ph> that determines whether the specified set argument is non-empty.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that determines whether the specified set argument is non-empty."}],"pos":[39218,39363],"yaml":true},{"content":"An expression that specifies the input set.","nodes":[{"pos":[0,43],"content":"An expression that specifies the input set.","nodes":[{"content":"An expression that specifies the input set.","pos":[0,43]}]}],"pos":[39618,39662],"yaml":true},{"content":"A new <xref href=\"System.Data.Common.CommandTrees.DbNotExpression\"></xref> applied to a new <xref href=\"System.Data.Common.CommandTrees.DbIsEmptyExpression\"></xref> with the specified argument.","nodes":[{"pos":[0,193],"content":"A new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbNotExpression\"&gt;&lt;/xref&gt;</ph> applied to a new <ph id=\"ph2\">&lt;xref href=\"System.Data.Common.CommandTrees.DbIsEmptyExpression\"&gt;&lt;/xref&gt;</ph> with the specified argument.","source":"A new <xref href=\"System.Data.Common.CommandTrees.DbNotExpression\"></xref> applied to a new <xref href=\"System.Data.Common.CommandTrees.DbIsEmptyExpression\"></xref> with the specified argument."}],"pos":[39750,39944],"yaml":true},{"content":"<code>source</code> is null.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;source&lt;/code&gt;</ph> is null.","source":"<code>source</code> is null."}],"pos":[40147,40176],"yaml":true},{"content":"<code>source</code> does not have a collection result type.","nodes":[{"pos":[0,59],"content":"<ph id=\"ph1\">&lt;code&gt;source&lt;/code&gt;</ph> does not have a collection result type.","source":"<code>source</code> does not have a collection result type."}],"pos":[40270,40330],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbQuantifierExpression\"></xref> that determines whether the given predicate holds for any element of the input set.","nodes":[{"pos":[0,173],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbQuantifierExpression\"&gt;&lt;/xref&gt;</ph> that determines whether the given predicate holds for any element of the input set.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbQuantifierExpression\"></xref> that determines whether the given predicate holds for any element of the input set."}],"pos":[41983,42157],"yaml":true},{"content":"An expression that specifies the input set.","nodes":[{"pos":[0,43],"content":"An expression that specifies the input set.","nodes":[{"content":"An expression that specifies the input set.","pos":[0,43]}]}],"pos":[42529,42573],"yaml":true},{"content":"A method representing the predicate to evaluate for each member of the input set. This method must produce an expression with a Boolean result type that provides the predicate logic.","nodes":[{"pos":[0,182],"content":"A method representing the predicate to evaluate for each member of the input set. This method must produce an expression with a Boolean result type that provides the predicate logic.","nodes":[{"content":"A method representing the predicate to evaluate for each member of the input set. This method must produce an expression with a Boolean result type that provides the predicate logic.","pos":[0,182],"nodes":[{"content":"A method representing the predicate to evaluate for each member of the input set.","pos":[0,81]},{"content":"This method must produce an expression with a Boolean result type that provides the predicate logic.","pos":[82,182]}]}]}],"pos":[42727,42910],"yaml":true},{"content":"A new DbQuantifierExpression that represents the Any operation.","nodes":[{"pos":[0,63],"content":"A new DbQuantifierExpression that represents the Any operation.","nodes":[{"content":"A new DbQuantifierExpression that represents the Any operation.","pos":[0,63]}]}],"pos":[43008,43072],"yaml":true},{"content":"The expression produced by <code>predicate</code> is null.","nodes":[{"pos":[0,58],"content":"The expression produced by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">predicate</ph><ept id=\"p1\">&lt;/code&gt;</ept> is null.","source":"The expression produced by <code>predicate</code> is null."}],"pos":[43275,43334],"yaml":true},{"content":"The expression produced by <code>predicate</code> does not have a Boolean result type.","nodes":[{"pos":[0,86],"content":"The expression produced by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">predicate</ph><ept id=\"p1\">&lt;/code&gt;</ept> does not have a Boolean result type.","source":"The expression produced by <code>predicate</code> does not have a Boolean result type."}],"pos":[43428,43515],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbQuantifierExpression\"></xref> that determines whether the given predicate holds for any element of the input set.","nodes":[{"pos":[0,173],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbQuantifierExpression\"&gt;&lt;/xref&gt;</ph> that determines whether the given predicate holds for any element of the input set.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbQuantifierExpression\"></xref> that determines whether the given predicate holds for any element of the input set."}],"pos":[44979,45153],"yaml":true},{"content":"An expression binding that specifies the input set.","nodes":[{"pos":[0,51],"content":"An expression binding that specifies the input set.","nodes":[{"content":"An expression binding that specifies the input set.","pos":[0,51]}]}],"pos":[45486,45538],"yaml":true},{"content":"An expression representing a predicate to evaluate for each member of the input set.","nodes":[{"pos":[0,84],"content":"An expression representing a predicate to evaluate for each member of the input set.","nodes":[{"content":"An expression representing a predicate to evaluate for each member of the input set.","pos":[0,84]}]}],"pos":[45634,45719],"yaml":true},{"content":"A new DbQuantifierExpression that represents the Any operation.","nodes":[{"pos":[0,63],"content":"A new DbQuantifierExpression that represents the Any operation.","nodes":[{"content":"A new DbQuantifierExpression that represents the Any operation.","pos":[0,63]}]}],"pos":[45817,45881],"yaml":true},{"content":"<code>input</code> or <code>predicate</code> is null.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">&lt;code&gt;input&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;predicate&lt;/code&gt;</ph> is null.","source":"<code>input</code> or <code>predicate</code> is null."}],"pos":[46084,46138],"yaml":true},{"content":"The expression produced by <code>predicate</code> does not have a Boolean result type.","nodes":[{"pos":[0,86],"content":"The expression produced by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">predicate</ph><ept id=\"p1\">&lt;/code&gt;</ept> does not have a Boolean result type.","source":"The expression produced by <code>predicate</code> does not have a Boolean result type."}],"pos":[46232,46319],"yaml":true},{"content":"Returns the specified arguments as a key/value pair object.","nodes":[{"pos":[0,59],"content":"Returns the specified arguments as a key/value pair object.","nodes":[{"content":"Returns the specified arguments as a key/value pair object.","pos":[0,59]}]}],"pos":[47618,47678],"yaml":true},{"content":"The value in the key/value pair.","nodes":[{"pos":[0,32],"content":"The value in the key/value pair.","nodes":[{"content":"The value in the key/value pair.","pos":[0,32]}]}],"pos":[47989,48022],"yaml":true},{"content":"The key in the key/value pair.","nodes":[{"pos":[0,30],"content":"The key in the key/value pair.","nodes":[{"content":"The key in the key/value pair.","pos":[0,30]}]}],"pos":[48083,48114],"yaml":true},{"content":"A key/value pair object.","nodes":[{"pos":[0,24],"content":"A key/value pair object.","nodes":[{"content":"A key/value pair object.","pos":[0,24]}]}],"pos":[48256,48281],"yaml":true},{"content":"Returns the specified arguments as a key/value pair object.","nodes":[{"pos":[0,59],"content":"Returns the specified arguments as a key/value pair object.","nodes":[{"content":"Returns the specified arguments as a key/value pair object.","pos":[0,59]}]}],"pos":[49689,49749],"yaml":true},{"content":"The value in the key/value pair.","nodes":[{"pos":[0,32],"content":"The value in the key/value pair.","nodes":[{"content":"The value in the key/value pair.","pos":[0,32]}]}],"pos":[50063,50096],"yaml":true},{"content":"The key in the key/value pair.","nodes":[{"pos":[0,30],"content":"The key in the key/value pair.","nodes":[{"content":"The key in the key/value pair.","pos":[0,30]}]}],"pos":[50157,50188],"yaml":true},{"content":"A key/value pair object.","nodes":[{"pos":[0,24],"content":"A key/value pair object.","nodes":[{"content":"A key/value pair object.","pos":[0,24]}]}],"pos":[50331,50356],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbExpressionBinding\"></xref> that uses a generated variable name to bind the given expression.","nodes":[{"pos":[0,152],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpressionBinding\"&gt;&lt;/xref&gt;</ph> that uses a generated variable name to bind the given expression.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbExpressionBinding\"></xref> that uses a generated variable name to bind the given expression."}],"pos":[51710,51863],"yaml":true},{"content":"The expression to bind.","nodes":[{"pos":[0,23],"content":"The expression to bind.","nodes":[{"content":"The expression to bind.","pos":[0,23]}]}],"pos":[52124,52148],"yaml":true},{"content":"A new expression binding with the specified expression and a generated variable name.","nodes":[{"pos":[0,85],"content":"A new expression binding with the specified expression and a generated variable name.","nodes":[{"content":"A new expression binding with the specified expression and a generated variable name.","pos":[0,85]}]}],"pos":[52243,52329],"yaml":true},{"content":"<code>input</code> is null.","nodes":[{"pos":[0,27],"content":"<ph id=\"ph1\">&lt;code&gt;input&lt;/code&gt;</ph> is null.","source":"<code>input</code> is null."}],"pos":[52533,52561],"yaml":true},{"content":"<code>input</code> does not have a collection result.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">&lt;code&gt;input&lt;/code&gt;</ph> does not have a collection result.","source":"<code>input</code> does not have a collection result."}],"pos":[52655,52709],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbExpressionBinding\"></xref> that uses the specified variable name to bind the given expression","nodes":[{"pos":[0,153],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpressionBinding\"&gt;&lt;/xref&gt;</ph> that uses the specified variable name to bind the given expression","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbExpressionBinding\"></xref> that uses the specified variable name to bind the given expression"}],"pos":[54038,54192],"yaml":true},{"content":"The expression to bind.","nodes":[{"pos":[0,23],"content":"The expression to bind.","nodes":[{"content":"The expression to bind.","pos":[0,23]}]}],"pos":[54471,54495],"yaml":true},{"content":"The variable name that should be used for the binding.","nodes":[{"pos":[0,54],"content":"The variable name that should be used for the binding.","nodes":[{"content":"The variable name that should be used for the binding.","pos":[0,54]}]}],"pos":[54558,54613],"yaml":true},{"content":"A new expression binding with the specified expression and variable name.","nodes":[{"pos":[0,73],"content":"A new expression binding with the specified expression and variable name.","nodes":[{"content":"A new expression binding with the specified expression and variable name.","pos":[0,73]}]}],"pos":[54708,54782],"yaml":true},{"content":"<code>input</code> or <code>varName</code> is null.","nodes":[{"pos":[0,51],"content":"<ph id=\"ph1\">&lt;code&gt;input&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;varName&lt;/code&gt;</ph> is null.","source":"<code>input</code> or <code>varName</code> is null."}],"pos":[54988,55040],"yaml":true},{"content":"<code>input</code> does not have a collection result.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">&lt;code&gt;input&lt;/code&gt;</ph> does not have a collection result.","source":"<code>input</code> does not have a collection result."}],"pos":[55134,55188],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbCaseExpression\"></xref>.","nodes":[{"pos":[0,84],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbCaseExpression\"&gt;&lt;/xref&gt;</ph>.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbCaseExpression\"></xref>."}],"pos":[57111,57196],"yaml":true},{"content":"A list of expressions that provide the conditional for of each case.","nodes":[{"pos":[0,68],"content":"A list of expressions that provide the conditional for of each case.","nodes":[{"content":"A list of expressions that provide the conditional for of each case.","pos":[0,68]}]}],"pos":[57712,57781],"yaml":true},{"content":"A list of expressions that provide the result of each case.","nodes":[{"pos":[0,59],"content":"A list of expressions that provide the result of each case.","nodes":[{"content":"A list of expressions that provide the result of each case.","pos":[0,59]}]}],"pos":[57923,57983],"yaml":true},{"content":"An expression that defines the result when no case is matched.","nodes":[{"pos":[0,62],"content":"An expression that defines the result when no case is matched.","nodes":[{"content":"An expression that defines the result when no case is matched.","pos":[0,62]}]}],"pos":[58084,58147],"yaml":true},{"content":"A new DbCaseExpression with the specified cases and default result.","nodes":[{"pos":[0,67],"content":"A new DbCaseExpression with the specified cases and default result.","nodes":[{"content":"A new DbCaseExpression with the specified cases and default result.","pos":[0,67]}]}],"pos":[58239,58307],"yaml":true},{"content":"<code>whenExpressions</code> or <code>thenExpressions</code> is null or contains null, or <code>elseExpression</code> is null.","nodes":[{"pos":[0,126],"content":"<ph id=\"ph1\">&lt;code&gt;whenExpressions&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;thenExpressions&lt;/code&gt;</ph> is null or contains null, or <ph id=\"ph3\">&lt;code&gt;elseExpression&lt;/code&gt;</ph> is null.","source":"<code>whenExpressions</code> or <code>thenExpressions</code> is null or contains null, or <code>elseExpression</code> is null."}],"pos":[58511,58638],"yaml":true},{"content":"<code>whenExpressions</code> or <code>thenExpressions</code> is empty or <code>whenExpressions</code> contains an expression with a non-Boolean result type, or no common result type exists for all expressions in <code>thenExpressions</code> and <code>elseExpression</code>.","nodes":[{"pos":[0,273],"content":"<ph id=\"ph1\">&lt;code&gt;whenExpressions&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;thenExpressions&lt;/code&gt;</ph> is empty or <ph id=\"ph3\">&lt;code&gt;whenExpressions&lt;/code&gt;</ph> contains an expression with a non-Boolean result type, or no common result type exists for all expressions in <ph id=\"ph4\">&lt;code&gt;thenExpressions&lt;/code&gt;</ph> and <ph id=\"ph5\">&lt;code&gt;elseExpression&lt;/code&gt;</ph>.","source":"<code>whenExpressions</code> or <code>thenExpressions</code> is empty or <code>whenExpressions</code> contains an expression with a non-Boolean result type, or no common result type exists for all expressions in <code>thenExpressions</code> and <code>elseExpression</code>."}],"pos":[58732,59006],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbCastExpression\"></xref> that applies a cast operation to a polymorphic argument.","nodes":[{"pos":[0,140],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbCastExpression\"&gt;&lt;/xref&gt;</ph> that applies a cast operation to a polymorphic argument.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbCastExpression\"></xref> that applies a cast operation to a polymorphic argument."}],"pos":[60407,60548],"yaml":true},{"content":"The argument to which the cast should be applied.","nodes":[{"pos":[0,49],"content":"The argument to which the cast should be applied.","nodes":[{"content":"The argument to which the cast should be applied.","pos":[0,49]}]}],"pos":[60857,60907],"yaml":true},{"content":"Type metadata that specifies the type to cast to.","nodes":[{"pos":[0,49],"content":"Type metadata that specifies the type to cast to.","nodes":[{"content":"Type metadata that specifies the type to cast to.","pos":[0,49]}]}],"pos":[60990,61040],"yaml":true},{"content":"A new DbCastExpression with the specified argument and target type.","nodes":[{"pos":[0,67],"content":"A new DbCastExpression with the specified argument and target type.","nodes":[{"content":"A new DbCastExpression with the specified argument and target type.","pos":[0,67]}]}],"pos":[61132,61200],"yaml":true},{"content":"<code>Argument</code> or <code>toType</code> is null.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">&lt;code&gt;Argument&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;toType&lt;/code&gt;</ph> is null.","source":"<code>Argument</code> or <code>toType</code> is null."}],"pos":[61406,61460],"yaml":true},{"content":"The specified cast is not valid.","nodes":[{"pos":[0,32],"content":"The specified cast is not valid.","nodes":[{"content":"The specified cast is not valid.","pos":[0,32]}]}],"pos":[61554,61587],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbConstantExpression\"></xref> of the specified primitive type with the given constant value.","nodes":[{"pos":[0,150],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbConstantExpression\"&gt;&lt;/xref&gt;</ph> of the specified primitive type with the given constant value.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbConstantExpression\"></xref> of the specified primitive type with the given constant value."}],"pos":[62889,63040],"yaml":true},{"content":"The type of the constant value.","nodes":[{"pos":[0,31],"content":"The type of the constant value.","nodes":[{"content":"The type of the constant value.","pos":[0,31]}]}],"pos":[63314,63346],"yaml":true},{"content":"The constant value to represent.","nodes":[{"pos":[0,32],"content":"The constant value to represent.","nodes":[{"content":"The constant value to represent.","pos":[0,32]}]}],"pos":[63407,63440],"yaml":true},{"content":"A new DbConstantExpression with the given value and a result type of <code>constantType</code>.","nodes":[{"pos":[0,95],"content":"A new DbConstantExpression with the given value and a result type of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">constantType</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A new DbConstantExpression with the given value and a result type of <code>constantType</code>."}],"pos":[63536,63632],"yaml":true},{"content":"<code>value</code> or <code>constantType</code> is null.","nodes":[{"pos":[0,56],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;constantType&lt;/code&gt;</ph> is null.","source":"<code>value</code> or <code>constantType</code> is null."}],"pos":[63840,63897],"yaml":true},{"content":"<code>value</code> is not an instance of a valid constant type,  <code>constantType</code> does not represent a primitive type, or <code>value</code> is of a different primitive type than that represented by <code>constantType</code>.","nodes":[{"pos":[0,234],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is not an instance of a valid constant type,  <ph id=\"ph2\">&lt;code&gt;constantType&lt;/code&gt;</ph> does not represent a primitive type, or <ph id=\"ph3\">&lt;code&gt;value&lt;/code&gt;</ph> is of a different primitive type than that represented by <ph id=\"ph4\">&lt;code&gt;constantType&lt;/code&gt;</ph>.","source":"<code>value</code> is not an instance of a valid constant type,  <code>constantType</code> does not represent a primitive type, or <code>value</code> is of a different primitive type than that represented by <code>constantType</code>."}],"pos":[63991,64226],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbConstantExpression\"></xref> with the given constant value.","nodes":[{"pos":[0,118],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbConstantExpression\"&gt;&lt;/xref&gt;</ph> with the given constant value.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbConstantExpression\"></xref> with the given constant value."}],"pos":[65390,65509],"yaml":true},{"content":"The constant value to represent.","nodes":[{"pos":[0,32],"content":"The constant value to represent.","nodes":[{"content":"The constant value to represent.","pos":[0,32]}]}],"pos":[65701,65734],"yaml":true},{"content":"A new DbConstantExpression with the given value.","nodes":[{"pos":[0,48],"content":"A new DbConstantExpression with the given value.","nodes":[{"content":"A new DbConstantExpression with the given value.","pos":[0,48]}]}],"pos":[65830,65879],"yaml":true},{"content":"<code>value</code> is null.","nodes":[{"pos":[0,27],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is null.","source":"<code>value</code> is null."}],"pos":[66087,66115],"yaml":true},{"content":"<code>value</code> is not an instance of a valid constant type.","nodes":[{"pos":[0,63],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is not an instance of a valid constant type.","source":"<code>value</code> is not an instance of a valid constant type."}],"pos":[66209,66273],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbRefExpression\"></xref> that encodes a reference to a specific entity based on key values.","nodes":[{"pos":[0,149],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbRefExpression\"&gt;&lt;/xref&gt;</ph> that encodes a reference to a specific entity based on key values.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbRefExpression\"></xref> that encodes a reference to a specific entity based on key values."}],"pos":[67851,68001],"yaml":true},{"content":"The entity set in which the referenced element resides.","nodes":[{"pos":[0,55],"content":"The entity set in which the referenced element resides.","nodes":[{"content":"The entity set in which the referenced element resides.","pos":[0,55]}]}],"pos":[68347,68403],"yaml":true},{"content":"A collection of <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref>s that provide the key values. These expressions must match (in number, type, and order) the key properties of the referenced entity type.","nodes":[{"pos":[0,219],"content":"A collection of <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref>s that provide the key values. These expressions must match (in number, type, and order) the key properties of the referenced entity type.","nodes":[{"content":"A collection of <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;&lt;/xref&gt;</ph>s that provide the key values.","pos":[0,111],"source":"A collection of <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref>s that provide the key values."},{"content":"These expressions must match (in number, type, and order) the key properties of the referenced entity type.","pos":[112,219]}]}],"pos":[68539,68759],"yaml":true},{"content":"A new DbRefExpression that references the element with the specified key values in the given entity set.","nodes":[{"pos":[0,104],"content":"A new DbRefExpression that references the element with the specified key values in the given entity set.","nodes":[{"content":"A new DbRefExpression that references the element with the specified key values in the given entity set.","pos":[0,104]}]}],"pos":[68850,68955],"yaml":true},{"content":"<code>entitySet</code> is null, or <code>keyValues</code> is null or contains null.","nodes":[{"pos":[0,83],"content":"<ph id=\"ph1\">&lt;code&gt;entitySet&lt;/code&gt;</ph> is null, or <ph id=\"ph2\">&lt;code&gt;keyValues&lt;/code&gt;</ph> is null or contains null.","source":"<code>entitySet</code> is null, or <code>keyValues</code> is null or contains null."}],"pos":[69164,69248],"yaml":true},{"content":"The count of <code>keyValues</code> does not match the count of key members declared by the <code>entitySet</code>’s element type, or <code>keyValues</code> contains an expression with a result type that is not compatible with the type of the corresponding key member.","nodes":[{"pos":[0,268],"content":"The count of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">keyValues</ph><ept id=\"p1\">&lt;/code&gt;</ept> does not match the count of key members declared by the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">entitySet</ph><ept id=\"p2\">&lt;/code&gt;</ept>’s element type, or <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">keyValues</ph><ept id=\"p3\">&lt;/code&gt;</ept> contains an expression with a result type that is not compatible with the type of the corresponding key member.","source":"The count of <code>keyValues</code> does not match the count of key members declared by the <code>entitySet</code>’s element type, or <code>keyValues</code> contains an expression with a result type that is not compatible with the type of the corresponding key member."}],"pos":[69342,69611],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbRefExpression\"></xref> that encodes a reference to a specific entity based on key values.","nodes":[{"pos":[0,149],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbRefExpression\"&gt;&lt;/xref&gt;</ph> that encodes a reference to a specific entity based on key values.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbRefExpression\"></xref> that encodes a reference to a specific entity based on key values."}],"pos":[71042,71192],"yaml":true},{"content":"The entity set in which the referenced element resides.","nodes":[{"pos":[0,55],"content":"The entity set in which the referenced element resides.","nodes":[{"content":"The entity set in which the referenced element resides.","pos":[0,55]}]}],"pos":[71500,71556],"yaml":true},{"content":"A collection of <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref>s that provide the key values. These expressions must match (in number, type, and order) the key properties of the referenced entity type.","nodes":[{"pos":[0,219],"content":"A collection of <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref>s that provide the key values. These expressions must match (in number, type, and order) the key properties of the referenced entity type.","nodes":[{"content":"A collection of <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;&lt;/xref&gt;</ph>s that provide the key values.","pos":[0,111],"source":"A collection of <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref>s that provide the key values."},{"content":"These expressions must match (in number, type, and order) the key properties of the referenced entity type.","pos":[112,219]}]}],"pos":[71654,71874],"yaml":true},{"content":"A new DbRefExpression that references the element with the specified key values in the given entity set.","nodes":[{"pos":[0,104],"content":"A new DbRefExpression that references the element with the specified key values in the given entity set.","nodes":[{"content":"A new DbRefExpression that references the element with the specified key values in the given entity set.","pos":[0,104]}]}],"pos":[71965,72070],"yaml":true},{"content":"<code>entitySet</code> is null, or <code>keyValues</code> is null or contains null.","nodes":[{"pos":[0,83],"content":"<ph id=\"ph1\">&lt;code&gt;entitySet&lt;/code&gt;</ph> is null, or <ph id=\"ph2\">&lt;code&gt;keyValues&lt;/code&gt;</ph> is null or contains null.","source":"<code>entitySet</code> is null, or <code>keyValues</code> is null or contains null."}],"pos":[72279,72363],"yaml":true},{"content":"The count of <code>keyValues</code> does not match the count of key members declared by the <code>entitySet</code>’s element type, or <code>keyValues</code> contains an expression with a result type that is not compatible with the type of the corresponding key member.","nodes":[{"pos":[0,268],"content":"The count of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">keyValues</ph><ept id=\"p1\">&lt;/code&gt;</ept> does not match the count of key members declared by the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">entitySet</ph><ept id=\"p2\">&lt;/code&gt;</ept>’s element type, or <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">keyValues</ph><ept id=\"p3\">&lt;/code&gt;</ept> contains an expression with a result type that is not compatible with the type of the corresponding key member.","source":"The count of <code>keyValues</code> does not match the count of key members declared by the <code>entitySet</code>’s element type, or <code>keyValues</code> contains an expression with a result type that is not compatible with the type of the corresponding key member."}],"pos":[72457,72726],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbRefExpression\"></xref> that encodes a reference to a specific entity of a given type based on key values.","nodes":[{"pos":[0,165],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbRefExpression\"&gt;&lt;/xref&gt;</ph> that encodes a reference to a specific entity of a given type based on key values.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbRefExpression\"></xref> that encodes a reference to a specific entity of a given type based on key values."}],"pos":[74448,74614],"yaml":true},{"content":"The entity set in which the referenced element resides.","nodes":[{"pos":[0,55],"content":"The entity set in which the referenced element resides.","nodes":[{"content":"The entity set in which the referenced element resides.","pos":[0,55]}]}],"pos":[75008,75064],"yaml":true},{"content":"The specific type of the referenced entity. This must be an entity type from the same hierarchy as the entity set's element type.","nodes":[{"pos":[0,129],"content":"The specific type of the referenced entity. This must be an entity type from the same hierarchy as the entity set's element type.","nodes":[{"content":"The specific type of the referenced entity. This must be an entity type from the same hierarchy as the entity set's element type.","pos":[0,129],"nodes":[{"content":"The specific type of the referenced entity.","pos":[0,43]},{"content":"This must be an entity type from the same hierarchy as the entity set's element type.","pos":[44,129]}]}]}],"pos":[75152,75282],"yaml":true},{"content":"A collection of <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref>s that provide the key values. These expressions must match (in number, type, and order) the key properties of the referenced entity type.","nodes":[{"pos":[0,219],"content":"A collection of <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref>s that provide the key values. These expressions must match (in number, type, and order) the key properties of the referenced entity type.","nodes":[{"content":"A collection of <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;&lt;/xref&gt;</ph>s that provide the key values.","pos":[0,111],"source":"A collection of <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref>s that provide the key values."},{"content":"These expressions must match (in number, type, and order) the key properties of the referenced entity type.","pos":[112,219]}]}],"pos":[75418,75638],"yaml":true},{"content":"A new DbRefExpression that references the element with the specified key values in the given entity set.","nodes":[{"pos":[0,104],"content":"A new DbRefExpression that references the element with the specified key values in the given entity set.","nodes":[{"content":"A new DbRefExpression that references the element with the specified key values in the given entity set.","pos":[0,104]}]}],"pos":[75729,75834],"yaml":true},{"content":"<code>entitySet</code> or <code>entityType</code> is null, or <code>keyValues</code> is null or contains null.","nodes":[{"pos":[0,110],"content":"<ph id=\"ph1\">&lt;code&gt;entitySet&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;entityType&lt;/code&gt;</ph> is null, or <ph id=\"ph3\">&lt;code&gt;keyValues&lt;/code&gt;</ph> is null or contains null.","source":"<code>entitySet</code> or <code>entityType</code> is null, or <code>keyValues</code> is null or contains null."}],"pos":[76043,76154],"yaml":true},{"content":"The count of <code>keyValues</code> does not match the count of key members declared by the <code>entitySet</code>’s element type, or <code>keyValues</code> contains an expression with a result type that is not compatible with the type of the corresponding key member.","nodes":[{"pos":[0,268],"content":"The count of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">keyValues</ph><ept id=\"p1\">&lt;/code&gt;</ept> does not match the count of key members declared by the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">entitySet</ph><ept id=\"p2\">&lt;/code&gt;</ept>’s element type, or <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">keyValues</ph><ept id=\"p3\">&lt;/code&gt;</ept> contains an expression with a result type that is not compatible with the type of the corresponding key member.","source":"The count of <code>keyValues</code> does not match the count of key members declared by the <code>entitySet</code>’s element type, or <code>keyValues</code> contains an expression with a result type that is not compatible with the type of the corresponding key member."}],"pos":[76248,76517],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbRefExpression\"></xref> that encodes a reference to a specific entity of a given type based on key values.","nodes":[{"pos":[0,165],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbRefExpression\"&gt;&lt;/xref&gt;</ph> that encodes a reference to a specific entity of a given type based on key values.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbRefExpression\"></xref> that encodes a reference to a specific entity of a given type based on key values."}],"pos":[78092,78258],"yaml":true},{"content":"The entity set in which the referenced element resides.","nodes":[{"pos":[0,55],"content":"The entity set in which the referenced element resides.","nodes":[{"content":"The entity set in which the referenced element resides.","pos":[0,55]}]}],"pos":[78614,78670],"yaml":true},{"content":"The specific type of the referenced entity. This must be an entity type from the same hierarchy as the entity set's element type.","nodes":[{"pos":[0,129],"content":"The specific type of the referenced entity. This must be an entity type from the same hierarchy as the entity set's element type.","nodes":[{"content":"The specific type of the referenced entity. This must be an entity type from the same hierarchy as the entity set's element type.","pos":[0,129],"nodes":[{"content":"The specific type of the referenced entity.","pos":[0,43]},{"content":"This must be an entity type from the same hierarchy as the entity set's element type.","pos":[44,129]}]}]}],"pos":[78758,78888],"yaml":true},{"content":"A collection of <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref>s that provide the key values. These expressions must match (in number, type, and order) the key properties of the referenced entity type.","nodes":[{"pos":[0,219],"content":"A collection of <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref>s that provide the key values. These expressions must match (in number, type, and order) the key properties of the referenced entity type.","nodes":[{"content":"A collection of <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;&lt;/xref&gt;</ph>s that provide the key values.","pos":[0,111],"source":"A collection of <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref>s that provide the key values."},{"content":"These expressions must match (in number, type, and order) the key properties of the referenced entity type.","pos":[112,219]}]}],"pos":[78986,79206],"yaml":true},{"content":"A new DbRefExpression that references the element with the specified key values in the given entity set.","nodes":[{"pos":[0,104],"content":"A new DbRefExpression that references the element with the specified key values in the given entity set.","nodes":[{"content":"A new DbRefExpression that references the element with the specified key values in the given entity set.","pos":[0,104]}]}],"pos":[79297,79402],"yaml":true},{"content":"<code>entitySet</code> or <code>entityType</code> is null, or <code>keyValues</code> is null or contains null.","nodes":[{"pos":[0,110],"content":"<ph id=\"ph1\">&lt;code&gt;entitySet&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;entityType&lt;/code&gt;</ph> is null, or <ph id=\"ph3\">&lt;code&gt;keyValues&lt;/code&gt;</ph> is null or contains null.","source":"<code>entitySet</code> or <code>entityType</code> is null, or <code>keyValues</code> is null or contains null."}],"pos":[79611,79722],"yaml":true},{"content":"The count of <code>keyValues</code> does not match the count of key members declared by the <code>entitySet</code>’s element type, or <code>keyValues</code> contains an expression with a result type that is not compatible with the type of the corresponding key member.","nodes":[{"pos":[0,268],"content":"The count of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">keyValues</ph><ept id=\"p1\">&lt;/code&gt;</ept> does not match the count of key members declared by the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">entitySet</ph><ept id=\"p2\">&lt;/code&gt;</ept>’s element type, or <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">keyValues</ph><ept id=\"p3\">&lt;/code&gt;</ept> contains an expression with a result type that is not compatible with the type of the corresponding key member.","source":"The count of <code>keyValues</code> does not match the count of key members declared by the <code>entitySet</code>’s element type, or <code>keyValues</code> contains an expression with a result type that is not compatible with the type of the corresponding key member."}],"pos":[79816,80085],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbApplyExpression\"></xref> that evaluates the given <code>apply</code> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns. Rows for which <code>apply</code> evaluates to an empty set are not included.","nodes":[{"pos":[0,336],"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbApplyExpression\"></xref> that evaluates the given <code>apply</code> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns. Rows for which <code>apply</code> evaluates to an empty set are not included.","nodes":[{"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbApplyExpression\"&gt;&lt;/xref&gt;</ph> that evaluates the given <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">apply</ph><ept id=\"p1\">&lt;/code&gt;</ept> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.","pos":[0,258],"source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbApplyExpression\"></xref> that evaluates the given <code>apply</code> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns."},{"content":"Rows for which <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">apply</ph><ept id=\"p1\">&lt;/code&gt;</ept> evaluates to an empty set are not included.","pos":[259,336],"source":" Rows for which <code>apply</code> evaluates to an empty set are not included."}]}],"pos":[82008,82345],"yaml":true},{"content":"A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that specifies the input set.","nodes":[{"pos":[0,97],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;&lt;/xref&gt;</ph> that specifies the input set.","source":"A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that specifies the input set."}],"pos":[82763,82861],"yaml":true},{"content":"A method that specifies the logic to evaluate once for each member of the input set.","nodes":[{"pos":[0,84],"content":"A method that specifies the logic to evaluate once for each member of the input set.","nodes":[{"content":"A method that specifies the logic to evaluate once for each member of the input set.","pos":[0,84]}]}],"pos":[83066,83151],"yaml":true},{"content":"An new DbApplyExpression with the specified input and apply bindings and an <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"></xref> of CrossApply.","nodes":[{"pos":[0,160],"content":"An new DbApplyExpression with the specified input and apply bindings and an <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"&gt;&lt;/xref&gt;</ph> of CrossApply.","source":"An new DbApplyExpression with the specified input and apply bindings and an <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"></xref> of CrossApply."}],"pos":[83244,83405],"yaml":true},{"content":"The result of <code>apply</code> contains a name or expression that is null.","nodes":[{"pos":[0,76],"content":"The result of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">apply</ph><ept id=\"p1\">&lt;/code&gt;</ept> contains a name or expression that is null.","source":"The result of <code>apply</code> contains a name or expression that is null."}],"pos":[83615,83692],"yaml":true},{"content":"The result of <code>apply</code> contains a name or expression that is not valid in an expression binding.","nodes":[{"pos":[0,106],"content":"The result of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">apply</ph><ept id=\"p1\">&lt;/code&gt;</ept> contains a name or expression that is not valid in an expression binding.","source":"The result of <code>apply</code> contains a name or expression that is not valid in an expression binding."}],"pos":[83786,83893],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbApplyExpression\"></xref> that evaluates the given <code>apply</code> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns. Rows for which <code>apply</code> evaluates to an empty set are not included.","nodes":[{"pos":[0,336],"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbApplyExpression\"></xref> that evaluates the given <code>apply</code> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns. Rows for which <code>apply</code> evaluates to an empty set are not included.","nodes":[{"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbApplyExpression\"&gt;&lt;/xref&gt;</ph> that evaluates the given <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">apply</ph><ept id=\"p1\">&lt;/code&gt;</ept> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.","pos":[0,258],"source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbApplyExpression\"></xref> that evaluates the given <code>apply</code> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns."},{"content":"Rows for which <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">apply</ph><ept id=\"p1\">&lt;/code&gt;</ept> evaluates to an empty set are not included.","pos":[259,336],"source":" Rows for which <code>apply</code> evaluates to an empty set are not included."}]}],"pos":[85441,85778],"yaml":true},{"content":"An <xref href=\"System.Data.Common.CommandTrees.DbExpressionBinding\"></xref> that specifies the input set.","nodes":[{"pos":[0,105],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpressionBinding\"&gt;&lt;/xref&gt;</ph> that specifies the input set.","source":"An <xref href=\"System.Data.Common.CommandTrees.DbExpressionBinding\"></xref> that specifies the input set."}],"pos":[86116,86222],"yaml":true},{"content":"An <xref href=\"System.Data.Common.CommandTrees.DbExpressionBinding\"></xref> that specifies logic to evaluate once for each member of the input set.","nodes":[{"pos":[0,147],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpressionBinding\"&gt;&lt;/xref&gt;</ph> that specifies logic to evaluate once for each member of the input set.","source":"An <xref href=\"System.Data.Common.CommandTrees.DbExpressionBinding\"></xref> that specifies logic to evaluate once for each member of the input set."}],"pos":[86321,86469],"yaml":true},{"content":"An new DbApplyExpression with the specified input and apply bindings and an <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"></xref> of CrossApply.","nodes":[{"pos":[0,160],"content":"An new DbApplyExpression with the specified input and apply bindings and an <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"&gt;&lt;/xref&gt;</ph> of CrossApply.","source":"An new DbApplyExpression with the specified input and apply bindings and an <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"></xref> of CrossApply."}],"pos":[86562,86723],"yaml":true},{"content":"<code>input</code> or <code>apply</code> is null.","nodes":[{"pos":[0,49],"content":"<ph id=\"ph1\">&lt;code&gt;input&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;apply&lt;/code&gt;</ph> is null.","source":"<code>input</code> or <code>apply</code> is null."}],"pos":[86933,86983],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbCrossJoinExpression\"></xref> that unconditionally joins the sets specified by the list of input expression bindings.","nodes":[{"pos":[0,176],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbCrossJoinExpression\"&gt;&lt;/xref&gt;</ph> that unconditionally joins the sets specified by the list of input expression bindings.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbCrossJoinExpression\"></xref> that unconditionally joins the sets specified by the list of input expression bindings."}],"pos":[88465,88642],"yaml":true},{"content":"A list of expression bindings that specifies the input sets.","nodes":[{"pos":[0,60],"content":"A list of expression bindings that specifies the input sets.","nodes":[{"content":"A list of expression bindings that specifies the input sets.","pos":[0,60]}]}],"pos":[89001,89062],"yaml":true},{"content":"A new DbCrossJoinExpression, with an <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"></xref> of CrossJoin, that represents the unconditional join of the input sets.","nodes":[{"pos":[0,178],"content":"A new DbCrossJoinExpression, with an <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"&gt;&lt;/xref&gt;</ph> of CrossJoin, that represents the unconditional join of the input sets.","source":"A new DbCrossJoinExpression, with an <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"></xref> of CrossJoin, that represents the unconditional join of the input sets."}],"pos":[89159,89338],"yaml":true},{"content":"<code>inputs</code> is null or contains null element.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">&lt;code&gt;inputs&lt;/code&gt;</ph> is null or contains null element.","source":"<code>inputs</code> is null or contains null element."}],"pos":[89547,89601],"yaml":true},{"content":"<code>inputs</code> contains fewer than 2 expression bindings.","nodes":[{"pos":[0,62],"content":"<ph id=\"ph1\">&lt;code&gt;inputs&lt;/code&gt;</ph> contains fewer than 2 expression bindings.","source":"<code>inputs</code> contains fewer than 2 expression bindings."}],"pos":[89695,89758],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbDerefExpression\"></xref> that retrieves a specific Entity given a reference expression.","nodes":[{"pos":[0,147],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbDerefExpression\"&gt;&lt;/xref&gt;</ph> that retrieves a specific Entity given a reference expression.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbDerefExpression\"></xref> that retrieves a specific Entity given a reference expression."}],"pos":[91015,91163],"yaml":true},{"content":"An <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that provides the reference. This expression must have a reference Type.","nodes":[{"pos":[0,141],"content":"An <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that provides the reference. This expression must have a reference Type.","nodes":[{"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;&lt;/xref&gt;</ph> that provides the reference.","pos":[0,97],"source":"An <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that provides the reference."},{"content":"This expression must have a reference Type.","pos":[98,141]}]}],"pos":[91429,91571],"yaml":true},{"content":"A new DbDerefExpression that retrieves the specified Entity.","nodes":[{"pos":[0,60],"content":"A new DbDerefExpression that retrieves the specified Entity.","nodes":[{"content":"A new DbDerefExpression that retrieves the specified Entity.","pos":[0,60]}]}],"pos":[91664,91725],"yaml":true},{"content":"<code>argument</code> is null.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;argument&lt;/code&gt;</ph> is null.","source":"<code>argument</code> is null."}],"pos":[91930,91961],"yaml":true},{"content":"<code>argument</code> does not have a reference result type.","nodes":[{"pos":[0,60],"content":"<ph id=\"ph1\">&lt;code&gt;argument&lt;/code&gt;</ph> does not have a reference result type.","source":"<code>argument</code> does not have a reference result type."}],"pos":[92055,92116],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbDistinctExpression\"></xref> that removes duplicates from the given set argument.","nodes":[{"pos":[0,140],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbDistinctExpression\"&gt;&lt;/xref&gt;</ph> that removes duplicates from the given set argument.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbDistinctExpression\"></xref> that removes duplicates from the given set argument."}],"pos":[93391,93532],"yaml":true},{"content":"An expression that defines the set over which to perfom the distinct operation.","nodes":[{"pos":[0,79],"content":"An expression that defines the set over which to perfom the distinct operation.","nodes":[{"content":"An expression that defines the set over which to perfom the distinct operation.","pos":[0,79]}]}],"pos":[93804,93884],"yaml":true},{"content":"A new DbDistinctExpression that represents the distinct operation applied to the specified set argument.","nodes":[{"pos":[0,104],"content":"A new DbDistinctExpression that represents the distinct operation applied to the specified set argument.","nodes":[{"content":"A new DbDistinctExpression that represents the distinct operation applied to the specified set argument.","pos":[0,104]}]}],"pos":[93980,94085],"yaml":true},{"content":"<code>argument</code> is null.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;argument&lt;/code&gt;</ph> is null.","source":"<code>argument</code> is null."}],"pos":[94293,94324],"yaml":true},{"content":"<code>argument</code> does not have a collection result type.","nodes":[{"pos":[0,61],"content":"<ph id=\"ph1\">&lt;code&gt;argument&lt;/code&gt;</ph> does not have a collection result type.","source":"<code>argument</code> does not have a collection result type."}],"pos":[94418,94480],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbArithmeticExpression\"></xref> that divides the left argument by the right argument.","nodes":[{"pos":[0,143],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbArithmeticExpression\"&gt;&lt;/xref&gt;</ph> that divides the left argument by the right argument.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbArithmeticExpression\"></xref> that divides the left argument by the right argument."}],"pos":[95920,96064],"yaml":true},{"content":"An expression that specifies the left argument.","nodes":[{"pos":[0,47],"content":"An expression that specifies the left argument.","nodes":[{"content":"An expression that specifies the left argument.","pos":[0,47]}]}],"pos":[96380,96428],"yaml":true},{"content":"An expression that specifies the right argument.","nodes":[{"pos":[0,48],"content":"An expression that specifies the right argument.","nodes":[{"content":"An expression that specifies the right argument.","pos":[0,48]}]}],"pos":[96520,96569],"yaml":true},{"content":"A new DbArithmeticExpression representing the division operation.","nodes":[{"pos":[0,65],"content":"A new DbArithmeticExpression representing the division operation.","nodes":[{"content":"A new DbArithmeticExpression representing the division operation.","pos":[0,65]}]}],"pos":[96667,96733],"yaml":true},{"content":"<code>left</code> or <code>right</code> is null.","nodes":[{"pos":[0,48],"content":"<ph id=\"ph1\">&lt;code&gt;left&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;right&lt;/code&gt;</ph> is null.","source":"<code>left</code> or <code>right</code> is null."}],"pos":[96939,96988],"yaml":true},{"content":"No common numeric result type exists between <code>left</code> or <code>right</code>.","nodes":[{"pos":[0,85],"content":"No common numeric result type exists between <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">left</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">right</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"No common numeric result type exists between <code>left</code> or <code>right</code>."}],"pos":[97082,97168],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbElementExpression\"></xref> that converts a set into a singleton.","nodes":[{"pos":[0,124],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbElementExpression\"&gt;&lt;/xref&gt;</ph> that converts a set into a singleton.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbElementExpression\"></xref> that converts a set into a singleton."}],"pos":[98437,98562],"yaml":true},{"content":"An expression that specifies the input set.","nodes":[{"pos":[0,43],"content":"An expression that specifies the input set.","nodes":[{"content":"An expression that specifies the input set.","pos":[0,43]}]}],"pos":[98832,98876],"yaml":true},{"content":"A DbElementExpression that represents the conversion of the set argument to a singleton.","nodes":[{"pos":[0,88],"content":"A DbElementExpression that represents the conversion of the set argument to a singleton.","nodes":[{"content":"A DbElementExpression that represents the conversion of the set argument to a singleton.","pos":[0,88]}]}],"pos":[98971,99060],"yaml":true},{"content":"<code>argument</code> is null.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;argument&lt;/code&gt;</ph> is null.","source":"<code>argument</code> is null."}],"pos":[99267,99298],"yaml":true},{"content":"<code>argument</code> does not have a collection result type.","nodes":[{"pos":[0,61],"content":"<ph id=\"ph1\">&lt;code&gt;argument&lt;/code&gt;</ph> does not have a collection result type.","source":"<code>argument</code> does not have a collection result type."}],"pos":[99392,99454],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbComparisonExpression\"></xref> that compares the left and right arguments for equality.","nodes":[{"pos":[0,146],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbComparisonExpression\"&gt;&lt;/xref&gt;</ph> that compares the left and right arguments for equality.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbComparisonExpression\"></xref> that compares the left and right arguments for equality."}],"pos":[100888,101035],"yaml":true},{"content":"An expression that specifies the left argument.","nodes":[{"pos":[0,47],"content":"An expression that specifies the left argument.","nodes":[{"content":"An expression that specifies the left argument.","pos":[0,47]}]}],"pos":[101350,101398],"yaml":true},{"content":"An expression that specifies the right argument.","nodes":[{"pos":[0,48],"content":"An expression that specifies the right argument.","nodes":[{"content":"An expression that specifies the right argument.","pos":[0,48]}]}],"pos":[101490,101539],"yaml":true},{"content":"A new DbComparisonExpression representing the equality comparison.","nodes":[{"pos":[0,66],"content":"A new DbComparisonExpression representing the equality comparison.","nodes":[{"content":"A new DbComparisonExpression representing the equality comparison.","pos":[0,66]}]}],"pos":[101637,101704],"yaml":true},{"content":"<code>left</code> or <code>right</code> is null.","nodes":[{"pos":[0,48],"content":"<ph id=\"ph1\">&lt;code&gt;left&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;right&lt;/code&gt;</ph> is null.","source":"<code>left</code> or <code>right</code> is null."}],"pos":[101909,101958],"yaml":true},{"content":"No common equality-comparable result type exists between <code>left</code> and <code>right</code>.","nodes":[{"pos":[0,98],"content":"No common equality-comparable result type exists between <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">left</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">right</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"No common equality-comparable result type exists between <code>left</code> and <code>right</code>."}],"pos":[102052,102151],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbExceptExpression\"></xref> that computes the subtraction of the right set argument from the left set argument.","nodes":[{"pos":[0,169],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExceptExpression\"&gt;&lt;/xref&gt;</ph> that computes the subtraction of the right set argument from the left set argument.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbExceptExpression\"></xref> that computes the subtraction of the right set argument from the left set argument."}],"pos":[103591,103761],"yaml":true},{"content":"An expression that defines the left set argument.","nodes":[{"pos":[0,49],"content":"An expression that defines the left set argument.","nodes":[{"content":"An expression that defines the left set argument.","pos":[0,49]}]}],"pos":[104073,104123],"yaml":true},{"content":"An expression that defines the right set argument.","nodes":[{"pos":[0,50],"content":"An expression that defines the right set argument.","nodes":[{"content":"An expression that defines the right set argument.","pos":[0,50]}]}],"pos":[104215,104266],"yaml":true},{"content":"A new DbExceptExpression that represents the difference of the left argument from the right argument.","nodes":[{"pos":[0,101],"content":"A new DbExceptExpression that represents the difference of the left argument from the right argument.","nodes":[{"content":"A new DbExceptExpression that represents the difference of the left argument from the right argument.","pos":[0,101]}]}],"pos":[104360,104462],"yaml":true},{"content":"<code>left</code> or <code>right</code> is null.","nodes":[{"pos":[0,48],"content":"<ph id=\"ph1\">&lt;code&gt;left&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;right&lt;/code&gt;</ph> is null.","source":"<code>left</code> or <code>right</code> is null."}],"pos":[104668,104717],"yaml":true},{"content":"No common collection result type exists between <code>left</code> and <code>right</code>.","nodes":[{"pos":[0,89],"content":"No common collection result type exists between <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">left</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">right</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"No common collection result type exists between <code>left</code> and <code>right</code>."}],"pos":[104811,104901],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that determines whether the specified set argument is non-empty.","nodes":[{"pos":[0,144],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;&lt;/xref&gt;</ph> that determines whether the specified set argument is non-empty.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that determines whether the specified set argument is non-empty."}],"pos":[106164,106309],"yaml":true},{"content":"An expression that specifies the input set.","nodes":[{"pos":[0,43],"content":"An expression that specifies the input set.","nodes":[{"content":"An expression that specifies the input set.","pos":[0,43]}]}],"pos":[106571,106615],"yaml":true},{"content":"A new <xref href=\"System.Data.Common.CommandTrees.DbNotExpression\"></xref> applied to a new <xref href=\"System.Data.Common.CommandTrees.DbIsEmptyExpression\"></xref> with the specified argument.","nodes":[{"pos":[0,193],"content":"A new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbNotExpression\"&gt;&lt;/xref&gt;</ph> applied to a new <ph id=\"ph2\">&lt;xref href=\"System.Data.Common.CommandTrees.DbIsEmptyExpression\"&gt;&lt;/xref&gt;</ph> with the specified argument.","source":"A new <xref href=\"System.Data.Common.CommandTrees.DbNotExpression\"></xref> applied to a new <xref href=\"System.Data.Common.CommandTrees.DbIsEmptyExpression\"></xref> with the specified argument."}],"pos":[106703,106897],"yaml":true},{"content":"<code>argument</code> is null.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;argument&lt;/code&gt;</ph> is null.","source":"<code>argument</code> is null."}],"pos":[107103,107134],"yaml":true},{"content":"<code>argument</code> does not have a collection result type.","nodes":[{"pos":[0,61],"content":"<ph id=\"ph1\">&lt;code&gt;argument&lt;/code&gt;</ph> does not have a collection result type.","source":"<code>argument</code> does not have a collection result type."}],"pos":[107228,107290],"yaml":true},{"content":"Gets a <xref href=\"System.Data.Common.CommandTrees.DbConstantExpression\"></xref> with the Boolean value `false`.","nodes":[{"pos":[0,112],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbConstantExpression\"&gt;&lt;/xref&gt;</ph> with the Boolean value <ph id=\"ph2\">`false`</ph>.","source":"Gets a <xref href=\"System.Data.Common.CommandTrees.DbConstantExpression\"></xref> with the Boolean value `false`."}],"pos":[108373,108486],"yaml":true},{"content":"A <xref href=\"System.Data.Common.CommandTrees.DbConstantExpression\"></xref> with the Boolean value `false`.","nodes":[{"pos":[0,107],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbConstantExpression\"&gt;&lt;/xref&gt;</ph> with the Boolean value <ph id=\"ph2\">`false`</ph>.","source":"A <xref href=\"System.Data.Common.CommandTrees.DbConstantExpression\"></xref> with the Boolean value `false`."}],"pos":[108687,108795],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbFilterExpression\"></xref> that filters the elements in the given input set using the specified predicate.","nodes":[{"pos":[0,165],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbFilterExpression\"&gt;&lt;/xref&gt;</ph> that filters the elements in the given input set using the specified predicate.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbFilterExpression\"></xref> that filters the elements in the given input set using the specified predicate."}],"pos":[110383,110549],"yaml":true},{"content":"An expression binding that specifies the input set.","nodes":[{"pos":[0,51],"content":"An expression binding that specifies the input set.","nodes":[{"content":"An expression binding that specifies the input set.","pos":[0,51]}]}],"pos":[110881,110933],"yaml":true},{"content":"An expression representing a predicate to evaluate for each member of the input set.","nodes":[{"pos":[0,84],"content":"An expression representing a predicate to evaluate for each member of the input set.","nodes":[{"content":"An expression representing a predicate to evaluate for each member of the input set.","pos":[0,84]}]}],"pos":[111029,111114],"yaml":true},{"content":"A new DbFilterExpression that produces the filtered set.","nodes":[{"pos":[0,56],"content":"A new DbFilterExpression that produces the filtered set.","nodes":[{"content":"A new DbFilterExpression that produces the filtered set.","pos":[0,56]}]}],"pos":[111208,111265],"yaml":true},{"content":"<code>input</code> or <code>predicate</code> is null.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">&lt;code&gt;input&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;predicate&lt;/code&gt;</ph> is null.","source":"<code>input</code> or <code>predicate</code> is null."}],"pos":[111471,111525],"yaml":true},{"content":"<code>predicate</code> does not have a Boolean result type.","nodes":[{"pos":[0,59],"content":"<ph id=\"ph1\">&lt;code&gt;predicate&lt;/code&gt;</ph> does not have a Boolean result type.","source":"<code>predicate</code> does not have a Boolean result type."}],"pos":[111619,111679],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbJoinExpression\"></xref> that joins the sets specified by the left and right expressions, on the specified join condition, using FullOuterJoin as the <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"></xref>.","nodes":[{"pos":[0,279],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbJoinExpression\"&gt;&lt;/xref&gt;</ph> that joins the sets specified by the left and right expressions, on the specified join condition, using FullOuterJoin as the <ph id=\"ph2\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"&gt;&lt;/xref&gt;</ph>.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbJoinExpression\"></xref> that joins the sets specified by the left and right expressions, on the specified join condition, using FullOuterJoin as the <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"></xref>."}],"pos":[113743,114023],"yaml":true},{"content":"A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that specifies the left set argument.","nodes":[{"pos":[0,105],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;&lt;/xref&gt;</ph> that specifies the left set argument.","source":"A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that specifies the left set argument."}],"pos":[114496,114602],"yaml":true},{"content":"A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that specifies the right set argument.","nodes":[{"pos":[0,106],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;&lt;/xref&gt;</ph> that specifies the right set argument.","source":"A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that specifies the right set argument."}],"pos":[114694,114801],"yaml":true},{"content":"A method representing the condition on which to join. This method must produce an expression with a Boolean result type that provides the logic of the join condition.","nodes":[{"pos":[0,166],"content":"A method representing the condition on which to join. This method must produce an expression with a Boolean result type that provides the logic of the join condition.","nodes":[{"content":"A method representing the condition on which to join. This method must produce an expression with a Boolean result type that provides the logic of the join condition.","pos":[0,166],"nodes":[{"content":"A method representing the condition on which to join.","pos":[0,53]},{"content":"This method must produce an expression with a Boolean result type that provides the logic of the join condition.","pos":[54,166]}]}]}],"pos":[115004,115171],"yaml":true},{"content":"A new DbJoinExpression, with an <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"></xref> of FullOuterJoin, that represents the full outer join operation applied to the left and right input sets under the given join condition.","nodes":[{"pos":[0,238],"content":"A new DbJoinExpression, with an <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"&gt;&lt;/xref&gt;</ph> of FullOuterJoin, that represents the full outer join operation applied to the left and right input sets under the given join condition.","source":"A new DbJoinExpression, with an <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"></xref> of FullOuterJoin, that represents the full outer join operation applied to the left and right input sets under the given join condition."}],"pos":[115263,115502],"yaml":true},{"content":"The expression produced by <code>joinCondition</code> is null.","nodes":[{"pos":[0,62],"content":"The expression produced by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">joinCondition</ph><ept id=\"p1\">&lt;/code&gt;</ept> is null.","source":"The expression produced by <code>joinCondition</code> is null."}],"pos":[115715,115778],"yaml":true},{"content":"The expression produced by <code>joinCondition</code> does not have a Boolean result type.","nodes":[{"pos":[0,90],"content":"The expression produced by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">joinCondition</ph><ept id=\"p1\">&lt;/code&gt;</ept> does not have a Boolean result type.","source":"The expression produced by <code>joinCondition</code> does not have a Boolean result type."}],"pos":[115872,115963],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbJoinExpression\"></xref> that joins the sets specified by the left and right expression bindings, on the specified join condition, using FullOuterJoin as the <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"></xref>.","nodes":[{"pos":[0,287],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbJoinExpression\"&gt;&lt;/xref&gt;</ph> that joins the sets specified by the left and right expression bindings, on the specified join condition, using FullOuterJoin as the <ph id=\"ph2\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"&gt;&lt;/xref&gt;</ph>.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbJoinExpression\"></xref> that joins the sets specified by the left and right expression bindings, on the specified join condition, using FullOuterJoin as the <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"></xref>."}],"pos":[117706,117994],"yaml":true},{"content":"An <xref href=\"System.Data.Common.CommandTrees.DbExpressionBinding\"></xref> that specifies the left set argument.","nodes":[{"pos":[0,113],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpressionBinding\"&gt;&lt;/xref&gt;</ph> that specifies the left set argument.","source":"An <xref href=\"System.Data.Common.CommandTrees.DbExpressionBinding\"></xref> that specifies the left set argument."}],"pos":[118392,118506],"yaml":true},{"content":"An <xref href=\"System.Data.Common.CommandTrees.DbExpressionBinding\"></xref> that specifies the right set argument.","nodes":[{"pos":[0,114],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpressionBinding\"&gt;&lt;/xref&gt;</ph> that specifies the right set argument.","source":"An <xref href=\"System.Data.Common.CommandTrees.DbExpressionBinding\"></xref> that specifies the right set argument."}],"pos":[118605,118720],"yaml":true},{"content":"An expression that specifies the condition on which to join.","nodes":[{"pos":[0,60],"content":"An expression that specifies the condition on which to join.","nodes":[{"content":"An expression that specifies the condition on which to join.","pos":[0,60]}]}],"pos":[118820,118881],"yaml":true},{"content":"A new DbJoinExpression, with an <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"></xref> of FullOuterJoin, that represents the full outer join operation applied to the left and right     input sets under the given join condition.","nodes":[{"pos":[0,242],"content":"A new DbJoinExpression, with an <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"&gt;&lt;/xref&gt;</ph> of FullOuterJoin, that represents the full outer join operation applied to the left and right     input sets under the given join condition.","source":"A new DbJoinExpression, with an <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"></xref> of FullOuterJoin, that represents the full outer join operation applied to the left and right     input sets under the given join condition."}],"pos":[118973,119216],"yaml":true},{"content":"<code>left</code>,  <code>right</code> or <code>joinCondition</code> is null.","nodes":[{"pos":[0,77],"content":"<ph id=\"ph1\">&lt;code&gt;left&lt;/code&gt;</ph>,  <ph id=\"ph2\">&lt;code&gt;right&lt;/code&gt;</ph> or <ph id=\"ph3\">&lt;code&gt;joinCondition&lt;/code&gt;</ph> is null.","source":"<code>left</code>,  <code>right</code> or <code>joinCondition</code> is null."}],"pos":[119429,119507],"yaml":true},{"content":"The expression produced by <code>joinCondition</code> does not have a Boolean result type.","nodes":[{"pos":[0,90],"content":"The expression produced by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">joinCondition</ph><ept id=\"p1\">&lt;/code&gt;</ept> does not have a Boolean result type.","source":"The expression produced by <code>joinCondition</code> does not have a Boolean result type."}],"pos":[119601,119692],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbEntityRefExpression\"></xref> that retrieves the ref of the specifed entity in structural form.","nodes":[{"pos":[0,154],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbEntityRefExpression\"&gt;&lt;/xref&gt;</ph> that retrieves the ref of the specifed entity in structural form.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbEntityRefExpression\"></xref> that retrieves the ref of the specifed entity in structural form."}],"pos":[120991,121146],"yaml":true},{"content":"The expression that provides the entity. This expression must have an entity result type.","nodes":[{"pos":[0,89],"content":"The expression that provides the entity. This expression must have an entity result type.","nodes":[{"content":"The expression that provides the entity. This expression must have an entity result type.","pos":[0,89],"nodes":[{"content":"The expression that provides the entity.","pos":[0,40]},{"content":"This expression must have an entity result type.","pos":[41,89]}]}]}],"pos":[121423,121513],"yaml":true},{"content":"A new DbEntityRefExpression that retrieves a reference to the specified entity.","nodes":[{"pos":[0,79],"content":"A new DbEntityRefExpression that retrieves a reference to the specified entity.","nodes":[{"content":"A new DbEntityRefExpression that retrieves a reference to the specified entity.","pos":[0,79]}]}],"pos":[121610,121690],"yaml":true},{"content":"<code>argument</code> is null.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;argument&lt;/code&gt;</ph> is null.","source":"<code>argument</code> is null."}],"pos":[121902,121933],"yaml":true},{"content":"<code>argument</code> does not have an entity result type.","nodes":[{"pos":[0,58],"content":"<ph id=\"ph1\">&lt;code&gt;argument&lt;/code&gt;</ph> does not have an entity result type.","source":"<code>argument</code> does not have an entity result type."}],"pos":[122027,122086],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbRefKeyExpression\"></xref> that retrieves the key values of the specifed reference in structural form.","nodes":[{"pos":[0,161],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbRefKeyExpression\"&gt;&lt;/xref&gt;</ph> that retrieves the key values of the specifed reference in structural form.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbRefKeyExpression\"></xref> that retrieves the key values of the specifed reference in structural form."}],"pos":[123367,123529],"yaml":true},{"content":"The expression that provides the reference. This expression must have a reference Type with an Entity element type.","nodes":[{"pos":[0,115],"content":"The expression that provides the reference. This expression must have a reference Type with an Entity element type.","nodes":[{"content":"The expression that provides the reference. This expression must have a reference Type with an Entity element type.","pos":[0,115],"nodes":[{"content":"The expression that provides the reference.","pos":[0,43]},{"content":"This expression must have a reference Type with an Entity element type.","pos":[44,115]}]}]}],"pos":[123800,123916],"yaml":true},{"content":"A new DbRefKeyExpression that retrieves the key values of the specified reference.","nodes":[{"pos":[0,82],"content":"A new DbRefKeyExpression that retrieves the key values of the specified reference.","nodes":[{"content":"A new DbRefKeyExpression that retrieves the key values of the specified reference.","pos":[0,82]}]}],"pos":[124010,124093],"yaml":true},{"content":"<code>argument</code> is null.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;argument&lt;/code&gt;</ph> is null.","source":"<code>argument</code> is null."}],"pos":[124302,124333],"yaml":true},{"content":"<code>argument</code> does not have a reference result type.","nodes":[{"pos":[0,60],"content":"<ph id=\"ph1\">&lt;code&gt;argument&lt;/code&gt;</ph> does not have a reference result type.","source":"<code>argument</code> does not have a reference result type."}],"pos":[124427,124488],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbComparisonExpression\"></xref> that determines whether the left argument is greater than the right argument.","nodes":[{"pos":[0,167],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbComparisonExpression\"&gt;&lt;/xref&gt;</ph> that determines whether the left argument is greater than the right argument.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbComparisonExpression\"></xref> that determines whether the left argument is greater than the right argument."}],"pos":[125958,126126],"yaml":true},{"content":"An expression that specifies the left argument.","nodes":[{"pos":[0,47],"content":"An expression that specifies the left argument.","nodes":[{"content":"An expression that specifies the left argument.","pos":[0,47]}]}],"pos":[126447,126495],"yaml":true},{"content":"An expression that specifies the right argument.","nodes":[{"pos":[0,48],"content":"An expression that specifies the right argument.","nodes":[{"content":"An expression that specifies the right argument.","pos":[0,48]}]}],"pos":[126587,126636],"yaml":true},{"content":"A new DbComparisonExpression representing the greater-than comparison.","nodes":[{"pos":[0,70],"content":"A new DbComparisonExpression representing the greater-than comparison.","nodes":[{"content":"A new DbComparisonExpression representing the greater-than comparison.","pos":[0,70]}]}],"pos":[126734,126805],"yaml":true},{"content":"<code>left</code> or <code>right</code> is null.","nodes":[{"pos":[0,48],"content":"<ph id=\"ph1\">&lt;code&gt;left&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;right&lt;/code&gt;</ph> is null.","source":"<code>left</code> or <code>right</code> is null."}],"pos":[127016,127065],"yaml":true},{"content":"No common order-comparable result type exists between <code>left</code> and <code>right</code>.","nodes":[{"pos":[0,95],"content":"No common order-comparable result type exists between <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">left</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">right</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"No common order-comparable result type exists between <code>left</code> and <code>right</code>."}],"pos":[127159,127255],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbComparisonExpression\"></xref> that determines whether the left argument is greater than or equal to the right argument.","nodes":[{"pos":[0,179],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbComparisonExpression\"&gt;&lt;/xref&gt;</ph> that determines whether the left argument is greater than or equal to the right argument.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbComparisonExpression\"></xref> that determines whether the left argument is greater than or equal to the right argument."}],"pos":[128767,128947],"yaml":true},{"content":"An expression that specifies the left argument.","nodes":[{"pos":[0,47],"content":"An expression that specifies the left argument.","nodes":[{"content":"An expression that specifies the left argument.","pos":[0,47]}]}],"pos":[129275,129323],"yaml":true},{"content":"An expression that specifies the right argument.","nodes":[{"pos":[0,48],"content":"An expression that specifies the right argument.","nodes":[{"content":"An expression that specifies the right argument.","pos":[0,48]}]}],"pos":[129415,129464],"yaml":true},{"content":"A new DbComparisonExpression representing the greater-than-or-equal-to comparison.","nodes":[{"pos":[0,82],"content":"A new DbComparisonExpression representing the greater-than-or-equal-to comparison.","nodes":[{"content":"A new DbComparisonExpression representing the greater-than-or-equal-to comparison.","pos":[0,82]}]}],"pos":[129562,129645],"yaml":true},{"content":"<code>left</code> or <code>right</code> is null.","nodes":[{"pos":[0,48],"content":"<ph id=\"ph1\">&lt;code&gt;left&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;right&lt;/code&gt;</ph> is null.","source":"<code>left</code> or <code>right</code> is null."}],"pos":[129863,129912],"yaml":true},{"content":"No common order-comparable result type exists between <code>left</code> and <code>right</code>.","nodes":[{"pos":[0,95],"content":"No common order-comparable result type exists between <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">left</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">right</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"No common order-comparable result type exists between <code>left</code> and <code>right</code>."}],"pos":[130006,130102],"yaml":true},{"content":"Creates a new group expression binding that uses generated variable and group variable names to bind the given expression.","nodes":[{"pos":[0,122],"content":"Creates a new group expression binding that uses generated variable and group variable names to bind the given expression.","nodes":[{"content":"Creates a new group expression binding that uses generated variable and group variable names to bind the given expression.","pos":[0,122]}]}],"pos":[131383,131506],"yaml":true},{"content":"The expression to bind.","nodes":[{"pos":[0,23],"content":"The expression to bind.","nodes":[{"content":"The expression to bind.","pos":[0,23]}]}],"pos":[131777,131801],"yaml":true},{"content":"A new group expression binding with the specified expression and a generated variable name and group variable name.","nodes":[{"pos":[0,115],"content":"A new group expression binding with the specified expression and a generated variable name and group variable name.","nodes":[{"content":"A new group expression binding with the specified expression and a generated variable name and group variable name.","pos":[0,115]}]}],"pos":[131901,132017],"yaml":true},{"content":"<code>input</code> is null.","nodes":[{"pos":[0,27],"content":"<ph id=\"ph1\">&lt;code&gt;input&lt;/code&gt;</ph> is null.","source":"<code>input</code> is null."}],"pos":[132226,132254],"yaml":true},{"content":"<code>input</code> does not have a collection result type.","nodes":[{"pos":[0,58],"content":"<ph id=\"ph1\">&lt;code&gt;input&lt;/code&gt;</ph> does not have a collection result type.","source":"<code>input</code> does not have a collection result type."}],"pos":[132348,132407],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbGroupExpressionBinding\"></xref> that uses the specified variable name and group variable names to bind the given expression.","nodes":[{"pos":[0,184],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbGroupExpressionBinding\"&gt;&lt;/xref&gt;</ph> that uses the specified variable name and group variable names to bind the given expression.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbGroupExpressionBinding\"></xref> that uses the specified variable name and group variable names to bind the given expression."}],"pos":[133832,134017],"yaml":true},{"content":"The expression to bind.","nodes":[{"pos":[0,23],"content":"The expression to bind.","nodes":[{"content":"The expression to bind.","pos":[0,23]}]}],"pos":[134327,134351],"yaml":true},{"content":"The variable name that should be used for the binding.","nodes":[{"pos":[0,54],"content":"The variable name that should be used for the binding.","nodes":[{"content":"The variable name that should be used for the binding.","pos":[0,54]}]}],"pos":[134414,134469],"yaml":true},{"content":"The variable name that should be used to refer to the group when the new group expression binding is used in a group-by expression.","nodes":[{"pos":[0,131],"content":"The variable name that should be used to refer to the group when the new group expression binding is used in a group-by expression.","nodes":[{"content":"The variable name that should be used to refer to the group when the new group expression binding is used in a group-by expression.","pos":[0,131]}]}],"pos":[134537,134669],"yaml":true},{"content":"A new group expression binding with the specified expression, variable name and group variable name.","nodes":[{"pos":[0,100],"content":"A new group expression binding with the specified expression, variable name and group variable name.","nodes":[{"content":"A new group expression binding with the specified expression, variable name and group variable name.","pos":[0,100]}]}],"pos":[134769,134870],"yaml":true},{"content":"<code>input</code>,  <code>varName</code> or <code>groupVarName</code> is null.","nodes":[{"pos":[0,79],"content":"<ph id=\"ph1\">&lt;code&gt;input&lt;/code&gt;</ph>,  <ph id=\"ph2\">&lt;code&gt;varName&lt;/code&gt;</ph> or <ph id=\"ph3\">&lt;code&gt;groupVarName&lt;/code&gt;</ph> is null.","source":"<code>input</code>,  <code>varName</code> or <code>groupVarName</code> is null."}],"pos":[135081,135161],"yaml":true},{"content":"<code>input</code> does not have a collection result type.","nodes":[{"pos":[0,58],"content":"<ph id=\"ph1\">&lt;code&gt;input&lt;/code&gt;</ph> does not have a collection result type.","source":"<code>input</code> does not have a collection result type."}],"pos":[135255,135314],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbGroupByExpression\"></xref> that groups the elements of the input set according to the specified group keys and applies the given aggregates.","nodes":[{"pos":[0,200],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbGroupByExpression\"&gt;&lt;/xref&gt;</ph> that groups the elements of the input set according to the specified group keys and applies the given aggregates.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbGroupByExpression\"></xref> that groups the elements of the input set according to the specified group keys and applies the given aggregates."}],"pos":[137777,137978],"yaml":true},{"content":"DbGroupByExpression allows either the list of keys or the list of aggregates to be empty, but not both.","nodes":[{"pos":[0,103],"content":"DbGroupByExpression allows either the list of keys or the list of aggregates to be empty, but not both.","nodes":[{"content":"DbGroupByExpression allows either the list of keys or the list of aggregates to be empty, but not both.","pos":[0,103]}]}],"pos":[137989,138093],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Data.Common.CommandTrees.DbGroupExpressionBinding\"></xref> that specifies the input set.","nodes":[{"pos":[0,109],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbGroupExpressionBinding\"&gt;&lt;/xref&gt;</ph> that specifies the input set.","source":"A <xref href=\"System.Data.Common.CommandTrees.DbGroupExpressionBinding\"></xref> that specifies the input set."}],"pos":[138664,138774],"yaml":true},{"content":"A list of string-expression pairs that define the grouping columns.","nodes":[{"pos":[0,67],"content":"A list of string-expression pairs that define the grouping columns.","nodes":[{"content":"A list of string-expression pairs that define the grouping columns.","pos":[0,67]}]}],"pos":[138960,139028],"yaml":true},{"content":"A list of expressions that specify aggregates to apply.","nodes":[{"pos":[0,55],"content":"A list of expressions that specify aggregates to apply.","nodes":[{"content":"A list of expressions that specify aggregates to apply.","pos":[0,55]}]}],"pos":[139219,139275],"yaml":true},{"content":"A new DbGroupByExpression with the specified input set, grouping keys and aggregates.","nodes":[{"pos":[0,85],"content":"A new DbGroupByExpression with the specified input set, grouping keys and aggregates.","nodes":[{"content":"A new DbGroupByExpression with the specified input set, grouping keys and aggregates.","pos":[0,85]}]}],"pos":[139370,139456],"yaml":true},{"content":"<code>input</code>,  <code>keys</code> or <code>aggregates</code> is null,  <code>keys</code> contains a null column key or expression, or <code>aggregates</code> contains a null aggregate column name or aggregate.","nodes":[{"pos":[0,214],"content":"<ph id=\"ph1\">&lt;code&gt;input&lt;/code&gt;</ph>,  <ph id=\"ph2\">&lt;code&gt;keys&lt;/code&gt;</ph> or <ph id=\"ph3\">&lt;code&gt;aggregates&lt;/code&gt;</ph> is null,  <ph id=\"ph4\">&lt;code&gt;keys&lt;/code&gt;</ph> contains a null column key or expression, or <ph id=\"ph5\">&lt;code&gt;aggregates&lt;/code&gt;</ph> contains a null aggregate column name or aggregate.","source":"<code>input</code>,  <code>keys</code> or <code>aggregates</code> is null,  <code>keys</code> contains a null column key or expression, or <code>aggregates</code> contains a null aggregate column name or aggregate."}],"pos":[139663,139878],"yaml":true},{"content":"Both <code>keys</code> and <code>aggregates</code> are empty, or an invalid or duplicate column name was specified.","nodes":[{"pos":[0,115],"content":"Both <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">keys</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">aggregates</ph><ept id=\"p2\">&lt;/code&gt;</ept> are empty, or an invalid or duplicate column name was specified.","source":"Both <code>keys</code> and <code>aggregates</code> are empty, or an invalid or duplicate column name was specified."}],"pos":[139972,140088],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbJoinExpression\"></xref> that joins the sets specified by the left and right expressions, on the specified join condition, using InnerJoin as the <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"></xref>.","nodes":[{"pos":[0,275],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbJoinExpression\"&gt;&lt;/xref&gt;</ph> that joins the sets specified by the left and right expressions, on the specified join condition, using InnerJoin as the <ph id=\"ph2\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"&gt;&lt;/xref&gt;</ph>.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbJoinExpression\"></xref> that joins the sets specified by the left and right expressions, on the specified join condition, using InnerJoin as the <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"></xref>."}],"pos":[142128,142404],"yaml":true},{"content":"A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that specifies the left set argument.","nodes":[{"pos":[0,105],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;&lt;/xref&gt;</ph> that specifies the left set argument.","source":"A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that specifies the left set argument."}],"pos":[142873,142979],"yaml":true},{"content":"A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that specifies the right set argument.","nodes":[{"pos":[0,106],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;&lt;/xref&gt;</ph> that specifies the right set argument.","source":"A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that specifies the right set argument."}],"pos":[143071,143178],"yaml":true},{"content":"A method representing the condition on which to join. This method must produce an expression with a Boolean result type that provides the logic of the join condition.","nodes":[{"pos":[0,166],"content":"A method representing the condition on which to join. This method must produce an expression with a Boolean result type that provides the logic of the join condition.","nodes":[{"content":"A method representing the condition on which to join. This method must produce an expression with a Boolean result type that provides the logic of the join condition.","pos":[0,166],"nodes":[{"content":"A method representing the condition on which to join.","pos":[0,53]},{"content":"This method must produce an expression with a Boolean result type that provides the logic of the join condition.","pos":[54,166]}]}]}],"pos":[143381,143548],"yaml":true},{"content":"A new DbJoinExpression, with an <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"></xref> of InnerJoin, that represents the inner join operation applied to the left and right input sets under the given join condition.","nodes":[{"pos":[0,229],"content":"A new DbJoinExpression, with an <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"&gt;&lt;/xref&gt;</ph> of InnerJoin, that represents the inner join operation applied to the left and right input sets under the given join condition.","source":"A new DbJoinExpression, with an <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"></xref> of InnerJoin, that represents the inner join operation applied to the left and right input sets under the given join condition."}],"pos":[143640,143870],"yaml":true},{"content":"The expression produced by <code>joinCondition</code> is null.","nodes":[{"pos":[0,62],"content":"The expression produced by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">joinCondition</ph><ept id=\"p1\">&lt;/code&gt;</ept> is null.","source":"The expression produced by <code>joinCondition</code> is null."}],"pos":[144079,144142],"yaml":true},{"content":"The expression produced by <code>joinCondition</code> does not have a Boolean result type.","nodes":[{"pos":[0,90],"content":"The expression produced by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">joinCondition</ph><ept id=\"p1\">&lt;/code&gt;</ept> does not have a Boolean result type.","source":"The expression produced by <code>joinCondition</code> does not have a Boolean result type."}],"pos":[144236,144327],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbJoinExpression\"></xref> that joins the sets specified by the left and right expression bindings, on the specified join condition, using InnerJoin as the <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"></xref>.","nodes":[{"pos":[0,283],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbJoinExpression\"&gt;&lt;/xref&gt;</ph> that joins the sets specified by the left and right expression bindings, on the specified join condition, using InnerJoin as the <ph id=\"ph2\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"&gt;&lt;/xref&gt;</ph>.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbJoinExpression\"></xref> that joins the sets specified by the left and right expression bindings, on the specified join condition, using InnerJoin as the <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"></xref>."}],"pos":[146046,146330],"yaml":true},{"content":"An <xref href=\"System.Data.Common.CommandTrees.DbExpressionBinding\"></xref> that specifies the left set argument.","nodes":[{"pos":[0,113],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpressionBinding\"&gt;&lt;/xref&gt;</ph> that specifies the left set argument.","source":"An <xref href=\"System.Data.Common.CommandTrees.DbExpressionBinding\"></xref> that specifies the left set argument."}],"pos":[146724,146838],"yaml":true},{"content":"An <xref href=\"System.Data.Common.CommandTrees.DbExpressionBinding\"></xref> that specifies the right set argument.","nodes":[{"pos":[0,114],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpressionBinding\"&gt;&lt;/xref&gt;</ph> that specifies the right set argument.","source":"An <xref href=\"System.Data.Common.CommandTrees.DbExpressionBinding\"></xref> that specifies the right set argument."}],"pos":[146937,147052],"yaml":true},{"content":"An expression that specifies the condition on which to join.","nodes":[{"pos":[0,60],"content":"An expression that specifies the condition on which to join.","nodes":[{"content":"An expression that specifies the condition on which to join.","pos":[0,60]}]}],"pos":[147152,147213],"yaml":true},{"content":"A new DbJoinExpression, with an <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"></xref> of InnerJoin, that represents the inner join operation applied to the left and right     input sets under the given join condition.","nodes":[{"pos":[0,233],"content":"A new DbJoinExpression, with an <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"&gt;&lt;/xref&gt;</ph> of InnerJoin, that represents the inner join operation applied to the left and right     input sets under the given join condition.","source":"A new DbJoinExpression, with an <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"></xref> of InnerJoin, that represents the inner join operation applied to the left and right     input sets under the given join condition."}],"pos":[147305,147539],"yaml":true},{"content":"<code>left</code>,  <code>right</code> or <code>joinCondition</code> is null.","nodes":[{"pos":[0,77],"content":"<ph id=\"ph1\">&lt;code&gt;left&lt;/code&gt;</ph>,  <ph id=\"ph2\">&lt;code&gt;right&lt;/code&gt;</ph> or <ph id=\"ph3\">&lt;code&gt;joinCondition&lt;/code&gt;</ph> is null.","source":"<code>left</code>,  <code>right</code> or <code>joinCondition</code> is null."}],"pos":[147748,147826],"yaml":true},{"content":"<code>joinCondition</code> does not have a Boolean result type.","nodes":[{"pos":[0,63],"content":"<ph id=\"ph1\">&lt;code&gt;joinCondition&lt;/code&gt;</ph> does not have a Boolean result type.","source":"<code>joinCondition</code> does not have a Boolean result type."}],"pos":[147920,147984],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbIntersectExpression\"></xref> that computes the intersection of the left and right set arguments.","nodes":[{"pos":[0,156],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbIntersectExpression\"&gt;&lt;/xref&gt;</ph> that computes the intersection of the left and right set arguments.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbIntersectExpression\"></xref> that computes the intersection of the left and right set arguments."}],"pos":[149442,149599],"yaml":true},{"content":"An expression that defines the left set argument.","nodes":[{"pos":[0,49],"content":"An expression that defines the left set argument.","nodes":[{"content":"An expression that defines the left set argument.","pos":[0,49]}]}],"pos":[149917,149967],"yaml":true},{"content":"An expression that defines the right set argument.","nodes":[{"pos":[0,50],"content":"An expression that defines the right set argument.","nodes":[{"content":"An expression that defines the right set argument.","pos":[0,50]}]}],"pos":[150059,150110],"yaml":true},{"content":"A new DbIntersectExpression that represents the intersection of the left and right arguments.","nodes":[{"pos":[0,93],"content":"A new DbIntersectExpression that represents the intersection of the left and right arguments.","nodes":[{"content":"A new DbIntersectExpression that represents the intersection of the left and right arguments.","pos":[0,93]}]}],"pos":[150207,150301],"yaml":true},{"content":"<code>left</code> or <code>right</code> is null.","nodes":[{"pos":[0,48],"content":"<ph id=\"ph1\">&lt;code&gt;left&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;right&lt;/code&gt;</ph> is null.","source":"<code>left</code> or <code>right</code> is null."}],"pos":[150510,150559],"yaml":true},{"content":"No common collection result type exists between <code>left</code> or <code>right</code>.","nodes":[{"pos":[0,88],"content":"No common collection result type exists between <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">left</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">right</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"No common collection result type exists between <code>left</code> or <code>right</code>."}],"pos":[150653,150742],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbFunctionExpression\"></xref> representing the invocation of the specified function with the given arguments.","nodes":[{"pos":[0,167],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbFunctionExpression\"&gt;&lt;/xref&gt;</ph> representing the invocation of the specified function with the given arguments.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbFunctionExpression\"></xref> representing the invocation of the specified function with the given arguments."}],"pos":[152167,152335],"yaml":true},{"content":"Metadata for the function to invoke.","nodes":[{"pos":[0,36],"content":"Metadata for the function to invoke.","nodes":[{"content":"Metadata for the function to invoke.","pos":[0,36]}]}],"pos":[152647,152684],"yaml":true},{"content":"Expressions that provide the arguments to the function.","nodes":[{"pos":[0,55],"content":"Expressions that provide the arguments to the function.","nodes":[{"content":"Expressions that provide the arguments to the function.","pos":[0,55]}]}],"pos":[152782,152838],"yaml":true},{"content":"A new DbFunctionExpression representing the function invocation.","nodes":[{"pos":[0,64],"content":"A new DbFunctionExpression representing the function invocation.","nodes":[{"content":"A new DbFunctionExpression representing the function invocation.","pos":[0,64]}]}],"pos":[152934,152999],"yaml":true},{"content":"<code>function</code> is null, or <code>arguments</code> is null or contains null.","nodes":[{"pos":[0,82],"content":"<ph id=\"ph1\">&lt;code&gt;function&lt;/code&gt;</ph> is null, or <ph id=\"ph2\">&lt;code&gt;arguments&lt;/code&gt;</ph> is null or contains null.","source":"<code>function</code> is null, or <code>arguments</code> is null or contains null."}],"pos":[153205,153288],"yaml":true},{"content":"The count of <code>arguments</code> does not equal the number of parameters declared by <code>function</code>, or <code>arguments</code> contains an expression that has a result type that is not equal or promotable to the corresponding function parameter type.","nodes":[{"pos":[0,260],"content":"The count of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">arguments</ph><ept id=\"p1\">&lt;/code&gt;</ept> does not equal the number of parameters declared by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">function</ph><ept id=\"p2\">&lt;/code&gt;</ept>, or <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">arguments</ph><ept id=\"p3\">&lt;/code&gt;</ept> contains an expression that has a result type that is not equal or promotable to the corresponding function parameter type.","source":"The count of <code>arguments</code> does not equal the number of parameters declared by <code>function</code>, or <code>arguments</code> contains an expression that has a result type that is not equal or promotable to the corresponding function parameter type."}],"pos":[153382,153643],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbFunctionExpression\"></xref> representing the invocation of the specified function with the given arguments.","nodes":[{"pos":[0,167],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbFunctionExpression\"&gt;&lt;/xref&gt;</ph> representing the invocation of the specified function with the given arguments.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbFunctionExpression\"></xref> representing the invocation of the specified function with the given arguments."}],"pos":[155215,155383],"yaml":true},{"content":"Metadata for the function to invoke.","nodes":[{"pos":[0,36],"content":"Metadata for the function to invoke.","nodes":[{"content":"Metadata for the function to invoke.","pos":[0,36]}]}],"pos":[155733,155770],"yaml":true},{"content":"A list of expressions that provide the arguments to the function.","nodes":[{"pos":[0,65],"content":"A list of expressions that provide the arguments to the function.","nodes":[{"content":"A list of expressions that provide the arguments to the function.","pos":[0,65]}]}],"pos":[155906,155972],"yaml":true},{"content":"A new DbFunctionExpression representing the function invocation.","nodes":[{"pos":[0,64],"content":"A new DbFunctionExpression representing the function invocation.","nodes":[{"content":"A new DbFunctionExpression representing the function invocation.","pos":[0,64]}]}],"pos":[156068,156133],"yaml":true},{"content":"<code>function</code> is null, or <code>arguments</code> is null or contains null.","nodes":[{"pos":[0,82],"content":"<ph id=\"ph1\">&lt;code&gt;function&lt;/code&gt;</ph> is null, or <ph id=\"ph2\">&lt;code&gt;arguments&lt;/code&gt;</ph> is null or contains null.","source":"<code>function</code> is null, or <code>arguments</code> is null or contains null."}],"pos":[156339,156422],"yaml":true},{"content":"The count of <code>arguments</code> does not equal the number of parameters declared by <code>function</code>, or <code>arguments</code> contains an expression that has a result type that is not equal or promotable to the corresponding function parameter type.","nodes":[{"pos":[0,260],"content":"The count of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">arguments</ph><ept id=\"p1\">&lt;/code&gt;</ept> does not equal the number of parameters declared by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">function</ph><ept id=\"p2\">&lt;/code&gt;</ept>, or <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">arguments</ph><ept id=\"p3\">&lt;/code&gt;</ept> contains an expression that has a result type that is not equal or promotable to the corresponding function parameter type.","source":"The count of <code>arguments</code> does not equal the number of parameters declared by <code>function</code>, or <code>arguments</code> contains an expression that has a result type that is not equal or promotable to the corresponding function parameter type."}],"pos":[156516,156777],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbLambdaExpression\"></xref> representing the application of the specified Lambda function to the given arguments.","nodes":[{"pos":[0,171],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbLambdaExpression\"&gt;&lt;/xref&gt;</ph> representing the application of the specified Lambda function to the given arguments.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbLambdaExpression\"></xref> representing the application of the specified Lambda function to the given arguments."}],"pos":[158352,158524],"yaml":true},{"content":"A <xref href=\"System.Data.Common.CommandTrees.DbLambda\"></xref> instance representing the Lambda function to apply.","nodes":[{"pos":[0,115],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbLambda\"&gt;&lt;/xref&gt;</ph> instance representing the Lambda function to apply.","source":"A <xref href=\"System.Data.Common.CommandTrees.DbLambda\"></xref> instance representing the Lambda function to apply."}],"pos":[158876,158992],"yaml":true},{"content":"A list of expressions that provide the arguments.","nodes":[{"pos":[0,49],"content":"A list of expressions that provide the arguments.","nodes":[{"content":"A list of expressions that provide the arguments.","pos":[0,49]}]}],"pos":[159128,159178],"yaml":true},{"content":"A new DbLambdaExpression representing the Lambda function application.","nodes":[{"pos":[0,70],"content":"A new DbLambdaExpression representing the Lambda function application.","nodes":[{"content":"A new DbLambdaExpression representing the Lambda function application.","pos":[0,70]}]}],"pos":[159272,159343],"yaml":true},{"content":"<code>lambda</code> or <code>arguments</code> is null.","nodes":[{"pos":[0,54],"content":"<ph id=\"ph1\">&lt;code&gt;lambda&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;arguments&lt;/code&gt;</ph> is null.","source":"<code>lambda</code> or <code>arguments</code> is null."}],"pos":[159549,159604],"yaml":true},{"content":"The count of <code>arguments</code> does not equal the number of variables declared by <code>lambda</code>, or <code>arguments</code> contains an expression that has a result type that is not equal or promotable to the corresponding variable type.","nodes":[{"pos":[0,247],"content":"The count of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">arguments</ph><ept id=\"p1\">&lt;/code&gt;</ept> does not equal the number of variables declared by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">lambda</ph><ept id=\"p2\">&lt;/code&gt;</ept>, or <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">arguments</ph><ept id=\"p3\">&lt;/code&gt;</ept> contains an expression that has a result type that is not equal or promotable to the corresponding variable type.","source":"The count of <code>arguments</code> does not equal the number of variables declared by <code>lambda</code>, or <code>arguments</code> contains an expression that has a result type that is not equal or promotable to the corresponding variable type."}],"pos":[159698,159946],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbLambdaExpression\"></xref> representing the application of the specified Lambda function to the given arguments.","nodes":[{"pos":[0,171],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbLambdaExpression\"&gt;&lt;/xref&gt;</ph> representing the application of the specified Lambda function to the given arguments.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbLambdaExpression\"></xref> representing the application of the specified Lambda function to the given arguments."}],"pos":[161374,161546],"yaml":true},{"content":"A <xref href=\"System.Data.Common.CommandTrees.DbLambda\"></xref> instance representing the Lambda function to apply.","nodes":[{"pos":[0,115],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbLambda\"&gt;&lt;/xref&gt;</ph> instance representing the Lambda function to apply.","source":"A <xref href=\"System.Data.Common.CommandTrees.DbLambda\"></xref> instance representing the Lambda function to apply."}],"pos":[161860,161976],"yaml":true},{"content":"Expressions that provide the arguments.","nodes":[{"pos":[0,39],"content":"Expressions that provide the arguments.","nodes":[{"content":"Expressions that provide the arguments.","pos":[0,39]}]}],"pos":[162074,162114],"yaml":true},{"content":"A new DbLambdaExpression representing the Lambda function application.","nodes":[{"pos":[0,70],"content":"A new DbLambdaExpression representing the Lambda function application.","nodes":[{"content":"A new DbLambdaExpression representing the Lambda function application.","pos":[0,70]}]}],"pos":[162208,162279],"yaml":true},{"content":"<code>lambda</code> or <code>arguments</code> is null.","nodes":[{"pos":[0,54],"content":"<ph id=\"ph1\">&lt;code&gt;lambda&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;arguments&lt;/code&gt;</ph> is null.","source":"<code>lambda</code> or <code>arguments</code> is null."}],"pos":[162485,162540],"yaml":true},{"content":"The count of <code>arguments</code> does not equal the number of variables declared by <code>lambda</code>, or <code>arguments</code> contains an expression that has a result type that is not equal or promotable to the corresponding variable type.","nodes":[{"pos":[0,247],"content":"The count of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">arguments</ph><ept id=\"p1\">&lt;/code&gt;</ept> does not equal the number of variables declared by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">lambda</ph><ept id=\"p2\">&lt;/code&gt;</ept>, or <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">arguments</ph><ept id=\"p3\">&lt;/code&gt;</ept> contains an expression that has a result type that is not equal or promotable to the corresponding variable type.","source":"The count of <code>arguments</code> does not equal the number of variables declared by <code>lambda</code>, or <code>arguments</code> contains an expression that has a result type that is not equal or promotable to the corresponding variable type."}],"pos":[162634,162882],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbIsEmptyExpression\"></xref> that determines whether the specified set argument is an empty set.","nodes":[{"pos":[0,154],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbIsEmptyExpression\"&gt;&lt;/xref&gt;</ph> that determines whether the specified set argument is an empty set.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbIsEmptyExpression\"></xref> that determines whether the specified set argument is an empty set."}],"pos":[164151,164306],"yaml":true},{"content":"An expression that specifies the input set.","nodes":[{"pos":[0,43],"content":"An expression that specifies the input set.","nodes":[{"content":"An expression that specifies the input set.","pos":[0,43]}]}],"pos":[164576,164620],"yaml":true},{"content":"A new DbIsEmptyExpression with the specified argument.","nodes":[{"pos":[0,54],"content":"A new DbIsEmptyExpression with the specified argument.","nodes":[{"content":"A new DbIsEmptyExpression with the specified argument.","pos":[0,54]}]}],"pos":[164715,164770],"yaml":true},{"content":"<code>argument</code> is null.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;argument&lt;/code&gt;</ph> is null.","source":"<code>argument</code> is null."}],"pos":[164977,165008],"yaml":true},{"content":"<code>argument</code> does not have a collection result type.","nodes":[{"pos":[0,61],"content":"<ph id=\"ph1\">&lt;code&gt;argument&lt;/code&gt;</ph> does not have a collection result type.","source":"<code>argument</code> does not have a collection result type."}],"pos":[165102,165164],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbIsNullExpression\"></xref> that determines whether the specified argument is null.","nodes":[{"pos":[0,141],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbIsNullExpression\"&gt;&lt;/xref&gt;</ph> that determines whether the specified argument is null.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbIsNullExpression\"></xref> that determines whether the specified argument is null."}],"pos":[166427,166569],"yaml":true},{"content":"An expression that specifies the argument.","nodes":[{"pos":[0,42],"content":"An expression that specifies the argument.","nodes":[{"content":"An expression that specifies the argument.","pos":[0,42]}]}],"pos":[166837,166880],"yaml":true},{"content":"A new DbIsNullExpression with the specified argument.","nodes":[{"pos":[0,53],"content":"A new DbIsNullExpression with the specified argument.","nodes":[{"content":"A new DbIsNullExpression with the specified argument.","pos":[0,53]}]}],"pos":[166974,167028],"yaml":true},{"content":"<code>argument</code> is null.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;argument&lt;/code&gt;</ph> is null.","source":"<code>argument</code> is null."}],"pos":[167234,167265],"yaml":true},{"content":"<code>argument</code> has a collection result type.","nodes":[{"pos":[0,51],"content":"<ph id=\"ph1\">&lt;code&gt;argument&lt;/code&gt;</ph> has a collection result type.","source":"<code>argument</code> has a collection result type."}],"pos":[167359,167411],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbIsOfExpression\"></xref> that determines whether the given argument is of the specified type or a subtype.","nodes":[{"pos":[0,165],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbIsOfExpression\"&gt;&lt;/xref&gt;</ph> that determines whether the given argument is of the specified type or a subtype.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbIsOfExpression\"></xref> that determines whether the given argument is of the specified type or a subtype."}],"pos":[168800,168966],"yaml":true},{"content":"DbIsOfExpression requires that `argument` has a polymorphic result type, and that `type` is a type from the same type hierarchy as that result type.","nodes":[{"pos":[0,148],"content":"DbIsOfExpression requires that <ph id=\"ph1\">`argument`</ph> has a polymorphic result type, and that <ph id=\"ph2\">`type`</ph> is a type from the same type hierarchy as that result type.","source":"DbIsOfExpression requires that `argument` has a polymorphic result type, and that `type` is a type from the same type hierarchy as that result type."}],"pos":[168977,169126],"yaml":true,"extradata":"MT"},{"content":"An expression that specifies the instance.","nodes":[{"pos":[0,42],"content":"An expression that specifies the instance.","nodes":[{"content":"An expression that specifies the instance.","pos":[0,42]}]}],"pos":[169431,169474],"yaml":true},{"content":"Type metadata that specifies the type that the instance's result type should be compared to.","nodes":[{"pos":[0,92],"content":"Type metadata that specifies the type that the instance's result type should be compared to.","nodes":[{"content":"Type metadata that specifies the type that the instance's result type should be compared to.","pos":[0,92]}]}],"pos":[169555,169648],"yaml":true},{"content":"A new DbIsOfExpression with the specified instance and type and DbExpressionKind IsOf.","nodes":[{"pos":[0,86],"content":"A new DbIsOfExpression with the specified instance and type and DbExpressionKind IsOf.","nodes":[{"content":"A new DbIsOfExpression with the specified instance and type and DbExpressionKind IsOf.","pos":[0,86]}]}],"pos":[169740,169827],"yaml":true},{"content":"<code>argument</code> or <code>type</code> is null.","nodes":[{"pos":[0,51],"content":"<ph id=\"ph1\">&lt;code&gt;argument&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;type&lt;/code&gt;</ph> is null.","source":"<code>argument</code> or <code>type</code> is null."}],"pos":[170031,170083],"yaml":true},{"content":"<code>type</code> is not in the same type hierarchy as the result type of <code>argument</code>.","nodes":[{"pos":[0,96],"content":"<ph id=\"ph1\">&lt;code&gt;type&lt;/code&gt;</ph> is not in the same type hierarchy as the result type of <ph id=\"ph2\">&lt;code&gt;argument&lt;/code&gt;</ph>.","source":"<code>type</code> is not in the same type hierarchy as the result type of <code>argument</code>."}],"pos":[170177,170274],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbIsOfExpression\"></xref> expression that determines whether the given argument is of the specified type, and only that type (not a subtype).","nodes":[{"pos":[0,199],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbIsOfExpression\"&gt;&lt;/xref&gt;</ph> expression that determines whether the given argument is of the specified type, and only that type (not a subtype).","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbIsOfExpression\"></xref> expression that determines whether the given argument is of the specified type, and only that type (not a subtype)."}],"pos":[171687,171887],"yaml":true},{"content":"DbIsOfExpression requires that `argument` has a polymorphic result type, and that `type` is a type from the same type hierarchy as that result type.","nodes":[{"pos":[0,148],"content":"DbIsOfExpression requires that <ph id=\"ph1\">`argument`</ph> has a polymorphic result type, and that <ph id=\"ph2\">`type`</ph> is a type from the same type hierarchy as that result type.","source":"DbIsOfExpression requires that `argument` has a polymorphic result type, and that `type` is a type from the same type hierarchy as that result type."}],"pos":[171898,172047],"yaml":true,"extradata":"MT"},{"content":"An expression that specifies the instance.","nodes":[{"pos":[0,42],"content":"An expression that specifies the instance.","nodes":[{"content":"An expression that specifies the instance.","pos":[0,42]}]}],"pos":[172356,172399],"yaml":true},{"content":"Type metadata that specifies the type that the instance's result type should be compared to.","nodes":[{"pos":[0,92],"content":"Type metadata that specifies the type that the instance's result type should be compared to.","nodes":[{"content":"Type metadata that specifies the type that the instance's result type should be compared to.","pos":[0,92]}]}],"pos":[172480,172573],"yaml":true},{"content":"A new DbIsOfExpression with the specified instance and type and DbExpressionKind IsOfOnly.","nodes":[{"pos":[0,90],"content":"A new DbIsOfExpression with the specified instance and type and DbExpressionKind IsOfOnly.","nodes":[{"content":"A new DbIsOfExpression with the specified instance and type and DbExpressionKind IsOfOnly.","pos":[0,90]}]}],"pos":[172665,172756],"yaml":true},{"content":"<code>argument</code> or <code>type</code> is null.","nodes":[{"pos":[0,51],"content":"<ph id=\"ph1\">&lt;code&gt;argument&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;type&lt;/code&gt;</ph> is null.","source":"<code>argument</code> or <code>type</code> is null."}],"pos":[172964,173016],"yaml":true},{"content":"<code>type</code> is not in the same type hierarchy as the result type of <code>argument</code>.","nodes":[{"pos":[0,96],"content":"<ph id=\"ph1\">&lt;code&gt;type&lt;/code&gt;</ph> is not in the same type hierarchy as the result type of <ph id=\"ph2\">&lt;code&gt;argument&lt;/code&gt;</ph>.","source":"<code>type</code> is not in the same type hierarchy as the result type of <code>argument</code>."}],"pos":[173110,173207],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbJoinExpression\"></xref> that joins the sets specified by the outer and inner expressions, on an equality condition between the specified outer and inner keys, using InnerJoin as the <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"></xref>.","nodes":[{"pos":[0,312],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbJoinExpression\"&gt;&lt;/xref&gt;</ph> that joins the sets specified by the outer and inner expressions, on an equality condition between the specified outer and inner keys, using InnerJoin as the <ph id=\"ph2\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"&gt;&lt;/xref&gt;</ph>.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbJoinExpression\"></xref> that joins the sets specified by the outer and inner expressions, on an equality condition between the specified outer and inner keys, using InnerJoin as the <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"></xref>."}],"pos":[175451,175764],"yaml":true},{"content":"A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that specifies the outer set argument.","nodes":[{"pos":[0,106],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;&lt;/xref&gt;</ph> that specifies the outer set argument.","source":"A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that specifies the outer set argument."}],"pos":[176286,176393],"yaml":true},{"content":"A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that specifies the inner set argument.","nodes":[{"pos":[0,106],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;&lt;/xref&gt;</ph> that specifies the inner set argument.","source":"A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that specifies the inner set argument."}],"pos":[176485,176592],"yaml":true},{"content":"A method that specifies how the outer key value should be derived from an element of the outer set.","nodes":[{"pos":[0,99],"content":"A method that specifies how the outer key value should be derived from an element of the outer set.","nodes":[{"content":"A method that specifies how the outer key value should be derived from an element of the outer set.","pos":[0,99]}]}],"pos":[176745,176845],"yaml":true},{"content":"A method that specifies how the inner key value should be derived from an element of the inner set.","nodes":[{"pos":[0,99],"content":"A method that specifies how the inner key value should be derived from an element of the inner set.","nodes":[{"content":"A method that specifies how the inner key value should be derived from an element of the inner set.","pos":[0,99]}]}],"pos":[176998,177098],"yaml":true},{"content":"A new DbJoinExpression, with an <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"></xref> of InnerJoin, that represents the inner join operation applied to the left and right input sets under a join condition that compares the outer and inner key values for equality.","nodes":[{"pos":[0,279],"content":"A new DbJoinExpression, with an <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"&gt;&lt;/xref&gt;</ph> of InnerJoin, that represents the inner join operation applied to the left and right input sets under a join condition that compares the outer and inner key values for equality.","source":"A new DbJoinExpression, with an <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"></xref> of InnerJoin, that represents the inner join operation applied to the left and right input sets under a join condition that compares the outer and inner key values for equality."}],"pos":[177190,177470],"yaml":true},{"content":"The expression produced by <code>outerKey</code> or <code>innerKey</code> is null.","nodes":[{"pos":[0,82],"content":"The expression produced by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">outerKey</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">innerKey</ph><ept id=\"p2\">&lt;/code&gt;</ept> is null.","source":"The expression produced by <code>outerKey</code> or <code>innerKey</code> is null."}],"pos":[177674,177757],"yaml":true},{"content":"The expressions produced by <code>outerKey</code> and <code>innerKey</code> are not comparable for equality.","nodes":[{"pos":[0,108],"content":"The expressions produced by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">outerKey</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">innerKey</ph><ept id=\"p2\">&lt;/code&gt;</ept> are not comparable for equality.","source":"The expressions produced by <code>outerKey</code> and <code>innerKey</code> are not comparable for equality."}],"pos":[177851,177960],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbProjectExpression\"></xref> that projects the specified selector over the sets specified by the outer and inner expressions, joined on an equality condition between the specified outer and inner keys, using InnerJoin as the <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"></xref>.","nodes":[{"pos":[0,353],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbProjectExpression\"&gt;&lt;/xref&gt;</ph> that projects the specified selector over the sets specified by the outer and inner expressions, joined on an equality condition between the specified outer and inner keys, using InnerJoin as the <ph id=\"ph2\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"&gt;&lt;/xref&gt;</ph>.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbProjectExpression\"></xref> that projects the specified selector over the sets specified by the outer and inner expressions, joined on an equality condition between the specified outer and inner keys, using InnerJoin as the <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"></xref>."}],"pos":[180696,181050],"yaml":true},{"content":"To be compatible with Join, `TSelector` must be derived from <xref:System.Data.Common.CommandTrees.DbExpression>,     or must be an anonymous type with DbExpression-derived properties. The following are examples of supported types for `TSelector`:  \n  \n```  \nouter.Join(inner, o => o.Property(\"ID\"), i => i.Property(\"ID\"), (o, i) => o.Property(\"Name\"))  \n```  \n  \n (`TSelector` is <xref:System.Data.Common.CommandTrees.DbPropertyExpression>).  \n  \n```  \nouter.Join(inner, o => o.Property(\"ID\"), i => i.Property(\"ID\"), (o, i) => new { OName = o.Property(\"Name\"), IName = i.Property(\"Name\") })  \n```  \n  \n (`TSelector` is an anonymous type with DbExpression-derived properties).","nodes":[{"pos":[0,247],"content":"To be compatible with Join, `TSelector` must be derived from <xref:System.Data.Common.CommandTrees.DbExpression>,     or must be an anonymous type with DbExpression-derived properties. The following are examples of supported types for `TSelector`:","nodes":[{"content":"To be compatible with Join, <ph id=\"ph1\">`TSelector`</ph> must be derived from <ph id=\"ph2\">&lt;xref:System.Data.Common.CommandTrees.DbExpression&gt;</ph>,     or must be an anonymous type with DbExpression-derived properties.","pos":[0,184],"source":"To be compatible with Join, `TSelector` must be derived from <xref:System.Data.Common.CommandTrees.DbExpression>,     or must be an anonymous type with DbExpression-derived properties."},{"content":"The following are examples of supported types for <ph id=\"ph1\">`TSelector`</ph>:","pos":[185,247],"source":" The following are examples of supported types for `TSelector`:"}]},{"pos":[365,442],"content":"(<ph id=\"ph1\">`TSelector`</ph> is <ph id=\"ph2\">&lt;xref:System.Data.Common.CommandTrees.DbPropertyExpression&gt;</ph>).","source":"(`TSelector` is <xref:System.Data.Common.CommandTrees.DbPropertyExpression>)."},{"pos":[604,676],"content":"(<ph id=\"ph1\">`TSelector`</ph> is an anonymous type with DbExpression-derived properties).","source":"(`TSelector` is an anonymous type with DbExpression-derived properties)."}],"pos":[181061,181766],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that specifies the outer set argument.","nodes":[{"pos":[0,106],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;&lt;/xref&gt;</ph> that specifies the outer set argument.","source":"A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that specifies the outer set argument."}],"pos":[182418,182525],"yaml":true},{"content":"A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that specifies the inner set argument.","nodes":[{"pos":[0,106],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;&lt;/xref&gt;</ph> that specifies the inner set argument.","source":"A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that specifies the inner set argument."}],"pos":[182617,182724],"yaml":true},{"content":"A method that specifies how the outer key value should be derived from an element of the outer set.","nodes":[{"pos":[0,99],"content":"A method that specifies how the outer key value should be derived from an element of the outer set.","nodes":[{"content":"A method that specifies how the outer key value should be derived from an element of the outer set.","pos":[0,99]}]}],"pos":[182877,182977],"yaml":true},{"content":"A method that specifies how the inner key value should be derived from an element of the inner set.","nodes":[{"pos":[0,99],"content":"A method that specifies how the inner key value should be derived from an element of the inner set.","nodes":[{"content":"A method that specifies how the inner key value should be derived from an element of the inner set.","pos":[0,99]}]}],"pos":[183130,183230],"yaml":true},{"content":"A method that specifies how an element of the result set should be derived from elements of the inner and outer sets. This method must produce an instance of a type that is compatible with Join and can be resolved into a <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref>. Compatibility requirements for <code>TSelector</code> are described in remarks.","nodes":[{"pos":[0,367],"content":"A method that specifies how an element of the result set should be derived from elements of the inner and outer sets. This method must produce an instance of a type that is compatible with Join and can be resolved into a <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref>. Compatibility requirements for <code>TSelector</code> are described in remarks.","nodes":[{"content":"A method that specifies how an element of the result set should be derived from elements of the inner and outer sets.","pos":[0,117]},{"content":"This method must produce an instance of a type that is compatible with Join and can be resolved into a <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;&lt;/xref&gt;</ph>.","pos":[118,287],"source":" This method must produce an instance of a type that is compatible with Join and can be resolved into a <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref>."},{"content":"Compatibility requirements for <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">TSelector</ph><ept id=\"p1\">&lt;/code&gt;</ept> are described in remarks.","pos":[288,367],"source":" Compatibility requirements for <code>TSelector</code> are described in remarks."}]}],"pos":[183393,183761],"yaml":true},{"content":"The type of the <code>selector</code>.","nodes":[{"pos":[0,38],"content":"The type of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">selector</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The type of the <code>selector</code>."}],"pos":[183820,183859],"yaml":true},{"content":"A new DbProjectExpression with the specified selector as its projection, and a new DbJoinExpression as its input. The input DbJoinExpression is created with an <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"></xref> of InnerJoin, that represents the inner join operation applied to the left and right input sets under a join condition that compares the outer and inner key values for equality.","nodes":[{"pos":[0,407],"content":"A new DbProjectExpression with the specified selector as its projection, and a new DbJoinExpression as its input. The input DbJoinExpression is created with an <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"></xref> of InnerJoin, that represents the inner join operation applied to the left and right input sets under a join condition that compares the outer and inner key values for equality.","nodes":[{"content":"A new DbProjectExpression with the specified selector as its projection, and a new DbJoinExpression as its input.","pos":[0,113]},{"content":"The input DbJoinExpression is created with an <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"&gt;&lt;/xref&gt;</ph> of InnerJoin, that represents the inner join operation applied to the left and right input sets under a join condition that compares the outer and inner key values for equality.","pos":[114,407],"source":" The input DbJoinExpression is created with an <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"></xref> of InnerJoin, that represents the inner join operation applied to the left and right input sets under a join condition that compares the outer and inner key values for equality."}]}],"pos":[183954,184362],"yaml":true},{"content":"The result of <code>selector</code> is null after conversion to DbExpression.","nodes":[{"pos":[0,77],"content":"The result of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">selector</ph><ept id=\"p1\">&lt;/code&gt;</ept> is null after conversion to DbExpression.","source":"The result of <code>selector</code> is null after conversion to DbExpression."}],"pos":[184569,184647],"yaml":true},{"content":"The result of <code>Selector</code> is not compatible with SelectMany.","nodes":[{"pos":[0,70],"content":"The result of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">Selector</ph><ept id=\"p1\">&lt;/code&gt;</ept> is not compatible with SelectMany.","source":"The result of <code>Selector</code> is not compatible with SelectMany."}],"pos":[184741,184812],"yaml":true},{"content":"Creates a <xref href=\"System.Data.Common.CommandTrees.DbLambda\"></xref> with the specified inline Lambda function implementation and formal parameters.","nodes":[{"pos":[0,151],"content":"Creates a <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbLambda\"&gt;&lt;/xref&gt;</ph> with the specified inline Lambda function implementation and formal parameters.","source":"Creates a <xref href=\"System.Data.Common.CommandTrees.DbLambda\"></xref> with the specified inline Lambda function implementation and formal parameters."}],"pos":[186513,186665],"yaml":true},{"content":"An expression that defines the logic of the Lambda function.","nodes":[{"pos":[0,60],"content":"An expression that defines the logic of the Lambda function.","nodes":[{"content":"An expression that defines the logic of the Lambda function.","pos":[0,60]}]}],"pos":[187023,187084],"yaml":true},{"content":"A <xref href=\"System.Data.Common.CommandTrees.DbVariableReferenceExpression\"></xref> collection that represents the formal parameters to the Lambda function. These variables are valid for use in the <code>body</code> expression.","nodes":[{"pos":[0,228],"content":"A <xref href=\"System.Data.Common.CommandTrees.DbVariableReferenceExpression\"></xref> collection that represents the formal parameters to the Lambda function. These variables are valid for use in the <code>body</code> expression.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbVariableReferenceExpression\"&gt;&lt;/xref&gt;</ph> collection that represents the formal parameters to the Lambda function.","pos":[0,157],"source":"A <xref href=\"System.Data.Common.CommandTrees.DbVariableReferenceExpression\"></xref> collection that represents the formal parameters to the Lambda function."},{"content":"These variables are valid for use in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">body</ph><ept id=\"p1\">&lt;/code&gt;</ept> expression.","pos":[158,228],"source":" These variables are valid for use in the <code>body</code> expression."}]}],"pos":[187237,187466],"yaml":true},{"content":"A new DbLambda that describes an inline Lambda function with the specified body and formal parameters.","nodes":[{"pos":[0,102],"content":"A new DbLambda that describes an inline Lambda function with the specified body and formal parameters.","nodes":[{"content":"A new DbLambda that describes an inline Lambda function with the specified body and formal parameters.","pos":[0,102]}]}],"pos":[187550,187653],"yaml":true},{"content":"<code>variables</code> is null or contains null, or <code>body</code> is null.","nodes":[{"pos":[0,78],"content":"<ph id=\"ph1\">&lt;code&gt;variables&lt;/code&gt;</ph> is null or contains null, or <ph id=\"ph2\">&lt;code&gt;body&lt;/code&gt;</ph> is null.","source":"<code>variables</code> is null or contains null, or <code>body</code> is null."}],"pos":[187859,187938],"yaml":true},{"content":"<code>variables</code> contains more than one element with the same variable name.","nodes":[{"pos":[0,82],"content":"<ph id=\"ph1\">&lt;code&gt;variables&lt;/code&gt;</ph> contains more than one element with the same variable name.","source":"<code>variables</code> contains more than one element with the same variable name."}],"pos":[188032,188115],"yaml":true},{"content":"Creates a <xref href=\"System.Data.Common.CommandTrees.DbLambda\"></xref> with the specified inline Lambda function implementation and formal parameters.","nodes":[{"pos":[0,151],"content":"Creates a <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbLambda\"&gt;&lt;/xref&gt;</ph> with the specified inline Lambda function implementation and formal parameters.","source":"Creates a <xref href=\"System.Data.Common.CommandTrees.DbLambda\"></xref> with the specified inline Lambda function implementation and formal parameters."}],"pos":[189669,189821],"yaml":true},{"content":"An expression that defines the logic of the Lambda function.","nodes":[{"pos":[0,60],"content":"An expression that defines the logic of the Lambda function.","nodes":[{"content":"An expression that defines the logic of the Lambda function.","pos":[0,60]}]}],"pos":[190141,190202],"yaml":true},{"content":"A <xref href=\"System.Data.Common.CommandTrees.DbVariableReferenceExpression\"></xref> collection that represents the formal parameters to the Lambda function. These variables are valid for use in the <code>body</code> expression.","nodes":[{"pos":[0,228],"content":"A <xref href=\"System.Data.Common.CommandTrees.DbVariableReferenceExpression\"></xref> collection that represents the formal parameters to the Lambda function. These variables are valid for use in the <code>body</code> expression.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbVariableReferenceExpression\"&gt;&lt;/xref&gt;</ph> collection that represents the formal parameters to the Lambda function.","pos":[0,157],"source":"A <xref href=\"System.Data.Common.CommandTrees.DbVariableReferenceExpression\"></xref> collection that represents the formal parameters to the Lambda function."},{"content":"These variables are valid for use in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">body</ph><ept id=\"p1\">&lt;/code&gt;</ept> expression.","pos":[158,228],"source":" These variables are valid for use in the <code>body</code> expression."}]}],"pos":[190317,190546],"yaml":true},{"content":"A new DbLambda that describes an inline Lambda function with the specified body and formal parameters.","nodes":[{"pos":[0,102],"content":"A new DbLambda that describes an inline Lambda function with the specified body and formal parameters.","nodes":[{"content":"A new DbLambda that describes an inline Lambda function with the specified body and formal parameters.","pos":[0,102]}]}],"pos":[190630,190733],"yaml":true},{"content":"<code>variables</code> is null or contains null, or <code>body</code> is null.","nodes":[{"pos":[0,78],"content":"<ph id=\"ph1\">&lt;code&gt;variables&lt;/code&gt;</ph> is null or contains null, or <ph id=\"ph2\">&lt;code&gt;body&lt;/code&gt;</ph> is null.","source":"<code>variables</code> is null or contains null, or <code>body</code> is null."}],"pos":[190939,191018],"yaml":true},{"content":"<code>variables</code> contains more than one element with the same variable name.","nodes":[{"pos":[0,82],"content":"<ph id=\"ph1\">&lt;code&gt;variables&lt;/code&gt;</ph> contains more than one element with the same variable name.","source":"<code>variables</code> contains more than one element with the same variable name."}],"pos":[191112,191195],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbJoinExpression\"></xref> that joins the sets specified by the left and right expression bindings, on the specified join condition, using LeftOuterJoin as the <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"></xref>.","nodes":[{"pos":[0,287],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbJoinExpression\"&gt;&lt;/xref&gt;</ph> that joins the sets specified by the left and right expression bindings, on the specified join condition, using LeftOuterJoin as the <ph id=\"ph2\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"&gt;&lt;/xref&gt;</ph>.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbJoinExpression\"></xref> that joins the sets specified by the left and right expression bindings, on the specified join condition, using LeftOuterJoin as the <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"></xref>."}],"pos":[192938,193226],"yaml":true},{"content":"An <xref href=\"System.Data.Common.CommandTrees.DbExpressionBinding\"></xref> that specifies the left set argument.","nodes":[{"pos":[0,113],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpressionBinding\"&gt;&lt;/xref&gt;</ph> that specifies the left set argument.","source":"An <xref href=\"System.Data.Common.CommandTrees.DbExpressionBinding\"></xref> that specifies the left set argument."}],"pos":[193624,193738],"yaml":true},{"content":"An <xref href=\"System.Data.Common.CommandTrees.DbExpressionBinding\"></xref> that specifies the right set argument.","nodes":[{"pos":[0,114],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpressionBinding\"&gt;&lt;/xref&gt;</ph> that specifies the right set argument.","source":"An <xref href=\"System.Data.Common.CommandTrees.DbExpressionBinding\"></xref> that specifies the right set argument."}],"pos":[193837,193952],"yaml":true},{"content":"An expression that specifies the condition on which to join.","nodes":[{"pos":[0,60],"content":"An expression that specifies the condition on which to join.","nodes":[{"content":"An expression that specifies the condition on which to join.","pos":[0,60]}]}],"pos":[194052,194113],"yaml":true},{"content":"A new DbJoinExpression, with an <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"></xref> of LeftOuterJoin, that represents the left outer join operation applied to the left and right     input sets under the given join condition.","nodes":[{"pos":[0,242],"content":"A new DbJoinExpression, with an <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"&gt;&lt;/xref&gt;</ph> of LeftOuterJoin, that represents the left outer join operation applied to the left and right     input sets under the given join condition.","source":"A new DbJoinExpression, with an <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"></xref> of LeftOuterJoin, that represents the left outer join operation applied to the left and right     input sets under the given join condition."}],"pos":[194205,194448],"yaml":true},{"content":"<code>left</code>,  <code>right</code> or <code>joinCondition</code> is null.","nodes":[{"pos":[0,77],"content":"<ph id=\"ph1\">&lt;code&gt;left&lt;/code&gt;</ph>,  <ph id=\"ph2\">&lt;code&gt;right&lt;/code&gt;</ph> or <ph id=\"ph3\">&lt;code&gt;joinCondition&lt;/code&gt;</ph> is null.","source":"<code>left</code>,  <code>right</code> or <code>joinCondition</code> is null."}],"pos":[194661,194739],"yaml":true},{"content":"<code>joinCondition</code> does not have a Boolean result type.","nodes":[{"pos":[0,63],"content":"<ph id=\"ph1\">&lt;code&gt;joinCondition&lt;/code&gt;</ph> does not have a Boolean result type.","source":"<code>joinCondition</code> does not have a Boolean result type."}],"pos":[194833,194897],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbJoinExpression\"></xref> that joins the sets specified by the left and right expressions, on the specified join condition, using LeftOuterJoin as the <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"></xref>.","nodes":[{"pos":[0,279],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbJoinExpression\"&gt;&lt;/xref&gt;</ph> that joins the sets specified by the left and right expressions, on the specified join condition, using LeftOuterJoin as the <ph id=\"ph2\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"&gt;&lt;/xref&gt;</ph>.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbJoinExpression\"></xref> that joins the sets specified by the left and right expressions, on the specified join condition, using LeftOuterJoin as the <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"></xref>."}],"pos":[196961,197241],"yaml":true},{"content":"A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that specifies the left set argument.","nodes":[{"pos":[0,105],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;&lt;/xref&gt;</ph> that specifies the left set argument.","source":"A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that specifies the left set argument."}],"pos":[197714,197820],"yaml":true},{"content":"A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that specifies the right set argument.","nodes":[{"pos":[0,106],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;&lt;/xref&gt;</ph> that specifies the right set argument.","source":"A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that specifies the right set argument."}],"pos":[197912,198019],"yaml":true},{"content":"A method representing the condition on which to join. This method must produce an expression with a Boolean result type that provides the logic of the join condition.","nodes":[{"pos":[0,166],"content":"A method representing the condition on which to join. This method must produce an expression with a Boolean result type that provides the logic of the join condition.","nodes":[{"content":"A method representing the condition on which to join. This method must produce an expression with a Boolean result type that provides the logic of the join condition.","pos":[0,166],"nodes":[{"content":"A method representing the condition on which to join.","pos":[0,53]},{"content":"This method must produce an expression with a Boolean result type that provides the logic of the join condition.","pos":[54,166]}]}]}],"pos":[198222,198389],"yaml":true},{"content":"A new DbJoinExpression, with an <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"></xref> of LeftOuterJoin, that represents the left outer join operation applied to the left and right input sets under the given join condition.","nodes":[{"pos":[0,238],"content":"A new DbJoinExpression, with an <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"&gt;&lt;/xref&gt;</ph> of LeftOuterJoin, that represents the left outer join operation applied to the left and right input sets under the given join condition.","source":"A new DbJoinExpression, with an <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"></xref> of LeftOuterJoin, that represents the left outer join operation applied to the left and right input sets under the given join condition."}],"pos":[198481,198720],"yaml":true},{"content":"The expression produced by <code>joinCondition</code> is null.","nodes":[{"pos":[0,62],"content":"The expression produced by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">joinCondition</ph><ept id=\"p1\">&lt;/code&gt;</ept> is null.","source":"The expression produced by <code>joinCondition</code> is null."}],"pos":[198933,198996],"yaml":true},{"content":"The expression produced by <code>joinCondition</code> does not have a Boolean result type.","nodes":[{"pos":[0,90],"content":"The expression produced by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">joinCondition</ph><ept id=\"p1\">&lt;/code&gt;</ept> does not have a Boolean result type.","source":"The expression produced by <code>joinCondition</code> does not have a Boolean result type."}],"pos":[199090,199181],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbComparisonExpression\"></xref> that determines whether the left argument is less than the right argument.","nodes":[{"pos":[0,164],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbComparisonExpression\"&gt;&lt;/xref&gt;</ph> that determines whether the left argument is less than the right argument.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbComparisonExpression\"></xref> that determines whether the left argument is less than the right argument."}],"pos":[200633,200798],"yaml":true},{"content":"An expression that specifies the left argument.","nodes":[{"pos":[0,47],"content":"An expression that specifies the left argument.","nodes":[{"content":"An expression that specifies the left argument.","pos":[0,47]}]}],"pos":[201116,201164],"yaml":true},{"content":"An expression that specifies the right argument.","nodes":[{"pos":[0,48],"content":"An expression that specifies the right argument.","nodes":[{"content":"An expression that specifies the right argument.","pos":[0,48]}]}],"pos":[201256,201305],"yaml":true},{"content":"A new DbComparisonExpression representing the less-than comparison.","nodes":[{"pos":[0,67],"content":"A new DbComparisonExpression representing the less-than comparison.","nodes":[{"content":"A new DbComparisonExpression representing the less-than comparison.","pos":[0,67]}]}],"pos":[201403,201471],"yaml":true},{"content":"<code>left</code> or <code>right</code> is null.","nodes":[{"pos":[0,48],"content":"<ph id=\"ph1\">&lt;code&gt;left&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;right&lt;/code&gt;</ph> is null.","source":"<code>left</code> or <code>right</code> is null."}],"pos":[201679,201728],"yaml":true},{"content":"No common order-comparable result type exists between <code>left</code> and <code>right</code>.","nodes":[{"pos":[0,95],"content":"No common order-comparable result type exists between <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">left</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">right</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"No common order-comparable result type exists between <code>left</code> and <code>right</code>."}],"pos":[201822,201918],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbComparisonExpression\"></xref> that determines whether the left argument is less than or equal to the right argument.","nodes":[{"pos":[0,176],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbComparisonExpression\"&gt;&lt;/xref&gt;</ph> that determines whether the left argument is less than or equal to the right argument.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbComparisonExpression\"></xref> that determines whether the left argument is less than or equal to the right argument."}],"pos":[203412,203589],"yaml":true},{"content":"An expression that specifies the left argument.","nodes":[{"pos":[0,47],"content":"An expression that specifies the left argument.","nodes":[{"content":"An expression that specifies the left argument.","pos":[0,47]}]}],"pos":[203914,203962],"yaml":true},{"content":"An expression that specifies the right argument.","nodes":[{"pos":[0,48],"content":"An expression that specifies the right argument.","nodes":[{"content":"An expression that specifies the right argument.","pos":[0,48]}]}],"pos":[204054,204103],"yaml":true},{"content":"A new DbComparisonExpression representing the less-than-or-equal-to comparison.","nodes":[{"pos":[0,79],"content":"A new DbComparisonExpression representing the less-than-or-equal-to comparison.","nodes":[{"content":"A new DbComparisonExpression representing the less-than-or-equal-to comparison.","pos":[0,79]}]}],"pos":[204201,204281],"yaml":true},{"content":"<code>left</code> or <code>right</code> is null.","nodes":[{"pos":[0,48],"content":"<ph id=\"ph1\">&lt;code&gt;left&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;right&lt;/code&gt;</ph> is null.","source":"<code>left</code> or <code>right</code> is null."}],"pos":[204496,204545],"yaml":true},{"content":"No common result type that is both equality- and order-comparable exists between <code>left</code> and <code>right</code>.","nodes":[{"pos":[0,122],"content":"No common result type that is both equality- and order-comparable exists between <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">left</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">right</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"No common result type that is both equality- and order-comparable exists between <code>left</code> and <code>right</code>."}],"pos":[204639,204762],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbLikeExpression\"></xref> that compares the specified input string to the given pattern.","nodes":[{"pos":[0,146],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbLikeExpression\"&gt;&lt;/xref&gt;</ph> that compares the specified input string to the given pattern.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbLikeExpression\"></xref> that compares the specified input string to the given pattern."}],"pos":[206190,206337],"yaml":true},{"content":"An expression that specifies the input string.","nodes":[{"pos":[0,46],"content":"An expression that specifies the input string.","nodes":[{"content":"An expression that specifies the input string.","pos":[0,46]}]}],"pos":[206655,206702],"yaml":true},{"content":"An expression that specifies the pattern string.","nodes":[{"pos":[0,48],"content":"An expression that specifies the pattern string.","nodes":[{"content":"An expression that specifies the pattern string.","pos":[0,48]}]}],"pos":[206796,206845],"yaml":true},{"content":"A new DbLikeExpression with the specified input, pattern and a null escape.","nodes":[{"pos":[0,75],"content":"A new DbLikeExpression with the specified input, pattern and a null escape.","nodes":[{"content":"A new DbLikeExpression with the specified input, pattern and a null escape.","pos":[0,75]}]}],"pos":[206937,207013],"yaml":true},{"content":"<code>Argument</code> or <code>pattern</code> is null.","nodes":[{"pos":[0,54],"content":"<ph id=\"ph1\">&lt;code&gt;Argument&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;pattern&lt;/code&gt;</ph> is null.","source":"<code>Argument</code> or <code>pattern</code> is null."}],"pos":[207217,207272],"yaml":true},{"content":"<code>Argument</code> or <code>pattern</code> does not have a string result type.","nodes":[{"pos":[0,81],"content":"<ph id=\"ph1\">&lt;code&gt;Argument&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;pattern&lt;/code&gt;</ph> does not have a string result type.","source":"<code>Argument</code> or <code>pattern</code> does not have a string result type."}],"pos":[207366,207448],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbLikeExpression\"></xref> that compares the specified input string to the given pattern using the optional escape.","nodes":[{"pos":[0,172],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbLikeExpression\"&gt;&lt;/xref&gt;</ph> that compares the specified input string to the given pattern using the optional escape.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbLikeExpression\"></xref> that compares the specified input string to the given pattern using the optional escape."}],"pos":[209053,209226],"yaml":true},{"content":"An expression that specifies the input string.","nodes":[{"pos":[0,46],"content":"An expression that specifies the input string.","nodes":[{"content":"An expression that specifies the input string.","pos":[0,46]}]}],"pos":[209597,209644],"yaml":true},{"content":"An expression that specifies the pattern string.","nodes":[{"pos":[0,48],"content":"An expression that specifies the pattern string.","nodes":[{"content":"An expression that specifies the pattern string.","pos":[0,48]}]}],"pos":[209738,209787],"yaml":true},{"content":"An optional expression that specifies the escape string.","nodes":[{"pos":[0,56],"content":"An optional expression that specifies the escape string.","nodes":[{"content":"An optional expression that specifies the escape string.","pos":[0,56]}]}],"pos":[209880,209937],"yaml":true},{"content":"A new DbLikeExpression with the specified input, pattern and escape.","nodes":[{"pos":[0,68],"content":"A new DbLikeExpression with the specified input, pattern and escape.","nodes":[{"content":"A new DbLikeExpression with the specified input, pattern and escape.","pos":[0,68]}]}],"pos":[210029,210098],"yaml":true},{"content":"<code>argument</code>,   <code>pattern</code> or <code>escape</code> is null.","nodes":[{"pos":[0,77],"content":"<ph id=\"ph1\">&lt;code&gt;argument&lt;/code&gt;</ph>,   <ph id=\"ph2\">&lt;code&gt;pattern&lt;/code&gt;</ph> or <ph id=\"ph3\">&lt;code&gt;escape&lt;/code&gt;</ph> is null.","source":"<code>argument</code>,   <code>pattern</code> or <code>escape</code> is null."}],"pos":[210302,210380],"yaml":true},{"content":"<code>argument</code>,   <code>pattern</code> or <code>escape</code> does not have a string result type.","nodes":[{"pos":[0,104],"content":"<ph id=\"ph1\">&lt;code&gt;argument&lt;/code&gt;</ph>,   <ph id=\"ph2\">&lt;code&gt;pattern&lt;/code&gt;</ph> or <ph id=\"ph3\">&lt;code&gt;escape&lt;/code&gt;</ph> does not have a string result type.","source":"<code>argument</code>,   <code>pattern</code> or <code>escape</code> does not have a string result type."}],"pos":[210474,210579],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbLimitExpression\"></xref> that restricts the number of elements in the Argument collection to the specified count Limit value. Tied results are not included in the output.","nodes":[{"pos":[0,230],"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbLimitExpression\"></xref> that restricts the number of elements in the Argument collection to the specified count Limit value. Tied results are not included in the output.","nodes":[{"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbLimitExpression\"&gt;&lt;/xref&gt;</ph> that restricts the number of elements in the Argument collection to the specified count Limit value.","pos":[0,185],"source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbLimitExpression\"></xref> that restricts the number of elements in the Argument collection to the specified count Limit value."},{"content":"Tied results are not included in the output.","pos":[186,230]}]}],"pos":[212013,212244],"yaml":true},{"content":"An expression that specifies the input collection.","nodes":[{"pos":[0,50],"content":"An expression that specifies the input collection.","nodes":[{"content":"An expression that specifies the input collection.","pos":[0,50]}]}],"pos":[212562,212613],"yaml":true},{"content":"An expression that specifies the limit value.","nodes":[{"pos":[0,45],"content":"An expression that specifies the limit value.","nodes":[{"content":"An expression that specifies the limit value.","pos":[0,45]}]}],"pos":[212705,212751],"yaml":true},{"content":"A new DbLimitExpression with the specified argument and count limit values that does not include tied results.","nodes":[{"pos":[0,110],"content":"A new DbLimitExpression with the specified argument and count limit values that does not include tied results.","nodes":[{"content":"A new DbLimitExpression with the specified argument and count limit values that does not include tied results.","pos":[0,110]}]}],"pos":[212844,212955],"yaml":true},{"content":"<code>argument</code> or <code>count</code> is null.","nodes":[{"pos":[0,52],"content":"<ph id=\"ph1\">&lt;code&gt;argument&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;count&lt;/code&gt;</ph> is null.","source":"<code>argument</code> or <code>count</code> is null."}],"pos":[213160,213213],"yaml":true},{"content":"<code>argument</code> does not have a collection result type, or <code>count</code> does not have a result type that is equal or promotable to a 64-bit integer type.","nodes":[{"pos":[0,165],"content":"<ph id=\"ph1\">&lt;code&gt;argument&lt;/code&gt;</ph> does not have a collection result type, or <ph id=\"ph2\">&lt;code&gt;count&lt;/code&gt;</ph> does not have a result type that is equal or promotable to a 64-bit integer type.","source":"<code>argument</code> does not have a collection result type, or <code>count</code> does not have a result type that is equal or promotable to a 64-bit integer type."}],"pos":[213307,213473],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbArithmeticExpression\"></xref> that subtracts the right argument from the left argument.","nodes":[{"pos":[0,147],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbArithmeticExpression\"&gt;&lt;/xref&gt;</ph> that subtracts the right argument from the left argument.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbArithmeticExpression\"></xref> that subtracts the right argument from the left argument."}],"pos":[214907,215055],"yaml":true},{"content":"An expression that specifies the left argument.","nodes":[{"pos":[0,47],"content":"An expression that specifies the left argument.","nodes":[{"content":"An expression that specifies the left argument.","pos":[0,47]}]}],"pos":[215370,215418],"yaml":true},{"content":"An expression that specifies the right argument.","nodes":[{"pos":[0,48],"content":"An expression that specifies the right argument.","nodes":[{"content":"An expression that specifies the right argument.","pos":[0,48]}]}],"pos":[215510,215559],"yaml":true},{"content":"A new DbArithmeticExpression representing the subtraction operation.","nodes":[{"pos":[0,68],"content":"A new DbArithmeticExpression representing the subtraction operation.","nodes":[{"content":"A new DbArithmeticExpression representing the subtraction operation.","pos":[0,68]}]}],"pos":[215657,215726],"yaml":true},{"content":"<code>left</code> or <code>right</code> is null.","nodes":[{"pos":[0,48],"content":"<ph id=\"ph1\">&lt;code&gt;left&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;right&lt;/code&gt;</ph> is null.","source":"<code>left</code> or <code>right</code> is null."}],"pos":[215931,215980],"yaml":true},{"content":"No common numeric result type exists between <code>left</code> and <code>right</code>.","nodes":[{"pos":[0,86],"content":"No common numeric result type exists between <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">left</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">right</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"No common numeric result type exists between <code>left</code> and <code>right</code>."}],"pos":[216074,216161],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbArithmeticExpression\"></xref> that computes the remainder of the left argument divided by the right argument.","nodes":[{"pos":[0,169],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbArithmeticExpression\"&gt;&lt;/xref&gt;</ph> that computes the remainder of the left argument divided by the right argument.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbArithmeticExpression\"></xref> that computes the remainder of the left argument divided by the right argument."}],"pos":[217601,217771],"yaml":true},{"content":"An expression that specifies the left argument.","nodes":[{"pos":[0,47],"content":"An expression that specifies the left argument.","nodes":[{"content":"An expression that specifies the left argument.","pos":[0,47]}]}],"pos":[218087,218135],"yaml":true},{"content":"An expression that specifies the right argument.","nodes":[{"pos":[0,48],"content":"An expression that specifies the right argument.","nodes":[{"content":"An expression that specifies the right argument.","pos":[0,48]}]}],"pos":[218227,218276],"yaml":true},{"content":"A new DbArithmeticExpression representing the modulo operation.","nodes":[{"pos":[0,63],"content":"A new DbArithmeticExpression representing the modulo operation.","nodes":[{"content":"A new DbArithmeticExpression representing the modulo operation.","pos":[0,63]}]}],"pos":[218374,218438],"yaml":true},{"content":"<code>left</code> or <code>right</code> is null.","nodes":[{"pos":[0,48],"content":"<ph id=\"ph1\">&lt;code&gt;left&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;right&lt;/code&gt;</ph> is null.","source":"<code>left</code> or <code>right</code> is null."}],"pos":[218644,218693],"yaml":true},{"content":"No common numeric result type exists between <code>left</code> and <code>right</code>.","nodes":[{"pos":[0,86],"content":"No common numeric result type exists between <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">left</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">right</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"No common numeric result type exists between <code>left</code> and <code>right</code>."}],"pos":[218787,218874],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbArithmeticExpression\"></xref> that multiplies the left argument by the right argument.","nodes":[{"pos":[0,146],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbArithmeticExpression\"&gt;&lt;/xref&gt;</ph> that multiplies the left argument by the right argument.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbArithmeticExpression\"></xref> that multiplies the left argument by the right argument."}],"pos":[220326,220473],"yaml":true},{"content":"An expression that specifies the left argument.","nodes":[{"pos":[0,47],"content":"An expression that specifies the left argument.","nodes":[{"content":"An expression that specifies the left argument.","pos":[0,47]}]}],"pos":[220791,220839],"yaml":true},{"content":"An expression that specifies the right argument.","nodes":[{"pos":[0,48],"content":"An expression that specifies the right argument.","nodes":[{"content":"An expression that specifies the right argument.","pos":[0,48]}]}],"pos":[220931,220980],"yaml":true},{"content":"A new DbArithmeticExpression representing the multiplication operation.","nodes":[{"pos":[0,71],"content":"A new DbArithmeticExpression representing the multiplication operation.","nodes":[{"content":"A new DbArithmeticExpression representing the multiplication operation.","pos":[0,71]}]}],"pos":[221078,221150],"yaml":true},{"content":"<code>left</code> or <code>right</code> is null.","nodes":[{"pos":[0,48],"content":"<ph id=\"ph1\">&lt;code&gt;left&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;right&lt;/code&gt;</ph> is null.","source":"<code>left</code> or <code>right</code> is null."}],"pos":[221358,221407],"yaml":true},{"content":"No common numeric result type exists between <code>left</code> and <code>right</code>.","nodes":[{"pos":[0,86],"content":"No common numeric result type exists between <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">left</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">right</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"No common numeric result type exists between <code>left</code> and <code>right</code>."}],"pos":[221501,221588],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbRelationshipNavigationExpression\"></xref> representing the navigation of a composition or association relationship.","nodes":[{"pos":[0,175],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbRelationshipNavigationExpression\"&gt;&lt;/xref&gt;</ph> representing the navigation of a composition or association relationship.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbRelationshipNavigationExpression\"></xref> representing the navigation of a composition or association relationship."}],"pos":[223283,223459],"yaml":true},{"content":"<xref:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression> requires that navigation always occur from a reference, and so `navigateFrom` must always have a reference result type.","nodes":[{"pos":[0,193],"content":"<ph id=\"ph1\">&lt;xref:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression&gt;</ph> requires that navigation always occur from a reference, and so <ph id=\"ph2\">`navigateFrom`</ph> must always have a reference result type.","source":"<xref:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression> requires that navigation always occur from a reference, and so `navigateFrom` must always have a reference result type."}],"pos":[223470,223664],"yaml":true,"extradata":"MT"},{"content":"An expression that specifies the instance from which navigation should occur.","nodes":[{"pos":[0,77],"content":"An expression that specifies the instance from which navigation should occur.","nodes":[{"content":"An expression that specifies the instance from which navigation should occur.","pos":[0,77]}]}],"pos":[224068,224146],"yaml":true},{"content":"Metadata for the property that represents the end of the relationship from which navigation should occur.","nodes":[{"pos":[0,105],"content":"Metadata for the property that represents the end of the relationship from which navigation should occur.","nodes":[{"content":"Metadata for the property that represents the end of the relationship from which navigation should occur.","pos":[0,105]}]}],"pos":[224242,224348],"yaml":true},{"content":"Metadata for the property that represents the end of the relationship to which navigation should occur.","nodes":[{"pos":[0,103],"content":"Metadata for the property that represents the end of the relationship to which navigation should occur.","nodes":[{"content":"Metadata for the property that represents the end of the relationship to which navigation should occur.","pos":[0,103]}]}],"pos":[224442,224546],"yaml":true},{"content":"A new DbRelationshipNavigationExpression representing the navigation of the specified from and to relation ends of the specified relation type from the specified navigation source instance.","nodes":[{"pos":[0,189],"content":"A new DbRelationshipNavigationExpression representing the navigation of the specified from and to relation ends of the specified relation type from the specified navigation source instance.","nodes":[{"content":"A new DbRelationshipNavigationExpression representing the navigation of the specified from and to relation ends of the specified relation type from the specified navigation source instance.","pos":[0,189]}]}],"pos":[224656,224846],"yaml":true},{"content":"<code>fromEnd</code>,  <code>toEnd</code> or <code>navigateFrom</code> is null.","nodes":[{"pos":[0,79],"content":"<ph id=\"ph1\">&lt;code&gt;fromEnd&lt;/code&gt;</ph>,  <ph id=\"ph2\">&lt;code&gt;toEnd&lt;/code&gt;</ph> or <ph id=\"ph3\">&lt;code&gt;navigateFrom&lt;/code&gt;</ph> is null.","source":"<code>fromEnd</code>,  <code>toEnd</code> or <code>navigateFrom</code> is null."}],"pos":[225054,225134],"yaml":true},{"content":"<code>fromEnd</code> and <code>toEnd</code> are not declared by the same relationship type, or <code>navigateFrom</code> has a result type that is not compatible with the property type of <code>fromEnd</code>.","nodes":[{"pos":[0,209],"content":"<ph id=\"ph1\">&lt;code&gt;fromEnd&lt;/code&gt;</ph> and <ph id=\"ph2\">&lt;code&gt;toEnd&lt;/code&gt;</ph> are not declared by the same relationship type, or <ph id=\"ph3\">&lt;code&gt;navigateFrom&lt;/code&gt;</ph> has a result type that is not compatible with the property type of <ph id=\"ph4\">&lt;code&gt;fromEnd&lt;/code&gt;</ph>.","source":"<code>fromEnd</code> and <code>toEnd</code> are not declared by the same relationship type, or <code>navigateFrom</code> has a result type that is not compatible with the property type of <code>fromEnd</code>."}],"pos":[225228,225438],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbRelationshipNavigationExpression\"></xref> representing the navigation of a composition or association relationship.","nodes":[{"pos":[0,175],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbRelationshipNavigationExpression\"&gt;&lt;/xref&gt;</ph> representing the navigation of a composition or association relationship.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbRelationshipNavigationExpression\"></xref> representing the navigation of a composition or association relationship."}],"pos":[227025,227201],"yaml":true},{"content":"<xref:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression> requires that navigation always occur from a reference, and so `navigateFrom` must always have a reference result type.","nodes":[{"pos":[0,193],"content":"<ph id=\"ph1\">&lt;xref:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression&gt;</ph> requires that navigation always occur from a reference, and so <ph id=\"ph2\">`navigateFrom`</ph> must always have a reference result type.","source":"<xref:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression> requires that navigation always occur from a reference, and so `navigateFrom` must always have a reference result type."}],"pos":[227212,227406],"yaml":true,"extradata":"MT"},{"content":"Metadata for the relation type that represents the relationship.","nodes":[{"pos":[0,64],"content":"Metadata for the relation type that represents the relationship.","nodes":[{"content":"Metadata for the relation type that represents the relationship.","pos":[0,64]}]}],"pos":[227775,227840],"yaml":true},{"content":"The name of the property of the relation type that represents the end of the relationship from which navigation should occur.","nodes":[{"pos":[0,125],"content":"The name of the property of the relation type that represents the end of the relationship from which navigation should occur.","nodes":[{"content":"The name of the property of the relation type that represents the end of the relationship from which navigation should occur.","pos":[0,125]}]}],"pos":[227907,228033],"yaml":true},{"content":"The name of the property of the relation type that represents the end of the relationship to which navigation should occur.","nodes":[{"pos":[0,123],"content":"The name of the property of the relation type that represents the end of the relationship to which navigation should occur.","nodes":[{"content":"The name of the property of the relation type that represents the end of the relationship to which navigation should occur.","pos":[0,123]}]}],"pos":[228098,228222],"yaml":true},{"content":"An expression the specifies the instance from which naviagtion should occur.","nodes":[{"pos":[0,76],"content":"An expression the specifies the instance from which naviagtion should occur.","nodes":[{"content":"An expression the specifies the instance from which naviagtion should occur.","pos":[0,76]}]}],"pos":[228321,228398],"yaml":true},{"content":"A new DbRelationshipNavigationExpression representing the navigation of the specified from and to relation ends of the specified relation type from the specified navigation source instance.","nodes":[{"pos":[0,189],"content":"A new DbRelationshipNavigationExpression representing the navigation of the specified from and to relation ends of the specified relation type from the specified navigation source instance.","nodes":[{"content":"A new DbRelationshipNavigationExpression representing the navigation of the specified from and to relation ends of the specified relation type from the specified navigation source instance.","pos":[0,189]}]}],"pos":[228508,228698],"yaml":true},{"content":"<code>type</code>,  <code>fromEndName</code>,  <code>toEndName</code> or <code>navigateFrom</code> is null.","nodes":[{"pos":[0,107],"content":"<ph id=\"ph1\">&lt;code&gt;type&lt;/code&gt;</ph>,  <ph id=\"ph2\">&lt;code&gt;fromEndName&lt;/code&gt;</ph>,  <ph id=\"ph3\">&lt;code&gt;toEndName&lt;/code&gt;</ph> or <ph id=\"ph4\">&lt;code&gt;navigateFrom&lt;/code&gt;</ph> is null.","source":"<code>type</code>,  <code>fromEndName</code>,  <code>toEndName</code> or <code>navigateFrom</code> is null."}],"pos":[228906,229014],"yaml":true},{"content":"<code>type</code> is not associated with this command tree's metadata workspace or <code>navigateFrom</code> is associated with a different command tree, or <code>type</code> does not declare a relation end property with name <code>toEndName</code> or <code>fromEndName</code>, or <code>navigateFrom</code> has a result type that is not compatible with the property type of the relation end property with name <code>fromEndName</code>.","nodes":[{"pos":[0,435],"content":"<ph id=\"ph1\">&lt;code&gt;type&lt;/code&gt;</ph> is not associated with this command tree's metadata workspace or <ph id=\"ph2\">&lt;code&gt;navigateFrom&lt;/code&gt;</ph> is associated with a different command tree, or <ph id=\"ph3\">&lt;code&gt;type&lt;/code&gt;</ph> does not declare a relation end property with name <ph id=\"ph4\">&lt;code&gt;toEndName&lt;/code&gt;</ph> or <ph id=\"ph5\">&lt;code&gt;fromEndName&lt;/code&gt;</ph>, or <ph id=\"ph6\">&lt;code&gt;navigateFrom&lt;/code&gt;</ph> has a result type that is not compatible with the property type of the relation end property with name <ph id=\"ph7\">&lt;code&gt;fromEndName&lt;/code&gt;</ph>.","source":"<code>type</code> is not associated with this command tree's metadata workspace or <code>navigateFrom</code> is associated with a different command tree, or <code>type</code> does not declare a relation end property with name <code>toEndName</code> or <code>fromEndName</code>, or <code>navigateFrom</code> has a result type that is not compatible with the property type of the relation end property with name <code>fromEndName</code>."}],"pos":[229108,229544],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbArithmeticExpression\"></xref> that negates the value of the argument.","nodes":[{"pos":[0,129],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbArithmeticExpression\"&gt;&lt;/xref&gt;</ph> that negates the value of the argument.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbArithmeticExpression\"></xref> that negates the value of the argument."}],"pos":[230807,230937],"yaml":true},{"content":"An expression that specifies the argument.","nodes":[{"pos":[0,42],"content":"An expression that specifies the argument.","nodes":[{"content":"An expression that specifies the argument.","pos":[0,42]}]}],"pos":[231209,231252],"yaml":true},{"content":"A new DbArithmeticExpression representing the negation operation.","nodes":[{"pos":[0,65],"content":"A new DbArithmeticExpression representing the negation operation.","nodes":[{"content":"A new DbArithmeticExpression representing the negation operation.","pos":[0,65]}]}],"pos":[231350,231416],"yaml":true},{"content":"<code>argument</code> is null.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;argument&lt;/code&gt;</ph> is null.","source":"<code>argument</code> is null."}],"pos":[231622,231653],"yaml":true},{"content":"No numeric result type exists for <code>argument</code>.","nodes":[{"pos":[0,56],"content":"No numeric result type exists for <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">argument</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"No numeric result type exists for <code>argument</code>."}],"pos":[231747,231804],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbNewInstanceExpression\"></xref>. If the type argument is a collection type, the arguments specify the elements of the collection. Otherwise the arguments are used as property or column values in the new instance.","nodes":[{"pos":[0,271],"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbNewInstanceExpression\"></xref>. If the type argument is a collection type, the arguments specify the elements of the collection. Otherwise the arguments are used as property or column values in the new instance.","nodes":[{"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbNewInstanceExpression\"&gt;&lt;/xref&gt;</ph>.","pos":[0,91],"source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbNewInstanceExpression\"></xref>."},{"content":"If the type argument is a collection type, the arguments specify the elements of the collection.","pos":[92,188]},{"content":"Otherwise the arguments are used as property or column values in the new instance.","pos":[189,271]}]}],"pos":[233346,233618],"yaml":true},{"content":"If `instanceType` is a a collection type then every expression in `arguments` must have a result type that is promotable to the element type of the `instanceType`. If `instanceType` is a row type,  `arguments` must contain as many expressions as there are columns in the row type, and the result type of each expression must be equal or promotable to the type of the corresponding column. A row type that does not declare any columns is invalid. If `instanceType` is an entity type,  `arguments` must contain as many expressions as there are properties defined by the type, and the result type of each expression must be equal or promotable to the type of the corresponding property.","nodes":[{"pos":[0,683],"content":"If `instanceType` is a a collection type then every expression in `arguments` must have a result type that is promotable to the element type of the `instanceType`. If `instanceType` is a row type,  `arguments` must contain as many expressions as there are columns in the row type, and the result type of each expression must be equal or promotable to the type of the corresponding column. A row type that does not declare any columns is invalid. If `instanceType` is an entity type,  `arguments` must contain as many expressions as there are properties defined by the type, and the result type of each expression must be equal or promotable to the type of the corresponding property.","nodes":[{"content":"If <ph id=\"ph1\">`instanceType`</ph> is a a collection type then every expression in <ph id=\"ph2\">`arguments`</ph> must have a result type that is promotable to the element type of the <ph id=\"ph3\">`instanceType`</ph>.","pos":[0,163],"source":"If `instanceType` is a a collection type then every expression in `arguments` must have a result type that is promotable to the element type of the `instanceType`."},{"content":"If <ph id=\"ph1\">`instanceType`</ph> is a row type,  <ph id=\"ph2\">`arguments`</ph> must contain as many expressions as there are columns in the row type, and the result type of each expression must be equal or promotable to the type of the corresponding column.","pos":[164,388],"source":" If `instanceType` is a row type,  `arguments` must contain as many expressions as there are columns in the row type, and the result type of each expression must be equal or promotable to the type of the corresponding column."},{"content":"A row type that does not declare any columns is invalid.","pos":[389,445]},{"content":"If <ph id=\"ph1\">`instanceType`</ph> is an entity type,  <ph id=\"ph2\">`arguments`</ph> must contain as many expressions as there are properties defined by the type, and the result type of each expression must be equal or promotable to the type of the corresponding property.","pos":[446,683],"source":" If `instanceType` is an entity type,  `arguments` must contain as many expressions as there are properties defined by the type, and the result type of each expression must be equal or promotable to the type of the corresponding property."}]}],"pos":[233629,234313],"yaml":true,"extradata":"MT"},{"content":"The type of the new instance.","nodes":[{"pos":[0,29],"content":"The type of the new instance.","nodes":[{"content":"The type of the new instance.","pos":[0,29]}]}],"pos":[234667,234697],"yaml":true},{"content":"Expressions that specify values of the new instances, interpreted according to the instance's type.","nodes":[{"pos":[0,99],"content":"Expressions that specify values of the new instances, interpreted according to the instance's type.","nodes":[{"content":"Expressions that specify values of the new instances, interpreted according to the instance's type.","pos":[0,99]}]}],"pos":[234833,234933],"yaml":true},{"content":"A new DbNewInstanceExpression with the specified type and arguments.","nodes":[{"pos":[0,68],"content":"A new DbNewInstanceExpression with the specified type and arguments.","nodes":[{"content":"A new DbNewInstanceExpression with the specified type and arguments.","pos":[0,68]}]}],"pos":[235032,235101],"yaml":true},{"content":"<code>instanceType</code> or <code>arguments</code> is null, or <code>arguments</code> contains null.","nodes":[{"pos":[0,101],"content":"<ph id=\"ph1\">&lt;code&gt;instanceType&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;arguments&lt;/code&gt;</ph> is null, or <ph id=\"ph3\">&lt;code&gt;arguments&lt;/code&gt;</ph> contains null.","source":"<code>instanceType</code> or <code>arguments</code> is null, or <code>arguments</code> contains null."}],"pos":[235304,235406],"yaml":true},{"content":"<code>arguments</code> is empty or the result types of the contained expressions do not match the requirements of <code>instanceType</code> (as explained in the remarks section).","nodes":[{"pos":[0,178],"content":"<ph id=\"ph1\">&lt;code&gt;arguments&lt;/code&gt;</ph> is empty or the result types of the contained expressions do not match the requirements of <ph id=\"ph2\">&lt;code&gt;instanceType&lt;/code&gt;</ph> (as explained in the remarks section).","source":"<code>arguments</code> is empty or the result types of the contained expressions do not match the requirements of <code>instanceType</code> (as explained in the remarks section)."}],"pos":[235500,235679],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbNewInstanceExpression\"></xref>. If the type argument is a collection type, the arguments specify the elements of the collection. Otherwise the arguments are used as property or column values in the new instance.","nodes":[{"pos":[0,271],"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbNewInstanceExpression\"></xref>. If the type argument is a collection type, the arguments specify the elements of the collection. Otherwise the arguments are used as property or column values in the new instance.","nodes":[{"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbNewInstanceExpression\"&gt;&lt;/xref&gt;</ph>.","pos":[0,91],"source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbNewInstanceExpression\"></xref>."},{"content":"If the type argument is a collection type, the arguments specify the elements of the collection.","pos":[92,188]},{"content":"Otherwise the arguments are used as property or column values in the new instance.","pos":[189,271]}]}],"pos":[237074,237346],"yaml":true},{"content":"If `instanceType` is a a collection type then every expression in `arguments` must have a result type that is promotable to the element type of the `instanceType`. If `instanceType` is a row type,  `arguments` must contain as many expressions as there are columns in the row type, and the result type of each expression must be equal or promotable to the type of the corresponding column. A row type that does not declare any columns is invalid. If `instanceType` is an entity type,  `arguments` must contain as many expressions as there are properties defined by the type, and the result type of each expression must be equal or promotable to the type of the corresponding property.","nodes":[{"pos":[0,683],"content":"If `instanceType` is a a collection type then every expression in `arguments` must have a result type that is promotable to the element type of the `instanceType`. If `instanceType` is a row type,  `arguments` must contain as many expressions as there are columns in the row type, and the result type of each expression must be equal or promotable to the type of the corresponding column. A row type that does not declare any columns is invalid. If `instanceType` is an entity type,  `arguments` must contain as many expressions as there are properties defined by the type, and the result type of each expression must be equal or promotable to the type of the corresponding property.","nodes":[{"content":"If <ph id=\"ph1\">`instanceType`</ph> is a a collection type then every expression in <ph id=\"ph2\">`arguments`</ph> must have a result type that is promotable to the element type of the <ph id=\"ph3\">`instanceType`</ph>.","pos":[0,163],"source":"If `instanceType` is a a collection type then every expression in `arguments` must have a result type that is promotable to the element type of the `instanceType`."},{"content":"If <ph id=\"ph1\">`instanceType`</ph> is a row type,  <ph id=\"ph2\">`arguments`</ph> must contain as many expressions as there are columns in the row type, and the result type of each expression must be equal or promotable to the type of the corresponding column.","pos":[164,388],"source":" If `instanceType` is a row type,  `arguments` must contain as many expressions as there are columns in the row type, and the result type of each expression must be equal or promotable to the type of the corresponding column."},{"content":"A row type that does not declare any columns is invalid.","pos":[389,445]},{"content":"If <ph id=\"ph1\">`instanceType`</ph> is an entity type,  <ph id=\"ph2\">`arguments`</ph> must contain as many expressions as there are properties defined by the type, and the result type of each expression must be equal or promotable to the type of the corresponding property.","pos":[446,683],"source":" If `instanceType` is an entity type,  `arguments` must contain as many expressions as there are properties defined by the type, and the result type of each expression must be equal or promotable to the type of the corresponding property."}]}],"pos":[237357,238041],"yaml":true,"extradata":"MT"},{"content":"The type of the new instance.","nodes":[{"pos":[0,29],"content":"The type of the new instance.","nodes":[{"content":"The type of the new instance.","pos":[0,29]}]}],"pos":[238357,238387],"yaml":true},{"content":"Expressions that specify values of the new instances, interpreted according to the instance's type.","nodes":[{"pos":[0,99],"content":"Expressions that specify values of the new instances, interpreted according to the instance's type.","nodes":[{"content":"Expressions that specify values of the new instances, interpreted according to the instance's type.","pos":[0,99]}]}],"pos":[238485,238585],"yaml":true},{"content":"A new DbNewInstanceExpression with the specified type and arguments.","nodes":[{"pos":[0,68],"content":"A new DbNewInstanceExpression with the specified type and arguments.","nodes":[{"content":"A new DbNewInstanceExpression with the specified type and arguments.","pos":[0,68]}]}],"pos":[238684,238753],"yaml":true},{"content":"<code>instanceType</code> or <code>arguments</code> is null, or <code>arguments</code> contains null.","nodes":[{"pos":[0,101],"content":"<ph id=\"ph1\">&lt;code&gt;instanceType&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;arguments&lt;/code&gt;</ph> is null, or <ph id=\"ph3\">&lt;code&gt;arguments&lt;/code&gt;</ph> contains null.","source":"<code>instanceType</code> or <code>arguments</code> is null, or <code>arguments</code> contains null."}],"pos":[238956,239058],"yaml":true},{"content":"<code>arguments</code> is empty or the result types of the contained expressions do not match the requirements of <code>instanceType</code> (as explained in the remarks section).","nodes":[{"pos":[0,178],"content":"<ph id=\"ph1\">&lt;code&gt;arguments&lt;/code&gt;</ph> is empty or the result types of the contained expressions do not match the requirements of <ph id=\"ph2\">&lt;code&gt;instanceType&lt;/code&gt;</ph> (as explained in the remarks section).","source":"<code>arguments</code> is empty or the result types of the contained expressions do not match the requirements of <code>instanceType</code> (as explained in the remarks section)."}],"pos":[239152,239331],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbNewInstanceExpression\"></xref> that constructs a collection containing the specified elements. The type of the collection is based on the common type of the elements. If no common element type exists an exception is thrown.","nodes":[{"pos":[0,283],"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbNewInstanceExpression\"></xref> that constructs a collection containing the specified elements. The type of the collection is based on the common type of the elements. If no common element type exists an exception is thrown.","nodes":[{"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbNewInstanceExpression\"&gt;&lt;/xref&gt;</ph> that constructs a collection containing the specified elements.","pos":[0,154],"source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbNewInstanceExpression\"></xref> that constructs a collection containing the specified elements."},{"content":"The type of the collection is based on the common type of the elements.","pos":[155,226]},{"content":"If no common element type exists an exception is thrown.","pos":[227,283]}]}],"pos":[240795,241079],"yaml":true},{"content":"A list of expressions that provide the elements of the collection.","nodes":[{"pos":[0,66],"content":"A list of expressions that provide the elements of the collection.","nodes":[{"content":"A list of expressions that provide the elements of the collection.","pos":[0,66]}]}],"pos":[241434,241501],"yaml":true},{"content":"A new DbNewInstanceExpression with the specified collection type and arguments.","nodes":[{"pos":[0,79],"content":"A new DbNewInstanceExpression with the specified collection type and arguments.","nodes":[{"content":"A new DbNewInstanceExpression with the specified collection type and arguments.","pos":[0,79]}]}],"pos":[241600,241680],"yaml":true},{"content":"<code>elements</code> is null, or contains null.","nodes":[{"pos":[0,48],"content":"<ph id=\"ph1\">&lt;code&gt;elements&lt;/code&gt;</ph> is null, or contains null.","source":"<code>elements</code> is null, or contains null."}],"pos":[241893,241942],"yaml":true},{"content":"<code>elements</code> is empty or contains expressions for which no common result type exists.","nodes":[{"pos":[0,94],"content":"<ph id=\"ph1\">&lt;code&gt;elements&lt;/code&gt;</ph> is empty or contains expressions for which no common result type exists.","source":"<code>elements</code> is empty or contains expressions for which no common result type exists."}],"pos":[242036,242131],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbNewInstanceExpression\"></xref> that constructs a collection containing the specified elements. The type of the collection is based on the common type of the elements. If no common element type exists an exception is thrown.","nodes":[{"pos":[0,283],"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbNewInstanceExpression\"></xref> that constructs a collection containing the specified elements. The type of the collection is based on the common type of the elements. If no common element type exists an exception is thrown.","nodes":[{"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbNewInstanceExpression\"&gt;&lt;/xref&gt;</ph> that constructs a collection containing the specified elements.","pos":[0,154],"source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbNewInstanceExpression\"></xref> that constructs a collection containing the specified elements."},{"content":"The type of the collection is based on the common type of the elements.","pos":[155,226]},{"content":"If no common element type exists an exception is thrown.","pos":[227,283]}]}],"pos":[243448,243732],"yaml":true},{"content":"A list of expressions that provide the elements of the collection.","nodes":[{"pos":[0,66],"content":"A list of expressions that provide the elements of the collection.","nodes":[{"content":"A list of expressions that provide the elements of the collection.","pos":[0,66]}]}],"pos":[244011,244078],"yaml":true},{"content":"A new DbNewInstanceExpression with the specified collection type and arguments.","nodes":[{"pos":[0,79],"content":"A new DbNewInstanceExpression with the specified collection type and arguments.","nodes":[{"content":"A new DbNewInstanceExpression with the specified collection type and arguments.","pos":[0,79]}]}],"pos":[244177,244257],"yaml":true},{"content":"<code>elements</code> is null, or contains null..","nodes":[{"pos":[0,49],"content":"<ph id=\"ph1\">&lt;code&gt;elements&lt;/code&gt;</ph> is null, or contains null..","source":"<code>elements</code> is null, or contains null.."}],"pos":[244470,244520],"yaml":true},{"content":"<code>elements</code> is empty or contains expressions for which no common result type exists.","nodes":[{"pos":[0,94],"content":"<ph id=\"ph1\">&lt;code&gt;elements&lt;/code&gt;</ph> is empty or contains expressions for which no common result type exists.","source":"<code>elements</code> is empty or contains expressions for which no common result type exists."}],"pos":[244614,244709],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbNewInstanceExpression\"></xref> that constructs an empty collection of the specified collection type.","nodes":[{"pos":[0,160],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbNewInstanceExpression\"&gt;&lt;/xref&gt;</ph> that constructs an empty collection of the specified collection type.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbNewInstanceExpression\"></xref> that constructs an empty collection of the specified collection type."}],"pos":[246005,246166],"yaml":true},{"content":"The type metadata for the collection to create","nodes":[{"pos":[0,46],"content":"The type metadata for the collection to create","nodes":[{"content":"The type metadata for the collection to create","pos":[0,46]}]}],"pos":[246443,246490],"yaml":true},{"content":"A new DbNewInstanceExpression with the specified collection type and an empty <code>Arguments</code> list.","nodes":[{"pos":[0,106],"content":"A new DbNewInstanceExpression with the specified collection type and an empty <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">Arguments</ph><ept id=\"p1\">&lt;/code&gt;</ept> list.","source":"A new DbNewInstanceExpression with the specified collection type and an empty <code>Arguments</code> list."}],"pos":[246589,246696],"yaml":true},{"content":"<code>collectionType</code> is null.","nodes":[{"pos":[0,36],"content":"<ph id=\"ph1\">&lt;code&gt;collectionType&lt;/code&gt;</ph> is null.","source":"<code>collectionType</code> is null."}],"pos":[246914,246951],"yaml":true},{"content":"<code>collectionType</code> is not a collection type.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">&lt;code&gt;collectionType&lt;/code&gt;</ph> is not a collection type.","source":"<code>collectionType</code> is not a collection type."}],"pos":[247045,247099],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbNewInstanceExpression\"></xref> that produces a row with the specified named columns and the given values, specified as expressions.","nodes":[{"pos":[0,191],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbNewInstanceExpression\"&gt;&lt;/xref&gt;</ph> that produces a row with the specified named columns and the given values, specified as expressions.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbNewInstanceExpression\"></xref> that produces a row with the specified named columns and the given values, specified as expressions."}],"pos":[248749,248941],"yaml":true},{"content":"A list of string-DbExpression key-value pairs that defines the structure and values of the row.","nodes":[{"pos":[0,95],"content":"A list of string-DbExpression key-value pairs that defines the structure and values of the row.","nodes":[{"content":"A list of string-DbExpression key-value pairs that defines the structure and values of the row.","pos":[0,95]}]}],"pos":[249400,249496],"yaml":true},{"content":"A new DbNewInstanceExpression that represents the construction of the row.","nodes":[{"pos":[0,74],"content":"A new DbNewInstanceExpression that represents the construction of the row.","nodes":[{"content":"A new DbNewInstanceExpression that represents the construction of the row.","pos":[0,74]}]}],"pos":[249595,249670],"yaml":true},{"content":"<code>columnValues</code> is null or contains an element with a null column name or expression.","nodes":[{"pos":[0,95],"content":"<ph id=\"ph1\">&lt;code&gt;columnValues&lt;/code&gt;</ph> is null or contains an element with a null column name or expression.","source":"<code>columnValues</code> is null or contains an element with a null column name or expression."}],"pos":[249876,249972],"yaml":true},{"content":"<code>columnValues</code> is empty, or contains a duplicate or invalid column name.","nodes":[{"pos":[0,83],"content":"<ph id=\"ph1\">&lt;code&gt;columnValues&lt;/code&gt;</ph> is empty, or contains a duplicate or invalid column name.","source":"<code>columnValues</code> is empty, or contains a duplicate or invalid column name."}],"pos":[250066,250150],"yaml":true},{"content":"Creates a <xref href=\"System.Data.Common.CommandTrees.DbNotExpression\"></xref> that performs the logical negation of the given argument.","nodes":[{"pos":[0,136],"content":"Creates a <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbNotExpression\"&gt;&lt;/xref&gt;</ph> that performs the logical negation of the given argument.","source":"Creates a <xref href=\"System.Data.Common.CommandTrees.DbNotExpression\"></xref> that performs the logical negation of the given argument."}],"pos":[251395,251532],"yaml":true},{"content":"A Boolean expression that specifies the argument.","nodes":[{"pos":[0,49],"content":"A Boolean expression that specifies the argument.","nodes":[{"content":"A Boolean expression that specifies the argument.","pos":[0,49]}]}],"pos":[251794,251844],"yaml":true},{"content":"A new DbNotExpression with the specified argument.","nodes":[{"pos":[0,50],"content":"A new DbNotExpression with the specified argument.","nodes":[{"content":"A new DbNotExpression with the specified argument.","pos":[0,50]}]}],"pos":[251935,251986],"yaml":true},{"content":"<code>argument</code> is null.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;argument&lt;/code&gt;</ph> is null.","source":"<code>argument</code> is null."}],"pos":[252189,252220],"yaml":true},{"content":"<code>argument</code> does not have a Boolean result type.","nodes":[{"pos":[0,58],"content":"<ph id=\"ph1\">&lt;code&gt;argument&lt;/code&gt;</ph> does not have a Boolean result type.","source":"<code>argument</code> does not have a Boolean result type."}],"pos":[252314,252373],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbComparisonExpression\"></xref> that compares the left and right arguments for inequality.","nodes":[{"pos":[0,148],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbComparisonExpression\"&gt;&lt;/xref&gt;</ph> that compares the left and right arguments for inequality.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbComparisonExpression\"></xref> that compares the left and right arguments for inequality."}],"pos":[253825,253974],"yaml":true},{"content":"An expression that specifies the left argument.","nodes":[{"pos":[0,47],"content":"An expression that specifies the left argument.","nodes":[{"content":"An expression that specifies the left argument.","pos":[0,47]}]}],"pos":[254292,254340],"yaml":true},{"content":"An expression that specifies the right argument.","nodes":[{"pos":[0,48],"content":"An expression that specifies the right argument.","nodes":[{"content":"An expression that specifies the right argument.","pos":[0,48]}]}],"pos":[254432,254481],"yaml":true},{"content":"A new DbComparisonExpression representing the inequality comparison.","nodes":[{"pos":[0,68],"content":"A new DbComparisonExpression representing the inequality comparison.","nodes":[{"content":"A new DbComparisonExpression representing the inequality comparison.","pos":[0,68]}]}],"pos":[254579,254648],"yaml":true},{"content":"<code>left</code> or <code>right</code> is null.","nodes":[{"pos":[0,48],"content":"<ph id=\"ph1\">&lt;code&gt;left&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;right&lt;/code&gt;</ph> is null.","source":"<code>left</code> or <code>right</code> is null."}],"pos":[254856,254905],"yaml":true},{"content":"No common equality-comparable result type exists between <code>left</code> and <code>right</code>.","nodes":[{"pos":[0,98],"content":"No common equality-comparable result type exists between <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">left</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">right</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"No common equality-comparable result type exists between <code>left</code> and <code>right</code>."}],"pos":[254999,255098],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbNullExpression\"></xref>, which represents a typed null value.","nodes":[{"pos":[0,121],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbNullExpression\"&gt;&lt;/xref&gt;</ph>, which represents a typed null value.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbNullExpression\"></xref>, which represents a typed null value."}],"pos":[256310,256432],"yaml":true},{"content":"The type of the null value.","nodes":[{"pos":[0,27],"content":"The type of the null value.","nodes":[{"content":"The type of the null value.","pos":[0,27]}]}],"pos":[256676,256704],"yaml":true},{"content":"An instance of DbNullExpression.","nodes":[{"pos":[0,32],"content":"An instance of DbNullExpression.","nodes":[{"content":"An instance of DbNullExpression.","pos":[0,32]}]}],"pos":[256796,256829],"yaml":true},{"content":"<code>nullType</code> is null.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;nullType&lt;/code&gt;</ph> is null.","source":"<code>nullType</code> is null."}],"pos":[257033,257064],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbOfTypeExpression\"></xref> that produces a set consisting of the elements of the given input set that are of the specified type.","nodes":[{"pos":[0,187],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbOfTypeExpression\"&gt;&lt;/xref&gt;</ph> that produces a set consisting of the elements of the given input set that are of the specified type.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbOfTypeExpression\"></xref> that produces a set consisting of the elements of the given input set that are of the specified type."}],"pos":[258465,258653],"yaml":true},{"content":"DbOfTypeExpression requires that `argument` has a collection result type with a polymorphic element type, and that `type` is a type from the same type hierarchy as that element type.","nodes":[{"pos":[0,182],"content":"DbOfTypeExpression requires that <ph id=\"ph1\">`argument`</ph> has a collection result type with a polymorphic element type, and that <ph id=\"ph2\">`type`</ph> is a type from the same type hierarchy as that element type.","source":"DbOfTypeExpression requires that `argument` has a collection result type with a polymorphic element type, and that `type` is a type from the same type hierarchy as that element type."}],"pos":[258664,258847],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that specifies the input set.","nodes":[{"pos":[0,97],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;&lt;/xref&gt;</ph> that specifies the input set.","source":"A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that specifies the input set."}],"pos":[259156,259254],"yaml":true},{"content":"Type metadata for the type that elements of the input set must have to be included in the resulting set.","nodes":[{"pos":[0,104],"content":"Type metadata for the type that elements of the input set must have to be included in the resulting set.","nodes":[{"content":"Type metadata for the type that elements of the input set must have to be included in the resulting set.","pos":[0,104]}]}],"pos":[259335,259440],"yaml":true},{"content":"A new DbOfTypeExpression with the specified set argument and type, and an ExpressionKind of <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind.OfType\"></xref>.","nodes":[{"pos":[0,169],"content":"A new DbOfTypeExpression with the specified set argument and type, and an ExpressionKind of <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpressionKind.OfType\"&gt;&lt;/xref&gt;</ph>.","source":"A new DbOfTypeExpression with the specified set argument and type, and an ExpressionKind of <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind.OfType\"></xref>."}],"pos":[259534,259704],"yaml":true},{"content":"<code>argument</code> or <code>type</code> is null.","nodes":[{"pos":[0,51],"content":"<ph id=\"ph1\">&lt;code&gt;argument&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;type&lt;/code&gt;</ph> is null.","source":"<code>argument</code> or <code>type</code> is null."}],"pos":[259910,259962],"yaml":true},{"content":"<code>argument</code> does not have a collection result type, or <code>type</code> is not a type in the same type hierarchy as the element type of the collection result type of <code>argument</code>.","nodes":[{"pos":[0,199],"content":"<ph id=\"ph1\">&lt;code&gt;argument&lt;/code&gt;</ph> does not have a collection result type, or <ph id=\"ph2\">&lt;code&gt;type&lt;/code&gt;</ph> is not a type in the same type hierarchy as the element type of the collection result type of <ph id=\"ph3\">&lt;code&gt;argument&lt;/code&gt;</ph>.","source":"<code>argument</code> does not have a collection result type, or <code>type</code> is not a type in the same type hierarchy as the element type of the collection result type of <code>argument</code>."}],"pos":[260056,260256],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbOfTypeExpression\"></xref> that produces a set consisting of the elements of the given input set that are of exactly the specified type.","nodes":[{"pos":[0,195],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbOfTypeExpression\"&gt;&lt;/xref&gt;</ph> that produces a set consisting of the elements of the given input set that are of exactly the specified type.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbOfTypeExpression\"></xref> that produces a set consisting of the elements of the given input set that are of exactly the specified type."}],"pos":[261681,261877],"yaml":true},{"content":"DbOfTypeExpression requires that `argument` has a collection result type with a polymorphic element type, and that `type` is a type from the same type hierarchy as that element type.","nodes":[{"pos":[0,182],"content":"DbOfTypeExpression requires that <ph id=\"ph1\">`argument`</ph> has a collection result type with a polymorphic element type, and that <ph id=\"ph2\">`type`</ph> is a type from the same type hierarchy as that element type.","source":"DbOfTypeExpression requires that `argument` has a collection result type with a polymorphic element type, and that `type` is a type from the same type hierarchy as that element type."}],"pos":[261888,262071],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that specifies the input set.","nodes":[{"pos":[0,98],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;&lt;/xref&gt;</ph> that specifies the input set.","source":"An <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that specifies the input set."}],"pos":[262384,262483],"yaml":true},{"content":"Type metadata for the type that elements of the input set must match exactly to be included in the resulting set.","nodes":[{"pos":[0,113],"content":"Type metadata for the type that elements of the input set must match exactly to be included in the resulting set.","nodes":[{"content":"Type metadata for the type that elements of the input set must match exactly to be included in the resulting set.","pos":[0,113]}]}],"pos":[262564,262678],"yaml":true},{"content":"A new DbOfTypeExpression with the specified set argument and type, and an ExpressionKind of <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind.OfTypeOnly\"></xref>.","nodes":[{"pos":[0,173],"content":"A new DbOfTypeExpression with the specified set argument and type, and an ExpressionKind of <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpressionKind.OfTypeOnly\"&gt;&lt;/xref&gt;</ph>.","source":"A new DbOfTypeExpression with the specified set argument and type, and an ExpressionKind of <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind.OfTypeOnly\"></xref>."}],"pos":[262772,262946],"yaml":true},{"content":"<code>argument</code> or <code>type</code> is null.","nodes":[{"pos":[0,51],"content":"<ph id=\"ph1\">&lt;code&gt;argument&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;type&lt;/code&gt;</ph> is null.","source":"<code>argument</code> or <code>type</code> is null."}],"pos":[263156,263208],"yaml":true},{"content":"<code>argument</code> does not have a collection result type, or <code>type</code> is not a type in the same type hierarchy as the element type of the collection result type of <code>argument</code>.","nodes":[{"pos":[0,199],"content":"<ph id=\"ph1\">&lt;code&gt;argument&lt;/code&gt;</ph> does not have a collection result type, or <ph id=\"ph2\">&lt;code&gt;type&lt;/code&gt;</ph> is not a type in the same type hierarchy as the element type of the collection result type of <ph id=\"ph3\">&lt;code&gt;argument&lt;/code&gt;</ph>.","source":"<code>argument</code> does not have a collection result type, or <code>type</code> is not a type in the same type hierarchy as the element type of the collection result type of <code>argument</code>."}],"pos":[263302,263502],"yaml":true},{"content":"Creates an <xref href=\"System.Data.Common.CommandTrees.DbOrExpression\"></xref> that performs the logical Or of the left and right arguments.","nodes":[{"pos":[0,140],"content":"Creates an <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbOrExpression\"&gt;&lt;/xref&gt;</ph> that performs the logical Or of the left and right arguments.","source":"Creates an <xref href=\"System.Data.Common.CommandTrees.DbOrExpression\"></xref> that performs the logical Or of the left and right arguments."}],"pos":[264918,265059],"yaml":true},{"content":"A Boolean expression that specifies the left argument.","nodes":[{"pos":[0,54],"content":"A Boolean expression that specifies the left argument.","nodes":[{"content":"A Boolean expression that specifies the left argument.","pos":[0,54]}]}],"pos":[265363,265418],"yaml":true},{"content":"A Boolean expression that specifies the right argument.","nodes":[{"pos":[0,55],"content":"A Boolean expression that specifies the right argument.","nodes":[{"content":"A Boolean expression that specifies the right argument.","pos":[0,55]}]}],"pos":[265510,265566],"yaml":true},{"content":"A new DbOrExpression with the specified arguments.","nodes":[{"pos":[0,50],"content":"A new DbOrExpression with the specified arguments.","nodes":[{"content":"A new DbOrExpression with the specified arguments.","pos":[0,50]}]}],"pos":[265656,265707],"yaml":true},{"content":"<code>left</code> or <code>right</code> is null.","nodes":[{"pos":[0,48],"content":"<ph id=\"ph1\">&lt;code&gt;left&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;right&lt;/code&gt;</ph> is null.","source":"<code>left</code> or <code>right</code> is null."}],"pos":[265909,265958],"yaml":true},{"content":"<code>left</code> or <code>right</code> does not have a Boolean result type.","nodes":[{"pos":[0,76],"content":"<ph id=\"ph1\">&lt;code&gt;left&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;right&lt;/code&gt;</ph> does not have a Boolean result type.","source":"<code>left</code> or <code>right</code> does not have a Boolean result type."}],"pos":[266052,266129],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbSortExpression\"></xref> that sorts the given input set by the specified sort key, with ascending sort order and default collation.","nodes":[{"pos":[0,190],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbSortExpression\"&gt;&lt;/xref&gt;</ph> that sorts the given input set by the specified sort key, with ascending sort order and default collation.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbSortExpression\"></xref> that sorts the given input set by the specified sort key, with ascending sort order and default collation."}],"pos":[267806,267997],"yaml":true},{"content":"An expression that specifies the input set.","nodes":[{"pos":[0,43],"content":"An expression that specifies the input set.","nodes":[{"content":"An expression that specifies the input set.","pos":[0,43]}]}],"pos":[268365,268409],"yaml":true},{"content":"A method that specifies how to derive the sort key expression given a member of the input set. This method must produce an expression with an order-comparable result type that provides the sort key definition.","nodes":[{"pos":[0,209],"content":"A method that specifies how to derive the sort key expression given a member of the input set. This method must produce an expression with an order-comparable result type that provides the sort key definition.","nodes":[{"content":"A method that specifies how to derive the sort key expression given a member of the input set. This method must produce an expression with an order-comparable result type that provides the sort key definition.","pos":[0,209],"nodes":[{"content":"A method that specifies how to derive the sort key expression given a member of the input set.","pos":[0,94]},{"content":"This method must produce an expression with an order-comparable result type that provides the sort key definition.","pos":[95,209]}]}]}],"pos":[268561,268771],"yaml":true},{"content":"A new DbSortExpression that represents the order-by operation.","nodes":[{"pos":[0,62],"content":"A new DbSortExpression that represents the order-by operation.","nodes":[{"content":"A new DbSortExpression that represents the order-by operation.","pos":[0,62]}]}],"pos":[268863,268926],"yaml":true},{"content":"The expression produced by <code>sortKey</code> is null.","nodes":[{"pos":[0,56],"content":"The expression produced by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">sortKey</ph><ept id=\"p1\">&lt;/code&gt;</ept> is null.","source":"The expression produced by <code>sortKey</code> is null."}],"pos":[269133,269190],"yaml":true},{"content":"The expression produced by <code>sortKey</code> does not have an order-comparable result type.","nodes":[{"pos":[0,94],"content":"The expression produced by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">sortKey</ph><ept id=\"p1\">&lt;/code&gt;</ept> does not have an order-comparable result type.","source":"The expression produced by <code>sortKey</code> does not have an order-comparable result type."}],"pos":[269284,269379],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbSortExpression\"></xref> that sorts the given input set by the specified sort key, with ascending sort order and the specified collation.","nodes":[{"pos":[0,196],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbSortExpression\"&gt;&lt;/xref&gt;</ph> that sorts the given input set by the specified sort key, with ascending sort order and the specified collation.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbSortExpression\"></xref> that sorts the given input set by the specified sort key, with ascending sort order and the specified collation."}],"pos":[271122,271319],"yaml":true},{"content":"An expression that specifies the input set.","nodes":[{"pos":[0,43],"content":"An expression that specifies the input set.","nodes":[{"content":"An expression that specifies the input set.","pos":[0,43]}]}],"pos":[271705,271749],"yaml":true},{"content":"A method that specifies how to derive the sort key expression given a member of the input set. This method must produce an expression with an order-comparable result type that provides the sort key definition.","nodes":[{"pos":[0,209],"content":"A method that specifies how to derive the sort key expression given a member of the input set. This method must produce an expression with an order-comparable result type that provides the sort key definition.","nodes":[{"content":"A method that specifies how to derive the sort key expression given a member of the input set. This method must produce an expression with an order-comparable result type that provides the sort key definition.","pos":[0,209],"nodes":[{"content":"A method that specifies how to derive the sort key expression given a member of the input set.","pos":[0,94]},{"content":"This method must produce an expression with an order-comparable result type that provides the sort key definition.","pos":[95,209]}]}]}],"pos":[271901,272111],"yaml":true},{"content":"The collation to sort under.","nodes":[{"pos":[0,28],"content":"The collation to sort under.","nodes":[{"content":"The collation to sort under.","pos":[0,28]}]}],"pos":[272176,272205],"yaml":true},{"content":"A new DbSortExpression that represents the order-by operation.","nodes":[{"pos":[0,62],"content":"A new DbSortExpression that represents the order-by operation.","nodes":[{"content":"A new DbSortExpression that represents the order-by operation.","pos":[0,62]}]}],"pos":[272297,272360],"yaml":true},{"content":"The expression produced by <code>sortKey</code> is null.","nodes":[{"pos":[0,56],"content":"The expression produced by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">sortKey</ph><ept id=\"p1\">&lt;/code&gt;</ept> is null.","source":"The expression produced by <code>sortKey</code> is null."}],"pos":[272567,272624],"yaml":true},{"content":"The expression produced by <code>sortKey</code> does not have an order-comparable string result type.","nodes":[{"pos":[0,101],"content":"The expression produced by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">sortKey</ph><ept id=\"p1\">&lt;/code&gt;</ept> does not have an order-comparable string result type.","source":"The expression produced by <code>sortKey</code> does not have an order-comparable string result type."}],"pos":[272718,272820],"yaml":true},{"content":"<code>collation</code> is empty or contains only space characters.","nodes":[{"pos":[0,66],"content":"<ph id=\"ph1\">&lt;code&gt;collation&lt;/code&gt;</ph> is empty or contains only space characters.","source":"<code>collation</code> is empty or contains only space characters."}],"pos":[272934,273001],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbSortExpression\"></xref> that sorts the given input set by the specified sort key, with descending sort order and default collation.","nodes":[{"pos":[0,191],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbSortExpression\"&gt;&lt;/xref&gt;</ph> that sorts the given input set by the specified sort key, with descending sort order and default collation.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbSortExpression\"></xref> that sorts the given input set by the specified sort key, with descending sort order and default collation."}],"pos":[274738,274930],"yaml":true},{"content":"An expression that specifies the input set.","nodes":[{"pos":[0,43],"content":"An expression that specifies the input set.","nodes":[{"content":"An expression that specifies the input set.","pos":[0,43]}]}],"pos":[275308,275352],"yaml":true},{"content":"A method that specifies how to derive the sort key expression given a member of the input set. This method must produce an expression with an order-comparable result type that provides the sort key definition.","nodes":[{"pos":[0,209],"content":"A method that specifies how to derive the sort key expression given a member of the input set. This method must produce an expression with an order-comparable result type that provides the sort key definition.","nodes":[{"content":"A method that specifies how to derive the sort key expression given a member of the input set. This method must produce an expression with an order-comparable result type that provides the sort key definition.","pos":[0,209],"nodes":[{"content":"A method that specifies how to derive the sort key expression given a member of the input set.","pos":[0,94]},{"content":"This method must produce an expression with an order-comparable result type that provides the sort key definition.","pos":[95,209]}]}]}],"pos":[275504,275714],"yaml":true},{"content":"A new DbSortExpression that represents the order-by operation.","nodes":[{"pos":[0,62],"content":"A new DbSortExpression that represents the order-by operation.","nodes":[{"content":"A new DbSortExpression that represents the order-by operation.","pos":[0,62]}]}],"pos":[275806,275869],"yaml":true},{"content":"The expression produced by <code>sortKey</code> is null.","nodes":[{"pos":[0,56],"content":"The expression produced by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">sortKey</ph><ept id=\"p1\">&lt;/code&gt;</ept> is null.","source":"The expression produced by <code>sortKey</code> is null."}],"pos":[276086,276143],"yaml":true},{"content":"The expression produced by <code>sortKey</code> does not have an order-comparable result type.","nodes":[{"pos":[0,94],"content":"The expression produced by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">sortKey</ph><ept id=\"p1\">&lt;/code&gt;</ept> does not have an order-comparable result type.","source":"The expression produced by <code>sortKey</code> does not have an order-comparable result type."}],"pos":[276237,276332],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbSortExpression\"></xref> that sorts the given input set by the specified sort key, with descending sort order and the specified collation.","nodes":[{"pos":[0,197],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbSortExpression\"&gt;&lt;/xref&gt;</ph> that sorts the given input set by the specified sort key, with descending sort order and the specified collation.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbSortExpression\"></xref> that sorts the given input set by the specified sort key, with descending sort order and the specified collation."}],"pos":[278135,278333],"yaml":true},{"content":"An expression that specifies the input set.","nodes":[{"pos":[0,43],"content":"An expression that specifies the input set.","nodes":[{"content":"An expression that specifies the input set.","pos":[0,43]}]}],"pos":[278729,278773],"yaml":true},{"content":"A method that specifies how to derive the sort key expression given a member of the input set. This method must produce an expression with an order-comparable result type that provides the sort key definition.","nodes":[{"pos":[0,209],"content":"A method that specifies how to derive the sort key expression given a member of the input set. This method must produce an expression with an order-comparable result type that provides the sort key definition.","nodes":[{"content":"A method that specifies how to derive the sort key expression given a member of the input set. This method must produce an expression with an order-comparable result type that provides the sort key definition.","pos":[0,209],"nodes":[{"content":"A method that specifies how to derive the sort key expression given a member of the input set.","pos":[0,94]},{"content":"This method must produce an expression with an order-comparable result type that provides the sort key definition.","pos":[95,209]}]}]}],"pos":[278925,279135],"yaml":true},{"content":"The collation to sort under.","nodes":[{"pos":[0,28],"content":"The collation to sort under.","nodes":[{"content":"The collation to sort under.","pos":[0,28]}]}],"pos":[279200,279229],"yaml":true},{"content":"A new DbSortExpression that represents the order-by operation.","nodes":[{"pos":[0,62],"content":"A new DbSortExpression that represents the order-by operation.","nodes":[{"content":"A new DbSortExpression that represents the order-by operation.","pos":[0,62]}]}],"pos":[279321,279384],"yaml":true},{"content":"The expression produced by <code>sortKey</code> is null.","nodes":[{"pos":[0,56],"content":"The expression produced by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">sortKey</ph><ept id=\"p1\">&lt;/code&gt;</ept> is null.","source":"The expression produced by <code>sortKey</code> is null."}],"pos":[279601,279658],"yaml":true},{"content":"The expression produced by <code>sortKey</code> does not have an order-comparable string result type.","nodes":[{"pos":[0,101],"content":"The expression produced by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">sortKey</ph><ept id=\"p1\">&lt;/code&gt;</ept> does not have an order-comparable string result type.","source":"The expression produced by <code>sortKey</code> does not have an order-comparable string result type."}],"pos":[279752,279854],"yaml":true},{"content":"<code>collation</code> is empty or contains only space characters.","nodes":[{"pos":[0,66],"content":"<ph id=\"ph1\">&lt;code&gt;collation&lt;/code&gt;</ph> is empty or contains only space characters.","source":"<code>collation</code> is empty or contains only space characters."}],"pos":[279968,280035],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbApplyExpression\"></xref> that evaluates the given <code>apply</code> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns. Rows for which <code>apply</code> evaluates to an empty set have an apply column value of `null`.","nodes":[{"pos":[0,356],"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbApplyExpression\"></xref> that evaluates the given <code>apply</code> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns. Rows for which <code>apply</code> evaluates to an empty set have an apply column value of `null`.","nodes":[{"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbApplyExpression\"&gt;&lt;/xref&gt;</ph> that evaluates the given <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">apply</ph><ept id=\"p1\">&lt;/code&gt;</ept> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.","pos":[0,258],"source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbApplyExpression\"></xref> that evaluates the given <code>apply</code> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns."},{"content":"Rows for which <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">apply</ph><ept id=\"p1\">&lt;/code&gt;</ept> evaluates to an empty set have an apply column value of <ph id=\"ph2\">`null`</ph>.","pos":[259,356],"source":" Rows for which <code>apply</code> evaluates to an empty set have an apply column value of `null`."}]}],"pos":[281958,282315],"yaml":true},{"content":"A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that specifies the input set.","nodes":[{"pos":[0,97],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;&lt;/xref&gt;</ph> that specifies the input set.","source":"A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that specifies the input set."}],"pos":[282733,282831],"yaml":true},{"content":"A method that specifies the logic to evaluate once for each member of the input set.","nodes":[{"pos":[0,84],"content":"A method that specifies the logic to evaluate once for each member of the input set.","nodes":[{"content":"A method that specifies the logic to evaluate once for each member of the input set.","pos":[0,84]}]}],"pos":[283036,283121],"yaml":true},{"content":"An new DbApplyExpression with the specified input and apply bindings and an <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"></xref> of OuterApply.","nodes":[{"pos":[0,160],"content":"An new DbApplyExpression with the specified input and apply bindings and an <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"&gt;&lt;/xref&gt;</ph> of OuterApply.","source":"An new DbApplyExpression with the specified input and apply bindings and an <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"></xref> of OuterApply."}],"pos":[283214,283375],"yaml":true},{"content":"The result of <code>apply</code> contains a name or expression that is null.","nodes":[{"pos":[0,76],"content":"The result of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">apply</ph><ept id=\"p1\">&lt;/code&gt;</ept> contains a name or expression that is null.","source":"The result of <code>apply</code> contains a name or expression that is null."}],"pos":[283585,283662],"yaml":true},{"content":"The result of <code>apply</code> contains a name or expression that is not valid in an expression binding.","nodes":[{"pos":[0,106],"content":"The result of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">apply</ph><ept id=\"p1\">&lt;/code&gt;</ept> contains a name or expression that is not valid in an expression binding.","source":"The result of <code>apply</code> contains a name or expression that is not valid in an expression binding."}],"pos":[283756,283863],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbApplyExpression\"></xref> that evaluates the given <code>apply</code> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns. Rows for which <code>apply</code> evaluates to an empty set have an apply column value of `null`.","nodes":[{"pos":[0,356],"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbApplyExpression\"></xref> that evaluates the given <code>apply</code> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns. Rows for which <code>apply</code> evaluates to an empty set have an apply column value of `null`.","nodes":[{"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbApplyExpression\"&gt;&lt;/xref&gt;</ph> that evaluates the given <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">apply</ph><ept id=\"p1\">&lt;/code&gt;</ept> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.","pos":[0,258],"source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbApplyExpression\"></xref> that evaluates the given <code>apply</code> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns."},{"content":"Rows for which <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">apply</ph><ept id=\"p1\">&lt;/code&gt;</ept> evaluates to an empty set have an apply column value of <ph id=\"ph2\">`null`</ph>.","pos":[259,356],"source":" Rows for which <code>apply</code> evaluates to an empty set have an apply column value of `null`."}]}],"pos":[285411,285768],"yaml":true},{"content":"An <xref href=\"System.Data.Common.CommandTrees.DbExpressionBinding\"></xref> that specifies the input set.","nodes":[{"pos":[0,105],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpressionBinding\"&gt;&lt;/xref&gt;</ph> that specifies the input set.","source":"An <xref href=\"System.Data.Common.CommandTrees.DbExpressionBinding\"></xref> that specifies the input set."}],"pos":[286106,286212],"yaml":true},{"content":"An <xref href=\"System.Data.Common.CommandTrees.DbExpressionBinding\"></xref> that specifies logic to evaluate once for each member of the input set.","nodes":[{"pos":[0,147],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpressionBinding\"&gt;&lt;/xref&gt;</ph> that specifies logic to evaluate once for each member of the input set.","source":"An <xref href=\"System.Data.Common.CommandTrees.DbExpressionBinding\"></xref> that specifies logic to evaluate once for each member of the input set."}],"pos":[286311,286459],"yaml":true},{"content":"An new DbApplyExpression with the specified input and apply bindings and an <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"></xref> of OuterApply.","nodes":[{"pos":[0,160],"content":"An new DbApplyExpression with the specified input and apply bindings and an <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"&gt;&lt;/xref&gt;</ph> of OuterApply.","source":"An new DbApplyExpression with the specified input and apply bindings and an <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"></xref> of OuterApply."}],"pos":[286552,286713],"yaml":true},{"content":"<code>input</code> or <code>apply</code> is null.","nodes":[{"pos":[0,49],"content":"<ph id=\"ph1\">&lt;code&gt;input&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;apply&lt;/code&gt;</ph> is null.","source":"<code>input</code> or <code>apply</code> is null."}],"pos":[286923,286973],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbParameterReferenceExpression\"></xref> that references a parameter with the specified name and type.","nodes":[{"pos":[0,159],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbParameterReferenceExpression\"&gt;&lt;/xref&gt;</ph> that references a parameter with the specified name and type.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbParameterReferenceExpression\"></xref> that references a parameter with the specified name and type."}],"pos":[288281,288441],"yaml":true},{"content":"The type of the referenced parameter.","nodes":[{"pos":[0,37],"content":"The type of the referenced parameter.","nodes":[{"content":"The type of the referenced parameter.","pos":[0,37]}]}],"pos":[288709,288747],"yaml":true},{"content":"The name of the referenced parameter.","nodes":[{"pos":[0,37],"content":"The name of the referenced parameter.","nodes":[{"content":"The name of the referenced parameter.","pos":[0,37]}]}],"pos":[288807,288845],"yaml":true},{"content":"A DbParameterReferenceExpression that represents a reference to a parameter with the specified name and type. The result type of the expression will be the same as <code>type</code>.","nodes":[{"pos":[0,182],"content":"A DbParameterReferenceExpression that represents a reference to a parameter with the specified name and type. The result type of the expression will be the same as <code>type</code>.","nodes":[{"content":"A DbParameterReferenceExpression that represents a reference to a parameter with the specified name and type.","pos":[0,109]},{"content":"The result type of the expression will be the same as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">type</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[110,182],"source":" The result type of the expression will be the same as <code>type</code>."}]}],"pos":[288951,289134],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbArithmeticExpression\"></xref> that adds the left argument to the right argument.","nodes":[{"pos":[0,140],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbArithmeticExpression\"&gt;&lt;/xref&gt;</ph> that adds the left argument to the right argument.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbArithmeticExpression\"></xref> that adds the left argument to the right argument."}],"pos":[290672,290813],"yaml":true},{"content":"An expression that specifies the left argument.","nodes":[{"pos":[0,47],"content":"An expression that specifies the left argument.","nodes":[{"content":"An expression that specifies the left argument.","pos":[0,47]}]}],"pos":[291127,291175],"yaml":true},{"content":"An expression that specifies the right argument.","nodes":[{"pos":[0,48],"content":"An expression that specifies the right argument.","nodes":[{"content":"An expression that specifies the right argument.","pos":[0,48]}]}],"pos":[291267,291316],"yaml":true},{"content":"A new DbArithmeticExpression representing the addition operation.","nodes":[{"pos":[0,65],"content":"A new DbArithmeticExpression representing the addition operation.","nodes":[{"content":"A new DbArithmeticExpression representing the addition operation.","pos":[0,65]}]}],"pos":[291414,291480],"yaml":true},{"content":"<code>left</code> or <code>right</code> is null.","nodes":[{"pos":[0,48],"content":"<ph id=\"ph1\">&lt;code&gt;left&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;right&lt;/code&gt;</ph> is null.","source":"<code>left</code> or <code>right</code> is null."}],"pos":[291684,291733],"yaml":true},{"content":"No common numeric result type exists between <code>left</code> and <code>right</code>.","nodes":[{"pos":[0,86],"content":"No common numeric result type exists between <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">left</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">right</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"No common numeric result type exists between <code>left</code> and <code>right</code>."}],"pos":[291827,291914],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbProjectExpression\"></xref> that projects the specified expression over the given input set.","nodes":[{"pos":[0,151],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbProjectExpression\"&gt;&lt;/xref&gt;</ph> that projects the specified expression over the given input set.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbProjectExpression\"></xref> that projects the specified expression over the given input set."}],"pos":[293402,293554],"yaml":true},{"content":"An expression binding that specifies the input set.","nodes":[{"pos":[0,51],"content":"An expression binding that specifies the input set.","nodes":[{"content":"An expression binding that specifies the input set.","pos":[0,51]}]}],"pos":[293889,293941],"yaml":true},{"content":"An expression to project over the set.","nodes":[{"pos":[0,38],"content":"An expression to project over the set.","nodes":[{"content":"An expression to project over the set.","pos":[0,38]}]}],"pos":[294038,294077],"yaml":true},{"content":"A new DbProjectExpression that represents the projection operation.","nodes":[{"pos":[0,67],"content":"A new DbProjectExpression that represents the projection operation.","nodes":[{"content":"A new DbProjectExpression that represents the projection operation.","pos":[0,67]}]}],"pos":[294172,294240],"yaml":true},{"content":"<code>input</code> or <code>projection</code> is null.","nodes":[{"pos":[0,54],"content":"<ph id=\"ph1\">&lt;code&gt;input&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;projection&lt;/code&gt;</ph> is null.","source":"<code>input</code> or <code>projection</code> is null."}],"pos":[294447,294502],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbPropertyExpression\"></xref> representing the retrieval of the specified property.","nodes":[{"pos":[0,141],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbPropertyExpression\"&gt;&lt;/xref&gt;</ph> representing the retrieval of the specified property.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbPropertyExpression\"></xref> representing the retrieval of the specified property."}],"pos":[295927,296069],"yaml":true},{"content":"The instance from which to retrieve the property. May be null if the property is static.","nodes":[{"pos":[0,88],"content":"The instance from which to retrieve the property. May be null if the property is static.","nodes":[{"content":"The instance from which to retrieve the property. May be null if the property is static.","pos":[0,88],"nodes":[{"content":"The instance from which to retrieve the property.","pos":[0,49]},{"content":"May be null if the property is static.","pos":[50,88]}]}]}],"pos":[296396,296485],"yaml":true},{"content":"Metadata for the property to retrieve.","nodes":[{"pos":[0,38],"content":"Metadata for the property to retrieve.","nodes":[{"content":"Metadata for the property to retrieve.","pos":[0,38]}]}],"pos":[296580,296619],"yaml":true},{"content":"A new DbPropertyExpression representing the property retrieval.","nodes":[{"pos":[0,63],"content":"A new DbPropertyExpression representing the property retrieval.","nodes":[{"content":"A new DbPropertyExpression representing the property retrieval.","pos":[0,63]}]}],"pos":[296715,296779],"yaml":true},{"content":"<code>propertyMetadata</code> is null or <code>instance</code> is null and the property is not static.","nodes":[{"pos":[0,102],"content":"<ph id=\"ph1\">&lt;code&gt;propertyMetadata&lt;/code&gt;</ph> is null or <ph id=\"ph2\">&lt;code&gt;instance&lt;/code&gt;</ph> is null and the property is not static.","source":"<code>propertyMetadata</code> is null or <code>instance</code> is null and the property is not static."}],"pos":[296987,297090],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbPropertyExpression\"></xref> representing the retrieval of the specified navigation property.","nodes":[{"pos":[0,152],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbPropertyExpression\"&gt;&lt;/xref&gt;</ph> representing the retrieval of the specified navigation property.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbPropertyExpression\"></xref> representing the retrieval of the specified navigation property."}],"pos":[298557,298710],"yaml":true},{"content":"The instance from which to retrieve the navigation property.","nodes":[{"pos":[0,60],"content":"The instance from which to retrieve the navigation property.","nodes":[{"content":"The instance from which to retrieve the navigation property.","pos":[0,60]}]}],"pos":[299046,299107],"yaml":true},{"content":"Metadata for the navigation property to retrieve.","nodes":[{"pos":[0,49],"content":"Metadata for the navigation property to retrieve.","nodes":[{"content":"Metadata for the navigation property to retrieve.","pos":[0,49]}]}],"pos":[299211,299261],"yaml":true},{"content":"A new DbPropertyExpression representing the navigation property retrieval.","nodes":[{"pos":[0,74],"content":"A new DbPropertyExpression representing the navigation property retrieval.","nodes":[{"content":"A new DbPropertyExpression representing the navigation property retrieval.","pos":[0,74]}]}],"pos":[299357,299432],"yaml":true},{"content":"<code>navigationProperty</code> or <code>instance</code> is null.","nodes":[{"pos":[0,65],"content":"<ph id=\"ph1\">&lt;code&gt;navigationProperty&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;instance&lt;/code&gt;</ph> is null.","source":"<code>navigationProperty</code> or <code>instance</code> is null."}],"pos":[299640,299706],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbPropertyExpression\"></xref> representing the retrieval of the specified relationship end member.","nodes":[{"pos":[0,156],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbPropertyExpression\"&gt;&lt;/xref&gt;</ph> representing the retrieval of the specified relationship end member.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbPropertyExpression\"></xref> representing the retrieval of the specified relationship end member."}],"pos":[301191,301348],"yaml":true},{"content":"The instance from which to retrieve the relationship end member.","nodes":[{"pos":[0,64],"content":"The instance from which to retrieve the relationship end member.","nodes":[{"content":"The instance from which to retrieve the relationship end member.","pos":[0,64]}]}],"pos":[301684,301749],"yaml":true},{"content":"Metadata for the relationship end member to retrieve.","nodes":[{"pos":[0,53],"content":"Metadata for the relationship end member to retrieve.","nodes":[{"content":"Metadata for the relationship end member to retrieve.","pos":[0,53]}]}],"pos":[301853,301907],"yaml":true},{"content":"A new DbPropertyExpression representing the relationship end member retrieval.","nodes":[{"pos":[0,78],"content":"A new DbPropertyExpression representing the relationship end member retrieval.","nodes":[{"content":"A new DbPropertyExpression representing the relationship end member retrieval.","pos":[0,78]}]}],"pos":[302003,302082],"yaml":true},{"content":"<code>relationshipEnd</code> is null or <code>instance</code> is null and the property is not static.","nodes":[{"pos":[0,101],"content":"<ph id=\"ph1\">&lt;code&gt;relationshipEnd&lt;/code&gt;</ph> is null or <ph id=\"ph2\">&lt;code&gt;instance&lt;/code&gt;</ph> is null and the property is not static.","source":"<code>relationshipEnd</code> is null or <code>instance</code> is null and the property is not static."}],"pos":[302290,302392],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbPropertyExpression\"></xref> representing the retrieval of the instance property with the specified name from the given instance.","nodes":[{"pos":[0,188],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbPropertyExpression\"&gt;&lt;/xref&gt;</ph> representing the retrieval of the instance property with the specified name from the given instance.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbPropertyExpression\"></xref> representing the retrieval of the instance property with the specified name from the given instance."}],"pos":[303733,303922],"yaml":true},{"content":"The instance from which to retrieve the property.","nodes":[{"pos":[0,49],"content":"The instance from which to retrieve the property.","nodes":[{"content":"The instance from which to retrieve the property.","pos":[0,49]}]}],"pos":[304215,304265],"yaml":true},{"content":"The name of the property to retrieve.","nodes":[{"pos":[0,37],"content":"The name of the property to retrieve.","nodes":[{"content":"The name of the property to retrieve.","pos":[0,37]}]}],"pos":[304333,304371],"yaml":true},{"content":"A new DbPropertyExpression that represents the property retrieval.","nodes":[{"pos":[0,66],"content":"A new DbPropertyExpression that represents the property retrieval.","nodes":[{"content":"A new DbPropertyExpression that represents the property retrieval.","pos":[0,66]}]}],"pos":[304467,304534],"yaml":true},{"content":"<code>propertyName</code> is null or <code>instance</code> is null and the property is not static.","nodes":[{"pos":[0,98],"content":"<ph id=\"ph1\">&lt;code&gt;propertyName&lt;/code&gt;</ph> is null or <ph id=\"ph2\">&lt;code&gt;instance&lt;/code&gt;</ph> is null and the property is not static.","source":"<code>propertyName</code> is null or <code>instance</code> is null and the property is not static."}],"pos":[304742,304841],"yaml":true},{"content":"No property with the specified name is declared by the type of <code>instance</code>.","nodes":[{"pos":[0,85],"content":"No property with the specified name is declared by the type of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">instance</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"No property with the specified name is declared by the type of <code>instance</code>."}],"pos":[304955,305041],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbRefExpression\"></xref> that encodes a reference to a specific Entity based on key values.","nodes":[{"pos":[0,149],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbRefExpression\"&gt;&lt;/xref&gt;</ph> that encodes a reference to a specific Entity based on key values.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbRefExpression\"></xref> that encodes a reference to a specific Entity based on key values."}],"pos":[306466,306616],"yaml":true},{"content":"`keyRow` should be an expression that specifies the key values that identify the referenced entity within the given entity set. The result type of `keyRow` should contain a corresponding column for each key property defined by `entitySet's` entity type.","nodes":[{"pos":[0,253],"content":"`keyRow` should be an expression that specifies the key values that identify the referenced entity within the given entity set. The result type of `keyRow` should contain a corresponding column for each key property defined by `entitySet's` entity type.","nodes":[{"content":"<ph id=\"ph1\">`keyRow`</ph> should be an expression that specifies the key values that identify the referenced entity within the given entity set.","pos":[0,127],"source":"`keyRow` should be an expression that specifies the key values that identify the referenced entity within the given entity set."},{"content":"The result type of <ph id=\"ph1\">`keyRow`</ph> should contain a corresponding column for each key property defined by <ph id=\"ph2\">`entitySet's`</ph> entity type.","pos":[128,253],"source":" The result type of `keyRow` should contain a corresponding column for each key property defined by `entitySet's` entity type."}]}],"pos":[306627,306883],"yaml":true,"extradata":"MT"},{"content":"The Entity set in which the referenced element resides.","nodes":[{"pos":[0,55],"content":"The Entity set in which the referenced element resides.","nodes":[{"content":"The Entity set in which the referenced element resides.","pos":[0,55]}]}],"pos":[307187,307243],"yaml":true},{"content":"A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that constructs a record with columns that match (in number, type, and order) the Key properties of the referenced Entity type.","nodes":[{"pos":[0,195],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;&lt;/xref&gt;</ph> that constructs a record with columns that match (in number, type, and order) the Key properties of the referenced Entity type.","source":"A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that constructs a record with columns that match (in number, type, and order) the Key properties of the referenced Entity type."}],"pos":[307336,307532],"yaml":true},{"content":"A new DbRefExpression that references the element with the specified key values in the given Entity set.","nodes":[{"pos":[0,104],"content":"A new DbRefExpression that references the element with the specified key values in the given Entity set.","nodes":[{"content":"A new DbRefExpression that references the element with the specified key values in the given Entity set.","pos":[0,104]}]}],"pos":[307623,307728],"yaml":true},{"content":"<code>entitySet</code> or <code>keyRow</code> is null.","nodes":[{"pos":[0,54],"content":"<ph id=\"ph1\">&lt;code&gt;entitySet&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;keyRow&lt;/code&gt;</ph> is null.","source":"<code>entitySet</code> or <code>keyRow</code> is null."}],"pos":[307938,307993],"yaml":true},{"content":"<code>keyRow</code> does not have a record result type that matches the key properties of the referenced entity set's entity type.","nodes":[{"pos":[0,130],"content":"<ph id=\"ph1\">&lt;code&gt;keyRow&lt;/code&gt;</ph> does not have a record result type that matches the key properties of the referenced entity set's entity type.","source":"<code>keyRow</code> does not have a record result type that matches the key properties of the referenced entity set's entity type."}],"pos":[308087,308218],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbRefExpression\"></xref> that encodes a reference to a specific Entity based on key values.","nodes":[{"pos":[0,149],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbRefExpression\"&gt;&lt;/xref&gt;</ph> that encodes a reference to a specific Entity based on key values.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbRefExpression\"></xref> that encodes a reference to a specific Entity based on key values."}],"pos":[309787,309937],"yaml":true},{"content":"`keyRow` should be an expression that specifies the key values that identify the referenced entity within the given entity set. The result type of `keyRow` should contain a corresponding column for each key property defined by `entitySet's` entity type.","nodes":[{"pos":[0,253],"content":"`keyRow` should be an expression that specifies the key values that identify the referenced entity within the given entity set. The result type of `keyRow` should contain a corresponding column for each key property defined by `entitySet's` entity type.","nodes":[{"content":"<ph id=\"ph1\">`keyRow`</ph> should be an expression that specifies the key values that identify the referenced entity within the given entity set.","pos":[0,127],"source":"`keyRow` should be an expression that specifies the key values that identify the referenced entity within the given entity set."},{"content":"The result type of <ph id=\"ph1\">`keyRow`</ph> should contain a corresponding column for each key property defined by <ph id=\"ph2\">`entitySet's`</ph> entity type.","pos":[128,253],"source":" The result type of `keyRow` should contain a corresponding column for each key property defined by `entitySet's` entity type."}]}],"pos":[309948,310204],"yaml":true,"extradata":"MT"},{"content":"The Entity set in which the referenced element resides.","nodes":[{"pos":[0,55],"content":"The Entity set in which the referenced element resides.","nodes":[{"content":"The Entity set in which the referenced element resides.","pos":[0,55]}]}],"pos":[310556,310612],"yaml":true},{"content":"A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that constructs a record with columns that match (in number, type, and order) the Key properties of the referenced Entity type.","nodes":[{"pos":[0,195],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;&lt;/xref&gt;</ph> that constructs a record with columns that match (in number, type, and order) the Key properties of the referenced Entity type.","source":"A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that constructs a record with columns that match (in number, type, and order) the Key properties of the referenced Entity type."}],"pos":[310705,310901],"yaml":true},{"content":"The type of the Entity that the reference should refer to.","nodes":[{"pos":[0,58],"content":"The type of the Entity that the reference should refer to.","nodes":[{"content":"The type of the Entity that the reference should refer to.","pos":[0,58]}]}],"pos":[310989,311048],"yaml":true},{"content":"A new DbRefExpression that references the element with the specified key values in the given Entity set.","nodes":[{"pos":[0,104],"content":"A new DbRefExpression that references the element with the specified key values in the given Entity set.","nodes":[{"content":"A new DbRefExpression that references the element with the specified key values in the given Entity set.","pos":[0,104]}]}],"pos":[311139,311244],"yaml":true},{"content":"<code>entitySet</code>,  <code>keyRow</code> or <code>entityType</code> is null.","nodes":[{"pos":[0,80],"content":"<ph id=\"ph1\">&lt;code&gt;entitySet&lt;/code&gt;</ph>,  <ph id=\"ph2\">&lt;code&gt;keyRow&lt;/code&gt;</ph> or <ph id=\"ph3\">&lt;code&gt;entityType&lt;/code&gt;</ph> is null.","source":"<code>entitySet</code>,  <code>keyRow</code> or <code>entityType</code> is null."}],"pos":[311454,311535],"yaml":true},{"content":"<code>entityType</code> is not in the same type hierarchy as the entity set's entity type, or <code>keyRow</code> does not have a record result type that matches the key properties of the referenced entity set's entity type.","nodes":[{"pos":[0,224],"content":"<ph id=\"ph1\">&lt;code&gt;entityType&lt;/code&gt;</ph> is not in the same type hierarchy as the entity set's entity type, or <ph id=\"ph2\">&lt;code&gt;keyRow&lt;/code&gt;</ph> does not have a record result type that matches the key properties of the referenced entity set's entity type.","source":"<code>entityType</code> is not in the same type hierarchy as the entity set's entity type, or <code>keyRow</code> does not have a record result type that matches the key properties of the referenced entity set's entity type."}],"pos":[311629,311854],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbScanExpression\"></xref> that references the specified entity or relationship set.","nodes":[{"pos":[0,141],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbScanExpression\"&gt;&lt;/xref&gt;</ph> that references the specified entity or relationship set.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbScanExpression\"></xref> that references the specified entity or relationship set."}],"pos":[313090,313232],"yaml":true},{"content":"Metadata for the entity or relationship set to reference.","nodes":[{"pos":[0,57],"content":"Metadata for the entity or relationship set to reference.","nodes":[{"content":"Metadata for the entity or relationship set to reference.","pos":[0,57]}]}],"pos":[313486,313544],"yaml":true},{"content":"A new DbScanExpression based on the specified entity or relationship set.","nodes":[{"pos":[0,73],"content":"A new DbScanExpression based on the specified entity or relationship set.","nodes":[{"content":"A new DbScanExpression based on the specified entity or relationship set.","pos":[0,73]}]}],"pos":[313636,313710],"yaml":true},{"content":"<code>targetSet</code> is null.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;targetSet&lt;/code&gt;</ph> is null.","source":"<code>targetSet</code> is null."}],"pos":[313914,313946],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbProjectExpression\"></xref> that selects the specified expression over the given input set.","nodes":[{"pos":[0,150],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbProjectExpression\"&gt;&lt;/xref&gt;</ph> that selects the specified expression over the given input set.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbProjectExpression\"></xref> that selects the specified expression over the given input set."}],"pos":[315539,315690],"yaml":true},{"content":"To be compatible with Select, `TProjection` must be derived from <xref:System.Data.Common.CommandTrees.DbExpression>,     or must be an anonymous type with DbExpression-derived properties. The following are examples of supported types for `TProjection`:  \n  \n```  \nsource.Select(x => x.Property(\"Name\"))  \n```  \n  \n `TProjection` is <xref:System.Data.Common.CommandTrees.DbPropertyExpression>).  \n  \n```  \nsource.Select(x => new { Name = x.Property(\"Name\") })  \n```  \n  \n (`TProjection` is an anonymous type with a DbExpression-derived property).","nodes":[{"pos":[0,253],"content":"To be compatible with Select, `TProjection` must be derived from <xref:System.Data.Common.CommandTrees.DbExpression>,     or must be an anonymous type with DbExpression-derived properties. The following are examples of supported types for `TProjection`:","nodes":[{"content":"To be compatible with Select, <ph id=\"ph1\">`TProjection`</ph> must be derived from <ph id=\"ph2\">&lt;xref:System.Data.Common.CommandTrees.DbExpression&gt;</ph>,     or must be an anonymous type with DbExpression-derived properties.","pos":[0,188],"source":"To be compatible with Select, `TProjection` must be derived from <xref:System.Data.Common.CommandTrees.DbExpression>,     or must be an anonymous type with DbExpression-derived properties."},{"content":"The following are examples of supported types for <ph id=\"ph1\">`TProjection`</ph>:","pos":[189,253],"source":" The following are examples of supported types for `TProjection`:"}]},{"pos":[316,394],"content":"<ph id=\"ph1\">`TProjection`</ph> is <ph id=\"ph2\">&lt;xref:System.Data.Common.CommandTrees.DbPropertyExpression&gt;</ph>).","source":"`TProjection` is <xref:System.Data.Common.CommandTrees.DbPropertyExpression>)."},{"pos":[472,546],"content":"(<ph id=\"ph1\">`TProjection`</ph> is an anonymous type with a DbExpression-derived property).","source":"(`TProjection` is an anonymous type with a DbExpression-derived property)."}],"pos":[315701,316266],"yaml":true,"extradata":"MT"},{"content":"An expression that specifies the input set.","nodes":[{"pos":[0,43],"content":"An expression that specifies the input set.","nodes":[{"content":"An expression that specifies the input set.","pos":[0,43]}]}],"pos":[316619,316663],"yaml":true},{"content":"A method that specifies how to derive the projected expression given a member of the input set. This method must produce an instance of a type that is compatible with Select and can be resolved into a <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref>. Compatibility requirements for <code>TProjection</code> are described in remarks.","nodes":[{"pos":[0,349],"content":"A method that specifies how to derive the projected expression given a member of the input set. This method must produce an instance of a type that is compatible with Select and can be resolved into a <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref>. Compatibility requirements for <code>TProjection</code> are described in remarks.","nodes":[{"content":"A method that specifies how to derive the projected expression given a member of the input set.","pos":[0,95]},{"content":"This method must produce an instance of a type that is compatible with Select and can be resolved into a <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;&lt;/xref&gt;</ph>.","pos":[96,267],"source":" This method must produce an instance of a type that is compatible with Select and can be resolved into a <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref>."},{"content":"Compatibility requirements for <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">TProjection</ph><ept id=\"p1\">&lt;/code&gt;</ept> are described in remarks.","pos":[268,349],"source":" Compatibility requirements for <code>TProjection</code> are described in remarks."}]}],"pos":[316785,317135],"yaml":true},{"content":"The method result type of <code>projection</code>.","nodes":[{"pos":[0,50],"content":"The method result type of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">projection</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The method result type of <code>projection</code>."}],"pos":[317196,317247],"yaml":true},{"content":"A new DbProjectExpression that represents the select operation.","nodes":[{"pos":[0,63],"content":"A new DbProjectExpression that represents the select operation.","nodes":[{"content":"A new DbProjectExpression that represents the select operation.","pos":[0,63]}]}],"pos":[317342,317406],"yaml":true},{"content":"The result of <code>projection</code> is null.","nodes":[{"pos":[0,46],"content":"The result of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">projection</ph><ept id=\"p1\">&lt;/code&gt;</ept> is null.","source":"The result of <code>projection</code> is null."}],"pos":[317615,317662],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbApplyExpression\"></xref> that evaluates the given <code>apply</code> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns. Rows for which <code>apply</code> evaluates to an empty set are not included. A <xref href=\"System.Data.Common.CommandTrees.DbProjectExpression\"></xref> is then created that selects the <code>apply</code> column from each row, producing the overall collection of <code>apply</code> results.","nodes":[{"pos":[0,549],"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbApplyExpression\"></xref> that evaluates the given <code>apply</code> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns. Rows for which <code>apply</code> evaluates to an empty set are not included. A <xref href=\"System.Data.Common.CommandTrees.DbProjectExpression\"></xref> is then created that selects the <code>apply</code> column from each row, producing the overall collection of <code>apply</code> results.","nodes":[{"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbApplyExpression\"&gt;&lt;/xref&gt;</ph> that evaluates the given <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">apply</ph><ept id=\"p1\">&lt;/code&gt;</ept> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.","pos":[0,258],"source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbApplyExpression\"></xref> that evaluates the given <code>apply</code> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns."},{"content":"Rows for which <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">apply</ph><ept id=\"p1\">&lt;/code&gt;</ept> evaluates to an empty set are not included.","pos":[259,336],"source":" Rows for which <code>apply</code> evaluates to an empty set are not included."},{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbProjectExpression\"&gt;&lt;/xref&gt;</ph> is then created that selects the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">apply</ph><ept id=\"p1\">&lt;/code&gt;</ept> column from each row, producing the overall collection of <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">apply</ph><ept id=\"p2\">&lt;/code&gt;</ept> results.","pos":[337,549],"source":" A <xref href=\"System.Data.Common.CommandTrees.DbProjectExpression\"></xref> is then created that selects the <code>apply</code> column from each row, producing the overall collection of <code>apply</code> results."}]}],"pos":[319357,319907],"yaml":true},{"content":"A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that specifies the input set.","nodes":[{"pos":[0,97],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;&lt;/xref&gt;</ph> that specifies the input set.","source":"A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that specifies the input set."}],"pos":[320279,320377],"yaml":true},{"content":"A method that represents the logic to evaluate once for each member of the input set.","nodes":[{"pos":[0,85],"content":"A method that represents the logic to evaluate once for each member of the input set.","nodes":[{"content":"A method that represents the logic to evaluate once for each member of the input set.","pos":[0,85]}]}],"pos":[320527,320613],"yaml":true},{"content":"An new DbProjectExpression that selects the apply column from a new DbApplyExpression with the specified input and apply bindings and an <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"></xref> of CrossApply.","nodes":[{"pos":[0,221],"content":"An new DbProjectExpression that selects the apply column from a new DbApplyExpression with the specified input and apply bindings and an <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"&gt;&lt;/xref&gt;</ph> of CrossApply.","source":"An new DbProjectExpression that selects the apply column from a new DbApplyExpression with the specified input and apply bindings and an <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"></xref> of CrossApply."}],"pos":[320708,320930],"yaml":true},{"content":"The expression produced by <code>apply</code> is null.","nodes":[{"pos":[0,54],"content":"The expression produced by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">apply</ph><ept id=\"p1\">&lt;/code&gt;</ept> is null.","source":"The expression produced by <code>apply</code> is null."}],"pos":[321140,321195],"yaml":true},{"content":"The expression produced by <code>apply</code> does not have a collection type.","nodes":[{"pos":[0,78],"content":"The expression produced by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">apply</ph><ept id=\"p1\">&lt;/code&gt;</ept> does not have a collection type.","source":"The expression produced by <code>apply</code> does not have a collection type."}],"pos":[321289,321368],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbApplyExpression\"></xref> that evaluates the given <code>apply</code> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns. Rows for which <code>apply</code> evaluates to an empty set are not included. A <xref href=\"System.Data.Common.CommandTrees.DbProjectExpression\"></xref> is then created that selects the specified <code>selector</code> over each row, producing the overall collection of results.","nodes":[{"pos":[0,536],"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbApplyExpression\"></xref> that evaluates the given <code>apply</code> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns. Rows for which <code>apply</code> evaluates to an empty set are not included. A <xref href=\"System.Data.Common.CommandTrees.DbProjectExpression\"></xref> is then created that selects the specified <code>selector</code> over each row, producing the overall collection of results.","nodes":[{"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbApplyExpression\"&gt;&lt;/xref&gt;</ph> that evaluates the given <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">apply</ph><ept id=\"p1\">&lt;/code&gt;</ept> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.","pos":[0,258],"source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbApplyExpression\"></xref> that evaluates the given <code>apply</code> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns."},{"content":"Rows for which <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">apply</ph><ept id=\"p1\">&lt;/code&gt;</ept> evaluates to an empty set are not included.","pos":[259,336],"source":" Rows for which <code>apply</code> evaluates to an empty set are not included."},{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbProjectExpression\"&gt;&lt;/xref&gt;</ph> is then created that selects the specified <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">selector</ph><ept id=\"p1\">&lt;/code&gt;</ept> over each row, producing the overall collection of results.","pos":[337,536],"source":" A <xref href=\"System.Data.Common.CommandTrees.DbProjectExpression\"></xref> is then created that selects the specified <code>selector</code> over each row, producing the overall collection of results."}]}],"pos":[323555,324092],"yaml":true},{"content":"To be compatible with SelectMany, `TSelector` must be derived from <xref:System.Data.Common.CommandTrees.DbExpression>,     or must be an anonymous type with DbExpression-derived properties. The following are examples of supported types for `TSelector`:  \n  \n```  \nsource.SelectMany(x => x.Property(\"RelatedCollection\"), (source, apply) => apply.Property(\"Name\"))  \n```  \n  \n (`TSelector` is <xref:System.Data.Common.CommandTrees.DbPropertyExpression>).  \n  \n```  \nsource.SelectMany(x => x.Property(\"RelatedCollection\"), (source, apply) => new { SourceName = source.Property(\"Name\"), RelatedName = apply.Property(\"Name\") })  \n```  \n  \n (`TSelector` is an anonymous type with DbExpression-derived properties).","nodes":[{"pos":[0,253],"content":"To be compatible with SelectMany, `TSelector` must be derived from <xref:System.Data.Common.CommandTrees.DbExpression>,     or must be an anonymous type with DbExpression-derived properties. The following are examples of supported types for `TSelector`:","nodes":[{"content":"To be compatible with SelectMany, <ph id=\"ph1\">`TSelector`</ph> must be derived from <ph id=\"ph2\">&lt;xref:System.Data.Common.CommandTrees.DbExpression&gt;</ph>,     or must be an anonymous type with DbExpression-derived properties.","pos":[0,190],"source":"To be compatible with SelectMany, `TSelector` must be derived from <xref:System.Data.Common.CommandTrees.DbExpression>,     or must be an anonymous type with DbExpression-derived properties."},{"content":"The following are examples of supported types for <ph id=\"ph1\">`TSelector`</ph>:","pos":[191,253],"source":" The following are examples of supported types for `TSelector`:"}]},{"pos":[376,453],"content":"(<ph id=\"ph1\">`TSelector`</ph> is <ph id=\"ph2\">&lt;xref:System.Data.Common.CommandTrees.DbPropertyExpression&gt;</ph>).","source":"(`TSelector` is <xref:System.Data.Common.CommandTrees.DbPropertyExpression>)."},{"pos":[636,708],"content":"(<ph id=\"ph1\">`TSelector`</ph> is an anonymous type with DbExpression-derived properties).","source":"(`TSelector` is an anonymous type with DbExpression-derived properties)."}],"pos":[324103,324836],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that specifies the input set.","nodes":[{"pos":[0,97],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;&lt;/xref&gt;</ph> that specifies the input set.","source":"A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that specifies the input set."}],"pos":[325335,325433],"yaml":true},{"content":"A method that represents the logic to evaluate once for each member of the input set.","nodes":[{"pos":[0,85],"content":"A method that represents the logic to evaluate once for each member of the input set.","nodes":[{"content":"A method that represents the logic to evaluate once for each member of the input set.","pos":[0,85]}]}],"pos":[325583,325669],"yaml":true},{"content":"A method that specifies how an element of the result set should be derived given an element of the input and apply sets. This method must produce an instance of a type that is compatible with SelectMany and can be resolved into a <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref>. Compatibility requirements for <code>TSelector</code> are described in remarks.","nodes":[{"pos":[0,376],"content":"A method that specifies how an element of the result set should be derived given an element of the input and apply sets. This method must produce an instance of a type that is compatible with SelectMany and can be resolved into a <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref>. Compatibility requirements for <code>TSelector</code> are described in remarks.","nodes":[{"content":"A method that specifies how an element of the result set should be derived given an element of the input and apply sets.","pos":[0,120]},{"content":"This method must produce an instance of a type that is compatible with SelectMany and can be resolved into a <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;&lt;/xref&gt;</ph>.","pos":[121,296],"source":" This method must produce an instance of a type that is compatible with SelectMany and can be resolved into a <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref>."},{"content":"Compatibility requirements for <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">TSelector</ph><ept id=\"p1\">&lt;/code&gt;</ept> are described in remarks.","pos":[297,376],"source":" Compatibility requirements for <code>TSelector</code> are described in remarks."}]}],"pos":[325832,326209],"yaml":true},{"content":"The method result type of <code>selector</code>.","nodes":[{"pos":[0,48],"content":"The method result type of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">selector</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The method result type of <code>selector</code>."}],"pos":[326268,326317],"yaml":true},{"content":"An new DbProjectExpression that selects the result of the given selector from a new DbApplyExpression with the specified input and apply bindings and an <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"></xref> of CrossApply.","nodes":[{"pos":[0,237],"content":"An new DbProjectExpression that selects the result of the given selector from a new DbApplyExpression with the specified input and apply bindings and an <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"&gt;&lt;/xref&gt;</ph> of CrossApply.","source":"An new DbProjectExpression that selects the result of the given selector from a new DbApplyExpression with the specified input and apply bindings and an <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"></xref> of CrossApply."}],"pos":[326412,326650],"yaml":true},{"content":"The result of <code>selector</code> is null on conversion to DbExpression.","nodes":[{"pos":[0,74],"content":"The result of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">selector</ph><ept id=\"p1\">&lt;/code&gt;</ept> is null on conversion to DbExpression.","source":"The result of <code>selector</code> is null on conversion to DbExpression."}],"pos":[326863,326938],"yaml":true},{"content":"The expression produced by <code>apply</code> does not have a collection type. does not have a collection type.","nodes":[{"pos":[0,111],"content":"The expression produced by <code>apply</code> does not have a collection type. does not have a collection type.","nodes":[{"content":"The expression produced by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">apply</ph><ept id=\"p1\">&lt;/code&gt;</ept> does not have a collection type.","pos":[0,78],"source":"The expression produced by <code>apply</code> does not have a collection type."},{"content":"does not have a collection type.","pos":[79,111]}]}],"pos":[327032,327144],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbSkipExpression\"></xref> that skips the specified number of elements from the given sorted input set.","nodes":[{"pos":[0,160],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbSkipExpression\"&gt;&lt;/xref&gt;</ph> that skips the specified number of elements from the given sorted input set.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbSkipExpression\"></xref> that skips the specified number of elements from the given sorted input set."}],"pos":[328596,328757],"yaml":true},{"content":"A <xref href=\"System.Data.Common.CommandTrees.DbSortExpression\"></xref> that specifies the sorted input set.","nodes":[{"pos":[0,108],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbSortExpression\"&gt;&lt;/xref&gt;</ph> that specifies the sorted input set.","source":"A <xref href=\"System.Data.Common.CommandTrees.DbSortExpression\"></xref> that specifies the sorted input set."}],"pos":[329081,329190],"yaml":true},{"content":"An expression the specifies how many elements of the ordered set to skip.","nodes":[{"pos":[0,73],"content":"An expression the specifies how many elements of the ordered set to skip.","nodes":[{"content":"An expression the specifies how many elements of the ordered set to skip.","pos":[0,73]}]}],"pos":[329282,329356],"yaml":true},{"content":"A new DbSkipExpression that represents the skip operation.","nodes":[{"pos":[0,58],"content":"A new DbSkipExpression that represents the skip operation.","nodes":[{"content":"A new DbSkipExpression that represents the skip operation.","pos":[0,58]}]}],"pos":[329448,329507],"yaml":true},{"content":"<code>argument</code> or <code>count</code> is null.","nodes":[{"pos":[0,52],"content":"<ph id=\"ph1\">&lt;code&gt;argument&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;count&lt;/code&gt;</ph> is null.","source":"<code>argument</code> or <code>count</code> is null."}],"pos":[329711,329764],"yaml":true},{"content":"<code>count</code> is not <xref href=\"System.Data.Common.CommandTrees.DbConstantExpression\"></xref> or <xref href=\"System.Data.Common.CommandTrees.DbParameterReferenceExpression\"></xref> or has a result type that is not equal or promotable to a 64-bit integer type.","nodes":[{"pos":[0,265],"content":"<ph id=\"ph1\">&lt;code&gt;count&lt;/code&gt;</ph> is not <ph id=\"ph2\">&lt;xref href=\"System.Data.Common.CommandTrees.DbConstantExpression\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph3\">&lt;xref href=\"System.Data.Common.CommandTrees.DbParameterReferenceExpression\"&gt;&lt;/xref&gt;</ph> or has a result type that is not equal or promotable to a 64-bit integer type.","source":"<code>count</code> is not <xref href=\"System.Data.Common.CommandTrees.DbConstantExpression\"></xref> or <xref href=\"System.Data.Common.CommandTrees.DbParameterReferenceExpression\"></xref> or has a result type that is not equal or promotable to a 64-bit integer type."}],"pos":[329858,330124],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbSkipExpression\"></xref> that sorts the given input set by the given sort specifications before skipping the specified number of elements.","nodes":[{"pos":[0,197],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbSkipExpression\"&gt;&lt;/xref&gt;</ph> that sorts the given input set by the given sort specifications before skipping the specified number of elements.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbSkipExpression\"></xref> that sorts the given input set by the given sort specifications before skipping the specified number of elements."}],"pos":[331930,332128],"yaml":true},{"content":"An expression binding that specifies the input set.","nodes":[{"pos":[0,51],"content":"An expression binding that specifies the input set.","nodes":[{"content":"An expression binding that specifies the input set.","pos":[0,51]}]}],"pos":[332548,332600],"yaml":true},{"content":"A list of sort specifications that determine how the elements of the input set should be sorted.","nodes":[{"pos":[0,96],"content":"A list of sort specifications that determine how the elements of the input set should be sorted.","nodes":[{"content":"A list of sort specifications that determine how the elements of the input set should be sorted.","pos":[0,96]}]}],"pos":[332736,332833],"yaml":true},{"content":"An expression the specifies how many elements of the ordered set to skip.","nodes":[{"pos":[0,73],"content":"An expression the specifies how many elements of the ordered set to skip.","nodes":[{"content":"An expression the specifies how many elements of the ordered set to skip.","pos":[0,73]}]}],"pos":[332925,332999],"yaml":true},{"content":"A new DbSkipExpression that represents the skip operation.","nodes":[{"pos":[0,58],"content":"A new DbSkipExpression that represents the skip operation.","nodes":[{"content":"A new DbSkipExpression that represents the skip operation.","pos":[0,58]}]}],"pos":[333091,333150],"yaml":true},{"content":"<code>input</code>,  <code>sortOrder</code> or <code>count</code> is null, or <code>sortOrder</code> contains null.","nodes":[{"pos":[0,115],"content":"<ph id=\"ph1\">&lt;code&gt;input&lt;/code&gt;</ph>,  <ph id=\"ph2\">&lt;code&gt;sortOrder&lt;/code&gt;</ph> or <ph id=\"ph3\">&lt;code&gt;count&lt;/code&gt;</ph> is null, or <ph id=\"ph4\">&lt;code&gt;sortOrder&lt;/code&gt;</ph> contains null.","source":"<code>input</code>,  <code>sortOrder</code> or <code>count</code> is null, or <code>sortOrder</code> contains null."}],"pos":[333354,333470],"yaml":true},{"content":"<code>sortOrder</code> is empty, or <code>count</code> is not <xref href=\"System.Data.Common.CommandTrees.DbConstantExpression\"></xref> or <xref href=\"System.Data.Common.CommandTrees.DbParameterReferenceExpression\"></xref> or has a result type that is not equal or promotable to a 64-bit integer type.","nodes":[{"pos":[0,301],"content":"<ph id=\"ph1\">&lt;code&gt;sortOrder&lt;/code&gt;</ph> is empty, or <ph id=\"ph2\">&lt;code&gt;count&lt;/code&gt;</ph> is not <ph id=\"ph3\">&lt;xref href=\"System.Data.Common.CommandTrees.DbConstantExpression\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph4\">&lt;xref href=\"System.Data.Common.CommandTrees.DbParameterReferenceExpression\"&gt;&lt;/xref&gt;</ph> or has a result type that is not equal or promotable to a 64-bit integer type.","source":"<code>sortOrder</code> is empty, or <code>count</code> is not <xref href=\"System.Data.Common.CommandTrees.DbConstantExpression\"></xref> or <xref href=\"System.Data.Common.CommandTrees.DbParameterReferenceExpression\"></xref> or has a result type that is not equal or promotable to a 64-bit integer type."}],"pos":[333564,333866],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbSortExpression\"></xref> that sorts the given input set by the specified sort specifications.","nodes":[{"pos":[0,152],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbSortExpression\"&gt;&lt;/xref&gt;</ph> that sorts the given input set by the specified sort specifications.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbSortExpression\"></xref> that sorts the given input set by the specified sort specifications."}],"pos":[335495,335648],"yaml":true},{"content":"An expression binding that specifies the input set.","nodes":[{"pos":[0,51],"content":"An expression binding that specifies the input set.","nodes":[{"content":"An expression binding that specifies the input set.","pos":[0,51]}]}],"pos":[336016,336068],"yaml":true},{"content":"A list of sort specifications that determine how the elements of the input set should be sorted.","nodes":[{"pos":[0,96],"content":"A list of sort specifications that determine how the elements of the input set should be sorted.","nodes":[{"content":"A list of sort specifications that determine how the elements of the input set should be sorted.","pos":[0,96]}]}],"pos":[336204,336301],"yaml":true},{"content":"A new DbSortExpression that represents the sort operation.","nodes":[{"pos":[0,58],"content":"A new DbSortExpression that represents the sort operation.","nodes":[{"content":"A new DbSortExpression that represents the sort operation.","pos":[0,58]}]}],"pos":[336393,336452],"yaml":true},{"content":"<code>input</code> or <code>sortOrder</code> is null, or <code>sortOrder</code> contains null.","nodes":[{"pos":[0,94],"content":"<ph id=\"ph1\">&lt;code&gt;input&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;sortOrder&lt;/code&gt;</ph> is null, or <ph id=\"ph3\">&lt;code&gt;sortOrder&lt;/code&gt;</ph> contains null.","source":"<code>input</code> or <code>sortOrder</code> is null, or <code>sortOrder</code> contains null."}],"pos":[336656,336751],"yaml":true},{"content":"<code>sortOrder</code> is empty.","nodes":[{"pos":[0,32],"content":"<ph id=\"ph1\">&lt;code&gt;sortOrder&lt;/code&gt;</ph> is empty.","source":"<code>sortOrder</code> is empty."}],"pos":[336845,336878],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbLimitExpression\"></xref> that restricts the number of elements in the Argument collection to the specified count Limit value. Tied results are not included in the output.","nodes":[{"pos":[0,230],"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbLimitExpression\"></xref> that restricts the number of elements in the Argument collection to the specified count Limit value. Tied results are not included in the output.","nodes":[{"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbLimitExpression\"&gt;&lt;/xref&gt;</ph> that restricts the number of elements in the Argument collection to the specified count Limit value.","pos":[0,185],"source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbLimitExpression\"></xref> that restricts the number of elements in the Argument collection to the specified count Limit value."},{"content":"Tied results are not included in the output.","pos":[186,230]}]}],"pos":[338306,338537],"yaml":true},{"content":"An expression that specifies the input collection.","nodes":[{"pos":[0,50],"content":"An expression that specifies the input collection.","nodes":[{"content":"An expression that specifies the input collection.","pos":[0,50]}]}],"pos":[338854,338905],"yaml":true},{"content":"An expression that specifies the limit value.","nodes":[{"pos":[0,45],"content":"An expression that specifies the limit value.","nodes":[{"content":"An expression that specifies the limit value.","pos":[0,45]}]}],"pos":[338997,339043],"yaml":true},{"content":"A new DbLimitExpression with the specified argument and count limit values that does not include tied results.","nodes":[{"pos":[0,110],"content":"A new DbLimitExpression with the specified argument and count limit values that does not include tied results.","nodes":[{"content":"A new DbLimitExpression with the specified argument and count limit values that does not include tied results.","pos":[0,110]}]}],"pos":[339136,339247],"yaml":true},{"content":"<code>argument</code> or <code>count</code> is null.","nodes":[{"pos":[0,52],"content":"<ph id=\"ph1\">&lt;code&gt;argument&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;count&lt;/code&gt;</ph> is null.","source":"<code>argument</code> or <code>count</code> is null."}],"pos":[339451,339504],"yaml":true},{"content":"<code>argument</code> does not have a collection result type,  <code>count</code> does not have a result type that is equal or promotable to a 64-bit integer type.","nodes":[{"pos":[0,163],"content":"<ph id=\"ph1\">&lt;code&gt;argument&lt;/code&gt;</ph> does not have a collection result type,  <ph id=\"ph2\">&lt;code&gt;count&lt;/code&gt;</ph> does not have a result type that is equal or promotable to a 64-bit integer type.","source":"<code>argument</code> does not have a collection result type,  <code>count</code> does not have a result type that is equal or promotable to a 64-bit integer type."}],"pos":[339598,339762],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbSortExpression\"></xref> that with a sort order that includes the sort order of the given order input set together with the specified sort key in ascending sort order and  with the specified collation.","nodes":[{"pos":[0,260],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbSortExpression\"&gt;&lt;/xref&gt;</ph> that with a sort order that includes the sort order of the given order input set together with the specified sort key in ascending sort order and  with the specified collation.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbSortExpression\"></xref> that with a sort order that includes the sort order of the given order input set together with the specified sort key in ascending sort order and  with the specified collation."}],"pos":[341523,341784],"yaml":true},{"content":"A DbSortExpression that specifies the ordered input set.","nodes":[{"pos":[0,56],"content":"A DbSortExpression that specifies the ordered input set.","nodes":[{"content":"A DbSortExpression that specifies the ordered input set.","pos":[0,56]}]}],"pos":[342177,342234],"yaml":true},{"content":"A method that specifies how to derive the additional sort key expression given a member of the input set. This method must produce an expression with an order-comparable result type that provides the sort key definition.","nodes":[{"pos":[0,220],"content":"A method that specifies how to derive the additional sort key expression given a member of the input set. This method must produce an expression with an order-comparable result type that provides the sort key definition.","nodes":[{"content":"A method that specifies how to derive the additional sort key expression given a member of the input set. This method must produce an expression with an order-comparable result type that provides the sort key definition.","pos":[0,220],"nodes":[{"content":"A method that specifies how to derive the additional sort key expression given a member of the input set.","pos":[0,105]},{"content":"This method must produce an expression with an order-comparable result type that provides the sort key definition.","pos":[106,220]}]}]}],"pos":[342386,342607],"yaml":true},{"content":"The collation to sort under.","nodes":[{"pos":[0,28],"content":"The collation to sort under.","nodes":[{"content":"The collation to sort under.","pos":[0,28]}]}],"pos":[342672,342701],"yaml":true},{"content":"A new DbSortExpression that represents the new overall order-by operation.","nodes":[{"pos":[0,74],"content":"A new DbSortExpression that represents the new overall order-by operation.","nodes":[{"content":"A new DbSortExpression that represents the new overall order-by operation.","pos":[0,74]}]}],"pos":[342793,342868],"yaml":true},{"content":"The expression produced by <code>sortKey</code> is null.","nodes":[{"pos":[0,56],"content":"The expression produced by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">sortKey</ph><ept id=\"p1\">&lt;/code&gt;</ept> is null.","source":"The expression produced by <code>sortKey</code> is null."}],"pos":[343074,343131],"yaml":true},{"content":"The expression produced by <code>sortKey</code> does not have an order-comparable string result type.","nodes":[{"pos":[0,101],"content":"The expression produced by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">sortKey</ph><ept id=\"p1\">&lt;/code&gt;</ept> does not have an order-comparable string result type.","source":"The expression produced by <code>sortKey</code> does not have an order-comparable string result type."}],"pos":[343225,343327],"yaml":true},{"content":"<code>collation</code> is empty or contains only space characters.","nodes":[{"pos":[0,66],"content":"<ph id=\"ph1\">&lt;code&gt;collation&lt;/code&gt;</ph> is empty or contains only space characters.","source":"<code>collation</code> is empty or contains only space characters."}],"pos":[343441,343508],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbSortExpression\"></xref> that with a sort order that includes the sort order of the given order input set together with the specified sort key in ascending sort order and  with default collation.","nodes":[{"pos":[0,254],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbSortExpression\"&gt;&lt;/xref&gt;</ph> that with a sort order that includes the sort order of the given order input set together with the specified sort key in ascending sort order and  with default collation.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbSortExpression\"></xref> that with a sort order that includes the sort order of the given order input set together with the specified sort key in ascending sort order and  with default collation."}],"pos":[345203,345458],"yaml":true},{"content":"A DbSortExpression that specifies the ordered input set.","nodes":[{"pos":[0,56],"content":"A DbSortExpression that specifies the ordered input set.","nodes":[{"content":"A DbSortExpression that specifies the ordered input set.","pos":[0,56]}]}],"pos":[345833,345890],"yaml":true},{"content":"A method that specifies how to derive the additional sort key expression given a member of the input set. This method must produce an expression with an order-comparable result type that provides the sort key definition.","nodes":[{"pos":[0,220],"content":"A method that specifies how to derive the additional sort key expression given a member of the input set. This method must produce an expression with an order-comparable result type that provides the sort key definition.","nodes":[{"content":"A method that specifies how to derive the additional sort key expression given a member of the input set. This method must produce an expression with an order-comparable result type that provides the sort key definition.","pos":[0,220],"nodes":[{"content":"A method that specifies how to derive the additional sort key expression given a member of the input set.","pos":[0,105]},{"content":"This method must produce an expression with an order-comparable result type that provides the sort key definition.","pos":[106,220]}]}]}],"pos":[346042,346263],"yaml":true},{"content":"A new DbSortExpression that represents the new overall order-by operation.","nodes":[{"pos":[0,74],"content":"A new DbSortExpression that represents the new overall order-by operation.","nodes":[{"content":"A new DbSortExpression that represents the new overall order-by operation.","pos":[0,74]}]}],"pos":[346355,346430],"yaml":true},{"content":"The expression produced by <code>sortKey</code> is null.","nodes":[{"pos":[0,56],"content":"The expression produced by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">sortKey</ph><ept id=\"p1\">&lt;/code&gt;</ept> is null.","source":"The expression produced by <code>sortKey</code> is null."}],"pos":[346636,346693],"yaml":true},{"content":"<code>sortKey</code> does not have an order-comparable result type.","nodes":[{"pos":[0,67],"content":"<ph id=\"ph1\">&lt;code&gt;sortKey&lt;/code&gt;</ph> does not have an order-comparable result type.","source":"<code>sortKey</code> does not have an order-comparable result type."}],"pos":[346787,346855],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbSortExpression\"></xref> that with a sort order that includes the sort order of the given order input set together with the specified sort key in descending sort order and  with default collation.","nodes":[{"pos":[0,255],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbSortExpression\"&gt;&lt;/xref&gt;</ph> that with a sort order that includes the sort order of the given order input set together with the specified sort key in descending sort order and  with default collation.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbSortExpression\"></xref> that with a sort order that includes the sort order of the given order input set together with the specified sort key in descending sort order and  with default collation."}],"pos":[348610,348866],"yaml":true},{"content":"A DbSortExpression that specifies the ordered input set.","nodes":[{"pos":[0,56],"content":"A DbSortExpression that specifies the ordered input set.","nodes":[{"content":"A DbSortExpression that specifies the ordered input set.","pos":[0,56]}]}],"pos":[349251,349308],"yaml":true},{"content":"A method that specifies how to derive the additional sort key expression given a member of the input set. This method must produce an expression with an order-comparable result type that provides the sort key definition.","nodes":[{"pos":[0,220],"content":"A method that specifies how to derive the additional sort key expression given a member of the input set. This method must produce an expression with an order-comparable result type that provides the sort key definition.","nodes":[{"content":"A method that specifies how to derive the additional sort key expression given a member of the input set. This method must produce an expression with an order-comparable result type that provides the sort key definition.","pos":[0,220],"nodes":[{"content":"A method that specifies how to derive the additional sort key expression given a member of the input set.","pos":[0,105]},{"content":"This method must produce an expression with an order-comparable result type that provides the sort key definition.","pos":[106,220]}]}]}],"pos":[349460,349681],"yaml":true},{"content":"A new DbSortExpression that represents the new overall order-by operation.","nodes":[{"pos":[0,74],"content":"A new DbSortExpression that represents the new overall order-by operation.","nodes":[{"content":"A new DbSortExpression that represents the new overall order-by operation.","pos":[0,74]}]}],"pos":[349773,349848],"yaml":true},{"content":"The expression produced by <code>sortKey</code> is null.","nodes":[{"pos":[0,56],"content":"The expression produced by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">sortKey</ph><ept id=\"p1\">&lt;/code&gt;</ept> is null.","source":"The expression produced by <code>sortKey</code> is null."}],"pos":[350064,350121],"yaml":true},{"content":"The expression produced by <code>sortKey</code> does not have an order-comparable result type.","nodes":[{"pos":[0,94],"content":"The expression produced by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">sortKey</ph><ept id=\"p1\">&lt;/code&gt;</ept> does not have an order-comparable result type.","source":"The expression produced by <code>sortKey</code> does not have an order-comparable result type."}],"pos":[350215,350310],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbSortExpression\"></xref> that with a sort order that includes the sort order of the given order input set together with the specified sort key in descending sort order and  with the specified collation.","nodes":[{"pos":[0,261],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbSortExpression\"&gt;&lt;/xref&gt;</ph> that with a sort order that includes the sort order of the given order input set together with the specified sort key in descending sort order and  with the specified collation.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbSortExpression\"></xref> that with a sort order that includes the sort order of the given order input set together with the specified sort key in descending sort order and  with the specified collation."}],"pos":[352131,352393],"yaml":true},{"content":"A DbSortExpression that specifies the ordered input set.","nodes":[{"pos":[0,56],"content":"A DbSortExpression that specifies the ordered input set.","nodes":[{"content":"A DbSortExpression that specifies the ordered input set.","pos":[0,56]}]}],"pos":[352796,352853],"yaml":true},{"content":"A method that specifies how to derive the additional sort key expression given a member of the input set. This method must produce an expression with an order-comparable result type that provides the sort key definition.","nodes":[{"pos":[0,220],"content":"A method that specifies how to derive the additional sort key expression given a member of the input set. This method must produce an expression with an order-comparable result type that provides the sort key definition.","nodes":[{"content":"A method that specifies how to derive the additional sort key expression given a member of the input set. This method must produce an expression with an order-comparable result type that provides the sort key definition.","pos":[0,220],"nodes":[{"content":"A method that specifies how to derive the additional sort key expression given a member of the input set.","pos":[0,105]},{"content":"This method must produce an expression with an order-comparable result type that provides the sort key definition.","pos":[106,220]}]}]}],"pos":[353005,353226],"yaml":true},{"content":"The collation to sort under.","nodes":[{"pos":[0,28],"content":"The collation to sort under.","nodes":[{"content":"The collation to sort under.","pos":[0,28]}]}],"pos":[353291,353320],"yaml":true},{"content":"A new DbSortExpression that represents the new overall order-by operation.","nodes":[{"pos":[0,74],"content":"A new DbSortExpression that represents the new overall order-by operation.","nodes":[{"content":"A new DbSortExpression that represents the new overall order-by operation.","pos":[0,74]}]}],"pos":[353412,353487],"yaml":true},{"content":"The expression produced by <code>sortKey</code> is null.","nodes":[{"pos":[0,56],"content":"The expression produced by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">sortKey</ph><ept id=\"p1\">&lt;/code&gt;</ept> is null.","source":"The expression produced by <code>sortKey</code> is null."}],"pos":[353703,353760],"yaml":true},{"content":"The expression produced by <code>sortKey</code> does not have an order-comparable string result type.","nodes":[{"pos":[0,101],"content":"The expression produced by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">sortKey</ph><ept id=\"p1\">&lt;/code&gt;</ept> does not have an order-comparable string result type.","source":"The expression produced by <code>sortKey</code> does not have an order-comparable string result type."}],"pos":[353854,353956],"yaml":true},{"content":"<code>collation</code> is empty or contains only space characters.","nodes":[{"pos":[0,66],"content":"<ph id=\"ph1\">&lt;code&gt;collation&lt;/code&gt;</ph> is empty or contains only space characters.","source":"<code>collation</code> is empty or contains only space characters."}],"pos":[354070,354137],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbSortClause\"></xref> with an ascending sort order and default collation.","nodes":[{"pos":[0,131],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbSortClause\"&gt;&lt;/xref&gt;</ph> with an ascending sort order and default collation.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbSortClause\"></xref> with an ascending sort order and default collation."}],"pos":[355436,355568],"yaml":true},{"content":"The expression that defines the sort key.","nodes":[{"pos":[0,41],"content":"The expression that defines the sort key.","nodes":[{"content":"The expression that defines the sort key.","pos":[0,41]}]}],"pos":[355826,355868],"yaml":true},{"content":"A new sort clause with the given sort key and ascending sort order.","nodes":[{"pos":[0,67],"content":"A new sort clause with the given sort key and ascending sort order.","nodes":[{"content":"A new sort clause with the given sort key and ascending sort order.","pos":[0,67]}]}],"pos":[355956,356024],"yaml":true},{"content":"<code>key</code> is null.","nodes":[{"pos":[0,25],"content":"<ph id=\"ph1\">&lt;code&gt;key&lt;/code&gt;</ph> is null.","source":"<code>key</code> is null."}],"pos":[356236,356262],"yaml":true},{"content":"<code>key</code> does not have an order-comparable result type.","nodes":[{"pos":[0,63],"content":"<ph id=\"ph1\">&lt;code&gt;key&lt;/code&gt;</ph> does not have an order-comparable result type.","source":"<code>key</code> does not have an order-comparable result type."}],"pos":[356356,356420],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbSortClause\"></xref> with an ascending sort order and the specified collation.","nodes":[{"pos":[0,137],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbSortClause\"&gt;&lt;/xref&gt;</ph> with an ascending sort order and the specified collation.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbSortClause\"></xref> with an ascending sort order and the specified collation."}],"pos":[357785,357923],"yaml":true},{"content":"The expression that defines the sort key.","nodes":[{"pos":[0,41],"content":"The expression that defines the sort key.","nodes":[{"content":"The expression that defines the sort key.","pos":[0,41]}]}],"pos":[358199,358241],"yaml":true},{"content":"The collation to sort under.","nodes":[{"pos":[0,28],"content":"The collation to sort under.","nodes":[{"content":"The collation to sort under.","pos":[0,28]}]}],"pos":[358306,358335],"yaml":true},{"content":"A new sort clause with the given sort key and collation, and ascending sort order.","nodes":[{"pos":[0,82],"content":"A new sort clause with the given sort key and collation, and ascending sort order.","nodes":[{"content":"A new sort clause with the given sort key and collation, and ascending sort order.","pos":[0,82]}]}],"pos":[358423,358506],"yaml":true},{"content":"<code>key</code> is null.","nodes":[{"pos":[0,25],"content":"<ph id=\"ph1\">&lt;code&gt;key&lt;/code&gt;</ph> is null.","source":"<code>key</code> is null."}],"pos":[358718,358744],"yaml":true},{"content":"<code>collation</code> is empty or contains only space characters.","nodes":[{"pos":[0,66],"content":"<ph id=\"ph1\">&lt;code&gt;collation&lt;/code&gt;</ph> is empty or contains only space characters.","source":"<code>collation</code> is empty or contains only space characters."}],"pos":[358858,358925],"yaml":true},{"content":"<code>key</code> does not have an order-comparable result type.","nodes":[{"pos":[0,63],"content":"<ph id=\"ph1\">&lt;code&gt;key&lt;/code&gt;</ph> does not have an order-comparable result type.","source":"<code>key</code> does not have an order-comparable result type."}],"pos":[359019,359083],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbSortClause\"></xref> with a descending sort order and default collation.","nodes":[{"pos":[0,131],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbSortClause\"&gt;&lt;/xref&gt;</ph> with a descending sort order and default collation.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbSortClause\"></xref> with a descending sort order and default collation."}],"pos":[360442,360574],"yaml":true},{"content":"The expression that defines the sort key.","nodes":[{"pos":[0,41],"content":"The expression that defines the sort key.","nodes":[{"content":"The expression that defines the sort key.","pos":[0,41]}]}],"pos":[360842,360884],"yaml":true},{"content":"A new sort clause with the given sort key and descending sort order.","nodes":[{"pos":[0,68],"content":"A new sort clause with the given sort key and descending sort order.","nodes":[{"content":"A new sort clause with the given sort key and descending sort order.","pos":[0,68]}]}],"pos":[360972,361041],"yaml":true},{"content":"<code>key</code> is null.","nodes":[{"pos":[0,25],"content":"<ph id=\"ph1\">&lt;code&gt;key&lt;/code&gt;</ph> is null.","source":"<code>key</code> is null."}],"pos":[361263,361289],"yaml":true},{"content":"<code>key</code> does not have an order-comparable result type.","nodes":[{"pos":[0,63],"content":"<ph id=\"ph1\">&lt;code&gt;key&lt;/code&gt;</ph> does not have an order-comparable result type.","source":"<code>key</code> does not have an order-comparable result type."}],"pos":[361383,361447],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbSortClause\"></xref> with a descending sort order and the specified collation.","nodes":[{"pos":[0,137],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbSortClause\"&gt;&lt;/xref&gt;</ph> with a descending sort order and the specified collation.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbSortClause\"></xref> with a descending sort order and the specified collation."}],"pos":[362872,363010],"yaml":true},{"content":"The expression that defines the sort key.","nodes":[{"pos":[0,41],"content":"The expression that defines the sort key.","nodes":[{"content":"The expression that defines the sort key.","pos":[0,41]}]}],"pos":[363296,363338],"yaml":true},{"content":"The collation to sort under.","nodes":[{"pos":[0,28],"content":"The collation to sort under.","nodes":[{"content":"The collation to sort under.","pos":[0,28]}]}],"pos":[363403,363432],"yaml":true},{"content":"A new sort clause with the given sort key and collation, and descending sort order.","nodes":[{"pos":[0,83],"content":"A new sort clause with the given sort key and collation, and descending sort order.","nodes":[{"content":"A new sort clause with the given sort key and collation, and descending sort order.","pos":[0,83]}]}],"pos":[363520,363604],"yaml":true},{"content":"<code>key</code> is null.","nodes":[{"pos":[0,25],"content":"<ph id=\"ph1\">&lt;code&gt;key&lt;/code&gt;</ph> is null.","source":"<code>key</code> is null."}],"pos":[363826,363852],"yaml":true},{"content":"<code>collation</code> is empty or contains only space characters.","nodes":[{"pos":[0,66],"content":"<ph id=\"ph1\">&lt;code&gt;collation&lt;/code&gt;</ph> is empty or contains only space characters.","source":"<code>collation</code> is empty or contains only space characters."}],"pos":[363966,364033],"yaml":true},{"content":"<code>key</code> does not have an order-comparable result type.","nodes":[{"pos":[0,63],"content":"<ph id=\"ph1\">&lt;code&gt;key&lt;/code&gt;</ph> does not have an order-comparable result type.","source":"<code>key</code> does not have an order-comparable result type."}],"pos":[364127,364191],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbTreatExpression\"></xref>.","nodes":[{"pos":[0,85],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbTreatExpression\"&gt;&lt;/xref&gt;</ph>.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbTreatExpression\"></xref>."}],"pos":[365598,365684],"yaml":true},{"content":"DbTreatExpression requires that `argument` has a polymorphic result type, and that `treatType` is a type from the same type hierarchy as that result type.","nodes":[{"pos":[0,154],"content":"DbTreatExpression requires that <ph id=\"ph1\">`argument`</ph> has a polymorphic result type, and that <ph id=\"ph2\">`treatType`</ph> is a type from the same type hierarchy as that result type.","source":"DbTreatExpression requires that `argument` has a polymorphic result type, and that `treatType` is a type from the same type hierarchy as that result type."}],"pos":[365695,365850],"yaml":true,"extradata":"MT"},{"content":"An expression that specifies the instance.","nodes":[{"pos":[0,42],"content":"An expression that specifies the instance.","nodes":[{"content":"An expression that specifies the instance.","pos":[0,42]}]}],"pos":[366164,366207],"yaml":true},{"content":"Type metadata for the treat-as type.","nodes":[{"pos":[0,36],"content":"Type metadata for the treat-as type.","nodes":[{"content":"Type metadata for the treat-as type.","pos":[0,36]}]}],"pos":[366293,366330],"yaml":true},{"content":"A new DbTreatExpression with the specified argument and type.","nodes":[{"pos":[0,61],"content":"A new DbTreatExpression with the specified argument and type.","nodes":[{"content":"A new DbTreatExpression with the specified argument and type.","pos":[0,61]}]}],"pos":[366423,366485],"yaml":true},{"content":"<code>argument</code> or <code>treatType</code> is null.","nodes":[{"pos":[0,56],"content":"<ph id=\"ph1\">&lt;code&gt;argument&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;treatType&lt;/code&gt;</ph> is null.","source":"<code>argument</code> or <code>treatType</code> is null."}],"pos":[366692,366749],"yaml":true},{"content":"<code>treatType</code> is not in the same type hierarchy as the result type of <code>argument</code>.","nodes":[{"pos":[0,101],"content":"<ph id=\"ph1\">&lt;code&gt;treatType&lt;/code&gt;</ph> is not in the same type hierarchy as the result type of <ph id=\"ph2\">&lt;code&gt;argument&lt;/code&gt;</ph>.","source":"<code>treatType</code> is not in the same type hierarchy as the result type of <code>argument</code>."}],"pos":[366843,366945],"yaml":true},{"content":"Gets a <xref href=\"System.Data.Common.CommandTrees.DbConstantExpression\"></xref> with the Boolean value `true`.","nodes":[{"pos":[0,111],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbConstantExpression\"&gt;&lt;/xref&gt;</ph> with the Boolean value <ph id=\"ph2\">`true`</ph>.","source":"Gets a <xref href=\"System.Data.Common.CommandTrees.DbConstantExpression\"></xref> with the Boolean value `true`."}],"pos":[368022,368134],"yaml":true},{"content":"A <xref href=\"System.Data.Common.CommandTrees.DbConstantExpression\"></xref> with the Boolean value `true`.","nodes":[{"pos":[0,106],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbConstantExpression\"&gt;&lt;/xref&gt;</ph> with the Boolean value <ph id=\"ph2\">`true`</ph>.","source":"A <xref href=\"System.Data.Common.CommandTrees.DbConstantExpression\"></xref> with the Boolean value `true`."}],"pos":[368334,368441],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbArithmeticExpression\"></xref> that negates the value of the argument.","nodes":[{"pos":[0,129],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbArithmeticExpression\"&gt;&lt;/xref&gt;</ph> that negates the value of the argument.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbArithmeticExpression\"></xref> that negates the value of the argument."}],"pos":[369833,369963],"yaml":true},{"content":"An expression that specifies the argument.","nodes":[{"pos":[0,42],"content":"An expression that specifies the argument.","nodes":[{"content":"An expression that specifies the argument.","pos":[0,42]}]}],"pos":[370239,370282],"yaml":true},{"content":"A new DbArithmeticExpression representing the negation operation.","nodes":[{"pos":[0,65],"content":"A new DbArithmeticExpression representing the negation operation.","nodes":[{"content":"A new DbArithmeticExpression representing the negation operation.","pos":[0,65]}]}],"pos":[370380,370446],"yaml":true},{"content":"<code>argument</code> is null.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;argument&lt;/code&gt;</ph> is null.","source":"<code>argument</code> is null."}],"pos":[370656,370687],"yaml":true},{"content":"No numeric result type exists for <code>argument</code>.","nodes":[{"pos":[0,56],"content":"No numeric result type exists for <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">argument</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"No numeric result type exists for <code>argument</code>."}],"pos":[370781,370838],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that computes the union of the left and right set arguments with duplicates removed.","nodes":[{"pos":[0,164],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbExpression\"&gt;&lt;/xref&gt;</ph> that computes the union of the left and right set arguments with duplicates removed.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that computes the union of the left and right set arguments with duplicates removed."}],"pos":[372272,372437],"yaml":true},{"content":"An expression that defines the left set argument.","nodes":[{"pos":[0,49],"content":"An expression that defines the left set argument.","nodes":[{"content":"An expression that defines the left set argument.","pos":[0,49]}]}],"pos":[372742,372792],"yaml":true},{"content":"An expression that defines the right set argument.","nodes":[{"pos":[0,50],"content":"An expression that defines the right set argument.","nodes":[{"content":"An expression that defines the right set argument.","pos":[0,50]}]}],"pos":[372884,372935],"yaml":true},{"content":"A new DbExpression that computes the union, without duplicates, of the the left and right arguments.","nodes":[{"pos":[0,100],"content":"A new DbExpression that computes the union, without duplicates, of the the left and right arguments.","nodes":[{"content":"A new DbExpression that computes the union, without duplicates, of the the left and right arguments.","pos":[0,100]}]}],"pos":[373023,373124],"yaml":true},{"content":"<code>left</code> or <code>right</code> is null.","nodes":[{"pos":[0,48],"content":"<ph id=\"ph1\">&lt;code&gt;left&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;right&lt;/code&gt;</ph> is null.","source":"<code>left</code> or <code>right</code> is null."}],"pos":[373329,373378],"yaml":true},{"content":"No common collection result type with an equality-comparable element type exists between <code>left</code> and <code>right</code>.","nodes":[{"pos":[0,130],"content":"No common collection result type with an equality-comparable element type exists between <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">left</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">right</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"No common collection result type with an equality-comparable element type exists between <code>left</code> and <code>right</code>."}],"pos":[373472,373603],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbUnionAllExpression\"></xref> that computes the union of the left and right set arguments and does not remove duplicates.","nodes":[{"pos":[0,179],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbUnionAllExpression\"&gt;&lt;/xref&gt;</ph> that computes the union of the left and right set arguments and does not remove duplicates.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbUnionAllExpression\"></xref> that computes the union of the left and right set arguments and does not remove duplicates."}],"pos":[375055,375235],"yaml":true},{"content":"An expression that defines the left set argument.","nodes":[{"pos":[0,49],"content":"An expression that defines the left set argument.","nodes":[{"content":"An expression that defines the left set argument.","pos":[0,49]}]}],"pos":[375551,375601],"yaml":true},{"content":"An expression that defines the right set argument.","nodes":[{"pos":[0,50],"content":"An expression that defines the right set argument.","nodes":[{"content":"An expression that defines the right set argument.","pos":[0,50]}]}],"pos":[375693,375744],"yaml":true},{"content":"A new DbUnionAllExpression that union, including duplicates, of the the left and right arguments.","nodes":[{"pos":[0,97],"content":"A new DbUnionAllExpression that union, including duplicates, of the the left and right arguments.","nodes":[{"content":"A new DbUnionAllExpression that union, including duplicates, of the the left and right arguments.","pos":[0,97]}]}],"pos":[375840,375938],"yaml":true},{"content":"<code>left</code> or <code>right</code> is null.","nodes":[{"pos":[0,48],"content":"<ph id=\"ph1\">&lt;code&gt;left&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;right&lt;/code&gt;</ph> is null.","source":"<code>left</code> or <code>right</code> is null."}],"pos":[376146,376195],"yaml":true},{"content":"No common collection result type with an equality-comparable element type exists between <code>left</code> and <code>right</code>.","nodes":[{"pos":[0,130],"content":"No common collection result type with an equality-comparable element type exists between <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">left</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">right</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"No common collection result type with an equality-comparable element type exists between <code>left</code> and <code>right</code>."}],"pos":[376289,376420],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbVariableReferenceExpression\"></xref> that references a variable with the specified name and type.","nodes":[{"pos":[0,157],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbVariableReferenceExpression\"&gt;&lt;/xref&gt;</ph> that references a variable with the specified name and type.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbVariableReferenceExpression\"></xref> that references a variable with the specified name and type."}],"pos":[377722,377880],"yaml":true},{"content":"The type of the referenced variable.","nodes":[{"pos":[0,36],"content":"The type of the referenced variable.","nodes":[{"content":"The type of the referenced variable.","pos":[0,36]}]}],"pos":[378146,378183],"yaml":true},{"content":"The name of the referenced variable.","nodes":[{"pos":[0,36],"content":"The name of the referenced variable.","nodes":[{"content":"The name of the referenced variable.","pos":[0,36]}]}],"pos":[378243,378280],"yaml":true},{"content":"A DbVariableReferenceExpression that represents a reference to a variable with the specified name and type. The result type of the expression will be the same as <code>type</code>.","nodes":[{"pos":[0,180],"content":"A DbVariableReferenceExpression that represents a reference to a variable with the specified name and type. The result type of the expression will be the same as <code>type</code>.","nodes":[{"content":"A DbVariableReferenceExpression that represents a reference to a variable with the specified name and type.","pos":[0,107]},{"content":"The result type of the expression will be the same as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">type</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[108,180],"source":" The result type of the expression will be the same as <code>type</code>."}]}],"pos":[378385,378566],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbFilterExpression\"></xref> that filters the elements in the given input set using the specified predicate.","nodes":[{"pos":[0,165],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbFilterExpression\"&gt;&lt;/xref&gt;</ph> that filters the elements in the given input set using the specified predicate.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbFilterExpression\"></xref> that filters the elements in the given input set using the specified predicate."}],"pos":[380340,380506],"yaml":true},{"content":"An expression that specifies the input set.","nodes":[{"pos":[0,43],"content":"An expression that specifies the input set.","nodes":[{"content":"An expression that specifies the input set.","pos":[0,43]}]}],"pos":[380876,380920],"yaml":true},{"content":"A method representing the predicate to evaluate for each member of the input set.    This method must produce an expression with a Boolean result type that provides the predicate logic.","nodes":[{"pos":[0,185],"content":"A method representing the predicate to evaluate for each member of the input set.    This method must produce an expression with a Boolean result type that provides the predicate logic.","nodes":[{"content":"A method representing the predicate to evaluate for each member of the input set.    This method must produce an expression with a Boolean result type that provides the predicate logic.","pos":[0,185],"nodes":[{"content":"A method representing the predicate to evaluate for each member of the input set.","pos":[0,81]},{"content":"This method must produce an expression with a Boolean result type that provides the predicate logic.","pos":[85,185]}]}]}],"pos":[381074,381260],"yaml":true},{"content":"A new DbQuantifierExpression that represents the Any operation.","nodes":[{"pos":[0,63],"content":"A new DbQuantifierExpression that represents the Any operation.","nodes":[{"content":"A new DbQuantifierExpression that represents the Any operation.","pos":[0,63]}]}],"pos":[381354,381418],"yaml":true},{"content":"The expression produced by <code>predicate</code> is null.","nodes":[{"pos":[0,58],"content":"The expression produced by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">predicate</ph><ept id=\"p1\">&lt;/code&gt;</ept> is null.","source":"The expression produced by <code>predicate</code> is null."}],"pos":[381623,381682],"yaml":true},{"content":"The expression produced by <code>predicate</code> does not have a Boolean result type.","nodes":[{"pos":[0,86],"content":"The expression produced by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">predicate</ph><ept id=\"p1\">&lt;/code&gt;</ept> does not have a Boolean result type.","source":"The expression produced by <code>predicate</code> does not have a Boolean result type."}],"pos":[381776,381863],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  commentId: T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  id: DbExpressionBuilder\n  children:\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbAggregate,System.String)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbExpression,System.String)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Bind(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs(System.Data.Common.CommandTrees.DbExpression,System.String)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Case(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Data.Metadata.Edm.TypeUsage,System.Object)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Object)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression[])\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Data.Common.CommandTrees.DbExpression[])\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossJoin(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpressionBinding})\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Distinct(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Element(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Exists(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.False\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBind(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs(System.Data.Common.CommandTrees.DbExpression,System.String,System.String)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy(System.Data.Common.CommandTrees.DbGroupExpressionBinding,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}})\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression[])\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda,System.Data.Common.CommandTrees.DbExpression[])\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsEmpty(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsNull(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression})\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbVariableReferenceExpression[])\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Metadata.Edm.RelationshipType,System.String,System.String,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Negate(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression[])\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Data.Common.CommandTrees.DbExpression[])\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewEmptyCollection(System.Data.Metadata.Edm.TypeUsage)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Not(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Null(System.Data.Metadata.Edm.TypeUsage)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Parameter(System.Data.Metadata.Edm.TypeUsage,System.String)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Project(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EdmProperty)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.NavigationProperty)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.String)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EntityType)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Scan(System.Data.Metadata.Edm.EntitySetBase)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,``0})\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbSortExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause},System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause})\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression,System.String)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression,System.String)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.True\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnaryMinus(System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Variable(System.Data.Metadata.Edm.TypeUsage,System.String)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  langs:\n  - csharp\n  name: DbExpressionBuilder\n  nameWithType: DbExpressionBuilder\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  type: Class\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Provides an API to construct <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref>s and allows that API to be accessed as extension methods on the expression type itself.\n  syntax:\n    content: public static class DbExpressionBuilder\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression)\n  id: Aggregate(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Aggregate(EdmFunction, DbExpression)\n  nameWithType: DbExpressionBuilder.Aggregate(EdmFunction, DbExpression)\n  fullName: DbExpressionBuilder.Aggregate(EdmFunction, DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbFunctionAggregate\"></xref>.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbFunctionAggregate Aggregate (this System.Data.Metadata.Edm.EdmFunction function, System.Data.Common.CommandTrees.DbExpression argument);\n    parameters:\n    - id: function\n      type: System.Data.Metadata.Edm.EdmFunction\n      description: The function that defines the aggregate operation.\n    - id: argument\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: The argument over which the aggregate function should be calculated.\n    return:\n      type: System.Data.Common.CommandTrees.DbFunctionAggregate\n      description: A new function aggregate with a reference to the given function and argument. The function aggregate's Distinct property will have the value `false`.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>function</code> or <code>argument</code> null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>function</code> is not an aggregate function or has more than one argument, or the result type of <code>argument</code> is not equal or promotable to the parameter type of <code>function</code>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression)\n  id: AggregateDistinct(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: AggregateDistinct(EdmFunction, DbExpression)\n  nameWithType: DbExpressionBuilder.AggregateDistinct(EdmFunction, DbExpression)\n  fullName: DbExpressionBuilder.AggregateDistinct(EdmFunction, DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbFunctionAggregate\"></xref> that is applied in a distinct fashion.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbFunctionAggregate AggregateDistinct (this System.Data.Metadata.Edm.EdmFunction function, System.Data.Common.CommandTrees.DbExpression argument);\n    parameters:\n    - id: function\n      type: System.Data.Metadata.Edm.EdmFunction\n      description: The function that defines the aggregate operation.\n    - id: argument\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: The argument over which the aggregate function should be calculated.\n    return:\n      type: System.Data.Common.CommandTrees.DbFunctionAggregate\n      description: A new function aggregate with a reference to the given function and argument. The function aggregate's Distinct property will have the value `true`.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>function</code> or <code>argument</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>function</code> is not an aggregate function or has more than one argument, or the result type of <code>argument</code> is not equal or promotable to the parameter type of <code>function</code>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  id: All(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: All(DbExpression, Func<DbExpression,DbExpression>)\n  nameWithType: DbExpressionBuilder.All(DbExpression, Func<DbExpression,DbExpression>)\n  fullName: DbExpressionBuilder.All(DbExpression, Func<DbExpression,DbExpression>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbQuantifierExpression\"></xref> that determines whether the given predicate holds for all elements of the input set.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbQuantifierExpression All (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> predicate);\n    parameters:\n    - id: source\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression that specifies the input set.\n    - id: predicate\n      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}\n      description: A method representing a predicate to evaluate for each member of the input set.    This method must produce an expression with a Boolean result type that provides the predicate logic.\n    return:\n      type: System.Data.Common.CommandTrees.DbQuantifierExpression\n      description: A new DbQuantifierExpression that represents the All operation.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The expression produced by <code>predicate</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The expression produced by <code>Predicate</code> does not have a Boolean result type.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)\n  id: All(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: All(DbExpressionBinding, DbExpression)\n  nameWithType: DbExpressionBuilder.All(DbExpressionBinding, DbExpression)\n  fullName: DbExpressionBuilder.All(DbExpressionBinding, DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbQuantifierExpression\"></xref> that determines whether the given predicate holds for all elements of the input set.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbQuantifierExpression All (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpression predicate);\n    parameters:\n    - id: input\n      type: System.Data.Common.CommandTrees.DbExpressionBinding\n      description: An expression binding that specifies the input set.\n    - id: predicate\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression representing a predicate to evaluate for each member of the input set.\n    return:\n      type: System.Data.Common.CommandTrees.DbQuantifierExpression\n      description: A new DbQuantifierExpression that represents the All operation.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>input</code> or <code>predicate</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>predicate</code> does not have a Boolean result type.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  id: And(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: And(DbExpression, DbExpression)\n  nameWithType: DbExpressionBuilder.And(DbExpression, DbExpression)\n  fullName: DbExpressionBuilder.And(DbExpression, DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates an <xref href=\"System.Data.Common.CommandTrees.DbAndExpression\"></xref> that performs the logical And of the left and right arguments.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbAndExpression And (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);\n    parameters:\n    - id: left\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: A Boolean expression that specifies the left argument.\n    - id: right\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: A Boolean expression that specifies the right argument.\n    return:\n      type: System.Data.Common.CommandTrees.DbAndExpression\n      description: A new DbAndExpression with the specified arguments.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>left</code> or <code>right</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>left</code> and <code>right</code> does not have a Boolean result type.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression)\n  id: Any(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Any(DbExpression)\n  nameWithType: DbExpressionBuilder.Any(DbExpression)\n  fullName: DbExpressionBuilder.Any(DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that determines whether the specified set argument is non-empty.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbExpression Any (this System.Data.Common.CommandTrees.DbExpression source);\n    parameters:\n    - id: source\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression that specifies the input set.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: A new <xref href=\"System.Data.Common.CommandTrees.DbNotExpression\"></xref> applied to a new <xref href=\"System.Data.Common.CommandTrees.DbIsEmptyExpression\"></xref> with the specified argument.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>source</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>source</code> does not have a collection result type.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  id: Any(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Any(DbExpression, Func<DbExpression,DbExpression>)\n  nameWithType: DbExpressionBuilder.Any(DbExpression, Func<DbExpression,DbExpression>)\n  fullName: DbExpressionBuilder.Any(DbExpression, Func<DbExpression,DbExpression>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbQuantifierExpression\"></xref> that determines whether the given predicate holds for any element of the input set.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbQuantifierExpression Any (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> predicate);\n    parameters:\n    - id: source\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression that specifies the input set.\n    - id: predicate\n      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}\n      description: A method representing the predicate to evaluate for each member of the input set. This method must produce an expression with a Boolean result type that provides the predicate logic.\n    return:\n      type: System.Data.Common.CommandTrees.DbQuantifierExpression\n      description: A new DbQuantifierExpression that represents the Any operation.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The expression produced by <code>predicate</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The expression produced by <code>predicate</code> does not have a Boolean result type.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)\n  id: Any(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Any(DbExpressionBinding, DbExpression)\n  nameWithType: DbExpressionBuilder.Any(DbExpressionBinding, DbExpression)\n  fullName: DbExpressionBuilder.Any(DbExpressionBinding, DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbQuantifierExpression\"></xref> that determines whether the given predicate holds for any element of the input set.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbQuantifierExpression Any (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpression predicate);\n    parameters:\n    - id: input\n      type: System.Data.Common.CommandTrees.DbExpressionBinding\n      description: An expression binding that specifies the input set.\n    - id: predicate\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression representing a predicate to evaluate for each member of the input set.\n    return:\n      type: System.Data.Common.CommandTrees.DbQuantifierExpression\n      description: A new DbQuantifierExpression that represents the Any operation.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>input</code> or <code>predicate</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The expression produced by <code>predicate</code> does not have a Boolean result type.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbAggregate,System.String)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbAggregate,System.String)\n  id: As(System.Data.Common.CommandTrees.DbAggregate,System.String)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: As(DbAggregate, String)\n  nameWithType: DbExpressionBuilder.As(DbAggregate, String)\n  fullName: DbExpressionBuilder.As(DbAggregate, String)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Returns the specified arguments as a key/value pair object.\n  syntax:\n    content: public static System.Collections.Generic.KeyValuePair<string,System.Data.Common.CommandTrees.DbAggregate> As (this System.Data.Common.CommandTrees.DbAggregate value, string alias);\n    parameters:\n    - id: value\n      type: System.Data.Common.CommandTrees.DbAggregate\n      description: The value in the key/value pair.\n    - id: alias\n      type: System.String\n      description: The key in the key/value pair.\n    return:\n      type: System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}\n      description: A key/value pair object.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbExpression,System.String)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbExpression,System.String)\n  id: As(System.Data.Common.CommandTrees.DbExpression,System.String)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: As(DbExpression, String)\n  nameWithType: DbExpressionBuilder.As(DbExpression, String)\n  fullName: DbExpressionBuilder.As(DbExpression, String)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Returns the specified arguments as a key/value pair object.\n  syntax:\n    content: public static System.Collections.Generic.KeyValuePair<string,System.Data.Common.CommandTrees.DbExpression> As (this System.Data.Common.CommandTrees.DbExpression value, string alias);\n    parameters:\n    - id: value\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: The value in the key/value pair.\n    - id: alias\n      type: System.String\n      description: The key in the key/value pair.\n    return:\n      type: System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}\n      description: A key/value pair object.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Bind(System.Data.Common.CommandTrees.DbExpression)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Bind(System.Data.Common.CommandTrees.DbExpression)\n  id: Bind(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Bind(DbExpression)\n  nameWithType: DbExpressionBuilder.Bind(DbExpression)\n  fullName: DbExpressionBuilder.Bind(DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbExpressionBinding\"></xref> that uses a generated variable name to bind the given expression.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbExpressionBinding Bind (this System.Data.Common.CommandTrees.DbExpression input);\n    parameters:\n    - id: input\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: The expression to bind.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpressionBinding\n      description: A new expression binding with the specified expression and a generated variable name.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Bind*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>input</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>input</code> does not have a collection result.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs(System.Data.Common.CommandTrees.DbExpression,System.String)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs(System.Data.Common.CommandTrees.DbExpression,System.String)\n  id: BindAs(System.Data.Common.CommandTrees.DbExpression,System.String)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: BindAs(DbExpression, String)\n  nameWithType: DbExpressionBuilder.BindAs(DbExpression, String)\n  fullName: DbExpressionBuilder.BindAs(DbExpression, String)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbExpressionBinding\"></xref> that uses the specified variable name to bind the given expression\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbExpressionBinding BindAs (this System.Data.Common.CommandTrees.DbExpression input, string varName);\n    parameters:\n    - id: input\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: The expression to bind.\n    - id: varName\n      type: System.String\n      description: The variable name that should be used for the binding.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpressionBinding\n      description: A new expression binding with the specified expression and variable name.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>input</code> or <code>varName</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>input</code> does not have a collection result.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Case(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Data.Common.CommandTrees.DbExpression)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Case(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Data.Common.CommandTrees.DbExpression)\n  id: Case(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Case(IEnumerable<DbExpression>, IEnumerable<DbExpression>, DbExpression)\n  nameWithType: DbExpressionBuilder.Case(IEnumerable<DbExpression>, IEnumerable<DbExpression>, DbExpression)\n  fullName: DbExpressionBuilder.Case(IEnumerable<DbExpression>, IEnumerable<DbExpression>, DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbCaseExpression\"></xref>.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbCaseExpression Case (System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpression> whenExpressions, System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpression> thenExpressions, System.Data.Common.CommandTrees.DbExpression elseExpression);\n    parameters:\n    - id: whenExpressions\n      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression}\n      description: A list of expressions that provide the conditional for of each case.\n    - id: thenExpressions\n      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression}\n      description: A list of expressions that provide the result of each case.\n    - id: elseExpression\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression that defines the result when no case is matched.\n    return:\n      type: System.Data.Common.CommandTrees.DbCaseExpression\n      description: A new DbCaseExpression with the specified cases and default result.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Case*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>whenExpressions</code> or <code>thenExpressions</code> is null or contains null, or <code>elseExpression</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>whenExpressions</code> or <code>thenExpressions</code> is empty or <code>whenExpressions</code> contains an expression with a non-Boolean result type, or no common result type exists for all expressions in <code>thenExpressions</code> and <code>elseExpression</code>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)\n  id: CastTo(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: CastTo(DbExpression, TypeUsage)\n  nameWithType: DbExpressionBuilder.CastTo(DbExpression, TypeUsage)\n  fullName: DbExpressionBuilder.CastTo(DbExpression, TypeUsage)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbCastExpression\"></xref> that applies a cast operation to a polymorphic argument.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbCastExpression CastTo (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage toType);\n    parameters:\n    - id: argument\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: The argument to which the cast should be applied.\n    - id: toType\n      type: System.Data.Metadata.Edm.TypeUsage\n      description: Type metadata that specifies the type to cast to.\n    return:\n      type: System.Data.Common.CommandTrees.DbCastExpression\n      description: A new DbCastExpression with the specified argument and target type.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>Argument</code> or <code>toType</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The specified cast is not valid.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Data.Metadata.Edm.TypeUsage,System.Object)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Data.Metadata.Edm.TypeUsage,System.Object)\n  id: Constant(System.Data.Metadata.Edm.TypeUsage,System.Object)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Constant(TypeUsage, Object)\n  nameWithType: DbExpressionBuilder.Constant(TypeUsage, Object)\n  fullName: DbExpressionBuilder.Constant(TypeUsage, Object)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbConstantExpression\"></xref> of the specified primitive type with the given constant value.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbConstantExpression Constant (this System.Data.Metadata.Edm.TypeUsage constantType, object value);\n    parameters:\n    - id: constantType\n      type: System.Data.Metadata.Edm.TypeUsage\n      description: The type of the constant value.\n    - id: value\n      type: System.Object\n      description: The constant value to represent.\n    return:\n      type: System.Data.Common.CommandTrees.DbConstantExpression\n      description: A new DbConstantExpression with the given value and a result type of <code>constantType</code>.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>value</code> or <code>constantType</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>value</code> is not an instance of a valid constant type,  <code>constantType</code> does not represent a primitive type, or <code>value</code> is of a different primitive type than that represented by <code>constantType</code>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Object)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Object)\n  id: Constant(System.Object)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Constant(Object)\n  nameWithType: DbExpressionBuilder.Constant(Object)\n  fullName: DbExpressionBuilder.Constant(Object)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbConstantExpression\"></xref> with the given constant value.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbConstantExpression Constant (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The constant value to represent.\n    return:\n      type: System.Data.Common.CommandTrees.DbConstantExpression\n      description: A new DbConstantExpression with the given value.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>value</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>value</code> is not an instance of a valid constant type.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})\n  id: CreateRef(System.Data.Metadata.Edm.EntitySet,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: CreateRef(EntitySet, IEnumerable<DbExpression>)\n  nameWithType: DbExpressionBuilder.CreateRef(EntitySet, IEnumerable<DbExpression>)\n  fullName: DbExpressionBuilder.CreateRef(EntitySet, IEnumerable<DbExpression>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbRefExpression\"></xref> that encodes a reference to a specific entity based on key values.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbRefExpression CreateRef (this System.Data.Metadata.Edm.EntitySet entitySet, System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpression> keyValues);\n    parameters:\n    - id: entitySet\n      type: System.Data.Metadata.Edm.EntitySet\n      description: The entity set in which the referenced element resides.\n    - id: keyValues\n      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression}\n      description: A collection of <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref>s that provide the key values. These expressions must match (in number, type, and order) the key properties of the referenced entity type.\n    return:\n      type: System.Data.Common.CommandTrees.DbRefExpression\n      description: A new DbRefExpression that references the element with the specified key values in the given entity set.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>entitySet</code> is null, or <code>keyValues</code> is null or contains null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The count of <code>keyValues</code> does not match the count of key members declared by the <code>entitySet</code>’s element type, or <code>keyValues</code> contains an expression with a result type that is not compatible with the type of the corresponding key member.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression[])\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression[])\n  id: CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression[])\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: CreateRef(EntitySet, DbExpression[])\n  nameWithType: DbExpressionBuilder.CreateRef(EntitySet, DbExpression[])\n  fullName: DbExpressionBuilder.CreateRef(EntitySet, DbExpression[])\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbRefExpression\"></xref> that encodes a reference to a specific entity based on key values.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbRefExpression CreateRef (this System.Data.Metadata.Edm.EntitySet entitySet, System.Data.Common.CommandTrees.DbExpression[] keyValues);\n    parameters:\n    - id: entitySet\n      type: System.Data.Metadata.Edm.EntitySet\n      description: The entity set in which the referenced element resides.\n    - id: keyValues\n      type: System.Data.Common.CommandTrees.DbExpression[]\n      description: A collection of <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref>s that provide the key values. These expressions must match (in number, type, and order) the key properties of the referenced entity type.\n    return:\n      type: System.Data.Common.CommandTrees.DbRefExpression\n      description: A new DbRefExpression that references the element with the specified key values in the given entity set.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>entitySet</code> is null, or <code>keyValues</code> is null or contains null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The count of <code>keyValues</code> does not match the count of key members declared by the <code>entitySet</code>’s element type, or <code>keyValues</code> contains an expression with a result type that is not compatible with the type of the corresponding key member.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})\n  id: CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: CreateRef(EntitySet, EntityType, IEnumerable<DbExpression>)\n  nameWithType: DbExpressionBuilder.CreateRef(EntitySet, EntityType, IEnumerable<DbExpression>)\n  fullName: DbExpressionBuilder.CreateRef(EntitySet, EntityType, IEnumerable<DbExpression>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbRefExpression\"></xref> that encodes a reference to a specific entity of a given type based on key values.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbRefExpression CreateRef (this System.Data.Metadata.Edm.EntitySet entitySet, System.Data.Metadata.Edm.EntityType entityType, System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpression> keyValues);\n    parameters:\n    - id: entitySet\n      type: System.Data.Metadata.Edm.EntitySet\n      description: The entity set in which the referenced element resides.\n    - id: entityType\n      type: System.Data.Metadata.Edm.EntityType\n      description: The specific type of the referenced entity. This must be an entity type from the same hierarchy as the entity set's element type.\n    - id: keyValues\n      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression}\n      description: A collection of <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref>s that provide the key values. These expressions must match (in number, type, and order) the key properties of the referenced entity type.\n    return:\n      type: System.Data.Common.CommandTrees.DbRefExpression\n      description: A new DbRefExpression that references the element with the specified key values in the given entity set.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>entitySet</code> or <code>entityType</code> is null, or <code>keyValues</code> is null or contains null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The count of <code>keyValues</code> does not match the count of key members declared by the <code>entitySet</code>’s element type, or <code>keyValues</code> contains an expression with a result type that is not compatible with the type of the corresponding key member.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Data.Common.CommandTrees.DbExpression[])\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Data.Common.CommandTrees.DbExpression[])\n  id: CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Data.Common.CommandTrees.DbExpression[])\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: CreateRef(EntitySet, EntityType, DbExpression[])\n  nameWithType: DbExpressionBuilder.CreateRef(EntitySet, EntityType, DbExpression[])\n  fullName: DbExpressionBuilder.CreateRef(EntitySet, EntityType, DbExpression[])\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbRefExpression\"></xref> that encodes a reference to a specific entity of a given type based on key values.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbRefExpression CreateRef (this System.Data.Metadata.Edm.EntitySet entitySet, System.Data.Metadata.Edm.EntityType entityType, System.Data.Common.CommandTrees.DbExpression[] keyValues);\n    parameters:\n    - id: entitySet\n      type: System.Data.Metadata.Edm.EntitySet\n      description: The entity set in which the referenced element resides.\n    - id: entityType\n      type: System.Data.Metadata.Edm.EntityType\n      description: The specific type of the referenced entity. This must be an entity type from the same hierarchy as the entity set's element type.\n    - id: keyValues\n      type: System.Data.Common.CommandTrees.DbExpression[]\n      description: A collection of <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref>s that provide the key values. These expressions must match (in number, type, and order) the key properties of the referenced entity type.\n    return:\n      type: System.Data.Common.CommandTrees.DbRefExpression\n      description: A new DbRefExpression that references the element with the specified key values in the given entity set.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>entitySet</code> or <code>entityType</code> is null, or <code>keyValues</code> is null or contains null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The count of <code>keyValues</code> does not match the count of key members declared by the <code>entitySet</code>’s element type, or <code>keyValues</code> contains an expression with a result type that is not compatible with the type of the corresponding key member.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})\n  id: CrossApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: CrossApply(DbExpression, Func<DbExpression,KeyValuePair<String,DbExpression>>)\n  nameWithType: DbExpressionBuilder.CrossApply(DbExpression, Func<DbExpression,KeyValuePair<String,DbExpression>>)\n  fullName: DbExpressionBuilder.CrossApply(DbExpression, Func<DbExpression,KeyValuePair<String,DbExpression>>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbApplyExpression\"></xref> that evaluates the given <code>apply</code> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns. Rows for which <code>apply</code> evaluates to an empty set are not included.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbApplyExpression CrossApply (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair<string,System.Data.Common.CommandTrees.DbExpression>> apply);\n    parameters:\n    - id: source\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that specifies the input set.\n    - id: apply\n      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}}\n      description: A method that specifies the logic to evaluate once for each member of the input set.\n    return:\n      type: System.Data.Common.CommandTrees.DbApplyExpression\n      description: An new DbApplyExpression with the specified input and apply bindings and an <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"></xref> of CrossApply.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The result of <code>apply</code> contains a name or expression that is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The result of <code>apply</code> contains a name or expression that is not valid in an expression binding.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)\n  id: CrossApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: CrossApply(DbExpressionBinding, DbExpressionBinding)\n  nameWithType: DbExpressionBuilder.CrossApply(DbExpressionBinding, DbExpressionBinding)\n  fullName: DbExpressionBuilder.CrossApply(DbExpressionBinding, DbExpressionBinding)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbApplyExpression\"></xref> that evaluates the given <code>apply</code> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns. Rows for which <code>apply</code> evaluates to an empty set are not included.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbApplyExpression CrossApply (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpressionBinding apply);\n    parameters:\n    - id: input\n      type: System.Data.Common.CommandTrees.DbExpressionBinding\n      description: An <xref href=\"System.Data.Common.CommandTrees.DbExpressionBinding\"></xref> that specifies the input set.\n    - id: apply\n      type: System.Data.Common.CommandTrees.DbExpressionBinding\n      description: An <xref href=\"System.Data.Common.CommandTrees.DbExpressionBinding\"></xref> that specifies logic to evaluate once for each member of the input set.\n    return:\n      type: System.Data.Common.CommandTrees.DbApplyExpression\n      description: An new DbApplyExpression with the specified input and apply bindings and an <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"></xref> of CrossApply.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>input</code> or <code>apply</code> is null.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossJoin(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpressionBinding})\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossJoin(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpressionBinding})\n  id: CrossJoin(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpressionBinding})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: CrossJoin(IEnumerable<DbExpressionBinding>)\n  nameWithType: DbExpressionBuilder.CrossJoin(IEnumerable<DbExpressionBinding>)\n  fullName: DbExpressionBuilder.CrossJoin(IEnumerable<DbExpressionBinding>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbCrossJoinExpression\"></xref> that unconditionally joins the sets specified by the list of input expression bindings.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbCrossJoinExpression CrossJoin (System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpressionBinding> inputs);\n    parameters:\n    - id: inputs\n      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpressionBinding}\n      description: A list of expression bindings that specifies the input sets.\n    return:\n      type: System.Data.Common.CommandTrees.DbCrossJoinExpression\n      description: A new DbCrossJoinExpression, with an <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"></xref> of CrossJoin, that represents the unconditional join of the input sets.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossJoin*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>inputs</code> is null or contains null element.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>inputs</code> contains fewer than 2 expression bindings.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref(System.Data.Common.CommandTrees.DbExpression)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref(System.Data.Common.CommandTrees.DbExpression)\n  id: Deref(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Deref(DbExpression)\n  nameWithType: DbExpressionBuilder.Deref(DbExpression)\n  fullName: DbExpressionBuilder.Deref(DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbDerefExpression\"></xref> that retrieves a specific Entity given a reference expression.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbDerefExpression Deref (this System.Data.Common.CommandTrees.DbExpression argument);\n    parameters:\n    - id: argument\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that provides the reference. This expression must have a reference Type.\n    return:\n      type: System.Data.Common.CommandTrees.DbDerefExpression\n      description: A new DbDerefExpression that retrieves the specified Entity.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>argument</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>argument</code> does not have a reference result type.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Distinct(System.Data.Common.CommandTrees.DbExpression)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Distinct(System.Data.Common.CommandTrees.DbExpression)\n  id: Distinct(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Distinct(DbExpression)\n  nameWithType: DbExpressionBuilder.Distinct(DbExpression)\n  fullName: DbExpressionBuilder.Distinct(DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbDistinctExpression\"></xref> that removes duplicates from the given set argument.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbDistinctExpression Distinct (this System.Data.Common.CommandTrees.DbExpression argument);\n    parameters:\n    - id: argument\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression that defines the set over which to perfom the distinct operation.\n    return:\n      type: System.Data.Common.CommandTrees.DbDistinctExpression\n      description: A new DbDistinctExpression that represents the distinct operation applied to the specified set argument.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Distinct*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>argument</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>argument</code> does not have a collection result type.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  id: Divide(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Divide(DbExpression, DbExpression)\n  nameWithType: DbExpressionBuilder.Divide(DbExpression, DbExpression)\n  fullName: DbExpressionBuilder.Divide(DbExpression, DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbArithmeticExpression\"></xref> that divides the left argument by the right argument.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbArithmeticExpression Divide (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);\n    parameters:\n    - id: left\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression that specifies the left argument.\n    - id: right\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression that specifies the right argument.\n    return:\n      type: System.Data.Common.CommandTrees.DbArithmeticExpression\n      description: A new DbArithmeticExpression representing the division operation.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>left</code> or <code>right</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: No common numeric result type exists between <code>left</code> or <code>right</code>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Element(System.Data.Common.CommandTrees.DbExpression)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Element(System.Data.Common.CommandTrees.DbExpression)\n  id: Element(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Element(DbExpression)\n  nameWithType: DbExpressionBuilder.Element(DbExpression)\n  fullName: DbExpressionBuilder.Element(DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbElementExpression\"></xref> that converts a set into a singleton.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbElementExpression Element (this System.Data.Common.CommandTrees.DbExpression argument);\n    parameters:\n    - id: argument\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression that specifies the input set.\n    return:\n      type: System.Data.Common.CommandTrees.DbElementExpression\n      description: A DbElementExpression that represents the conversion of the set argument to a singleton.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Element*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>argument</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>argument</code> does not have a collection result type.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  id: Equal(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Equal(DbExpression, DbExpression)\n  nameWithType: DbExpressionBuilder.Equal(DbExpression, DbExpression)\n  fullName: DbExpressionBuilder.Equal(DbExpression, DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbComparisonExpression\"></xref> that compares the left and right arguments for equality.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbComparisonExpression Equal (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);\n    parameters:\n    - id: left\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression that specifies the left argument.\n    - id: right\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression that specifies the right argument.\n    return:\n      type: System.Data.Common.CommandTrees.DbComparisonExpression\n      description: A new DbComparisonExpression representing the equality comparison.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>left</code> or <code>right</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: No common equality-comparable result type exists between <code>left</code> and <code>right</code>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  id: Except(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Except(DbExpression, DbExpression)\n  nameWithType: DbExpressionBuilder.Except(DbExpression, DbExpression)\n  fullName: DbExpressionBuilder.Except(DbExpression, DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbExceptExpression\"></xref> that computes the subtraction of the right set argument from the left set argument.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbExceptExpression Except (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);\n    parameters:\n    - id: left\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression that defines the left set argument.\n    - id: right\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression that defines the right set argument.\n    return:\n      type: System.Data.Common.CommandTrees.DbExceptExpression\n      description: A new DbExceptExpression that represents the difference of the left argument from the right argument.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>left</code> or <code>right</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: No common collection result type exists between <code>left</code> and <code>right</code>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Exists(System.Data.Common.CommandTrees.DbExpression)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Exists(System.Data.Common.CommandTrees.DbExpression)\n  id: Exists(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Exists(DbExpression)\n  nameWithType: DbExpressionBuilder.Exists(DbExpression)\n  fullName: DbExpressionBuilder.Exists(DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that determines whether the specified set argument is non-empty.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbExpression Exists (this System.Data.Common.CommandTrees.DbExpression argument);\n    parameters:\n    - id: argument\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression that specifies the input set.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: A new <xref href=\"System.Data.Common.CommandTrees.DbNotExpression\"></xref> applied to a new <xref href=\"System.Data.Common.CommandTrees.DbIsEmptyExpression\"></xref> with the specified argument.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Exists*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>argument</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>argument</code> does not have a collection result type.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.False\n  commentId: P:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.False\n  id: \"False\"\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: \"False\"\n  nameWithType: DbExpressionBuilder.False\n  fullName: DbExpressionBuilder.False\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Gets a <xref href=\"System.Data.Common.CommandTrees.DbConstantExpression\"></xref> with the Boolean value `false`.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbConstantExpression False { get; }\n    return:\n      type: System.Data.Common.CommandTrees.DbConstantExpression\n      description: A <xref href=\"System.Data.Common.CommandTrees.DbConstantExpression\"></xref> with the Boolean value `false`.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.False*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)\n  id: Filter(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Filter(DbExpressionBinding, DbExpression)\n  nameWithType: DbExpressionBuilder.Filter(DbExpressionBinding, DbExpression)\n  fullName: DbExpressionBuilder.Filter(DbExpressionBinding, DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbFilterExpression\"></xref> that filters the elements in the given input set using the specified predicate.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbFilterExpression Filter (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpression predicate);\n    parameters:\n    - id: input\n      type: System.Data.Common.CommandTrees.DbExpressionBinding\n      description: An expression binding that specifies the input set.\n    - id: predicate\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression representing a predicate to evaluate for each member of the input set.\n    return:\n      type: System.Data.Common.CommandTrees.DbFilterExpression\n      description: A new DbFilterExpression that produces the filtered set.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>input</code> or <code>predicate</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>predicate</code> does not have a Boolean result type.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  id: FullOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: FullOuterJoin(DbExpression, DbExpression, Func<DbExpression,DbExpression,DbExpression>)\n  nameWithType: DbExpressionBuilder.FullOuterJoin(DbExpression, DbExpression, Func<DbExpression,DbExpression,DbExpression>)\n  fullName: DbExpressionBuilder.FullOuterJoin(DbExpression, DbExpression, Func<DbExpression,DbExpression,DbExpression>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbJoinExpression\"></xref> that joins the sets specified by the left and right expressions, on the specified join condition, using FullOuterJoin as the <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"></xref>.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbJoinExpression FullOuterJoin (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> joinCondition);\n    parameters:\n    - id: left\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that specifies the left set argument.\n    - id: right\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that specifies the right set argument.\n    - id: joinCondition\n      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}\n      description: A method representing the condition on which to join. This method must produce an expression with a Boolean result type that provides the logic of the join condition.\n    return:\n      type: System.Data.Common.CommandTrees.DbJoinExpression\n      description: A new DbJoinExpression, with an <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"></xref> of FullOuterJoin, that represents the full outer join operation applied to the left and right input sets under the given join condition.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The expression produced by <code>joinCondition</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The expression produced by <code>joinCondition</code> does not have a Boolean result type.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)\n  id: FullOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: FullOuterJoin(DbExpressionBinding, DbExpressionBinding, DbExpression)\n  nameWithType: DbExpressionBuilder.FullOuterJoin(DbExpressionBinding, DbExpressionBinding, DbExpression)\n  fullName: DbExpressionBuilder.FullOuterJoin(DbExpressionBinding, DbExpressionBinding, DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbJoinExpression\"></xref> that joins the sets specified by the left and right expression bindings, on the specified join condition, using FullOuterJoin as the <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"></xref>.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbJoinExpression FullOuterJoin (this System.Data.Common.CommandTrees.DbExpressionBinding left, System.Data.Common.CommandTrees.DbExpressionBinding right, System.Data.Common.CommandTrees.DbExpression joinCondition);\n    parameters:\n    - id: left\n      type: System.Data.Common.CommandTrees.DbExpressionBinding\n      description: An <xref href=\"System.Data.Common.CommandTrees.DbExpressionBinding\"></xref> that specifies the left set argument.\n    - id: right\n      type: System.Data.Common.CommandTrees.DbExpressionBinding\n      description: An <xref href=\"System.Data.Common.CommandTrees.DbExpressionBinding\"></xref> that specifies the right set argument.\n    - id: joinCondition\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression that specifies the condition on which to join.\n    return:\n      type: System.Data.Common.CommandTrees.DbJoinExpression\n      description: A new DbJoinExpression, with an <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"></xref> of FullOuterJoin, that represents the full outer join operation applied to the left and right     input sets under the given join condition.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>left</code>,  <code>right</code> or <code>joinCondition</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The expression produced by <code>joinCondition</code> does not have a Boolean result type.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef(System.Data.Common.CommandTrees.DbExpression)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef(System.Data.Common.CommandTrees.DbExpression)\n  id: GetEntityRef(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: GetEntityRef(DbExpression)\n  nameWithType: DbExpressionBuilder.GetEntityRef(DbExpression)\n  fullName: DbExpressionBuilder.GetEntityRef(DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbEntityRefExpression\"></xref> that retrieves the ref of the specifed entity in structural form.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbEntityRefExpression GetEntityRef (this System.Data.Common.CommandTrees.DbExpression argument);\n    parameters:\n    - id: argument\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: The expression that provides the entity. This expression must have an entity result type.\n    return:\n      type: System.Data.Common.CommandTrees.DbEntityRefExpression\n      description: A new DbEntityRefExpression that retrieves a reference to the specified entity.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>argument</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>argument</code> does not have an entity result type.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey(System.Data.Common.CommandTrees.DbExpression)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey(System.Data.Common.CommandTrees.DbExpression)\n  id: GetRefKey(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: GetRefKey(DbExpression)\n  nameWithType: DbExpressionBuilder.GetRefKey(DbExpression)\n  fullName: DbExpressionBuilder.GetRefKey(DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbRefKeyExpression\"></xref> that retrieves the key values of the specifed reference in structural form.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbRefKeyExpression GetRefKey (this System.Data.Common.CommandTrees.DbExpression argument);\n    parameters:\n    - id: argument\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: The expression that provides the reference. This expression must have a reference Type with an Entity element type.\n    return:\n      type: System.Data.Common.CommandTrees.DbRefKeyExpression\n      description: A new DbRefKeyExpression that retrieves the key values of the specified reference.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>argument</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>argument</code> does not have a reference result type.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  id: GreaterThan(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: GreaterThan(DbExpression, DbExpression)\n  nameWithType: DbExpressionBuilder.GreaterThan(DbExpression, DbExpression)\n  fullName: DbExpressionBuilder.GreaterThan(DbExpression, DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbComparisonExpression\"></xref> that determines whether the left argument is greater than the right argument.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbComparisonExpression GreaterThan (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);\n    parameters:\n    - id: left\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression that specifies the left argument.\n    - id: right\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression that specifies the right argument.\n    return:\n      type: System.Data.Common.CommandTrees.DbComparisonExpression\n      description: A new DbComparisonExpression representing the greater-than comparison.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>left</code> or <code>right</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: No common order-comparable result type exists between <code>left</code> and <code>right</code>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  id: GreaterThanOrEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: GreaterThanOrEqual(DbExpression, DbExpression)\n  nameWithType: DbExpressionBuilder.GreaterThanOrEqual(DbExpression, DbExpression)\n  fullName: DbExpressionBuilder.GreaterThanOrEqual(DbExpression, DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbComparisonExpression\"></xref> that determines whether the left argument is greater than or equal to the right argument.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbComparisonExpression GreaterThanOrEqual (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);\n    parameters:\n    - id: left\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression that specifies the left argument.\n    - id: right\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression that specifies the right argument.\n    return:\n      type: System.Data.Common.CommandTrees.DbComparisonExpression\n      description: A new DbComparisonExpression representing the greater-than-or-equal-to comparison.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>left</code> or <code>right</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: No common order-comparable result type exists between <code>left</code> and <code>right</code>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBind(System.Data.Common.CommandTrees.DbExpression)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBind(System.Data.Common.CommandTrees.DbExpression)\n  id: GroupBind(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: GroupBind(DbExpression)\n  nameWithType: DbExpressionBuilder.GroupBind(DbExpression)\n  fullName: DbExpressionBuilder.GroupBind(DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new group expression binding that uses generated variable and group variable names to bind the given expression.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbGroupExpressionBinding GroupBind (this System.Data.Common.CommandTrees.DbExpression input);\n    parameters:\n    - id: input\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: The expression to bind.\n    return:\n      type: System.Data.Common.CommandTrees.DbGroupExpressionBinding\n      description: A new group expression binding with the specified expression and a generated variable name and group variable name.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBind*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>input</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>input</code> does not have a collection result type.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs(System.Data.Common.CommandTrees.DbExpression,System.String,System.String)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs(System.Data.Common.CommandTrees.DbExpression,System.String,System.String)\n  id: GroupBindAs(System.Data.Common.CommandTrees.DbExpression,System.String,System.String)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: GroupBindAs(DbExpression, String, String)\n  nameWithType: DbExpressionBuilder.GroupBindAs(DbExpression, String, String)\n  fullName: DbExpressionBuilder.GroupBindAs(DbExpression, String, String)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbGroupExpressionBinding\"></xref> that uses the specified variable name and group variable names to bind the given expression.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbGroupExpressionBinding GroupBindAs (this System.Data.Common.CommandTrees.DbExpression input, string varName, string groupVarName);\n    parameters:\n    - id: input\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: The expression to bind.\n    - id: varName\n      type: System.String\n      description: The variable name that should be used for the binding.\n    - id: groupVarName\n      type: System.String\n      description: The variable name that should be used to refer to the group when the new group expression binding is used in a group-by expression.\n    return:\n      type: System.Data.Common.CommandTrees.DbGroupExpressionBinding\n      description: A new group expression binding with the specified expression, variable name and group variable name.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>input</code>,  <code>varName</code> or <code>groupVarName</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>input</code> does not have a collection result type.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy(System.Data.Common.CommandTrees.DbGroupExpressionBinding,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}})\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy(System.Data.Common.CommandTrees.DbGroupExpressionBinding,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}})\n  id: GroupBy(System.Data.Common.CommandTrees.DbGroupExpressionBinding,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: GroupBy(DbGroupExpressionBinding, IEnumerable<KeyValuePair<String,DbExpression>>, IEnumerable<KeyValuePair<String,DbAggregate>>)\n  nameWithType: DbExpressionBuilder.GroupBy(DbGroupExpressionBinding, IEnumerable<KeyValuePair<String,DbExpression>>, IEnumerable<KeyValuePair<String,DbAggregate>>)\n  fullName: DbExpressionBuilder.GroupBy(DbGroupExpressionBinding, IEnumerable<KeyValuePair<String,DbExpression>>, IEnumerable<KeyValuePair<String,DbAggregate>>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbGroupByExpression\"></xref> that groups the elements of the input set according to the specified group keys and applies the given aggregates.\n  remarks: DbGroupByExpression allows either the list of keys or the list of aggregates to be empty, but not both.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbGroupByExpression GroupBy (this System.Data.Common.CommandTrees.DbGroupExpressionBinding input, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,System.Data.Common.CommandTrees.DbExpression>> keys, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,System.Data.Common.CommandTrees.DbAggregate>> aggregates);\n    parameters:\n    - id: input\n      type: System.Data.Common.CommandTrees.DbGroupExpressionBinding\n      description: A <xref href=\"System.Data.Common.CommandTrees.DbGroupExpressionBinding\"></xref> that specifies the input set.\n    - id: keys\n      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}}\n      description: A list of string-expression pairs that define the grouping columns.\n    - id: aggregates\n      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}}\n      description: A list of expressions that specify aggregates to apply.\n    return:\n      type: System.Data.Common.CommandTrees.DbGroupByExpression\n      description: A new DbGroupByExpression with the specified input set, grouping keys and aggregates.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>input</code>,  <code>keys</code> or <code>aggregates</code> is null,  <code>keys</code> contains a null column key or expression, or <code>aggregates</code> contains a null aggregate column name or aggregate.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: Both <code>keys</code> and <code>aggregates</code> are empty, or an invalid or duplicate column name was specified.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  id: InnerJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: InnerJoin(DbExpression, DbExpression, Func<DbExpression,DbExpression,DbExpression>)\n  nameWithType: DbExpressionBuilder.InnerJoin(DbExpression, DbExpression, Func<DbExpression,DbExpression,DbExpression>)\n  fullName: DbExpressionBuilder.InnerJoin(DbExpression, DbExpression, Func<DbExpression,DbExpression,DbExpression>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbJoinExpression\"></xref> that joins the sets specified by the left and right expressions, on the specified join condition, using InnerJoin as the <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"></xref>.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbJoinExpression InnerJoin (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> joinCondition);\n    parameters:\n    - id: left\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that specifies the left set argument.\n    - id: right\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that specifies the right set argument.\n    - id: joinCondition\n      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}\n      description: A method representing the condition on which to join. This method must produce an expression with a Boolean result type that provides the logic of the join condition.\n    return:\n      type: System.Data.Common.CommandTrees.DbJoinExpression\n      description: A new DbJoinExpression, with an <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"></xref> of InnerJoin, that represents the inner join operation applied to the left and right input sets under the given join condition.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The expression produced by <code>joinCondition</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The expression produced by <code>joinCondition</code> does not have a Boolean result type.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)\n  id: InnerJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: InnerJoin(DbExpressionBinding, DbExpressionBinding, DbExpression)\n  nameWithType: DbExpressionBuilder.InnerJoin(DbExpressionBinding, DbExpressionBinding, DbExpression)\n  fullName: DbExpressionBuilder.InnerJoin(DbExpressionBinding, DbExpressionBinding, DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbJoinExpression\"></xref> that joins the sets specified by the left and right expression bindings, on the specified join condition, using InnerJoin as the <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"></xref>.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbJoinExpression InnerJoin (this System.Data.Common.CommandTrees.DbExpressionBinding left, System.Data.Common.CommandTrees.DbExpressionBinding right, System.Data.Common.CommandTrees.DbExpression joinCondition);\n    parameters:\n    - id: left\n      type: System.Data.Common.CommandTrees.DbExpressionBinding\n      description: An <xref href=\"System.Data.Common.CommandTrees.DbExpressionBinding\"></xref> that specifies the left set argument.\n    - id: right\n      type: System.Data.Common.CommandTrees.DbExpressionBinding\n      description: An <xref href=\"System.Data.Common.CommandTrees.DbExpressionBinding\"></xref> that specifies the right set argument.\n    - id: joinCondition\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression that specifies the condition on which to join.\n    return:\n      type: System.Data.Common.CommandTrees.DbJoinExpression\n      description: A new DbJoinExpression, with an <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"></xref> of InnerJoin, that represents the inner join operation applied to the left and right     input sets under the given join condition.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>left</code>,  <code>right</code> or <code>joinCondition</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>joinCondition</code> does not have a Boolean result type.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  id: Intersect(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Intersect(DbExpression, DbExpression)\n  nameWithType: DbExpressionBuilder.Intersect(DbExpression, DbExpression)\n  fullName: DbExpressionBuilder.Intersect(DbExpression, DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbIntersectExpression\"></xref> that computes the intersection of the left and right set arguments.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbIntersectExpression Intersect (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);\n    parameters:\n    - id: left\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression that defines the left set argument.\n    - id: right\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression that defines the right set argument.\n    return:\n      type: System.Data.Common.CommandTrees.DbIntersectExpression\n      description: A new DbIntersectExpression that represents the intersection of the left and right arguments.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>left</code> or <code>right</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: No common collection result type exists between <code>left</code> or <code>right</code>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression[])\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression[])\n  id: Invoke(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression[])\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Invoke(EdmFunction, DbExpression[])\n  nameWithType: DbExpressionBuilder.Invoke(EdmFunction, DbExpression[])\n  fullName: DbExpressionBuilder.Invoke(EdmFunction, DbExpression[])\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbFunctionExpression\"></xref> representing the invocation of the specified function with the given arguments.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbFunctionExpression Invoke (this System.Data.Metadata.Edm.EdmFunction function, System.Data.Common.CommandTrees.DbExpression[] arguments);\n    parameters:\n    - id: function\n      type: System.Data.Metadata.Edm.EdmFunction\n      description: Metadata for the function to invoke.\n    - id: arguments\n      type: System.Data.Common.CommandTrees.DbExpression[]\n      description: Expressions that provide the arguments to the function.\n    return:\n      type: System.Data.Common.CommandTrees.DbFunctionExpression\n      description: A new DbFunctionExpression representing the function invocation.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>function</code> is null, or <code>arguments</code> is null or contains null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The count of <code>arguments</code> does not equal the number of parameters declared by <code>function</code>, or <code>arguments</code> contains an expression that has a result type that is not equal or promotable to the corresponding function parameter type.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})\n  id: Invoke(System.Data.Metadata.Edm.EdmFunction,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Invoke(EdmFunction, IEnumerable<DbExpression>)\n  nameWithType: DbExpressionBuilder.Invoke(EdmFunction, IEnumerable<DbExpression>)\n  fullName: DbExpressionBuilder.Invoke(EdmFunction, IEnumerable<DbExpression>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbFunctionExpression\"></xref> representing the invocation of the specified function with the given arguments.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbFunctionExpression Invoke (this System.Data.Metadata.Edm.EdmFunction function, System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpression> arguments);\n    parameters:\n    - id: function\n      type: System.Data.Metadata.Edm.EdmFunction\n      description: Metadata for the function to invoke.\n    - id: arguments\n      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression}\n      description: A list of expressions that provide the arguments to the function.\n    return:\n      type: System.Data.Common.CommandTrees.DbFunctionExpression\n      description: A new DbFunctionExpression representing the function invocation.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>function</code> is null, or <code>arguments</code> is null or contains null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The count of <code>arguments</code> does not equal the number of parameters declared by <code>function</code>, or <code>arguments</code> contains an expression that has a result type that is not equal or promotable to the corresponding function parameter type.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})\n  id: Invoke(System.Data.Common.CommandTrees.DbLambda,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Invoke(DbLambda, IEnumerable<DbExpression>)\n  nameWithType: DbExpressionBuilder.Invoke(DbLambda, IEnumerable<DbExpression>)\n  fullName: DbExpressionBuilder.Invoke(DbLambda, IEnumerable<DbExpression>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbLambdaExpression\"></xref> representing the application of the specified Lambda function to the given arguments.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbLambdaExpression Invoke (this System.Data.Common.CommandTrees.DbLambda lambda, System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpression> arguments);\n    parameters:\n    - id: lambda\n      type: System.Data.Common.CommandTrees.DbLambda\n      description: A <xref href=\"System.Data.Common.CommandTrees.DbLambda\"></xref> instance representing the Lambda function to apply.\n    - id: arguments\n      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression}\n      description: A list of expressions that provide the arguments.\n    return:\n      type: System.Data.Common.CommandTrees.DbLambdaExpression\n      description: A new DbLambdaExpression representing the Lambda function application.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>lambda</code> or <code>arguments</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The count of <code>arguments</code> does not equal the number of variables declared by <code>lambda</code>, or <code>arguments</code> contains an expression that has a result type that is not equal or promotable to the corresponding variable type.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda,System.Data.Common.CommandTrees.DbExpression[])\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda,System.Data.Common.CommandTrees.DbExpression[])\n  id: Invoke(System.Data.Common.CommandTrees.DbLambda,System.Data.Common.CommandTrees.DbExpression[])\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Invoke(DbLambda, DbExpression[])\n  nameWithType: DbExpressionBuilder.Invoke(DbLambda, DbExpression[])\n  fullName: DbExpressionBuilder.Invoke(DbLambda, DbExpression[])\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbLambdaExpression\"></xref> representing the application of the specified Lambda function to the given arguments.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbLambdaExpression Invoke (this System.Data.Common.CommandTrees.DbLambda lambda, System.Data.Common.CommandTrees.DbExpression[] arguments);\n    parameters:\n    - id: lambda\n      type: System.Data.Common.CommandTrees.DbLambda\n      description: A <xref href=\"System.Data.Common.CommandTrees.DbLambda\"></xref> instance representing the Lambda function to apply.\n    - id: arguments\n      type: System.Data.Common.CommandTrees.DbExpression[]\n      description: Expressions that provide the arguments.\n    return:\n      type: System.Data.Common.CommandTrees.DbLambdaExpression\n      description: A new DbLambdaExpression representing the Lambda function application.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>lambda</code> or <code>arguments</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The count of <code>arguments</code> does not equal the number of variables declared by <code>lambda</code>, or <code>arguments</code> contains an expression that has a result type that is not equal or promotable to the corresponding variable type.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsEmpty(System.Data.Common.CommandTrees.DbExpression)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsEmpty(System.Data.Common.CommandTrees.DbExpression)\n  id: IsEmpty(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: IsEmpty(DbExpression)\n  nameWithType: DbExpressionBuilder.IsEmpty(DbExpression)\n  fullName: DbExpressionBuilder.IsEmpty(DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbIsEmptyExpression\"></xref> that determines whether the specified set argument is an empty set.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbIsEmptyExpression IsEmpty (this System.Data.Common.CommandTrees.DbExpression argument);\n    parameters:\n    - id: argument\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression that specifies the input set.\n    return:\n      type: System.Data.Common.CommandTrees.DbIsEmptyExpression\n      description: A new DbIsEmptyExpression with the specified argument.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsEmpty*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>argument</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>argument</code> does not have a collection result type.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsNull(System.Data.Common.CommandTrees.DbExpression)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsNull(System.Data.Common.CommandTrees.DbExpression)\n  id: IsNull(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: IsNull(DbExpression)\n  nameWithType: DbExpressionBuilder.IsNull(DbExpression)\n  fullName: DbExpressionBuilder.IsNull(DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbIsNullExpression\"></xref> that determines whether the specified argument is null.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbIsNullExpression IsNull (this System.Data.Common.CommandTrees.DbExpression argument);\n    parameters:\n    - id: argument\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression that specifies the argument.\n    return:\n      type: System.Data.Common.CommandTrees.DbIsNullExpression\n      description: A new DbIsNullExpression with the specified argument.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsNull*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>argument</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>argument</code> has a collection result type.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)\n  id: IsOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: IsOf(DbExpression, TypeUsage)\n  nameWithType: DbExpressionBuilder.IsOf(DbExpression, TypeUsage)\n  fullName: DbExpressionBuilder.IsOf(DbExpression, TypeUsage)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbIsOfExpression\"></xref> that determines whether the given argument is of the specified type or a subtype.\n  remarks: DbIsOfExpression requires that `argument` has a polymorphic result type, and that `type` is a type from the same type hierarchy as that result type.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbIsOfExpression IsOf (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage type);\n    parameters:\n    - id: argument\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression that specifies the instance.\n    - id: type\n      type: System.Data.Metadata.Edm.TypeUsage\n      description: Type metadata that specifies the type that the instance's result type should be compared to.\n    return:\n      type: System.Data.Common.CommandTrees.DbIsOfExpression\n      description: A new DbIsOfExpression with the specified instance and type and DbExpressionKind IsOf.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>argument</code> or <code>type</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>type</code> is not in the same type hierarchy as the result type of <code>argument</code>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)\n  id: IsOfOnly(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: IsOfOnly(DbExpression, TypeUsage)\n  nameWithType: DbExpressionBuilder.IsOfOnly(DbExpression, TypeUsage)\n  fullName: DbExpressionBuilder.IsOfOnly(DbExpression, TypeUsage)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbIsOfExpression\"></xref> expression that determines whether the given argument is of the specified type, and only that type (not a subtype).\n  remarks: DbIsOfExpression requires that `argument` has a polymorphic result type, and that `type` is a type from the same type hierarchy as that result type.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbIsOfExpression IsOfOnly (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage type);\n    parameters:\n    - id: argument\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression that specifies the instance.\n    - id: type\n      type: System.Data.Metadata.Edm.TypeUsage\n      description: Type metadata that specifies the type that the instance's result type should be compared to.\n    return:\n      type: System.Data.Common.CommandTrees.DbIsOfExpression\n      description: A new DbIsOfExpression with the specified instance and type and DbExpressionKind IsOfOnly.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>argument</code> or <code>type</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>type</code> is not in the same type hierarchy as the result type of <code>argument</code>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  id: Join(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Join(DbExpression, DbExpression, Func<DbExpression,DbExpression>, Func<DbExpression,DbExpression>)\n  nameWithType: DbExpressionBuilder.Join(DbExpression, DbExpression, Func<DbExpression,DbExpression>, Func<DbExpression,DbExpression>)\n  fullName: DbExpressionBuilder.Join(DbExpression, DbExpression, Func<DbExpression,DbExpression>, Func<DbExpression,DbExpression>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbJoinExpression\"></xref> that joins the sets specified by the outer and inner expressions, on an equality condition between the specified outer and inner keys, using InnerJoin as the <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"></xref>.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbJoinExpression Join (this System.Data.Common.CommandTrees.DbExpression outer, System.Data.Common.CommandTrees.DbExpression inner, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> outerKey, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> innerKey);\n    parameters:\n    - id: outer\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that specifies the outer set argument.\n    - id: inner\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that specifies the inner set argument.\n    - id: outerKey\n      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}\n      description: A method that specifies how the outer key value should be derived from an element of the outer set.\n    - id: innerKey\n      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}\n      description: A method that specifies how the inner key value should be derived from an element of the inner set.\n    return:\n      type: System.Data.Common.CommandTrees.DbJoinExpression\n      description: A new DbJoinExpression, with an <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"></xref> of InnerJoin, that represents the inner join operation applied to the left and right input sets under a join condition that compares the outer and inner key values for equality.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The expression produced by <code>outerKey</code> or <code>innerKey</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The expressions produced by <code>outerKey</code> and <code>innerKey</code> are not comparable for equality.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})\n  id: Join``1(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Join<TSelector>(DbExpression, DbExpression, Func<DbExpression,DbExpression>, Func<DbExpression,DbExpression>, Func<DbExpression,DbExpression,TSelector>)\n  nameWithType: DbExpressionBuilder.Join<TSelector>(DbExpression, DbExpression, Func<DbExpression,DbExpression>, Func<DbExpression,DbExpression>, Func<DbExpression,DbExpression,TSelector>)\n  fullName: DbExpressionBuilder.Join<TSelector>(DbExpression, DbExpression, Func<DbExpression,DbExpression>, Func<DbExpression,DbExpression>, Func<DbExpression,DbExpression,TSelector>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbProjectExpression\"></xref> that projects the specified selector over the sets specified by the outer and inner expressions, joined on an equality condition between the specified outer and inner keys, using InnerJoin as the <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"></xref>.\n  remarks: \"To be compatible with Join, `TSelector` must be derived from <xref:System.Data.Common.CommandTrees.DbExpression>,     or must be an anonymous type with DbExpression-derived properties. The following are examples of supported types for `TSelector`:  \\n  \\n```  \\nouter.Join(inner, o => o.Property(\\\"ID\\\"), i => i.Property(\\\"ID\\\"), (o, i) => o.Property(\\\"Name\\\"))  \\n```  \\n  \\n (`TSelector` is <xref:System.Data.Common.CommandTrees.DbPropertyExpression>).  \\n  \\n```  \\nouter.Join(inner, o => o.Property(\\\"ID\\\"), i => i.Property(\\\"ID\\\"), (o, i) => new { OName = o.Property(\\\"Name\\\"), IName = i.Property(\\\"Name\\\") })  \\n```  \\n  \\n (`TSelector` is an anonymous type with DbExpression-derived properties).\"\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbProjectExpression Join<TSelector> (this System.Data.Common.CommandTrees.DbExpression outer, System.Data.Common.CommandTrees.DbExpression inner, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> outerKey, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> innerKey, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector> selector);\n    parameters:\n    - id: outer\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that specifies the outer set argument.\n    - id: inner\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that specifies the inner set argument.\n    - id: outerKey\n      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}\n      description: A method that specifies how the outer key value should be derived from an element of the outer set.\n    - id: innerKey\n      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}\n      description: A method that specifies how the inner key value should be derived from an element of the inner set.\n    - id: selector\n      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector}\n      description: A method that specifies how an element of the result set should be derived from elements of the inner and outer sets. This method must produce an instance of a type that is compatible with Join and can be resolved into a <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref>. Compatibility requirements for <code>TSelector</code> are described in remarks.\n    typeParameters:\n    - id: TSelector\n      description: The type of the <code>selector</code>.\n    return:\n      type: System.Data.Common.CommandTrees.DbProjectExpression\n      description: A new DbProjectExpression with the specified selector as its projection, and a new DbJoinExpression as its input. The input DbJoinExpression is created with an <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"></xref> of InnerJoin, that represents the inner join operation applied to the left and right input sets under a join condition that compares the outer and inner key values for equality.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The result of <code>selector</code> is null after conversion to DbExpression.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The result of <code>Selector</code> is not compatible with SelectMany.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression})\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression})\n  id: Lambda(System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Lambda(DbExpression, IEnumerable<DbVariableReferenceExpression>)\n  nameWithType: DbExpressionBuilder.Lambda(DbExpression, IEnumerable<DbVariableReferenceExpression>)\n  fullName: DbExpressionBuilder.Lambda(DbExpression, IEnumerable<DbVariableReferenceExpression>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a <xref href=\"System.Data.Common.CommandTrees.DbLambda\"></xref> with the specified inline Lambda function implementation and formal parameters.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbLambda Lambda (System.Data.Common.CommandTrees.DbExpression body, System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbVariableReferenceExpression> variables);\n    parameters:\n    - id: body\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression that defines the logic of the Lambda function.\n    - id: variables\n      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression}\n      description: A <xref href=\"System.Data.Common.CommandTrees.DbVariableReferenceExpression\"></xref> collection that represents the formal parameters to the Lambda function. These variables are valid for use in the <code>body</code> expression.\n    return:\n      type: System.Data.Common.CommandTrees.DbLambda\n      description: A new DbLambda that describes an inline Lambda function with the specified body and formal parameters.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>variables</code> is null or contains null, or <code>body</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>variables</code> contains more than one element with the same variable name.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbVariableReferenceExpression[])\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbVariableReferenceExpression[])\n  id: Lambda(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbVariableReferenceExpression[])\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Lambda(DbExpression, DbVariableReferenceExpression[])\n  nameWithType: DbExpressionBuilder.Lambda(DbExpression, DbVariableReferenceExpression[])\n  fullName: DbExpressionBuilder.Lambda(DbExpression, DbVariableReferenceExpression[])\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a <xref href=\"System.Data.Common.CommandTrees.DbLambda\"></xref> with the specified inline Lambda function implementation and formal parameters.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbLambda Lambda (System.Data.Common.CommandTrees.DbExpression body, System.Data.Common.CommandTrees.DbVariableReferenceExpression[] variables);\n    parameters:\n    - id: body\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression that defines the logic of the Lambda function.\n    - id: variables\n      type: System.Data.Common.CommandTrees.DbVariableReferenceExpression[]\n      description: A <xref href=\"System.Data.Common.CommandTrees.DbVariableReferenceExpression\"></xref> collection that represents the formal parameters to the Lambda function. These variables are valid for use in the <code>body</code> expression.\n    return:\n      type: System.Data.Common.CommandTrees.DbLambda\n      description: A new DbLambda that describes an inline Lambda function with the specified body and formal parameters.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>variables</code> is null or contains null, or <code>body</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>variables</code> contains more than one element with the same variable name.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)\n  id: LeftOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: LeftOuterJoin(DbExpressionBinding, DbExpressionBinding, DbExpression)\n  nameWithType: DbExpressionBuilder.LeftOuterJoin(DbExpressionBinding, DbExpressionBinding, DbExpression)\n  fullName: DbExpressionBuilder.LeftOuterJoin(DbExpressionBinding, DbExpressionBinding, DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbJoinExpression\"></xref> that joins the sets specified by the left and right expression bindings, on the specified join condition, using LeftOuterJoin as the <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"></xref>.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbJoinExpression LeftOuterJoin (this System.Data.Common.CommandTrees.DbExpressionBinding left, System.Data.Common.CommandTrees.DbExpressionBinding right, System.Data.Common.CommandTrees.DbExpression joinCondition);\n    parameters:\n    - id: left\n      type: System.Data.Common.CommandTrees.DbExpressionBinding\n      description: An <xref href=\"System.Data.Common.CommandTrees.DbExpressionBinding\"></xref> that specifies the left set argument.\n    - id: right\n      type: System.Data.Common.CommandTrees.DbExpressionBinding\n      description: An <xref href=\"System.Data.Common.CommandTrees.DbExpressionBinding\"></xref> that specifies the right set argument.\n    - id: joinCondition\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression that specifies the condition on which to join.\n    return:\n      type: System.Data.Common.CommandTrees.DbJoinExpression\n      description: A new DbJoinExpression, with an <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"></xref> of LeftOuterJoin, that represents the left outer join operation applied to the left and right     input sets under the given join condition.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>left</code>,  <code>right</code> or <code>joinCondition</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>joinCondition</code> does not have a Boolean result type.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  id: LeftOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: LeftOuterJoin(DbExpression, DbExpression, Func<DbExpression,DbExpression,DbExpression>)\n  nameWithType: DbExpressionBuilder.LeftOuterJoin(DbExpression, DbExpression, Func<DbExpression,DbExpression,DbExpression>)\n  fullName: DbExpressionBuilder.LeftOuterJoin(DbExpression, DbExpression, Func<DbExpression,DbExpression,DbExpression>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbJoinExpression\"></xref> that joins the sets specified by the left and right expressions, on the specified join condition, using LeftOuterJoin as the <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"></xref>.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbJoinExpression LeftOuterJoin (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> joinCondition);\n    parameters:\n    - id: left\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that specifies the left set argument.\n    - id: right\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that specifies the right set argument.\n    - id: joinCondition\n      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}\n      description: A method representing the condition on which to join. This method must produce an expression with a Boolean result type that provides the logic of the join condition.\n    return:\n      type: System.Data.Common.CommandTrees.DbJoinExpression\n      description: A new DbJoinExpression, with an <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"></xref> of LeftOuterJoin, that represents the left outer join operation applied to the left and right input sets under the given join condition.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The expression produced by <code>joinCondition</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The expression produced by <code>joinCondition</code> does not have a Boolean result type.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  id: LessThan(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: LessThan(DbExpression, DbExpression)\n  nameWithType: DbExpressionBuilder.LessThan(DbExpression, DbExpression)\n  fullName: DbExpressionBuilder.LessThan(DbExpression, DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbComparisonExpression\"></xref> that determines whether the left argument is less than the right argument.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbComparisonExpression LessThan (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);\n    parameters:\n    - id: left\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression that specifies the left argument.\n    - id: right\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression that specifies the right argument.\n    return:\n      type: System.Data.Common.CommandTrees.DbComparisonExpression\n      description: A new DbComparisonExpression representing the less-than comparison.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>left</code> or <code>right</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: No common order-comparable result type exists between <code>left</code> and <code>right</code>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  id: LessThanOrEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: LessThanOrEqual(DbExpression, DbExpression)\n  nameWithType: DbExpressionBuilder.LessThanOrEqual(DbExpression, DbExpression)\n  fullName: DbExpressionBuilder.LessThanOrEqual(DbExpression, DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbComparisonExpression\"></xref> that determines whether the left argument is less than or equal to the right argument.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbComparisonExpression LessThanOrEqual (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);\n    parameters:\n    - id: left\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression that specifies the left argument.\n    - id: right\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression that specifies the right argument.\n    return:\n      type: System.Data.Common.CommandTrees.DbComparisonExpression\n      description: A new DbComparisonExpression representing the less-than-or-equal-to comparison.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>left</code> or <code>right</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: No common result type that is both equality- and order-comparable exists between <code>left</code> and <code>right</code>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  id: Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Like(DbExpression, DbExpression)\n  nameWithType: DbExpressionBuilder.Like(DbExpression, DbExpression)\n  fullName: DbExpressionBuilder.Like(DbExpression, DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbLikeExpression\"></xref> that compares the specified input string to the given pattern.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbLikeExpression Like (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Common.CommandTrees.DbExpression pattern);\n    parameters:\n    - id: argument\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression that specifies the input string.\n    - id: pattern\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression that specifies the pattern string.\n    return:\n      type: System.Data.Common.CommandTrees.DbLikeExpression\n      description: A new DbLikeExpression with the specified input, pattern and a null escape.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>Argument</code> or <code>pattern</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>Argument</code> or <code>pattern</code> does not have a string result type.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  id: Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Like(DbExpression, DbExpression, DbExpression)\n  nameWithType: DbExpressionBuilder.Like(DbExpression, DbExpression, DbExpression)\n  fullName: DbExpressionBuilder.Like(DbExpression, DbExpression, DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbLikeExpression\"></xref> that compares the specified input string to the given pattern using the optional escape.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbLikeExpression Like (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Common.CommandTrees.DbExpression pattern, System.Data.Common.CommandTrees.DbExpression escape);\n    parameters:\n    - id: argument\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression that specifies the input string.\n    - id: pattern\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression that specifies the pattern string.\n    - id: escape\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An optional expression that specifies the escape string.\n    return:\n      type: System.Data.Common.CommandTrees.DbLikeExpression\n      description: A new DbLikeExpression with the specified input, pattern and escape.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>argument</code>,   <code>pattern</code> or <code>escape</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>argument</code>,   <code>pattern</code> or <code>escape</code> does not have a string result type.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  id: Limit(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Limit(DbExpression, DbExpression)\n  nameWithType: DbExpressionBuilder.Limit(DbExpression, DbExpression)\n  fullName: DbExpressionBuilder.Limit(DbExpression, DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbLimitExpression\"></xref> that restricts the number of elements in the Argument collection to the specified count Limit value. Tied results are not included in the output.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbLimitExpression Limit (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Common.CommandTrees.DbExpression count);\n    parameters:\n    - id: argument\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression that specifies the input collection.\n    - id: count\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression that specifies the limit value.\n    return:\n      type: System.Data.Common.CommandTrees.DbLimitExpression\n      description: A new DbLimitExpression with the specified argument and count limit values that does not include tied results.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>argument</code> or <code>count</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>argument</code> does not have a collection result type, or <code>count</code> does not have a result type that is equal or promotable to a 64-bit integer type.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  id: Minus(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Minus(DbExpression, DbExpression)\n  nameWithType: DbExpressionBuilder.Minus(DbExpression, DbExpression)\n  fullName: DbExpressionBuilder.Minus(DbExpression, DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbArithmeticExpression\"></xref> that subtracts the right argument from the left argument.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbArithmeticExpression Minus (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);\n    parameters:\n    - id: left\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression that specifies the left argument.\n    - id: right\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression that specifies the right argument.\n    return:\n      type: System.Data.Common.CommandTrees.DbArithmeticExpression\n      description: A new DbArithmeticExpression representing the subtraction operation.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>left</code> or <code>right</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: No common numeric result type exists between <code>left</code> and <code>right</code>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  id: Modulo(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Modulo(DbExpression, DbExpression)\n  nameWithType: DbExpressionBuilder.Modulo(DbExpression, DbExpression)\n  fullName: DbExpressionBuilder.Modulo(DbExpression, DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbArithmeticExpression\"></xref> that computes the remainder of the left argument divided by the right argument.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbArithmeticExpression Modulo (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);\n    parameters:\n    - id: left\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression that specifies the left argument.\n    - id: right\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression that specifies the right argument.\n    return:\n      type: System.Data.Common.CommandTrees.DbArithmeticExpression\n      description: A new DbArithmeticExpression representing the modulo operation.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>left</code> or <code>right</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: No common numeric result type exists between <code>left</code> and <code>right</code>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  id: Multiply(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Multiply(DbExpression, DbExpression)\n  nameWithType: DbExpressionBuilder.Multiply(DbExpression, DbExpression)\n  fullName: DbExpressionBuilder.Multiply(DbExpression, DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbArithmeticExpression\"></xref> that multiplies the left argument by the right argument.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbArithmeticExpression Multiply (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);\n    parameters:\n    - id: left\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression that specifies the left argument.\n    - id: right\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression that specifies the right argument.\n    return:\n      type: System.Data.Common.CommandTrees.DbArithmeticExpression\n      description: A new DbArithmeticExpression representing the multiplication operation.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>left</code> or <code>right</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: No common numeric result type exists between <code>left</code> and <code>right</code>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember)\n  id: Navigate(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Navigate(DbExpression, RelationshipEndMember, RelationshipEndMember)\n  nameWithType: DbExpressionBuilder.Navigate(DbExpression, RelationshipEndMember, RelationshipEndMember)\n  fullName: DbExpressionBuilder.Navigate(DbExpression, RelationshipEndMember, RelationshipEndMember)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbRelationshipNavigationExpression\"></xref> representing the navigation of a composition or association relationship.\n  remarks: <xref:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression> requires that navigation always occur from a reference, and so `navigateFrom` must always have a reference result type.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbRelationshipNavigationExpression Navigate (this System.Data.Common.CommandTrees.DbExpression navigateFrom, System.Data.Metadata.Edm.RelationshipEndMember fromEnd, System.Data.Metadata.Edm.RelationshipEndMember toEnd);\n    parameters:\n    - id: navigateFrom\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression that specifies the instance from which navigation should occur.\n    - id: fromEnd\n      type: System.Data.Metadata.Edm.RelationshipEndMember\n      description: Metadata for the property that represents the end of the relationship from which navigation should occur.\n    - id: toEnd\n      type: System.Data.Metadata.Edm.RelationshipEndMember\n      description: Metadata for the property that represents the end of the relationship to which navigation should occur.\n    return:\n      type: System.Data.Common.CommandTrees.DbRelationshipNavigationExpression\n      description: A new DbRelationshipNavigationExpression representing the navigation of the specified from and to relation ends of the specified relation type from the specified navigation source instance.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>fromEnd</code>,  <code>toEnd</code> or <code>navigateFrom</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>fromEnd</code> and <code>toEnd</code> are not declared by the same relationship type, or <code>navigateFrom</code> has a result type that is not compatible with the property type of <code>fromEnd</code>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Metadata.Edm.RelationshipType,System.String,System.String,System.Data.Common.CommandTrees.DbExpression)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Metadata.Edm.RelationshipType,System.String,System.String,System.Data.Common.CommandTrees.DbExpression)\n  id: Navigate(System.Data.Metadata.Edm.RelationshipType,System.String,System.String,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Navigate(RelationshipType, String, String, DbExpression)\n  nameWithType: DbExpressionBuilder.Navigate(RelationshipType, String, String, DbExpression)\n  fullName: DbExpressionBuilder.Navigate(RelationshipType, String, String, DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbRelationshipNavigationExpression\"></xref> representing the navigation of a composition or association relationship.\n  remarks: <xref:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression> requires that navigation always occur from a reference, and so `navigateFrom` must always have a reference result type.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbRelationshipNavigationExpression Navigate (this System.Data.Metadata.Edm.RelationshipType type, string fromEndName, string toEndName, System.Data.Common.CommandTrees.DbExpression navigateFrom);\n    parameters:\n    - id: type\n      type: System.Data.Metadata.Edm.RelationshipType\n      description: Metadata for the relation type that represents the relationship.\n    - id: fromEndName\n      type: System.String\n      description: The name of the property of the relation type that represents the end of the relationship from which navigation should occur.\n    - id: toEndName\n      type: System.String\n      description: The name of the property of the relation type that represents the end of the relationship to which navigation should occur.\n    - id: navigateFrom\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression the specifies the instance from which naviagtion should occur.\n    return:\n      type: System.Data.Common.CommandTrees.DbRelationshipNavigationExpression\n      description: A new DbRelationshipNavigationExpression representing the navigation of the specified from and to relation ends of the specified relation type from the specified navigation source instance.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>type</code>,  <code>fromEndName</code>,  <code>toEndName</code> or <code>navigateFrom</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>type</code> is not associated with this command tree's metadata workspace or <code>navigateFrom</code> is associated with a different command tree, or <code>type</code> does not declare a relation end property with name <code>toEndName</code> or <code>fromEndName</code>, or <code>navigateFrom</code> has a result type that is not compatible with the property type of the relation end property with name <code>fromEndName</code>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Negate(System.Data.Common.CommandTrees.DbExpression)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Negate(System.Data.Common.CommandTrees.DbExpression)\n  id: Negate(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Negate(DbExpression)\n  nameWithType: DbExpressionBuilder.Negate(DbExpression)\n  fullName: DbExpressionBuilder.Negate(DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbArithmeticExpression\"></xref> that negates the value of the argument.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbArithmeticExpression Negate (this System.Data.Common.CommandTrees.DbExpression argument);\n    parameters:\n    - id: argument\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression that specifies the argument.\n    return:\n      type: System.Data.Common.CommandTrees.DbArithmeticExpression\n      description: A new DbArithmeticExpression representing the negation operation.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Negate*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>argument</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: No numeric result type exists for <code>argument</code>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})\n  id: New(System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: New(TypeUsage, IEnumerable<DbExpression>)\n  nameWithType: DbExpressionBuilder.New(TypeUsage, IEnumerable<DbExpression>)\n  fullName: DbExpressionBuilder.New(TypeUsage, IEnumerable<DbExpression>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbNewInstanceExpression\"></xref>. If the type argument is a collection type, the arguments specify the elements of the collection. Otherwise the arguments are used as property or column values in the new instance.\n  remarks: If `instanceType` is a a collection type then every expression in `arguments` must have a result type that is promotable to the element type of the `instanceType`. If `instanceType` is a row type,  `arguments` must contain as many expressions as there are columns in the row type, and the result type of each expression must be equal or promotable to the type of the corresponding column. A row type that does not declare any columns is invalid. If `instanceType` is an entity type,  `arguments` must contain as many expressions as there are properties defined by the type, and the result type of each expression must be equal or promotable to the type of the corresponding property.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbNewInstanceExpression New (this System.Data.Metadata.Edm.TypeUsage instanceType, System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpression> arguments);\n    parameters:\n    - id: instanceType\n      type: System.Data.Metadata.Edm.TypeUsage\n      description: The type of the new instance.\n    - id: arguments\n      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression}\n      description: Expressions that specify values of the new instances, interpreted according to the instance's type.\n    return:\n      type: System.Data.Common.CommandTrees.DbNewInstanceExpression\n      description: A new DbNewInstanceExpression with the specified type and arguments.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>instanceType</code> or <code>arguments</code> is null, or <code>arguments</code> contains null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>arguments</code> is empty or the result types of the contained expressions do not match the requirements of <code>instanceType</code> (as explained in the remarks section).\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression[])\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression[])\n  id: New(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression[])\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: New(TypeUsage, DbExpression[])\n  nameWithType: DbExpressionBuilder.New(TypeUsage, DbExpression[])\n  fullName: DbExpressionBuilder.New(TypeUsage, DbExpression[])\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbNewInstanceExpression\"></xref>. If the type argument is a collection type, the arguments specify the elements of the collection. Otherwise the arguments are used as property or column values in the new instance.\n  remarks: If `instanceType` is a a collection type then every expression in `arguments` must have a result type that is promotable to the element type of the `instanceType`. If `instanceType` is a row type,  `arguments` must contain as many expressions as there are columns in the row type, and the result type of each expression must be equal or promotable to the type of the corresponding column. A row type that does not declare any columns is invalid. If `instanceType` is an entity type,  `arguments` must contain as many expressions as there are properties defined by the type, and the result type of each expression must be equal or promotable to the type of the corresponding property.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbNewInstanceExpression New (this System.Data.Metadata.Edm.TypeUsage instanceType, System.Data.Common.CommandTrees.DbExpression[] arguments);\n    parameters:\n    - id: instanceType\n      type: System.Data.Metadata.Edm.TypeUsage\n      description: The type of the new instance.\n    - id: arguments\n      type: System.Data.Common.CommandTrees.DbExpression[]\n      description: Expressions that specify values of the new instances, interpreted according to the instance's type.\n    return:\n      type: System.Data.Common.CommandTrees.DbNewInstanceExpression\n      description: A new DbNewInstanceExpression with the specified type and arguments.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>instanceType</code> or <code>arguments</code> is null, or <code>arguments</code> contains null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>arguments</code> is empty or the result types of the contained expressions do not match the requirements of <code>instanceType</code> (as explained in the remarks section).\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})\n  id: NewCollection(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: NewCollection(IEnumerable<DbExpression>)\n  nameWithType: DbExpressionBuilder.NewCollection(IEnumerable<DbExpression>)\n  fullName: DbExpressionBuilder.NewCollection(IEnumerable<DbExpression>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbNewInstanceExpression\"></xref> that constructs a collection containing the specified elements. The type of the collection is based on the common type of the elements. If no common element type exists an exception is thrown.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbNewInstanceExpression NewCollection (System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpression> elements);\n    parameters:\n    - id: elements\n      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression}\n      description: A list of expressions that provide the elements of the collection.\n    return:\n      type: System.Data.Common.CommandTrees.DbNewInstanceExpression\n      description: A new DbNewInstanceExpression with the specified collection type and arguments.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>elements</code> is null, or contains null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>elements</code> is empty or contains expressions for which no common result type exists.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Data.Common.CommandTrees.DbExpression[])\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Data.Common.CommandTrees.DbExpression[])\n  id: NewCollection(System.Data.Common.CommandTrees.DbExpression[])\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: NewCollection(DbExpression[])\n  nameWithType: DbExpressionBuilder.NewCollection(DbExpression[])\n  fullName: DbExpressionBuilder.NewCollection(DbExpression[])\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbNewInstanceExpression\"></xref> that constructs a collection containing the specified elements. The type of the collection is based on the common type of the elements. If no common element type exists an exception is thrown.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbNewInstanceExpression NewCollection (System.Data.Common.CommandTrees.DbExpression[] elements);\n    parameters:\n    - id: elements\n      type: System.Data.Common.CommandTrees.DbExpression[]\n      description: A list of expressions that provide the elements of the collection.\n    return:\n      type: System.Data.Common.CommandTrees.DbNewInstanceExpression\n      description: A new DbNewInstanceExpression with the specified collection type and arguments.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>elements</code> is null, or contains null..\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>elements</code> is empty or contains expressions for which no common result type exists.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewEmptyCollection(System.Data.Metadata.Edm.TypeUsage)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewEmptyCollection(System.Data.Metadata.Edm.TypeUsage)\n  id: NewEmptyCollection(System.Data.Metadata.Edm.TypeUsage)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: NewEmptyCollection(TypeUsage)\n  nameWithType: DbExpressionBuilder.NewEmptyCollection(TypeUsage)\n  fullName: DbExpressionBuilder.NewEmptyCollection(TypeUsage)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbNewInstanceExpression\"></xref> that constructs an empty collection of the specified collection type.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbNewInstanceExpression NewEmptyCollection (this System.Data.Metadata.Edm.TypeUsage collectionType);\n    parameters:\n    - id: collectionType\n      type: System.Data.Metadata.Edm.TypeUsage\n      description: The type metadata for the collection to create\n    return:\n      type: System.Data.Common.CommandTrees.DbNewInstanceExpression\n      description: A new DbNewInstanceExpression with the specified collection type and an empty <code>Arguments</code> list.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewEmptyCollection*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>collectionType</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>collectionType</code> is not a collection type.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})\n  id: NewRow(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: NewRow(IEnumerable<KeyValuePair<String,DbExpression>>)\n  nameWithType: DbExpressionBuilder.NewRow(IEnumerable<KeyValuePair<String,DbExpression>>)\n  fullName: DbExpressionBuilder.NewRow(IEnumerable<KeyValuePair<String,DbExpression>>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbNewInstanceExpression\"></xref> that produces a row with the specified named columns and the given values, specified as expressions.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbNewInstanceExpression NewRow (System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,System.Data.Common.CommandTrees.DbExpression>> columnValues);\n    parameters:\n    - id: columnValues\n      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}}\n      description: A list of string-DbExpression key-value pairs that defines the structure and values of the row.\n    return:\n      type: System.Data.Common.CommandTrees.DbNewInstanceExpression\n      description: A new DbNewInstanceExpression that represents the construction of the row.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>columnValues</code> is null or contains an element with a null column name or expression.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>columnValues</code> is empty, or contains a duplicate or invalid column name.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Not(System.Data.Common.CommandTrees.DbExpression)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Not(System.Data.Common.CommandTrees.DbExpression)\n  id: Not(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Not(DbExpression)\n  nameWithType: DbExpressionBuilder.Not(DbExpression)\n  fullName: DbExpressionBuilder.Not(DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a <xref href=\"System.Data.Common.CommandTrees.DbNotExpression\"></xref> that performs the logical negation of the given argument.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbNotExpression Not (this System.Data.Common.CommandTrees.DbExpression argument);\n    parameters:\n    - id: argument\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: A Boolean expression that specifies the argument.\n    return:\n      type: System.Data.Common.CommandTrees.DbNotExpression\n      description: A new DbNotExpression with the specified argument.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Not*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>argument</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>argument</code> does not have a Boolean result type.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  id: NotEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: NotEqual(DbExpression, DbExpression)\n  nameWithType: DbExpressionBuilder.NotEqual(DbExpression, DbExpression)\n  fullName: DbExpressionBuilder.NotEqual(DbExpression, DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbComparisonExpression\"></xref> that compares the left and right arguments for inequality.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbComparisonExpression NotEqual (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);\n    parameters:\n    - id: left\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression that specifies the left argument.\n    - id: right\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression that specifies the right argument.\n    return:\n      type: System.Data.Common.CommandTrees.DbComparisonExpression\n      description: A new DbComparisonExpression representing the inequality comparison.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>left</code> or <code>right</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: No common equality-comparable result type exists between <code>left</code> and <code>right</code>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Null(System.Data.Metadata.Edm.TypeUsage)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Null(System.Data.Metadata.Edm.TypeUsage)\n  id: Null(System.Data.Metadata.Edm.TypeUsage)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Null(TypeUsage)\n  nameWithType: DbExpressionBuilder.Null(TypeUsage)\n  fullName: DbExpressionBuilder.Null(TypeUsage)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbNullExpression\"></xref>, which represents a typed null value.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbNullExpression Null (this System.Data.Metadata.Edm.TypeUsage nullType);\n    parameters:\n    - id: nullType\n      type: System.Data.Metadata.Edm.TypeUsage\n      description: The type of the null value.\n    return:\n      type: System.Data.Common.CommandTrees.DbNullExpression\n      description: An instance of DbNullExpression.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Null*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>nullType</code> is null.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)\n  id: OfType(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: OfType(DbExpression, TypeUsage)\n  nameWithType: DbExpressionBuilder.OfType(DbExpression, TypeUsage)\n  fullName: DbExpressionBuilder.OfType(DbExpression, TypeUsage)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbOfTypeExpression\"></xref> that produces a set consisting of the elements of the given input set that are of the specified type.\n  remarks: DbOfTypeExpression requires that `argument` has a collection result type with a polymorphic element type, and that `type` is a type from the same type hierarchy as that element type.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbOfTypeExpression OfType (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage type);\n    parameters:\n    - id: argument\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that specifies the input set.\n    - id: type\n      type: System.Data.Metadata.Edm.TypeUsage\n      description: Type metadata for the type that elements of the input set must have to be included in the resulting set.\n    return:\n      type: System.Data.Common.CommandTrees.DbOfTypeExpression\n      description: A new DbOfTypeExpression with the specified set argument and type, and an ExpressionKind of <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind.OfType\"></xref>.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>argument</code> or <code>type</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>argument</code> does not have a collection result type, or <code>type</code> is not a type in the same type hierarchy as the element type of the collection result type of <code>argument</code>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)\n  id: OfTypeOnly(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: OfTypeOnly(DbExpression, TypeUsage)\n  nameWithType: DbExpressionBuilder.OfTypeOnly(DbExpression, TypeUsage)\n  fullName: DbExpressionBuilder.OfTypeOnly(DbExpression, TypeUsage)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbOfTypeExpression\"></xref> that produces a set consisting of the elements of the given input set that are of exactly the specified type.\n  remarks: DbOfTypeExpression requires that `argument` has a collection result type with a polymorphic element type, and that `type` is a type from the same type hierarchy as that element type.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbOfTypeExpression OfTypeOnly (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage type);\n    parameters:\n    - id: argument\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that specifies the input set.\n    - id: type\n      type: System.Data.Metadata.Edm.TypeUsage\n      description: Type metadata for the type that elements of the input set must match exactly to be included in the resulting set.\n    return:\n      type: System.Data.Common.CommandTrees.DbOfTypeExpression\n      description: A new DbOfTypeExpression with the specified set argument and type, and an ExpressionKind of <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind.OfTypeOnly\"></xref>.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>argument</code> or <code>type</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>argument</code> does not have a collection result type, or <code>type</code> is not a type in the same type hierarchy as the element type of the collection result type of <code>argument</code>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  id: Or(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Or(DbExpression, DbExpression)\n  nameWithType: DbExpressionBuilder.Or(DbExpression, DbExpression)\n  fullName: DbExpressionBuilder.Or(DbExpression, DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates an <xref href=\"System.Data.Common.CommandTrees.DbOrExpression\"></xref> that performs the logical Or of the left and right arguments.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbOrExpression Or (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);\n    parameters:\n    - id: left\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: A Boolean expression that specifies the left argument.\n    - id: right\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: A Boolean expression that specifies the right argument.\n    return:\n      type: System.Data.Common.CommandTrees.DbOrExpression\n      description: A new DbOrExpression with the specified arguments.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>left</code> or <code>right</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>left</code> or <code>right</code> does not have a Boolean result type.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  id: OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: OrderBy(DbExpression, Func<DbExpression,DbExpression>)\n  nameWithType: DbExpressionBuilder.OrderBy(DbExpression, Func<DbExpression,DbExpression>)\n  fullName: DbExpressionBuilder.OrderBy(DbExpression, Func<DbExpression,DbExpression>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbSortExpression\"></xref> that sorts the given input set by the specified sort key, with ascending sort order and default collation.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbSortExpression OrderBy (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> sortKey);\n    parameters:\n    - id: source\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression that specifies the input set.\n    - id: sortKey\n      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}\n      description: A method that specifies how to derive the sort key expression given a member of the input set. This method must produce an expression with an order-comparable result type that provides the sort key definition.\n    return:\n      type: System.Data.Common.CommandTrees.DbSortExpression\n      description: A new DbSortExpression that represents the order-by operation.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The expression produced by <code>sortKey</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The expression produced by <code>sortKey</code> does not have an order-comparable result type.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)\n  id: OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: OrderBy(DbExpression, Func<DbExpression,DbExpression>, String)\n  nameWithType: DbExpressionBuilder.OrderBy(DbExpression, Func<DbExpression,DbExpression>, String)\n  fullName: DbExpressionBuilder.OrderBy(DbExpression, Func<DbExpression,DbExpression>, String)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbSortExpression\"></xref> that sorts the given input set by the specified sort key, with ascending sort order and the specified collation.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbSortExpression OrderBy (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> sortKey, string collation);\n    parameters:\n    - id: source\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression that specifies the input set.\n    - id: sortKey\n      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}\n      description: A method that specifies how to derive the sort key expression given a member of the input set. This method must produce an expression with an order-comparable result type that provides the sort key definition.\n    - id: collation\n      type: System.String\n      description: The collation to sort under.\n    return:\n      type: System.Data.Common.CommandTrees.DbSortExpression\n      description: A new DbSortExpression that represents the order-by operation.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The expression produced by <code>sortKey</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The expression produced by <code>sortKey</code> does not have an order-comparable string result type.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>collation</code> is empty or contains only space characters.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  id: OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: OrderByDescending(DbExpression, Func<DbExpression,DbExpression>)\n  nameWithType: DbExpressionBuilder.OrderByDescending(DbExpression, Func<DbExpression,DbExpression>)\n  fullName: DbExpressionBuilder.OrderByDescending(DbExpression, Func<DbExpression,DbExpression>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbSortExpression\"></xref> that sorts the given input set by the specified sort key, with descending sort order and default collation.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbSortExpression OrderByDescending (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> sortKey);\n    parameters:\n    - id: source\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression that specifies the input set.\n    - id: sortKey\n      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}\n      description: A method that specifies how to derive the sort key expression given a member of the input set. This method must produce an expression with an order-comparable result type that provides the sort key definition.\n    return:\n      type: System.Data.Common.CommandTrees.DbSortExpression\n      description: A new DbSortExpression that represents the order-by operation.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The expression produced by <code>sortKey</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The expression produced by <code>sortKey</code> does not have an order-comparable result type.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)\n  id: OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: OrderByDescending(DbExpression, Func<DbExpression,DbExpression>, String)\n  nameWithType: DbExpressionBuilder.OrderByDescending(DbExpression, Func<DbExpression,DbExpression>, String)\n  fullName: DbExpressionBuilder.OrderByDescending(DbExpression, Func<DbExpression,DbExpression>, String)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbSortExpression\"></xref> that sorts the given input set by the specified sort key, with descending sort order and the specified collation.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbSortExpression OrderByDescending (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> sortKey, string collation);\n    parameters:\n    - id: source\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression that specifies the input set.\n    - id: sortKey\n      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}\n      description: A method that specifies how to derive the sort key expression given a member of the input set. This method must produce an expression with an order-comparable result type that provides the sort key definition.\n    - id: collation\n      type: System.String\n      description: The collation to sort under.\n    return:\n      type: System.Data.Common.CommandTrees.DbSortExpression\n      description: A new DbSortExpression that represents the order-by operation.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The expression produced by <code>sortKey</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The expression produced by <code>sortKey</code> does not have an order-comparable string result type.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>collation</code> is empty or contains only space characters.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})\n  id: OuterApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: OuterApply(DbExpression, Func<DbExpression,KeyValuePair<String,DbExpression>>)\n  nameWithType: DbExpressionBuilder.OuterApply(DbExpression, Func<DbExpression,KeyValuePair<String,DbExpression>>)\n  fullName: DbExpressionBuilder.OuterApply(DbExpression, Func<DbExpression,KeyValuePair<String,DbExpression>>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbApplyExpression\"></xref> that evaluates the given <code>apply</code> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns. Rows for which <code>apply</code> evaluates to an empty set have an apply column value of `null`.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbApplyExpression OuterApply (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair<string,System.Data.Common.CommandTrees.DbExpression>> apply);\n    parameters:\n    - id: source\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that specifies the input set.\n    - id: apply\n      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}}\n      description: A method that specifies the logic to evaluate once for each member of the input set.\n    return:\n      type: System.Data.Common.CommandTrees.DbApplyExpression\n      description: An new DbApplyExpression with the specified input and apply bindings and an <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"></xref> of OuterApply.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The result of <code>apply</code> contains a name or expression that is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The result of <code>apply</code> contains a name or expression that is not valid in an expression binding.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)\n  id: OuterApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: OuterApply(DbExpressionBinding, DbExpressionBinding)\n  nameWithType: DbExpressionBuilder.OuterApply(DbExpressionBinding, DbExpressionBinding)\n  fullName: DbExpressionBuilder.OuterApply(DbExpressionBinding, DbExpressionBinding)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbApplyExpression\"></xref> that evaluates the given <code>apply</code> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns. Rows for which <code>apply</code> evaluates to an empty set have an apply column value of `null`.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbApplyExpression OuterApply (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpressionBinding apply);\n    parameters:\n    - id: input\n      type: System.Data.Common.CommandTrees.DbExpressionBinding\n      description: An <xref href=\"System.Data.Common.CommandTrees.DbExpressionBinding\"></xref> that specifies the input set.\n    - id: apply\n      type: System.Data.Common.CommandTrees.DbExpressionBinding\n      description: An <xref href=\"System.Data.Common.CommandTrees.DbExpressionBinding\"></xref> that specifies logic to evaluate once for each member of the input set.\n    return:\n      type: System.Data.Common.CommandTrees.DbApplyExpression\n      description: An new DbApplyExpression with the specified input and apply bindings and an <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"></xref> of OuterApply.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>input</code> or <code>apply</code> is null.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Parameter(System.Data.Metadata.Edm.TypeUsage,System.String)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Parameter(System.Data.Metadata.Edm.TypeUsage,System.String)\n  id: Parameter(System.Data.Metadata.Edm.TypeUsage,System.String)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Parameter(TypeUsage, String)\n  nameWithType: DbExpressionBuilder.Parameter(TypeUsage, String)\n  fullName: DbExpressionBuilder.Parameter(TypeUsage, String)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbParameterReferenceExpression\"></xref> that references a parameter with the specified name and type.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbParameterReferenceExpression Parameter (this System.Data.Metadata.Edm.TypeUsage type, string name);\n    parameters:\n    - id: type\n      type: System.Data.Metadata.Edm.TypeUsage\n      description: The type of the referenced parameter.\n    - id: name\n      type: System.String\n      description: The name of the referenced parameter.\n    return:\n      type: System.Data.Common.CommandTrees.DbParameterReferenceExpression\n      description: A DbParameterReferenceExpression that represents a reference to a parameter with the specified name and type. The result type of the expression will be the same as <code>type</code>.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Parameter*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  id: Plus(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Plus(DbExpression, DbExpression)\n  nameWithType: DbExpressionBuilder.Plus(DbExpression, DbExpression)\n  fullName: DbExpressionBuilder.Plus(DbExpression, DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbArithmeticExpression\"></xref> that adds the left argument to the right argument.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbArithmeticExpression Plus (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);\n    parameters:\n    - id: left\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression that specifies the left argument.\n    - id: right\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression that specifies the right argument.\n    return:\n      type: System.Data.Common.CommandTrees.DbArithmeticExpression\n      description: A new DbArithmeticExpression representing the addition operation.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>left</code> or <code>right</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: No common numeric result type exists between <code>left</code> and <code>right</code>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Project(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Project(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)\n  id: Project(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Project(DbExpressionBinding, DbExpression)\n  nameWithType: DbExpressionBuilder.Project(DbExpressionBinding, DbExpression)\n  fullName: DbExpressionBuilder.Project(DbExpressionBinding, DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbProjectExpression\"></xref> that projects the specified expression over the given input set.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbProjectExpression Project (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpression projection);\n    parameters:\n    - id: input\n      type: System.Data.Common.CommandTrees.DbExpressionBinding\n      description: An expression binding that specifies the input set.\n    - id: projection\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression to project over the set.\n    return:\n      type: System.Data.Common.CommandTrees.DbProjectExpression\n      description: A new DbProjectExpression that represents the projection operation.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Project*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>input</code> or <code>projection</code> is null.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EdmProperty)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EdmProperty)\n  id: Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EdmProperty)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Property(DbExpression, EdmProperty)\n  nameWithType: DbExpressionBuilder.Property(DbExpression, EdmProperty)\n  fullName: DbExpressionBuilder.Property(DbExpression, EdmProperty)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbPropertyExpression\"></xref> representing the retrieval of the specified property.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbPropertyExpression Property (this System.Data.Common.CommandTrees.DbExpression instance, System.Data.Metadata.Edm.EdmProperty propertyMetadata);\n    parameters:\n    - id: instance\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: The instance from which to retrieve the property. May be null if the property is static.\n    - id: propertyMetadata\n      type: System.Data.Metadata.Edm.EdmProperty\n      description: Metadata for the property to retrieve.\n    return:\n      type: System.Data.Common.CommandTrees.DbPropertyExpression\n      description: A new DbPropertyExpression representing the property retrieval.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>propertyMetadata</code> is null or <code>instance</code> is null and the property is not static.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.NavigationProperty)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.NavigationProperty)\n  id: Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.NavigationProperty)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Property(DbExpression, NavigationProperty)\n  nameWithType: DbExpressionBuilder.Property(DbExpression, NavigationProperty)\n  fullName: DbExpressionBuilder.Property(DbExpression, NavigationProperty)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbPropertyExpression\"></xref> representing the retrieval of the specified navigation property.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbPropertyExpression Property (this System.Data.Common.CommandTrees.DbExpression instance, System.Data.Metadata.Edm.NavigationProperty navigationProperty);\n    parameters:\n    - id: instance\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: The instance from which to retrieve the navigation property.\n    - id: navigationProperty\n      type: System.Data.Metadata.Edm.NavigationProperty\n      description: Metadata for the navigation property to retrieve.\n    return:\n      type: System.Data.Common.CommandTrees.DbPropertyExpression\n      description: A new DbPropertyExpression representing the navigation property retrieval.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>navigationProperty</code> or <code>instance</code> is null.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember)\n  id: Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Property(DbExpression, RelationshipEndMember)\n  nameWithType: DbExpressionBuilder.Property(DbExpression, RelationshipEndMember)\n  fullName: DbExpressionBuilder.Property(DbExpression, RelationshipEndMember)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbPropertyExpression\"></xref> representing the retrieval of the specified relationship end member.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbPropertyExpression Property (this System.Data.Common.CommandTrees.DbExpression instance, System.Data.Metadata.Edm.RelationshipEndMember relationshipEnd);\n    parameters:\n    - id: instance\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: The instance from which to retrieve the relationship end member.\n    - id: relationshipEnd\n      type: System.Data.Metadata.Edm.RelationshipEndMember\n      description: Metadata for the relationship end member to retrieve.\n    return:\n      type: System.Data.Common.CommandTrees.DbPropertyExpression\n      description: A new DbPropertyExpression representing the relationship end member retrieval.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>relationshipEnd</code> is null or <code>instance</code> is null and the property is not static.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.String)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.String)\n  id: Property(System.Data.Common.CommandTrees.DbExpression,System.String)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Property(DbExpression, String)\n  nameWithType: DbExpressionBuilder.Property(DbExpression, String)\n  fullName: DbExpressionBuilder.Property(DbExpression, String)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbPropertyExpression\"></xref> representing the retrieval of the instance property with the specified name from the given instance.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbPropertyExpression Property (this System.Data.Common.CommandTrees.DbExpression instance, string propertyName);\n    parameters:\n    - id: instance\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: The instance from which to retrieve the property.\n    - id: propertyName\n      type: System.String\n      description: The name of the property to retrieve.\n    return:\n      type: System.Data.Common.CommandTrees.DbPropertyExpression\n      description: A new DbPropertyExpression that represents the property retrieval.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>propertyName</code> is null or <code>instance</code> is null and the property is not static.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: No property with the specified name is declared by the type of <code>instance</code>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression)\n  id: RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: RefFromKey(EntitySet, DbExpression)\n  nameWithType: DbExpressionBuilder.RefFromKey(EntitySet, DbExpression)\n  fullName: DbExpressionBuilder.RefFromKey(EntitySet, DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbRefExpression\"></xref> that encodes a reference to a specific Entity based on key values.\n  remarks: \"`keyRow` should be an expression that specifies the key values that identify the referenced entity within the given entity set. The result type of `keyRow` should contain a corresponding column for each key property defined by `entitySet's` entity type.\"\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbRefExpression RefFromKey (this System.Data.Metadata.Edm.EntitySet entitySet, System.Data.Common.CommandTrees.DbExpression keyRow);\n    parameters:\n    - id: entitySet\n      type: System.Data.Metadata.Edm.EntitySet\n      description: The Entity set in which the referenced element resides.\n    - id: keyRow\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that constructs a record with columns that match (in number, type, and order) the Key properties of the referenced Entity type.\n    return:\n      type: System.Data.Common.CommandTrees.DbRefExpression\n      description: A new DbRefExpression that references the element with the specified key values in the given Entity set.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>entitySet</code> or <code>keyRow</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>keyRow</code> does not have a record result type that matches the key properties of the referenced entity set's entity type.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EntityType)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EntityType)\n  id: RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EntityType)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: RefFromKey(EntitySet, DbExpression, EntityType)\n  nameWithType: DbExpressionBuilder.RefFromKey(EntitySet, DbExpression, EntityType)\n  fullName: DbExpressionBuilder.RefFromKey(EntitySet, DbExpression, EntityType)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbRefExpression\"></xref> that encodes a reference to a specific Entity based on key values.\n  remarks: \"`keyRow` should be an expression that specifies the key values that identify the referenced entity within the given entity set. The result type of `keyRow` should contain a corresponding column for each key property defined by `entitySet's` entity type.\"\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbRefExpression RefFromKey (this System.Data.Metadata.Edm.EntitySet entitySet, System.Data.Common.CommandTrees.DbExpression keyRow, System.Data.Metadata.Edm.EntityType entityType);\n    parameters:\n    - id: entitySet\n      type: System.Data.Metadata.Edm.EntitySet\n      description: The Entity set in which the referenced element resides.\n    - id: keyRow\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that constructs a record with columns that match (in number, type, and order) the Key properties of the referenced Entity type.\n    - id: entityType\n      type: System.Data.Metadata.Edm.EntityType\n      description: The type of the Entity that the reference should refer to.\n    return:\n      type: System.Data.Common.CommandTrees.DbRefExpression\n      description: A new DbRefExpression that references the element with the specified key values in the given Entity set.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>entitySet</code>,  <code>keyRow</code> or <code>entityType</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>entityType</code> is not in the same type hierarchy as the entity set's entity type, or <code>keyRow</code> does not have a record result type that matches the key properties of the referenced entity set's entity type.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Scan(System.Data.Metadata.Edm.EntitySetBase)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Scan(System.Data.Metadata.Edm.EntitySetBase)\n  id: Scan(System.Data.Metadata.Edm.EntitySetBase)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Scan(EntitySetBase)\n  nameWithType: DbExpressionBuilder.Scan(EntitySetBase)\n  fullName: DbExpressionBuilder.Scan(EntitySetBase)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbScanExpression\"></xref> that references the specified entity or relationship set.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbScanExpression Scan (this System.Data.Metadata.Edm.EntitySetBase targetSet);\n    parameters:\n    - id: targetSet\n      type: System.Data.Metadata.Edm.EntitySetBase\n      description: Metadata for the entity or relationship set to reference.\n    return:\n      type: System.Data.Common.CommandTrees.DbScanExpression\n      description: A new DbScanExpression based on the specified entity or relationship set.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Scan*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>targetSet</code> is null.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,``0})\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,``0})\n  id: Select``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,``0})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Select<TProjection>(DbExpression, Func<DbExpression,TProjection>)\n  nameWithType: DbExpressionBuilder.Select<TProjection>(DbExpression, Func<DbExpression,TProjection>)\n  fullName: DbExpressionBuilder.Select<TProjection>(DbExpression, Func<DbExpression,TProjection>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbProjectExpression\"></xref> that selects the specified expression over the given input set.\n  remarks: \"To be compatible with Select, `TProjection` must be derived from <xref:System.Data.Common.CommandTrees.DbExpression>,     or must be an anonymous type with DbExpression-derived properties. The following are examples of supported types for `TProjection`:  \\n  \\n```  \\nsource.Select(x => x.Property(\\\"Name\\\"))  \\n```  \\n  \\n `TProjection` is <xref:System.Data.Common.CommandTrees.DbPropertyExpression>).  \\n  \\n```  \\nsource.Select(x => new { Name = x.Property(\\\"Name\\\") })  \\n```  \\n  \\n (`TProjection` is an anonymous type with a DbExpression-derived property).\"\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbProjectExpression Select<TProjection> (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,TProjection> projection);\n    parameters:\n    - id: source\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression that specifies the input set.\n    - id: projection\n      type: System.Func{System.Data.Common.CommandTrees.DbExpression,TProjection}\n      description: A method that specifies how to derive the projected expression given a member of the input set. This method must produce an instance of a type that is compatible with Select and can be resolved into a <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref>. Compatibility requirements for <code>TProjection</code> are described in remarks.\n    typeParameters:\n    - id: TProjection\n      description: The method result type of <code>projection</code>.\n    return:\n      type: System.Data.Common.CommandTrees.DbProjectExpression\n      description: A new DbProjectExpression that represents the select operation.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select``1*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The result of <code>projection</code> is null.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  id: SelectMany(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: SelectMany(DbExpression, Func<DbExpression,DbExpression>)\n  nameWithType: DbExpressionBuilder.SelectMany(DbExpression, Func<DbExpression,DbExpression>)\n  fullName: DbExpressionBuilder.SelectMany(DbExpression, Func<DbExpression,DbExpression>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbApplyExpression\"></xref> that evaluates the given <code>apply</code> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns. Rows for which <code>apply</code> evaluates to an empty set are not included. A <xref href=\"System.Data.Common.CommandTrees.DbProjectExpression\"></xref> is then created that selects the <code>apply</code> column from each row, producing the overall collection of <code>apply</code> results.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbProjectExpression SelectMany (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> apply);\n    parameters:\n    - id: source\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that specifies the input set.\n    - id: apply\n      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}\n      description: A method that represents the logic to evaluate once for each member of the input set.\n    return:\n      type: System.Data.Common.CommandTrees.DbProjectExpression\n      description: An new DbProjectExpression that selects the apply column from a new DbApplyExpression with the specified input and apply bindings and an <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"></xref> of CrossApply.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The expression produced by <code>apply</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The expression produced by <code>apply</code> does not have a collection type.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})\n  id: SelectMany``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: SelectMany<TSelector>(DbExpression, Func<DbExpression,DbExpression>, Func<DbExpression,DbExpression,TSelector>)\n  nameWithType: DbExpressionBuilder.SelectMany<TSelector>(DbExpression, Func<DbExpression,DbExpression>, Func<DbExpression,DbExpression,TSelector>)\n  fullName: DbExpressionBuilder.SelectMany<TSelector>(DbExpression, Func<DbExpression,DbExpression>, Func<DbExpression,DbExpression,TSelector>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbApplyExpression\"></xref> that evaluates the given <code>apply</code> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns. Rows for which <code>apply</code> evaluates to an empty set are not included. A <xref href=\"System.Data.Common.CommandTrees.DbProjectExpression\"></xref> is then created that selects the specified <code>selector</code> over each row, producing the overall collection of results.\n  remarks: \"To be compatible with SelectMany, `TSelector` must be derived from <xref:System.Data.Common.CommandTrees.DbExpression>,     or must be an anonymous type with DbExpression-derived properties. The following are examples of supported types for `TSelector`:  \\n  \\n```  \\nsource.SelectMany(x => x.Property(\\\"RelatedCollection\\\"), (source, apply) => apply.Property(\\\"Name\\\"))  \\n```  \\n  \\n (`TSelector` is <xref:System.Data.Common.CommandTrees.DbPropertyExpression>).  \\n  \\n```  \\nsource.SelectMany(x => x.Property(\\\"RelatedCollection\\\"), (source, apply) => new { SourceName = source.Property(\\\"Name\\\"), RelatedName = apply.Property(\\\"Name\\\") })  \\n```  \\n  \\n (`TSelector` is an anonymous type with DbExpression-derived properties).\"\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbProjectExpression SelectMany<TSelector> (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> apply, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector> selector);\n    parameters:\n    - id: source\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: A <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that specifies the input set.\n    - id: apply\n      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}\n      description: A method that represents the logic to evaluate once for each member of the input set.\n    - id: selector\n      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector}\n      description: A method that specifies how an element of the result set should be derived given an element of the input and apply sets. This method must produce an instance of a type that is compatible with SelectMany and can be resolved into a <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref>. Compatibility requirements for <code>TSelector</code> are described in remarks.\n    typeParameters:\n    - id: TSelector\n      description: The method result type of <code>selector</code>.\n    return:\n      type: System.Data.Common.CommandTrees.DbProjectExpression\n      description: An new DbProjectExpression that selects the result of the given selector from a new DbApplyExpression with the specified input and apply bindings and an <xref href=\"System.Data.Common.CommandTrees.DbExpressionKind\"></xref> of CrossApply.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The result of <code>selector</code> is null on conversion to DbExpression.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The expression produced by <code>apply</code> does not have a collection type. does not have a collection type.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbSortExpression,System.Data.Common.CommandTrees.DbExpression)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbSortExpression,System.Data.Common.CommandTrees.DbExpression)\n  id: Skip(System.Data.Common.CommandTrees.DbSortExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Skip(DbSortExpression, DbExpression)\n  nameWithType: DbExpressionBuilder.Skip(DbSortExpression, DbExpression)\n  fullName: DbExpressionBuilder.Skip(DbSortExpression, DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbSkipExpression\"></xref> that skips the specified number of elements from the given sorted input set.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbSkipExpression Skip (this System.Data.Common.CommandTrees.DbSortExpression argument, System.Data.Common.CommandTrees.DbExpression count);\n    parameters:\n    - id: argument\n      type: System.Data.Common.CommandTrees.DbSortExpression\n      description: A <xref href=\"System.Data.Common.CommandTrees.DbSortExpression\"></xref> that specifies the sorted input set.\n    - id: count\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression the specifies how many elements of the ordered set to skip.\n    return:\n      type: System.Data.Common.CommandTrees.DbSkipExpression\n      description: A new DbSkipExpression that represents the skip operation.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>argument</code> or <code>count</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>count</code> is not <xref href=\"System.Data.Common.CommandTrees.DbConstantExpression\"></xref> or <xref href=\"System.Data.Common.CommandTrees.DbParameterReferenceExpression\"></xref> or has a result type that is not equal or promotable to a 64-bit integer type.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause},System.Data.Common.CommandTrees.DbExpression)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause},System.Data.Common.CommandTrees.DbExpression)\n  id: Skip(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause},System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Skip(DbExpressionBinding, IEnumerable<DbSortClause>, DbExpression)\n  nameWithType: DbExpressionBuilder.Skip(DbExpressionBinding, IEnumerable<DbSortClause>, DbExpression)\n  fullName: DbExpressionBuilder.Skip(DbExpressionBinding, IEnumerable<DbSortClause>, DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbSkipExpression\"></xref> that sorts the given input set by the given sort specifications before skipping the specified number of elements.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbSkipExpression Skip (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbSortClause> sortOrder, System.Data.Common.CommandTrees.DbExpression count);\n    parameters:\n    - id: input\n      type: System.Data.Common.CommandTrees.DbExpressionBinding\n      description: An expression binding that specifies the input set.\n    - id: sortOrder\n      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause}\n      description: A list of sort specifications that determine how the elements of the input set should be sorted.\n    - id: count\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression the specifies how many elements of the ordered set to skip.\n    return:\n      type: System.Data.Common.CommandTrees.DbSkipExpression\n      description: A new DbSkipExpression that represents the skip operation.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>input</code>,  <code>sortOrder</code> or <code>count</code> is null, or <code>sortOrder</code> contains null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>sortOrder</code> is empty, or <code>count</code> is not <xref href=\"System.Data.Common.CommandTrees.DbConstantExpression\"></xref> or <xref href=\"System.Data.Common.CommandTrees.DbParameterReferenceExpression\"></xref> or has a result type that is not equal or promotable to a 64-bit integer type.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause})\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause})\n  id: Sort(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Sort(DbExpressionBinding, IEnumerable<DbSortClause>)\n  nameWithType: DbExpressionBuilder.Sort(DbExpressionBinding, IEnumerable<DbSortClause>)\n  fullName: DbExpressionBuilder.Sort(DbExpressionBinding, IEnumerable<DbSortClause>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbSortExpression\"></xref> that sorts the given input set by the specified sort specifications.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbSortExpression Sort (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbSortClause> sortOrder);\n    parameters:\n    - id: input\n      type: System.Data.Common.CommandTrees.DbExpressionBinding\n      description: An expression binding that specifies the input set.\n    - id: sortOrder\n      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause}\n      description: A list of sort specifications that determine how the elements of the input set should be sorted.\n    return:\n      type: System.Data.Common.CommandTrees.DbSortExpression\n      description: A new DbSortExpression that represents the sort operation.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>input</code> or <code>sortOrder</code> is null, or <code>sortOrder</code> contains null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>sortOrder</code> is empty.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  id: Take(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Take(DbExpression, DbExpression)\n  nameWithType: DbExpressionBuilder.Take(DbExpression, DbExpression)\n  fullName: DbExpressionBuilder.Take(DbExpression, DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbLimitExpression\"></xref> that restricts the number of elements in the Argument collection to the specified count Limit value. Tied results are not included in the output.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbLimitExpression Take (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Common.CommandTrees.DbExpression count);\n    parameters:\n    - id: argument\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression that specifies the input collection.\n    - id: count\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression that specifies the limit value.\n    return:\n      type: System.Data.Common.CommandTrees.DbLimitExpression\n      description: A new DbLimitExpression with the specified argument and count limit values that does not include tied results.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>argument</code> or <code>count</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>argument</code> does not have a collection result type,  <code>count</code> does not have a result type that is equal or promotable to a 64-bit integer type.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)\n  id: ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: ThenBy(DbSortExpression, Func<DbExpression,DbExpression>, String)\n  nameWithType: DbExpressionBuilder.ThenBy(DbSortExpression, Func<DbExpression,DbExpression>, String)\n  fullName: DbExpressionBuilder.ThenBy(DbSortExpression, Func<DbExpression,DbExpression>, String)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbSortExpression\"></xref> that with a sort order that includes the sort order of the given order input set together with the specified sort key in ascending sort order and  with the specified collation.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbSortExpression ThenBy (this System.Data.Common.CommandTrees.DbSortExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> sortKey, string collation);\n    parameters:\n    - id: source\n      type: System.Data.Common.CommandTrees.DbSortExpression\n      description: A DbSortExpression that specifies the ordered input set.\n    - id: sortKey\n      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}\n      description: A method that specifies how to derive the additional sort key expression given a member of the input set. This method must produce an expression with an order-comparable result type that provides the sort key definition.\n    - id: collation\n      type: System.String\n      description: The collation to sort under.\n    return:\n      type: System.Data.Common.CommandTrees.DbSortExpression\n      description: A new DbSortExpression that represents the new overall order-by operation.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The expression produced by <code>sortKey</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The expression produced by <code>sortKey</code> does not have an order-comparable string result type.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>collation</code> is empty or contains only space characters.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  id: ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: ThenBy(DbSortExpression, Func<DbExpression,DbExpression>)\n  nameWithType: DbExpressionBuilder.ThenBy(DbSortExpression, Func<DbExpression,DbExpression>)\n  fullName: DbExpressionBuilder.ThenBy(DbSortExpression, Func<DbExpression,DbExpression>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbSortExpression\"></xref> that with a sort order that includes the sort order of the given order input set together with the specified sort key in ascending sort order and  with default collation.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbSortExpression ThenBy (this System.Data.Common.CommandTrees.DbSortExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> sortKey);\n    parameters:\n    - id: source\n      type: System.Data.Common.CommandTrees.DbSortExpression\n      description: A DbSortExpression that specifies the ordered input set.\n    - id: sortKey\n      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}\n      description: A method that specifies how to derive the additional sort key expression given a member of the input set. This method must produce an expression with an order-comparable result type that provides the sort key definition.\n    return:\n      type: System.Data.Common.CommandTrees.DbSortExpression\n      description: A new DbSortExpression that represents the new overall order-by operation.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The expression produced by <code>sortKey</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>sortKey</code> does not have an order-comparable result type.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  id: ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: ThenByDescending(DbSortExpression, Func<DbExpression,DbExpression>)\n  nameWithType: DbExpressionBuilder.ThenByDescending(DbSortExpression, Func<DbExpression,DbExpression>)\n  fullName: DbExpressionBuilder.ThenByDescending(DbSortExpression, Func<DbExpression,DbExpression>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbSortExpression\"></xref> that with a sort order that includes the sort order of the given order input set together with the specified sort key in descending sort order and  with default collation.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbSortExpression ThenByDescending (this System.Data.Common.CommandTrees.DbSortExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> sortKey);\n    parameters:\n    - id: source\n      type: System.Data.Common.CommandTrees.DbSortExpression\n      description: A DbSortExpression that specifies the ordered input set.\n    - id: sortKey\n      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}\n      description: A method that specifies how to derive the additional sort key expression given a member of the input set. This method must produce an expression with an order-comparable result type that provides the sort key definition.\n    return:\n      type: System.Data.Common.CommandTrees.DbSortExpression\n      description: A new DbSortExpression that represents the new overall order-by operation.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The expression produced by <code>sortKey</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The expression produced by <code>sortKey</code> does not have an order-comparable result type.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)\n  id: ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: ThenByDescending(DbSortExpression, Func<DbExpression,DbExpression>, String)\n  nameWithType: DbExpressionBuilder.ThenByDescending(DbSortExpression, Func<DbExpression,DbExpression>, String)\n  fullName: DbExpressionBuilder.ThenByDescending(DbSortExpression, Func<DbExpression,DbExpression>, String)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbSortExpression\"></xref> that with a sort order that includes the sort order of the given order input set together with the specified sort key in descending sort order and  with the specified collation.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbSortExpression ThenByDescending (this System.Data.Common.CommandTrees.DbSortExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> sortKey, string collation);\n    parameters:\n    - id: source\n      type: System.Data.Common.CommandTrees.DbSortExpression\n      description: A DbSortExpression that specifies the ordered input set.\n    - id: sortKey\n      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}\n      description: A method that specifies how to derive the additional sort key expression given a member of the input set. This method must produce an expression with an order-comparable result type that provides the sort key definition.\n    - id: collation\n      type: System.String\n      description: The collation to sort under.\n    return:\n      type: System.Data.Common.CommandTrees.DbSortExpression\n      description: A new DbSortExpression that represents the new overall order-by operation.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The expression produced by <code>sortKey</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The expression produced by <code>sortKey</code> does not have an order-comparable string result type.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>collation</code> is empty or contains only space characters.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression)\n  id: ToSortClause(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: ToSortClause(DbExpression)\n  nameWithType: DbExpressionBuilder.ToSortClause(DbExpression)\n  fullName: DbExpressionBuilder.ToSortClause(DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbSortClause\"></xref> with an ascending sort order and default collation.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbSortClause ToSortClause (this System.Data.Common.CommandTrees.DbExpression key);\n    parameters:\n    - id: key\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: The expression that defines the sort key.\n    return:\n      type: System.Data.Common.CommandTrees.DbSortClause\n      description: A new sort clause with the given sort key and ascending sort order.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>key</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>key</code> does not have an order-comparable result type.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression,System.String)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression,System.String)\n  id: ToSortClause(System.Data.Common.CommandTrees.DbExpression,System.String)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: ToSortClause(DbExpression, String)\n  nameWithType: DbExpressionBuilder.ToSortClause(DbExpression, String)\n  fullName: DbExpressionBuilder.ToSortClause(DbExpression, String)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbSortClause\"></xref> with an ascending sort order and the specified collation.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbSortClause ToSortClause (this System.Data.Common.CommandTrees.DbExpression key, string collation);\n    parameters:\n    - id: key\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: The expression that defines the sort key.\n    - id: collation\n      type: System.String\n      description: The collation to sort under.\n    return:\n      type: System.Data.Common.CommandTrees.DbSortClause\n      description: A new sort clause with the given sort key and collation, and ascending sort order.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>key</code> is null.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>collation</code> is empty or contains only space characters.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>key</code> does not have an order-comparable result type.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression)\n  id: ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: ToSortClauseDescending(DbExpression)\n  nameWithType: DbExpressionBuilder.ToSortClauseDescending(DbExpression)\n  fullName: DbExpressionBuilder.ToSortClauseDescending(DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbSortClause\"></xref> with a descending sort order and default collation.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbSortClause ToSortClauseDescending (this System.Data.Common.CommandTrees.DbExpression key);\n    parameters:\n    - id: key\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: The expression that defines the sort key.\n    return:\n      type: System.Data.Common.CommandTrees.DbSortClause\n      description: A new sort clause with the given sort key and descending sort order.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>key</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>key</code> does not have an order-comparable result type.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression,System.String)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression,System.String)\n  id: ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression,System.String)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: ToSortClauseDescending(DbExpression, String)\n  nameWithType: DbExpressionBuilder.ToSortClauseDescending(DbExpression, String)\n  fullName: DbExpressionBuilder.ToSortClauseDescending(DbExpression, String)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbSortClause\"></xref> with a descending sort order and the specified collation.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbSortClause ToSortClauseDescending (this System.Data.Common.CommandTrees.DbExpression key, string collation);\n    parameters:\n    - id: key\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: The expression that defines the sort key.\n    - id: collation\n      type: System.String\n      description: The collation to sort under.\n    return:\n      type: System.Data.Common.CommandTrees.DbSortClause\n      description: A new sort clause with the given sort key and collation, and descending sort order.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>key</code> is null.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>collation</code> is empty or contains only space characters.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>key</code> does not have an order-comparable result type.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)\n  id: TreatAs(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: TreatAs(DbExpression, TypeUsage)\n  nameWithType: DbExpressionBuilder.TreatAs(DbExpression, TypeUsage)\n  fullName: DbExpressionBuilder.TreatAs(DbExpression, TypeUsage)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbTreatExpression\"></xref>.\n  remarks: DbTreatExpression requires that `argument` has a polymorphic result type, and that `treatType` is a type from the same type hierarchy as that result type.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbTreatExpression TreatAs (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage treatType);\n    parameters:\n    - id: argument\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression that specifies the instance.\n    - id: treatType\n      type: System.Data.Metadata.Edm.TypeUsage\n      description: Type metadata for the treat-as type.\n    return:\n      type: System.Data.Common.CommandTrees.DbTreatExpression\n      description: A new DbTreatExpression with the specified argument and type.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>argument</code> or <code>treatType</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>treatType</code> is not in the same type hierarchy as the result type of <code>argument</code>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.True\n  commentId: P:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.True\n  id: \"True\"\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: \"True\"\n  nameWithType: DbExpressionBuilder.True\n  fullName: DbExpressionBuilder.True\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Gets a <xref href=\"System.Data.Common.CommandTrees.DbConstantExpression\"></xref> with the Boolean value `true`.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbConstantExpression True { get; }\n    return:\n      type: System.Data.Common.CommandTrees.DbConstantExpression\n      description: A <xref href=\"System.Data.Common.CommandTrees.DbConstantExpression\"></xref> with the Boolean value `true`.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.True*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnaryMinus(System.Data.Common.CommandTrees.DbExpression)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnaryMinus(System.Data.Common.CommandTrees.DbExpression)\n  id: UnaryMinus(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: UnaryMinus(DbExpression)\n  nameWithType: DbExpressionBuilder.UnaryMinus(DbExpression)\n  fullName: DbExpressionBuilder.UnaryMinus(DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbArithmeticExpression\"></xref> that negates the value of the argument.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbArithmeticExpression UnaryMinus (this System.Data.Common.CommandTrees.DbExpression argument);\n    parameters:\n    - id: argument\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression that specifies the argument.\n    return:\n      type: System.Data.Common.CommandTrees.DbArithmeticExpression\n      description: A new DbArithmeticExpression representing the negation operation.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnaryMinus*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>argument</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: No numeric result type exists for <code>argument</code>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  id: Union(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Union(DbExpression, DbExpression)\n  nameWithType: DbExpressionBuilder.Union(DbExpression, DbExpression)\n  fullName: DbExpressionBuilder.Union(DbExpression, DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbExpression\"></xref> that computes the union of the left and right set arguments with duplicates removed.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbExpression Union (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);\n    parameters:\n    - id: left\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression that defines the left set argument.\n    - id: right\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression that defines the right set argument.\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: A new DbExpression that computes the union, without duplicates, of the the left and right arguments.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>left</code> or <code>right</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: No common collection result type with an equality-comparable element type exists between <code>left</code> and <code>right</code>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  id: UnionAll(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: UnionAll(DbExpression, DbExpression)\n  nameWithType: DbExpressionBuilder.UnionAll(DbExpression, DbExpression)\n  fullName: DbExpressionBuilder.UnionAll(DbExpression, DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbUnionAllExpression\"></xref> that computes the union of the left and right set arguments and does not remove duplicates.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbUnionAllExpression UnionAll (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);\n    parameters:\n    - id: left\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression that defines the left set argument.\n    - id: right\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression that defines the right set argument.\n    return:\n      type: System.Data.Common.CommandTrees.DbUnionAllExpression\n      description: A new DbUnionAllExpression that union, including duplicates, of the the left and right arguments.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>left</code> or <code>right</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: No common collection result type with an equality-comparable element type exists between <code>left</code> and <code>right</code>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Variable(System.Data.Metadata.Edm.TypeUsage,System.String)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Variable(System.Data.Metadata.Edm.TypeUsage,System.String)\n  id: Variable(System.Data.Metadata.Edm.TypeUsage,System.String)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Variable(TypeUsage, String)\n  nameWithType: DbExpressionBuilder.Variable(TypeUsage, String)\n  fullName: DbExpressionBuilder.Variable(TypeUsage, String)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbVariableReferenceExpression\"></xref> that references a variable with the specified name and type.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbVariableReferenceExpression Variable (this System.Data.Metadata.Edm.TypeUsage type, string name);\n    parameters:\n    - id: type\n      type: System.Data.Metadata.Edm.TypeUsage\n      description: The type of the referenced variable.\n    - id: name\n      type: System.String\n      description: The name of the referenced variable.\n    return:\n      type: System.Data.Common.CommandTrees.DbVariableReferenceExpression\n      description: A DbVariableReferenceExpression that represents a reference to a variable with the specified name and type. The result type of the expression will be the same as <code>type</code>.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Variable*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  id: Where(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Where(DbExpression, Func<DbExpression,DbExpression>)\n  nameWithType: DbExpressionBuilder.Where(DbExpression, Func<DbExpression,DbExpression>)\n  fullName: DbExpressionBuilder.Where(DbExpression, Func<DbExpression,DbExpression>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbFilterExpression\"></xref> that filters the elements in the given input set using the specified predicate.\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbFilterExpression Where (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> predicate);\n    parameters:\n    - id: source\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: An expression that specifies the input set.\n    - id: predicate\n      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}\n      description: A method representing the predicate to evaluate for each member of the input set.    This method must produce an expression with a Boolean result type that provides the predicate logic.\n    return:\n      type: System.Data.Common.CommandTrees.DbFilterExpression\n      description: A new DbQuantifierExpression that represents the Any operation.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The expression produced by <code>predicate</code> is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The expression produced by <code>predicate</code> does not have a Boolean result type.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Aggregate(EdmFunction, DbExpression)\n  nameWithType: DbExpressionBuilder.Aggregate(EdmFunction, DbExpression)\n  fullName: DbExpressionBuilder.Aggregate(EdmFunction, DbExpression)\n- uid: System.Data.Common.CommandTrees.DbFunctionAggregate\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbFunctionAggregate\n  nameWithType: DbFunctionAggregate\n  fullName: System.Data.Common.CommandTrees.DbFunctionAggregate\n- uid: System.Data.Metadata.Edm.EdmFunction\n  parent: System.Data.Metadata.Edm\n  isExternal: false\n  name: EdmFunction\n  nameWithType: EdmFunction\n  fullName: System.Data.Metadata.Edm.EdmFunction\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: AggregateDistinct(EdmFunction, DbExpression)\n  nameWithType: DbExpressionBuilder.AggregateDistinct(EdmFunction, DbExpression)\n  fullName: DbExpressionBuilder.AggregateDistinct(EdmFunction, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: All(DbExpression, Func<DbExpression,DbExpression>)\n  nameWithType: DbExpressionBuilder.All(DbExpression, Func<DbExpression,DbExpression>)\n  fullName: DbExpressionBuilder.All(DbExpression, Func<DbExpression,DbExpression>)\n- uid: System.Data.Common.CommandTrees.DbQuantifierExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbQuantifierExpression\n  nameWithType: DbQuantifierExpression\n  fullName: System.Data.Common.CommandTrees.DbQuantifierExpression\n- uid: System.Func`2\n  name: Func<T,TResult>\n  nameWithType: Func<T,TResult>\n  fullName: System.Func<T,TResult>\n- uid: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}\n  parent: System\n  isExternal: false\n  name: Func<DbExpression,DbExpression>\n  nameWithType: Func<DbExpression,DbExpression>\n  fullName: System.Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression>\n  spec.csharp:\n  - uid: System.Func`2\n    name: Func\n    nameWithType: Func\n    fullName: System.Func\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Data.Common.CommandTrees.DbExpression\n    name: DbExpression\n    nameWithType: DbExpression\n    fullName: System.Data.Common.CommandTrees.DbExpression\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Data.Common.CommandTrees.DbExpression\n    name: DbExpression\n    nameWithType: DbExpression\n    fullName: System.Data.Common.CommandTrees.DbExpression\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: All(DbExpressionBinding, DbExpression)\n  nameWithType: DbExpressionBuilder.All(DbExpressionBinding, DbExpression)\n  fullName: DbExpressionBuilder.All(DbExpressionBinding, DbExpression)\n- uid: System.Data.Common.CommandTrees.DbExpressionBinding\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpressionBinding\n  nameWithType: DbExpressionBinding\n  fullName: System.Data.Common.CommandTrees.DbExpressionBinding\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: And(DbExpression, DbExpression)\n  nameWithType: DbExpressionBuilder.And(DbExpression, DbExpression)\n  fullName: DbExpressionBuilder.And(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.DbAndExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbAndExpression\n  nameWithType: DbAndExpression\n  fullName: System.Data.Common.CommandTrees.DbAndExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Any(DbExpression)\n  nameWithType: DbExpressionBuilder.Any(DbExpression)\n  fullName: DbExpressionBuilder.Any(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Any(DbExpression, Func<DbExpression,DbExpression>)\n  nameWithType: DbExpressionBuilder.Any(DbExpression, Func<DbExpression,DbExpression>)\n  fullName: DbExpressionBuilder.Any(DbExpression, Func<DbExpression,DbExpression>)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Any(DbExpressionBinding, DbExpression)\n  nameWithType: DbExpressionBuilder.Any(DbExpressionBinding, DbExpression)\n  fullName: DbExpressionBuilder.Any(DbExpressionBinding, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbAggregate,System.String)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: As(DbAggregate, String)\n  nameWithType: DbExpressionBuilder.As(DbAggregate, String)\n  fullName: DbExpressionBuilder.As(DbAggregate, String)\n- uid: System.Collections.Generic.KeyValuePair`2\n  name: KeyValuePair<TKey,TValue>\n  nameWithType: KeyValuePair<TKey,TValue>\n  fullName: System.Collections.Generic.KeyValuePair<TKey,TValue>\n- uid: System.String\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.Common.CommandTrees.DbAggregate\n  name: DbAggregate\n  nameWithType: DbAggregate\n  fullName: System.Data.Common.CommandTrees.DbAggregate\n- uid: System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: KeyValuePair<String,DbAggregate>\n  nameWithType: KeyValuePair<String,DbAggregate>\n  fullName: System.Collections.Generic.KeyValuePair<System.String,System.Data.Common.CommandTrees.DbAggregate>\n  spec.csharp:\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    nameWithType: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Data.Common.CommandTrees.DbAggregate\n    name: DbAggregate\n    nameWithType: DbAggregate\n    fullName: System.Data.Common.CommandTrees.DbAggregate\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbExpression,System.String)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: As(DbExpression, String)\n  nameWithType: DbExpressionBuilder.As(DbExpression, String)\n  fullName: DbExpressionBuilder.As(DbExpression, String)\n- uid: System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: KeyValuePair<String,DbExpression>\n  nameWithType: KeyValuePair<String,DbExpression>\n  fullName: System.Collections.Generic.KeyValuePair<System.String,System.Data.Common.CommandTrees.DbExpression>\n  spec.csharp:\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    nameWithType: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Data.Common.CommandTrees.DbExpression\n    name: DbExpression\n    nameWithType: DbExpression\n    fullName: System.Data.Common.CommandTrees.DbExpression\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Bind(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Bind(DbExpression)\n  nameWithType: DbExpressionBuilder.Bind(DbExpression)\n  fullName: DbExpressionBuilder.Bind(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs(System.Data.Common.CommandTrees.DbExpression,System.String)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: BindAs(DbExpression, String)\n  nameWithType: DbExpressionBuilder.BindAs(DbExpression, String)\n  fullName: DbExpressionBuilder.BindAs(DbExpression, String)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Case(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Case(IEnumerable<DbExpression>, IEnumerable<DbExpression>, DbExpression)\n  nameWithType: DbExpressionBuilder.Case(IEnumerable<DbExpression>, IEnumerable<DbExpression>, DbExpression)\n  fullName: DbExpressionBuilder.Case(IEnumerable<DbExpression>, IEnumerable<DbExpression>, DbExpression)\n- uid: System.Data.Common.CommandTrees.DbCaseExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbCaseExpression\n  nameWithType: DbCaseExpression\n  fullName: System.Data.Common.CommandTrees.DbCaseExpression\n- uid: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<DbExpression>\n  nameWithType: IEnumerable<DbExpression>\n  fullName: System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpression>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Data.Common.CommandTrees.DbExpression\n    name: DbExpression\n    nameWithType: DbExpression\n    fullName: System.Data.Common.CommandTrees.DbExpression\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: CastTo(DbExpression, TypeUsage)\n  nameWithType: DbExpressionBuilder.CastTo(DbExpression, TypeUsage)\n  fullName: DbExpressionBuilder.CastTo(DbExpression, TypeUsage)\n- uid: System.Data.Common.CommandTrees.DbCastExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbCastExpression\n  nameWithType: DbCastExpression\n  fullName: System.Data.Common.CommandTrees.DbCastExpression\n- uid: System.Data.Metadata.Edm.TypeUsage\n  parent: System.Data.Metadata.Edm\n  isExternal: false\n  name: TypeUsage\n  nameWithType: TypeUsage\n  fullName: System.Data.Metadata.Edm.TypeUsage\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Data.Metadata.Edm.TypeUsage,System.Object)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Constant(TypeUsage, Object)\n  nameWithType: DbExpressionBuilder.Constant(TypeUsage, Object)\n  fullName: DbExpressionBuilder.Constant(TypeUsage, Object)\n- uid: System.Data.Common.CommandTrees.DbConstantExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbConstantExpression\n  nameWithType: DbConstantExpression\n  fullName: System.Data.Common.CommandTrees.DbConstantExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Object)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Constant(Object)\n  nameWithType: DbExpressionBuilder.Constant(Object)\n  fullName: DbExpressionBuilder.Constant(Object)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: CreateRef(EntitySet, IEnumerable<DbExpression>)\n  nameWithType: DbExpressionBuilder.CreateRef(EntitySet, IEnumerable<DbExpression>)\n  fullName: DbExpressionBuilder.CreateRef(EntitySet, IEnumerable<DbExpression>)\n- uid: System.Data.Common.CommandTrees.DbRefExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbRefExpression\n  nameWithType: DbRefExpression\n  fullName: System.Data.Common.CommandTrees.DbRefExpression\n- uid: System.Data.Metadata.Edm.EntitySet\n  parent: System.Data.Metadata.Edm\n  isExternal: false\n  name: EntitySet\n  nameWithType: EntitySet\n  fullName: System.Data.Metadata.Edm.EntitySet\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression[])\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: CreateRef(EntitySet, DbExpression[])\n  nameWithType: DbExpressionBuilder.CreateRef(EntitySet, DbExpression[])\n  fullName: DbExpressionBuilder.CreateRef(EntitySet, DbExpression[])\n- uid: System.Data.Common.CommandTrees.DbExpression[]\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression[]\n  nameWithType: DbExpression[]\n  fullName: System.Data.Common.CommandTrees.DbExpression[]\n  spec.csharp:\n  - uid: System.Data.Common.CommandTrees.DbExpression\n    name: DbExpression\n    nameWithType: DbExpression\n    fullName: System.Data.Common.CommandTrees.DbExpression\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: CreateRef(EntitySet, EntityType, IEnumerable<DbExpression>)\n  nameWithType: DbExpressionBuilder.CreateRef(EntitySet, EntityType, IEnumerable<DbExpression>)\n  fullName: DbExpressionBuilder.CreateRef(EntitySet, EntityType, IEnumerable<DbExpression>)\n- uid: System.Data.Metadata.Edm.EntityType\n  parent: System.Data.Metadata.Edm\n  isExternal: false\n  name: EntityType\n  nameWithType: EntityType\n  fullName: System.Data.Metadata.Edm.EntityType\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Data.Common.CommandTrees.DbExpression[])\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: CreateRef(EntitySet, EntityType, DbExpression[])\n  nameWithType: DbExpressionBuilder.CreateRef(EntitySet, EntityType, DbExpression[])\n  fullName: DbExpressionBuilder.CreateRef(EntitySet, EntityType, DbExpression[])\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: CrossApply(DbExpression, Func<DbExpression,KeyValuePair<String,DbExpression>>)\n  nameWithType: DbExpressionBuilder.CrossApply(DbExpression, Func<DbExpression,KeyValuePair<String,DbExpression>>)\n  fullName: DbExpressionBuilder.CrossApply(DbExpression, Func<DbExpression,KeyValuePair<String,DbExpression>>)\n- uid: System.Data.Common.CommandTrees.DbApplyExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbApplyExpression\n  nameWithType: DbApplyExpression\n  fullName: System.Data.Common.CommandTrees.DbApplyExpression\n- uid: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}}\n  parent: System\n  isExternal: false\n  name: Func<DbExpression,KeyValuePair<String,DbExpression>>\n  nameWithType: Func<DbExpression,KeyValuePair<String,DbExpression>>\n  fullName: System.Func<System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair<System.String,System.Data.Common.CommandTrees.DbExpression>>\n  spec.csharp:\n  - uid: System.Func`2\n    name: Func\n    nameWithType: Func\n    fullName: System.Func\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Data.Common.CommandTrees.DbExpression\n    name: DbExpression\n    nameWithType: DbExpression\n    fullName: System.Data.Common.CommandTrees.DbExpression\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    nameWithType: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Data.Common.CommandTrees.DbExpression\n    name: DbExpression\n    nameWithType: DbExpression\n    fullName: System.Data.Common.CommandTrees.DbExpression\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: CrossApply(DbExpressionBinding, DbExpressionBinding)\n  nameWithType: DbExpressionBuilder.CrossApply(DbExpressionBinding, DbExpressionBinding)\n  fullName: DbExpressionBuilder.CrossApply(DbExpressionBinding, DbExpressionBinding)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossJoin(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpressionBinding})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: CrossJoin(IEnumerable<DbExpressionBinding>)\n  nameWithType: DbExpressionBuilder.CrossJoin(IEnumerable<DbExpressionBinding>)\n  fullName: DbExpressionBuilder.CrossJoin(IEnumerable<DbExpressionBinding>)\n- uid: System.Data.Common.CommandTrees.DbCrossJoinExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbCrossJoinExpression\n  nameWithType: DbCrossJoinExpression\n  fullName: System.Data.Common.CommandTrees.DbCrossJoinExpression\n- uid: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpressionBinding}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<DbExpressionBinding>\n  nameWithType: IEnumerable<DbExpressionBinding>\n  fullName: System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpressionBinding>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Data.Common.CommandTrees.DbExpressionBinding\n    name: DbExpressionBinding\n    nameWithType: DbExpressionBinding\n    fullName: System.Data.Common.CommandTrees.DbExpressionBinding\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Deref(DbExpression)\n  nameWithType: DbExpressionBuilder.Deref(DbExpression)\n  fullName: DbExpressionBuilder.Deref(DbExpression)\n- uid: System.Data.Common.CommandTrees.DbDerefExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbDerefExpression\n  nameWithType: DbDerefExpression\n  fullName: System.Data.Common.CommandTrees.DbDerefExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Distinct(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Distinct(DbExpression)\n  nameWithType: DbExpressionBuilder.Distinct(DbExpression)\n  fullName: DbExpressionBuilder.Distinct(DbExpression)\n- uid: System.Data.Common.CommandTrees.DbDistinctExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbDistinctExpression\n  nameWithType: DbDistinctExpression\n  fullName: System.Data.Common.CommandTrees.DbDistinctExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Divide(DbExpression, DbExpression)\n  nameWithType: DbExpressionBuilder.Divide(DbExpression, DbExpression)\n  fullName: DbExpressionBuilder.Divide(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.DbArithmeticExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbArithmeticExpression\n  nameWithType: DbArithmeticExpression\n  fullName: System.Data.Common.CommandTrees.DbArithmeticExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Element(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Element(DbExpression)\n  nameWithType: DbExpressionBuilder.Element(DbExpression)\n  fullName: DbExpressionBuilder.Element(DbExpression)\n- uid: System.Data.Common.CommandTrees.DbElementExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbElementExpression\n  nameWithType: DbElementExpression\n  fullName: System.Data.Common.CommandTrees.DbElementExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Equal(DbExpression, DbExpression)\n  nameWithType: DbExpressionBuilder.Equal(DbExpression, DbExpression)\n  fullName: DbExpressionBuilder.Equal(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.DbComparisonExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbComparisonExpression\n  nameWithType: DbComparisonExpression\n  fullName: System.Data.Common.CommandTrees.DbComparisonExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Except(DbExpression, DbExpression)\n  nameWithType: DbExpressionBuilder.Except(DbExpression, DbExpression)\n  fullName: DbExpressionBuilder.Except(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.DbExceptExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExceptExpression\n  nameWithType: DbExceptExpression\n  fullName: System.Data.Common.CommandTrees.DbExceptExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Exists(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Exists(DbExpression)\n  nameWithType: DbExpressionBuilder.Exists(DbExpression)\n  fullName: DbExpressionBuilder.Exists(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.False\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: \"False\"\n  nameWithType: DbExpressionBuilder.False\n  fullName: DbExpressionBuilder.False\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Filter(DbExpressionBinding, DbExpression)\n  nameWithType: DbExpressionBuilder.Filter(DbExpressionBinding, DbExpression)\n  fullName: DbExpressionBuilder.Filter(DbExpressionBinding, DbExpression)\n- uid: System.Data.Common.CommandTrees.DbFilterExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbFilterExpression\n  nameWithType: DbFilterExpression\n  fullName: System.Data.Common.CommandTrees.DbFilterExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: FullOuterJoin(DbExpression, DbExpression, Func<DbExpression,DbExpression,DbExpression>)\n  nameWithType: DbExpressionBuilder.FullOuterJoin(DbExpression, DbExpression, Func<DbExpression,DbExpression,DbExpression>)\n  fullName: DbExpressionBuilder.FullOuterJoin(DbExpression, DbExpression, Func<DbExpression,DbExpression,DbExpression>)\n- uid: System.Data.Common.CommandTrees.DbJoinExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbJoinExpression\n  nameWithType: DbJoinExpression\n  fullName: System.Data.Common.CommandTrees.DbJoinExpression\n- uid: System.Func`3\n  name: Func<T1,T2,TResult>\n  nameWithType: Func<T1,T2,TResult>\n  fullName: System.Func<T1,T2,TResult>\n- uid: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}\n  parent: System\n  isExternal: false\n  name: Func<DbExpression,DbExpression,DbExpression>\n  nameWithType: Func<DbExpression,DbExpression,DbExpression>\n  fullName: System.Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression>\n  spec.csharp:\n  - uid: System.Func`3\n    name: Func\n    nameWithType: Func\n    fullName: System.Func\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Data.Common.CommandTrees.DbExpression\n    name: DbExpression\n    nameWithType: DbExpression\n    fullName: System.Data.Common.CommandTrees.DbExpression\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Data.Common.CommandTrees.DbExpression\n    name: DbExpression\n    nameWithType: DbExpression\n    fullName: System.Data.Common.CommandTrees.DbExpression\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Data.Common.CommandTrees.DbExpression\n    name: DbExpression\n    nameWithType: DbExpression\n    fullName: System.Data.Common.CommandTrees.DbExpression\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: FullOuterJoin(DbExpressionBinding, DbExpressionBinding, DbExpression)\n  nameWithType: DbExpressionBuilder.FullOuterJoin(DbExpressionBinding, DbExpressionBinding, DbExpression)\n  fullName: DbExpressionBuilder.FullOuterJoin(DbExpressionBinding, DbExpressionBinding, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: GetEntityRef(DbExpression)\n  nameWithType: DbExpressionBuilder.GetEntityRef(DbExpression)\n  fullName: DbExpressionBuilder.GetEntityRef(DbExpression)\n- uid: System.Data.Common.CommandTrees.DbEntityRefExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbEntityRefExpression\n  nameWithType: DbEntityRefExpression\n  fullName: System.Data.Common.CommandTrees.DbEntityRefExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: GetRefKey(DbExpression)\n  nameWithType: DbExpressionBuilder.GetRefKey(DbExpression)\n  fullName: DbExpressionBuilder.GetRefKey(DbExpression)\n- uid: System.Data.Common.CommandTrees.DbRefKeyExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbRefKeyExpression\n  nameWithType: DbRefKeyExpression\n  fullName: System.Data.Common.CommandTrees.DbRefKeyExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: GreaterThan(DbExpression, DbExpression)\n  nameWithType: DbExpressionBuilder.GreaterThan(DbExpression, DbExpression)\n  fullName: DbExpressionBuilder.GreaterThan(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: GreaterThanOrEqual(DbExpression, DbExpression)\n  nameWithType: DbExpressionBuilder.GreaterThanOrEqual(DbExpression, DbExpression)\n  fullName: DbExpressionBuilder.GreaterThanOrEqual(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBind(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: GroupBind(DbExpression)\n  nameWithType: DbExpressionBuilder.GroupBind(DbExpression)\n  fullName: DbExpressionBuilder.GroupBind(DbExpression)\n- uid: System.Data.Common.CommandTrees.DbGroupExpressionBinding\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbGroupExpressionBinding\n  nameWithType: DbGroupExpressionBinding\n  fullName: System.Data.Common.CommandTrees.DbGroupExpressionBinding\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs(System.Data.Common.CommandTrees.DbExpression,System.String,System.String)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: GroupBindAs(DbExpression, String, String)\n  nameWithType: DbExpressionBuilder.GroupBindAs(DbExpression, String, String)\n  fullName: DbExpressionBuilder.GroupBindAs(DbExpression, String, String)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy(System.Data.Common.CommandTrees.DbGroupExpressionBinding,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: GroupBy(DbGroupExpressionBinding, IEnumerable<KeyValuePair<String,DbExpression>>, IEnumerable<KeyValuePair<String,DbAggregate>>)\n  nameWithType: DbExpressionBuilder.GroupBy(DbGroupExpressionBinding, IEnumerable<KeyValuePair<String,DbExpression>>, IEnumerable<KeyValuePair<String,DbAggregate>>)\n  fullName: DbExpressionBuilder.GroupBy(DbGroupExpressionBinding, IEnumerable<KeyValuePair<String,DbExpression>>, IEnumerable<KeyValuePair<String,DbAggregate>>)\n- uid: System.Data.Common.CommandTrees.DbGroupByExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbGroupByExpression\n  nameWithType: DbGroupByExpression\n  fullName: System.Data.Common.CommandTrees.DbGroupByExpression\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<KeyValuePair<String,DbExpression>>\n  nameWithType: IEnumerable<KeyValuePair<String,DbExpression>>\n  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Data.Common.CommandTrees.DbExpression>>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    nameWithType: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Data.Common.CommandTrees.DbExpression\n    name: DbExpression\n    nameWithType: DbExpression\n    fullName: System.Data.Common.CommandTrees.DbExpression\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<KeyValuePair<String,DbAggregate>>\n  nameWithType: IEnumerable<KeyValuePair<String,DbAggregate>>\n  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Data.Common.CommandTrees.DbAggregate>>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    nameWithType: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Data.Common.CommandTrees.DbAggregate\n    name: DbAggregate\n    nameWithType: DbAggregate\n    fullName: System.Data.Common.CommandTrees.DbAggregate\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: InnerJoin(DbExpression, DbExpression, Func<DbExpression,DbExpression,DbExpression>)\n  nameWithType: DbExpressionBuilder.InnerJoin(DbExpression, DbExpression, Func<DbExpression,DbExpression,DbExpression>)\n  fullName: DbExpressionBuilder.InnerJoin(DbExpression, DbExpression, Func<DbExpression,DbExpression,DbExpression>)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: InnerJoin(DbExpressionBinding, DbExpressionBinding, DbExpression)\n  nameWithType: DbExpressionBuilder.InnerJoin(DbExpressionBinding, DbExpressionBinding, DbExpression)\n  fullName: DbExpressionBuilder.InnerJoin(DbExpressionBinding, DbExpressionBinding, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Intersect(DbExpression, DbExpression)\n  nameWithType: DbExpressionBuilder.Intersect(DbExpression, DbExpression)\n  fullName: DbExpressionBuilder.Intersect(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.DbIntersectExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbIntersectExpression\n  nameWithType: DbIntersectExpression\n  fullName: System.Data.Common.CommandTrees.DbIntersectExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression[])\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Invoke(EdmFunction, DbExpression[])\n  nameWithType: DbExpressionBuilder.Invoke(EdmFunction, DbExpression[])\n  fullName: DbExpressionBuilder.Invoke(EdmFunction, DbExpression[])\n- uid: System.Data.Common.CommandTrees.DbFunctionExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbFunctionExpression\n  nameWithType: DbFunctionExpression\n  fullName: System.Data.Common.CommandTrees.DbFunctionExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Invoke(EdmFunction, IEnumerable<DbExpression>)\n  nameWithType: DbExpressionBuilder.Invoke(EdmFunction, IEnumerable<DbExpression>)\n  fullName: DbExpressionBuilder.Invoke(EdmFunction, IEnumerable<DbExpression>)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Invoke(DbLambda, IEnumerable<DbExpression>)\n  nameWithType: DbExpressionBuilder.Invoke(DbLambda, IEnumerable<DbExpression>)\n  fullName: DbExpressionBuilder.Invoke(DbLambda, IEnumerable<DbExpression>)\n- uid: System.Data.Common.CommandTrees.DbLambdaExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbLambdaExpression\n  nameWithType: DbLambdaExpression\n  fullName: System.Data.Common.CommandTrees.DbLambdaExpression\n- uid: System.Data.Common.CommandTrees.DbLambda\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbLambda\n  nameWithType: DbLambda\n  fullName: System.Data.Common.CommandTrees.DbLambda\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda,System.Data.Common.CommandTrees.DbExpression[])\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Invoke(DbLambda, DbExpression[])\n  nameWithType: DbExpressionBuilder.Invoke(DbLambda, DbExpression[])\n  fullName: DbExpressionBuilder.Invoke(DbLambda, DbExpression[])\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsEmpty(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: IsEmpty(DbExpression)\n  nameWithType: DbExpressionBuilder.IsEmpty(DbExpression)\n  fullName: DbExpressionBuilder.IsEmpty(DbExpression)\n- uid: System.Data.Common.CommandTrees.DbIsEmptyExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbIsEmptyExpression\n  nameWithType: DbIsEmptyExpression\n  fullName: System.Data.Common.CommandTrees.DbIsEmptyExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsNull(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: IsNull(DbExpression)\n  nameWithType: DbExpressionBuilder.IsNull(DbExpression)\n  fullName: DbExpressionBuilder.IsNull(DbExpression)\n- uid: System.Data.Common.CommandTrees.DbIsNullExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbIsNullExpression\n  nameWithType: DbIsNullExpression\n  fullName: System.Data.Common.CommandTrees.DbIsNullExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: IsOf(DbExpression, TypeUsage)\n  nameWithType: DbExpressionBuilder.IsOf(DbExpression, TypeUsage)\n  fullName: DbExpressionBuilder.IsOf(DbExpression, TypeUsage)\n- uid: System.Data.Common.CommandTrees.DbIsOfExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbIsOfExpression\n  nameWithType: DbIsOfExpression\n  fullName: System.Data.Common.CommandTrees.DbIsOfExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: IsOfOnly(DbExpression, TypeUsage)\n  nameWithType: DbExpressionBuilder.IsOfOnly(DbExpression, TypeUsage)\n  fullName: DbExpressionBuilder.IsOfOnly(DbExpression, TypeUsage)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Join(DbExpression, DbExpression, Func<DbExpression,DbExpression>, Func<DbExpression,DbExpression>)\n  nameWithType: DbExpressionBuilder.Join(DbExpression, DbExpression, Func<DbExpression,DbExpression>, Func<DbExpression,DbExpression>)\n  fullName: DbExpressionBuilder.Join(DbExpression, DbExpression, Func<DbExpression,DbExpression>, Func<DbExpression,DbExpression>)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Join<TSelector>(DbExpression, DbExpression, Func<DbExpression,DbExpression>, Func<DbExpression,DbExpression>, Func<DbExpression,DbExpression,TSelector>)\n  nameWithType: DbExpressionBuilder.Join<TSelector>(DbExpression, DbExpression, Func<DbExpression,DbExpression>, Func<DbExpression,DbExpression>, Func<DbExpression,DbExpression,TSelector>)\n  fullName: DbExpressionBuilder.Join<TSelector>(DbExpression, DbExpression, Func<DbExpression,DbExpression>, Func<DbExpression,DbExpression>, Func<DbExpression,DbExpression,TSelector>)\n- uid: System.Data.Common.CommandTrees.DbProjectExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbProjectExpression\n  nameWithType: DbProjectExpression\n  fullName: System.Data.Common.CommandTrees.DbProjectExpression\n- uid: TSelector\n  name: TSelector\n  nameWithType: TSelector\n  fullName: TSelector\n- uid: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector}\n  parent: System\n  isExternal: false\n  name: Func<DbExpression,DbExpression,TSelector>\n  nameWithType: Func<DbExpression,DbExpression,TSelector>\n  fullName: System.Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector>\n  spec.csharp:\n  - uid: System.Func`3\n    name: Func\n    nameWithType: Func\n    fullName: System.Func\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Data.Common.CommandTrees.DbExpression\n    name: DbExpression\n    nameWithType: DbExpression\n    fullName: System.Data.Common.CommandTrees.DbExpression\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Data.Common.CommandTrees.DbExpression\n    name: DbExpression\n    nameWithType: DbExpression\n    fullName: System.Data.Common.CommandTrees.DbExpression\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TSelector\n    name: TSelector\n    nameWithType: TSelector\n    fullName: TSelector\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Lambda(DbExpression, IEnumerable<DbVariableReferenceExpression>)\n  nameWithType: DbExpressionBuilder.Lambda(DbExpression, IEnumerable<DbVariableReferenceExpression>)\n  fullName: DbExpressionBuilder.Lambda(DbExpression, IEnumerable<DbVariableReferenceExpression>)\n- uid: System.Data.Common.CommandTrees.DbVariableReferenceExpression\n  name: DbVariableReferenceExpression\n  nameWithType: DbVariableReferenceExpression\n  fullName: System.Data.Common.CommandTrees.DbVariableReferenceExpression\n- uid: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<DbVariableReferenceExpression>\n  nameWithType: IEnumerable<DbVariableReferenceExpression>\n  fullName: System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbVariableReferenceExpression>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Data.Common.CommandTrees.DbVariableReferenceExpression\n    name: DbVariableReferenceExpression\n    nameWithType: DbVariableReferenceExpression\n    fullName: System.Data.Common.CommandTrees.DbVariableReferenceExpression\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbVariableReferenceExpression[])\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Lambda(DbExpression, DbVariableReferenceExpression[])\n  nameWithType: DbExpressionBuilder.Lambda(DbExpression, DbVariableReferenceExpression[])\n  fullName: DbExpressionBuilder.Lambda(DbExpression, DbVariableReferenceExpression[])\n- uid: System.Data.Common.CommandTrees.DbVariableReferenceExpression[]\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbVariableReferenceExpression[]\n  nameWithType: DbVariableReferenceExpression[]\n  fullName: System.Data.Common.CommandTrees.DbVariableReferenceExpression[]\n  spec.csharp:\n  - uid: System.Data.Common.CommandTrees.DbVariableReferenceExpression\n    name: DbVariableReferenceExpression\n    nameWithType: DbVariableReferenceExpression\n    fullName: System.Data.Common.CommandTrees.DbVariableReferenceExpression\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: LeftOuterJoin(DbExpressionBinding, DbExpressionBinding, DbExpression)\n  nameWithType: DbExpressionBuilder.LeftOuterJoin(DbExpressionBinding, DbExpressionBinding, DbExpression)\n  fullName: DbExpressionBuilder.LeftOuterJoin(DbExpressionBinding, DbExpressionBinding, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: LeftOuterJoin(DbExpression, DbExpression, Func<DbExpression,DbExpression,DbExpression>)\n  nameWithType: DbExpressionBuilder.LeftOuterJoin(DbExpression, DbExpression, Func<DbExpression,DbExpression,DbExpression>)\n  fullName: DbExpressionBuilder.LeftOuterJoin(DbExpression, DbExpression, Func<DbExpression,DbExpression,DbExpression>)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: LessThan(DbExpression, DbExpression)\n  nameWithType: DbExpressionBuilder.LessThan(DbExpression, DbExpression)\n  fullName: DbExpressionBuilder.LessThan(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: LessThanOrEqual(DbExpression, DbExpression)\n  nameWithType: DbExpressionBuilder.LessThanOrEqual(DbExpression, DbExpression)\n  fullName: DbExpressionBuilder.LessThanOrEqual(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Like(DbExpression, DbExpression)\n  nameWithType: DbExpressionBuilder.Like(DbExpression, DbExpression)\n  fullName: DbExpressionBuilder.Like(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.DbLikeExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbLikeExpression\n  nameWithType: DbLikeExpression\n  fullName: System.Data.Common.CommandTrees.DbLikeExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Like(DbExpression, DbExpression, DbExpression)\n  nameWithType: DbExpressionBuilder.Like(DbExpression, DbExpression, DbExpression)\n  fullName: DbExpressionBuilder.Like(DbExpression, DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Limit(DbExpression, DbExpression)\n  nameWithType: DbExpressionBuilder.Limit(DbExpression, DbExpression)\n  fullName: DbExpressionBuilder.Limit(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.DbLimitExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbLimitExpression\n  nameWithType: DbLimitExpression\n  fullName: System.Data.Common.CommandTrees.DbLimitExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Minus(DbExpression, DbExpression)\n  nameWithType: DbExpressionBuilder.Minus(DbExpression, DbExpression)\n  fullName: DbExpressionBuilder.Minus(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Modulo(DbExpression, DbExpression)\n  nameWithType: DbExpressionBuilder.Modulo(DbExpression, DbExpression)\n  fullName: DbExpressionBuilder.Modulo(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Multiply(DbExpression, DbExpression)\n  nameWithType: DbExpressionBuilder.Multiply(DbExpression, DbExpression)\n  fullName: DbExpressionBuilder.Multiply(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Navigate(DbExpression, RelationshipEndMember, RelationshipEndMember)\n  nameWithType: DbExpressionBuilder.Navigate(DbExpression, RelationshipEndMember, RelationshipEndMember)\n  fullName: DbExpressionBuilder.Navigate(DbExpression, RelationshipEndMember, RelationshipEndMember)\n- uid: System.Data.Common.CommandTrees.DbRelationshipNavigationExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbRelationshipNavigationExpression\n  nameWithType: DbRelationshipNavigationExpression\n  fullName: System.Data.Common.CommandTrees.DbRelationshipNavigationExpression\n- uid: System.Data.Metadata.Edm.RelationshipEndMember\n  parent: System.Data.Metadata.Edm\n  isExternal: false\n  name: RelationshipEndMember\n  nameWithType: RelationshipEndMember\n  fullName: System.Data.Metadata.Edm.RelationshipEndMember\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Metadata.Edm.RelationshipType,System.String,System.String,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Navigate(RelationshipType, String, String, DbExpression)\n  nameWithType: DbExpressionBuilder.Navigate(RelationshipType, String, String, DbExpression)\n  fullName: DbExpressionBuilder.Navigate(RelationshipType, String, String, DbExpression)\n- uid: System.Data.Metadata.Edm.RelationshipType\n  parent: System.Data.Metadata.Edm\n  isExternal: false\n  name: RelationshipType\n  nameWithType: RelationshipType\n  fullName: System.Data.Metadata.Edm.RelationshipType\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Negate(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Negate(DbExpression)\n  nameWithType: DbExpressionBuilder.Negate(DbExpression)\n  fullName: DbExpressionBuilder.Negate(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: New(TypeUsage, IEnumerable<DbExpression>)\n  nameWithType: DbExpressionBuilder.New(TypeUsage, IEnumerable<DbExpression>)\n  fullName: DbExpressionBuilder.New(TypeUsage, IEnumerable<DbExpression>)\n- uid: System.Data.Common.CommandTrees.DbNewInstanceExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbNewInstanceExpression\n  nameWithType: DbNewInstanceExpression\n  fullName: System.Data.Common.CommandTrees.DbNewInstanceExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression[])\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: New(TypeUsage, DbExpression[])\n  nameWithType: DbExpressionBuilder.New(TypeUsage, DbExpression[])\n  fullName: DbExpressionBuilder.New(TypeUsage, DbExpression[])\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: NewCollection(IEnumerable<DbExpression>)\n  nameWithType: DbExpressionBuilder.NewCollection(IEnumerable<DbExpression>)\n  fullName: DbExpressionBuilder.NewCollection(IEnumerable<DbExpression>)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Data.Common.CommandTrees.DbExpression[])\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: NewCollection(DbExpression[])\n  nameWithType: DbExpressionBuilder.NewCollection(DbExpression[])\n  fullName: DbExpressionBuilder.NewCollection(DbExpression[])\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewEmptyCollection(System.Data.Metadata.Edm.TypeUsage)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: NewEmptyCollection(TypeUsage)\n  nameWithType: DbExpressionBuilder.NewEmptyCollection(TypeUsage)\n  fullName: DbExpressionBuilder.NewEmptyCollection(TypeUsage)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: NewRow(IEnumerable<KeyValuePair<String,DbExpression>>)\n  nameWithType: DbExpressionBuilder.NewRow(IEnumerable<KeyValuePair<String,DbExpression>>)\n  fullName: DbExpressionBuilder.NewRow(IEnumerable<KeyValuePair<String,DbExpression>>)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Not(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Not(DbExpression)\n  nameWithType: DbExpressionBuilder.Not(DbExpression)\n  fullName: DbExpressionBuilder.Not(DbExpression)\n- uid: System.Data.Common.CommandTrees.DbNotExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbNotExpression\n  nameWithType: DbNotExpression\n  fullName: System.Data.Common.CommandTrees.DbNotExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: NotEqual(DbExpression, DbExpression)\n  nameWithType: DbExpressionBuilder.NotEqual(DbExpression, DbExpression)\n  fullName: DbExpressionBuilder.NotEqual(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Null(System.Data.Metadata.Edm.TypeUsage)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Null(TypeUsage)\n  nameWithType: DbExpressionBuilder.Null(TypeUsage)\n  fullName: DbExpressionBuilder.Null(TypeUsage)\n- uid: System.Data.Common.CommandTrees.DbNullExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbNullExpression\n  nameWithType: DbNullExpression\n  fullName: System.Data.Common.CommandTrees.DbNullExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: OfType(DbExpression, TypeUsage)\n  nameWithType: DbExpressionBuilder.OfType(DbExpression, TypeUsage)\n  fullName: DbExpressionBuilder.OfType(DbExpression, TypeUsage)\n- uid: System.Data.Common.CommandTrees.DbOfTypeExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbOfTypeExpression\n  nameWithType: DbOfTypeExpression\n  fullName: System.Data.Common.CommandTrees.DbOfTypeExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: OfTypeOnly(DbExpression, TypeUsage)\n  nameWithType: DbExpressionBuilder.OfTypeOnly(DbExpression, TypeUsage)\n  fullName: DbExpressionBuilder.OfTypeOnly(DbExpression, TypeUsage)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Or(DbExpression, DbExpression)\n  nameWithType: DbExpressionBuilder.Or(DbExpression, DbExpression)\n  fullName: DbExpressionBuilder.Or(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.DbOrExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbOrExpression\n  nameWithType: DbOrExpression\n  fullName: System.Data.Common.CommandTrees.DbOrExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: OrderBy(DbExpression, Func<DbExpression,DbExpression>)\n  nameWithType: DbExpressionBuilder.OrderBy(DbExpression, Func<DbExpression,DbExpression>)\n  fullName: DbExpressionBuilder.OrderBy(DbExpression, Func<DbExpression,DbExpression>)\n- uid: System.Data.Common.CommandTrees.DbSortExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbSortExpression\n  nameWithType: DbSortExpression\n  fullName: System.Data.Common.CommandTrees.DbSortExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: OrderBy(DbExpression, Func<DbExpression,DbExpression>, String)\n  nameWithType: DbExpressionBuilder.OrderBy(DbExpression, Func<DbExpression,DbExpression>, String)\n  fullName: DbExpressionBuilder.OrderBy(DbExpression, Func<DbExpression,DbExpression>, String)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: OrderByDescending(DbExpression, Func<DbExpression,DbExpression>)\n  nameWithType: DbExpressionBuilder.OrderByDescending(DbExpression, Func<DbExpression,DbExpression>)\n  fullName: DbExpressionBuilder.OrderByDescending(DbExpression, Func<DbExpression,DbExpression>)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: OrderByDescending(DbExpression, Func<DbExpression,DbExpression>, String)\n  nameWithType: DbExpressionBuilder.OrderByDescending(DbExpression, Func<DbExpression,DbExpression>, String)\n  fullName: DbExpressionBuilder.OrderByDescending(DbExpression, Func<DbExpression,DbExpression>, String)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: OuterApply(DbExpression, Func<DbExpression,KeyValuePair<String,DbExpression>>)\n  nameWithType: DbExpressionBuilder.OuterApply(DbExpression, Func<DbExpression,KeyValuePair<String,DbExpression>>)\n  fullName: DbExpressionBuilder.OuterApply(DbExpression, Func<DbExpression,KeyValuePair<String,DbExpression>>)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: OuterApply(DbExpressionBinding, DbExpressionBinding)\n  nameWithType: DbExpressionBuilder.OuterApply(DbExpressionBinding, DbExpressionBinding)\n  fullName: DbExpressionBuilder.OuterApply(DbExpressionBinding, DbExpressionBinding)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Parameter(System.Data.Metadata.Edm.TypeUsage,System.String)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Parameter(TypeUsage, String)\n  nameWithType: DbExpressionBuilder.Parameter(TypeUsage, String)\n  fullName: DbExpressionBuilder.Parameter(TypeUsage, String)\n- uid: System.Data.Common.CommandTrees.DbParameterReferenceExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbParameterReferenceExpression\n  nameWithType: DbParameterReferenceExpression\n  fullName: System.Data.Common.CommandTrees.DbParameterReferenceExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Plus(DbExpression, DbExpression)\n  nameWithType: DbExpressionBuilder.Plus(DbExpression, DbExpression)\n  fullName: DbExpressionBuilder.Plus(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Project(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Project(DbExpressionBinding, DbExpression)\n  nameWithType: DbExpressionBuilder.Project(DbExpressionBinding, DbExpression)\n  fullName: DbExpressionBuilder.Project(DbExpressionBinding, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EdmProperty)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Property(DbExpression, EdmProperty)\n  nameWithType: DbExpressionBuilder.Property(DbExpression, EdmProperty)\n  fullName: DbExpressionBuilder.Property(DbExpression, EdmProperty)\n- uid: System.Data.Common.CommandTrees.DbPropertyExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbPropertyExpression\n  nameWithType: DbPropertyExpression\n  fullName: System.Data.Common.CommandTrees.DbPropertyExpression\n- uid: System.Data.Metadata.Edm.EdmProperty\n  parent: System.Data.Metadata.Edm\n  isExternal: false\n  name: EdmProperty\n  nameWithType: EdmProperty\n  fullName: System.Data.Metadata.Edm.EdmProperty\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.NavigationProperty)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Property(DbExpression, NavigationProperty)\n  nameWithType: DbExpressionBuilder.Property(DbExpression, NavigationProperty)\n  fullName: DbExpressionBuilder.Property(DbExpression, NavigationProperty)\n- uid: System.Data.Metadata.Edm.NavigationProperty\n  parent: System.Data.Metadata.Edm\n  isExternal: false\n  name: NavigationProperty\n  nameWithType: NavigationProperty\n  fullName: System.Data.Metadata.Edm.NavigationProperty\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Property(DbExpression, RelationshipEndMember)\n  nameWithType: DbExpressionBuilder.Property(DbExpression, RelationshipEndMember)\n  fullName: DbExpressionBuilder.Property(DbExpression, RelationshipEndMember)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.String)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Property(DbExpression, String)\n  nameWithType: DbExpressionBuilder.Property(DbExpression, String)\n  fullName: DbExpressionBuilder.Property(DbExpression, String)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: RefFromKey(EntitySet, DbExpression)\n  nameWithType: DbExpressionBuilder.RefFromKey(EntitySet, DbExpression)\n  fullName: DbExpressionBuilder.RefFromKey(EntitySet, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EntityType)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: RefFromKey(EntitySet, DbExpression, EntityType)\n  nameWithType: DbExpressionBuilder.RefFromKey(EntitySet, DbExpression, EntityType)\n  fullName: DbExpressionBuilder.RefFromKey(EntitySet, DbExpression, EntityType)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Scan(System.Data.Metadata.Edm.EntitySetBase)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Scan(EntitySetBase)\n  nameWithType: DbExpressionBuilder.Scan(EntitySetBase)\n  fullName: DbExpressionBuilder.Scan(EntitySetBase)\n- uid: System.Data.Common.CommandTrees.DbScanExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbScanExpression\n  nameWithType: DbScanExpression\n  fullName: System.Data.Common.CommandTrees.DbScanExpression\n- uid: System.Data.Metadata.Edm.EntitySetBase\n  parent: System.Data.Metadata.Edm\n  isExternal: false\n  name: EntitySetBase\n  nameWithType: EntitySetBase\n  fullName: System.Data.Metadata.Edm.EntitySetBase\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,``0})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Select<TProjection>(DbExpression, Func<DbExpression,TProjection>)\n  nameWithType: DbExpressionBuilder.Select<TProjection>(DbExpression, Func<DbExpression,TProjection>)\n  fullName: DbExpressionBuilder.Select<TProjection>(DbExpression, Func<DbExpression,TProjection>)\n- uid: TProjection\n  name: TProjection\n  nameWithType: TProjection\n  fullName: TProjection\n- uid: System.Func{System.Data.Common.CommandTrees.DbExpression,TProjection}\n  parent: System\n  isExternal: false\n  name: Func<DbExpression,TProjection>\n  nameWithType: Func<DbExpression,TProjection>\n  fullName: System.Func<System.Data.Common.CommandTrees.DbExpression,TProjection>\n  spec.csharp:\n  - uid: System.Func`2\n    name: Func\n    nameWithType: Func\n    fullName: System.Func\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Data.Common.CommandTrees.DbExpression\n    name: DbExpression\n    nameWithType: DbExpression\n    fullName: System.Data.Common.CommandTrees.DbExpression\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TProjection\n    name: TProjection\n    nameWithType: TProjection\n    fullName: TProjection\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: SelectMany(DbExpression, Func<DbExpression,DbExpression>)\n  nameWithType: DbExpressionBuilder.SelectMany(DbExpression, Func<DbExpression,DbExpression>)\n  fullName: DbExpressionBuilder.SelectMany(DbExpression, Func<DbExpression,DbExpression>)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: SelectMany<TSelector>(DbExpression, Func<DbExpression,DbExpression>, Func<DbExpression,DbExpression,TSelector>)\n  nameWithType: DbExpressionBuilder.SelectMany<TSelector>(DbExpression, Func<DbExpression,DbExpression>, Func<DbExpression,DbExpression,TSelector>)\n  fullName: DbExpressionBuilder.SelectMany<TSelector>(DbExpression, Func<DbExpression,DbExpression>, Func<DbExpression,DbExpression,TSelector>)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbSortExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Skip(DbSortExpression, DbExpression)\n  nameWithType: DbExpressionBuilder.Skip(DbSortExpression, DbExpression)\n  fullName: DbExpressionBuilder.Skip(DbSortExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.DbSkipExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbSkipExpression\n  nameWithType: DbSkipExpression\n  fullName: System.Data.Common.CommandTrees.DbSkipExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause},System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Skip(DbExpressionBinding, IEnumerable<DbSortClause>, DbExpression)\n  nameWithType: DbExpressionBuilder.Skip(DbExpressionBinding, IEnumerable<DbSortClause>, DbExpression)\n  fullName: DbExpressionBuilder.Skip(DbExpressionBinding, IEnumerable<DbSortClause>, DbExpression)\n- uid: System.Data.Common.CommandTrees.DbSortClause\n  name: DbSortClause\n  nameWithType: DbSortClause\n  fullName: System.Data.Common.CommandTrees.DbSortClause\n- uid: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<DbSortClause>\n  nameWithType: IEnumerable<DbSortClause>\n  fullName: System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbSortClause>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Data.Common.CommandTrees.DbSortClause\n    name: DbSortClause\n    nameWithType: DbSortClause\n    fullName: System.Data.Common.CommandTrees.DbSortClause\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Sort(DbExpressionBinding, IEnumerable<DbSortClause>)\n  nameWithType: DbExpressionBuilder.Sort(DbExpressionBinding, IEnumerable<DbSortClause>)\n  fullName: DbExpressionBuilder.Sort(DbExpressionBinding, IEnumerable<DbSortClause>)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Take(DbExpression, DbExpression)\n  nameWithType: DbExpressionBuilder.Take(DbExpression, DbExpression)\n  fullName: DbExpressionBuilder.Take(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: ThenBy(DbSortExpression, Func<DbExpression,DbExpression>, String)\n  nameWithType: DbExpressionBuilder.ThenBy(DbSortExpression, Func<DbExpression,DbExpression>, String)\n  fullName: DbExpressionBuilder.ThenBy(DbSortExpression, Func<DbExpression,DbExpression>, String)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: ThenBy(DbSortExpression, Func<DbExpression,DbExpression>)\n  nameWithType: DbExpressionBuilder.ThenBy(DbSortExpression, Func<DbExpression,DbExpression>)\n  fullName: DbExpressionBuilder.ThenBy(DbSortExpression, Func<DbExpression,DbExpression>)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: ThenByDescending(DbSortExpression, Func<DbExpression,DbExpression>)\n  nameWithType: DbExpressionBuilder.ThenByDescending(DbSortExpression, Func<DbExpression,DbExpression>)\n  fullName: DbExpressionBuilder.ThenByDescending(DbSortExpression, Func<DbExpression,DbExpression>)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: ThenByDescending(DbSortExpression, Func<DbExpression,DbExpression>, String)\n  nameWithType: DbExpressionBuilder.ThenByDescending(DbSortExpression, Func<DbExpression,DbExpression>, String)\n  fullName: DbExpressionBuilder.ThenByDescending(DbSortExpression, Func<DbExpression,DbExpression>, String)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: ToSortClause(DbExpression)\n  nameWithType: DbExpressionBuilder.ToSortClause(DbExpression)\n  fullName: DbExpressionBuilder.ToSortClause(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression,System.String)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: ToSortClause(DbExpression, String)\n  nameWithType: DbExpressionBuilder.ToSortClause(DbExpression, String)\n  fullName: DbExpressionBuilder.ToSortClause(DbExpression, String)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: ToSortClauseDescending(DbExpression)\n  nameWithType: DbExpressionBuilder.ToSortClauseDescending(DbExpression)\n  fullName: DbExpressionBuilder.ToSortClauseDescending(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression,System.String)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: ToSortClauseDescending(DbExpression, String)\n  nameWithType: DbExpressionBuilder.ToSortClauseDescending(DbExpression, String)\n  fullName: DbExpressionBuilder.ToSortClauseDescending(DbExpression, String)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: TreatAs(DbExpression, TypeUsage)\n  nameWithType: DbExpressionBuilder.TreatAs(DbExpression, TypeUsage)\n  fullName: DbExpressionBuilder.TreatAs(DbExpression, TypeUsage)\n- uid: System.Data.Common.CommandTrees.DbTreatExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbTreatExpression\n  nameWithType: DbTreatExpression\n  fullName: System.Data.Common.CommandTrees.DbTreatExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.True\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: \"True\"\n  nameWithType: DbExpressionBuilder.True\n  fullName: DbExpressionBuilder.True\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnaryMinus(System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: UnaryMinus(DbExpression)\n  nameWithType: DbExpressionBuilder.UnaryMinus(DbExpression)\n  fullName: DbExpressionBuilder.UnaryMinus(DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Union(DbExpression, DbExpression)\n  nameWithType: DbExpressionBuilder.Union(DbExpression, DbExpression)\n  fullName: DbExpressionBuilder.Union(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: UnionAll(DbExpression, DbExpression)\n  nameWithType: DbExpressionBuilder.UnionAll(DbExpression, DbExpression)\n  fullName: DbExpressionBuilder.UnionAll(DbExpression, DbExpression)\n- uid: System.Data.Common.CommandTrees.DbUnionAllExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbUnionAllExpression\n  nameWithType: DbUnionAllExpression\n  fullName: System.Data.Common.CommandTrees.DbUnionAllExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Variable(System.Data.Metadata.Edm.TypeUsage,System.String)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Variable(TypeUsage, String)\n  nameWithType: DbExpressionBuilder.Variable(TypeUsage, String)\n  fullName: DbExpressionBuilder.Variable(TypeUsage, String)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Where(DbExpression, Func<DbExpression,DbExpression>)\n  nameWithType: DbExpressionBuilder.Where(DbExpression, Func<DbExpression,DbExpression>)\n  fullName: DbExpressionBuilder.Where(DbExpression, Func<DbExpression,DbExpression>)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Aggregate\n  nameWithType: DbExpressionBuilder.Aggregate\n  fullName: DbExpressionBuilder.Aggregate\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: AggregateDistinct\n  nameWithType: DbExpressionBuilder.AggregateDistinct\n  fullName: DbExpressionBuilder.AggregateDistinct\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: All\n  nameWithType: DbExpressionBuilder.All\n  fullName: DbExpressionBuilder.All\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: And\n  nameWithType: DbExpressionBuilder.And\n  fullName: DbExpressionBuilder.And\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Any\n  nameWithType: DbExpressionBuilder.Any\n  fullName: DbExpressionBuilder.Any\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: As\n  nameWithType: DbExpressionBuilder.As\n  fullName: DbExpressionBuilder.As\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Bind*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Bind\n  nameWithType: DbExpressionBuilder.Bind\n  fullName: DbExpressionBuilder.Bind\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: BindAs\n  nameWithType: DbExpressionBuilder.BindAs\n  fullName: DbExpressionBuilder.BindAs\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Case*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Case\n  nameWithType: DbExpressionBuilder.Case\n  fullName: DbExpressionBuilder.Case\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: CastTo\n  nameWithType: DbExpressionBuilder.CastTo\n  fullName: DbExpressionBuilder.CastTo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Constant\n  nameWithType: DbExpressionBuilder.Constant\n  fullName: DbExpressionBuilder.Constant\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: CreateRef\n  nameWithType: DbExpressionBuilder.CreateRef\n  fullName: DbExpressionBuilder.CreateRef\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: CrossApply\n  nameWithType: DbExpressionBuilder.CrossApply\n  fullName: DbExpressionBuilder.CrossApply\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossJoin*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: CrossJoin\n  nameWithType: DbExpressionBuilder.CrossJoin\n  fullName: DbExpressionBuilder.CrossJoin\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Deref\n  nameWithType: DbExpressionBuilder.Deref\n  fullName: DbExpressionBuilder.Deref\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Distinct*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Distinct\n  nameWithType: DbExpressionBuilder.Distinct\n  fullName: DbExpressionBuilder.Distinct\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Divide\n  nameWithType: DbExpressionBuilder.Divide\n  fullName: DbExpressionBuilder.Divide\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Element*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Element\n  nameWithType: DbExpressionBuilder.Element\n  fullName: DbExpressionBuilder.Element\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Equal\n  nameWithType: DbExpressionBuilder.Equal\n  fullName: DbExpressionBuilder.Equal\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Except\n  nameWithType: DbExpressionBuilder.Except\n  fullName: DbExpressionBuilder.Except\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Exists*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Exists\n  nameWithType: DbExpressionBuilder.Exists\n  fullName: DbExpressionBuilder.Exists\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.False*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: \"False\"\n  nameWithType: DbExpressionBuilder.False\n  fullName: DbExpressionBuilder.False\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Filter\n  nameWithType: DbExpressionBuilder.Filter\n  fullName: DbExpressionBuilder.Filter\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: FullOuterJoin\n  nameWithType: DbExpressionBuilder.FullOuterJoin\n  fullName: DbExpressionBuilder.FullOuterJoin\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: GetEntityRef\n  nameWithType: DbExpressionBuilder.GetEntityRef\n  fullName: DbExpressionBuilder.GetEntityRef\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: GetRefKey\n  nameWithType: DbExpressionBuilder.GetRefKey\n  fullName: DbExpressionBuilder.GetRefKey\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: GreaterThan\n  nameWithType: DbExpressionBuilder.GreaterThan\n  fullName: DbExpressionBuilder.GreaterThan\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: GreaterThanOrEqual\n  nameWithType: DbExpressionBuilder.GreaterThanOrEqual\n  fullName: DbExpressionBuilder.GreaterThanOrEqual\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBind*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: GroupBind\n  nameWithType: DbExpressionBuilder.GroupBind\n  fullName: DbExpressionBuilder.GroupBind\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: GroupBindAs\n  nameWithType: DbExpressionBuilder.GroupBindAs\n  fullName: DbExpressionBuilder.GroupBindAs\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: GroupBy\n  nameWithType: DbExpressionBuilder.GroupBy\n  fullName: DbExpressionBuilder.GroupBy\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: InnerJoin\n  nameWithType: DbExpressionBuilder.InnerJoin\n  fullName: DbExpressionBuilder.InnerJoin\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Intersect\n  nameWithType: DbExpressionBuilder.Intersect\n  fullName: DbExpressionBuilder.Intersect\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Invoke\n  nameWithType: DbExpressionBuilder.Invoke\n  fullName: DbExpressionBuilder.Invoke\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsEmpty*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: IsEmpty\n  nameWithType: DbExpressionBuilder.IsEmpty\n  fullName: DbExpressionBuilder.IsEmpty\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsNull*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: IsNull\n  nameWithType: DbExpressionBuilder.IsNull\n  fullName: DbExpressionBuilder.IsNull\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: IsOf\n  nameWithType: DbExpressionBuilder.IsOf\n  fullName: DbExpressionBuilder.IsOf\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: IsOfOnly\n  nameWithType: DbExpressionBuilder.IsOfOnly\n  fullName: DbExpressionBuilder.IsOfOnly\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Join\n  nameWithType: DbExpressionBuilder.Join\n  fullName: DbExpressionBuilder.Join\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Join<TSelector>\n  nameWithType: DbExpressionBuilder.Join<TSelector>\n  fullName: DbExpressionBuilder.Join<TSelector>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Lambda\n  nameWithType: DbExpressionBuilder.Lambda\n  fullName: DbExpressionBuilder.Lambda\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: LeftOuterJoin\n  nameWithType: DbExpressionBuilder.LeftOuterJoin\n  fullName: DbExpressionBuilder.LeftOuterJoin\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: LessThan\n  nameWithType: DbExpressionBuilder.LessThan\n  fullName: DbExpressionBuilder.LessThan\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: LessThanOrEqual\n  nameWithType: DbExpressionBuilder.LessThanOrEqual\n  fullName: DbExpressionBuilder.LessThanOrEqual\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Like\n  nameWithType: DbExpressionBuilder.Like\n  fullName: DbExpressionBuilder.Like\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Limit\n  nameWithType: DbExpressionBuilder.Limit\n  fullName: DbExpressionBuilder.Limit\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Minus\n  nameWithType: DbExpressionBuilder.Minus\n  fullName: DbExpressionBuilder.Minus\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Modulo\n  nameWithType: DbExpressionBuilder.Modulo\n  fullName: DbExpressionBuilder.Modulo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Multiply\n  nameWithType: DbExpressionBuilder.Multiply\n  fullName: DbExpressionBuilder.Multiply\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Navigate\n  nameWithType: DbExpressionBuilder.Navigate\n  fullName: DbExpressionBuilder.Navigate\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Negate*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Negate\n  nameWithType: DbExpressionBuilder.Negate\n  fullName: DbExpressionBuilder.Negate\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: New\n  nameWithType: DbExpressionBuilder.New\n  fullName: DbExpressionBuilder.New\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: NewCollection\n  nameWithType: DbExpressionBuilder.NewCollection\n  fullName: DbExpressionBuilder.NewCollection\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewEmptyCollection*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: NewEmptyCollection\n  nameWithType: DbExpressionBuilder.NewEmptyCollection\n  fullName: DbExpressionBuilder.NewEmptyCollection\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: NewRow\n  nameWithType: DbExpressionBuilder.NewRow\n  fullName: DbExpressionBuilder.NewRow\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Not*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Not\n  nameWithType: DbExpressionBuilder.Not\n  fullName: DbExpressionBuilder.Not\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: NotEqual\n  nameWithType: DbExpressionBuilder.NotEqual\n  fullName: DbExpressionBuilder.NotEqual\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Null*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: \"Null\"\n  nameWithType: DbExpressionBuilder.Null\n  fullName: DbExpressionBuilder.Null\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: OfType\n  nameWithType: DbExpressionBuilder.OfType\n  fullName: DbExpressionBuilder.OfType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: OfTypeOnly\n  nameWithType: DbExpressionBuilder.OfTypeOnly\n  fullName: DbExpressionBuilder.OfTypeOnly\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Or\n  nameWithType: DbExpressionBuilder.Or\n  fullName: DbExpressionBuilder.Or\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: OrderBy\n  nameWithType: DbExpressionBuilder.OrderBy\n  fullName: DbExpressionBuilder.OrderBy\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: OrderByDescending\n  nameWithType: DbExpressionBuilder.OrderByDescending\n  fullName: DbExpressionBuilder.OrderByDescending\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: OuterApply\n  nameWithType: DbExpressionBuilder.OuterApply\n  fullName: DbExpressionBuilder.OuterApply\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Parameter*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Parameter\n  nameWithType: DbExpressionBuilder.Parameter\n  fullName: DbExpressionBuilder.Parameter\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Plus\n  nameWithType: DbExpressionBuilder.Plus\n  fullName: DbExpressionBuilder.Plus\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Project*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Project\n  nameWithType: DbExpressionBuilder.Project\n  fullName: DbExpressionBuilder.Project\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Property\n  nameWithType: DbExpressionBuilder.Property\n  fullName: DbExpressionBuilder.Property\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: RefFromKey\n  nameWithType: DbExpressionBuilder.RefFromKey\n  fullName: DbExpressionBuilder.RefFromKey\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Scan*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Scan\n  nameWithType: DbExpressionBuilder.Scan\n  fullName: DbExpressionBuilder.Scan\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select``1*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Select<TProjection>\n  nameWithType: DbExpressionBuilder.Select<TProjection>\n  fullName: DbExpressionBuilder.Select<TProjection>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: SelectMany\n  nameWithType: DbExpressionBuilder.SelectMany\n  fullName: DbExpressionBuilder.SelectMany\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: SelectMany<TSelector>\n  nameWithType: DbExpressionBuilder.SelectMany<TSelector>\n  fullName: DbExpressionBuilder.SelectMany<TSelector>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Skip\n  nameWithType: DbExpressionBuilder.Skip\n  fullName: DbExpressionBuilder.Skip\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Sort\n  nameWithType: DbExpressionBuilder.Sort\n  fullName: DbExpressionBuilder.Sort\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Take\n  nameWithType: DbExpressionBuilder.Take\n  fullName: DbExpressionBuilder.Take\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: ThenBy\n  nameWithType: DbExpressionBuilder.ThenBy\n  fullName: DbExpressionBuilder.ThenBy\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: ThenByDescending\n  nameWithType: DbExpressionBuilder.ThenByDescending\n  fullName: DbExpressionBuilder.ThenByDescending\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: ToSortClause\n  nameWithType: DbExpressionBuilder.ToSortClause\n  fullName: DbExpressionBuilder.ToSortClause\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: ToSortClauseDescending\n  nameWithType: DbExpressionBuilder.ToSortClauseDescending\n  fullName: DbExpressionBuilder.ToSortClauseDescending\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: TreatAs\n  nameWithType: DbExpressionBuilder.TreatAs\n  fullName: DbExpressionBuilder.TreatAs\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.True*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: \"True\"\n  nameWithType: DbExpressionBuilder.True\n  fullName: DbExpressionBuilder.True\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnaryMinus*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: UnaryMinus\n  nameWithType: DbExpressionBuilder.UnaryMinus\n  fullName: DbExpressionBuilder.UnaryMinus\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Union\n  nameWithType: DbExpressionBuilder.Union\n  fullName: DbExpressionBuilder.Union\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: UnionAll\n  nameWithType: DbExpressionBuilder.UnionAll\n  fullName: DbExpressionBuilder.UnionAll\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Variable*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Variable\n  nameWithType: DbExpressionBuilder.Variable\n  fullName: DbExpressionBuilder.Variable\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Where\n  nameWithType: DbExpressionBuilder.Where\n  fullName: DbExpressionBuilder.Where\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/DbExpressionBuilder.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}