{"nodes":[{"content":"Provides digital rights management services for encrypting and decrypting protected content.","nodes":[{"pos":[0,92],"content":"Provides digital rights management services for encrypting and decrypting protected content.","nodes":[{"content":"Provides digital rights management services for encrypting and decrypting protected content.","pos":[0,92]}]}],"pos":[1088,1181],"yaml":true},{"content":"<xref:System.Security.RightsManagement.CryptoProvider> is created as a result of the <xref:System.Security.RightsManagement.UseLicense.Bind%2A> method when binding a rights managed <xref:System.Security.RightsManagement.UseLicense> to a <xref:System.Security.RightsManagement.SecureEnvironment>.  \n  \n As with other <xref:System.Security.RightsManagement> types, <xref:System.Security.RightsManagement.CryptoProvider> is only usable in full trust applications.","nodes":[{"pos":[0,295],"content":"<xref:System.Security.RightsManagement.CryptoProvider> is created as a result of the <xref:System.Security.RightsManagement.UseLicense.Bind%2A> method when binding a rights managed <xref:System.Security.RightsManagement.UseLicense> to a <xref:System.Security.RightsManagement.SecureEnvironment>.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Security.RightsManagement.CryptoProvider&gt;</ph> is created as a result of the <ph id=\"ph2\">&lt;xref:System.Security.RightsManagement.UseLicense.Bind%2A&gt;</ph> method when binding a rights managed <ph id=\"ph3\">&lt;xref:System.Security.RightsManagement.UseLicense&gt;</ph> to a <ph id=\"ph4\">&lt;xref:System.Security.RightsManagement.SecureEnvironment&gt;</ph>.","pos":[0,295],"source":"<xref:System.Security.RightsManagement.CryptoProvider> is created as a result of the <xref:System.Security.RightsManagement.UseLicense.Bind%2A> method when binding a rights managed <xref:System.Security.RightsManagement.UseLicense> to a <xref:System.Security.RightsManagement.SecureEnvironment>."}]},{"pos":[302,460],"content":"As with other <xref:System.Security.RightsManagement> types, <xref:System.Security.RightsManagement.CryptoProvider> is only usable in full trust applications.","nodes":[{"content":"As with other <ph id=\"ph1\">&lt;xref:System.Security.RightsManagement&gt;</ph> types, <ph id=\"ph2\">&lt;xref:System.Security.RightsManagement.CryptoProvider&gt;</ph> is only usable in full trust applications.","pos":[0,158],"source":"As with other <xref:System.Security.RightsManagement> types, <xref:System.Security.RightsManagement.CryptoProvider> is only usable in full trust applications."}]}],"pos":[1192,1657],"yaml":true,"extradata":"MT"},{"content":"Gets the cipher block size, in bytes.","nodes":[{"pos":[0,37],"content":"Gets the cipher block size, in bytes.","nodes":[{"content":"Gets the cipher block size, in bytes.","pos":[0,37]}]}],"pos":[3775,3813],"yaml":true},{"content":"The `clearText` and `cipherText` buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> and <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> must be n*<xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> bytes in length, where 'n' is an integer greater than or equal to 1.  \n  \n If <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> is `false`, buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> must be the same length as the buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A>.  \n  \n If <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> is `true`, buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> can be a different length from the buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> (all buffer sizes must still always be a multiple of <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> bytes in length).  \n  \n A <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> of 1 indicates that the cipher is a stream cipher; a <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> of 2 or greater indicates a block cipher.","nodes":[{"pos":[0,333],"content":"The <ph id=\"ph1\">`clearText`</ph> and <ph id=\"ph2\">`cipherText`</ph> buffers passed to <ph id=\"ph3\">&lt;xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A&gt;</ph> and <ph id=\"ph4\">&lt;xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A&gt;</ph> must be n*<ph id=\"ph5\">&lt;xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A&gt;</ph> bytes in length, where 'n' is an integer greater than or equal to 1.","source":"The `clearText` and `cipherText` buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> and <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> must be n*<xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> bytes in length, where 'n' is an integer greater than or equal to 1."},{"pos":[340,627],"content":"If <ph id=\"ph1\">&lt;xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A&gt;</ph> is <ph id=\"ph2\">`false`</ph>, buffers passed to <ph id=\"ph3\">&lt;xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A&gt;</ph> must be the same length as the buffers passed to <ph id=\"ph4\">&lt;xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A&gt;</ph>.","source":"If <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> is `false`, buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> must be the same length as the buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A>."},{"pos":[634,1062],"content":"If <ph id=\"ph1\">&lt;xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A&gt;</ph> is <ph id=\"ph2\">`true`</ph>, buffers passed to <ph id=\"ph3\">&lt;xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A&gt;</ph> can be a different length from the buffers passed to <ph id=\"ph4\">&lt;xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A&gt;</ph> (all buffer sizes must still always be a multiple of <ph id=\"ph5\">&lt;xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A&gt;</ph> bytes in length).","source":"If <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> is `true`, buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> can be a different length from the buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> (all buffer sizes must still always be a multiple of <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> bytes in length)."},{"pos":[1069,1301],"content":"A <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> of 1 indicates that the cipher is a stream cipher; a <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> of 2 or greater indicates a block cipher.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A&gt;</ph> of 1 indicates that the cipher is a stream cipher; a <ph id=\"ph2\">&lt;xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A&gt;</ph> of 2 or greater indicates a block cipher.","pos":[0,232],"source":"A <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> of 1 indicates that the cipher is a stream cipher; a <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> of 2 or greater indicates a block cipher."}]}],"pos":[3824,5134],"yaml":true,"extradata":"MT"},{"content":"The cipher block size, in bytes.  The default block size for [!INCLUDE[TLA#tla_aes](~/includes/tlasharptla-aes-md.md)] is 8.","nodes":[{"pos":[0,124],"content":"The cipher block size, in bytes.  The default block size for [!INCLUDE[TLA#tla_aes](~/includes/tlasharptla-aes-md.md)] is 8.","nodes":[{"content":"The cipher block size, in bytes.","pos":[0,32]},{"content":"The default block size for <ph id=\"ph1\">[!INCLUDE[TLA#tla_aes](~/includes/tlasharptla-aes-md.md)]</ph> is 8.","pos":[34,124],"source":"  The default block size for [!INCLUDE[TLA#tla_aes](~/includes/tlasharptla-aes-md.md)] is 8."}]}],"pos":[5794,5919],"yaml":true},{"content":"Gets a collection listing the rights that passed verification and that are granted to the user.","nodes":[{"pos":[0,95],"content":"Gets a collection listing the rights that passed verification and that are granted to the user.","nodes":[{"content":"Gets a collection listing the rights that passed verification and that are granted to the user.","pos":[0,95]}]}],"pos":[6998,7094],"yaml":true},{"content":"A collection enumerating the rights that passed verification and that are granted to the user.","nodes":[{"pos":[0,94],"content":"A collection enumerating the rights that passed verification and that are granted to the user.","nodes":[{"content":"A collection enumerating the rights that passed verification and that are granted to the user.","pos":[0,94]}]}],"pos":[8001,8096],"yaml":true},{"content":"Gets a value that indicates whether the user has rights to decrypt.","nodes":[{"pos":[0,67],"content":"Gets a value that indicates whether the user has rights to decrypt.","nodes":[{"content":"Gets a value that indicates whether the user has rights to decrypt.","pos":[0,67]}]}],"pos":[9171,9239],"yaml":true},{"content":"<xref:System.Security.RightsManagement.CryptoProvider.CanDecrypt%2A> returns **true** if the <xref:System.Security.RightsManagement.UseLicense> bound to this <xref:System.Security.RightsManagement.CryptoProvider> grants the user read access rights such as View, Edit, Print, or Owner.","nodes":[{"pos":[0,284],"content":"<ph id=\"ph1\">&lt;xref:System.Security.RightsManagement.CryptoProvider.CanDecrypt%2A&gt;</ph> returns <bpt id=\"p1\">**</bpt>true<ept id=\"p1\">**</ept> if the <ph id=\"ph2\">&lt;xref:System.Security.RightsManagement.UseLicense&gt;</ph> bound to this <ph id=\"ph3\">&lt;xref:System.Security.RightsManagement.CryptoProvider&gt;</ph> grants the user read access rights such as View, Edit, Print, or Owner.","source":"<xref:System.Security.RightsManagement.CryptoProvider.CanDecrypt%2A> returns **true** if the <xref:System.Security.RightsManagement.UseLicense> bound to this <xref:System.Security.RightsManagement.CryptoProvider> grants the user read access rights such as View, Edit, Print, or Owner."}],"pos":[9250,9535],"yaml":true,"extradata":"MT"},{"content":"**true** if the <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> grants the user rights to decrypt; otherwise, **false**.","nodes":[{"pos":[0,137],"content":"<bpt id=\"p1\">**</bpt>true<ept id=\"p1\">**</ept> if the <ph id=\"ph1\">&lt;xref href=\"System.Security.RightsManagement.UseLicense\"&gt;&lt;/xref&gt;</ph> grants the user rights to decrypt; otherwise, <bpt id=\"p2\">**</bpt>false<ept id=\"p2\">**</ept>.","source":"**true** if the <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> grants the user rights to decrypt; otherwise, **false**."}],"pos":[10197,10337],"yaml":true},{"content":"Gets a value that indicates whether the user has rights to encrypt.","nodes":[{"pos":[0,67],"content":"Gets a value that indicates whether the user has rights to encrypt.","nodes":[{"content":"Gets a value that indicates whether the user has rights to encrypt.","pos":[0,67]}]}],"pos":[11411,11479],"yaml":true},{"content":"<xref:System.Security.RightsManagement.CryptoProvider.CanDecrypt%2A> returns **true** if the <xref:System.Security.RightsManagement.UseLicense> bound to this <xref:System.Security.RightsManagement.CryptoProvider> grants the user write access rights such as Edit or Owner.","nodes":[{"pos":[0,271],"content":"<ph id=\"ph1\">&lt;xref:System.Security.RightsManagement.CryptoProvider.CanDecrypt%2A&gt;</ph> returns <bpt id=\"p1\">**</bpt>true<ept id=\"p1\">**</ept> if the <ph id=\"ph2\">&lt;xref:System.Security.RightsManagement.UseLicense&gt;</ph> bound to this <ph id=\"ph3\">&lt;xref:System.Security.RightsManagement.CryptoProvider&gt;</ph> grants the user write access rights such as Edit or Owner.","source":"<xref:System.Security.RightsManagement.CryptoProvider.CanDecrypt%2A> returns **true** if the <xref:System.Security.RightsManagement.UseLicense> bound to this <xref:System.Security.RightsManagement.CryptoProvider> grants the user write access rights such as Edit or Owner."}],"pos":[11490,11762],"yaml":true,"extradata":"MT"},{"content":"**true** if the <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> grants the user rights to encrypt; otherwise, **false**.","nodes":[{"pos":[0,137],"content":"<bpt id=\"p1\">**</bpt>true<ept id=\"p1\">**</ept> if the <ph id=\"ph1\">&lt;xref href=\"System.Security.RightsManagement.UseLicense\"&gt;&lt;/xref&gt;</ph> grants the user rights to encrypt; otherwise, <bpt id=\"p2\">**</bpt>false<ept id=\"p2\">**</ept>.","source":"**true** if the <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> grants the user rights to encrypt; otherwise, **false**."}],"pos":[11875,12015],"yaml":true},{"content":"Gets a value that indicates whether <xref href=\"System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])\"></xref> and <xref href=\"System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])\"></xref> can accept buffers that are different block sizes in length.","nodes":[{"pos":[0,284],"content":"Gets a value that indicates whether <ph id=\"ph1\">&lt;xref href=\"System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph2\">&lt;xref href=\"System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])\"&gt;&lt;/xref&gt;</ph> can accept buffers that are different block sizes in length.","source":"Gets a value that indicates whether <xref href=\"System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])\"></xref> and <xref href=\"System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])\"></xref> can accept buffers that are different block sizes in length."}],"pos":[13113,13398],"yaml":true},{"content":"The `clearText` and `cipherText` buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> and <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> must be n*<xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> bytes in length, where 'n' is an integer greater than or equal to 1.  \n  \n If <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> is **false**, buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> must be the same length as the buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A>.  \n  \n If <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> is **true**, buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> can be a different length from the buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> (all buffer sizes must still always be a multiple of <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> bytes in length).","nodes":[{"pos":[0,333],"content":"The <ph id=\"ph1\">`clearText`</ph> and <ph id=\"ph2\">`cipherText`</ph> buffers passed to <ph id=\"ph3\">&lt;xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A&gt;</ph> and <ph id=\"ph4\">&lt;xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A&gt;</ph> must be n*<ph id=\"ph5\">&lt;xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A&gt;</ph> bytes in length, where 'n' is an integer greater than or equal to 1.","source":"The `clearText` and `cipherText` buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> and <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> must be n*<xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> bytes in length, where 'n' is an integer greater than or equal to 1."},{"pos":[340,629],"content":"If <ph id=\"ph1\">&lt;xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A&gt;</ph> is <bpt id=\"p1\">**</bpt>false<ept id=\"p1\">**</ept>, buffers passed to <ph id=\"ph2\">&lt;xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A&gt;</ph> must be the same length as the buffers passed to <ph id=\"ph3\">&lt;xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A&gt;</ph>.","source":"If <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> is **false**, buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> must be the same length as the buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A>."},{"pos":[636,1066],"content":"If <ph id=\"ph1\">&lt;xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A&gt;</ph> is <bpt id=\"p1\">**</bpt>true<ept id=\"p1\">**</ept>, buffers passed to <ph id=\"ph2\">&lt;xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A&gt;</ph> can be a different length from the buffers passed to <ph id=\"ph3\">&lt;xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A&gt;</ph> (all buffer sizes must still always be a multiple of <ph id=\"ph4\">&lt;xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A&gt;</ph> bytes in length).","source":"If <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> is **true**, buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> can be a different length from the buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> (all buffer sizes must still always be a multiple of <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> bytes in length)."}],"pos":[13409,14482],"yaml":true,"extradata":"MT"},{"content":"**true** if the buffer passed to <xref href=\"System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])\"></xref> can be a different length from the buffer passed to <xref href=\"System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])\"></xref>; otherwise, **false** if the buffers passed to <xref href=\"System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])\"></xref> and <xref href=\"System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])\"></xref> must be the exact same length.  For [!INCLUDE[TLA#tla_aes](~/includes/tlasharptla-aes-md.md)] the default is **true**.","nodes":[{"pos":[0,622],"content":"**true** if the buffer passed to <xref href=\"System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])\"></xref> can be a different length from the buffer passed to <xref href=\"System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])\"></xref>; otherwise, **false** if the buffers passed to <xref href=\"System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])\"></xref> and <xref href=\"System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])\"></xref> must be the exact same length.  For [!INCLUDE[TLA#tla_aes](~/includes/tlasharptla-aes-md.md)] the default is **true**.","nodes":[{"content":"<bpt id=\"p1\">**</bpt>true<ept id=\"p1\">**</ept> if the buffer passed to <ph id=\"ph1\">&lt;xref href=\"System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])\"&gt;&lt;/xref&gt;</ph> can be a different length from the buffer passed to <ph id=\"ph2\">&lt;xref href=\"System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])\"&gt;&lt;/xref&gt;</ph>; otherwise, <bpt id=\"p2\">**</bpt>false<ept id=\"p2\">**</ept> if the buffers passed to <ph id=\"ph3\">&lt;xref href=\"System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph4\">&lt;xref href=\"System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])\"&gt;&lt;/xref&gt;</ph> must be the exact same length.","pos":[0,534],"source":"**true** if the buffer passed to <xref href=\"System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])\"></xref> can be a different length from the buffer passed to <xref href=\"System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])\"></xref>; otherwise, **false** if the buffers passed to <xref href=\"System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])\"></xref> and <xref href=\"System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])\"></xref> must be the exact same length."},{"content":"For <ph id=\"ph1\">[!INCLUDE[TLA#tla_aes](~/includes/tlasharptla-aes-md.md)]</ph> the default is <bpt id=\"p1\">**</bpt>true<ept id=\"p1\">**</ept>.","pos":[536,622],"source":"  For [!INCLUDE[TLA#tla_aes](~/includes/tlasharptla-aes-md.md)] the default is **true**."}]}],"pos":[14599,15224],"yaml":true},{"content":"Decrypts cipher text to clear text.","nodes":[{"pos":[0,35],"content":"Decrypts cipher text to clear text.","nodes":[{"content":"Decrypts cipher text to clear text.","pos":[0,35]}]}],"pos":[16351,16387],"yaml":true},{"content":"The cipher text to decrypt.","nodes":[{"pos":[0,27],"content":"The cipher text to decrypt.","nodes":[{"content":"The cipher text to decrypt.","pos":[0,27]}]}],"pos":[17089,17117],"yaml":true},{"content":"The decrypted clear text of <code>cryptoText</code>.","nodes":[{"pos":[0,52],"content":"The decrypted clear text of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">cryptoText</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The decrypted clear text of <code>cryptoText</code>."}],"pos":[17174,17227],"yaml":true},{"content":"<code>cipherText</code> is null.","nodes":[{"pos":[0,32],"content":"<ph id=\"ph1\">&lt;code&gt;cipherText&lt;/code&gt;</ph> is null.","source":"<code>cipherText</code> is null."}],"pos":[17412,17445],"yaml":true},{"content":"Decryption right not granted.","nodes":[{"pos":[0,29],"content":"Decryption right not granted.","nodes":[{"content":"Decryption right not granted.","pos":[0,29]}]}],"pos":[17607,17637],"yaml":true},{"content":"Releases all resources used by the <xref href=\"System.Security.RightsManagement.CryptoProvider\"></xref>.","nodes":[{"pos":[0,104],"content":"Releases all resources used by the <ph id=\"ph1\">&lt;xref href=\"System.Security.RightsManagement.CryptoProvider\"&gt;&lt;/xref&gt;</ph>.","source":"Releases all resources used by the <xref href=\"System.Security.RightsManagement.CryptoProvider\"></xref>."}],"pos":[18608,18713],"yaml":true},{"content":"<xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> performs <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>(**true**).  \n  \n Call <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> when you are finished using the <xref:System.Security.RightsManagement.CryptoProvider>. The <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> method leaves the <xref:System.Security.RightsManagement.CryptoProvider> in an unusable state. After calling <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>, you must release all references to the <xref:System.Security.RightsManagement.CryptoProvider> so the garbage collector can reclaim the memory that the <xref:System.Security.RightsManagement.CryptoProvider> was occupying. For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  \n  \n> [!NOTE]\n>  Always call <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> before you release your last reference to the <xref:System.Security.RightsManagement.CryptoProvider>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.RightsManagement.CryptoProvider> object's `Finalize` method.","nodes":[{"pos":[0,151],"content":"<ph id=\"ph1\">&lt;xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A&gt;</ph> performs <ph id=\"ph2\">&lt;xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A&gt;</ph>(<bpt id=\"p1\">**</bpt>true<ept id=\"p1\">**</ept>).","source":"<xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> performs <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>(**true**)."},{"pos":[158,989],"content":"Call <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> when you are finished using the <xref:System.Security.RightsManagement.CryptoProvider>. The <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> method leaves the <xref:System.Security.RightsManagement.CryptoProvider> in an unusable state. After calling <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>, you must release all references to the <xref:System.Security.RightsManagement.CryptoProvider> so the garbage collector can reclaim the memory that the <xref:System.Security.RightsManagement.CryptoProvider> was occupying. For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).","nodes":[{"content":"Call <ph id=\"ph1\">&lt;xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A&gt;</ph> when you are finished using the <ph id=\"ph2\">&lt;xref:System.Security.RightsManagement.CryptoProvider&gt;</ph>.","pos":[0,158],"source":"Call <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> when you are finished using the <xref:System.Security.RightsManagement.CryptoProvider>."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A&gt;</ph> method leaves the <ph id=\"ph2\">&lt;xref:System.Security.RightsManagement.CryptoProvider&gt;</ph> in an unusable state.","pos":[159,323],"source":" The <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> method leaves the <xref:System.Security.RightsManagement.CryptoProvider> in an unusable state."},{"content":"After calling <ph id=\"ph1\">&lt;xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A&gt;</ph>, you must release all references to the <ph id=\"ph2\">&lt;xref:System.Security.RightsManagement.CryptoProvider&gt;</ph> so the garbage collector can reclaim the memory that the <ph id=\"ph3\">&lt;xref:System.Security.RightsManagement.CryptoProvider&gt;</ph> was occupying.","pos":[324,625],"source":" After calling <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>, you must release all references to the <xref:System.Security.RightsManagement.CryptoProvider> so the garbage collector can reclaim the memory that the <xref:System.Security.RightsManagement.CryptoProvider> was occupying."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Cleaning Up Unmanaged Resources<ept id=\"p1\">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id=\"p2\">[</bpt>Implementing a Dispose Method<ept id=\"p2\">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.","pos":[626,831],"source":" For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md)."}]},{"pos":[997,1363],"content":"[!NOTE]\n Always call <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> before you release your last reference to the <xref:System.Security.RightsManagement.CryptoProvider>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.RightsManagement.CryptoProvider> object's `Finalize` method.","leadings":["","> "],"nodes":[{"content":" Always call <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> before you release your last reference to the <xref:System.Security.RightsManagement.CryptoProvider>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.RightsManagement.CryptoProvider> object's `Finalize` method.","pos":[8,364],"nodes":[{"content":"Always call <ph id=\"ph1\">&lt;xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A&gt;</ph> before you release your last reference to the <ph id=\"ph2\">&lt;xref:System.Security.RightsManagement.CryptoProvider&gt;</ph>.","pos":[1,180],"source":" Always call <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> before you release your last reference to the <xref:System.Security.RightsManagement.CryptoProvider>."},{"content":"Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id=\"ph1\">&lt;xref:System.Security.RightsManagement.CryptoProvider&gt;</ph> object's <ph id=\"ph2\">`Finalize`</ph> method.","pos":[181,356],"source":" Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.RightsManagement.CryptoProvider> object's `Finalize` method."}]}]}],"pos":[18724,20095],"yaml":true,"extradata":"MT"},{"content":"Releases the unmanaged resources used by the <xref href=\"System.Security.RightsManagement.CryptoProvider\"></xref> and optionally releases the managed resources.","nodes":[{"pos":[0,160],"content":"Releases the unmanaged resources used by the <ph id=\"ph1\">&lt;xref href=\"System.Security.RightsManagement.CryptoProvider\"&gt;&lt;/xref&gt;</ph> and optionally releases the managed resources.","source":"Releases the unmanaged resources used by the <xref href=\"System.Security.RightsManagement.CryptoProvider\"></xref> and optionally releases the managed resources."}],"pos":[21287,21448],"yaml":true},{"content":"This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.  \n  \n When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Security.RightsManagement.CryptoProvider> references. This method invokes the `Dispose()` method of each referenced object.","nodes":[{"pos":[0,293],"content":"This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.","nodes":[{"content":"This method is called by the public <ph id=\"ph1\">`Dispose()`</ph> method and the <ph id=\"ph2\">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.","pos":[0,103],"source":"This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method."},{"content":"<ph id=\"ph1\">`Dispose()`</ph> invokes the protected <ph id=\"ph2\">`Dispose(Boolean)`</ph> method with the <ph id=\"ph3\">`disposing`</ph> parameter set to <ph id=\"ph4\">`true`</ph>.","pos":[104,209],"source":"`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`."},{"content":"<ph id=\"ph1\">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id=\"ph2\">`Dispose`</ph> with <ph id=\"ph3\">`disposing`</ph> set to <ph id=\"ph4\">`false`</ph>.","pos":[210,293],"source":" <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`."}]},{"pos":[300,549],"content":"When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Security.RightsManagement.CryptoProvider> references. This method invokes the `Dispose()` method of each referenced object.","nodes":[{"content":"When the <ph id=\"ph1\">`disposing`</ph> parameter is true, this method releases all resources held by any managed objects that this <ph id=\"ph2\">&lt;xref:System.Security.RightsManagement.CryptoProvider&gt;</ph> references.","pos":[0,179],"source":"When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Security.RightsManagement.CryptoProvider> references."},{"content":"This method invokes the <ph id=\"ph1\">`Dispose()`</ph> method of each referenced object.","pos":[180,249],"source":" This method invokes the `Dispose()` method of each referenced object."}]}],"pos":[21459,22013],"yaml":true,"extradata":"MT"},{"content":"`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.","nodes":[{"pos":[0,100],"content":"<ph id=\"ph1\">`true`</ph> to release both managed and unmanaged resources; <ph id=\"ph2\">`false`</ph> to release only unmanaged resources.","source":"`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources."}],"pos":[22167,22270],"yaml":true},{"content":"Encrypts clear text to cipher text.","nodes":[{"pos":[0,35],"content":"Encrypts clear text to cipher text.","nodes":[{"content":"Encrypts clear text to cipher text.","pos":[0,35]}]}],"pos":[23390,23426],"yaml":true},{"content":"The byte length of the `clearText` buffer should be a multiple of the cipher <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> property.  \n  \n The digital rights management system uses [!INCLUDE[TLA#tla_aes](~/includes/tlasharptla-aes-md.md)] block cipher.  With [!INCLUDE[TLA2#tla_aes](~/includes/tla2sharptla-aes-md.md)], blocks are encrypted independently such that two blocks of identical clear text produce identical cipher text results.  To minimize potential decryption threats from independent block encryption, applications should employ methods to modify content, such as compression, to avoid encrypting identical clear text blocks.","nodes":[{"pos":[0,154],"content":"The byte length of the <ph id=\"ph1\">`clearText`</ph> buffer should be a multiple of the cipher <ph id=\"ph2\">&lt;xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A&gt;</ph> property.","source":"The byte length of the `clearText` buffer should be a multiple of the cipher <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> property."},{"pos":[161,661],"content":"The digital rights management system uses [!INCLUDE[TLA#tla_aes](~/includes/tlasharptla-aes-md.md)] block cipher.  With [!INCLUDE[TLA2#tla_aes](~/includes/tla2sharptla-aes-md.md)], blocks are encrypted independently such that two blocks of identical clear text produce identical cipher text results.  To minimize potential decryption threats from independent block encryption, applications should employ methods to modify content, such as compression, to avoid encrypting identical clear text blocks.","nodes":[{"content":"The digital rights management system uses <ph id=\"ph1\">[!INCLUDE[TLA#tla_aes](~/includes/tlasharptla-aes-md.md)]</ph> block cipher.","pos":[0,113],"source":"The digital rights management system uses [!INCLUDE[TLA#tla_aes](~/includes/tlasharptla-aes-md.md)] block cipher."},{"content":"With <ph id=\"ph1\">[!INCLUDE[TLA2#tla_aes](~/includes/tla2sharptla-aes-md.md)]</ph>, blocks are encrypted independently such that two blocks of identical clear text produce identical cipher text results.","pos":[115,299],"source":"  With [!INCLUDE[TLA2#tla_aes](~/includes/tla2sharptla-aes-md.md)], blocks are encrypted independently such that two blocks of identical clear text produce identical cipher text results."},{"content":"To minimize potential decryption threats from independent block encryption, applications should employ methods to modify content, such as compression, to avoid encrypting identical clear text blocks.","pos":[301,500]}]}],"pos":[23437,24103],"yaml":true,"extradata":"MT"},{"content":"The clear text content to encrypt.","nodes":[{"pos":[0,34],"content":"The clear text content to encrypt.","nodes":[{"content":"The clear text content to encrypt.","pos":[0,34]}]}],"pos":[24793,24828],"yaml":true},{"content":"Encrypted cipher text of the given <code>clearText</code>.","nodes":[{"pos":[0,58],"content":"Encrypted cipher text of the given <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">clearText</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"Encrypted cipher text of the given <code>clearText</code>."}],"pos":[24885,24944],"yaml":true},{"content":"<code>clearText</code> is null.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;clearText&lt;/code&gt;</ph> is null.","source":"<code>clearText</code> is null."}],"pos":[25129,25161],"yaml":true},{"content":"Encryption is not permitted.","nodes":[{"pos":[0,28],"content":"Encryption is not permitted.","nodes":[{"content":"Encryption is not permitted.","pos":[0,28]}]}],"pos":[25323,25352],"yaml":true},{"content":"Frees resources and performs internal cleanup before the instance is reclaimed by garbage collection.","nodes":[{"pos":[0,101],"content":"Frees resources and performs internal cleanup before the instance is reclaimed by garbage collection.","nodes":[{"content":"Frees resources and performs internal cleanup before the instance is reclaimed by garbage collection.","pos":[0,101]}]}],"pos":[26329,26431],"yaml":true},{"content":"<xref:System.Security.RightsManagement.CryptoProvider.Finalize%2A> performs <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>(**false**).  \n  \n This method overrides  <xref:System.Object.Finalize%2A>. Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A> method.  \n  \n For more information, see [Finalize Methods and Destructors](http://msdn.microsoft.com/en-us/fd376774-1643-499b-869e-9546a3aeea70), [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md), and [Overriding the Finalize Method](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).","nodes":[{"pos":[0,153],"content":"<ph id=\"ph1\">&lt;xref:System.Security.RightsManagement.CryptoProvider.Finalize%2A&gt;</ph> performs <ph id=\"ph2\">&lt;xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A&gt;</ph>(<bpt id=\"p1\">**</bpt>false<ept id=\"p1\">**</ept>).","source":"<xref:System.Security.RightsManagement.CryptoProvider.Finalize%2A> performs <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>(**false**)."},{"pos":[160,469],"content":"This method overrides  <xref:System.Object.Finalize%2A>. Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A> method.","nodes":[{"content":"This method overrides  <ph id=\"ph1\">&lt;xref:System.Object.Finalize%2A&gt;</ph>.","pos":[0,56],"source":"This method overrides  <xref:System.Object.Finalize%2A>."},{"content":"Application code should not call this method; an object's <ph id=\"ph1\">`Finalize`</ph> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <ph id=\"ph2\">&lt;xref:System.GC.SuppressFinalize%2A&gt;</ph> method.","pos":[57,309],"source":" Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A> method."}]},{"pos":[476,799],"content":"For more information, see <bpt id=\"p1\">[</bpt>Finalize Methods and Destructors<ept id=\"p1\">](http://msdn.microsoft.com/en-us/fd376774-1643-499b-869e-9546a3aeea70)</ept>, <bpt id=\"p2\">[</bpt>Cleaning Up Unmanaged Resources<ept id=\"p2\">](~/docs/standard/garbage-collection/unmanaged.md)</ept>, and <bpt id=\"p3\">[</bpt>Overriding the Finalize Method<ept id=\"p3\">](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.","source":"For more information, see [Finalize Methods and Destructors](http://msdn.microsoft.com/en-us/fd376774-1643-499b-869e-9546a3aeea70), [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md), and [Overriding the Finalize Method](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)."}],"pos":[26442,27248],"yaml":true,"extradata":"MT"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.RightsManagement.CryptoProvider\n  commentId: T:System.Security.RightsManagement.CryptoProvider\n  id: CryptoProvider\n  children:\n  - System.Security.RightsManagement.CryptoProvider.BlockSize\n  - System.Security.RightsManagement.CryptoProvider.BoundGrants\n  - System.Security.RightsManagement.CryptoProvider.CanDecrypt\n  - System.Security.RightsManagement.CryptoProvider.CanEncrypt\n  - System.Security.RightsManagement.CryptoProvider.CanMergeBlocks\n  - System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])\n  - System.Security.RightsManagement.CryptoProvider.Dispose\n  - System.Security.RightsManagement.CryptoProvider.Dispose(System.Boolean)\n  - System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])\n  - System.Security.RightsManagement.CryptoProvider.Finalize\n  langs:\n  - csharp\n  name: CryptoProvider\n  nameWithType: CryptoProvider\n  fullName: System.Security.RightsManagement.CryptoProvider\n  type: Class\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Provides digital rights management services for encrypting and decrypting protected content.\n  remarks: \"<xref:System.Security.RightsManagement.CryptoProvider> is created as a result of the <xref:System.Security.RightsManagement.UseLicense.Bind%2A> method when binding a rights managed <xref:System.Security.RightsManagement.UseLicense> to a <xref:System.Security.RightsManagement.SecureEnvironment>.  \\n  \\n As with other <xref:System.Security.RightsManagement> types, <xref:System.Security.RightsManagement.CryptoProvider> is only usable in full trust applications.\"\n  example:\n  - \"The following example shows how to use the <xref:System.Security.RightsManagement.CryptoProvider> class to create an <xref:System.IO.Packaging.EncryptedPackageEnvelope>.  \\n  \\n [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]\\n [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]\"\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)]\n\n      public class CryptoProvider : IDisposable\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/CryptoProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Security.RightsManagement.CryptoProvider.BlockSize\n  commentId: P:System.Security.RightsManagement.CryptoProvider.BlockSize\n  id: BlockSize\n  parent: System.Security.RightsManagement.CryptoProvider\n  langs:\n  - csharp\n  name: BlockSize\n  nameWithType: CryptoProvider.BlockSize\n  fullName: CryptoProvider.BlockSize\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Gets the cipher block size, in bytes.\n  remarks: \"The `clearText` and `cipherText` buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> and <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> must be n*<xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> bytes in length, where 'n' is an integer greater than or equal to 1.  \\n  \\n If <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> is `false`, buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> must be the same length as the buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A>.  \\n  \\n If <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> is `true`, buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> can be a different length from the buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> (all buffer sizes must still always be a multiple of <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> bytes in length).  \\n  \\n A <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> of 1 indicates that the cipher is a stream cipher; a <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> of 2 or greater indicates a block cipher.\"\n  example:\n  - \"The following example shows how to use the <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> property in converting clear-text data to encrypted-text data.  \\n  \\n [!code-csharp[RightsManagedContentPublish#RmContPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedContentPublish/CSharp/Window1.xaml.cs#rmcontpubencrypt)]\\n [!code-vb[RightsManagedContentPublish#RmContPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedContentPublish/visualbasic/window1.xaml.vb#rmcontpubencrypt)]\"\n  syntax:\n    content: public int BlockSize { get; }\n    return:\n      type: System.Int32\n      description: The cipher block size, in bytes.  The default block size for [!INCLUDE[TLA#tla_aes](~/includes/tlasharptla-aes-md.md)] is 8.\n  overload: System.Security.RightsManagement.CryptoProvider.BlockSize*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/CryptoProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Security.RightsManagement.CryptoProvider.BoundGrants\n  commentId: P:System.Security.RightsManagement.CryptoProvider.BoundGrants\n  id: BoundGrants\n  parent: System.Security.RightsManagement.CryptoProvider\n  langs:\n  - csharp\n  name: BoundGrants\n  nameWithType: CryptoProvider.BoundGrants\n  fullName: CryptoProvider.BoundGrants\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Gets a collection listing the rights that passed verification and that are granted to the user.\n  remarks: ''\n  example:\n  - \"The following example shows how to use the <xref:System.Security.RightsManagement.CryptoProvider.BoundGrants%2A> property to obtain a list rights granted through a <xref:System.Security.RightsManagement.UseLicense>.  \\n  \\n [!code-csharp[RightsManagedContentViewer#RmContViewUseLicense](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedContentViewer/CSharp/Window1.xaml.cs#rmcontviewuselicense)]\\n [!code-vb[RightsManagedContentViewer#RmContViewUseLicense](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedContentViewer/visualbasic/window1.xaml.vb#rmcontviewuselicense)]\"\n  syntax:\n    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Security.RightsManagement.ContentGrant> BoundGrants { get; }\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.RightsManagement.ContentGrant}\n      description: A collection enumerating the rights that passed verification and that are granted to the user.\n  overload: System.Security.RightsManagement.CryptoProvider.BoundGrants*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/CryptoProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Security.RightsManagement.CryptoProvider.CanDecrypt\n  commentId: P:System.Security.RightsManagement.CryptoProvider.CanDecrypt\n  id: CanDecrypt\n  parent: System.Security.RightsManagement.CryptoProvider\n  langs:\n  - csharp\n  name: CanDecrypt\n  nameWithType: CryptoProvider.CanDecrypt\n  fullName: CryptoProvider.CanDecrypt\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Gets a value that indicates whether the user has rights to decrypt.\n  remarks: <xref:System.Security.RightsManagement.CryptoProvider.CanDecrypt%2A> returns **true** if the <xref:System.Security.RightsManagement.UseLicense> bound to this <xref:System.Security.RightsManagement.CryptoProvider> grants the user read access rights such as View, Edit, Print, or Owner.\n  example:\n  - \"The following example shows how to use the <xref:System.Security.RightsManagement.CryptoProvider.CanDecrypt%2A> property to determine if decryption is allowed.  \\n  \\n [!code-csharp[RightsManagedContentViewer#RmContViewUseLicense](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedContentViewer/CSharp/Window1.xaml.cs#rmcontviewuselicense)]\\n [!code-vb[RightsManagedContentViewer#RmContViewUseLicense](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedContentViewer/visualbasic/window1.xaml.vb#rmcontviewuselicense)]\"\n  syntax:\n    content: public bool CanDecrypt { get; }\n    return:\n      type: System.Boolean\n      description: '**true** if the <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> grants the user rights to decrypt; otherwise, **false**.'\n  overload: System.Security.RightsManagement.CryptoProvider.CanDecrypt*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/CryptoProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Security.RightsManagement.CryptoProvider.CanEncrypt\n  commentId: P:System.Security.RightsManagement.CryptoProvider.CanEncrypt\n  id: CanEncrypt\n  parent: System.Security.RightsManagement.CryptoProvider\n  langs:\n  - csharp\n  name: CanEncrypt\n  nameWithType: CryptoProvider.CanEncrypt\n  fullName: CryptoProvider.CanEncrypt\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Gets a value that indicates whether the user has rights to encrypt.\n  remarks: <xref:System.Security.RightsManagement.CryptoProvider.CanDecrypt%2A> returns **true** if the <xref:System.Security.RightsManagement.UseLicense> bound to this <xref:System.Security.RightsManagement.CryptoProvider> grants the user write access rights such as Edit or Owner.\n  syntax:\n    content: public bool CanEncrypt { get; }\n    return:\n      type: System.Boolean\n      description: '**true** if the <xref href=\"System.Security.RightsManagement.UseLicense\"></xref> grants the user rights to encrypt; otherwise, **false**.'\n  overload: System.Security.RightsManagement.CryptoProvider.CanEncrypt*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/CryptoProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Security.RightsManagement.CryptoProvider.CanMergeBlocks\n  commentId: P:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks\n  id: CanMergeBlocks\n  parent: System.Security.RightsManagement.CryptoProvider\n  langs:\n  - csharp\n  name: CanMergeBlocks\n  nameWithType: CryptoProvider.CanMergeBlocks\n  fullName: CryptoProvider.CanMergeBlocks\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Gets a value that indicates whether <xref href=\"System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])\"></xref> and <xref href=\"System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])\"></xref> can accept buffers that are different block sizes in length.\n  remarks: \"The `clearText` and `cipherText` buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> and <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> must be n*<xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> bytes in length, where 'n' is an integer greater than or equal to 1.  \\n  \\n If <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> is **false**, buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> must be the same length as the buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A>.  \\n  \\n If <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> is **true**, buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> can be a different length from the buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> (all buffer sizes must still always be a multiple of <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> bytes in length).\"\n  syntax:\n    content: public bool CanMergeBlocks { get; }\n    return:\n      type: System.Boolean\n      description: '**true** if the buffer passed to <xref href=\"System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])\"></xref> can be a different length from the buffer passed to <xref href=\"System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])\"></xref>; otherwise, **false** if the buffers passed to <xref href=\"System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])\"></xref> and <xref href=\"System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])\"></xref> must be the exact same length.  For [!INCLUDE[TLA#tla_aes](~/includes/tlasharptla-aes-md.md)] the default is **true**.'\n  overload: System.Security.RightsManagement.CryptoProvider.CanMergeBlocks*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/CryptoProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])\n  commentId: M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])\n  id: Decrypt(System.Byte[])\n  parent: System.Security.RightsManagement.CryptoProvider\n  langs:\n  - csharp\n  name: Decrypt(Byte[])\n  nameWithType: CryptoProvider.Decrypt(Byte[])\n  fullName: CryptoProvider.Decrypt(Byte[])\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Decrypts cipher text to clear text.\n  remarks: ''\n  example:\n  - \"The following example shows how to use the <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> method to convert encrypted data to unencrypted data.  \\n  \\n [!code-csharp[RightsManagedContentViewer#RmContViewDecrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedContentViewer/CSharp/Window1.xaml.cs#rmcontviewdecrypt)]\\n [!code-vb[RightsManagedContentViewer#RmContViewDecrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedContentViewer/visualbasic/window1.xaml.vb#rmcontviewdecrypt)]\"\n  syntax:\n    content: public byte[] Decrypt (byte[] cryptoText);\n    parameters:\n    - id: cryptoText\n      type: System.Byte[]\n      description: The cipher text to decrypt.\n    return:\n      type: System.Byte[]\n      description: The decrypted clear text of <code>cryptoText</code>.\n  overload: System.Security.RightsManagement.CryptoProvider.Decrypt*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>cipherText</code> is null.\n  - type: System.Security.RightsManagement.RightsManagementException\n    commentId: T:System.Security.RightsManagement.RightsManagementException\n    description: Decryption right not granted.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/CryptoProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Security.RightsManagement.CryptoProvider.Dispose\n  commentId: M:System.Security.RightsManagement.CryptoProvider.Dispose\n  id: Dispose\n  parent: System.Security.RightsManagement.CryptoProvider\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: CryptoProvider.Dispose()\n  fullName: CryptoProvider.Dispose()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Releases all resources used by the <xref href=\"System.Security.RightsManagement.CryptoProvider\"></xref>.\n  remarks: \"<xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> performs <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>(**true**).  \\n  \\n Call <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> when you are finished using the <xref:System.Security.RightsManagement.CryptoProvider>. The <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> method leaves the <xref:System.Security.RightsManagement.CryptoProvider> in an unusable state. After calling <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>, you must release all references to the <xref:System.Security.RightsManagement.CryptoProvider> so the garbage collector can reclaim the memory that the <xref:System.Security.RightsManagement.CryptoProvider> was occupying. For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  \\n  \\n> [!NOTE]\\n>  Always call <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> before you release your last reference to the <xref:System.Security.RightsManagement.CryptoProvider>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.RightsManagement.CryptoProvider> object's `Finalize` method.\"\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.Security.RightsManagement.CryptoProvider.Dispose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/CryptoProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Security.RightsManagement.CryptoProvider.Dispose(System.Boolean)\n  commentId: M:System.Security.RightsManagement.CryptoProvider.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Security.RightsManagement.CryptoProvider\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: CryptoProvider.Dispose(Boolean)\n  fullName: CryptoProvider.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Releases the unmanaged resources used by the <xref href=\"System.Security.RightsManagement.CryptoProvider\"></xref> and optionally releases the managed resources.\n  remarks: \"This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.  \\n  \\n When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Security.RightsManagement.CryptoProvider> references. This method invokes the `Dispose()` method of each referenced object.\"\n  syntax:\n    content: protected virtual void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: '`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.'\n  overload: System.Security.RightsManagement.CryptoProvider.Dispose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/CryptoProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])\n  commentId: M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])\n  id: Encrypt(System.Byte[])\n  parent: System.Security.RightsManagement.CryptoProvider\n  langs:\n  - csharp\n  name: Encrypt(Byte[])\n  nameWithType: CryptoProvider.Encrypt(Byte[])\n  fullName: CryptoProvider.Encrypt(Byte[])\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Encrypts clear text to cipher text.\n  remarks: \"The byte length of the `clearText` buffer should be a multiple of the cipher <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> property.  \\n  \\n The digital rights management system uses [!INCLUDE[TLA#tla_aes](~/includes/tlasharptla-aes-md.md)] block cipher.  With [!INCLUDE[TLA2#tla_aes](~/includes/tla2sharptla-aes-md.md)], blocks are encrypted independently such that two blocks of identical clear text produce identical cipher text results.  To minimize potential decryption threats from independent block encryption, applications should employ methods to modify content, such as compression, to avoid encrypting identical clear text blocks.\"\n  example:\n  - \"The following example shows how to use the <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> method to convert clear-text data to encrypted-text data.  \\n  \\n [!code-csharp[RightsManagedContentPublish#RmContPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedContentPublish/CSharp/Window1.xaml.cs#rmcontpubencrypt)]\\n [!code-vb[RightsManagedContentPublish#RmContPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedContentPublish/visualbasic/window1.xaml.vb#rmcontpubencrypt)]\"\n  syntax:\n    content: public byte[] Encrypt (byte[] clearText);\n    parameters:\n    - id: clearText\n      type: System.Byte[]\n      description: The clear text content to encrypt.\n    return:\n      type: System.Byte[]\n      description: Encrypted cipher text of the given <code>clearText</code>.\n  overload: System.Security.RightsManagement.CryptoProvider.Encrypt*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>clearText</code> is null.\n  - type: System.Security.RightsManagement.RightsManagementException\n    commentId: T:System.Security.RightsManagement.RightsManagementException\n    description: Encryption is not permitted.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/CryptoProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Security.RightsManagement.CryptoProvider.Finalize\n  commentId: M:System.Security.RightsManagement.CryptoProvider.Finalize\n  id: Finalize\n  parent: System.Security.RightsManagement.CryptoProvider\n  langs:\n  - csharp\n  name: Finalize()\n  nameWithType: CryptoProvider.Finalize()\n  fullName: CryptoProvider.Finalize()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.RightsManagement\n  summary: Frees resources and performs internal cleanup before the instance is reclaimed by garbage collection.\n  remarks: \"<xref:System.Security.RightsManagement.CryptoProvider.Finalize%2A> performs <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>(**false**).  \\n  \\n This method overrides  <xref:System.Object.Finalize%2A>. Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A> method.  \\n  \\n For more information, see [Finalize Methods and Destructors](http://msdn.microsoft.com/en-us/fd376774-1643-499b-869e-9546a3aeea70), [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md), and [Overriding the Finalize Method](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).\"\n  syntax:\n    content: ~CryptoProvider ();\n    parameters: []\n  overload: System.Security.RightsManagement.CryptoProvider.Finalize*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/CryptoProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Security.RightsManagement.RightsManagementException\n  parent: System.Security.RightsManagement\n  isExternal: false\n  name: RightsManagementException\n  nameWithType: RightsManagementException\n  fullName: System.Security.RightsManagement.RightsManagementException\n- uid: System.Security.RightsManagement.CryptoProvider.BlockSize\n  parent: System.Security.RightsManagement.CryptoProvider\n  isExternal: false\n  name: BlockSize\n  nameWithType: CryptoProvider.BlockSize\n  fullName: CryptoProvider.BlockSize\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.RightsManagement.CryptoProvider.BoundGrants\n  parent: System.Security.RightsManagement.CryptoProvider\n  isExternal: false\n  name: BoundGrants\n  nameWithType: CryptoProvider.BoundGrants\n  fullName: CryptoProvider.BoundGrants\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n  name: ReadOnlyCollection<T>\n  nameWithType: ReadOnlyCollection<T>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>\n- uid: System.Security.RightsManagement.ContentGrant\n  name: ContentGrant\n  nameWithType: ContentGrant\n  fullName: System.Security.RightsManagement.ContentGrant\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.RightsManagement.ContentGrant}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: ReadOnlyCollection<ContentGrant>\n  nameWithType: ReadOnlyCollection<ContentGrant>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Security.RightsManagement.ContentGrant>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Security.RightsManagement.ContentGrant\n    name: ContentGrant\n    nameWithType: ContentGrant\n    fullName: System.Security.RightsManagement.ContentGrant\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Security.RightsManagement.CryptoProvider.CanDecrypt\n  parent: System.Security.RightsManagement.CryptoProvider\n  isExternal: false\n  name: CanDecrypt\n  nameWithType: CryptoProvider.CanDecrypt\n  fullName: CryptoProvider.CanDecrypt\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.RightsManagement.CryptoProvider.CanEncrypt\n  parent: System.Security.RightsManagement.CryptoProvider\n  isExternal: false\n  name: CanEncrypt\n  nameWithType: CryptoProvider.CanEncrypt\n  fullName: CryptoProvider.CanEncrypt\n- uid: System.Security.RightsManagement.CryptoProvider.CanMergeBlocks\n  parent: System.Security.RightsManagement.CryptoProvider\n  isExternal: false\n  name: CanMergeBlocks\n  nameWithType: CryptoProvider.CanMergeBlocks\n  fullName: CryptoProvider.CanMergeBlocks\n- uid: System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])\n  parent: System.Security.RightsManagement.CryptoProvider\n  isExternal: false\n  name: Decrypt(Byte[])\n  nameWithType: CryptoProvider.Decrypt(Byte[])\n  fullName: CryptoProvider.Decrypt(Byte[])\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Security.RightsManagement.CryptoProvider.Dispose\n  parent: System.Security.RightsManagement.CryptoProvider\n  isExternal: false\n  name: Dispose()\n  nameWithType: CryptoProvider.Dispose()\n  fullName: CryptoProvider.Dispose()\n- uid: System.Security.RightsManagement.CryptoProvider.Dispose(System.Boolean)\n  parent: System.Security.RightsManagement.CryptoProvider\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: CryptoProvider.Dispose(Boolean)\n  fullName: CryptoProvider.Dispose(Boolean)\n- uid: System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])\n  parent: System.Security.RightsManagement.CryptoProvider\n  isExternal: false\n  name: Encrypt(Byte[])\n  nameWithType: CryptoProvider.Encrypt(Byte[])\n  fullName: CryptoProvider.Encrypt(Byte[])\n- uid: System.Security.RightsManagement.CryptoProvider.Finalize\n  parent: System.Security.RightsManagement.CryptoProvider\n  isExternal: false\n  name: Finalize()\n  nameWithType: CryptoProvider.Finalize()\n  fullName: CryptoProvider.Finalize()\n- uid: System.Security.RightsManagement.CryptoProvider.BlockSize*\n  parent: System.Security.RightsManagement.CryptoProvider\n  isExternal: false\n  name: BlockSize\n  nameWithType: CryptoProvider.BlockSize\n  fullName: CryptoProvider.BlockSize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/CryptoProvider.xml\n- uid: System.Security.RightsManagement.CryptoProvider.BoundGrants*\n  parent: System.Security.RightsManagement.CryptoProvider\n  isExternal: false\n  name: BoundGrants\n  nameWithType: CryptoProvider.BoundGrants\n  fullName: CryptoProvider.BoundGrants\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/CryptoProvider.xml\n- uid: System.Security.RightsManagement.CryptoProvider.CanDecrypt*\n  parent: System.Security.RightsManagement.CryptoProvider\n  isExternal: false\n  name: CanDecrypt\n  nameWithType: CryptoProvider.CanDecrypt\n  fullName: CryptoProvider.CanDecrypt\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/CryptoProvider.xml\n- uid: System.Security.RightsManagement.CryptoProvider.CanEncrypt*\n  parent: System.Security.RightsManagement.CryptoProvider\n  isExternal: false\n  name: CanEncrypt\n  nameWithType: CryptoProvider.CanEncrypt\n  fullName: CryptoProvider.CanEncrypt\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/CryptoProvider.xml\n- uid: System.Security.RightsManagement.CryptoProvider.CanMergeBlocks*\n  parent: System.Security.RightsManagement.CryptoProvider\n  isExternal: false\n  name: CanMergeBlocks\n  nameWithType: CryptoProvider.CanMergeBlocks\n  fullName: CryptoProvider.CanMergeBlocks\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/CryptoProvider.xml\n- uid: System.Security.RightsManagement.CryptoProvider.Decrypt*\n  parent: System.Security.RightsManagement.CryptoProvider\n  isExternal: false\n  name: Decrypt\n  nameWithType: CryptoProvider.Decrypt\n  fullName: CryptoProvider.Decrypt\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/CryptoProvider.xml\n- uid: System.Security.RightsManagement.CryptoProvider.Dispose*\n  parent: System.Security.RightsManagement.CryptoProvider\n  isExternal: false\n  name: Dispose\n  nameWithType: CryptoProvider.Dispose\n  fullName: CryptoProvider.Dispose\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/CryptoProvider.xml\n- uid: System.Security.RightsManagement.CryptoProvider.Encrypt*\n  parent: System.Security.RightsManagement.CryptoProvider\n  isExternal: false\n  name: Encrypt\n  nameWithType: CryptoProvider.Encrypt\n  fullName: CryptoProvider.Encrypt\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/CryptoProvider.xml\n- uid: System.Security.RightsManagement.CryptoProvider.Finalize*\n  parent: System.Security.RightsManagement.CryptoProvider\n  isExternal: false\n  name: Finalize\n  nameWithType: CryptoProvider.Finalize\n  fullName: CryptoProvider.Finalize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.RightsManagement/CryptoProvider.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  nameWithType: IDisposable\n  fullName: System.IDisposable\n"}