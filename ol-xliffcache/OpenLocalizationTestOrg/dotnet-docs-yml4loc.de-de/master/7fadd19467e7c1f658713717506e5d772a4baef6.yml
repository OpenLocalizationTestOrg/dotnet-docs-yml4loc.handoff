### YamlMime:ManagedReference
items:
- uid: System.Windows.Controls.ValidationRule
  commentId: T:System.Windows.Controls.ValidationRule
  id: ValidationRule
  children:
  - System.Windows.Controls.ValidationRule.#ctor
  - System.Windows.Controls.ValidationRule.#ctor(System.Windows.Controls.ValidationStep,System.Boolean)
  - System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo)
  - System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo,System.Windows.Data.BindingExpressionBase)
  - System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo,System.Windows.Data.BindingGroup)
  - System.Windows.Controls.ValidationRule.ValidatesOnTargetUpdated
  - System.Windows.Controls.ValidationRule.ValidationStep
  langs:
  - csharp
  name: ValidationRule
  nameWithType: ValidationRule
  fullName: System.Windows.Controls.ValidationRule
  type: Class
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: Provides a way to create a custom rule in order to check the validity of user input.
  remarks: "When you use the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] data binding model, you can associate <xref:System.Windows.Data.Binding.ValidationRules%2A> with your binding object. To create custom rules, make a subclass of this class and implement the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method. Optionally, use the built-in <xref:System.Windows.Controls.ExceptionValidationRule>, which catches exceptions that are thrown during source updates, or the <xref:System.Windows.Controls.DataErrorValidationRule>, which checks for errors raised by the <xref:System.ComponentModel.IDataErrorInfo> implementation of the source object.  \n  \n The binding engine checks each <xref:System.Windows.Controls.ValidationRule> that is associated with a binding every time it transfers an input value, which is the binding target property value, to the binding source property.  \n  \n For detailed information about data validation, see [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).  \n  \n For information about how to validate user-provided data in a dialog box, see [Dialog Boxes Overview](~/docs/framework/wpf/app-development/dialog-boxes-overview.md)."
  example:
  - "The following example shows how to implement a validation rule. The input value is invalid if it contains non-numeric characters or if it is outside the lower and upper bounds. If the value of the returned <xref:System.Windows.Controls.ValidationResult> is invalid, the <xref:System.Windows.Controls.ValidationResult.ErrorContent%2A> property is set to the appropriate error message and the <xref:System.Windows.Controls.ValidationResult.IsValid%2A> property is set to `false`.  \n  \n For the complete example, see [How to: Implement Binding Validation](~/docs/framework/wpf/data/how-to-implement-binding-validation.md).  \n  \n [!code-csharp[BindValidation#3](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/AgeRangeRule.cs#3)]"
  syntax:
    content: public abstract class ValidationRule
  inheritance:
  - System.Object
  derivedClasses:
  - System.Windows.Controls.DataErrorValidationRule
  - System.Windows.Controls.ExceptionValidationRule
  - System.Windows.Controls.NotifyDataErrorValidationRule
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Controls/ValidationRule.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Controls.ValidationRule.#ctor
  commentId: M:System.Windows.Controls.ValidationRule.#ctor
  id: '#ctor'
  parent: System.Windows.Controls.ValidationRule
  langs:
  - csharp
  name: ValidationRule()
  nameWithType: ValidationRule.ValidationRule()
  fullName: ValidationRule.ValidationRule()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: Initializes a new instance of the <xref href="System.Windows.Controls.ValidationRule"></xref> class.
  syntax:
    content: protected ValidationRule ();
    parameters: []
  overload: System.Windows.Controls.ValidationRule.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Controls/ValidationRule.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Controls.ValidationRule.#ctor(System.Windows.Controls.ValidationStep,System.Boolean)
  commentId: M:System.Windows.Controls.ValidationRule.#ctor(System.Windows.Controls.ValidationStep,System.Boolean)
  id: '#ctor(System.Windows.Controls.ValidationStep,System.Boolean)'
  parent: System.Windows.Controls.ValidationRule
  langs:
  - csharp
  name: ValidationRule(ValidationStep, Boolean)
  nameWithType: ValidationRule.ValidationRule(ValidationStep, Boolean)
  fullName: ValidationRule.ValidationRule(ValidationStep, Boolean)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: Initializes a new instance of the <xref href="System.Windows.Controls.ValidationRule"></xref> class with the specified validation step and a value that indicates whether the validation rule runs when the target is updated.
  syntax:
    content: protected ValidationRule (System.Windows.Controls.ValidationStep validationStep, bool validatesOnTargetUpdated);
    parameters:
    - id: validationStep
      type: System.Windows.Controls.ValidationStep
      description: One of the enumeration values that specifies when the validation rule runs.
    - id: validatesOnTargetUpdated
      type: System.Boolean
      description: '`true` to have the validation rule run when the target of the <xref href="System.Windows.Data.Binding"></xref> is updated; otherwise, `false`.'
  overload: System.Windows.Controls.ValidationRule.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Controls/ValidationRule.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo)
  commentId: M:System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo)
  id: Validate(System.Object,System.Globalization.CultureInfo)
  parent: System.Windows.Controls.ValidationRule
  langs:
  - csharp
  name: Validate(Object, CultureInfo)
  nameWithType: ValidationRule.Validate(Object, CultureInfo)
  fullName: ValidationRule.Validate(Object, CultureInfo)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: When overridden in a derived class, performs validation checks on a value.
  remarks: "You must implement this method when you create a subclass of the <xref:System.Windows.Controls.ValidationRule> class in order to create a custom validation rule.  \n  \n Each time the data binding engine transfers a value from the binding target property (from user input) to the binding source property (the underlying data), it checks whether any <xref:System.Windows.Data.Binding.ValidationRules%2A> are defined for that binding. If <xref:System.Windows.Data.Binding.ValidationRules%2A> are defined for the binding, the engine calls the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method on each <xref:System.Windows.Controls.ValidationRule> until one of them finds an error or until all of them pass.  \n  \n For detailed information about data validation, see [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md)."
  example:
  - "The following example shows how to implement a validation rule. In the following example, the input value is invalid if it contains non-numeric characters or if it is outside the lower and upper bounds. If the input value is invalid, the <xref:System.Windows.Controls.ValidationResult.ErrorContent%2A> property is set to the appropriate error message and the <xref:System.Windows.Controls.ValidationResult.IsValid%2A> property is set to `false`.  \n  \n For the complete example, see [How to: Implement Binding Validation](~/docs/framework/wpf/data/how-to-implement-binding-validation.md).  \n  \n [!code-csharp[BindValidation#3](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/AgeRangeRule.cs#3)]"
  syntax:
    content: public abstract System.Windows.Controls.ValidationResult Validate (object value, System.Globalization.CultureInfo cultureInfo);
    parameters:
    - id: value
      type: System.Object
      description: The value from the binding target to check.
    - id: cultureInfo
      type: System.Globalization.CultureInfo
      description: The culture to use in this rule.
    return:
      type: System.Windows.Controls.ValidationResult
      description: A <xref href="System.Windows.Controls.ValidationResult"></xref> object.
  overload: System.Windows.Controls.ValidationRule.Validate*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Controls/ValidationRule.xml
  ms.technology:
  - dotnet-wpf
  ms.author: kempb
  manager: ghogen
- uid: System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo,System.Windows.Data.BindingExpressionBase)
  commentId: M:System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo,System.Windows.Data.BindingExpressionBase)
  id: Validate(System.Object,System.Globalization.CultureInfo,System.Windows.Data.BindingExpressionBase)
  parent: System.Windows.Controls.ValidationRule
  langs:
  - csharp
  name: Validate(Object, CultureInfo, BindingExpressionBase)
  nameWithType: ValidationRule.Validate(Object, CultureInfo, BindingExpressionBase)
  fullName: ValidationRule.Validate(Object, CultureInfo, BindingExpressionBase)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: Performs validation checks on a value.
  syntax:
    content: public virtual System.Windows.Controls.ValidationResult Validate (object value, System.Globalization.CultureInfo cultureInfo, System.Windows.Data.BindingExpressionBase owner);
    parameters:
    - id: value
      type: System.Object
      description: The value from the binding target to check.
    - id: cultureInfo
      type: System.Globalization.CultureInfo
      description: The culture to use in this rule.
    - id: owner
      type: System.Windows.Data.BindingExpressionBase
      description: The binding expression that uses the validation rule.
    return:
      type: System.Windows.Controls.ValidationResult
      description: A <xref href="System.Windows.Controls.ValidationResult"></xref> object.
  overload: System.Windows.Controls.ValidationRule.Validate*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Controls/ValidationRule.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo,System.Windows.Data.BindingGroup)
  commentId: M:System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo,System.Windows.Data.BindingGroup)
  id: Validate(System.Object,System.Globalization.CultureInfo,System.Windows.Data.BindingGroup)
  parent: System.Windows.Controls.ValidationRule
  langs:
  - csharp
  name: Validate(Object, CultureInfo, BindingGroup)
  nameWithType: ValidationRule.Validate(Object, CultureInfo, BindingGroup)
  fullName: ValidationRule.Validate(Object, CultureInfo, BindingGroup)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: Performs validation checks on a value.
  syntax:
    content: public virtual System.Windows.Controls.ValidationResult Validate (object value, System.Globalization.CultureInfo cultureInfo, System.Windows.Data.BindingGroup owner);
    parameters:
    - id: value
      type: System.Object
      description: The value from the binding target to check.
    - id: cultureInfo
      type: System.Globalization.CultureInfo
      description: The culture to use in this rule.
    - id: owner
      type: System.Windows.Data.BindingGroup
      description: The binding group that uses the validation rule.
    return:
      type: System.Windows.Controls.ValidationResult
      description: A <xref href="System.Windows.Controls.ValidationResult"></xref> object.
  overload: System.Windows.Controls.ValidationRule.Validate*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Controls/ValidationRule.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Controls.ValidationRule.ValidatesOnTargetUpdated
  commentId: P:System.Windows.Controls.ValidationRule.ValidatesOnTargetUpdated
  id: ValidatesOnTargetUpdated
  parent: System.Windows.Controls.ValidationRule
  langs:
  - csharp
  name: ValidatesOnTargetUpdated
  nameWithType: ValidationRule.ValidatesOnTargetUpdated
  fullName: ValidationRule.ValidatesOnTargetUpdated
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: Gets or sets a value that indicates whether the validation rule runs when the target of the <xref href="System.Windows.Data.Binding"></xref> is updated.
  remarks: ''
  example:
  - "The following example checks whether the <xref:System.Windows.Controls.TextBox> is empty. The <xref:System.Windows.Controls.ValidationRule>, `ValueIsNotNull`, has <xref:System.Windows.Controls.ValidationRule.ValidatesOnTargetUpdated%2A> set to `true`, so that when the application starts, the <xref:System.Windows.Controls.ValidationRule> runs and displays a message if the <xref:System.Windows.Controls.TextBox> is empty.  \n  \n [!code-xml[BindingGroupSnippets#ValidatesOnTargetUpdated](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#validatesontargetupdated)]  \n  \n The following example shows the <xref:System.Windows.Controls.ValidationRule> that is used in the previous example and the event handler for the <xref:System.Windows.Controls.Validation.Error> event.  \n  \n [!code-csharp[BindingGroupSnippets#ValueIsNotNull](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml.cs#valueisnotnull)]\n [!code-vb[BindingGroupSnippets#ValueIsNotNull](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window3.xaml.vb#valueisnotnull)]"
  syntax:
    content: public bool ValidatesOnTargetUpdated { get; set; }
    return:
      type: System.Boolean
      description: '`true` if the validation rule runs when the target of the <xref href="System.Windows.Data.Binding"></xref> is updated; otherwise, `false`.'
  overload: System.Windows.Controls.ValidationRule.ValidatesOnTargetUpdated*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Controls/ValidationRule.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Controls.ValidationRule.ValidationStep
  commentId: P:System.Windows.Controls.ValidationRule.ValidationStep
  id: ValidationStep
  parent: System.Windows.Controls.ValidationRule
  langs:
  - csharp
  name: ValidationStep
  nameWithType: ValidationRule.ValidationStep
  fullName: ValidationRule.ValidationStep
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: Gets or sets when the validation rule runs.
  remarks: ''
  example:
  - "The following example sets the <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> to <xref:System.Windows.Controls.ValidationStep.ConvertedProposedValue> on the <xref:System.Windows.Controls.ValidationRule> called `ValidateDateAndPrice` so that when it runs, the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method has access to values that are of the source property's type. When the rules `PriceIsAPositiveNumber` and `FutureDateRule` run, the values in each <xref:System.Windows.Controls.ValidationRule.Validate%2A> method are strings because the rules run before the values are converted to their respective types.  \n  \n [!code-xml[BindingGroupSnippets#WindowLayout](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml#windowlayout)]  \n  \n The following example shows the <xref:System.Windows.Controls.ValidationRule>`ValidateDateAndPrice`. In the `Validate` method override, the `Price` property is of type <xref:System.Double> and the `OfferExpires` property is of type <xref:System.DateTime> because the strings have been converted to their respective types by the time the <xref:System.Windows.Controls.ValidationRule> runs.  \n  \n [!code-csharp[BindingGroupSnippets#ValidateObject](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Data.cs#validateobject)]\n [!code-vb[BindingGroupSnippets#ValidateObject](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/data.vb#validateobject)]"
  syntax:
    content: public System.Windows.Controls.ValidationStep ValidationStep { get; set; }
    return:
      type: System.Windows.Controls.ValidationStep
      description: One of the enumeration values.  The default is <xref href="System.Windows.Controls.ValidationStep.RawProposedValue"></xref>.
  overload: System.Windows.Controls.ValidationRule.ValidationStep*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Controls/ValidationRule.xml
  ms.technology:
  - dotnet-wpf
  ms.author: kempb
  manager: ghogen
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Controls.ValidationRule.#ctor
  parent: System.Windows.Controls.ValidationRule
  isExternal: false
  name: ValidationRule()
  nameWithType: ValidationRule.ValidationRule()
  fullName: ValidationRule.ValidationRule()
- uid: System.Windows.Controls.ValidationRule.#ctor(System.Windows.Controls.ValidationStep,System.Boolean)
  parent: System.Windows.Controls.ValidationRule
  isExternal: false
  name: ValidationRule(ValidationStep, Boolean)
  nameWithType: ValidationRule.ValidationRule(ValidationStep, Boolean)
  fullName: ValidationRule.ValidationRule(ValidationStep, Boolean)
- uid: System.Windows.Controls.ValidationStep
  parent: System.Windows.Controls
  isExternal: false
  name: ValidationStep
  nameWithType: ValidationStep
  fullName: System.Windows.Controls.ValidationStep
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo)
  parent: System.Windows.Controls.ValidationRule
  isExternal: false
  name: Validate(Object, CultureInfo)
  nameWithType: ValidationRule.Validate(Object, CultureInfo)
  fullName: ValidationRule.Validate(Object, CultureInfo)
- uid: System.Windows.Controls.ValidationResult
  parent: System.Windows.Controls
  isExternal: false
  name: ValidationResult
  nameWithType: ValidationResult
  fullName: System.Windows.Controls.ValidationResult
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: false
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo,System.Windows.Data.BindingExpressionBase)
  parent: System.Windows.Controls.ValidationRule
  isExternal: false
  name: Validate(Object, CultureInfo, BindingExpressionBase)
  nameWithType: ValidationRule.Validate(Object, CultureInfo, BindingExpressionBase)
  fullName: ValidationRule.Validate(Object, CultureInfo, BindingExpressionBase)
- uid: System.Windows.Data.BindingExpressionBase
  parent: System.Windows.Data
  isExternal: false
  name: BindingExpressionBase
  nameWithType: BindingExpressionBase
  fullName: System.Windows.Data.BindingExpressionBase
- uid: System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo,System.Windows.Data.BindingGroup)
  parent: System.Windows.Controls.ValidationRule
  isExternal: false
  name: Validate(Object, CultureInfo, BindingGroup)
  nameWithType: ValidationRule.Validate(Object, CultureInfo, BindingGroup)
  fullName: ValidationRule.Validate(Object, CultureInfo, BindingGroup)
- uid: System.Windows.Data.BindingGroup
  parent: System.Windows.Data
  isExternal: false
  name: BindingGroup
  nameWithType: BindingGroup
  fullName: System.Windows.Data.BindingGroup
- uid: System.Windows.Controls.ValidationRule.ValidatesOnTargetUpdated
  parent: System.Windows.Controls.ValidationRule
  isExternal: false
  name: ValidatesOnTargetUpdated
  nameWithType: ValidationRule.ValidatesOnTargetUpdated
  fullName: ValidationRule.ValidatesOnTargetUpdated
- uid: System.Windows.Controls.ValidationRule.ValidationStep
  parent: System.Windows.Controls.ValidationRule
  isExternal: false
  name: ValidationStep
  nameWithType: ValidationRule.ValidationStep
  fullName: ValidationRule.ValidationStep
- uid: System.Windows.Controls.ValidationRule.#ctor*
  parent: System.Windows.Controls.ValidationRule
  isExternal: false
  name: ValidationRule
  nameWithType: ValidationRule.ValidationRule
  fullName: ValidationRule.ValidationRule
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Controls/ValidationRule.xml
- uid: System.Windows.Controls.ValidationRule.Validate*
  parent: System.Windows.Controls.ValidationRule
  isExternal: false
  name: Validate
  nameWithType: ValidationRule.Validate
  fullName: ValidationRule.Validate
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Controls/ValidationRule.xml
- uid: System.Windows.Controls.ValidationRule.ValidatesOnTargetUpdated*
  parent: System.Windows.Controls.ValidationRule
  isExternal: false
  name: ValidatesOnTargetUpdated
  nameWithType: ValidationRule.ValidatesOnTargetUpdated
  fullName: ValidationRule.ValidatesOnTargetUpdated
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Controls/ValidationRule.xml
- uid: System.Windows.Controls.ValidationRule.ValidationStep*
  parent: System.Windows.Controls.ValidationRule
  isExternal: false
  name: ValidationStep
  nameWithType: ValidationRule.ValidationStep
  fullName: ValidationRule.ValidationStep
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Controls/ValidationRule.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
