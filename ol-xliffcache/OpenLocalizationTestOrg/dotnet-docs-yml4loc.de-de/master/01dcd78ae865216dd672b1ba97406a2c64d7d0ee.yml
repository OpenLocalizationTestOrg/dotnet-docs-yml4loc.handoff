### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.SessionMode
  commentId: T:System.ServiceModel.SessionMode
  id: SessionMode
  children:
  - System.ServiceModel.SessionMode.Allowed
  - System.ServiceModel.SessionMode.NotAllowed
  - System.ServiceModel.SessionMode.Required
  langs:
  - csharp
  name: SessionMode
  nameWithType: SessionMode
  fullName: System.ServiceModel.SessionMode
  type: Enum
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Specifies the values available to indicate the support for reliable sessions that a contract requires or supports.
  remarks: "Use the <xref:System.ServiceModel.SessionMode> enumeration with the <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A?displayProperty=fullName> property to require, allow, or prohibit bindings to use sessions between endpoints that connect to or support the service contract. A session is a way of correlating a set of messages exchanged between two or more endpoints. For more information about sessions, see [Using Sessions](~/docs/framework/wcf/using-sessions.md).  \n  \n If your service supports sessions, you can then use the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=fullName> property to specify the relationship between instances of your service contract implementation and the channel session.  \n  \n For example, if the <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> property is set to Allowed and the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=fullName> property is set to <xref:System.ServiceModel.InstanceContextMode?displayProperty=fullName>, a client can use a binding that supports reliable sessions to make repeated calls to the same service object.  \n  \n Because a session is a channel-level concept that the application model uses, there is an interaction between the <xref:System.ServiceModel.SessionMode> enumeration in a contract and the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=fullName> property, which controls the association between channels and specific service objects.  \n  \n The following table shows the result of an incoming channel either supporting reliable sessions or not supporting reliable sessions given a service's combination of the values of the <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A?displayProperty=fullName> property and the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=fullName> property.  \n  \n|InstanceContextMode Value|Required|Allowed|NotAllowed|  \n|-------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------|  \n|PerCall|-   Behavior with sessionful channel: A session and <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for each call.<br />-   Behavior with sessionless channel: An exception is thrown.|-   Behavior with sessionful channel: A session and <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for each call.<br />-   Behavior with sessionless channel: An <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for each call.|-   Behavior with sessionful channel: An exception is thrown.<br />-   Behavior with sessionless channel: An <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for each call.|  \n|PerSession|-   Behavior with sessionful channel: A session and <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for each channel.<br />-   Behavior with sessionless channel: An exception is thrown.|-   Behavior with sessionful channel: A session and <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for each channel.<br />-   Behavior with sessionless channel: An <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for each call.|-   Behavior with sessionful channel: An exception is thrown.<br />-   Behavior with sessionless channel: An <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for each call.|  \n|Single|-   Behavior with sessionful channel: One session and one <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for all calls.<br />-   Behavior with sessionless channel: An exception is thrown.|-   Behavior with sessionful channel: A session and <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for each created singleton or for the user-specified singleton.<br />-   Behavior with sessionless channel: An <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for each created singleton or for the user-specified singleton.|-   Behavior with sessionful channel: An exception is thrown.<br />-   Behavior with sessionless channel: An <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> for each created singleton or for the user-specified singleton.|"
  example:
  - "The following code example shows how to use the <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A>property of the <xref:System.ServiceModel.ServiceContractAttribute> to specify that the `IMyService` service contract requires bindings that support session state.  \n  \n [!code-csharp[SCA.Session#1](~/samples/snippets/csharp/VS_Snippets_CFX/sca.session/cs/services.cs#1)]\n [!code-vb[SCA.Session#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/sca.session/vb/services.vb#1)]"
  syntax:
    content: public enum SessionMode
  inheritance:
  - System.Object
  - System.ValueType
  - System.Enum
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/SessionMode.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.SessionMode.Allowed
  commentId: F:System.ServiceModel.SessionMode.Allowed
  id: Allowed
  parent: System.ServiceModel.SessionMode
  langs:
  - csharp
  name: Allowed
  nameWithType: SessionMode.Allowed
  fullName: SessionMode.Allowed
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Specifies that the contract supports sessions if the incoming binding supports them.
  syntax:
    content: Allowed
    return:
      type: System.ServiceModel.SessionMode
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/SessionMode.xml
- uid: System.ServiceModel.SessionMode.NotAllowed
  commentId: F:System.ServiceModel.SessionMode.NotAllowed
  id: NotAllowed
  parent: System.ServiceModel.SessionMode
  langs:
  - csharp
  name: NotAllowed
  nameWithType: SessionMode.NotAllowed
  fullName: SessionMode.NotAllowed
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Specifies that the contract never supports bindings that initiate sessions.
  syntax:
    content: NotAllowed
    return:
      type: System.ServiceModel.SessionMode
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/SessionMode.xml
- uid: System.ServiceModel.SessionMode.Required
  commentId: F:System.ServiceModel.SessionMode.Required
  id: Required
  parent: System.ServiceModel.SessionMode
  langs:
  - csharp
  name: Required
  nameWithType: SessionMode.Required
  fullName: SessionMode.Required
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Specifies that the contract requires a sessionful binding. An exception is thrown if the binding is not configured to support session.
  syntax:
    content: Required
    return:
      type: System.ServiceModel.SessionMode
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/SessionMode.xml
references:
- uid: System.Enum
  parent: System
  isExternal: false
  name: Enum
  nameWithType: Enum
  fullName: System.Enum
- uid: System.ServiceModel.SessionMode.Allowed
  parent: System.ServiceModel.SessionMode
  isExternal: false
  name: Allowed
  nameWithType: SessionMode.Allowed
  fullName: SessionMode.Allowed
- uid: System.ServiceModel.SessionMode
  parent: System.ServiceModel
  isExternal: false
  name: SessionMode
  nameWithType: SessionMode
  fullName: System.ServiceModel.SessionMode
- uid: System.ServiceModel.SessionMode.NotAllowed
  parent: System.ServiceModel.SessionMode
  isExternal: false
  name: NotAllowed
  nameWithType: SessionMode.NotAllowed
  fullName: SessionMode.NotAllowed
- uid: System.ServiceModel.SessionMode.Required
  parent: System.ServiceModel.SessionMode
  isExternal: false
  name: Required
  nameWithType: SessionMode.Required
  fullName: SessionMode.Required
