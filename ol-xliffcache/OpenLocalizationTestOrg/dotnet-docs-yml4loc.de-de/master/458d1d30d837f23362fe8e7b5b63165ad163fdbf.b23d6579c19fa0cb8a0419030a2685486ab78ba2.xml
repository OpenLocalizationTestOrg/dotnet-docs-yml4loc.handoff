{"nodes":[{"content":"Represents the binding element that can produce the sending and receiving channels required for a reliable session between endpoints.","nodes":[{"pos":[0,133],"content":"Represents the binding element that can produce the sending and receiving channels required for a reliable session between endpoints.","nodes":[{"content":"Represents the binding element that can produce the sending and receiving channels required for a reliable session between endpoints.","pos":[0,133]}]}],"pos":[2272,2406],"yaml":true},{"content":"Provides sessions and optionally provides ordered message delivery. This implemented session can cross SOAP and transport intermediaries.  \n  \n Each binding element represents a processing step when sending or receiving messages. At runtime, binding elements create the channel factories and listeners that are necessary to build outgoing and incoming channel stacks required to send and receive messages. The <xref:System.ServiceModel.Channels.ReliableSessionBindingElement> provides an optional layer in the stack that can establish a reliable session between endpoints and configure the behavior of this session.  \n  \n The <xref:System.ServiceModel.Channels.ReliableSessionBindingElement> is provided on the standard bindings in the following table.  \n  \n|Binding|Default|  \n|-------------|-------------|  \n|<xref:System.ServiceModel.NetTcpBinding>|Off|  \n|<xref:System.ServiceModel.WSHttpBinding>|Off|  \n|<xref:System.ServiceModel.WSDualHttpBinding>|On (required)|","nodes":[{"pos":[0,137],"content":"Provides sessions and optionally provides ordered message delivery. This implemented session can cross SOAP and transport intermediaries.","nodes":[{"content":"Provides sessions and optionally provides ordered message delivery. This implemented session can cross SOAP and transport intermediaries.","pos":[0,137],"nodes":[{"content":"Provides sessions and optionally provides ordered message delivery.","pos":[0,67]},{"content":"This implemented session can cross SOAP and transport intermediaries.","pos":[68,137]}]}]},{"pos":[144,615],"content":"Each binding element represents a processing step when sending or receiving messages. At runtime, binding elements create the channel factories and listeners that are necessary to build outgoing and incoming channel stacks required to send and receive messages. The <xref:System.ServiceModel.Channels.ReliableSessionBindingElement> provides an optional layer in the stack that can establish a reliable session between endpoints and configure the behavior of this session.","nodes":[{"content":"Each binding element represents a processing step when sending or receiving messages. At runtime, binding elements create the channel factories and listeners that are necessary to build outgoing and incoming channel stacks required to send and receive messages. The <xref:System.ServiceModel.Channels.ReliableSessionBindingElement> provides an optional layer in the stack that can establish a reliable session between endpoints and configure the behavior of this session.","pos":[0,471],"nodes":[{"content":"Each binding element represents a processing step when sending or receiving messages.","pos":[0,85]},{"content":"At runtime, binding elements create the channel factories and listeners that are necessary to build outgoing and incoming channel stacks required to send and receive messages.","pos":[86,261]},{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.ReliableSessionBindingElement&gt;</ph> provides an optional layer in the stack that can establish a reliable session between endpoints and configure the behavior of this session.","pos":[262,471],"source":" The <xref:System.ServiceModel.Channels.ReliableSessionBindingElement> provides an optional layer in the stack that can establish a reliable session between endpoints and configure the behavior of this session."}]}]},{"pos":[622,752],"content":"The <xref:System.ServiceModel.Channels.ReliableSessionBindingElement> is provided on the standard bindings in the following table.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.ReliableSessionBindingElement&gt;</ph> is provided on the standard bindings in the following table.","pos":[0,130],"source":"The <xref:System.ServiceModel.Channels.ReliableSessionBindingElement> is provided on the standard bindings in the following table."}]},{"pos":[759,766],"content":"Binding","nodes":[{"content":"Binding","pos":[0,7]}]},{"pos":[767,774],"content":"Default","nodes":[{"content":"Default","pos":[0,7]}]},{"pos":[811,851],"content":"<xref:System.ServiceModel.NetTcpBinding>","nodes":[]},{"pos":[852,855],"content":"Off","nodes":[{"content":"Off","pos":[0,3]}]},{"pos":[860,900],"content":"<xref:System.ServiceModel.WSHttpBinding>","nodes":[]},{"pos":[901,904],"content":"Off","nodes":[{"content":"Off","pos":[0,3]}]},{"pos":[909,953],"content":"<xref:System.ServiceModel.WSDualHttpBinding>","nodes":[]},{"pos":[954,967],"content":"On (required)","nodes":[{"content":"On (required)","pos":[0,13]}]}],"pos":[2417,3398],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.ReliableSessionBindingElement\"></xref> class.","nodes":[{"pos":[0,120],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.ReliableSessionBindingElement\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.ReliableSessionBindingElement\"></xref> class."}],"pos":[5998,6119],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.ReliableSessionBindingElement\"></xref> class that specifies whether message delivery must preserve the order in which messages are sent.","nodes":[{"pos":[0,211],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.ReliableSessionBindingElement\"&gt;&lt;/xref&gt;</ph> class that specifies whether message delivery must preserve the order in which messages are sent.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.ReliableSessionBindingElement\"></xref> class that specifies whether message delivery must preserve the order in which messages are sent."}],"pos":[7602,7814],"yaml":true},{"content":"`true` if messages must be delivered in the order in which they are sent; otherwise, `false`. The default value is `true`.","nodes":[{"pos":[0,122],"content":"`true` if messages must be delivered in the order in which they are sent; otherwise, `false`. The default value is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if messages must be delivered in the order in which they are sent; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,93],"source":"`true` if messages must be delivered in the order in which they are sent; otherwise, `false`."},{"content":"The default value is <ph id=\"ph1\">`true`</ph>.","pos":[94,122],"source":" The default value is `true`."}]}],"pos":[7970,8095],"yaml":true},{"content":"Gets or sets the interval of time that a destination waits before sending an acknowledgment to the message source on reliable channels that are created by the factory.","nodes":[{"pos":[0,167],"content":"Gets or sets the interval of time that a destination waits before sending an acknowledgment to the message source on reliable channels that are created by the factory.","nodes":[{"content":"Gets or sets the interval of time that a destination waits before sending an acknowledgment to the message source on reliable channels that are created by the factory.","pos":[0,167]}]}],"pos":[9451,9619],"yaml":true},{"content":"The destination that receives messages on a reliable channel groups the acknowledgments for these messages together into a single message to reduce network traffic and to increase information density on messages. Grouping scales better as traffic increases. It does not attempt to send an acknowledgment for every message it receives as soon as possible, but rather waits for an interval of time, groups together the acknowledgments that have arrived during that interval, and then sends them all together. The first message that is received is the exception; it is acknowledged as soon as it is delivered. Also, if reliable sessions are used with single HTTP connections, as is the case for example with the <xref:System.ServiceModel.WSHttpBinding> but not <xref:System.ServiceModel.WSDualHttpBinding>, then this setting is not used.  \n  \n The value that is set with the <xref:System.ServiceModel.Channels.ReliableSessionBindingElement.AcknowledgementInterval%2A> property is a recommendation to the infrastructure and not a hard limit.","nodes":[{"pos":[0,834],"content":"The destination that receives messages on a reliable channel groups the acknowledgments for these messages together into a single message to reduce network traffic and to increase information density on messages. Grouping scales better as traffic increases. It does not attempt to send an acknowledgment for every message it receives as soon as possible, but rather waits for an interval of time, groups together the acknowledgments that have arrived during that interval, and then sends them all together. The first message that is received is the exception; it is acknowledged as soon as it is delivered. Also, if reliable sessions are used with single HTTP connections, as is the case for example with the <xref:System.ServiceModel.WSHttpBinding> but not <xref:System.ServiceModel.WSDualHttpBinding>, then this setting is not used.","nodes":[{"content":"The destination that receives messages on a reliable channel groups the acknowledgments for these messages together into a single message to reduce network traffic and to increase information density on messages. Grouping scales better as traffic increases. It does not attempt to send an acknowledgment for every message it receives as soon as possible, but rather waits for an interval of time, groups together the acknowledgments that have arrived during that interval, and then sends them all together. The first message that is received is the exception; it is acknowledged as soon as it is delivered. Also, if reliable sessions are used with single HTTP connections, as is the case for example with the <xref:System.ServiceModel.WSHttpBinding> but not <xref:System.ServiceModel.WSDualHttpBinding>, then this setting is not used.","pos":[0,834],"nodes":[{"content":"The destination that receives messages on a reliable channel groups the acknowledgments for these messages together into a single message to reduce network traffic and to increase information density on messages.","pos":[0,212]},{"content":"Grouping scales better as traffic increases.","pos":[213,257]},{"content":"It does not attempt to send an acknowledgment for every message it receives as soon as possible, but rather waits for an interval of time, groups together the acknowledgments that have arrived during that interval, and then sends them all together.","pos":[258,506]},{"content":"The first message that is received is the exception; it is acknowledged as soon as it is delivered.","pos":[507,606]},{"content":"Also, if reliable sessions are used with single HTTP connections, as is the case for example with the <ph id=\"ph1\">&lt;xref:System.ServiceModel.WSHttpBinding&gt;</ph> but not <ph id=\"ph2\">&lt;xref:System.ServiceModel.WSDualHttpBinding&gt;</ph>, then this setting is not used.","pos":[607,834],"source":" Also, if reliable sessions are used with single HTTP connections, as is the case for example with the <xref:System.ServiceModel.WSHttpBinding> but not <xref:System.ServiceModel.WSDualHttpBinding>, then this setting is not used."}]}]},{"pos":[841,1037],"content":"The value that is set with the <xref:System.ServiceModel.Channels.ReliableSessionBindingElement.AcknowledgementInterval%2A> property is a recommendation to the infrastructure and not a hard limit.","nodes":[{"content":"The value that is set with the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.ReliableSessionBindingElement.AcknowledgementInterval%2A&gt;</ph> property is a recommendation to the infrastructure and not a hard limit.","pos":[0,196],"source":"The value that is set with the <xref:System.ServiceModel.Channels.ReliableSessionBindingElement.AcknowledgementInterval%2A> property is a recommendation to the infrastructure and not a hard limit."}]}],"pos":[9630,10672],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.TimeSpan\"></xref> that specifies the interval of time that a service waits until sending an acknowledgment to the message source. The default value is 2 seconds.","nodes":[{"pos":[0,184],"content":"The <xref href=\"System.TimeSpan\"></xref> that specifies the interval of time that a service waits until sending an acknowledgment to the message source. The default value is 2 seconds.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies the interval of time that a service waits until sending an acknowledgment to the message source.","pos":[0,152],"source":"The <xref href=\"System.TimeSpan\"></xref> that specifies the interval of time that a service waits until sending an acknowledgment to the message source."},{"content":"The default value is 2 seconds.","pos":[153,184]}]}],"pos":[10808,10993],"yaml":true},{"content":"The value set is less than or equal to zero.","nodes":[{"pos":[0,44],"content":"The value set is less than or equal to zero.","nodes":[{"content":"The value set is less than or equal to zero.","pos":[0,44]}]}],"pos":[11217,11262],"yaml":true},{"content":"Returns a factory that creates a channel of a specified type that supports a reliable session.","nodes":[{"pos":[0,94],"content":"Returns a factory that creates a channel of a specified type that supports a reliable session.","nodes":[{"content":"Returns a factory that creates a channel of a specified type that supports a reliable session.","pos":[0,94]}]}],"pos":[12719,12814],"yaml":true},{"content":"The <xref:System.ServiceModel.Channels.IChannel> produced by the factory is of type `TChannel`. The types of `TChannel` supported on the client is dependent of the types of underlying channels that connect to the service. The following table indicates what reliable session channel types are supported as a function of the underlying channels.  \n  \n|Support for Reliable Session `TChannel` Types by Underlying Channel Types|IRequestChannel|IRequestSessionChannel|IDuplexChannel|IDuplexSessionChannel|  \n|-------------------------------------------------------------------------------|---------------------|----------------------------|--------------------|---------------------------|  \n|IOutputSessionChannel|Yes|Yes|Yes|Yes|  \n|IRequestSessionChannel|Yes|Yes|No|No|  \n|IDuplexSessionChannel|No|No|Yes|Yes|","nodes":[{"pos":[0,343],"content":"The <xref:System.ServiceModel.Channels.IChannel> produced by the factory is of type `TChannel`. The types of `TChannel` supported on the client is dependent of the types of underlying channels that connect to the service. The following table indicates what reliable session channel types are supported as a function of the underlying channels.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.IChannel&gt;</ph> produced by the factory is of type <ph id=\"ph2\">`TChannel`</ph>.","pos":[0,95],"source":"The <xref:System.ServiceModel.Channels.IChannel> produced by the factory is of type `TChannel`."},{"content":"The types of <ph id=\"ph1\">`TChannel`</ph> supported on the client is dependent of the types of underlying channels that connect to the service.","pos":[96,221],"source":" The types of `TChannel` supported on the client is dependent of the types of underlying channels that connect to the service."},{"content":"The following table indicates what reliable session channel types are supported as a function of the underlying channels.","pos":[222,343]}]},{"pos":[350,423],"content":"Support for Reliable Session <ph id=\"ph1\">`TChannel`</ph> Types by Underlying Channel Types","source":"Support for Reliable Session `TChannel` Types by Underlying Channel Types"},{"pos":[424,439],"content":"IRequestChannel","nodes":[{"content":"IRequestChannel","pos":[0,15]}]},{"pos":[440,462],"content":"IRequestSessionChannel","nodes":[{"content":"IRequestSessionChannel","pos":[0,22]}]},{"pos":[463,477],"content":"IDuplexChannel","nodes":[{"content":"IDuplexChannel","pos":[0,14]}]},{"pos":[478,499],"content":"IDuplexSessionChannel","nodes":[{"content":"IDuplexSessionChannel","pos":[0,21]}]},{"pos":[688,709],"content":"IOutputSessionChannel","nodes":[{"content":"IOutputSessionChannel","pos":[0,21]}]},{"pos":[710,713],"content":"Yes","nodes":[{"content":"Yes","pos":[0,3]}]},{"pos":[714,717],"content":"Yes","nodes":[{"content":"Yes","pos":[0,3]}]},{"pos":[718,721],"content":"Yes","nodes":[{"content":"Yes","pos":[0,3]}]},{"pos":[722,725],"content":"Yes","nodes":[{"content":"Yes","pos":[0,3]}]},{"pos":[730,752],"content":"IRequestSessionChannel","nodes":[{"content":"IRequestSessionChannel","pos":[0,22]}]},{"pos":[753,756],"content":"Yes","nodes":[{"content":"Yes","pos":[0,3]}]},{"pos":[757,760],"content":"Yes","nodes":[{"content":"Yes","pos":[0,3]}]},{"pos":[761,763],"content":"No","nodes":[{"content":"No","pos":[0,2]}]},{"pos":[764,766],"content":"No","nodes":[{"content":"No","pos":[0,2]}]},{"pos":[771,792],"content":"IDuplexSessionChannel","nodes":[{"content":"IDuplexSessionChannel","pos":[0,21]}]},{"pos":[793,795],"content":"No","nodes":[{"content":"No","pos":[0,2]}]},{"pos":[796,798],"content":"No","nodes":[{"content":"No","pos":[0,2]}]},{"pos":[799,802],"content":"Yes","nodes":[{"content":"Yes","pos":[0,3]}]},{"pos":[803,806],"content":"Yes","nodes":[{"content":"Yes","pos":[0,3]}]}],"pos":[12825,13641],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> that contains the information required to build the factories that can produce channels of type <code>TChannel</code>.","nodes":[{"pos":[0,187],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.BindingContext\"&gt;&lt;/xref&gt;</ph> that contains the information required to build the factories that can produce channels of type <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">TChannel</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> that contains the information required to build the factories that can produce channels of type <code>TChannel</code>."}],"pos":[13929,14117],"yaml":true},{"content":"The type of channel the factory builds.","nodes":[{"pos":[0,39],"content":"The type of channel the factory builds.","nodes":[{"content":"The type of channel the factory builds.","pos":[0,39]}]}],"pos":[14175,14215],"yaml":true},{"content":"A <xref href=\"System.ServiceModel.Channels.IChannelFactory`1\"></xref> of type <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> initialized from the <code>context</code>.","nodes":[{"pos":[0,179],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.IChannelFactory`1\"&gt;&lt;/xref&gt;</ph> of type <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Channels.IChannel\"&gt;&lt;/xref&gt;</ph> initialized from the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph3\">context</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A <xref href=\"System.ServiceModel.Channels.IChannelFactory`1\"></xref> of type <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> initialized from the <code>context</code>."}],"pos":[14305,14485],"yaml":true},{"content":"<code>TChannel</code> is not supported.","nodes":[{"pos":[0,39],"content":"<ph id=\"ph1\">&lt;code&gt;TChannel&lt;/code&gt;</ph> is not supported.","source":"<code>TChannel</code> is not supported."}],"pos":[14688,14728],"yaml":true},{"content":"Returns a listener that accepts a channel of a specified type that supports a reliable session.","nodes":[{"pos":[0,95],"content":"Returns a listener that accepts a channel of a specified type that supports a reliable session.","nodes":[{"content":"Returns a listener that accepts a channel of a specified type that supports a reliable session.","pos":[0,95]}]}],"pos":[16191,16287],"yaml":true},{"content":"The <xref:System.ServiceModel.Channels.IChannel> accepted by the listener is of type `TChannel`. The types of `TChannel` supported on the server that hosts the service is dependent of the types of underlying channels used to connect to the client. The following table indicates what reliable session channel types are supported as a function of the underlying channels.  \n  \n|Support for Reliable Session `TChannel` Types by Underlying Channel Types|IReplyChannel|IReplySessionChannel|IDuplexChannel|IDuplexSessionChannel|  \n|-------------------------------------------------------------------------------|-------------------|--------------------------|--------------------|---------------------------|  \n|IInputSessionChannel|Yes|Yes|Yes|Yes|  \n|IReplySessionChannel|Yes|Yes|No|No|  \n|IDuplexSessionChannel|No|No|Yes|Yes|","nodes":[{"pos":[0,369],"content":"The <xref:System.ServiceModel.Channels.IChannel> accepted by the listener is of type `TChannel`. The types of `TChannel` supported on the server that hosts the service is dependent of the types of underlying channels used to connect to the client. The following table indicates what reliable session channel types are supported as a function of the underlying channels.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.IChannel&gt;</ph> accepted by the listener is of type <ph id=\"ph2\">`TChannel`</ph>.","pos":[0,96],"source":"The <xref:System.ServiceModel.Channels.IChannel> accepted by the listener is of type `TChannel`."},{"content":"The types of <ph id=\"ph1\">`TChannel`</ph> supported on the server that hosts the service is dependent of the types of underlying channels used to connect to the client.","pos":[97,247],"source":" The types of `TChannel` supported on the server that hosts the service is dependent of the types of underlying channels used to connect to the client."},{"content":"The following table indicates what reliable session channel types are supported as a function of the underlying channels.","pos":[248,369]}]},{"pos":[376,449],"content":"Support for Reliable Session <ph id=\"ph1\">`TChannel`</ph> Types by Underlying Channel Types","source":"Support for Reliable Session `TChannel` Types by Underlying Channel Types"},{"pos":[450,463],"content":"IReplyChannel","nodes":[{"content":"IReplyChannel","pos":[0,13]}]},{"pos":[464,484],"content":"IReplySessionChannel","nodes":[{"content":"IReplySessionChannel","pos":[0,20]}]},{"pos":[485,499],"content":"IDuplexChannel","nodes":[{"content":"IDuplexChannel","pos":[0,14]}]},{"pos":[500,521],"content":"IDuplexSessionChannel","nodes":[{"content":"IDuplexSessionChannel","pos":[0,21]}]},{"pos":[706,726],"content":"IInputSessionChannel","nodes":[{"content":"IInputSessionChannel","pos":[0,20]}]},{"pos":[727,730],"content":"Yes","nodes":[{"content":"Yes","pos":[0,3]}]},{"pos":[731,734],"content":"Yes","nodes":[{"content":"Yes","pos":[0,3]}]},{"pos":[735,738],"content":"Yes","nodes":[{"content":"Yes","pos":[0,3]}]},{"pos":[739,742],"content":"Yes","nodes":[{"content":"Yes","pos":[0,3]}]},{"pos":[747,767],"content":"IReplySessionChannel","nodes":[{"content":"IReplySessionChannel","pos":[0,20]}]},{"pos":[768,771],"content":"Yes","nodes":[{"content":"Yes","pos":[0,3]}]},{"pos":[772,775],"content":"Yes","nodes":[{"content":"Yes","pos":[0,3]}]},{"pos":[776,778],"content":"No","nodes":[{"content":"No","pos":[0,2]}]},{"pos":[779,781],"content":"No","nodes":[{"content":"No","pos":[0,2]}]},{"pos":[786,807],"content":"IDuplexSessionChannel","nodes":[{"content":"IDuplexSessionChannel","pos":[0,21]}]},{"pos":[808,810],"content":"No","nodes":[{"content":"No","pos":[0,2]}]},{"pos":[811,813],"content":"No","nodes":[{"content":"No","pos":[0,2]}]},{"pos":[814,817],"content":"Yes","nodes":[{"content":"Yes","pos":[0,3]}]},{"pos":[818,821],"content":"Yes","nodes":[{"content":"Yes","pos":[0,3]}]}],"pos":[16298,17129],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> that contains the information required to build the listeners that can accept channels of type <code>TChannel</code>.","nodes":[{"pos":[0,186],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.BindingContext\"&gt;&lt;/xref&gt;</ph> that contains the information required to build the listeners that can accept channels of type <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">TChannel</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> that contains the information required to build the listeners that can accept channels of type <code>TChannel</code>."}],"pos":[17483,17670],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> that the listener is built to accept.","nodes":[{"pos":[0,100],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.IChannel\"&gt;&lt;/xref&gt;</ph> that the listener is built to accept.","source":"The <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> that the listener is built to accept."}],"pos":[17728,17829],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Channels.IChannelListener`1\"></xref> of type <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> initialized from the <code>context</code>.","nodes":[{"pos":[0,182],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.IChannelListener`1\"&gt;&lt;/xref&gt;</ph> of type <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Channels.IChannel\"&gt;&lt;/xref&gt;</ph> initialized from the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph3\">context</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The <xref href=\"System.ServiceModel.Channels.IChannelListener`1\"></xref> of type <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> initialized from the <code>context</code>."}],"pos":[17920,18103],"yaml":true},{"content":"<code>TChannel</code> is not supported.","nodes":[{"pos":[0,39],"content":"<ph id=\"ph1\">&lt;code&gt;TChannel&lt;/code&gt;</ph> is not supported.","source":"<code>TChannel</code> is not supported."}],"pos":[18307,18347],"yaml":true},{"content":"Returns a value that indicates whether the channel factory can be built for the channel and context provided that can support a reliable session.","nodes":[{"pos":[0,145],"content":"Returns a value that indicates whether the channel factory can be built for the channel and context provided that can support a reliable session.","nodes":[{"content":"Returns a value that indicates whether the channel factory can be built for the channel and context provided that can support a reliable session.","pos":[0,145]}]}],"pos":[19736,19882],"yaml":true},{"content":"This method returns `true` or `false` for a `TChannel` in accordance with the table of values provided in <xref:System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelFactory%60%601%28System.ServiceModel.Channels.BindingContext%29>.","nodes":[{"pos":[0,248],"content":"This method returns <ph id=\"ph1\">`true`</ph> or <ph id=\"ph2\">`false`</ph> for a <ph id=\"ph3\">`TChannel`</ph> in accordance with the table of values provided in <ph id=\"ph4\">&lt;xref:System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelFactory%60%601%28System.ServiceModel.Channels.BindingContext%29&gt;</ph>.","source":"This method returns `true` or `false` for a `TChannel` in accordance with the table of values provided in <xref:System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelFactory%60%601%28System.ServiceModel.Channels.BindingContext%29>."}],"pos":[19893,20142],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> that contains the information required to build the factories that can produce channels of type <code>TChannel</code>.","nodes":[{"pos":[0,187],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.BindingContext\"&gt;&lt;/xref&gt;</ph> that contains the information required to build the factories that can produce channels of type <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">TChannel</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> that contains the information required to build the factories that can produce channels of type <code>TChannel</code>."}],"pos":[20383,20571],"yaml":true},{"content":"The type of channel the factory builds.","nodes":[{"pos":[0,39],"content":"The type of channel the factory builds.","nodes":[{"content":"The type of channel the factory builds.","pos":[0,39]}]}],"pos":[20629,20669],"yaml":true},{"content":"`true` if the <xref href=\"System.ServiceModel.Channels.IChannelFactory`1\"></xref> of type <code>TChannel</code> can be built; otherwise, `false`.","nodes":[{"pos":[0,145],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Channels.IChannelFactory`1\"&gt;&lt;/xref&gt;</ph> of type <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph3\">TChannel</ph><ept id=\"p1\">&lt;/code&gt;</ept> can be built; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the <xref href=\"System.ServiceModel.Channels.IChannelFactory`1\"></xref> of type <code>TChannel</code> can be built; otherwise, `false`."}],"pos":[20727,20875],"yaml":true},{"content":"Returns a value that indicates whether the channel listener can be built for the channel and context provided that can support a reliable session.","nodes":[{"pos":[0,146],"content":"Returns a value that indicates whether the channel listener can be built for the channel and context provided that can support a reliable session.","nodes":[{"content":"Returns a value that indicates whether the channel listener can be built for the channel and context provided that can support a reliable session.","pos":[0,146]}]}],"pos":[22471,22618],"yaml":true},{"content":"Channel stacks are typically created using a factory pattern where a binding creates the channel stack. When sending messages, a binding is used to build a channel factory which in turn builds a channel stack and returns a reference to the top channel in the stack. The application can then use this channel to send messages. Similarly when receiving messages, a binding is used to build a channel listener which listens for incoming messages. The channel listener provides messages to the listening application by creating channel stacks and handing the application a reference to the top channel.  \n  \n This method returns `true` or `false` for a `TChannel` in accordance with the table of values provided in <xref:System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelListener%60%601%28System.ServiceModel.Channels.BindingContext%29>.","nodes":[{"pos":[0,598],"content":"Channel stacks are typically created using a factory pattern where a binding creates the channel stack. When sending messages, a binding is used to build a channel factory which in turn builds a channel stack and returns a reference to the top channel in the stack. The application can then use this channel to send messages. Similarly when receiving messages, a binding is used to build a channel listener which listens for incoming messages. The channel listener provides messages to the listening application by creating channel stacks and handing the application a reference to the top channel.","nodes":[{"content":"Channel stacks are typically created using a factory pattern where a binding creates the channel stack. When sending messages, a binding is used to build a channel factory which in turn builds a channel stack and returns a reference to the top channel in the stack. The application can then use this channel to send messages. Similarly when receiving messages, a binding is used to build a channel listener which listens for incoming messages. The channel listener provides messages to the listening application by creating channel stacks and handing the application a reference to the top channel.","pos":[0,598],"nodes":[{"content":"Channel stacks are typically created using a factory pattern where a binding creates the channel stack.","pos":[0,103]},{"content":"When sending messages, a binding is used to build a channel factory which in turn builds a channel stack and returns a reference to the top channel in the stack.","pos":[104,265]},{"content":"The application can then use this channel to send messages.","pos":[266,325]},{"content":"Similarly when receiving messages, a binding is used to build a channel listener which listens for incoming messages.","pos":[326,443]},{"content":"The channel listener provides messages to the listening application by creating channel stacks and handing the application a reference to the top channel.","pos":[444,598]}]}]},{"pos":[605,854],"content":"This method returns <ph id=\"ph1\">`true`</ph> or <ph id=\"ph2\">`false`</ph> for a <ph id=\"ph3\">`TChannel`</ph> in accordance with the table of values provided in <ph id=\"ph4\">&lt;xref:System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelListener%60%601%28System.ServiceModel.Channels.BindingContext%29&gt;</ph>.","source":"This method returns `true` or `false` for a `TChannel` in accordance with the table of values provided in <xref:System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelListener%60%601%28System.ServiceModel.Channels.BindingContext%29>."}],"pos":[22629,23488],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> that contains the information required to build the listeners that can accept channels of type <code>TChannel</code>.","nodes":[{"pos":[0,186],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.BindingContext\"&gt;&lt;/xref&gt;</ph> that contains the information required to build the listeners that can accept channels of type <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">TChannel</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> that contains the information required to build the listeners that can accept channels of type <code>TChannel</code>."}],"pos":[23794,23981],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> that the channel listener, if build, accepts.","nodes":[{"pos":[0,108],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.IChannel\"&gt;&lt;/xref&gt;</ph> that the channel listener, if build, accepts.","source":"The <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> that the channel listener, if build, accepts."}],"pos":[24039,24148],"yaml":true},{"content":"`true` if the <xref href=\"System.ServiceModel.Channels.ChannelListenerBase`1\"></xref> that can produce an <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> of type <code>TChannel</code> can be built by the binding element; otherwise, `false`.","nodes":[{"pos":[0,251],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Channels.ChannelListenerBase`1\"&gt;&lt;/xref&gt;</ph> that can produce an <ph id=\"ph3\">&lt;xref href=\"System.ServiceModel.Channels.IChannel\"&gt;&lt;/xref&gt;</ph> of type <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph4\">TChannel</ph><ept id=\"p1\">&lt;/code&gt;</ept> can be built by the binding element; otherwise, <ph id=\"ph5\">`false`</ph>.","source":"`true` if the <xref href=\"System.ServiceModel.Channels.ChannelListenerBase`1\"></xref> that can produce an <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> of type <code>TChannel</code> can be built by the binding element; otherwise, `false`."}],"pos":[24206,24460],"yaml":true},{"content":"Creates a copy of the current reliable session binding element.","nodes":[{"pos":[0,63],"content":"Creates a copy of the current reliable session binding element.","nodes":[{"content":"Creates a copy of the current reliable session binding element.","pos":[0,63]}]}],"pos":[25647,25711],"yaml":true},{"content":"A <xref href=\"System.ServiceModel.Channels.BindingElement\"></xref> that is a clone of the current binding element.","nodes":[{"pos":[0,114],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.BindingElement\"&gt;&lt;/xref&gt;</ph> that is a clone of the current binding element.","source":"A <xref href=\"System.ServiceModel.Channels.BindingElement\"></xref> that is a clone of the current binding element."}],"pos":[25910,26025],"yaml":true},{"content":"Gets or sets a value that indicates whether the reliable session has flow control enabled.","nodes":[{"pos":[0,90],"content":"Gets or sets a value that indicates whether the reliable session has flow control enabled.","nodes":[{"content":"Gets or sets a value that indicates whether the reliable session has flow control enabled.","pos":[0,90]}]}],"pos":[27351,27442],"yaml":true},{"content":"Flow control is a mechanism that reliable sessions implement to ensure that senders do not send more messages than a receiver can handle. Receivers have a buffer of messages that is used to accommodate message bursts and out-of-order messages. Receivers advertise to senders the amount of space that remains in this buffer in each of their acknowledgements. Senders can use this information to stop sending new messages whenever the receiver has no buffer space left.","nodes":[{"pos":[0,467],"content":"Flow control is a mechanism that reliable sessions implement to ensure that senders do not send more messages than a receiver can handle. Receivers have a buffer of messages that is used to accommodate message bursts and out-of-order messages. Receivers advertise to senders the amount of space that remains in this buffer in each of their acknowledgements. Senders can use this information to stop sending new messages whenever the receiver has no buffer space left.","nodes":[{"content":"Flow control is a mechanism that reliable sessions implement to ensure that senders do not send more messages than a receiver can handle. Receivers have a buffer of messages that is used to accommodate message bursts and out-of-order messages. Receivers advertise to senders the amount of space that remains in this buffer in each of their acknowledgements. Senders can use this information to stop sending new messages whenever the receiver has no buffer space left.","pos":[0,467],"nodes":[{"content":"Flow control is a mechanism that reliable sessions implement to ensure that senders do not send more messages than a receiver can handle.","pos":[0,137]},{"content":"Receivers have a buffer of messages that is used to accommodate message bursts and out-of-order messages.","pos":[138,243]},{"content":"Receivers advertise to senders the amount of space that remains in this buffer in each of their acknowledgements.","pos":[244,357]},{"content":"Senders can use this information to stop sending new messages whenever the receiver has no buffer space left.","pos":[358,467]}]}]}],"pos":[27453,27921],"yaml":true,"extradata":"MT"},{"content":"`true` if the reliable session has flow control enabled; otherwise, `false`. The default is `true`.","nodes":[{"pos":[0,99],"content":"`true` if the reliable session has flow control enabled; otherwise, `false`. The default is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the reliable session has flow control enabled; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,76],"source":"`true` if the reliable session has flow control enabled; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`true`</ph>.","pos":[77,99],"source":" The default is `true`."}]}],"pos":[28047,28149],"yaml":true},{"content":"Gets a property of the specified type from its binding context.","nodes":[{"pos":[0,63],"content":"Gets a property of the specified type from its binding context.","nodes":[{"content":"Gets a property of the specified type from its binding context.","pos":[0,63]}]}],"pos":[29645,29709],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> that contains the information required to retrieve the channel of type <code>T</code>.","nodes":[{"pos":[0,155],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.BindingContext\"&gt;&lt;/xref&gt;</ph> that contains the information required to retrieve the channel of type <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">T</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> that contains the information required to retrieve the channel of type <code>T</code>."}],"pos":[29947,30103],"yaml":true},{"content":"The type of property retrieved.","nodes":[{"pos":[0,31],"content":"The type of property retrieved.","nodes":[{"content":"The type of property retrieved.","pos":[0,31]}]}],"pos":[30154,30186],"yaml":true},{"content":"The property of type <code>T</code> with the specified <code>context</code> or `null` if no property of type <code>T</code> is found.","nodes":[{"pos":[0,133],"content":"The property of type <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">T</ph><ept id=\"p1\">&lt;/code&gt;</ept> with the specified <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">context</ph><ept id=\"p2\">&lt;/code&gt;</ept> or <ph id=\"ph3\">`null`</ph> if no property of type <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph4\">T</ph><ept id=\"p3\">&lt;/code&gt;</ept> is found.","source":"The property of type <code>T</code> with the specified <code>context</code> or `null` if no property of type <code>T</code> is found."}],"pos":[30231,30365],"yaml":true},{"content":"Gets or sets an interval of time that a service remains inactive before closing.","nodes":[{"pos":[0,80],"content":"Gets or sets an interval of time that a service remains inactive before closing.","nodes":[{"content":"Gets or sets an interval of time that a service remains inactive before closing.","pos":[0,80]}]}],"pos":[31694,31775],"yaml":true},{"content":"Activity on a channel is defined as receiving an application or infrastructure message. The inactivity timeout parameter controls the maximum amount of time to keep an inactive session alive. If more than <xref:System.ServiceModel.Channels.ReliableSessionBindingElement.InactivityTimeout%2A> time interval passes with no activity, the session is aborted by the infrastructure and the channel faults. The reliable session is torn down unilaterally.  \n  \n If the sending application has no messages to send then the reliable session is normally not faulted because of inactivity; instead a keep-alive mechanism keeps the session active indefinitely. Note that the dispatcher can independently abort the reliable session if no application messages are sent or received. Thus, the inactivity timeout typically expires if network conditions are such that no messages are received or if there is a failure on the sender.","nodes":[{"pos":[0,447],"content":"Activity on a channel is defined as receiving an application or infrastructure message. The inactivity timeout parameter controls the maximum amount of time to keep an inactive session alive. If more than <xref:System.ServiceModel.Channels.ReliableSessionBindingElement.InactivityTimeout%2A> time interval passes with no activity, the session is aborted by the infrastructure and the channel faults. The reliable session is torn down unilaterally.","nodes":[{"content":"Activity on a channel is defined as receiving an application or infrastructure message. The inactivity timeout parameter controls the maximum amount of time to keep an inactive session alive. If more than <xref:System.ServiceModel.Channels.ReliableSessionBindingElement.InactivityTimeout%2A> time interval passes with no activity, the session is aborted by the infrastructure and the channel faults. The reliable session is torn down unilaterally.","pos":[0,447],"nodes":[{"content":"Activity on a channel is defined as receiving an application or infrastructure message.","pos":[0,87]},{"content":"The inactivity timeout parameter controls the maximum amount of time to keep an inactive session alive.","pos":[88,191]},{"content":"If more than <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.ReliableSessionBindingElement.InactivityTimeout%2A&gt;</ph> time interval passes with no activity, the session is aborted by the infrastructure and the channel faults.","pos":[192,399],"source":" If more than <xref:System.ServiceModel.Channels.ReliableSessionBindingElement.InactivityTimeout%2A> time interval passes with no activity, the session is aborted by the infrastructure and the channel faults."},{"content":"The reliable session is torn down unilaterally.","pos":[400,447]}]}]},{"pos":[454,914],"content":"If the sending application has no messages to send then the reliable session is normally not faulted because of inactivity; instead a keep-alive mechanism keeps the session active indefinitely. Note that the dispatcher can independently abort the reliable session if no application messages are sent or received. Thus, the inactivity timeout typically expires if network conditions are such that no messages are received or if there is a failure on the sender.","nodes":[{"content":"If the sending application has no messages to send then the reliable session is normally not faulted because of inactivity; instead a keep-alive mechanism keeps the session active indefinitely. Note that the dispatcher can independently abort the reliable session if no application messages are sent or received. Thus, the inactivity timeout typically expires if network conditions are such that no messages are received or if there is a failure on the sender.","pos":[0,460],"nodes":[{"content":"If the sending application has no messages to send then the reliable session is normally not faulted because of inactivity; instead a keep-alive mechanism keeps the session active indefinitely.","pos":[0,193]},{"content":"Note that the dispatcher can independently abort the reliable session if no application messages are sent or received.","pos":[194,312]},{"content":"Thus, the inactivity timeout typically expires if network conditions are such that no messages are received or if there is a failure on the sender.","pos":[313,460]}]}]}],"pos":[31786,32705],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.TimeSpan\"></xref> that specifies the interval of time that a service remains inactive before closing. The default value is 10 minutes.","nodes":[{"pos":[0,157],"content":"The <xref href=\"System.TimeSpan\"></xref> that specifies the interval of time that a service remains inactive before closing. The default value is 10 minutes.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies the interval of time that a service remains inactive before closing.","pos":[0,124],"source":"The <xref href=\"System.TimeSpan\"></xref> that specifies the interval of time that a service remains inactive before closing."},{"content":"The default value is 10 minutes.","pos":[125,157]}]}],"pos":[32835,32993],"yaml":true},{"content":"The value set is less than or equal to zero or greater than either <xref href=\"System.Int32.MaxValue\"></xref> or <xref href=\"System.TimeSpan.MaxValue\"></xref>.","nodes":[{"pos":[0,159],"content":"The value set is less than or equal to zero or greater than either <ph id=\"ph1\">&lt;xref href=\"System.Int32.MaxValue\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.TimeSpan.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"The value set is less than or equal to zero or greater than either <xref href=\"System.Int32.MaxValue\"></xref> or <xref href=\"System.TimeSpan.MaxValue\"></xref>."}],"pos":[33211,33371],"yaml":true},{"content":"Gets or sets the largest number of channels that can be pending during the reliable session.","nodes":[{"pos":[0,92],"content":"Gets or sets the largest number of channels that can be pending during the reliable session.","nodes":[{"content":"Gets or sets the largest number of channels that can be pending during the reliable session.","pos":[0,92]}]}],"pos":[34602,34695],"yaml":true},{"content":"Channels are pending when they are waiting to be accepted. Once that limit is reached, no channels are created and put in pending mode until this number goes down (by accepting pending channels). This is a limit for each listener.  \n  \n When the threshold is reached and a remote application tries to establish a new reliable session, the request is denied and the open operation that prompted this faults.","nodes":[{"pos":[0,230],"content":"Channels are pending when they are waiting to be accepted. Once that limit is reached, no channels are created and put in pending mode until this number goes down (by accepting pending channels). This is a limit for each listener.","nodes":[{"content":"Channels are pending when they are waiting to be accepted. Once that limit is reached, no channels are created and put in pending mode until this number goes down (by accepting pending channels). This is a limit for each listener.","pos":[0,230],"nodes":[{"content":"Channels are pending when they are waiting to be accepted.","pos":[0,58]},{"content":"Once that limit is reached, no channels are created and put in pending mode until this number goes down (by accepting pending channels).","pos":[59,195]},{"content":"This is a limit for each listener.","pos":[196,230]}]}]},{"pos":[237,406],"content":"When the threshold is reached and a remote application tries to establish a new reliable session, the request is denied and the open operation that prompted this faults.","nodes":[{"content":"When the threshold is reached and a remote application tries to establish a new reliable session, the request is denied and the open operation that prompted this faults.","pos":[0,169]}]}],"pos":[34706,35117],"yaml":true,"extradata":"MT"},{"content":"The largest number of channels that can be pending. The default value is 4.","nodes":[{"pos":[0,75],"content":"The largest number of channels that can be pending. The default value is 4.","nodes":[{"content":"The largest number of channels that can be pending. The default value is 4.","pos":[0,75],"nodes":[{"content":"The largest number of channels that can be pending.","pos":[0,51]},{"content":"The default value is 4.","pos":[52,75]}]}]}],"pos":[35240,35316],"yaml":true},{"content":"The value set is less than or equal to zero or greater than 16384.","nodes":[{"pos":[0,66],"content":"The value set is less than or equal to zero or greater than 16384.","nodes":[{"content":"The value set is less than or equal to zero or greater than 16384.","pos":[0,66]}]}],"pos":[35535,35602],"yaml":true},{"content":"Gets or sets the maximum number of times that a message attempts to be transferred during the reliable session.","nodes":[{"pos":[0,111],"content":"Gets or sets the maximum number of times that a message attempts to be transferred during the reliable session.","nodes":[{"content":"Gets or sets the maximum number of times that a message attempts to be transferred during the reliable session.","pos":[0,111]}]}],"pos":[36803,36915],"yaml":true},{"content":"A message is considered to be transferred if its delivery at the recipient has been acknowledged by the recipient.  \n  \n If an acknowledgment has not been received within a certain amount of time for a message that has been transmitted, the infrastructure automatically retransmits the message. The infrastructure tries to send the message for, at most, a <xref:System.ServiceModel.Channels.ReliableSessionBindingElement.MaxRetryCount%2A> number of times. Not receiving an acknowledgment before this limit is reached is considered a fatal communication failure and causes the channel faulted event to be raised.  \n  \n The infrastructure uses an exponential back-off algorithm to determine when to retransmit, based on a computed average round-trip time. The initial retry time is computed based on the measured roundtrip time of establishing the session. The retransmission algorithm doubles the delay with every attempt, which results in approximately 8.5 minutes passing between the first transmission attempt and the last retransmission attempt. The time for the first retransmission attempt is adjusted according to the calculated round-trip time and the resulting stretch of time that those attempts take varies accordingly. This allows the retransmission time to dynamically adapt to varying network conditions.","nodes":[{"pos":[0,114],"content":"A message is considered to be transferred if its delivery at the recipient has been acknowledged by the recipient.","nodes":[{"content":"A message is considered to be transferred if its delivery at the recipient has been acknowledged by the recipient.","pos":[0,114]}]},{"pos":[121,611],"content":"If an acknowledgment has not been received within a certain amount of time for a message that has been transmitted, the infrastructure automatically retransmits the message. The infrastructure tries to send the message for, at most, a <xref:System.ServiceModel.Channels.ReliableSessionBindingElement.MaxRetryCount%2A> number of times. Not receiving an acknowledgment before this limit is reached is considered a fatal communication failure and causes the channel faulted event to be raised.","nodes":[{"content":"If an acknowledgment has not been received within a certain amount of time for a message that has been transmitted, the infrastructure automatically retransmits the message. The infrastructure tries to send the message for, at most, a <xref:System.ServiceModel.Channels.ReliableSessionBindingElement.MaxRetryCount%2A> number of times. Not receiving an acknowledgment before this limit is reached is considered a fatal communication failure and causes the channel faulted event to be raised.","pos":[0,490],"nodes":[{"content":"If an acknowledgment has not been received within a certain amount of time for a message that has been transmitted, the infrastructure automatically retransmits the message.","pos":[0,173]},{"content":"The infrastructure tries to send the message for, at most, a <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.ReliableSessionBindingElement.MaxRetryCount%2A&gt;</ph> number of times.","pos":[174,334],"source":" The infrastructure tries to send the message for, at most, a <xref:System.ServiceModel.Channels.ReliableSessionBindingElement.MaxRetryCount%2A> number of times."},{"content":"Not receiving an acknowledgment before this limit is reached is considered a fatal communication failure and causes the channel faulted event to be raised.","pos":[335,490]}]}]},{"pos":[618,1317],"content":"The infrastructure uses an exponential back-off algorithm to determine when to retransmit, based on a computed average round-trip time. The initial retry time is computed based on the measured roundtrip time of establishing the session. The retransmission algorithm doubles the delay with every attempt, which results in approximately 8.5 minutes passing between the first transmission attempt and the last retransmission attempt. The time for the first retransmission attempt is adjusted according to the calculated round-trip time and the resulting stretch of time that those attempts take varies accordingly. This allows the retransmission time to dynamically adapt to varying network conditions.","nodes":[{"content":"The infrastructure uses an exponential back-off algorithm to determine when to retransmit, based on a computed average round-trip time. The initial retry time is computed based on the measured roundtrip time of establishing the session. The retransmission algorithm doubles the delay with every attempt, which results in approximately 8.5 minutes passing between the first transmission attempt and the last retransmission attempt. The time for the first retransmission attempt is adjusted according to the calculated round-trip time and the resulting stretch of time that those attempts take varies accordingly. This allows the retransmission time to dynamically adapt to varying network conditions.","pos":[0,699],"nodes":[{"content":"The infrastructure uses an exponential back-off algorithm to determine when to retransmit, based on a computed average round-trip time.","pos":[0,135]},{"content":"The initial retry time is computed based on the measured roundtrip time of establishing the session.","pos":[136,236]},{"content":"The retransmission algorithm doubles the delay with every attempt, which results in approximately 8.5 minutes passing between the first transmission attempt and the last retransmission attempt.","pos":[237,430]},{"content":"The time for the first retransmission attempt is adjusted according to the calculated round-trip time and the resulting stretch of time that those attempts take varies accordingly.","pos":[431,611]},{"content":"This allows the retransmission time to dynamically adapt to varying network conditions.","pos":[612,699]}]}]}],"pos":[36926,38250],"yaml":true,"extradata":"MT"},{"content":"The maximum number of times that a message attempts to be re-sent. The minimum value is 1; the maximum is <xref href=\"System.Int32.MaxValue\"></xref>; and the default value is 8.","nodes":[{"pos":[0,177],"content":"The maximum number of times that a message attempts to be re-sent. The minimum value is 1; the maximum is <xref href=\"System.Int32.MaxValue\"></xref>; and the default value is 8.","nodes":[{"content":"The maximum number of times that a message attempts to be re-sent.","pos":[0,66]},{"content":"The minimum value is 1; the maximum is <ph id=\"ph1\">&lt;xref href=\"System.Int32.MaxValue\"&gt;&lt;/xref&gt;</ph>; and the default value is 8.","pos":[67,177],"source":" The minimum value is 1; the maximum is <xref href=\"System.Int32.MaxValue\"></xref>; and the default value is 8."}]}],"pos":[38368,38546],"yaml":true},{"content":"The value set is less than or equal to zero.","nodes":[{"pos":[0,44],"content":"The value set is less than or equal to zero.","nodes":[{"content":"The value set is less than or equal to zero.","pos":[0,44]}]}],"pos":[38760,38805],"yaml":true},{"content":"Gets or sets the largest number of messages that can exist in either the send buffer or the receive buffer.","nodes":[{"pos":[0,107],"content":"Gets or sets the largest number of messages that can exist in either the send buffer or the receive buffer.","nodes":[{"content":"Gets or sets the largest number of messages that can exist in either the send buffer or the receive buffer.","pos":[0,107]}]}],"pos":[40054,40162],"yaml":true},{"content":"The value of the <xref:System.ServiceModel.Channels.ReliableSessionBindingElement.MaxTransferWindowSize%2A> property can be set on both the sender and the receiver. This value is included in the binding policy of the WSDL, so if you use the [ServiceModel Metadata Utility Tool (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md) to construct your client, it has the same value. Otherwise this value is whatever you set it to be on the client.  \n  \n When this limit is reached on the sender, additional calls to send are blocked. When this limit is reached on the receiver, new messages that arrive on the underlying channel are not accepted.  \n  \n A reliable session uses a windowing protocol to help improve network utilization. The amount of buffering required is directly derived from the size of the transmission window. When tuning this value, note that the optimal transmission window is related to the bandwidth and the latency in a straight-forward way. The ideal maximum window size is the bandwidth times the latency. Anything smaller yields less than 100% network utilization; anything larger is just wasted space.","nodes":[{"pos":[0,477],"content":"The value of the <xref:System.ServiceModel.Channels.ReliableSessionBindingElement.MaxTransferWindowSize%2A> property can be set on both the sender and the receiver. This value is included in the binding policy of the WSDL, so if you use the [ServiceModel Metadata Utility Tool (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md) to construct your client, it has the same value. Otherwise this value is whatever you set it to be on the client.","nodes":[{"content":"The value of the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.ReliableSessionBindingElement.MaxTransferWindowSize%2A&gt;</ph> property can be set on both the sender and the receiver.","pos":[0,164],"source":"The value of the <xref:System.ServiceModel.Channels.ReliableSessionBindingElement.MaxTransferWindowSize%2A> property can be set on both the sender and the receiver."},{"content":"This value is included in the binding policy of the WSDL, so if you use the <bpt id=\"p1\">[</bpt>ServiceModel Metadata Utility Tool (Svcutil.exe)<ept id=\"p1\">](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept> to construct your client, it has the same value.","pos":[165,412],"source":" This value is included in the binding policy of the WSDL, so if you use the [ServiceModel Metadata Utility Tool (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md) to construct your client, it has the same value."},{"content":"Otherwise this value is whatever you set it to be on the client.","pos":[413,477]}]},{"pos":[484,676],"content":"When this limit is reached on the sender, additional calls to send are blocked. When this limit is reached on the receiver, new messages that arrive on the underlying channel are not accepted.","nodes":[{"content":"When this limit is reached on the sender, additional calls to send are blocked. When this limit is reached on the receiver, new messages that arrive on the underlying channel are not accepted.","pos":[0,192],"nodes":[{"content":"When this limit is reached on the sender, additional calls to send are blocked.","pos":[0,79]},{"content":"When this limit is reached on the receiver, new messages that arrive on the underlying channel are not accepted.","pos":[80,192]}]}]},{"pos":[683,1160],"content":"A reliable session uses a windowing protocol to help improve network utilization. The amount of buffering required is directly derived from the size of the transmission window. When tuning this value, note that the optimal transmission window is related to the bandwidth and the latency in a straight-forward way. The ideal maximum window size is the bandwidth times the latency. Anything smaller yields less than 100% network utilization; anything larger is just wasted space.","nodes":[{"content":"A reliable session uses a windowing protocol to help improve network utilization. The amount of buffering required is directly derived from the size of the transmission window. When tuning this value, note that the optimal transmission window is related to the bandwidth and the latency in a straight-forward way. The ideal maximum window size is the bandwidth times the latency. Anything smaller yields less than 100% network utilization; anything larger is just wasted space.","pos":[0,477],"nodes":[{"content":"A reliable session uses a windowing protocol to help improve network utilization.","pos":[0,81]},{"content":"The amount of buffering required is directly derived from the size of the transmission window.","pos":[82,176]},{"content":"When tuning this value, note that the optimal transmission window is related to the bandwidth and the latency in a straight-forward way.","pos":[177,313]},{"content":"The ideal maximum window size is the bandwidth times the latency.","pos":[314,379]},{"content":"Anything smaller yields less than 100% network utilization; anything larger is just wasted space.","pos":[380,477]}]}]}],"pos":[40173,41340],"yaml":true,"extradata":"MT"},{"content":"The largest number of messages that can be buffered. The minimum value is 1; the maximum value is 4096; and the default value is 32.","nodes":[{"pos":[0,132],"content":"The largest number of messages that can be buffered. The minimum value is 1; the maximum value is 4096; and the default value is 32.","nodes":[{"content":"The largest number of messages that can be buffered. The minimum value is 1; the maximum value is 4096; and the default value is 32.","pos":[0,132],"nodes":[{"content":"The largest number of messages that can be buffered.","pos":[0,52]},{"content":"The minimum value is 1; the maximum value is 4096; and the default value is 32.","pos":[53,132]}]}]}],"pos":[41466,41599],"yaml":true},{"content":"The value set is less than or equal to one or greater than 4096.","nodes":[{"pos":[0,64],"content":"The value set is less than or equal to one or greater than 4096.","nodes":[{"content":"The value set is less than or equal to one or greater than 4096.","pos":[0,64]}]}],"pos":[41821,41886],"yaml":true},{"content":"Gets or sets a value that indicates whether message delivery must preserve the order in which messages are sent.","nodes":[{"pos":[0,112],"content":"Gets or sets a value that indicates whether message delivery must preserve the order in which messages are sent.","nodes":[{"content":"Gets or sets a value that indicates whether message delivery must preserve the order in which messages are sent.","pos":[0,112]}]}],"pos":[43051,43164],"yaml":true},{"content":"To get messages dispatched in order, you also must set the <xref:System.ServiceModel.ConcurrencyMode> to <xref:System.ServiceModel.ConcurrencyMode.Single>.","nodes":[{"pos":[0,155],"content":"To get messages dispatched in order, you also must set the <xref:System.ServiceModel.ConcurrencyMode> to <xref:System.ServiceModel.ConcurrencyMode.Single>.","nodes":[{"content":"To get messages dispatched in order, you also must set the <ph id=\"ph1\">&lt;xref:System.ServiceModel.ConcurrencyMode&gt;</ph> to <ph id=\"ph2\">&lt;xref:System.ServiceModel.ConcurrencyMode.Single&gt;</ph>.","pos":[0,155],"source":"To get messages dispatched in order, you also must set the <xref:System.ServiceModel.ConcurrencyMode> to <xref:System.ServiceModel.ConcurrencyMode.Single>."}]}],"pos":[43175,43331],"yaml":true,"extradata":"MT"},{"content":"`true` if messages must be delivered in the order in which they are sent; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,117],"content":"`true` if messages must be delivered in the order in which they are sent; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if messages must be delivered in the order in which they are sent; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,93],"source":"`true` if messages must be delivered in the order in which they are sent; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[94,117],"source":" The default is `false`."}]}],"pos":[43446,43566],"yaml":true},{"content":"Gets or sets the version of WS-ReliableMessaging specified by the binding element.","nodes":[{"pos":[0,82],"content":"Gets or sets the version of WS-ReliableMessaging specified by the binding element.","nodes":[{"content":"Gets or sets the version of WS-ReliableMessaging specified by the binding element.","pos":[0,82]}]}],"pos":[44930,45013],"yaml":true},{"content":"There are currently two versions of the WS-ReliableMessaging protocol supported by [!INCLUDE[indigo1](~/includes/indigo1-md.md)]: WS-ReliableMessaging1.1 and WS-ReliableMessagingFebruary2005. The default version is WS-ReliableMessagingFebruary2005.","nodes":[{"pos":[0,248],"content":"There are currently two versions of the WS-ReliableMessaging protocol supported by [!INCLUDE[indigo1](~/includes/indigo1-md.md)]: WS-ReliableMessaging1.1 and WS-ReliableMessagingFebruary2005. The default version is WS-ReliableMessagingFebruary2005.","nodes":[{"content":"There are currently two versions of the WS-ReliableMessaging protocol supported by <ph id=\"ph1\">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph>: WS-ReliableMessaging1.1 and WS-ReliableMessagingFebruary2005.","pos":[0,191],"source":"There are currently two versions of the WS-ReliableMessaging protocol supported by [!INCLUDE[indigo1](~/includes/indigo1-md.md)]: WS-ReliableMessaging1.1 and WS-ReliableMessagingFebruary2005."},{"content":"The default version is WS-ReliableMessagingFebruary2005.","pos":[192,248]}]}],"pos":[45024,45275],"yaml":true,"extradata":"MT"},{"content":"An instance derived from <xref href=\"System.ServiceModel.ReliableMessagingVersion\"></xref> that represents the version of the WS-ReliableMessaging protocol used by the configuration element.","nodes":[{"pos":[0,190],"content":"An instance derived from <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.ReliableMessagingVersion\"&gt;&lt;/xref&gt;</ph> that represents the version of the WS-ReliableMessaging protocol used by the configuration element.","source":"An instance derived from <xref href=\"System.ServiceModel.ReliableMessagingVersion\"></xref> that represents the version of the WS-ReliableMessaging protocol used by the configuration element."}],"pos":[45477,45668],"yaml":true},{"content":"Maps the information contained in the reliable session binding element into the WSDL elements that enable a remote endpoint to access the service with a reliable session.","nodes":[{"pos":[0,170],"content":"Maps the information contained in the reliable session binding element into the WSDL elements that enable a remote endpoint to access the service with a reliable session.","nodes":[{"content":"Maps the information contained in the reliable session binding element into the WSDL elements that enable a remote endpoint to access the service with a reliable session.","pos":[0,170]}]}],"pos":[47670,47841],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Description.MetadataExporter\"></xref> that exports the binding information in the reliable session binding element to the WSDL elements.","nodes":[{"pos":[0,172],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Description.MetadataExporter\"&gt;&lt;/xref&gt;</ph> that exports the binding information in the reliable session binding element to the WSDL elements.","source":"The <xref href=\"System.ServiceModel.Description.MetadataExporter\"></xref> that exports the binding information in the reliable session binding element to the WSDL elements."}],"pos":[48146,48319],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Description.PolicyConversionContext\"></xref> that provides the mapping from exported WSDL elements to the endpoint description.","nodes":[{"pos":[0,163],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Description.PolicyConversionContext\"&gt;&lt;/xref&gt;</ph> that provides the mapping from exported WSDL elements to the endpoint description.","source":"The <xref href=\"System.ServiceModel.Description.PolicyConversionContext\"></xref> that provides the mapping from exported WSDL elements to the endpoint description."}],"pos":[48424,48588],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Channels.ReliableSessionBindingElement\n  commentId: T:System.ServiceModel.Channels.ReliableSessionBindingElement\n  id: ReliableSessionBindingElement\n  children:\n  - System.ServiceModel.Channels.ReliableSessionBindingElement.#ctor\n  - System.ServiceModel.Channels.ReliableSessionBindingElement.#ctor(System.Boolean)\n  - System.ServiceModel.Channels.ReliableSessionBindingElement.AcknowledgementInterval\n  - System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  - System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  - System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  - System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  - System.ServiceModel.Channels.ReliableSessionBindingElement.Clone\n  - System.ServiceModel.Channels.ReliableSessionBindingElement.FlowControlEnabled\n  - System.ServiceModel.Channels.ReliableSessionBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)\n  - System.ServiceModel.Channels.ReliableSessionBindingElement.InactivityTimeout\n  - System.ServiceModel.Channels.ReliableSessionBindingElement.MaxPendingChannels\n  - System.ServiceModel.Channels.ReliableSessionBindingElement.MaxRetryCount\n  - System.ServiceModel.Channels.ReliableSessionBindingElement.MaxTransferWindowSize\n  - System.ServiceModel.Channels.ReliableSessionBindingElement.Ordered\n  - System.ServiceModel.Channels.ReliableSessionBindingElement.ReliableMessagingVersion\n  - System.ServiceModel.Channels.ReliableSessionBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)\n  langs:\n  - csharp\n  name: ReliableSessionBindingElement\n  nameWithType: ReliableSessionBindingElement\n  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement\n  type: Class\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Represents the binding element that can produce the sending and receiving channels required for a reliable session between endpoints.\n  remarks: \"Provides sessions and optionally provides ordered message delivery. This implemented session can cross SOAP and transport intermediaries.  \\n  \\n Each binding element represents a processing step when sending or receiving messages. At runtime, binding elements create the channel factories and listeners that are necessary to build outgoing and incoming channel stacks required to send and receive messages. The <xref:System.ServiceModel.Channels.ReliableSessionBindingElement> provides an optional layer in the stack that can establish a reliable session between endpoints and configure the behavior of this session.  \\n  \\n The <xref:System.ServiceModel.Channels.ReliableSessionBindingElement> is provided on the standard bindings in the following table.  \\n  \\n|Binding|Default|  \\n|-------------|-------------|  \\n|<xref:System.ServiceModel.NetTcpBinding>|Off|  \\n|<xref:System.ServiceModel.WSHttpBinding>|Off|  \\n|<xref:System.ServiceModel.WSDualHttpBinding>|On (required)|\"\n  example:\n  - \"The <xref:System.ServiceModel.Channels.ReliableSessionBindingElement> can be added to any custom binding. This is done using the following configuration elements.  \\n  \\n```  \\n<bindings>  \\n    <customBinding>  \\n        <binding configurationName=\\\"ReliabilityHTTP\\\">  \\n            <reliableSession/>  \\n        </binding>  \\n    </customBinding>  \\n</bindings>  \\n```  \\n  \\n The following sample code demonstrates how to use <xref:System.ServiceModel.Channels.ReliableSessionBindingElement> in code.  \\n  \\n [!code-csharp[S_Imperative#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_imperative/cs/service.cs#1)]\\n [!code-vb[S_Imperative#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_imperative/vb/service.vb#1)]\"\n  syntax:\n    content: 'public sealed class ReliableSessionBindingElement : System.ServiceModel.Channels.BindingElement, System.ServiceModel.Description.IPolicyExportExtension'\n  inheritance:\n  - System.Object\n  - System.ServiceModel.Channels.BindingElement\n  implements:\n  - System.ServiceModel.Description.IPolicyExportExtension\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ReliableSessionBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.#ctor\n  commentId: M:System.ServiceModel.Channels.ReliableSessionBindingElement.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Channels.ReliableSessionBindingElement\n  langs:\n  - csharp\n  name: ReliableSessionBindingElement()\n  nameWithType: ReliableSessionBindingElement.ReliableSessionBindingElement()\n  fullName: ReliableSessionBindingElement.ReliableSessionBindingElement()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.ReliableSessionBindingElement\"></xref> class.\n  syntax:\n    content: public ReliableSessionBindingElement ();\n    parameters: []\n  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ReliableSessionBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.#ctor(System.Boolean)\n  commentId: M:System.ServiceModel.Channels.ReliableSessionBindingElement.#ctor(System.Boolean)\n  id: '#ctor(System.Boolean)'\n  parent: System.ServiceModel.Channels.ReliableSessionBindingElement\n  langs:\n  - csharp\n  name: ReliableSessionBindingElement(Boolean)\n  nameWithType: ReliableSessionBindingElement.ReliableSessionBindingElement(Boolean)\n  fullName: ReliableSessionBindingElement.ReliableSessionBindingElement(Boolean)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.ReliableSessionBindingElement\"></xref> class that specifies whether message delivery must preserve the order in which messages are sent.\n  syntax:\n    content: public ReliableSessionBindingElement (bool ordered);\n    parameters:\n    - id: ordered\n      type: System.Boolean\n      description: '`true` if messages must be delivered in the order in which they are sent; otherwise, `false`. The default value is `true`.'\n  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ReliableSessionBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.AcknowledgementInterval\n  commentId: P:System.ServiceModel.Channels.ReliableSessionBindingElement.AcknowledgementInterval\n  id: AcknowledgementInterval\n  parent: System.ServiceModel.Channels.ReliableSessionBindingElement\n  langs:\n  - csharp\n  name: AcknowledgementInterval\n  nameWithType: ReliableSessionBindingElement.AcknowledgementInterval\n  fullName: ReliableSessionBindingElement.AcknowledgementInterval\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets or sets the interval of time that a destination waits before sending an acknowledgment to the message source on reliable channels that are created by the factory.\n  remarks: \"The destination that receives messages on a reliable channel groups the acknowledgments for these messages together into a single message to reduce network traffic and to increase information density on messages. Grouping scales better as traffic increases. It does not attempt to send an acknowledgment for every message it receives as soon as possible, but rather waits for an interval of time, groups together the acknowledgments that have arrived during that interval, and then sends them all together. The first message that is received is the exception; it is acknowledged as soon as it is delivered. Also, if reliable sessions are used with single HTTP connections, as is the case for example with the <xref:System.ServiceModel.WSHttpBinding> but not <xref:System.ServiceModel.WSDualHttpBinding>, then this setting is not used.  \\n  \\n The value that is set with the <xref:System.ServiceModel.Channels.ReliableSessionBindingElement.AcknowledgementInterval%2A> property is a recommendation to the infrastructure and not a hard limit.\"\n  syntax:\n    content: public TimeSpan AcknowledgementInterval { get; set; }\n    return:\n      type: System.TimeSpan\n      description: The <xref href=\"System.TimeSpan\"></xref> that specifies the interval of time that a service waits until sending an acknowledgment to the message source. The default value is 2 seconds.\n  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.AcknowledgementInterval*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The value set is less than or equal to zero.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ReliableSessionBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  commentId: M:System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  id: BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.ReliableSessionBindingElement\n  langs:\n  - csharp\n  name: BuildChannelFactory<TChannel>(BindingContext)\n  nameWithType: ReliableSessionBindingElement.BuildChannelFactory<TChannel>(BindingContext)\n  fullName: ReliableSessionBindingElement.BuildChannelFactory<TChannel>(BindingContext)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Returns a factory that creates a channel of a specified type that supports a reliable session.\n  remarks: \"The <xref:System.ServiceModel.Channels.IChannel> produced by the factory is of type `TChannel`. The types of `TChannel` supported on the client is dependent of the types of underlying channels that connect to the service. The following table indicates what reliable session channel types are supported as a function of the underlying channels.  \\n  \\n|Support for Reliable Session `TChannel` Types by Underlying Channel Types|IRequestChannel|IRequestSessionChannel|IDuplexChannel|IDuplexSessionChannel|  \\n|-------------------------------------------------------------------------------|---------------------|----------------------------|--------------------|---------------------------|  \\n|IOutputSessionChannel|Yes|Yes|Yes|Yes|  \\n|IRequestSessionChannel|Yes|Yes|No|No|  \\n|IDuplexSessionChannel|No|No|Yes|Yes|\"\n  syntax:\n    content: public override System.ServiceModel.Channels.IChannelFactory<TChannel> BuildChannelFactory<TChannel> (System.ServiceModel.Channels.BindingContext context);\n    parameters:\n    - id: context\n      type: System.ServiceModel.Channels.BindingContext\n      description: The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> that contains the information required to build the factories that can produce channels of type <code>TChannel</code>.\n    typeParameters:\n    - id: TChannel\n      description: The type of channel the factory builds.\n    return:\n      type: System.ServiceModel.Channels.IChannelFactory`1\n      description: A <xref href=\"System.ServiceModel.Channels.IChannelFactory`1\"></xref> of type <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> initialized from the <code>context</code>.\n  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelFactory``1*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>TChannel</code> is not supported.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ReliableSessionBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  commentId: M:System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  id: BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.ReliableSessionBindingElement\n  langs:\n  - csharp\n  name: BuildChannelListener<TChannel>(BindingContext)\n  nameWithType: ReliableSessionBindingElement.BuildChannelListener<TChannel>(BindingContext)\n  fullName: ReliableSessionBindingElement.BuildChannelListener<TChannel>(BindingContext)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Returns a listener that accepts a channel of a specified type that supports a reliable session.\n  remarks: \"The <xref:System.ServiceModel.Channels.IChannel> accepted by the listener is of type `TChannel`. The types of `TChannel` supported on the server that hosts the service is dependent of the types of underlying channels used to connect to the client. The following table indicates what reliable session channel types are supported as a function of the underlying channels.  \\n  \\n|Support for Reliable Session `TChannel` Types by Underlying Channel Types|IReplyChannel|IReplySessionChannel|IDuplexChannel|IDuplexSessionChannel|  \\n|-------------------------------------------------------------------------------|-------------------|--------------------------|--------------------|---------------------------|  \\n|IInputSessionChannel|Yes|Yes|Yes|Yes|  \\n|IReplySessionChannel|Yes|Yes|No|No|  \\n|IDuplexSessionChannel|No|No|Yes|Yes|\"\n  syntax:\n    content: 'public override System.ServiceModel.Channels.IChannelListener<TChannel> BuildChannelListener<TChannel> (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;'\n    parameters:\n    - id: context\n      type: System.ServiceModel.Channels.BindingContext\n      description: The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> that contains the information required to build the listeners that can accept channels of type <code>TChannel</code>.\n    typeParameters:\n    - id: TChannel\n      description: The <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> that the listener is built to accept.\n    return:\n      type: System.ServiceModel.Channels.IChannelListener`1\n      description: The <xref href=\"System.ServiceModel.Channels.IChannelListener`1\"></xref> of type <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> initialized from the <code>context</code>.\n  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelListener``1*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>TChannel</code> is not supported.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ReliableSessionBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  commentId: M:System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  id: CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.ReliableSessionBindingElement\n  langs:\n  - csharp\n  name: CanBuildChannelFactory<TChannel>(BindingContext)\n  nameWithType: ReliableSessionBindingElement.CanBuildChannelFactory<TChannel>(BindingContext)\n  fullName: ReliableSessionBindingElement.CanBuildChannelFactory<TChannel>(BindingContext)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Returns a value that indicates whether the channel factory can be built for the channel and context provided that can support a reliable session.\n  remarks: This method returns `true` or `false` for a `TChannel` in accordance with the table of values provided in <xref:System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelFactory%60%601%28System.ServiceModel.Channels.BindingContext%29>.\n  syntax:\n    content: public override bool CanBuildChannelFactory<TChannel> (System.ServiceModel.Channels.BindingContext context);\n    parameters:\n    - id: context\n      type: System.ServiceModel.Channels.BindingContext\n      description: The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> that contains the information required to build the factories that can produce channels of type <code>TChannel</code>.\n    typeParameters:\n    - id: TChannel\n      description: The type of channel the factory builds.\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.ServiceModel.Channels.IChannelFactory`1\"></xref> of type <code>TChannel</code> can be built; otherwise, `false`.'\n  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelFactory``1*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ReliableSessionBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  commentId: M:System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  id: CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.ReliableSessionBindingElement\n  langs:\n  - csharp\n  name: CanBuildChannelListener<TChannel>(BindingContext)\n  nameWithType: ReliableSessionBindingElement.CanBuildChannelListener<TChannel>(BindingContext)\n  fullName: ReliableSessionBindingElement.CanBuildChannelListener<TChannel>(BindingContext)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Returns a value that indicates whether the channel listener can be built for the channel and context provided that can support a reliable session.\n  remarks: \"Channel stacks are typically created using a factory pattern where a binding creates the channel stack. When sending messages, a binding is used to build a channel factory which in turn builds a channel stack and returns a reference to the top channel in the stack. The application can then use this channel to send messages. Similarly when receiving messages, a binding is used to build a channel listener which listens for incoming messages. The channel listener provides messages to the listening application by creating channel stacks and handing the application a reference to the top channel.  \\n  \\n This method returns `true` or `false` for a `TChannel` in accordance with the table of values provided in <xref:System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelListener%60%601%28System.ServiceModel.Channels.BindingContext%29>.\"\n  syntax:\n    content: 'public override bool CanBuildChannelListener<TChannel> (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;'\n    parameters:\n    - id: context\n      type: System.ServiceModel.Channels.BindingContext\n      description: The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> that contains the information required to build the listeners that can accept channels of type <code>TChannel</code>.\n    typeParameters:\n    - id: TChannel\n      description: The <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> that the channel listener, if build, accepts.\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.ServiceModel.Channels.ChannelListenerBase`1\"></xref> that can produce an <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> of type <code>TChannel</code> can be built by the binding element; otherwise, `false`.'\n  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelListener``1*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ReliableSessionBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.Clone\n  commentId: M:System.ServiceModel.Channels.ReliableSessionBindingElement.Clone\n  id: Clone\n  parent: System.ServiceModel.Channels.ReliableSessionBindingElement\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: ReliableSessionBindingElement.Clone()\n  fullName: ReliableSessionBindingElement.Clone()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Creates a copy of the current reliable session binding element.\n  syntax:\n    content: public override System.ServiceModel.Channels.BindingElement Clone ();\n    parameters: []\n    return:\n      type: System.ServiceModel.Channels.BindingElement\n      description: A <xref href=\"System.ServiceModel.Channels.BindingElement\"></xref> that is a clone of the current binding element.\n  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.Clone*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ReliableSessionBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.FlowControlEnabled\n  commentId: P:System.ServiceModel.Channels.ReliableSessionBindingElement.FlowControlEnabled\n  id: FlowControlEnabled\n  parent: System.ServiceModel.Channels.ReliableSessionBindingElement\n  langs:\n  - csharp\n  name: FlowControlEnabled\n  nameWithType: ReliableSessionBindingElement.FlowControlEnabled\n  fullName: ReliableSessionBindingElement.FlowControlEnabled\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets or sets a value that indicates whether the reliable session has flow control enabled.\n  remarks: Flow control is a mechanism that reliable sessions implement to ensure that senders do not send more messages than a receiver can handle. Receivers have a buffer of messages that is used to accommodate message bursts and out-of-order messages. Receivers advertise to senders the amount of space that remains in this buffer in each of their acknowledgements. Senders can use this information to stop sending new messages whenever the receiver has no buffer space left.\n  syntax:\n    content: public bool FlowControlEnabled { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the reliable session has flow control enabled; otherwise, `false`. The default is `true`.'\n  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.FlowControlEnabled*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ReliableSessionBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)\n  commentId: M:System.ServiceModel.Channels.ReliableSessionBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)\n  id: GetProperty``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.ReliableSessionBindingElement\n  langs:\n  - csharp\n  name: GetProperty<T>(BindingContext)\n  nameWithType: ReliableSessionBindingElement.GetProperty<T>(BindingContext)\n  fullName: ReliableSessionBindingElement.GetProperty<T>(BindingContext)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets a property of the specified type from its binding context.\n  syntax:\n    content: 'public override T GetProperty<T> (System.ServiceModel.Channels.BindingContext context) where T : class;'\n    parameters:\n    - id: context\n      type: System.ServiceModel.Channels.BindingContext\n      description: The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> that contains the information required to retrieve the channel of type <code>T</code>.\n    typeParameters:\n    - id: T\n      description: The type of property retrieved.\n    return:\n      type: T\n      description: The property of type <code>T</code> with the specified <code>context</code> or `null` if no property of type <code>T</code> is found.\n  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.GetProperty``1*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ReliableSessionBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.InactivityTimeout\n  commentId: P:System.ServiceModel.Channels.ReliableSessionBindingElement.InactivityTimeout\n  id: InactivityTimeout\n  parent: System.ServiceModel.Channels.ReliableSessionBindingElement\n  langs:\n  - csharp\n  name: InactivityTimeout\n  nameWithType: ReliableSessionBindingElement.InactivityTimeout\n  fullName: ReliableSessionBindingElement.InactivityTimeout\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets or sets an interval of time that a service remains inactive before closing.\n  remarks: \"Activity on a channel is defined as receiving an application or infrastructure message. The inactivity timeout parameter controls the maximum amount of time to keep an inactive session alive. If more than <xref:System.ServiceModel.Channels.ReliableSessionBindingElement.InactivityTimeout%2A> time interval passes with no activity, the session is aborted by the infrastructure and the channel faults. The reliable session is torn down unilaterally.  \\n  \\n If the sending application has no messages to send then the reliable session is normally not faulted because of inactivity; instead a keep-alive mechanism keeps the session active indefinitely. Note that the dispatcher can independently abort the reliable session if no application messages are sent or received. Thus, the inactivity timeout typically expires if network conditions are such that no messages are received or if there is a failure on the sender.\"\n  syntax:\n    content: public TimeSpan InactivityTimeout { get; set; }\n    return:\n      type: System.TimeSpan\n      description: The <xref href=\"System.TimeSpan\"></xref> that specifies the interval of time that a service remains inactive before closing. The default value is 10 minutes.\n  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.InactivityTimeout*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The value set is less than or equal to zero or greater than either <xref href=\"System.Int32.MaxValue\"></xref> or <xref href=\"System.TimeSpan.MaxValue\"></xref>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ReliableSessionBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxPendingChannels\n  commentId: P:System.ServiceModel.Channels.ReliableSessionBindingElement.MaxPendingChannels\n  id: MaxPendingChannels\n  parent: System.ServiceModel.Channels.ReliableSessionBindingElement\n  langs:\n  - csharp\n  name: MaxPendingChannels\n  nameWithType: ReliableSessionBindingElement.MaxPendingChannels\n  fullName: ReliableSessionBindingElement.MaxPendingChannels\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets or sets the largest number of channels that can be pending during the reliable session.\n  remarks: \"Channels are pending when they are waiting to be accepted. Once that limit is reached, no channels are created and put in pending mode until this number goes down (by accepting pending channels). This is a limit for each listener.  \\n  \\n When the threshold is reached and a remote application tries to establish a new reliable session, the request is denied and the open operation that prompted this faults.\"\n  syntax:\n    content: public int MaxPendingChannels { get; set; }\n    return:\n      type: System.Int32\n      description: The largest number of channels that can be pending. The default value is 4.\n  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxPendingChannels*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The value set is less than or equal to zero or greater than 16384.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ReliableSessionBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxRetryCount\n  commentId: P:System.ServiceModel.Channels.ReliableSessionBindingElement.MaxRetryCount\n  id: MaxRetryCount\n  parent: System.ServiceModel.Channels.ReliableSessionBindingElement\n  langs:\n  - csharp\n  name: MaxRetryCount\n  nameWithType: ReliableSessionBindingElement.MaxRetryCount\n  fullName: ReliableSessionBindingElement.MaxRetryCount\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets or sets the maximum number of times that a message attempts to be transferred during the reliable session.\n  remarks: \"A message is considered to be transferred if its delivery at the recipient has been acknowledged by the recipient.  \\n  \\n If an acknowledgment has not been received within a certain amount of time for a message that has been transmitted, the infrastructure automatically retransmits the message. The infrastructure tries to send the message for, at most, a <xref:System.ServiceModel.Channels.ReliableSessionBindingElement.MaxRetryCount%2A> number of times. Not receiving an acknowledgment before this limit is reached is considered a fatal communication failure and causes the channel faulted event to be raised.  \\n  \\n The infrastructure uses an exponential back-off algorithm to determine when to retransmit, based on a computed average round-trip time. The initial retry time is computed based on the measured roundtrip time of establishing the session. The retransmission algorithm doubles the delay with every attempt, which results in approximately 8.5 minutes passing between the first transmission attempt and the last retransmission attempt. The time for the first retransmission attempt is adjusted according to the calculated round-trip time and the resulting stretch of time that those attempts take varies accordingly. This allows the retransmission time to dynamically adapt to varying network conditions.\"\n  syntax:\n    content: public int MaxRetryCount { get; set; }\n    return:\n      type: System.Int32\n      description: The maximum number of times that a message attempts to be re-sent. The minimum value is 1; the maximum is <xref href=\"System.Int32.MaxValue\"></xref>; and the default value is 8.\n  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxRetryCount*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The value set is less than or equal to zero.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ReliableSessionBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxTransferWindowSize\n  commentId: P:System.ServiceModel.Channels.ReliableSessionBindingElement.MaxTransferWindowSize\n  id: MaxTransferWindowSize\n  parent: System.ServiceModel.Channels.ReliableSessionBindingElement\n  langs:\n  - csharp\n  name: MaxTransferWindowSize\n  nameWithType: ReliableSessionBindingElement.MaxTransferWindowSize\n  fullName: ReliableSessionBindingElement.MaxTransferWindowSize\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets or sets the largest number of messages that can exist in either the send buffer or the receive buffer.\n  remarks: \"The value of the <xref:System.ServiceModel.Channels.ReliableSessionBindingElement.MaxTransferWindowSize%2A> property can be set on both the sender and the receiver. This value is included in the binding policy of the WSDL, so if you use the [ServiceModel Metadata Utility Tool (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md) to construct your client, it has the same value. Otherwise this value is whatever you set it to be on the client.  \\n  \\n When this limit is reached on the sender, additional calls to send are blocked. When this limit is reached on the receiver, new messages that arrive on the underlying channel are not accepted.  \\n  \\n A reliable session uses a windowing protocol to help improve network utilization. The amount of buffering required is directly derived from the size of the transmission window. When tuning this value, note that the optimal transmission window is related to the bandwidth and the latency in a straight-forward way. The ideal maximum window size is the bandwidth times the latency. Anything smaller yields less than 100% network utilization; anything larger is just wasted space.\"\n  syntax:\n    content: public int MaxTransferWindowSize { get; set; }\n    return:\n      type: System.Int32\n      description: The largest number of messages that can be buffered. The minimum value is 1; the maximum value is 4096; and the default value is 32.\n  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxTransferWindowSize*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The value set is less than or equal to one or greater than 4096.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ReliableSessionBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.Ordered\n  commentId: P:System.ServiceModel.Channels.ReliableSessionBindingElement.Ordered\n  id: Ordered\n  parent: System.ServiceModel.Channels.ReliableSessionBindingElement\n  langs:\n  - csharp\n  name: Ordered\n  nameWithType: ReliableSessionBindingElement.Ordered\n  fullName: ReliableSessionBindingElement.Ordered\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets or sets a value that indicates whether message delivery must preserve the order in which messages are sent.\n  remarks: To get messages dispatched in order, you also must set the <xref:System.ServiceModel.ConcurrencyMode> to <xref:System.ServiceModel.ConcurrencyMode.Single>.\n  syntax:\n    content: public bool Ordered { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if messages must be delivered in the order in which they are sent; otherwise, `false`. The default is `false`.'\n  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.Ordered*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ReliableSessionBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.ReliableMessagingVersion\n  commentId: P:System.ServiceModel.Channels.ReliableSessionBindingElement.ReliableMessagingVersion\n  id: ReliableMessagingVersion\n  parent: System.ServiceModel.Channels.ReliableSessionBindingElement\n  langs:\n  - csharp\n  name: ReliableMessagingVersion\n  nameWithType: ReliableSessionBindingElement.ReliableMessagingVersion\n  fullName: ReliableSessionBindingElement.ReliableMessagingVersion\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets or sets the version of WS-ReliableMessaging specified by the binding element.\n  remarks: 'There are currently two versions of the WS-ReliableMessaging protocol supported by [!INCLUDE[indigo1](~/includes/indigo1-md.md)]: WS-ReliableMessaging1.1 and WS-ReliableMessagingFebruary2005. The default version is WS-ReliableMessagingFebruary2005.'\n  syntax:\n    content: public System.ServiceModel.ReliableMessagingVersion ReliableMessagingVersion { get; set; }\n    return:\n      type: System.ServiceModel.ReliableMessagingVersion\n      description: An instance derived from <xref href=\"System.ServiceModel.ReliableMessagingVersion\"></xref> that represents the version of the WS-ReliableMessaging protocol used by the configuration element.\n  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.ReliableMessagingVersion*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ReliableSessionBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)\n  commentId: M:System.ServiceModel.Channels.ReliableSessionBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)\n  id: System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)\n  isEii: true\n  parent: System.ServiceModel.Channels.ReliableSessionBindingElement\n  langs:\n  - csharp\n  name: IPolicyExportExtension.ExportPolicy(MetadataExporter, PolicyConversionContext)\n  nameWithType: ReliableSessionBindingElement.IPolicyExportExtension.ExportPolicy(MetadataExporter, PolicyConversionContext)\n  fullName: ReliableSessionBindingElement.IPolicyExportExtension.ExportPolicy(MetadataExporter, PolicyConversionContext)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Maps the information contained in the reliable session binding element into the WSDL elements that enable a remote endpoint to access the service with a reliable session.\n  syntax:\n    content: void IPolicyExportExtension.ExportPolicy (System.ServiceModel.Description.MetadataExporter exporter, System.ServiceModel.Description.PolicyConversionContext context);\n    parameters:\n    - id: exporter\n      type: System.ServiceModel.Description.MetadataExporter\n      description: The <xref href=\"System.ServiceModel.Description.MetadataExporter\"></xref> that exports the binding information in the reliable session binding element to the WSDL elements.\n    - id: context\n      type: System.ServiceModel.Description.PolicyConversionContext\n      description: The <xref href=\"System.ServiceModel.Description.PolicyConversionContext\"></xref> that provides the mapping from exported WSDL elements to the endpoint description.\n  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ReliableSessionBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.ServiceModel.Channels.BindingElement\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: BindingElement\n  nameWithType: BindingElement\n  fullName: System.ServiceModel.Channels.BindingElement\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.#ctor\n  parent: System.ServiceModel.Channels.ReliableSessionBindingElement\n  isExternal: false\n  name: ReliableSessionBindingElement()\n  nameWithType: ReliableSessionBindingElement.ReliableSessionBindingElement()\n  fullName: ReliableSessionBindingElement.ReliableSessionBindingElement()\n- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.#ctor(System.Boolean)\n  parent: System.ServiceModel.Channels.ReliableSessionBindingElement\n  isExternal: false\n  name: ReliableSessionBindingElement(Boolean)\n  nameWithType: ReliableSessionBindingElement.ReliableSessionBindingElement(Boolean)\n  fullName: ReliableSessionBindingElement.ReliableSessionBindingElement(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.AcknowledgementInterval\n  parent: System.ServiceModel.Channels.ReliableSessionBindingElement\n  isExternal: false\n  name: AcknowledgementInterval\n  nameWithType: ReliableSessionBindingElement.AcknowledgementInterval\n  fullName: ReliableSessionBindingElement.AcknowledgementInterval\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.ReliableSessionBindingElement\n  isExternal: false\n  name: BuildChannelFactory<TChannel>(BindingContext)\n  nameWithType: ReliableSessionBindingElement.BuildChannelFactory<TChannel>(BindingContext)\n  fullName: ReliableSessionBindingElement.BuildChannelFactory<TChannel>(BindingContext)\n- uid: System.ServiceModel.Channels.IChannelFactory`1\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: IChannelFactory<TChannel>\n  nameWithType: IChannelFactory<TChannel>\n  fullName: System.ServiceModel.Channels.IChannelFactory<TChannel>\n- uid: System.ServiceModel.Channels.BindingContext\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: BindingContext\n  nameWithType: BindingContext\n  fullName: System.ServiceModel.Channels.BindingContext\n- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.ReliableSessionBindingElement\n  isExternal: false\n  name: BuildChannelListener<TChannel>(BindingContext)\n  nameWithType: ReliableSessionBindingElement.BuildChannelListener<TChannel>(BindingContext)\n  fullName: ReliableSessionBindingElement.BuildChannelListener<TChannel>(BindingContext)\n- uid: System.ServiceModel.Channels.IChannelListener`1\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: IChannelListener<TChannel>\n  nameWithType: IChannelListener<TChannel>\n  fullName: System.ServiceModel.Channels.IChannelListener<TChannel>\n- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.ReliableSessionBindingElement\n  isExternal: false\n  name: CanBuildChannelFactory<TChannel>(BindingContext)\n  nameWithType: ReliableSessionBindingElement.CanBuildChannelFactory<TChannel>(BindingContext)\n  fullName: ReliableSessionBindingElement.CanBuildChannelFactory<TChannel>(BindingContext)\n- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.ReliableSessionBindingElement\n  isExternal: false\n  name: CanBuildChannelListener<TChannel>(BindingContext)\n  nameWithType: ReliableSessionBindingElement.CanBuildChannelListener<TChannel>(BindingContext)\n  fullName: ReliableSessionBindingElement.CanBuildChannelListener<TChannel>(BindingContext)\n- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.Clone\n  parent: System.ServiceModel.Channels.ReliableSessionBindingElement\n  isExternal: false\n  name: Clone()\n  nameWithType: ReliableSessionBindingElement.Clone()\n  fullName: ReliableSessionBindingElement.Clone()\n- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.FlowControlEnabled\n  parent: System.ServiceModel.Channels.ReliableSessionBindingElement\n  isExternal: false\n  name: FlowControlEnabled\n  nameWithType: ReliableSessionBindingElement.FlowControlEnabled\n  fullName: ReliableSessionBindingElement.FlowControlEnabled\n- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.ReliableSessionBindingElement\n  isExternal: false\n  name: GetProperty<T>(BindingContext)\n  nameWithType: ReliableSessionBindingElement.GetProperty<T>(BindingContext)\n  fullName: ReliableSessionBindingElement.GetProperty<T>(BindingContext)\n- uid: T\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.InactivityTimeout\n  parent: System.ServiceModel.Channels.ReliableSessionBindingElement\n  isExternal: false\n  name: InactivityTimeout\n  nameWithType: ReliableSessionBindingElement.InactivityTimeout\n  fullName: ReliableSessionBindingElement.InactivityTimeout\n- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxPendingChannels\n  parent: System.ServiceModel.Channels.ReliableSessionBindingElement\n  isExternal: false\n  name: MaxPendingChannels\n  nameWithType: ReliableSessionBindingElement.MaxPendingChannels\n  fullName: ReliableSessionBindingElement.MaxPendingChannels\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxRetryCount\n  parent: System.ServiceModel.Channels.ReliableSessionBindingElement\n  isExternal: false\n  name: MaxRetryCount\n  nameWithType: ReliableSessionBindingElement.MaxRetryCount\n  fullName: ReliableSessionBindingElement.MaxRetryCount\n- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxTransferWindowSize\n  parent: System.ServiceModel.Channels.ReliableSessionBindingElement\n  isExternal: false\n  name: MaxTransferWindowSize\n  nameWithType: ReliableSessionBindingElement.MaxTransferWindowSize\n  fullName: ReliableSessionBindingElement.MaxTransferWindowSize\n- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.Ordered\n  parent: System.ServiceModel.Channels.ReliableSessionBindingElement\n  isExternal: false\n  name: Ordered\n  nameWithType: ReliableSessionBindingElement.Ordered\n  fullName: ReliableSessionBindingElement.Ordered\n- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.ReliableMessagingVersion\n  parent: System.ServiceModel.Channels.ReliableSessionBindingElement\n  isExternal: false\n  name: ReliableMessagingVersion\n  nameWithType: ReliableSessionBindingElement.ReliableMessagingVersion\n  fullName: ReliableSessionBindingElement.ReliableMessagingVersion\n- uid: System.ServiceModel.ReliableMessagingVersion\n  parent: System.ServiceModel\n  isExternal: false\n  name: ReliableMessagingVersion\n  nameWithType: ReliableMessagingVersion\n  fullName: System.ServiceModel.ReliableMessagingVersion\n- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)\n  parent: System.ServiceModel.Channels.ReliableSessionBindingElement\n  isExternal: false\n  name: IPolicyExportExtension.ExportPolicy(MetadataExporter, PolicyConversionContext)\n  nameWithType: ReliableSessionBindingElement.IPolicyExportExtension.ExportPolicy(MetadataExporter, PolicyConversionContext)\n  fullName: ReliableSessionBindingElement.IPolicyExportExtension.ExportPolicy(MetadataExporter, PolicyConversionContext)\n- uid: System.ServiceModel.Description.MetadataExporter\n  parent: System.ServiceModel.Description\n  isExternal: false\n  name: MetadataExporter\n  nameWithType: MetadataExporter\n  fullName: System.ServiceModel.Description.MetadataExporter\n- uid: System.ServiceModel.Description.PolicyConversionContext\n  parent: System.ServiceModel.Description\n  isExternal: false\n  name: PolicyConversionContext\n  nameWithType: PolicyConversionContext\n  fullName: System.ServiceModel.Description.PolicyConversionContext\n- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.#ctor*\n  parent: System.ServiceModel.Channels.ReliableSessionBindingElement\n  isExternal: false\n  name: ReliableSessionBindingElement\n  nameWithType: ReliableSessionBindingElement.ReliableSessionBindingElement\n  fullName: ReliableSessionBindingElement.ReliableSessionBindingElement\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ReliableSessionBindingElement.xml\n- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.AcknowledgementInterval*\n  parent: System.ServiceModel.Channels.ReliableSessionBindingElement\n  isExternal: false\n  name: AcknowledgementInterval\n  nameWithType: ReliableSessionBindingElement.AcknowledgementInterval\n  fullName: ReliableSessionBindingElement.AcknowledgementInterval\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ReliableSessionBindingElement.xml\n- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelFactory``1*\n  parent: System.ServiceModel.Channels.ReliableSessionBindingElement\n  isExternal: false\n  name: BuildChannelFactory<TChannel>\n  nameWithType: ReliableSessionBindingElement.BuildChannelFactory<TChannel>\n  fullName: ReliableSessionBindingElement.BuildChannelFactory<TChannel>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ReliableSessionBindingElement.xml\n- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelListener``1*\n  parent: System.ServiceModel.Channels.ReliableSessionBindingElement\n  isExternal: false\n  name: BuildChannelListener<TChannel>\n  nameWithType: ReliableSessionBindingElement.BuildChannelListener<TChannel>\n  fullName: ReliableSessionBindingElement.BuildChannelListener<TChannel>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ReliableSessionBindingElement.xml\n- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelFactory``1*\n  parent: System.ServiceModel.Channels.ReliableSessionBindingElement\n  isExternal: false\n  name: CanBuildChannelFactory<TChannel>\n  nameWithType: ReliableSessionBindingElement.CanBuildChannelFactory<TChannel>\n  fullName: ReliableSessionBindingElement.CanBuildChannelFactory<TChannel>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ReliableSessionBindingElement.xml\n- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelListener``1*\n  parent: System.ServiceModel.Channels.ReliableSessionBindingElement\n  isExternal: false\n  name: CanBuildChannelListener<TChannel>\n  nameWithType: ReliableSessionBindingElement.CanBuildChannelListener<TChannel>\n  fullName: ReliableSessionBindingElement.CanBuildChannelListener<TChannel>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ReliableSessionBindingElement.xml\n- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.Clone*\n  parent: System.ServiceModel.Channels.ReliableSessionBindingElement\n  isExternal: false\n  name: Clone\n  nameWithType: ReliableSessionBindingElement.Clone\n  fullName: ReliableSessionBindingElement.Clone\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ReliableSessionBindingElement.xml\n- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.FlowControlEnabled*\n  parent: System.ServiceModel.Channels.ReliableSessionBindingElement\n  isExternal: false\n  name: FlowControlEnabled\n  nameWithType: ReliableSessionBindingElement.FlowControlEnabled\n  fullName: ReliableSessionBindingElement.FlowControlEnabled\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ReliableSessionBindingElement.xml\n- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.GetProperty``1*\n  parent: System.ServiceModel.Channels.ReliableSessionBindingElement\n  isExternal: false\n  name: GetProperty<T>\n  nameWithType: ReliableSessionBindingElement.GetProperty<T>\n  fullName: ReliableSessionBindingElement.GetProperty<T>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ReliableSessionBindingElement.xml\n- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.InactivityTimeout*\n  parent: System.ServiceModel.Channels.ReliableSessionBindingElement\n  isExternal: false\n  name: InactivityTimeout\n  nameWithType: ReliableSessionBindingElement.InactivityTimeout\n  fullName: ReliableSessionBindingElement.InactivityTimeout\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ReliableSessionBindingElement.xml\n- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxPendingChannels*\n  parent: System.ServiceModel.Channels.ReliableSessionBindingElement\n  isExternal: false\n  name: MaxPendingChannels\n  nameWithType: ReliableSessionBindingElement.MaxPendingChannels\n  fullName: ReliableSessionBindingElement.MaxPendingChannels\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ReliableSessionBindingElement.xml\n- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxRetryCount*\n  parent: System.ServiceModel.Channels.ReliableSessionBindingElement\n  isExternal: false\n  name: MaxRetryCount\n  nameWithType: ReliableSessionBindingElement.MaxRetryCount\n  fullName: ReliableSessionBindingElement.MaxRetryCount\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ReliableSessionBindingElement.xml\n- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxTransferWindowSize*\n  parent: System.ServiceModel.Channels.ReliableSessionBindingElement\n  isExternal: false\n  name: MaxTransferWindowSize\n  nameWithType: ReliableSessionBindingElement.MaxTransferWindowSize\n  fullName: ReliableSessionBindingElement.MaxTransferWindowSize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ReliableSessionBindingElement.xml\n- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.Ordered*\n  parent: System.ServiceModel.Channels.ReliableSessionBindingElement\n  isExternal: false\n  name: Ordered\n  nameWithType: ReliableSessionBindingElement.Ordered\n  fullName: ReliableSessionBindingElement.Ordered\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ReliableSessionBindingElement.xml\n- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.ReliableMessagingVersion*\n  parent: System.ServiceModel.Channels.ReliableSessionBindingElement\n  isExternal: false\n  name: ReliableMessagingVersion\n  nameWithType: ReliableSessionBindingElement.ReliableMessagingVersion\n  fullName: ReliableSessionBindingElement.ReliableMessagingVersion\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ReliableSessionBindingElement.xml\n- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy*\n  parent: System.ServiceModel.Channels.ReliableSessionBindingElement\n  isExternal: false\n  name: System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy\n  nameWithType: ReliableSessionBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy\n  fullName: ReliableSessionBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ReliableSessionBindingElement.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.ServiceModel.Description.IPolicyExportExtension\n  parent: System.ServiceModel.Description\n  isExternal: false\n  name: IPolicyExportExtension\n  nameWithType: IPolicyExportExtension\n  fullName: System.ServiceModel.Description.IPolicyExportExtension\n"}