{"nodes":[{"content":"Manages states and the logic for transitioning between states for controls.","nodes":[{"pos":[0,75],"content":"Manages states and the logic for transitioning between states for controls.","nodes":[{"content":"Manages states and the logic for transitioning between states for controls.","pos":[0,75]}]}],"pos":[1748,1824],"yaml":true},{"content":"The <xref:System.Windows.VisualStateManager> enables you to specify states for a control, the appearance of a control when it is in a certain state, and when a control changes states. For example, a <xref:System.Windows.Controls.Button> might have a slightly different appearance when it is pressed than when it is not pressed. Two states that the <xref:System.Windows.Controls.Button> defines correspond to when it is pressed (`\"Pressed\"`) and when it is not (`\"Normal\"`). The appearance of a control when it is in a state is defined by a <xref:System.Windows.VisualState>. A <xref:System.Windows.VisualState> contains a collection of <xref:System.Windows.Media.Animation.Storyboard> objects that specify how the control's appearance changes when the control is in that state. You add visual states to a control by setting the `VisualStateManager.VisualStateGroups` attached property on the control. Each <xref:System.Windows.VisualStateGroup> contains a collection of <xref:System.Windows.VisualState> objects that are mutually exclusive. That is, the control is always in exactly one state of in each <xref:System.Windows.VisualStateGroup>.  \n  \n The <xref:System.Windows.VisualStateManager> also enables you to specify when a control enters a specific state. The method that you should call to change states depends on your scenario. If you create a control that uses the <xref:System.Windows.VisualStateManager> in its <xref:System.Windows.Controls.ControlTemplate>, call the <xref:System.Windows.VisualStateManager.GoToState%2A> method. For more information about how to create controls that use the <xref:System.Windows.VisualStateManager>, see [Creating a Control That Has a Customizable Appearance](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md). If you use the <xref:System.Windows.VisualStateManager> outside of a <xref:System.Windows.Controls.ControlTemplate> (for example, if you use a <xref:System.Windows.VisualStateManager> in a <xref:System.Windows.Controls.UserControl> or in a single element), call the <xref:System.Windows.VisualStateManager.GoToElementState%2A> method. In either case, the <xref:System.Windows.VisualStateManager> performs the logic that is required to appropriately start and stop the storyboards that are associated with the involved state. For example, suppose that a control defines the states, `State1` and `State2`, each of which has a storyboard associated with it. If the control is in `State1` and you pass `State2` to <xref:System.Windows.VisualStateManager.GoToState%2A> or <xref:System.Windows.VisualStateManager.GoToElementState%2A>, the <xref:System.Windows.VisualStateManager> starts the storyboard in `State2` and stops the storyboard in `State1`.  \n  \n Controls that are included with [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] use the <xref:System.Windows.VisualStateManager> to change visual states. When you create a <xref:System.Windows.Controls.ControlTemplate> for a control that is included with [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], you can add <xref:System.Windows.VisualState> objects to the control's <xref:System.Windows.Controls.ControlTemplate> to specify the control's appearance in a certain state. To find the names of the visual states for the controls that are included with [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], see [Control Styles and Templates](~/docs/framework/wpf/controls/control-styles-and-templates.md). The control's logic handles transitioning between states, so you do not need to do anything other than define the <xref:System.Windows.VisualState> objects in the new <xref:System.Windows.Controls.ControlTemplate>. For more information about how to create control templates for existing controls, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  \n  \n If you want to implement your own logic for transitioning between states, you must inherit from <xref:System.Windows.VisualStateManager>, override the <xref:System.Windows.VisualStateManager.GoToStateCore%2A> method, and set the <xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A?displayProperty=fullName> attached property on the control that uses the custom logic.","nodes":[{"pos":[0,1143],"content":"The <xref:System.Windows.VisualStateManager> enables you to specify states for a control, the appearance of a control when it is in a certain state, and when a control changes states. For example, a <xref:System.Windows.Controls.Button> might have a slightly different appearance when it is pressed than when it is not pressed. Two states that the <xref:System.Windows.Controls.Button> defines correspond to when it is pressed (`\"Pressed\"`) and when it is not (`\"Normal\"`). The appearance of a control when it is in a state is defined by a <xref:System.Windows.VisualState>. A <xref:System.Windows.VisualState> contains a collection of <xref:System.Windows.Media.Animation.Storyboard> objects that specify how the control's appearance changes when the control is in that state. You add visual states to a control by setting the `VisualStateManager.VisualStateGroups` attached property on the control. Each <xref:System.Windows.VisualStateGroup> contains a collection of <xref:System.Windows.VisualState> objects that are mutually exclusive. That is, the control is always in exactly one state of in each <xref:System.Windows.VisualStateGroup>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.VisualStateManager&gt;</ph> enables you to specify states for a control, the appearance of a control when it is in a certain state, and when a control changes states.","pos":[0,183],"source":"The <xref:System.Windows.VisualStateManager> enables you to specify states for a control, the appearance of a control when it is in a certain state, and when a control changes states."},{"content":"For example, a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Button&gt;</ph> might have a slightly different appearance when it is pressed than when it is not pressed.","pos":[184,327],"source":" For example, a <xref:System.Windows.Controls.Button> might have a slightly different appearance when it is pressed than when it is not pressed."},{"content":"Two states that the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Button&gt;</ph> defines correspond to when it is pressed (<ph id=\"ph2\">`\"Pressed\"`</ph>) and when it is not (<ph id=\"ph3\">`\"Normal\"`</ph>).","pos":[328,473],"source":" Two states that the <xref:System.Windows.Controls.Button> defines correspond to when it is pressed (`\"Pressed\"`) and when it is not (`\"Normal\"`)."},{"content":"The appearance of a control when it is in a state is defined by a <ph id=\"ph1\">&lt;xref:System.Windows.VisualState&gt;</ph>.","pos":[474,574],"source":" The appearance of a control when it is in a state is defined by a <xref:System.Windows.VisualState>."},{"content":"A <ph id=\"ph1\">&lt;xref:System.Windows.VisualState&gt;</ph> contains a collection of <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> objects that specify how the control's appearance changes when the control is in that state.","pos":[575,777],"source":" A <xref:System.Windows.VisualState> contains a collection of <xref:System.Windows.Media.Animation.Storyboard> objects that specify how the control's appearance changes when the control is in that state."},{"content":"You add visual states to a control by setting the <ph id=\"ph1\">`VisualStateManager.VisualStateGroups`</ph> attached property on the control.","pos":[778,900],"source":" You add visual states to a control by setting the `VisualStateManager.VisualStateGroups` attached property on the control."},{"content":"Each <ph id=\"ph1\">&lt;xref:System.Windows.VisualStateGroup&gt;</ph> contains a collection of <ph id=\"ph2\">&lt;xref:System.Windows.VisualState&gt;</ph> objects that are mutually exclusive.","pos":[901,1040],"source":" Each <xref:System.Windows.VisualStateGroup> contains a collection of <xref:System.Windows.VisualState> objects that are mutually exclusive."},{"content":"That is, the control is always in exactly one state of in each <ph id=\"ph1\">&lt;xref:System.Windows.VisualStateGroup&gt;</ph>.","pos":[1041,1143],"source":" That is, the control is always in exactly one state of in each <xref:System.Windows.VisualStateGroup>."}]},{"pos":[1150,2742],"content":"The <xref:System.Windows.VisualStateManager> also enables you to specify when a control enters a specific state. The method that you should call to change states depends on your scenario. If you create a control that uses the <xref:System.Windows.VisualStateManager> in its <xref:System.Windows.Controls.ControlTemplate>, call the <xref:System.Windows.VisualStateManager.GoToState%2A> method. For more information about how to create controls that use the <xref:System.Windows.VisualStateManager>, see [Creating a Control That Has a Customizable Appearance](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md). If you use the <xref:System.Windows.VisualStateManager> outside of a <xref:System.Windows.Controls.ControlTemplate> (for example, if you use a <xref:System.Windows.VisualStateManager> in a <xref:System.Windows.Controls.UserControl> or in a single element), call the <xref:System.Windows.VisualStateManager.GoToElementState%2A> method. In either case, the <xref:System.Windows.VisualStateManager> performs the logic that is required to appropriately start and stop the storyboards that are associated with the involved state. For example, suppose that a control defines the states, `State1` and `State2`, each of which has a storyboard associated with it. If the control is in `State1` and you pass `State2` to <xref:System.Windows.VisualStateManager.GoToState%2A> or <xref:System.Windows.VisualStateManager.GoToElementState%2A>, the <xref:System.Windows.VisualStateManager> starts the storyboard in `State2` and stops the storyboard in `State1`.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.VisualStateManager&gt;</ph> also enables you to specify when a control enters a specific state.","pos":[0,112],"source":"The <xref:System.Windows.VisualStateManager> also enables you to specify when a control enters a specific state."},{"content":"The method that you should call to change states depends on your scenario.","pos":[113,187]},{"content":"If you create a control that uses the <ph id=\"ph1\">&lt;xref:System.Windows.VisualStateManager&gt;</ph> in its <ph id=\"ph2\">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>, call the <ph id=\"ph3\">&lt;xref:System.Windows.VisualStateManager.GoToState%2A&gt;</ph> method.","pos":[188,392],"source":" If you create a control that uses the <xref:System.Windows.VisualStateManager> in its <xref:System.Windows.Controls.ControlTemplate>, call the <xref:System.Windows.VisualStateManager.GoToState%2A> method."},{"content":"For more information about how to create controls that use the <ph id=\"ph1\">&lt;xref:System.Windows.VisualStateManager&gt;</ph>, see <bpt id=\"p1\">[</bpt>Creating a Control That Has a Customizable Appearance<ept id=\"p1\">](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md)</ept>.","pos":[393,646],"source":" For more information about how to create controls that use the <xref:System.Windows.VisualStateManager>, see [Creating a Control That Has a Customizable Appearance](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md)."},{"content":"If you use the <ph id=\"ph1\">&lt;xref:System.Windows.VisualStateManager&gt;</ph> outside of a <ph id=\"ph2\">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> (for example, if you use a <ph id=\"ph3\">&lt;xref:System.Windows.VisualStateManager&gt;</ph> in a <ph id=\"ph4\">&lt;xref:System.Windows.Controls.UserControl&gt;</ph> or in a single element), call the <ph id=\"ph5\">&lt;xref:System.Windows.VisualStateManager.GoToElementState%2A&gt;</ph> method.","pos":[647,981],"source":" If you use the <xref:System.Windows.VisualStateManager> outside of a <xref:System.Windows.Controls.ControlTemplate> (for example, if you use a <xref:System.Windows.VisualStateManager> in a <xref:System.Windows.Controls.UserControl> or in a single element), call the <xref:System.Windows.VisualStateManager.GoToElementState%2A> method."},{"content":"In either case, the <ph id=\"ph1\">&lt;xref:System.Windows.VisualStateManager&gt;</ph> performs the logic that is required to appropriately start and stop the storyboards that are associated with the involved state.","pos":[982,1171],"source":" In either case, the <xref:System.Windows.VisualStateManager> performs the logic that is required to appropriately start and stop the storyboards that are associated with the involved state."},{"content":"For example, suppose that a control defines the states, <ph id=\"ph1\">`State1`</ph> and <ph id=\"ph2\">`State2`</ph>, each of which has a storyboard associated with it.","pos":[1172,1301],"source":" For example, suppose that a control defines the states, `State1` and `State2`, each of which has a storyboard associated with it."},{"content":"If the control is in <ph id=\"ph1\">`State1`</ph> and you pass <ph id=\"ph2\">`State2`</ph> to <ph id=\"ph3\">&lt;xref:System.Windows.VisualStateManager.GoToState%2A&gt;</ph> or <ph id=\"ph4\">&lt;xref:System.Windows.VisualStateManager.GoToElementState%2A&gt;</ph>, the <ph id=\"ph5\">&lt;xref:System.Windows.VisualStateManager&gt;</ph> starts the storyboard in <ph id=\"ph6\">`State2`</ph> and stops the storyboard in <ph id=\"ph7\">`State1`</ph>.","pos":[1302,1592],"source":" If the control is in `State1` and you pass `State2` to <xref:System.Windows.VisualStateManager.GoToState%2A> or <xref:System.Windows.VisualStateManager.GoToElementState%2A>, the <xref:System.Windows.VisualStateManager> starts the storyboard in `State2` and stops the storyboard in `State1`."}]},{"pos":[2749,3991],"content":"Controls that are included with [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] use the <xref:System.Windows.VisualStateManager> to change visual states. When you create a <xref:System.Windows.Controls.ControlTemplate> for a control that is included with [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], you can add <xref:System.Windows.VisualState> objects to the control's <xref:System.Windows.Controls.ControlTemplate> to specify the control's appearance in a certain state. To find the names of the visual states for the controls that are included with [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], see [Control Styles and Templates](~/docs/framework/wpf/controls/control-styles-and-templates.md). The control's logic handles transitioning between states, so you do not need to do anything other than define the <xref:System.Windows.VisualState> objects in the new <xref:System.Windows.Controls.ControlTemplate>. For more information about how to create control templates for existing controls, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).","nodes":[{"content":"Controls that are included with <ph id=\"ph1\">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> use the <ph id=\"ph2\">&lt;xref:System.Windows.VisualStateManager&gt;</ph> to change visual states.","pos":[0,175],"source":"Controls that are included with [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] use the <xref:System.Windows.VisualStateManager> to change visual states."},{"content":"When you create a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> for a control that is included with <ph id=\"ph2\">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph>, you can add <ph id=\"ph3\">&lt;xref:System.Windows.VisualState&gt;</ph> objects to the control's <ph id=\"ph4\">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> to specify the control's appearance in a certain state.","pos":[176,523],"source":" When you create a <xref:System.Windows.Controls.ControlTemplate> for a control that is included with [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], you can add <xref:System.Windows.VisualState> objects to the control's <xref:System.Windows.Controls.ControlTemplate> to specify the control's appearance in a certain state."},{"content":"To find the names of the visual states for the controls that are included with <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph>, see <bpt id=\"p1\">[</bpt>Control Styles and Templates<ept id=\"p1\">](~/docs/framework/wpf/controls/control-styles-and-templates.md)</ept>.","pos":[524,774],"source":" To find the names of the visual states for the controls that are included with [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], see [Control Styles and Templates](~/docs/framework/wpf/controls/control-styles-and-templates.md)."},{"content":"The control's logic handles transitioning between states, so you do not need to do anything other than define the <ph id=\"ph1\">&lt;xref:System.Windows.VisualState&gt;</ph> objects in the new <ph id=\"ph2\">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>.","pos":[775,989],"source":" The control's logic handles transitioning between states, so you do not need to do anything other than define the <xref:System.Windows.VisualState> objects in the new <xref:System.Windows.Controls.ControlTemplate>."},{"content":"For more information about how to create control templates for existing controls, see <bpt id=\"p1\">[</bpt>Customizing the Appearance of an Existing Control by Creating a ControlTemplate<ept id=\"p1\">](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)</ept>.","pos":[990,1242],"source":" For more information about how to create control templates for existing controls, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)."}]},{"pos":[3998,4381],"content":"If you want to implement your own logic for transitioning between states, you must inherit from <xref:System.Windows.VisualStateManager>, override the <xref:System.Windows.VisualStateManager.GoToStateCore%2A> method, and set the <xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A?displayProperty=fullName> attached property on the control that uses the custom logic.","nodes":[{"content":"If you want to implement your own logic for transitioning between states, you must inherit from <ph id=\"ph1\">&lt;xref:System.Windows.VisualStateManager&gt;</ph>, override the <ph id=\"ph2\">&lt;xref:System.Windows.VisualStateManager.GoToStateCore%2A&gt;</ph> method, and set the <ph id=\"ph3\">&lt;xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A?displayProperty=fullName&gt;</ph> attached property on the control that uses the custom logic.","pos":[0,383],"source":"If you want to implement your own logic for transitioning between states, you must inherit from <xref:System.Windows.VisualStateManager>, override the <xref:System.Windows.VisualStateManager.GoToStateCore%2A> method, and set the <xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A?displayProperty=fullName> attached property on the control that uses the custom logic."}]}],"pos":[1835,6229],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Windows.VisualStateManager\"></xref> class.","nodes":[{"pos":[0,95],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.VisualStateManager\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Windows.VisualStateManager\"></xref> class."}],"pos":[11048,11144],"yaml":true},{"content":"Identifies the <xref href=\"System.Windows.VisualStateManager.CustomVisualStateManager\"></xref> dependency property.","nodes":[{"pos":[0,115],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.VisualStateManager.CustomVisualStateManager\"&gt;&lt;/xref&gt;</ph> dependency property.","source":"Identifies the <xref href=\"System.Windows.VisualStateManager.CustomVisualStateManager\"></xref> dependency property."}],"pos":[12339,12455],"yaml":true},{"content":"Gets the <xref href=\"System.Windows.VisualStateManager.CustomVisualStateManager\"></xref> attached property.","nodes":[{"pos":[0,107],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Windows.VisualStateManager.CustomVisualStateManager\"&gt;&lt;/xref&gt;</ph> attached property.","source":"Gets the <xref href=\"System.Windows.VisualStateManager.CustomVisualStateManager\"></xref> attached property."}],"pos":[13821,13929],"yaml":true},{"content":"The element to get the <xref href=\"System.Windows.VisualStateManager.CustomVisualStateManager\"></xref> attached property from.","nodes":[{"pos":[0,126],"content":"The element to get the <ph id=\"ph1\">&lt;xref href=\"System.Windows.VisualStateManager.CustomVisualStateManager\"&gt;&lt;/xref&gt;</ph> attached property from.","source":"The element to get the <xref href=\"System.Windows.VisualStateManager.CustomVisualStateManager\"></xref> attached property from."}],"pos":[14160,14287],"yaml":true},{"content":"The visual state manager that transitions between the states of a control.","nodes":[{"pos":[0,74],"content":"The visual state manager that transitions between the states of a control.","nodes":[{"content":"The visual state manager that transitions between the states of a control.","pos":[0,74]}]}],"pos":[14364,14439],"yaml":true},{"content":"Gets the <xref href=\"System.Windows.VisualStateManager.VisualStateGroups\"></xref> attached property.","nodes":[{"pos":[0,100],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Windows.VisualStateManager.VisualStateGroups\"&gt;&lt;/xref&gt;</ph> attached property.","source":"Gets the <xref href=\"System.Windows.VisualStateManager.VisualStateGroups\"></xref> attached property."}],"pos":[15644,15745],"yaml":true},{"content":"The element to get the <xref href=\"System.Windows.VisualStateManager.VisualStateGroups\"></xref> attached property from.","nodes":[{"pos":[0,119],"content":"The element to get the <ph id=\"ph1\">&lt;xref href=\"System.Windows.VisualStateManager.VisualStateGroups\"&gt;&lt;/xref&gt;</ph> attached property from.","source":"The element to get the <xref href=\"System.Windows.VisualStateManager.VisualStateGroups\"></xref> attached property from."}],"pos":[15960,16080],"yaml":true},{"content":"The collection of <xref href=\"System.Windows.VisualStateGroup\"></xref> objects that is associated with the specified object.","nodes":[{"pos":[0,124],"content":"The collection of <ph id=\"ph1\">&lt;xref href=\"System.Windows.VisualStateGroup\"&gt;&lt;/xref&gt;</ph> objects that is associated with the specified object.","source":"The collection of <xref href=\"System.Windows.VisualStateGroup\"></xref> objects that is associated with the specified object."}],"pos":[16148,16273],"yaml":true},{"content":"Transitions the element between two states. Use this method to transition states that are defined by an application, rather than defined by a control.","nodes":[{"pos":[0,150],"content":"Transitions the element between two states. Use this method to transition states that are defined by an application, rather than defined by a control.","nodes":[{"content":"Transitions the element between two states. Use this method to transition states that are defined by an application, rather than defined by a control.","pos":[0,150],"nodes":[{"content":"Transitions the element between two states.","pos":[0,43]},{"content":"Use this method to transition states that are defined by an application, rather than defined by a control.","pos":[44,150]}]}]}],"pos":[17624,17775],"yaml":true},{"content":"Call the <xref:System.Windows.VisualStateManager.GoToElementState%2A> method to change states on an element outside of a <xref:System.Windows.Controls.ControlTemplate> (for example, if you use a <xref:System.Windows.VisualStateManager> in a <xref:System.Windows.DataTemplate> or <xref:System.Windows.Window>). Call the <xref:System.Windows.VisualStateManager.GoToState%2A> method if you are changing states in a control that uses the <xref:System.Windows.VisualStateManager> in its <xref:System.Windows.Controls.ControlTemplate>.","nodes":[{"pos":[0,529],"content":"Call the <xref:System.Windows.VisualStateManager.GoToElementState%2A> method to change states on an element outside of a <xref:System.Windows.Controls.ControlTemplate> (for example, if you use a <xref:System.Windows.VisualStateManager> in a <xref:System.Windows.DataTemplate> or <xref:System.Windows.Window>). Call the <xref:System.Windows.VisualStateManager.GoToState%2A> method if you are changing states in a control that uses the <xref:System.Windows.VisualStateManager> in its <xref:System.Windows.Controls.ControlTemplate>.","nodes":[{"content":"Call the <xref:System.Windows.VisualStateManager.GoToElementState%2A> method to change states on an element outside of a <xref:System.Windows.Controls.ControlTemplate> (for example, if you use a <xref:System.Windows.VisualStateManager> in a <xref:System.Windows.DataTemplate> or <xref:System.Windows.Window>). Call the <xref:System.Windows.VisualStateManager.GoToState%2A> method if you are changing states in a control that uses the <xref:System.Windows.VisualStateManager> in its <xref:System.Windows.Controls.ControlTemplate>.","pos":[0,529],"nodes":[{"content":"Call the <ph id=\"ph1\">&lt;xref:System.Windows.VisualStateManager.GoToElementState%2A&gt;</ph> method to change states on an element outside of a <ph id=\"ph2\">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> (for example, if you use a <ph id=\"ph3\">&lt;xref:System.Windows.VisualStateManager&gt;</ph> in a <ph id=\"ph4\">&lt;xref:System.Windows.DataTemplate&gt;</ph> or <ph id=\"ph5\">&lt;xref:System.Windows.Window&gt;</ph>).","pos":[0,309],"source":"Call the <xref:System.Windows.VisualStateManager.GoToElementState%2A> method to change states on an element outside of a <xref:System.Windows.Controls.ControlTemplate> (for example, if you use a <xref:System.Windows.VisualStateManager> in a <xref:System.Windows.DataTemplate> or <xref:System.Windows.Window>)."},{"content":"Call the <ph id=\"ph1\">&lt;xref:System.Windows.VisualStateManager.GoToState%2A&gt;</ph> method if you are changing states in a control that uses the <ph id=\"ph2\">&lt;xref:System.Windows.VisualStateManager&gt;</ph> in its <ph id=\"ph3\">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>.","pos":[310,529],"source":" Call the <xref:System.Windows.VisualStateManager.GoToState%2A> method if you are changing states in a control that uses the <xref:System.Windows.VisualStateManager> in its <xref:System.Windows.Controls.ControlTemplate>."}]}]}],"pos":[17786,18316],"yaml":true,"extradata":"MT"},{"content":"The root element that contains the <xref href=\"System.Windows.VisualStateManager\"></xref>.","nodes":[{"pos":[0,90],"content":"The root element that contains the <ph id=\"ph1\">&lt;xref href=\"System.Windows.VisualStateManager\"&gt;&lt;/xref&gt;</ph>.","source":"The root element that contains the <xref href=\"System.Windows.VisualStateManager\"></xref>."}],"pos":[19960,20051],"yaml":true},{"content":"The state to transition to.","nodes":[{"pos":[0,27],"content":"The state to transition to.","nodes":[{"content":"The state to transition to.","pos":[0,27]}]}],"pos":[20116,20144],"yaml":true},{"content":"`true` to use a <xref href=\"System.Windows.VisualTransition\"></xref> object to transition between states; otherwise, `false`.","nodes":[{"pos":[0,125],"content":"<ph id=\"ph1\">`true`</ph> to use a <ph id=\"ph2\">&lt;xref href=\"System.Windows.VisualTransition\"&gt;&lt;/xref&gt;</ph> object to transition between states; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` to use a <xref href=\"System.Windows.VisualTransition\"></xref> object to transition between states; otherwise, `false`."}],"pos":[20215,20343],"yaml":true},{"content":"`true` if the control successfully transitioned to the new state; otherwise, `false`.","nodes":[{"pos":[0,85],"content":"<ph id=\"ph1\">`true`</ph> if the control successfully transitioned to the new state; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the control successfully transitioned to the new state; otherwise, `false`."}],"pos":[20401,20489],"yaml":true},{"content":"<code>stateGroupsRoot</code> is `null`.  \n  \n -or-  \n  \n <code>stateName</code> is `null`.","nodes":[{"pos":[0,39],"content":"<ph id=\"ph1\">&lt;code&gt;stateGroupsRoot&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>stateGroupsRoot</code> is `null`."},{"pos":[46,50],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[57,90],"content":"<ph id=\"ph1\">&lt;code&gt;stateName&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>stateName</code> is `null`."}],"pos":[20669,20766],"yaml":true},{"content":"Transitions the control between two states. Use this method to transition states on control that has a <xref href=\"System.Windows.Controls.ControlTemplate\"></xref>.","nodes":[{"pos":[0,164],"content":"Transitions the control between two states. Use this method to transition states on control that has a <xref href=\"System.Windows.Controls.ControlTemplate\"></xref>.","nodes":[{"content":"Transitions the control between two states.","pos":[0,43]},{"content":"Use this method to transition states on control that has a <ph id=\"ph1\">&lt;xref href=\"System.Windows.Controls.ControlTemplate\"&gt;&lt;/xref&gt;</ph>.","pos":[44,164],"source":" Use this method to transition states on control that has a <xref href=\"System.Windows.Controls.ControlTemplate\"></xref>."}]}],"pos":[21951,22116],"yaml":true},{"content":"Call the <xref:System.Windows.VisualStateManager.GoToState%2A> method if you are changing states in a control that uses the <xref:System.Windows.VisualStateManager> in its <xref:System.Windows.Controls.ControlTemplate>. Call the <xref:System.Windows.VisualStateManager.GoToElementState%2A> method to change states on an element outside of a <xref:System.Windows.Controls.ControlTemplate> (for example, if you use a <xref:System.Windows.VisualStateManager> in a <xref:System.Windows.Controls.UserControl> or in a single element).","nodes":[{"pos":[0,528],"content":"Call the <xref:System.Windows.VisualStateManager.GoToState%2A> method if you are changing states in a control that uses the <xref:System.Windows.VisualStateManager> in its <xref:System.Windows.Controls.ControlTemplate>. Call the <xref:System.Windows.VisualStateManager.GoToElementState%2A> method to change states on an element outside of a <xref:System.Windows.Controls.ControlTemplate> (for example, if you use a <xref:System.Windows.VisualStateManager> in a <xref:System.Windows.Controls.UserControl> or in a single element).","nodes":[{"content":"Call the <xref:System.Windows.VisualStateManager.GoToState%2A> method if you are changing states in a control that uses the <xref:System.Windows.VisualStateManager> in its <xref:System.Windows.Controls.ControlTemplate>. Call the <xref:System.Windows.VisualStateManager.GoToElementState%2A> method to change states on an element outside of a <xref:System.Windows.Controls.ControlTemplate> (for example, if you use a <xref:System.Windows.VisualStateManager> in a <xref:System.Windows.Controls.UserControl> or in a single element).","pos":[0,528],"nodes":[{"content":"Call the <ph id=\"ph1\">&lt;xref:System.Windows.VisualStateManager.GoToState%2A&gt;</ph> method if you are changing states in a control that uses the <ph id=\"ph2\">&lt;xref:System.Windows.VisualStateManager&gt;</ph> in its <ph id=\"ph3\">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>.","pos":[0,219],"source":"Call the <xref:System.Windows.VisualStateManager.GoToState%2A> method if you are changing states in a control that uses the <xref:System.Windows.VisualStateManager> in its <xref:System.Windows.Controls.ControlTemplate>."},{"content":"Call the <ph id=\"ph1\">&lt;xref:System.Windows.VisualStateManager.GoToElementState%2A&gt;</ph> method to change states on an element outside of a <ph id=\"ph2\">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> (for example, if you use a <ph id=\"ph3\">&lt;xref:System.Windows.VisualStateManager&gt;</ph> in a <ph id=\"ph4\">&lt;xref:System.Windows.Controls.UserControl&gt;</ph> or in a single element).","pos":[220,528],"source":" Call the <xref:System.Windows.VisualStateManager.GoToElementState%2A> method to change states on an element outside of a <xref:System.Windows.Controls.ControlTemplate> (for example, if you use a <xref:System.Windows.VisualStateManager> in a <xref:System.Windows.Controls.UserControl> or in a single element)."}]}]}],"pos":[22127,22656],"yaml":true,"extradata":"MT"},{"content":"The control to transition between states.","nodes":[{"pos":[0,41],"content":"The control to transition between states.","nodes":[{"content":"The control to transition between states.","pos":[0,41]}]}],"pos":[23529,23571],"yaml":true},{"content":"The state to transition to.","nodes":[{"pos":[0,27],"content":"The state to transition to.","nodes":[{"content":"The state to transition to.","pos":[0,27]}]}],"pos":[23636,23664],"yaml":true},{"content":"`true` to use a <xref href=\"System.Windows.VisualTransition\"></xref> object to transition between states; otherwise, `false`.","nodes":[{"pos":[0,125],"content":"<ph id=\"ph1\">`true`</ph> to use a <ph id=\"ph2\">&lt;xref href=\"System.Windows.VisualTransition\"&gt;&lt;/xref&gt;</ph> object to transition between states; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` to use a <xref href=\"System.Windows.VisualTransition\"></xref> object to transition between states; otherwise, `false`."}],"pos":[23735,23863],"yaml":true},{"content":"`true` if the control successfully transitioned to the new state; otherwise, `false`.","nodes":[{"pos":[0,85],"content":"<ph id=\"ph1\">`true`</ph> if the control successfully transitioned to the new state; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the control successfully transitioned to the new state; otherwise, `false`."}],"pos":[23921,24009],"yaml":true},{"content":"<code>control</code> is `null`.  \n  \n -or-  \n  \n <code>stateName</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;control&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>control</code> is `null`."},{"pos":[38,42],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[49,82],"content":"<ph id=\"ph1\">&lt;code&gt;stateName&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>stateName</code> is `null`."}],"pos":[24182,24271],"yaml":true},{"content":"Transitions a control between states.","nodes":[{"pos":[0,37],"content":"Transitions a control between states.","nodes":[{"content":"Transitions a control between states.","pos":[0,37]}]}],"pos":[25922,25960],"yaml":true},{"content":"The <xref:System.Windows.VisualStateManager.GoToStateCore%2A> method performs the logic necessary to appropriately start and stop the storyboards that are associated with a transition. When a control calls <xref:System.Windows.VisualStateManager.GoToState%2A> to change its state, the <xref:System.Windows.VisualStateManager> does the following:  \n  \n-   First, if the <xref:System.Windows.VisualState> that the control is transitioning to has a <xref:System.Windows.Media.Animation.Storyboard>, the storyboard begins. Then, if the <xref:System.Windows.VisualState> that the control is coming from has a <xref:System.Windows.Media.Animation.Storyboard>, the storyboard ends.  \n  \n-   If the control is already in the `stateName` state, <xref:System.Windows.VisualStateManager.GoToState%2A> takes no action and returns `true`.  \n  \n-   If `stateName` does not exist in the <xref:System.Windows.Controls.ControlTemplate> of `control`, <xref:System.Windows.VisualStateManager.GoToState%2A> takes no action and returns `false`.  \n  \n You can implement your own <xref:System.Windows.VisualStateManager> to provide different logic for transitioning between states. For example, you can change the logic described previously, or you can provide logic to transition between custom animation types.  To implement a <xref:System.Windows.VisualStateManager>, create a class that inherits from <xref:System.Windows.VisualStateManager> and override the <xref:System.Windows.VisualStateManager.GoToStateCore%2A> method. To use the custom class, set the <xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A> property to an object of your custom type.","nodes":[{"pos":[0,345],"content":"The <xref:System.Windows.VisualStateManager.GoToStateCore%2A> method performs the logic necessary to appropriately start and stop the storyboards that are associated with a transition. When a control calls <xref:System.Windows.VisualStateManager.GoToState%2A> to change its state, the <xref:System.Windows.VisualStateManager> does the following:","nodes":[{"content":"The <xref:System.Windows.VisualStateManager.GoToStateCore%2A> method performs the logic necessary to appropriately start and stop the storyboards that are associated with a transition. When a control calls <xref:System.Windows.VisualStateManager.GoToState%2A> to change its state, the <xref:System.Windows.VisualStateManager> does the following:","pos":[0,345],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.VisualStateManager.GoToStateCore%2A&gt;</ph> method performs the logic necessary to appropriately start and stop the storyboards that are associated with a transition.","pos":[0,184],"source":"The <xref:System.Windows.VisualStateManager.GoToStateCore%2A> method performs the logic necessary to appropriately start and stop the storyboards that are associated with a transition."},{"content":"When a control calls <ph id=\"ph1\">&lt;xref:System.Windows.VisualStateManager.GoToState%2A&gt;</ph> to change its state, the <ph id=\"ph2\">&lt;xref:System.Windows.VisualStateManager&gt;</ph> does the following:","pos":[185,345],"source":" When a control calls <xref:System.Windows.VisualStateManager.GoToState%2A> to change its state, the <xref:System.Windows.VisualStateManager> does the following:"}]}]},{"pos":[355,674],"content":"First, if the <xref:System.Windows.VisualState> that the control is transitioning to has a <xref:System.Windows.Media.Animation.Storyboard>, the storyboard begins. Then, if the <xref:System.Windows.VisualState> that the control is coming from has a <xref:System.Windows.Media.Animation.Storyboard>, the storyboard ends.","nodes":[{"content":"First, if the <xref:System.Windows.VisualState> that the control is transitioning to has a <xref:System.Windows.Media.Animation.Storyboard>, the storyboard begins. Then, if the <xref:System.Windows.VisualState> that the control is coming from has a <xref:System.Windows.Media.Animation.Storyboard>, the storyboard ends.","pos":[0,319],"nodes":[{"content":"First, if the <ph id=\"ph1\">&lt;xref:System.Windows.VisualState&gt;</ph> that the control is transitioning to has a <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>, the storyboard begins.","pos":[0,163],"source":"First, if the <xref:System.Windows.VisualState> that the control is transitioning to has a <xref:System.Windows.Media.Animation.Storyboard>, the storyboard begins."},{"content":"Then, if the <ph id=\"ph1\">&lt;xref:System.Windows.VisualState&gt;</ph> that the control is coming from has a <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>, the storyboard ends.","pos":[164,319],"source":" Then, if the <xref:System.Windows.VisualState> that the control is coming from has a <xref:System.Windows.Media.Animation.Storyboard>, the storyboard ends."}]}]},{"pos":[684,825],"content":"If the control is already in the <ph id=\"ph1\">`stateName`</ph> state, <ph id=\"ph2\">&lt;xref:System.Windows.VisualStateManager.GoToState%2A&gt;</ph> takes no action and returns <ph id=\"ph3\">`true`</ph>.","source":"If the control is already in the `stateName` state, <xref:System.Windows.VisualStateManager.GoToState%2A> takes no action and returns `true`."},{"pos":[835,1023],"content":"If <ph id=\"ph1\">`stateName`</ph> does not exist in the <ph id=\"ph2\">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> of <ph id=\"ph3\">`control`</ph>, <ph id=\"ph4\">&lt;xref:System.Windows.VisualStateManager.GoToState%2A&gt;</ph> takes no action and returns <ph id=\"ph5\">`false`</ph>.","source":"If `stateName` does not exist in the <xref:System.Windows.Controls.ControlTemplate> of `control`, <xref:System.Windows.VisualStateManager.GoToState%2A> takes no action and returns `false`."},{"pos":[1030,1650],"content":"You can implement your own <xref:System.Windows.VisualStateManager> to provide different logic for transitioning between states. For example, you can change the logic described previously, or you can provide logic to transition between custom animation types.  To implement a <xref:System.Windows.VisualStateManager>, create a class that inherits from <xref:System.Windows.VisualStateManager> and override the <xref:System.Windows.VisualStateManager.GoToStateCore%2A> method. To use the custom class, set the <xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A> property to an object of your custom type.","nodes":[{"content":"You can implement your own <xref:System.Windows.VisualStateManager> to provide different logic for transitioning between states. For example, you can change the logic described previously, or you can provide logic to transition between custom animation types.  To implement a <xref:System.Windows.VisualStateManager>, create a class that inherits from <xref:System.Windows.VisualStateManager> and override the <xref:System.Windows.VisualStateManager.GoToStateCore%2A> method. To use the custom class, set the <xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A> property to an object of your custom type.","pos":[0,620],"nodes":[{"content":"You can implement your own <ph id=\"ph1\">&lt;xref:System.Windows.VisualStateManager&gt;</ph> to provide different logic for transitioning between states.","pos":[0,128],"source":"You can implement your own <xref:System.Windows.VisualStateManager> to provide different logic for transitioning between states."},{"content":"For example, you can change the logic described previously, or you can provide logic to transition between custom animation types.","pos":[129,259]},{"content":"To implement a <ph id=\"ph1\">&lt;xref:System.Windows.VisualStateManager&gt;</ph>, create a class that inherits from <ph id=\"ph2\">&lt;xref:System.Windows.VisualStateManager&gt;</ph> and override the <ph id=\"ph3\">&lt;xref:System.Windows.VisualStateManager.GoToStateCore%2A&gt;</ph> method.","pos":[261,475],"source":"  To implement a <xref:System.Windows.VisualStateManager>, create a class that inherits from <xref:System.Windows.VisualStateManager> and override the <xref:System.Windows.VisualStateManager.GoToStateCore%2A> method."},{"content":"To use the custom class, set the <ph id=\"ph1\">&lt;xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A&gt;</ph> property to an object of your custom type.","pos":[476,620],"source":" To use the custom class, set the <xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A> property to an object of your custom type."}]}]}],"pos":[25971,27632],"yaml":true,"extradata":"MT"},{"content":"The control to transition between states.","nodes":[{"pos":[0,41],"content":"The control to transition between states.","nodes":[{"content":"The control to transition between states.","pos":[0,41]}]}],"pos":[27993,28035],"yaml":true},{"content":"The root element that contains the <xref href=\"System.Windows.VisualStateManager\"></xref>.","nodes":[{"pos":[0,90],"content":"The root element that contains the <ph id=\"ph1\">&lt;xref href=\"System.Windows.VisualStateManager\"&gt;&lt;/xref&gt;</ph>.","source":"The root element that contains the <xref href=\"System.Windows.VisualStateManager\"></xref>."}],"pos":[28124,28215],"yaml":true},{"content":"The name of the state to transition to.","nodes":[{"pos":[0,39],"content":"The name of the state to transition to.","nodes":[{"content":"The name of the state to transition to.","pos":[0,39]}]}],"pos":[28280,28320],"yaml":true},{"content":"The <xref href=\"System.Windows.VisualStateGroup\"></xref> that the state belongs to.","nodes":[{"pos":[0,83],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.VisualStateGroup\"&gt;&lt;/xref&gt;</ph> that the state belongs to.","source":"The <xref href=\"System.Windows.VisualStateGroup\"></xref> that the state belongs to."}],"pos":[28399,28483],"yaml":true},{"content":"The representation of the state to transition to.","nodes":[{"pos":[0,49],"content":"The representation of the state to transition to.","nodes":[{"content":"The representation of the state to transition to.","pos":[0,49]}]}],"pos":[28557,28607],"yaml":true},{"content":"`true` to use a <xref href=\"System.Windows.VisualTransition\"></xref> object to transition between states; otherwise, `false`.","nodes":[{"pos":[0,125],"content":"<ph id=\"ph1\">`true`</ph> to use a <ph id=\"ph2\">&lt;xref href=\"System.Windows.VisualTransition\"&gt;&lt;/xref&gt;</ph> object to transition between states; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` to use a <xref href=\"System.Windows.VisualTransition\"></xref> object to transition between states; otherwise, `false`."}],"pos":[28678,28806],"yaml":true},{"content":"`true` if the control successfully transitioned to the new state; otherwise, `false`.","nodes":[{"pos":[0,85],"content":"<ph id=\"ph1\">`true`</ph> if the control successfully transitioned to the new state; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the control successfully transitioned to the new state; otherwise, `false`."}],"pos":[28864,28952],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.VisualStateGroup.CurrentStateChanging\"></xref> event on the specified <xref href=\"System.Windows.VisualStateGroup\"></xref> object.","nodes":[{"pos":[0,168],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.VisualStateGroup.CurrentStateChanging\"&gt;&lt;/xref&gt;</ph> event on the specified <ph id=\"ph2\">&lt;xref href=\"System.Windows.VisualStateGroup\"&gt;&lt;/xref&gt;</ph> object.","source":"Raises the <xref href=\"System.Windows.VisualStateGroup.CurrentStateChanging\"></xref> event on the specified <xref href=\"System.Windows.VisualStateGroup\"></xref> object."}],"pos":[30729,30898],"yaml":true},{"content":"When the <xref:System.Windows.VisualStateGroup> is set on the <xref:System.Windows.Controls.ControlTemplate> of a control, the `control` parameter is set to the control that owns <xref:System.Windows.Controls.ControlTemplate>.  When the <xref:System.Windows.VisualStateGroup> is set on a <xref:System.Windows.FrameworkElement>, `control` is `null` and you should use the `stateGroupsRoot` parameter.","nodes":[{"pos":[0,399],"content":"When the <xref:System.Windows.VisualStateGroup> is set on the <xref:System.Windows.Controls.ControlTemplate> of a control, the `control` parameter is set to the control that owns <xref:System.Windows.Controls.ControlTemplate>.  When the <xref:System.Windows.VisualStateGroup> is set on a <xref:System.Windows.FrameworkElement>, `control` is `null` and you should use the `stateGroupsRoot` parameter.","nodes":[{"content":"When the <ph id=\"ph1\">&lt;xref:System.Windows.VisualStateGroup&gt;</ph> is set on the <ph id=\"ph2\">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> of a control, the <ph id=\"ph3\">`control`</ph> parameter is set to the control that owns <ph id=\"ph4\">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>.","pos":[0,226],"source":"When the <xref:System.Windows.VisualStateGroup> is set on the <xref:System.Windows.Controls.ControlTemplate> of a control, the `control` parameter is set to the control that owns <xref:System.Windows.Controls.ControlTemplate>."},{"content":"When the <ph id=\"ph1\">&lt;xref:System.Windows.VisualStateGroup&gt;</ph> is set on a <ph id=\"ph2\">&lt;xref:System.Windows.FrameworkElement&gt;</ph>, <ph id=\"ph3\">`control`</ph> is <ph id=\"ph4\">`null`</ph> and you should use the <ph id=\"ph5\">`stateGroupsRoot`</ph> parameter.","pos":[228,399],"source":"  When the <xref:System.Windows.VisualStateGroup> is set on a <xref:System.Windows.FrameworkElement>, `control` is `null` and you should use the `stateGroupsRoot` parameter."}]}],"pos":[30909,31309],"yaml":true,"extradata":"MT"},{"content":"The object that the <xref href=\"System.Windows.VisualStateGroup.CurrentStateChanging\"></xref> event occurred on.","nodes":[{"pos":[0,112],"content":"The object that the <ph id=\"ph1\">&lt;xref href=\"System.Windows.VisualStateGroup.CurrentStateChanging\"&gt;&lt;/xref&gt;</ph> event occurred on.","source":"The object that the <xref href=\"System.Windows.VisualStateGroup.CurrentStateChanging\"></xref> event occurred on."}],"pos":[31682,31795],"yaml":true},{"content":"The state that the control is transitioning from.","nodes":[{"pos":[0,49],"content":"The state that the control is transitioning from.","nodes":[{"content":"The state that the control is transitioning from.","pos":[0,49]}]}],"pos":[31872,31922],"yaml":true},{"content":"The state that the control is transitioning to.","nodes":[{"pos":[0,47],"content":"The state that the control is transitioning to.","nodes":[{"content":"The state that the control is transitioning to.","pos":[0,47]}]}],"pos":[31999,32047],"yaml":true},{"content":"The control that is transitioning states.","nodes":[{"pos":[0,41],"content":"The control that is transitioning states.","nodes":[{"content":"The control that is transitioning states.","pos":[0,41]}]}],"pos":[32128,32170],"yaml":true},{"content":"The root element that contains the <xref href=\"System.Windows.VisualStateManager\"></xref>.","nodes":[{"pos":[0,90],"content":"The root element that contains the <ph id=\"ph1\">&lt;xref href=\"System.Windows.VisualStateManager\"&gt;&lt;/xref&gt;</ph>.","source":"The root element that contains the <xref href=\"System.Windows.VisualStateManager\"></xref>."}],"pos":[32259,32350],"yaml":true},{"content":"<code>stateGroupsRoot</code> is `null`.  \n  \n -or-  \n  \n <code>newState</code> is `null`.","nodes":[{"pos":[0,39],"content":"<ph id=\"ph1\">&lt;code&gt;stateGroupsRoot&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>stateGroupsRoot</code> is `null`."},{"pos":[46,50],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[57,89],"content":"<ph id=\"ph1\">&lt;code&gt;newState&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>newState</code> is `null`."}],"pos":[32538,32634],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.VisualStateGroup.CurrentStateChanging\"></xref> event on the specified <xref href=\"System.Windows.VisualStateGroup\"></xref> object.","nodes":[{"pos":[0,168],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.VisualStateGroup.CurrentStateChanging\"&gt;&lt;/xref&gt;</ph> event on the specified <ph id=\"ph2\">&lt;xref href=\"System.Windows.VisualStateGroup\"&gt;&lt;/xref&gt;</ph> object.","source":"Raises the <xref href=\"System.Windows.VisualStateGroup.CurrentStateChanging\"></xref> event on the specified <xref href=\"System.Windows.VisualStateGroup\"></xref> object."}],"pos":[34339,34508],"yaml":true},{"content":"When the <xref:System.Windows.VisualStateGroup> is set on the <xref:System.Windows.Controls.ControlTemplate> of a control, the `control` parameter is set to the control that owns <xref:System.Windows.Controls.ControlTemplate>.  When the <xref:System.Windows.VisualStateGroup> is set on a <xref:System.Windows.FrameworkElement>, `control` is `null` and you should use the `stateGroupsRoot` parameter.","nodes":[{"pos":[0,399],"content":"When the <xref:System.Windows.VisualStateGroup> is set on the <xref:System.Windows.Controls.ControlTemplate> of a control, the `control` parameter is set to the control that owns <xref:System.Windows.Controls.ControlTemplate>.  When the <xref:System.Windows.VisualStateGroup> is set on a <xref:System.Windows.FrameworkElement>, `control` is `null` and you should use the `stateGroupsRoot` parameter.","nodes":[{"content":"When the <ph id=\"ph1\">&lt;xref:System.Windows.VisualStateGroup&gt;</ph> is set on the <ph id=\"ph2\">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> of a control, the <ph id=\"ph3\">`control`</ph> parameter is set to the control that owns <ph id=\"ph4\">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>.","pos":[0,226],"source":"When the <xref:System.Windows.VisualStateGroup> is set on the <xref:System.Windows.Controls.ControlTemplate> of a control, the `control` parameter is set to the control that owns <xref:System.Windows.Controls.ControlTemplate>."},{"content":"When the <ph id=\"ph1\">&lt;xref:System.Windows.VisualStateGroup&gt;</ph> is set on a <ph id=\"ph2\">&lt;xref:System.Windows.FrameworkElement&gt;</ph>, <ph id=\"ph3\">`control`</ph> is <ph id=\"ph4\">`null`</ph> and you should use the <ph id=\"ph5\">`stateGroupsRoot`</ph> parameter.","pos":[228,399],"source":"  When the <xref:System.Windows.VisualStateGroup> is set on a <xref:System.Windows.FrameworkElement>, `control` is `null` and you should use the `stateGroupsRoot` parameter."}]}],"pos":[34519,34919],"yaml":true,"extradata":"MT"},{"content":"The object that the <xref href=\"System.Windows.VisualStateGroup.CurrentStateChanging\"></xref> event occurred on.","nodes":[{"pos":[0,112],"content":"The object that the <ph id=\"ph1\">&lt;xref href=\"System.Windows.VisualStateGroup.CurrentStateChanging\"&gt;&lt;/xref&gt;</ph> event occurred on.","source":"The object that the <xref href=\"System.Windows.VisualStateGroup.CurrentStateChanging\"></xref> event occurred on."}],"pos":[35293,35406],"yaml":true},{"content":"The state that the control is transitioning from.","nodes":[{"pos":[0,49],"content":"The state that the control is transitioning from.","nodes":[{"content":"The state that the control is transitioning from.","pos":[0,49]}]}],"pos":[35483,35533],"yaml":true},{"content":"The state that the control is transitioning to.","nodes":[{"pos":[0,47],"content":"The state that the control is transitioning to.","nodes":[{"content":"The state that the control is transitioning to.","pos":[0,47]}]}],"pos":[35610,35658],"yaml":true},{"content":"The control that is transitioning states.","nodes":[{"pos":[0,41],"content":"The control that is transitioning states.","nodes":[{"content":"The control that is transitioning states.","pos":[0,41]}]}],"pos":[35739,35781],"yaml":true},{"content":"The root element that contains the <xref href=\"System.Windows.VisualStateManager\"></xref>.","nodes":[{"pos":[0,90],"content":"The root element that contains the <ph id=\"ph1\">&lt;xref href=\"System.Windows.VisualStateManager\"&gt;&lt;/xref&gt;</ph>.","source":"The root element that contains the <xref href=\"System.Windows.VisualStateManager\"></xref>."}],"pos":[35870,35961],"yaml":true},{"content":"<code>stateGroupsRoot</code> is `null`.  \n  \n -or-  \n  \n <code>newState</code> is `null`.","nodes":[{"pos":[0,39],"content":"<ph id=\"ph1\">&lt;code&gt;stateGroupsRoot&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>stateGroupsRoot</code> is `null`."},{"pos":[46,50],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[57,89],"content":"<ph id=\"ph1\">&lt;code&gt;newState&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>newState</code> is `null`."}],"pos":[36150,36246],"yaml":true},{"content":"Sets the <xref href=\"System.Windows.VisualStateManager.CustomVisualStateManager\"></xref> attached property.","nodes":[{"pos":[0,107],"content":"Sets the <ph id=\"ph1\">&lt;xref href=\"System.Windows.VisualStateManager.CustomVisualStateManager\"&gt;&lt;/xref&gt;</ph> attached property.","source":"Sets the <xref href=\"System.Windows.VisualStateManager.CustomVisualStateManager\"></xref> attached property."}],"pos":[37585,37693],"yaml":true},{"content":"The object to set the property on.","nodes":[{"pos":[0,34],"content":"The object to set the property on.","nodes":[{"content":"The object to set the property on.","pos":[0,34]}]}],"pos":[37936,37971],"yaml":true},{"content":"The visual state manager that transitions between the states of a control.","nodes":[{"pos":[0,74],"content":"The visual state manager that transitions between the states of a control.","nodes":[{"content":"The visual state manager that transitions between the states of a control.","pos":[0,74]}]}],"pos":[38052,38127],"yaml":true},{"content":"Identifies the <xref href=\"System.Windows.VisualStateManager.VisualStateGroups\"></xref> dependency property.","nodes":[{"pos":[0,108],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.VisualStateManager.VisualStateGroups\"&gt;&lt;/xref&gt;</ph> dependency property.","source":"Identifies the <xref href=\"System.Windows.VisualStateManager.VisualStateGroups\"></xref> dependency property."}],"pos":[39230,39339],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.VisualStateManager\n  commentId: T:System.Windows.VisualStateManager\n  id: VisualStateManager\n  children:\n  - System.Windows.VisualStateManager.#ctor\n  - System.Windows.VisualStateManager.CustomVisualStateManagerProperty\n  - System.Windows.VisualStateManager.GetCustomVisualStateManager(System.Windows.FrameworkElement)\n  - System.Windows.VisualStateManager.GetVisualStateGroups(System.Windows.FrameworkElement)\n  - System.Windows.VisualStateManager.GoToElementState(System.Windows.FrameworkElement,System.String,System.Boolean)\n  - System.Windows.VisualStateManager.GoToState(System.Windows.FrameworkElement,System.String,System.Boolean)\n  - System.Windows.VisualStateManager.GoToStateCore(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)\n  - System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)\n  - System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)\n  - System.Windows.VisualStateManager.SetCustomVisualStateManager(System.Windows.FrameworkElement,System.Windows.VisualStateManager)\n  - System.Windows.VisualStateManager.VisualStateGroupsProperty\n  langs:\n  - csharp\n  name: VisualStateManager\n  nameWithType: VisualStateManager\n  fullName: System.Windows.VisualStateManager\n  type: Class\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Manages states and the logic for transitioning between states for controls.\n  remarks: \"The <xref:System.Windows.VisualStateManager> enables you to specify states for a control, the appearance of a control when it is in a certain state, and when a control changes states. For example, a <xref:System.Windows.Controls.Button> might have a slightly different appearance when it is pressed than when it is not pressed. Two states that the <xref:System.Windows.Controls.Button> defines correspond to when it is pressed (`\\\"Pressed\\\"`) and when it is not (`\\\"Normal\\\"`). The appearance of a control when it is in a state is defined by a <xref:System.Windows.VisualState>. A <xref:System.Windows.VisualState> contains a collection of <xref:System.Windows.Media.Animation.Storyboard> objects that specify how the control's appearance changes when the control is in that state. You add visual states to a control by setting the `VisualStateManager.VisualStateGroups` attached property on the control. Each <xref:System.Windows.VisualStateGroup> contains a collection of <xref:System.Windows.VisualState> objects that are mutually exclusive. That is, the control is always in exactly one state of in each <xref:System.Windows.VisualStateGroup>.  \\n  \\n The <xref:System.Windows.VisualStateManager> also enables you to specify when a control enters a specific state. The method that you should call to change states depends on your scenario. If you create a control that uses the <xref:System.Windows.VisualStateManager> in its <xref:System.Windows.Controls.ControlTemplate>, call the <xref:System.Windows.VisualStateManager.GoToState%2A> method. For more information about how to create controls that use the <xref:System.Windows.VisualStateManager>, see [Creating a Control That Has a Customizable Appearance](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md). If you use the <xref:System.Windows.VisualStateManager> outside of a <xref:System.Windows.Controls.ControlTemplate> (for example, if you use a <xref:System.Windows.VisualStateManager> in a <xref:System.Windows.Controls.UserControl> or in a single element), call the <xref:System.Windows.VisualStateManager.GoToElementState%2A> method. In either case, the <xref:System.Windows.VisualStateManager> performs the logic that is required to appropriately start and stop the storyboards that are associated with the involved state. For example, suppose that a control defines the states, `State1` and `State2`, each of which has a storyboard associated with it. If the control is in `State1` and you pass `State2` to <xref:System.Windows.VisualStateManager.GoToState%2A> or <xref:System.Windows.VisualStateManager.GoToElementState%2A>, the <xref:System.Windows.VisualStateManager> starts the storyboard in `State2` and stops the storyboard in `State1`.  \\n  \\n Controls that are included with [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] use the <xref:System.Windows.VisualStateManager> to change visual states. When you create a <xref:System.Windows.Controls.ControlTemplate> for a control that is included with [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], you can add <xref:System.Windows.VisualState> objects to the control's <xref:System.Windows.Controls.ControlTemplate> to specify the control's appearance in a certain state. To find the names of the visual states for the controls that are included with [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], see [Control Styles and Templates](~/docs/framework/wpf/controls/control-styles-and-templates.md). The control's logic handles transitioning between states, so you do not need to do anything other than define the <xref:System.Windows.VisualState> objects in the new <xref:System.Windows.Controls.ControlTemplate>. For more information about how to create control templates for existing controls, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  \\n  \\n If you want to implement your own logic for transitioning between states, you must inherit from <xref:System.Windows.VisualStateManager>, override the <xref:System.Windows.VisualStateManager.GoToStateCore%2A> method, and set the <xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A?displayProperty=fullName> attached property on the control that uses the custom logic.\"\n  example:\n  - \"The following example creates a <xref:System.Windows.Shapes.Rectangle> and adds a <xref:System.Windows.VisualStateGroup> named `CommonStates` to the `VisualStateManager.VisualStatesGroups` attached property. The example defines the `MouseOver` and `Normal`<xref:System.Windows.VisualState> objects in the `CommonStates`<xref:System.Windows.VisualStateGroup>. When the user moves the mouse pointer over the <xref:System.Windows.Shapes.Rectangle>, it changes from red to green over one half second. When the user moves the mouse away from the rectangle, the <xref:System.Windows.Controls.Grid> immediately changes back to red. Note that the `Normal` state does not define a <xref:System.Windows.Media.Animation.Storyboard>. A <xref:System.Windows.Media.Animation.Storyboard> is not required because when the <xref:System.Windows.Shapes.Rectangle> transitions from the `MouseOver` state to the `Normal` state, the <xref:System.Windows.Media.Animation.Storyboard> for `MouseOver` is stopped and the <xref:System.Windows.Media.SolidColorBrush.Color%2A> property for the <xref:System.Windows.Media.SolidColorBrush> returns to red.  \\n  \\n [!code-xml[VSMCustomControl#VSMNoTemplate](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmcustomcontrol/csharp/window1.xaml#vsmnotemplate)]  \\n  \\n The following example shows the event handler that is defined in the previous example and calls the <xref:System.Windows.VisualStateManager.GoToElementState%2A> method to transition between states. If the rectangle in the previous example was part of a <xref:System.Windows.Controls.ControlTemplate>, the example would have to call the <xref:System.Windows.VisualStateManager.GoToState%2A> method.  \\n  \\n [!code-csharp[VSMCustomControl#GoToElementState](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmcustomcontrol/csharp/window1.xaml.cs#gotoelementstate)]\\n [!code-vb[VSMCustomControl#GoToElementState](~/samples/snippets/visualbasic/VS_Snippets_Wpf/vsmcustomcontrol/visualbasic/window1.xaml.vb#gotoelementstate)]\"\n  syntax:\n    content: 'public class VisualStateManager : System.Windows.DependencyObject'\n  inheritance:\n  - System.Object\n  - System.Windows.Threading.DispatcherObject\n  - System.Windows.DependencyObject\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)\n  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.DependencyObjectType\n  - System.Windows.DependencyObject.Equals(System.Object)\n  - System.Windows.DependencyObject.GetHashCode\n  - System.Windows.DependencyObject.GetLocalValueEnumerator\n  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.IsSealed\n  - System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)\n  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)\n  - System.Windows.Threading.DispatcherObject.CheckAccess\n  - System.Windows.Threading.DispatcherObject.Dispatcher\n  - System.Windows.Threading.DispatcherObject.VerifyAccess\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/VisualStateManager.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.VisualStateManager.#ctor\n  commentId: M:System.Windows.VisualStateManager.#ctor\n  id: '#ctor'\n  parent: System.Windows.VisualStateManager\n  langs:\n  - csharp\n  name: VisualStateManager()\n  nameWithType: VisualStateManager.VisualStateManager()\n  fullName: VisualStateManager.VisualStateManager()\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Initializes a new instance of the <xref href=\"System.Windows.VisualStateManager\"></xref> class.\n  syntax:\n    content: public VisualStateManager ();\n    parameters: []\n  overload: System.Windows.VisualStateManager.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/VisualStateManager.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.VisualStateManager.CustomVisualStateManagerProperty\n  commentId: F:System.Windows.VisualStateManager.CustomVisualStateManagerProperty\n  id: CustomVisualStateManagerProperty\n  parent: System.Windows.VisualStateManager\n  langs:\n  - csharp\n  name: CustomVisualStateManagerProperty\n  nameWithType: VisualStateManager.CustomVisualStateManagerProperty\n  fullName: VisualStateManager.CustomVisualStateManagerProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.VisualStateManager.CustomVisualStateManager\"></xref> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty CustomVisualStateManagerProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/VisualStateManager.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.VisualStateManager.GetCustomVisualStateManager(System.Windows.FrameworkElement)\n  commentId: M:System.Windows.VisualStateManager.GetCustomVisualStateManager(System.Windows.FrameworkElement)\n  id: GetCustomVisualStateManager(System.Windows.FrameworkElement)\n  parent: System.Windows.VisualStateManager\n  langs:\n  - csharp\n  name: GetCustomVisualStateManager(FrameworkElement)\n  nameWithType: VisualStateManager.GetCustomVisualStateManager(FrameworkElement)\n  fullName: VisualStateManager.GetCustomVisualStateManager(FrameworkElement)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets the <xref href=\"System.Windows.VisualStateManager.CustomVisualStateManager\"></xref> attached property.\n  syntax:\n    content: public static System.Windows.VisualStateManager GetCustomVisualStateManager (System.Windows.FrameworkElement obj);\n    parameters:\n    - id: obj\n      type: System.Windows.FrameworkElement\n      description: The element to get the <xref href=\"System.Windows.VisualStateManager.CustomVisualStateManager\"></xref> attached property from.\n    return:\n      type: System.Windows.VisualStateManager\n      description: The visual state manager that transitions between the states of a control.\n  overload: System.Windows.VisualStateManager.GetCustomVisualStateManager*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/VisualStateManager.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.VisualStateManager.GetVisualStateGroups(System.Windows.FrameworkElement)\n  commentId: M:System.Windows.VisualStateManager.GetVisualStateGroups(System.Windows.FrameworkElement)\n  id: GetVisualStateGroups(System.Windows.FrameworkElement)\n  parent: System.Windows.VisualStateManager\n  langs:\n  - csharp\n  name: GetVisualStateGroups(FrameworkElement)\n  nameWithType: VisualStateManager.GetVisualStateGroups(FrameworkElement)\n  fullName: VisualStateManager.GetVisualStateGroups(FrameworkElement)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets the <xref href=\"System.Windows.VisualStateManager.VisualStateGroups\"></xref> attached property.\n  syntax:\n    content: public static System.Collections.IList GetVisualStateGroups (System.Windows.FrameworkElement obj);\n    parameters:\n    - id: obj\n      type: System.Windows.FrameworkElement\n      description: The element to get the <xref href=\"System.Windows.VisualStateManager.VisualStateGroups\"></xref> attached property from.\n    return:\n      type: System.Collections.IList\n      description: The collection of <xref href=\"System.Windows.VisualStateGroup\"></xref> objects that is associated with the specified object.\n  overload: System.Windows.VisualStateManager.GetVisualStateGroups*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/VisualStateManager.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.VisualStateManager.GoToElementState(System.Windows.FrameworkElement,System.String,System.Boolean)\n  commentId: M:System.Windows.VisualStateManager.GoToElementState(System.Windows.FrameworkElement,System.String,System.Boolean)\n  id: GoToElementState(System.Windows.FrameworkElement,System.String,System.Boolean)\n  parent: System.Windows.VisualStateManager\n  langs:\n  - csharp\n  name: GoToElementState(FrameworkElement, String, Boolean)\n  nameWithType: VisualStateManager.GoToElementState(FrameworkElement, String, Boolean)\n  fullName: VisualStateManager.GoToElementState(FrameworkElement, String, Boolean)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Transitions the element between two states. Use this method to transition states that are defined by an application, rather than defined by a control.\n  remarks: Call the <xref:System.Windows.VisualStateManager.GoToElementState%2A> method to change states on an element outside of a <xref:System.Windows.Controls.ControlTemplate> (for example, if you use a <xref:System.Windows.VisualStateManager> in a <xref:System.Windows.DataTemplate> or <xref:System.Windows.Window>). Call the <xref:System.Windows.VisualStateManager.GoToState%2A> method if you are changing states in a control that uses the <xref:System.Windows.VisualStateManager> in its <xref:System.Windows.Controls.ControlTemplate>.\n  example:\n  - \"The following example creates an application that prompts the user to guess a number between 1 and 100.  When the user enters a number, the application indicates whether the guess is too high, too low, or correct.  The following [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] creates the user interface for the application and defines 4 states: `TooLow`, `TooHigh`, `Correct`, and `Guessing`. When the application begins, it is in the `Guessing` state. .  \\n  \\n [!code-xml[VSMGoToElementState#GoToElementStateXaml](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmgotoelementstate/csharp/mainwindow.xaml#gotoelementstatexaml)]  \\n  \\n The following code shows the logic of the application.  When the user enters a number and clicks the button, the application calls <xref:System.Windows.VisualStateManager.GoToElementState%2A> to transition to `TooHigh`, `TooLow`, or `Correct` to provide feedback to the user about the guess.  To try this example, call the `GenerateNumber` method when the application begins.  \\n  \\n [!code-csharp[VSMGoToElementState#GoToElementStateCode](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmgotoelementstate/csharp/mainwindow.xaml.cs#gotoelementstatecode)]\\n [!code-vb[VSMGoToElementState#GoToElementStateCode](~/samples/snippets/visualbasic/VS_Snippets_Wpf/vsmgotoelementstate/visualbasic/mainwindow.xaml.vb#gotoelementstatecode)]\"\n  syntax:\n    content: public static bool GoToElementState (System.Windows.FrameworkElement stateGroupsRoot, string stateName, bool useTransitions);\n    parameters:\n    - id: stateGroupsRoot\n      type: System.Windows.FrameworkElement\n      description: The root element that contains the <xref href=\"System.Windows.VisualStateManager\"></xref>.\n    - id: stateName\n      type: System.String\n      description: The state to transition to.\n    - id: useTransitions\n      type: System.Boolean\n      description: '`true` to use a <xref href=\"System.Windows.VisualTransition\"></xref> object to transition between states; otherwise, `false`.'\n    return:\n      type: System.Boolean\n      description: '`true` if the control successfully transitioned to the new state; otherwise, `false`.'\n  overload: System.Windows.VisualStateManager.GoToElementState*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>stateGroupsRoot</code> is `null`.  \\n  \\n -or-  \\n  \\n <code>stateName</code> is `null`.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/VisualStateManager.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.VisualStateManager.GoToState(System.Windows.FrameworkElement,System.String,System.Boolean)\n  commentId: M:System.Windows.VisualStateManager.GoToState(System.Windows.FrameworkElement,System.String,System.Boolean)\n  id: GoToState(System.Windows.FrameworkElement,System.String,System.Boolean)\n  parent: System.Windows.VisualStateManager\n  langs:\n  - csharp\n  name: GoToState(FrameworkElement, String, Boolean)\n  nameWithType: VisualStateManager.GoToState(FrameworkElement, String, Boolean)\n  fullName: VisualStateManager.GoToState(FrameworkElement, String, Boolean)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Transitions the control between two states. Use this method to transition states on control that has a <xref href=\"System.Windows.Controls.ControlTemplate\"></xref>.\n  remarks: Call the <xref:System.Windows.VisualStateManager.GoToState%2A> method if you are changing states in a control that uses the <xref:System.Windows.VisualStateManager> in its <xref:System.Windows.Controls.ControlTemplate>. Call the <xref:System.Windows.VisualStateManager.GoToElementState%2A> method to change states on an element outside of a <xref:System.Windows.Controls.ControlTemplate> (for example, if you use a <xref:System.Windows.VisualStateManager> in a <xref:System.Windows.Controls.UserControl> or in a single element).\n  example:\n  - \"The following example demonstrates a control that uses the <xref:System.Windows.VisualStateManager.GoToState%2A> method to transition between states. For the entire example, see [Creating a Control That Has a Customizable Appearance](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md).  \\n  \\n [!code-csharp[VSMCustomControl#UpdateStates](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmcustomcontrol/csharp/numericupdown.cs#updatestates)]\\n [!code-vb[VSMCustomControl#UpdateStates](~/samples/snippets/visualbasic/VS_Snippets_Wpf/vsmcustomcontrol/visualbasic/numericupdown.vb#updatestates)]\"\n  syntax:\n    content: public static bool GoToState (System.Windows.FrameworkElement control, string stateName, bool useTransitions);\n    parameters:\n    - id: control\n      type: System.Windows.FrameworkElement\n      description: The control to transition between states.\n    - id: stateName\n      type: System.String\n      description: The state to transition to.\n    - id: useTransitions\n      type: System.Boolean\n      description: '`true` to use a <xref href=\"System.Windows.VisualTransition\"></xref> object to transition between states; otherwise, `false`.'\n    return:\n      type: System.Boolean\n      description: '`true` if the control successfully transitioned to the new state; otherwise, `false`.'\n  overload: System.Windows.VisualStateManager.GoToState*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>control</code> is `null`.  \\n  \\n -or-  \\n  \\n <code>stateName</code> is `null`.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/VisualStateManager.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.VisualStateManager.GoToStateCore(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)\n  commentId: M:System.Windows.VisualStateManager.GoToStateCore(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)\n  id: GoToStateCore(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)\n  parent: System.Windows.VisualStateManager\n  langs:\n  - csharp\n  name: GoToStateCore(FrameworkElement, FrameworkElement, String, VisualStateGroup, VisualState, Boolean)\n  nameWithType: VisualStateManager.GoToStateCore(FrameworkElement, FrameworkElement, String, VisualStateGroup, VisualState, Boolean)\n  fullName: VisualStateManager.GoToStateCore(FrameworkElement, FrameworkElement, String, VisualStateGroup, VisualState, Boolean)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Transitions a control between states.\n  remarks: \"The <xref:System.Windows.VisualStateManager.GoToStateCore%2A> method performs the logic necessary to appropriately start and stop the storyboards that are associated with a transition. When a control calls <xref:System.Windows.VisualStateManager.GoToState%2A> to change its state, the <xref:System.Windows.VisualStateManager> does the following:  \\n  \\n-   First, if the <xref:System.Windows.VisualState> that the control is transitioning to has a <xref:System.Windows.Media.Animation.Storyboard>, the storyboard begins. Then, if the <xref:System.Windows.VisualState> that the control is coming from has a <xref:System.Windows.Media.Animation.Storyboard>, the storyboard ends.  \\n  \\n-   If the control is already in the `stateName` state, <xref:System.Windows.VisualStateManager.GoToState%2A> takes no action and returns `true`.  \\n  \\n-   If `stateName` does not exist in the <xref:System.Windows.Controls.ControlTemplate> of `control`, <xref:System.Windows.VisualStateManager.GoToState%2A> takes no action and returns `false`.  \\n  \\n You can implement your own <xref:System.Windows.VisualStateManager> to provide different logic for transitioning between states. For example, you can change the logic described previously, or you can provide logic to transition between custom animation types.  To implement a <xref:System.Windows.VisualStateManager>, create a class that inherits from <xref:System.Windows.VisualStateManager> and override the <xref:System.Windows.VisualStateManager.GoToStateCore%2A> method. To use the custom class, set the <xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A> property to an object of your custom type.\"\n  syntax:\n    content: protected virtual bool GoToStateCore (System.Windows.FrameworkElement control, System.Windows.FrameworkElement stateGroupsRoot, string stateName, System.Windows.VisualStateGroup group, System.Windows.VisualState state, bool useTransitions);\n    parameters:\n    - id: control\n      type: System.Windows.FrameworkElement\n      description: The control to transition between states.\n    - id: stateGroupsRoot\n      type: System.Windows.FrameworkElement\n      description: The root element that contains the <xref href=\"System.Windows.VisualStateManager\"></xref>.\n    - id: stateName\n      type: System.String\n      description: The name of the state to transition to.\n    - id: group\n      type: System.Windows.VisualStateGroup\n      description: The <xref href=\"System.Windows.VisualStateGroup\"></xref> that the state belongs to.\n    - id: state\n      type: System.Windows.VisualState\n      description: The representation of the state to transition to.\n    - id: useTransitions\n      type: System.Boolean\n      description: '`true` to use a <xref href=\"System.Windows.VisualTransition\"></xref> object to transition between states; otherwise, `false`.'\n    return:\n      type: System.Boolean\n      description: '`true` if the control successfully transitioned to the new state; otherwise, `false`.'\n  overload: System.Windows.VisualStateManager.GoToStateCore*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/VisualStateManager.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)\n  commentId: M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)\n  id: RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)\n  parent: System.Windows.VisualStateManager\n  langs:\n  - csharp\n  name: RaiseCurrentStateChanged(VisualStateGroup, VisualState, VisualState, FrameworkElement, FrameworkElement)\n  nameWithType: VisualStateManager.RaiseCurrentStateChanged(VisualStateGroup, VisualState, VisualState, FrameworkElement, FrameworkElement)\n  fullName: VisualStateManager.RaiseCurrentStateChanged(VisualStateGroup, VisualState, VisualState, FrameworkElement, FrameworkElement)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Raises the <xref href=\"System.Windows.VisualStateGroup.CurrentStateChanging\"></xref> event on the specified <xref href=\"System.Windows.VisualStateGroup\"></xref> object.\n  remarks: When the <xref:System.Windows.VisualStateGroup> is set on the <xref:System.Windows.Controls.ControlTemplate> of a control, the `control` parameter is set to the control that owns <xref:System.Windows.Controls.ControlTemplate>.  When the <xref:System.Windows.VisualStateGroup> is set on a <xref:System.Windows.FrameworkElement>, `control` is `null` and you should use the `stateGroupsRoot` parameter.\n  syntax:\n    content: protected void RaiseCurrentStateChanged (System.Windows.VisualStateGroup stateGroup, System.Windows.VisualState oldState, System.Windows.VisualState newState, System.Windows.FrameworkElement control, System.Windows.FrameworkElement stateGroupsRoot);\n    parameters:\n    - id: stateGroup\n      type: System.Windows.VisualStateGroup\n      description: The object that the <xref href=\"System.Windows.VisualStateGroup.CurrentStateChanging\"></xref> event occurred on.\n    - id: oldState\n      type: System.Windows.VisualState\n      description: The state that the control is transitioning from.\n    - id: newState\n      type: System.Windows.VisualState\n      description: The state that the control is transitioning to.\n    - id: control\n      type: System.Windows.FrameworkElement\n      description: The control that is transitioning states.\n    - id: stateGroupsRoot\n      type: System.Windows.FrameworkElement\n      description: The root element that contains the <xref href=\"System.Windows.VisualStateManager\"></xref>.\n  overload: System.Windows.VisualStateManager.RaiseCurrentStateChanged*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>stateGroupsRoot</code> is `null`.  \\n  \\n -or-  \\n  \\n <code>newState</code> is `null`.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/VisualStateManager.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)\n  commentId: M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)\n  id: RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)\n  parent: System.Windows.VisualStateManager\n  langs:\n  - csharp\n  name: RaiseCurrentStateChanging(VisualStateGroup, VisualState, VisualState, FrameworkElement, FrameworkElement)\n  nameWithType: VisualStateManager.RaiseCurrentStateChanging(VisualStateGroup, VisualState, VisualState, FrameworkElement, FrameworkElement)\n  fullName: VisualStateManager.RaiseCurrentStateChanging(VisualStateGroup, VisualState, VisualState, FrameworkElement, FrameworkElement)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Raises the <xref href=\"System.Windows.VisualStateGroup.CurrentStateChanging\"></xref> event on the specified <xref href=\"System.Windows.VisualStateGroup\"></xref> object.\n  remarks: When the <xref:System.Windows.VisualStateGroup> is set on the <xref:System.Windows.Controls.ControlTemplate> of a control, the `control` parameter is set to the control that owns <xref:System.Windows.Controls.ControlTemplate>.  When the <xref:System.Windows.VisualStateGroup> is set on a <xref:System.Windows.FrameworkElement>, `control` is `null` and you should use the `stateGroupsRoot` parameter.\n  syntax:\n    content: protected void RaiseCurrentStateChanging (System.Windows.VisualStateGroup stateGroup, System.Windows.VisualState oldState, System.Windows.VisualState newState, System.Windows.FrameworkElement control, System.Windows.FrameworkElement stateGroupsRoot);\n    parameters:\n    - id: stateGroup\n      type: System.Windows.VisualStateGroup\n      description: The object that the <xref href=\"System.Windows.VisualStateGroup.CurrentStateChanging\"></xref> event occurred on.\n    - id: oldState\n      type: System.Windows.VisualState\n      description: The state that the control is transitioning from.\n    - id: newState\n      type: System.Windows.VisualState\n      description: The state that the control is transitioning to.\n    - id: control\n      type: System.Windows.FrameworkElement\n      description: The control that is transitioning states.\n    - id: stateGroupsRoot\n      type: System.Windows.FrameworkElement\n      description: The root element that contains the <xref href=\"System.Windows.VisualStateManager\"></xref>.\n  overload: System.Windows.VisualStateManager.RaiseCurrentStateChanging*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>stateGroupsRoot</code> is `null`.  \\n  \\n -or-  \\n  \\n <code>newState</code> is `null`.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/VisualStateManager.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.VisualStateManager.SetCustomVisualStateManager(System.Windows.FrameworkElement,System.Windows.VisualStateManager)\n  commentId: M:System.Windows.VisualStateManager.SetCustomVisualStateManager(System.Windows.FrameworkElement,System.Windows.VisualStateManager)\n  id: SetCustomVisualStateManager(System.Windows.FrameworkElement,System.Windows.VisualStateManager)\n  parent: System.Windows.VisualStateManager\n  langs:\n  - csharp\n  name: SetCustomVisualStateManager(FrameworkElement, VisualStateManager)\n  nameWithType: VisualStateManager.SetCustomVisualStateManager(FrameworkElement, VisualStateManager)\n  fullName: VisualStateManager.SetCustomVisualStateManager(FrameworkElement, VisualStateManager)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Sets the <xref href=\"System.Windows.VisualStateManager.CustomVisualStateManager\"></xref> attached property.\n  syntax:\n    content: public static void SetCustomVisualStateManager (System.Windows.FrameworkElement obj, System.Windows.VisualStateManager value);\n    parameters:\n    - id: obj\n      type: System.Windows.FrameworkElement\n      description: The object to set the property on.\n    - id: value\n      type: System.Windows.VisualStateManager\n      description: The visual state manager that transitions between the states of a control.\n  overload: System.Windows.VisualStateManager.SetCustomVisualStateManager*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/VisualStateManager.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.VisualStateManager.VisualStateGroupsProperty\n  commentId: F:System.Windows.VisualStateManager.VisualStateGroupsProperty\n  id: VisualStateGroupsProperty\n  parent: System.Windows.VisualStateManager\n  langs:\n  - csharp\n  name: VisualStateGroupsProperty\n  nameWithType: VisualStateManager.VisualStateGroupsProperty\n  fullName: VisualStateManager.VisualStateGroupsProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Identifies the <xref href=\"System.Windows.VisualStateManager.VisualStateGroups\"></xref> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty VisualStateGroupsProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/VisualStateManager.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Windows.DependencyObject\n  parent: System.Windows\n  isExternal: false\n  name: DependencyObject\n  nameWithType: DependencyObject\n  fullName: System.Windows.DependencyObject\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Windows.VisualStateManager.#ctor\n  parent: System.Windows.VisualStateManager\n  isExternal: false\n  name: VisualStateManager()\n  nameWithType: VisualStateManager.VisualStateManager()\n  fullName: VisualStateManager.VisualStateManager()\n- uid: System.Windows.VisualStateManager.CustomVisualStateManagerProperty\n  parent: System.Windows.VisualStateManager\n  isExternal: false\n  name: CustomVisualStateManagerProperty\n  nameWithType: VisualStateManager.CustomVisualStateManagerProperty\n  fullName: VisualStateManager.CustomVisualStateManagerProperty\n- uid: System.Windows.DependencyProperty\n  parent: System.Windows\n  isExternal: false\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Windows.DependencyProperty\n- uid: System.Windows.VisualStateManager.GetCustomVisualStateManager(System.Windows.FrameworkElement)\n  parent: System.Windows.VisualStateManager\n  isExternal: false\n  name: GetCustomVisualStateManager(FrameworkElement)\n  nameWithType: VisualStateManager.GetCustomVisualStateManager(FrameworkElement)\n  fullName: VisualStateManager.GetCustomVisualStateManager(FrameworkElement)\n- uid: System.Windows.VisualStateManager\n  parent: System.Windows\n  isExternal: false\n  name: VisualStateManager\n  nameWithType: VisualStateManager\n  fullName: System.Windows.VisualStateManager\n- uid: System.Windows.FrameworkElement\n  parent: System.Windows\n  isExternal: false\n  name: FrameworkElement\n  nameWithType: FrameworkElement\n  fullName: System.Windows.FrameworkElement\n- uid: System.Windows.VisualStateManager.GetVisualStateGroups(System.Windows.FrameworkElement)\n  parent: System.Windows.VisualStateManager\n  isExternal: false\n  name: GetVisualStateGroups(FrameworkElement)\n  nameWithType: VisualStateManager.GetVisualStateGroups(FrameworkElement)\n  fullName: VisualStateManager.GetVisualStateGroups(FrameworkElement)\n- uid: System.Collections.IList\n  parent: System.Collections\n  isExternal: false\n  name: IList\n  nameWithType: IList\n  fullName: System.Collections.IList\n- uid: System.Windows.VisualStateManager.GoToElementState(System.Windows.FrameworkElement,System.String,System.Boolean)\n  parent: System.Windows.VisualStateManager\n  isExternal: false\n  name: GoToElementState(FrameworkElement, String, Boolean)\n  nameWithType: VisualStateManager.GoToElementState(FrameworkElement, String, Boolean)\n  fullName: VisualStateManager.GoToElementState(FrameworkElement, String, Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.VisualStateManager.GoToState(System.Windows.FrameworkElement,System.String,System.Boolean)\n  parent: System.Windows.VisualStateManager\n  isExternal: false\n  name: GoToState(FrameworkElement, String, Boolean)\n  nameWithType: VisualStateManager.GoToState(FrameworkElement, String, Boolean)\n  fullName: VisualStateManager.GoToState(FrameworkElement, String, Boolean)\n- uid: System.Windows.VisualStateManager.GoToStateCore(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)\n  parent: System.Windows.VisualStateManager\n  isExternal: false\n  name: GoToStateCore(FrameworkElement, FrameworkElement, String, VisualStateGroup, VisualState, Boolean)\n  nameWithType: VisualStateManager.GoToStateCore(FrameworkElement, FrameworkElement, String, VisualStateGroup, VisualState, Boolean)\n  fullName: VisualStateManager.GoToStateCore(FrameworkElement, FrameworkElement, String, VisualStateGroup, VisualState, Boolean)\n- uid: System.Windows.VisualStateGroup\n  parent: System.Windows\n  isExternal: false\n  name: VisualStateGroup\n  nameWithType: VisualStateGroup\n  fullName: System.Windows.VisualStateGroup\n- uid: System.Windows.VisualState\n  parent: System.Windows\n  isExternal: false\n  name: VisualState\n  nameWithType: VisualState\n  fullName: System.Windows.VisualState\n- uid: System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)\n  parent: System.Windows.VisualStateManager\n  isExternal: false\n  name: RaiseCurrentStateChanged(VisualStateGroup, VisualState, VisualState, FrameworkElement, FrameworkElement)\n  nameWithType: VisualStateManager.RaiseCurrentStateChanged(VisualStateGroup, VisualState, VisualState, FrameworkElement, FrameworkElement)\n  fullName: VisualStateManager.RaiseCurrentStateChanged(VisualStateGroup, VisualState, VisualState, FrameworkElement, FrameworkElement)\n- uid: System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)\n  parent: System.Windows.VisualStateManager\n  isExternal: false\n  name: RaiseCurrentStateChanging(VisualStateGroup, VisualState, VisualState, FrameworkElement, FrameworkElement)\n  nameWithType: VisualStateManager.RaiseCurrentStateChanging(VisualStateGroup, VisualState, VisualState, FrameworkElement, FrameworkElement)\n  fullName: VisualStateManager.RaiseCurrentStateChanging(VisualStateGroup, VisualState, VisualState, FrameworkElement, FrameworkElement)\n- uid: System.Windows.VisualStateManager.SetCustomVisualStateManager(System.Windows.FrameworkElement,System.Windows.VisualStateManager)\n  parent: System.Windows.VisualStateManager\n  isExternal: false\n  name: SetCustomVisualStateManager(FrameworkElement, VisualStateManager)\n  nameWithType: VisualStateManager.SetCustomVisualStateManager(FrameworkElement, VisualStateManager)\n  fullName: VisualStateManager.SetCustomVisualStateManager(FrameworkElement, VisualStateManager)\n- uid: System.Windows.VisualStateManager.VisualStateGroupsProperty\n  parent: System.Windows.VisualStateManager\n  isExternal: false\n  name: VisualStateGroupsProperty\n  nameWithType: VisualStateManager.VisualStateGroupsProperty\n  fullName: VisualStateManager.VisualStateGroupsProperty\n- uid: System.Windows.VisualStateManager.#ctor*\n  parent: System.Windows.VisualStateManager\n  isExternal: false\n  name: VisualStateManager\n  nameWithType: VisualStateManager.VisualStateManager\n  fullName: VisualStateManager.VisualStateManager\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/VisualStateManager.xml\n- uid: System.Windows.VisualStateManager.GetCustomVisualStateManager*\n  parent: System.Windows.VisualStateManager\n  isExternal: false\n  name: GetCustomVisualStateManager\n  nameWithType: VisualStateManager.GetCustomVisualStateManager\n  fullName: VisualStateManager.GetCustomVisualStateManager\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/VisualStateManager.xml\n- uid: System.Windows.VisualStateManager.GetVisualStateGroups*\n  parent: System.Windows.VisualStateManager\n  isExternal: false\n  name: GetVisualStateGroups\n  nameWithType: VisualStateManager.GetVisualStateGroups\n  fullName: VisualStateManager.GetVisualStateGroups\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/VisualStateManager.xml\n- uid: System.Windows.VisualStateManager.GoToElementState*\n  parent: System.Windows.VisualStateManager\n  isExternal: false\n  name: GoToElementState\n  nameWithType: VisualStateManager.GoToElementState\n  fullName: VisualStateManager.GoToElementState\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/VisualStateManager.xml\n- uid: System.Windows.VisualStateManager.GoToState*\n  parent: System.Windows.VisualStateManager\n  isExternal: false\n  name: GoToState\n  nameWithType: VisualStateManager.GoToState\n  fullName: VisualStateManager.GoToState\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/VisualStateManager.xml\n- uid: System.Windows.VisualStateManager.GoToStateCore*\n  parent: System.Windows.VisualStateManager\n  isExternal: false\n  name: GoToStateCore\n  nameWithType: VisualStateManager.GoToStateCore\n  fullName: VisualStateManager.GoToStateCore\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/VisualStateManager.xml\n- uid: System.Windows.VisualStateManager.RaiseCurrentStateChanged*\n  parent: System.Windows.VisualStateManager\n  isExternal: false\n  name: RaiseCurrentStateChanged\n  nameWithType: VisualStateManager.RaiseCurrentStateChanged\n  fullName: VisualStateManager.RaiseCurrentStateChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/VisualStateManager.xml\n- uid: System.Windows.VisualStateManager.RaiseCurrentStateChanging*\n  parent: System.Windows.VisualStateManager\n  isExternal: false\n  name: RaiseCurrentStateChanging\n  nameWithType: VisualStateManager.RaiseCurrentStateChanging\n  fullName: VisualStateManager.RaiseCurrentStateChanging\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/VisualStateManager.xml\n- uid: System.Windows.VisualStateManager.SetCustomVisualStateManager*\n  parent: System.Windows.VisualStateManager\n  isExternal: false\n  name: SetCustomVisualStateManager\n  nameWithType: VisualStateManager.SetCustomVisualStateManager\n  fullName: VisualStateManager.SetCustomVisualStateManager\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/VisualStateManager.xml\n- uid: System.Windows.DependencyObject.Equals(System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: DependencyObject.Equals(Object)\n  fullName: DependencyObject.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Windows.DependencyObject.GetHashCode\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: DependencyObject.GetHashCode()\n  fullName: DependencyObject.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Windows.Threading.DispatcherObject.CheckAccess\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: CheckAccess()\n  nameWithType: DispatcherObject.CheckAccess()\n  fullName: DispatcherObject.CheckAccess()\n- uid: System.Windows.Threading.DispatcherObject.Dispatcher\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: Dispatcher\n  nameWithType: DispatcherObject.Dispatcher\n  fullName: DispatcherObject.Dispatcher\n- uid: System.Windows.Threading.DispatcherObject.VerifyAccess\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: VerifyAccess()\n  nameWithType: DispatcherObject.VerifyAccess()\n  fullName: DispatcherObject.VerifyAccess()\n- uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ClearValue(DependencyProperty)\n  nameWithType: DependencyObject.ClearValue(DependencyProperty)\n  fullName: DependencyObject.ClearValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ClearValue(DependencyPropertyKey)\n  nameWithType: DependencyObject.ClearValue(DependencyPropertyKey)\n  fullName: DependencyObject.ClearValue(DependencyPropertyKey)\n- uid: System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: CoerceValue(DependencyProperty)\n  nameWithType: DependencyObject.CoerceValue(DependencyProperty)\n  fullName: DependencyObject.CoerceValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.DependencyObjectType\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: DependencyObjectType\n  nameWithType: DependencyObject.DependencyObjectType\n  fullName: DependencyObject.DependencyObjectType\n- uid: System.Windows.DependencyObject.GetLocalValueEnumerator\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: GetLocalValueEnumerator()\n  nameWithType: DependencyObject.GetLocalValueEnumerator()\n  fullName: DependencyObject.GetLocalValueEnumerator()\n- uid: System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: GetValue(DependencyProperty)\n  nameWithType: DependencyObject.GetValue(DependencyProperty)\n  fullName: DependencyObject.GetValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: InvalidateProperty(DependencyProperty)\n  nameWithType: DependencyObject.InvalidateProperty(DependencyProperty)\n  fullName: DependencyObject.InvalidateProperty(DependencyProperty)\n- uid: System.Windows.DependencyObject.IsSealed\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: IsSealed\n  nameWithType: DependencyObject.IsSealed\n  fullName: DependencyObject.IsSealed\n- uid: System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: OnPropertyChanged(DependencyPropertyChangedEventArgs)\n  nameWithType: DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs)\n  fullName: DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs)\n- uid: System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ReadLocalValue(DependencyProperty)\n  nameWithType: DependencyObject.ReadLocalValue(DependencyProperty)\n  fullName: DependencyObject.ReadLocalValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: SetCurrentValue(DependencyProperty, Object)\n  nameWithType: DependencyObject.SetCurrentValue(DependencyProperty, Object)\n  fullName: DependencyObject.SetCurrentValue(DependencyProperty, Object)\n- uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: SetValue(DependencyProperty, Object)\n  nameWithType: DependencyObject.SetValue(DependencyProperty, Object)\n  fullName: DependencyObject.SetValue(DependencyProperty, Object)\n- uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: SetValue(DependencyPropertyKey, Object)\n  nameWithType: DependencyObject.SetValue(DependencyPropertyKey, Object)\n  fullName: DependencyObject.SetValue(DependencyPropertyKey, Object)\n- uid: System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ShouldSerializeProperty(DependencyProperty)\n  nameWithType: DependencyObject.ShouldSerializeProperty(DependencyProperty)\n  fullName: DependencyObject.ShouldSerializeProperty(DependencyProperty)\n"}