### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.SHA384Managed
  commentId: T:System.Security.Cryptography.SHA384Managed
  id: SHA384Managed
  children:
  - System.Security.Cryptography.SHA384Managed.#ctor
  - System.Security.Cryptography.SHA384Managed.Dispose(System.Boolean)
  - System.Security.Cryptography.SHA384Managed.Finalize
  - System.Security.Cryptography.SHA384Managed.HashCore(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.SHA384Managed.HashFinal
  - System.Security.Cryptography.SHA384Managed.Initialize
  langs:
  - csharp
  name: SHA384Managed
  nameWithType: SHA384Managed
  fullName: System.Security.Cryptography.SHA384Managed
  type: Class
  assemblies:
  - mscorlib
  - netstandard
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  summary: Computes the <xref href="System.Security.Cryptography.SHA384"></xref> hash for the input data using the managed library.
  remarks: "The hash is used as a unique value of fixed size representing a large amount of data. Hashes of two sets of data should match if and only if the corresponding data also matches. Small changes to the data result in large unpredictable changes in the hash.  \n  \n The hash size for the <xref:System.Security.Cryptography.SHA384Managed> algorithm is 384 bits."
  example:
  - "The following example computes the <xref:System.Security.Cryptography.SHA384Managed> hash for `data` and stores it in `result`. This example assumes that there is a predefined constant `DATA_SIZE`.  \n  \n [!code-cpp[Classic SHA384Managed Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SHA384Managed Example/CPP/source.cpp#1)]\n [!code-csharp[Classic SHA384Managed Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SHA384Managed Example/CS/source.cs#1)]\n [!code-vb[Classic SHA384Managed Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SHA384Managed Example/VB/source.vb#1)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class SHA384Managed : System.Security.Cryptography.SHA384
  inheritance:
  - System.Object
  - System.Security.Cryptography.HashAlgorithm
  - System.Security.Cryptography.SHA384
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  - System.Security.Cryptography.HashAlgorithm.CanReuseTransform
  - System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks
  - System.Security.Cryptography.HashAlgorithm.Clear
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)
  - System.Security.Cryptography.HashAlgorithm.Dispose
  - System.Security.Cryptography.HashAlgorithm.Hash
  - System.Security.Cryptography.HashAlgorithm.HashSize
  - System.Security.Cryptography.HashAlgorithm.HashSizeValue
  - System.Security.Cryptography.HashAlgorithm.HashValue
  - System.Security.Cryptography.HashAlgorithm.InputBlockSize
  - System.Security.Cryptography.HashAlgorithm.OutputBlockSize
  - System.Security.Cryptography.HashAlgorithm.State
  - System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  - System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.SHA384.Create
  - System.Security.Cryptography.SHA384.Create(System.String)
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/SHA384Managed.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.SHA384Managed.#ctor
  commentId: M:System.Security.Cryptography.SHA384Managed.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.SHA384Managed
  langs:
  - csharp
  name: SHA384Managed()
  nameWithType: SHA384Managed.SHA384Managed()
  fullName: SHA384Managed.SHA384Managed()
  type: Constructor
  assemblies:
  - mscorlib
  - netstandard
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  summary: Initializes a new instance of the <xref href="System.Security.Cryptography.SHA384Managed"></xref> class.
  remarks: "The hash is used as a unique value of fixed size representing a large amount of data. Hashes of two sets of data should match if and only if the corresponding data also matches. Small changes to the data result in large unpredictable changes in the hash.  \n  \n The hash size for the <xref:System.Security.Cryptography.SHA384Managed> algorithm is 384 bits.  \n  \n **Important** If you enable the following security setting either in the Local Security Policy or as part of Group Policy you will get an <xref:System.InvalidOperationException> when you attempt to use this constructor:  \n  \n **System cryptography: Use FIPS compliant algorithms for encryption, hashing, and signing**"
  syntax:
    content: public SHA384Managed ();
    parameters: []
  overload: System.Security.Cryptography.SHA384Managed.#ctor*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The Federal Information Processing Standards (FIPS) security setting is enabled. This implementation is not part of the Windows Platform FIPS-validated cryptographic algorithms.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/SHA384Managed.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.SHA384Managed.Dispose(System.Boolean)
  commentId: M:System.Security.Cryptography.SHA384Managed.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Security.Cryptography.SHA384Managed
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: SHA384Managed.Dispose(Boolean)
  fullName: SHA384Managed.Dispose(Boolean)
  type: Method
  assemblies:
  - mscorlib
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: ''
  overload: System.Security.Cryptography.SHA384Managed.Dispose*
  exceptions: []
  version:
  - netcore-2.0
  - xamarinios-10.8
  monikers:
  - netcore-2.0
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/SHA384Managed.xml
- uid: System.Security.Cryptography.SHA384Managed.Finalize
  commentId: M:System.Security.Cryptography.SHA384Managed.Finalize
  id: Finalize
  parent: System.Security.Cryptography.SHA384Managed
  langs:
  - csharp
  name: Finalize()
  nameWithType: SHA384Managed.Finalize()
  fullName: SHA384Managed.Finalize()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  syntax:
    content: ~SHA384Managed ();
    parameters: []
  overload: System.Security.Cryptography.SHA384Managed.Finalize*
  exceptions: []
  version:
  - xamarinios-10.8
  monikers:
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/SHA384Managed.xml
- uid: System.Security.Cryptography.SHA384Managed.HashCore(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.Security.Cryptography.SHA384Managed.HashCore(System.Byte[],System.Int32,System.Int32)
  id: HashCore(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.SHA384Managed
  langs:
  - csharp
  name: HashCore(Byte[], Int32, Int32)
  nameWithType: SHA384Managed.HashCore(Byte[], Int32, Int32)
  fullName: SHA384Managed.HashCore(Byte[], Int32, Int32)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  summary: When overridden in a derived class, routes data written to the object into the <xref href="System.Security.Cryptography.SHA384Managed"></xref> hash algorithm for computing the hash.
  remarks: "This method is not called by application code.  \n  \n This abstract method performs the hash computation. Every write to the cryptographic stream object passes the data through this method. For each block of data, this method updates the state of the hash object so a correct hash value is returned at the end of the data stream."
  syntax:
    content: protected override void HashCore (byte[] rgb, int ibStart, int cbSize);
    parameters:
    - id: rgb
      type: System.Byte[]
      description: The input data.
    - id: ibStart
      type: System.Int32
      description: The offset into the byte array from which to begin using data.
    - id: cbSize
      type: System.Int32
      description: The number of bytes in the array to use as data.
  overload: System.Security.Cryptography.SHA384Managed.HashCore*
  exceptions: []
  attributes: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/SHA384Managed.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.SHA384Managed.HashFinal
  commentId: M:System.Security.Cryptography.SHA384Managed.HashFinal
  id: HashFinal
  parent: System.Security.Cryptography.SHA384Managed
  langs:
  - csharp
  name: HashFinal()
  nameWithType: SHA384Managed.HashFinal()
  fullName: SHA384Managed.HashFinal()
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  summary: When overridden in a derived class, finalizes the hash computation after the last data is processed by the cryptographic stream object.
  remarks: This method is not called by application code. This method finalizes any partial computation and returns the correct hash value of the data stream.
  syntax:
    content: protected override byte[] HashFinal ();
    parameters: []
    return:
      type: System.Byte[]
      description: The computed hash code.
  overload: System.Security.Cryptography.SHA384Managed.HashFinal*
  exceptions: []
  attributes: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/SHA384Managed.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.SHA384Managed.Initialize
  commentId: M:System.Security.Cryptography.SHA384Managed.Initialize
  id: Initialize
  parent: System.Security.Cryptography.SHA384Managed
  langs:
  - csharp
  name: Initialize()
  nameWithType: SHA384Managed.Initialize()
  fullName: SHA384Managed.Initialize()
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  summary: Initializes an instance of <xref href="System.Security.Cryptography.SHA384Managed"></xref>.
  remarks: "The hash is used as a unique value of fixed size representing a large amount of data. Hashes of two sets of data should match if and only if the corresponding data also matches. Small changes to the data result in large unpredictable changes in the hash.  \n  \n The hash size for the <xref:System.Security.Cryptography.SHA384Managed> algorithm is 384 bits."
  syntax:
    content: public override void Initialize ();
    parameters: []
  overload: System.Security.Cryptography.SHA384Managed.Initialize*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/SHA384Managed.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
references:
- uid: System.Security.Cryptography.SHA384
  parent: System.Security.Cryptography
  isExternal: false
  name: SHA384
  nameWithType: SHA384
  fullName: System.Security.Cryptography.SHA384
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.Security.Cryptography.SHA384Managed.#ctor
  parent: System.Security.Cryptography.SHA384Managed
  isExternal: false
  name: SHA384Managed()
  nameWithType: SHA384Managed.SHA384Managed()
  fullName: SHA384Managed.SHA384Managed()
- uid: System.Security.Cryptography.SHA384Managed.Dispose(System.Boolean)
  parent: System.Security.Cryptography.SHA384Managed
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: SHA384Managed.Dispose(Boolean)
  fullName: SHA384Managed.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.SHA384Managed.Finalize
  parent: System.Security.Cryptography.SHA384Managed
  isExternal: false
  name: Finalize()
  nameWithType: SHA384Managed.Finalize()
  fullName: SHA384Managed.Finalize()
- uid: System.Security.Cryptography.SHA384Managed.HashCore(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.SHA384Managed
  isExternal: false
  name: HashCore(Byte[], Int32, Int32)
  nameWithType: SHA384Managed.HashCore(Byte[], Int32, Int32)
  fullName: SHA384Managed.HashCore(Byte[], Int32, Int32)
- uid: System.Byte
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Byte[]
  parent: System
  isExternal: false
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.SHA384Managed.HashFinal
  parent: System.Security.Cryptography.SHA384Managed
  isExternal: false
  name: HashFinal()
  nameWithType: SHA384Managed.HashFinal()
  fullName: SHA384Managed.HashFinal()
- uid: System.Security.Cryptography.SHA384Managed.Initialize
  parent: System.Security.Cryptography.SHA384Managed
  isExternal: false
  name: Initialize()
  nameWithType: SHA384Managed.Initialize()
  fullName: SHA384Managed.Initialize()
- uid: System.Security.Cryptography.SHA384Managed.#ctor*
  parent: System.Security.Cryptography.SHA384Managed
  isExternal: false
  name: SHA384Managed
  nameWithType: SHA384Managed.SHA384Managed
  fullName: SHA384Managed.SHA384Managed
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/SHA384Managed.xml
- uid: System.Security.Cryptography.SHA384Managed.Dispose*
  parent: System.Security.Cryptography.SHA384Managed
  isExternal: false
  name: Dispose
  nameWithType: SHA384Managed.Dispose
  fullName: SHA384Managed.Dispose
  monikers:
  - netcore-2.0
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/SHA384Managed.xml
- uid: System.Security.Cryptography.SHA384Managed.Finalize*
  parent: System.Security.Cryptography.SHA384Managed
  isExternal: false
  name: Finalize
  nameWithType: SHA384Managed.Finalize
  fullName: SHA384Managed.Finalize
  monikers:
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/SHA384Managed.xml
- uid: System.Security.Cryptography.SHA384Managed.HashCore*
  parent: System.Security.Cryptography.SHA384Managed
  isExternal: false
  name: HashCore
  nameWithType: SHA384Managed.HashCore
  fullName: SHA384Managed.HashCore
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/SHA384Managed.xml
- uid: System.Security.Cryptography.SHA384Managed.HashFinal*
  parent: System.Security.Cryptography.SHA384Managed
  isExternal: false
  name: HashFinal
  nameWithType: SHA384Managed.HashFinal
  fullName: SHA384Managed.HashFinal
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/SHA384Managed.xml
- uid: System.Security.Cryptography.SHA384Managed.Initialize*
  parent: System.Security.Cryptography.SHA384Managed
  isExternal: false
  name: Initialize
  nameWithType: SHA384Managed.Initialize
  fullName: SHA384Managed.Initialize
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/SHA384Managed.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.Security.Cryptography.HashAlgorithm.CanReuseTransform
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: CanReuseTransform
  nameWithType: HashAlgorithm.CanReuseTransform
  fullName: HashAlgorithm.CanReuseTransform
- uid: System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: CanTransformMultipleBlocks
  nameWithType: HashAlgorithm.CanTransformMultipleBlocks
  fullName: HashAlgorithm.CanTransformMultipleBlocks
- uid: System.Security.Cryptography.HashAlgorithm.Clear
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: Clear()
  nameWithType: HashAlgorithm.Clear()
  fullName: HashAlgorithm.Clear()
- uid: System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: ComputeHash(Byte[])
  nameWithType: HashAlgorithm.ComputeHash(Byte[])
  fullName: HashAlgorithm.ComputeHash(Byte[])
- uid: System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: ComputeHash(Stream)
  nameWithType: HashAlgorithm.ComputeHash(Stream)
  fullName: HashAlgorithm.ComputeHash(Stream)
- uid: System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: ComputeHash(Byte[], Int32, Int32)
  nameWithType: HashAlgorithm.ComputeHash(Byte[], Int32, Int32)
  fullName: HashAlgorithm.ComputeHash(Byte[], Int32, Int32)
- uid: System.Security.Cryptography.SHA384.Create
  parent: System.Security.Cryptography.SHA384
  isExternal: false
  name: Create()
  nameWithType: SHA384.Create()
  fullName: SHA384.Create()
- uid: System.Security.Cryptography.SHA384.Create(System.String)
  parent: System.Security.Cryptography.SHA384
  isExternal: false
  name: Create(String)
  nameWithType: SHA384.Create(String)
  fullName: SHA384.Create(String)
- uid: System.Security.Cryptography.HashAlgorithm.Dispose
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: Dispose()
  nameWithType: HashAlgorithm.Dispose()
  fullName: HashAlgorithm.Dispose()
- uid: System.Security.Cryptography.HashAlgorithm.Hash
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: Hash
  nameWithType: HashAlgorithm.Hash
  fullName: HashAlgorithm.Hash
- uid: System.Security.Cryptography.HashAlgorithm.HashSize
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: HashSize
  nameWithType: HashAlgorithm.HashSize
  fullName: HashAlgorithm.HashSize
- uid: System.Security.Cryptography.HashAlgorithm.HashSizeValue
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: HashSizeValue
  nameWithType: HashAlgorithm.HashSizeValue
  fullName: HashAlgorithm.HashSizeValue
- uid: System.Security.Cryptography.HashAlgorithm.HashValue
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: HashValue
  nameWithType: HashAlgorithm.HashValue
  fullName: HashAlgorithm.HashValue
- uid: System.Security.Cryptography.HashAlgorithm.InputBlockSize
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: InputBlockSize
  nameWithType: HashAlgorithm.InputBlockSize
  fullName: HashAlgorithm.InputBlockSize
- uid: System.Security.Cryptography.HashAlgorithm.OutputBlockSize
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: OutputBlockSize
  nameWithType: HashAlgorithm.OutputBlockSize
  fullName: HashAlgorithm.OutputBlockSize
- uid: System.Security.Cryptography.HashAlgorithm.State
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: State
  nameWithType: HashAlgorithm.State
  fullName: HashAlgorithm.State
- uid: System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: TransformBlock(Byte[], Int32, Int32, Byte[], Int32)
  nameWithType: HashAlgorithm.TransformBlock(Byte[], Int32, Int32, Byte[], Int32)
  fullName: HashAlgorithm.TransformBlock(Byte[], Int32, Int32, Byte[], Int32)
- uid: System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: TransformFinalBlock(Byte[], Int32, Int32)
  nameWithType: HashAlgorithm.TransformFinalBlock(Byte[], Int32, Int32)
  fullName: HashAlgorithm.TransformFinalBlock(Byte[], Int32, Int32)
