{"nodes":[{"content":"Describes the thickness of a frame around a rectangle. Four <xref href=\"System.Double\"></xref> values describe the <xref href=\"System.Windows.Thickness.Left\"></xref>, <xref href=\"System.Windows.Thickness.Top\"></xref>, <xref href=\"System.Windows.Thickness.Right\"></xref>, and <xref href=\"System.Windows.Thickness.Bottom\"></xref> sides of the rectangle, respectively.","nodes":[{"pos":[0,365],"content":"Describes the thickness of a frame around a rectangle. Four <xref href=\"System.Double\"></xref> values describe the <xref href=\"System.Windows.Thickness.Left\"></xref>, <xref href=\"System.Windows.Thickness.Top\"></xref>, <xref href=\"System.Windows.Thickness.Right\"></xref>, and <xref href=\"System.Windows.Thickness.Bottom\"></xref> sides of the rectangle, respectively.","nodes":[{"content":"Describes the thickness of a frame around a rectangle.","pos":[0,54]},{"content":"Four <ph id=\"ph1\">&lt;xref href=\"System.Double\"&gt;&lt;/xref&gt;</ph> values describe the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Thickness.Left\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph3\">&lt;xref href=\"System.Windows.Thickness.Top\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph4\">&lt;xref href=\"System.Windows.Thickness.Right\"&gt;&lt;/xref&gt;</ph>, and <ph id=\"ph5\">&lt;xref href=\"System.Windows.Thickness.Bottom\"&gt;&lt;/xref&gt;</ph> sides of the rectangle, respectively.","pos":[55,365],"source":" Four <xref href=\"System.Double\"></xref> values describe the <xref href=\"System.Windows.Thickness.Left\"></xref>, <xref href=\"System.Windows.Thickness.Top\"></xref>, <xref href=\"System.Windows.Thickness.Right\"></xref>, and <xref href=\"System.Windows.Thickness.Bottom\"></xref> sides of the rectangle, respectively."}]}],"pos":[989,1355],"yaml":true},{"content":"You can specify <xref:System.Windows.Thickness> values in two ways. If you pass four <xref:System.Double> values to the structure, they represent the <xref:System.Windows.Thickness.Left%2A>, <xref:System.Windows.Thickness.Top%2A>, <xref:System.Windows.Thickness.Right%2A> and <xref:System.Windows.Thickness.Bottom%2A> sides, respectively, of the bounding rectangle. You can also supply a single value, which applies a uniform value to all four sides of the bounding rectangle.  \n  \n<a name=\"xamlAttributeUsage_Thickness\"></a>   \n## XAML Attribute Usage  \n  \n```  \n<object property=\"left\"/>  \n- or -  \n<object property=\"left,top\"/>  \n- or -  \n<object property=\" left,top,right,bottom\" ... />  \n```  \n  \n<a name=\"xamlValues_Thickness\"></a>   \n## XAML Values  \n *left*  \n The left edge of the frame, described as either a <xref:System.Double> value that specifies a [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)] measure, or as a *qualifiedDouble* (see below). If only a single measure is specified, that measure is applied to ALL of the left,top,right,bottom values of a <xref:System.Windows.Thickness>. If only a pair of left,top measures are specified, these measures are applied symmetrically to a <xref:System.Windows.Thickness>: the left value is used for right; the top value is used for bottom.  \n  \n *top*  \n The top edge of the frame, described as either a <xref:System.Double> value that specifies a [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)] measure, or as a *qualifiedDouble* (see below). If only a pair of left,top measures are specified, these measures are applied symmetrically to a <xref:System.Windows.Thickness>: the left value is used for right; the top value is used for bottom.  \n  \n *right*  \n The right edge of the frame, described as either a <xref:System.Double> value that specifies a [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)] measure, or as a *qualifiedDouble* (see below). If left unspecified, will use the left value.  \n  \n *bottom*  \n The bottom edge of the frame, described as either a <xref:System.Double> value that specifies a [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)] measure, or as a *qualifiedDouble* (see below). If left unspecified, will use the left value.  \n  \n *qualifiedDouble*  \n A *double* value as described above for any of the measures, followed by one of the following unit declaration strings: `px`, `in`, `cm`, `pt`.  \n  \n `px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  \n  \n `in` is inches; 1in==96px  \n  \n `cm` is centimeters; 1cm==(96/2.54) px  \n  \n `pt` is points; 1pt==(96/72) px  \n  \n> [!NOTE]\n>  Values need not include the decimal point explicitly when specified as a string. The string \"1\" provided in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] evaluates to a value of 1.0 when referenced in code.","nodes":[{"pos":[0,476],"content":"You can specify <xref:System.Windows.Thickness> values in two ways. If you pass four <xref:System.Double> values to the structure, they represent the <xref:System.Windows.Thickness.Left%2A>, <xref:System.Windows.Thickness.Top%2A>, <xref:System.Windows.Thickness.Right%2A> and <xref:System.Windows.Thickness.Bottom%2A> sides, respectively, of the bounding rectangle. You can also supply a single value, which applies a uniform value to all four sides of the bounding rectangle.","nodes":[{"content":"You can specify <xref:System.Windows.Thickness> values in two ways. If you pass four <xref:System.Double> values to the structure, they represent the <xref:System.Windows.Thickness.Left%2A>, <xref:System.Windows.Thickness.Top%2A>, <xref:System.Windows.Thickness.Right%2A> and <xref:System.Windows.Thickness.Bottom%2A> sides, respectively, of the bounding rectangle. You can also supply a single value, which applies a uniform value to all four sides of the bounding rectangle.","pos":[0,476],"nodes":[{"content":"You can specify <ph id=\"ph1\">&lt;xref:System.Windows.Thickness&gt;</ph> values in two ways.","pos":[0,67],"source":"You can specify <xref:System.Windows.Thickness> values in two ways."},{"content":"If you pass four <ph id=\"ph1\">&lt;xref:System.Double&gt;</ph> values to the structure, they represent the <ph id=\"ph2\">&lt;xref:System.Windows.Thickness.Left%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Windows.Thickness.Top%2A&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Windows.Thickness.Right%2A&gt;</ph> and <ph id=\"ph5\">&lt;xref:System.Windows.Thickness.Bottom%2A&gt;</ph> sides, respectively, of the bounding rectangle.","pos":[68,365],"source":" If you pass four <xref:System.Double> values to the structure, they represent the <xref:System.Windows.Thickness.Left%2A>, <xref:System.Windows.Thickness.Top%2A>, <xref:System.Windows.Thickness.Right%2A> and <xref:System.Windows.Thickness.Bottom%2A> sides, respectively, of the bounding rectangle."},{"content":"You can also supply a single value, which applies a uniform value to all four sides of the bounding rectangle.","pos":[366,476]}]}]},{"pos":[532,552],"content":"XAML Attribute Usage","linkify":"XAML Attribute Usage","nodes":[{"content":"XAML Attribute Usage","pos":[0,20]}]},{"pos":[744,755],"content":"XAML Values","linkify":"XAML Values","nodes":[{"content":"XAML Values","pos":[0,11]}]},{"pos":[759,1336],"content":"*left*  \n The left edge of the frame, described as either a <xref:System.Double> value that specifies a [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)] measure, or as a *qualifiedDouble* (see below). If only a single measure is specified, that measure is applied to ALL of the left,top,right,bottom values of a <xref:System.Windows.Thickness>. If only a pair of left,top measures are specified, these measures are applied symmetrically to a <xref:System.Windows.Thickness>: the left value is used for right; the top value is used for bottom.","nodes":[{"content":"<bpt id=\"p1\">*</bpt>left<ept id=\"p1\">*</ept>","pos":[0,6],"source":"*left*"},{"content":" The left edge of the frame, described as either a <xref:System.Double> value that specifies a [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)] measure, or as a *qualifiedDouble* (see below). If only a single measure is specified, that measure is applied to ALL of the left,top,right,bottom values of a <xref:System.Windows.Thickness>. If only a pair of left,top measures are specified, these measures are applied symmetrically to a <xref:System.Windows.Thickness>: the left value is used for right; the top value is used for bottom.","pos":[9,577],"nodes":[{"content":"The left edge of the frame, described as either a <ph id=\"ph1\">&lt;xref:System.Double&gt;</ph> value that specifies a <ph id=\"ph2\">[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</ph> measure, or as a <bpt id=\"p1\">*</bpt>qualifiedDouble<ept id=\"p1\">*</ept> (see below).","pos":[1,226],"source":" The left edge of the frame, described as either a <xref:System.Double> value that specifies a [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)] measure, or as a *qualifiedDouble* (see below)."},{"content":"If only a single measure is specified, that measure is applied to ALL of the left,top,right,bottom values of a <ph id=\"ph1\">&lt;xref:System.Windows.Thickness&gt;</ph>.","pos":[227,370],"source":" If only a single measure is specified, that measure is applied to ALL of the left,top,right,bottom values of a <xref:System.Windows.Thickness>."},{"content":"If only a pair of left,top measures are specified, these measures are applied symmetrically to a <ph id=\"ph1\">&lt;xref:System.Windows.Thickness&gt;</ph>: the left value is used for right; the top value is used for bottom.","pos":[371,568],"source":" If only a pair of left,top measures are specified, these measures are applied symmetrically to a <xref:System.Windows.Thickness>: the left value is used for right; the top value is used for bottom."}]}]},{"pos":[1343,1774],"content":"*top*  \n The top edge of the frame, described as either a <xref:System.Double> value that specifies a [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)] measure, or as a *qualifiedDouble* (see below). If only a pair of left,top measures are specified, these measures are applied symmetrically to a <xref:System.Windows.Thickness>: the left value is used for right; the top value is used for bottom.","nodes":[{"content":"<bpt id=\"p1\">*</bpt>top<ept id=\"p1\">*</ept>","pos":[0,5],"source":"*top*"},{"content":" The top edge of the frame, described as either a <xref:System.Double> value that specifies a [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)] measure, or as a *qualifiedDouble* (see below). If only a pair of left,top measures are specified, these measures are applied symmetrically to a <xref:System.Windows.Thickness>: the left value is used for right; the top value is used for bottom.","pos":[8,431],"nodes":[{"content":"The top edge of the frame, described as either a <ph id=\"ph1\">&lt;xref:System.Double&gt;</ph> value that specifies a <ph id=\"ph2\">[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</ph> measure, or as a <bpt id=\"p1\">*</bpt>qualifiedDouble<ept id=\"p1\">*</ept> (see below).","pos":[1,225],"source":" The top edge of the frame, described as either a <xref:System.Double> value that specifies a [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)] measure, or as a *qualifiedDouble* (see below)."},{"content":"If only a pair of left,top measures are specified, these measures are applied symmetrically to a <ph id=\"ph1\">&lt;xref:System.Windows.Thickness&gt;</ph>: the left value is used for right; the top value is used for bottom.","pos":[226,423],"source":" If only a pair of left,top measures are specified, these measures are applied symmetrically to a <xref:System.Windows.Thickness>: the left value is used for right; the top value is used for bottom."}]}]},{"pos":[1781,2064],"content":"*right*  \n The right edge of the frame, described as either a <xref:System.Double> value that specifies a [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)] measure, or as a *qualifiedDouble* (see below). If left unspecified, will use the left value.","nodes":[{"content":"<bpt id=\"p1\">*</bpt>right<ept id=\"p1\">*</ept>","pos":[0,7],"source":"*right*"},{"content":" The right edge of the frame, described as either a <xref:System.Double> value that specifies a [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)] measure, or as a *qualifiedDouble* (see below). If left unspecified, will use the left value.","pos":[10,283],"nodes":[{"content":"The right edge of the frame, described as either a <ph id=\"ph1\">&lt;xref:System.Double&gt;</ph> value that specifies a <ph id=\"ph2\">[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</ph> measure, or as a <bpt id=\"p1\">*</bpt>qualifiedDouble<ept id=\"p1\">*</ept> (see below).","pos":[1,227],"source":" The right edge of the frame, described as either a <xref:System.Double> value that specifies a [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)] measure, or as a *qualifiedDouble* (see below)."},{"content":"If left unspecified, will use the left value.","pos":[228,273]}]}]},{"pos":[2071,2356],"content":"*bottom*  \n The bottom edge of the frame, described as either a <xref:System.Double> value that specifies a [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)] measure, or as a *qualifiedDouble* (see below). If left unspecified, will use the left value.","nodes":[{"content":"<bpt id=\"p1\">*</bpt>bottom<ept id=\"p1\">*</ept>","pos":[0,8],"source":"*bottom*"},{"content":" The bottom edge of the frame, described as either a <xref:System.Double> value that specifies a [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)] measure, or as a *qualifiedDouble* (see below). If left unspecified, will use the left value.","pos":[11,285],"nodes":[{"content":"The bottom edge of the frame, described as either a <ph id=\"ph1\">&lt;xref:System.Double&gt;</ph> value that specifies a <ph id=\"ph2\">[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</ph> measure, or as a <bpt id=\"p1\">*</bpt>qualifiedDouble<ept id=\"p1\">*</ept> (see below).","pos":[1,228],"source":" The bottom edge of the frame, described as either a <xref:System.Double> value that specifies a [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)] measure, or as a *qualifiedDouble* (see below)."},{"content":"If left unspecified, will use the left value.","pos":[229,274]}]}]},{"pos":[2363,2527],"content":"*qualifiedDouble*  \n A *double* value as described above for any of the measures, followed by one of the following unit declaration strings: `px`, `in`, `cm`, `pt`.","nodes":[{"content":"<bpt id=\"p1\">*</bpt>qualifiedDouble<ept id=\"p1\">*</ept>","pos":[0,17],"source":"*qualifiedDouble*"},{"content":"A <bpt id=\"p1\">*</bpt>double<ept id=\"p1\">*</ept> value as described above for any of the measures, followed by one of the following unit declaration strings: <ph id=\"ph1\">`px`</ph>, <ph id=\"ph2\">`in`</ph>, <ph id=\"ph3\">`cm`</ph>, <ph id=\"ph4\">`pt`</ph>.","pos":[21,164],"source":" A *double* value as described above for any of the measures, followed by one of the following unit declaration strings: `px`, `in`, `cm`, `pt`."}]},{"pos":[2534,2635],"content":"<ph id=\"ph1\">`px`</ph> (default) is <ph id=\"ph2\">[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</ph>","source":"`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]"},{"pos":[2642,2667],"content":"<ph id=\"ph1\">`in`</ph> is inches; 1in==96px","source":"`in` is inches; 1in==96px"},{"pos":[2674,2712],"content":"<ph id=\"ph1\">`cm`</ph> is centimeters; 1cm==(96/2.54) px","source":"`cm` is centimeters; 1cm==(96/2.54) px"},{"pos":[2719,2750],"content":"<ph id=\"ph1\">`pt`</ph> is points; 1pt==(96/72) px","source":"`pt` is points; 1pt==(96/72) px"},{"pos":[2758,2991],"content":"[!NOTE]\n Values need not include the decimal point explicitly when specified as a string. The string \"1\" provided in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] evaluates to a value of 1.0 when referenced in code.","leadings":["","> "],"nodes":[{"content":" Values need not include the decimal point explicitly when specified as a string. The string \"1\" provided in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] evaluates to a value of 1.0 when referenced in code.","pos":[8,231],"nodes":[{"content":"Values need not include the decimal point explicitly when specified as a string.","pos":[1,81]},{"content":"The string \"1\" provided in <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> evaluates to a value of 1.0 when referenced in code.","pos":[82,223],"source":" The string \"1\" provided in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] evaluates to a value of 1.0 when referenced in code."}]}]}],"pos":[1366,4411],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Thickness\"></xref> structure that has the specified uniform length on each side.","nodes":[{"pos":[0,141],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Thickness\"&gt;&lt;/xref&gt;</ph> structure that has the specified uniform length on each side.","source":"Initializes a new instance of the <xref href=\"System.Windows.Thickness\"></xref> structure that has the specified uniform length on each side."}],"pos":[6472,6614],"yaml":true},{"content":"The uniform length applied to all four sides of the bounding rectangle.","nodes":[{"pos":[0,71],"content":"The uniform length applied to all four sides of the bounding rectangle.","nodes":[{"content":"The uniform length applied to all four sides of the bounding rectangle.","pos":[0,71]}]}],"pos":[6763,6835],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Thickness\"></xref> structure that has specific lengths (supplied as a <xref href=\"System.Double\"></xref>) applied to each side of the rectangle.","nodes":[{"pos":[0,205],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Thickness\"&gt;&lt;/xref&gt;</ph> structure that has specific lengths (supplied as a <ph id=\"ph2\">&lt;xref href=\"System.Double\"&gt;&lt;/xref&gt;</ph>) applied to each side of the rectangle.","source":"Initializes a new instance of the <xref href=\"System.Windows.Thickness\"></xref> structure that has specific lengths (supplied as a <xref href=\"System.Double\"></xref>) applied to each side of the rectangle."}],"pos":[8020,8226],"yaml":true},{"content":"The thickness for the left side of the rectangle.","nodes":[{"pos":[0,49],"content":"The thickness for the left side of the rectangle.","nodes":[{"content":"The thickness for the left side of the rectangle.","pos":[0,49]}]}],"pos":[8911,8961],"yaml":true},{"content":"The thickness for the upper side of the rectangle.","nodes":[{"pos":[0,50],"content":"The thickness for the upper side of the rectangle.","nodes":[{"content":"The thickness for the upper side of the rectangle.","pos":[0,50]}]}],"pos":[9020,9071],"yaml":true},{"content":"The thickness for the right side of the rectangle","nodes":[{"pos":[0,49],"content":"The thickness for the right side of the rectangle","nodes":[{"content":"The thickness for the right side of the rectangle","pos":[0,49]}]}],"pos":[9132,9182],"yaml":true},{"content":"The thickness for the lower side of the rectangle.","nodes":[{"pos":[0,50],"content":"The thickness for the lower side of the rectangle.","nodes":[{"content":"The thickness for the lower side of the rectangle.","pos":[0,50]}]}],"pos":[9244,9295],"yaml":true},{"content":"Gets or sets the width, in pixels, of the lower side of the bounding rectangle.","nodes":[{"pos":[0,79],"content":"Gets or sets the width, in pixels, of the lower side of the bounding rectangle.","nodes":[{"content":"Gets or sets the width, in pixels, of the lower side of the bounding rectangle.","pos":[0,79]}]}],"pos":[10202,10282],"yaml":true},{"content":"A <xref href=\"System.Double\"></xref> that represents the width, in pixels, of the lower side of the bounding rectangle for this instance of <xref href=\"System.Windows.Thickness\"></xref>. A pixel is equal to 1/96 of an inch. The default is 0.","nodes":[{"pos":[0,241],"content":"A <xref href=\"System.Double\"></xref> that represents the width, in pixels, of the lower side of the bounding rectangle for this instance of <xref href=\"System.Windows.Thickness\"></xref>. A pixel is equal to 1/96 of an inch. The default is 0.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Double\"&gt;&lt;/xref&gt;</ph> that represents the width, in pixels, of the lower side of the bounding rectangle for this instance of <ph id=\"ph2\">&lt;xref href=\"System.Windows.Thickness\"&gt;&lt;/xref&gt;</ph>.","pos":[0,186],"source":"A <xref href=\"System.Double\"></xref> that represents the width, in pixels, of the lower side of the bounding rectangle for this instance of <xref href=\"System.Windows.Thickness\"></xref>."},{"content":"A pixel is equal to 1/96 of an inch.","pos":[187,223]},{"content":"The default is 0.","pos":[224,241]}]}],"pos":[10980,11222],"yaml":true},{"content":"Compares this <xref href=\"System.Windows.Thickness\"></xref> structure to another <xref href=\"System.Object\"></xref> for equality.","nodes":[{"pos":[0,129],"content":"Compares this <ph id=\"ph1\">&lt;xref href=\"System.Windows.Thickness\"&gt;&lt;/xref&gt;</ph> structure to another <ph id=\"ph2\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> for equality.","source":"Compares this <xref href=\"System.Windows.Thickness\"></xref> structure to another <xref href=\"System.Object\"></xref> for equality."}],"pos":[12197,12327],"yaml":true},{"content":"Testing for equality on two floating-point values that are logically equivalent might fail because of precision errors that can accumulate as the values are operated on.","nodes":[{"pos":[0,169],"content":"Testing for equality on two floating-point values that are logically equivalent might fail because of precision errors that can accumulate as the values are operated on.","nodes":[{"content":"Testing for equality on two floating-point values that are logically equivalent might fail because of precision errors that can accumulate as the values are operated on.","pos":[0,169]}]}],"pos":[12338,12508],"yaml":true,"extradata":"MT"},{"content":"The object to compare.","nodes":[{"pos":[0,22],"content":"The object to compare.","nodes":[{"content":"The object to compare.","pos":[0,22]}]}],"pos":[12648,12671],"yaml":true},{"content":"`true` if the two objects are equal; otherwise, `false`.","nodes":[{"pos":[0,56],"content":"<ph id=\"ph1\">`true`</ph> if the two objects are equal; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the two objects are equal; otherwise, `false`."}],"pos":[12729,12788],"yaml":true},{"content":"Compares this <xref href=\"System.Windows.Thickness\"></xref> structure to another <xref href=\"System.Windows.Thickness\"></xref> structure for equality.","nodes":[{"pos":[0,150],"content":"Compares this <ph id=\"ph1\">&lt;xref href=\"System.Windows.Thickness\"&gt;&lt;/xref&gt;</ph> structure to another <ph id=\"ph2\">&lt;xref href=\"System.Windows.Thickness\"&gt;&lt;/xref&gt;</ph> structure for equality.","source":"Compares this <xref href=\"System.Windows.Thickness\"></xref> structure to another <xref href=\"System.Windows.Thickness\"></xref> structure for equality."}],"pos":[13805,13956],"yaml":true},{"content":"Testing for equality or inequality on two floating-point values that are logically equivalent might fail because of precision errors that can accumulate as the values are operated on.","nodes":[{"pos":[0,183],"content":"Testing for equality or inequality on two floating-point values that are logically equivalent might fail because of precision errors that can accumulate as the values are operated on.","nodes":[{"content":"Testing for equality or inequality on two floating-point values that are logically equivalent might fail because of precision errors that can accumulate as the values are operated on.","pos":[0,183]}]}],"pos":[13967,14151],"yaml":true,"extradata":"MT"},{"content":"An instance of <xref href=\"System.Windows.Thickness\"></xref> to compare for equality.","nodes":[{"pos":[0,85],"content":"An instance of <ph id=\"ph1\">&lt;xref href=\"System.Windows.Thickness\"&gt;&lt;/xref&gt;</ph> to compare for equality.","source":"An instance of <xref href=\"System.Windows.Thickness\"></xref> to compare for equality."}],"pos":[14323,14409],"yaml":true},{"content":"`true` if the two instances of <xref href=\"System.Windows.Thickness\"></xref> are equal; otherwise, `false`.","nodes":[{"pos":[0,107],"content":"<ph id=\"ph1\">`true`</ph> if the two instances of <ph id=\"ph2\">&lt;xref href=\"System.Windows.Thickness\"&gt;&lt;/xref&gt;</ph> are equal; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the two instances of <xref href=\"System.Windows.Thickness\"></xref> are equal; otherwise, `false`."}],"pos":[14467,14577],"yaml":true},{"content":"Returns the hash code of the structure.","nodes":[{"pos":[0,39],"content":"Returns the hash code of the structure.","nodes":[{"content":"Returns the hash code of the structure.","pos":[0,39]}]}],"pos":[15519,15559],"yaml":true},{"content":"A hash code for this instance of <xref href=\"System.Windows.Thickness\"></xref>.","nodes":[{"pos":[0,79],"content":"A hash code for this instance of <ph id=\"ph1\">&lt;xref href=\"System.Windows.Thickness\"&gt;&lt;/xref&gt;</ph>.","source":"A hash code for this instance of <xref href=\"System.Windows.Thickness\"></xref>."}],"pos":[15693,15773],"yaml":true},{"content":"Gets or sets the width, in pixels, of the left side of the bounding rectangle.","nodes":[{"pos":[0,78],"content":"Gets or sets the width, in pixels, of the left side of the bounding rectangle.","nodes":[{"content":"Gets or sets the width, in pixels, of the left side of the bounding rectangle.","pos":[0,78]}]}],"pos":[16674,16753],"yaml":true},{"content":"A <xref href=\"System.Double\"></xref> that represents the width, in pixels, of the left side of the bounding rectangle for this instance of <xref href=\"System.Windows.Thickness\"></xref>. a pixel is equal to 1/96 on an inch. The default is 0.","nodes":[{"pos":[0,240],"content":"A <xref href=\"System.Double\"></xref> that represents the width, in pixels, of the left side of the bounding rectangle for this instance of <xref href=\"System.Windows.Thickness\"></xref>. a pixel is equal to 1/96 on an inch. The default is 0.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Double\"&gt;&lt;/xref&gt;</ph> that represents the width, in pixels, of the left side of the bounding rectangle for this instance of <ph id=\"ph2\">&lt;xref href=\"System.Windows.Thickness\"&gt;&lt;/xref&gt;</ph>.","pos":[0,185],"source":"A <xref href=\"System.Double\"></xref> that represents the width, in pixels, of the left side of the bounding rectangle for this instance of <xref href=\"System.Windows.Thickness\"></xref>."},{"content":"a pixel is equal to 1/96 on an inch.","pos":[186,222]},{"content":"The default is 0.","pos":[223,240]}]}],"pos":[17447,17688],"yaml":true},{"content":"Compares the value of two <xref href=\"System.Windows.Thickness\"></xref> structures for equality.","nodes":[{"pos":[0,96],"content":"Compares the value of two <ph id=\"ph1\">&lt;xref href=\"System.Windows.Thickness\"&gt;&lt;/xref&gt;</ph> structures for equality.","source":"Compares the value of two <xref href=\"System.Windows.Thickness\"></xref> structures for equality."}],"pos":[18843,18940],"yaml":true},{"content":"Testing for equality on two floating-point values that are logically equivalent might fail because of precision errors that can accumulate as the values are operated on.","nodes":[{"pos":[0,169],"content":"Testing for equality on two floating-point values that are logically equivalent might fail because of precision errors that can accumulate as the values are operated on.","nodes":[{"content":"Testing for equality on two floating-point values that are logically equivalent might fail because of precision errors that can accumulate as the values are operated on.","pos":[0,169]}]}],"pos":[18951,19121],"yaml":true,"extradata":"MT"},{"content":"The first structure to compare.","nodes":[{"pos":[0,31],"content":"The first structure to compare.","nodes":[{"content":"The first structure to compare.","pos":[0,31]}]}],"pos":[19320,19352],"yaml":true},{"content":"The other structure to compare.","nodes":[{"pos":[0,31],"content":"The other structure to compare.","nodes":[{"content":"The other structure to compare.","pos":[0,31]}]}],"pos":[19421,19453],"yaml":true},{"content":"`true` if the two instances of <xref href=\"System.Windows.Thickness\"></xref> are equal; otherwise, `false`.","nodes":[{"pos":[0,107],"content":"<ph id=\"ph1\">`true`</ph> if the two instances of <ph id=\"ph2\">&lt;xref href=\"System.Windows.Thickness\"&gt;&lt;/xref&gt;</ph> are equal; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the two instances of <xref href=\"System.Windows.Thickness\"></xref> are equal; otherwise, `false`."}],"pos":[19511,19621],"yaml":true},{"content":"Compares two <xref href=\"System.Windows.Thickness\"></xref> structures for inequality.","nodes":[{"pos":[0,85],"content":"Compares two <ph id=\"ph1\">&lt;xref href=\"System.Windows.Thickness\"&gt;&lt;/xref&gt;</ph> structures for inequality.","source":"Compares two <xref href=\"System.Windows.Thickness\"></xref> structures for inequality."}],"pos":[20795,20881],"yaml":true},{"content":"Testing for equality or inequality on two floating-point values that are logically equivalent might fail because of precision errors that can accumulate as the values are operated on.","nodes":[{"pos":[0,183],"content":"Testing for equality or inequality on two floating-point values that are logically equivalent might fail because of precision errors that can accumulate as the values are operated on.","nodes":[{"content":"Testing for equality or inequality on two floating-point values that are logically equivalent might fail because of precision errors that can accumulate as the values are operated on.","pos":[0,183]}]}],"pos":[20892,21076],"yaml":true,"extradata":"MT"},{"content":"The first structure to compare.","nodes":[{"pos":[0,31],"content":"The first structure to compare.","nodes":[{"content":"The first structure to compare.","pos":[0,31]}]}],"pos":[21277,21309],"yaml":true},{"content":"The other structure to compare.","nodes":[{"pos":[0,31],"content":"The other structure to compare.","nodes":[{"content":"The other structure to compare.","pos":[0,31]}]}],"pos":[21378,21410],"yaml":true},{"content":"`true` if the two instances of <xref href=\"System.Windows.Thickness\"></xref> are not equal; otherwise, `false`.","nodes":[{"pos":[0,111],"content":"<ph id=\"ph1\">`true`</ph> if the two instances of <ph id=\"ph2\">&lt;xref href=\"System.Windows.Thickness\"&gt;&lt;/xref&gt;</ph> are not equal; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the two instances of <xref href=\"System.Windows.Thickness\"></xref> are not equal; otherwise, `false`."}],"pos":[21468,21582],"yaml":true},{"content":"Gets or sets the width, in pixels, of the right side of the bounding rectangle.","nodes":[{"pos":[0,79],"content":"Gets or sets the width, in pixels, of the right side of the bounding rectangle.","nodes":[{"content":"Gets or sets the width, in pixels, of the right side of the bounding rectangle.","pos":[0,79]}]}],"pos":[22491,22571],"yaml":true},{"content":"A <xref href=\"System.Double\"></xref> that represents the width, in pixels, of the right side of the bounding rectangle for this instance of <xref href=\"System.Windows.Thickness\"></xref>. A pixel is equal to 1/96 of an inch. The default is 0.","nodes":[{"pos":[0,241],"content":"A <xref href=\"System.Double\"></xref> that represents the width, in pixels, of the right side of the bounding rectangle for this instance of <xref href=\"System.Windows.Thickness\"></xref>. A pixel is equal to 1/96 of an inch. The default is 0.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Double\"&gt;&lt;/xref&gt;</ph> that represents the width, in pixels, of the right side of the bounding rectangle for this instance of <ph id=\"ph2\">&lt;xref href=\"System.Windows.Thickness\"&gt;&lt;/xref&gt;</ph>.","pos":[0,186],"source":"A <xref href=\"System.Double\"></xref> that represents the width, in pixels, of the right side of the bounding rectangle for this instance of <xref href=\"System.Windows.Thickness\"></xref>."},{"content":"A pixel is equal to 1/96 of an inch.","pos":[187,223]},{"content":"The default is 0.","pos":[224,241]}]}],"pos":[23267,23509],"yaml":true},{"content":"Gets or sets the width, in pixels, of the upper side of the bounding rectangle.","nodes":[{"pos":[0,79],"content":"Gets or sets the width, in pixels, of the upper side of the bounding rectangle.","nodes":[{"content":"Gets or sets the width, in pixels, of the upper side of the bounding rectangle.","pos":[0,79]}]}],"pos":[24376,24456],"yaml":true},{"content":"A <xref href=\"System.Double\"></xref> that represents the width, in pixels, of the upper side of the bounding rectangle for this instance of <xref href=\"System.Windows.Thickness\"></xref>. A pixel is equal to 1/96 of an inch. The default is 0.","nodes":[{"pos":[0,241],"content":"A <xref href=\"System.Double\"></xref> that represents the width, in pixels, of the upper side of the bounding rectangle for this instance of <xref href=\"System.Windows.Thickness\"></xref>. A pixel is equal to 1/96 of an inch. The default is 0.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Double\"&gt;&lt;/xref&gt;</ph> that represents the width, in pixels, of the upper side of the bounding rectangle for this instance of <ph id=\"ph2\">&lt;xref href=\"System.Windows.Thickness\"&gt;&lt;/xref&gt;</ph>.","pos":[0,186],"source":"A <xref href=\"System.Double\"></xref> that represents the width, in pixels, of the upper side of the bounding rectangle for this instance of <xref href=\"System.Windows.Thickness\"></xref>."},{"content":"A pixel is equal to 1/96 of an inch.","pos":[187,223]},{"content":"The default is 0.","pos":[224,241]}]}],"pos":[25148,25390],"yaml":true},{"content":"Returns the string representation of the <xref href=\"System.Windows.Thickness\"></xref> structure.","nodes":[{"pos":[0,97],"content":"Returns the string representation of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Thickness\"&gt;&lt;/xref&gt;</ph> structure.","source":"Returns the string representation of the <xref href=\"System.Windows.Thickness\"></xref> structure."}],"pos":[26311,26409],"yaml":true},{"content":"A <xref href=\"System.String\"></xref> that represents the <xref href=\"System.Windows.Thickness\"></xref> value.","nodes":[{"pos":[0,109],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that represents the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Thickness\"&gt;&lt;/xref&gt;</ph> value.","source":"A <xref href=\"System.String\"></xref> that represents the <xref href=\"System.Windows.Thickness\"></xref> value."}],"pos":[26544,26654],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Thickness\n  commentId: T:System.Windows.Thickness\n  id: Thickness\n  children:\n  - System.Windows.Thickness.#ctor(System.Double)\n  - System.Windows.Thickness.#ctor(System.Double,System.Double,System.Double,System.Double)\n  - System.Windows.Thickness.Bottom\n  - System.Windows.Thickness.Equals(System.Object)\n  - System.Windows.Thickness.Equals(System.Windows.Thickness)\n  - System.Windows.Thickness.GetHashCode\n  - System.Windows.Thickness.Left\n  - System.Windows.Thickness.op_Equality(System.Windows.Thickness,System.Windows.Thickness)\n  - System.Windows.Thickness.op_Inequality(System.Windows.Thickness,System.Windows.Thickness)\n  - System.Windows.Thickness.Right\n  - System.Windows.Thickness.Top\n  - System.Windows.Thickness.ToString\n  langs:\n  - csharp\n  name: Thickness\n  nameWithType: Thickness\n  fullName: System.Windows.Thickness\n  type: Struct\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Describes the thickness of a frame around a rectangle. Four <xref href=\"System.Double\"></xref> values describe the <xref href=\"System.Windows.Thickness.Left\"></xref>, <xref href=\"System.Windows.Thickness.Top\"></xref>, <xref href=\"System.Windows.Thickness.Right\"></xref>, and <xref href=\"System.Windows.Thickness.Bottom\"></xref> sides of the rectangle, respectively.\n  remarks: \"You can specify <xref:System.Windows.Thickness> values in two ways. If you pass four <xref:System.Double> values to the structure, they represent the <xref:System.Windows.Thickness.Left%2A>, <xref:System.Windows.Thickness.Top%2A>, <xref:System.Windows.Thickness.Right%2A> and <xref:System.Windows.Thickness.Bottom%2A> sides, respectively, of the bounding rectangle. You can also supply a single value, which applies a uniform value to all four sides of the bounding rectangle.  \\n  \\n<a name=\\\"xamlAttributeUsage_Thickness\\\"></a>   \\n## XAML Attribute Usage  \\n  \\n```  \\n<object property=\\\"left\\\"/>  \\n- or -  \\n<object property=\\\"left,top\\\"/>  \\n- or -  \\n<object property=\\\" left,top,right,bottom\\\" ... />  \\n```  \\n  \\n<a name=\\\"xamlValues_Thickness\\\"></a>   \\n## XAML Values  \\n *left*  \\n The left edge of the frame, described as either a <xref:System.Double> value that specifies a [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)] measure, or as a *qualifiedDouble* (see below). If only a single measure is specified, that measure is applied to ALL of the left,top,right,bottom values of a <xref:System.Windows.Thickness>. If only a pair of left,top measures are specified, these measures are applied symmetrically to a <xref:System.Windows.Thickness>: the left value is used for right; the top value is used for bottom.  \\n  \\n *top*  \\n The top edge of the frame, described as either a <xref:System.Double> value that specifies a [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)] measure, or as a *qualifiedDouble* (see below). If only a pair of left,top measures are specified, these measures are applied symmetrically to a <xref:System.Windows.Thickness>: the left value is used for right; the top value is used for bottom.  \\n  \\n *right*  \\n The right edge of the frame, described as either a <xref:System.Double> value that specifies a [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)] measure, or as a *qualifiedDouble* (see below). If left unspecified, will use the left value.  \\n  \\n *bottom*  \\n The bottom edge of the frame, described as either a <xref:System.Double> value that specifies a [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)] measure, or as a *qualifiedDouble* (see below). If left unspecified, will use the left value.  \\n  \\n *qualifiedDouble*  \\n A *double* value as described above for any of the measures, followed by one of the following unit declaration strings: `px`, `in`, `cm`, `pt`.  \\n  \\n `px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  \\n  \\n `in` is inches; 1in==96px  \\n  \\n `cm` is centimeters; 1cm==(96/2.54) px  \\n  \\n `pt` is points; 1pt==(96/72) px  \\n  \\n> [!NOTE]\\n>  Values need not include the decimal point explicitly when specified as a string. The string \\\"1\\\" provided in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] evaluates to a value of 1.0 when referenced in code.\"\n  example:\n  - \"The following example shows how to create an instance of a <xref:System.Windows.Thickness> structure and set its properties by using [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] and code.  \\n  \\n [!code-csharp[ThicknessStruct#2](~/samples/snippets/csharp/VS_Snippets_Wpf/ThicknessStruct/CSharp/ThicknessSamp.cs#2)]\\n [!code-vb[ThicknessStruct#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ThicknessStruct/VisualBasic/ThicknessSampVB.vb#2)]\\n [!code-xml[ThicknessStruct#2](~/samples/snippets/xaml/VS_Snippets_Wpf/ThicknessStruct/XAML/default.xaml#2)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.Windows.ThicknessConverter))]\n\n      [System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)]\n\n      public struct Thickness : IEquatable<System.Windows.Thickness>\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements:\n  - System.IEquatable{System.Windows.Thickness}\n  attributes:\n  - type: System.ComponentModel.TypeConverterAttribute\n  - type: System.Windows.LocalizabilityAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Thickness.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Thickness.#ctor(System.Double)\n  commentId: M:System.Windows.Thickness.#ctor(System.Double)\n  id: '#ctor(System.Double)'\n  parent: System.Windows.Thickness\n  langs:\n  - csharp\n  name: Thickness(Double)\n  nameWithType: Thickness.Thickness(Double)\n  fullName: Thickness.Thickness(Double)\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Thickness\"></xref> structure that has the specified uniform length on each side.\n  syntax:\n    content: public Thickness (double uniformLength);\n    parameters:\n    - id: uniformLength\n      type: System.Double\n      description: The uniform length applied to all four sides of the bounding rectangle.\n  overload: System.Windows.Thickness.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Thickness.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Thickness.#ctor(System.Double,System.Double,System.Double,System.Double)\n  commentId: M:System.Windows.Thickness.#ctor(System.Double,System.Double,System.Double,System.Double)\n  id: '#ctor(System.Double,System.Double,System.Double,System.Double)'\n  parent: System.Windows.Thickness\n  langs:\n  - csharp\n  name: Thickness(Double, Double, Double, Double)\n  nameWithType: Thickness.Thickness(Double, Double, Double, Double)\n  fullName: Thickness.Thickness(Double, Double, Double, Double)\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Thickness\"></xref> structure that has specific lengths (supplied as a <xref href=\"System.Double\"></xref>) applied to each side of the rectangle.\n  remarks: ''\n  example:\n  - \"The following example shows how to create an instance of a <xref:System.Windows.Thickness> structure by using code.  \\n  \\n [!code-csharp[ThicknessStruct#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ThicknessStruct/CSharp/ThicknessSamp.cs#1)]\\n [!code-vb[ThicknessStruct#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ThicknessStruct/VisualBasic/ThicknessSampVB.vb#1)]\\n [!code-xml[ThicknessStruct#1](~/samples/snippets/xaml/VS_Snippets_Wpf/ThicknessStruct/XAML/default.xaml#1)]\"\n  syntax:\n    content: public Thickness (double left, double top, double right, double bottom);\n    parameters:\n    - id: left\n      type: System.Double\n      description: The thickness for the left side of the rectangle.\n    - id: top\n      type: System.Double\n      description: The thickness for the upper side of the rectangle.\n    - id: right\n      type: System.Double\n      description: The thickness for the right side of the rectangle\n    - id: bottom\n      type: System.Double\n      description: The thickness for the lower side of the rectangle.\n  overload: System.Windows.Thickness.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Thickness.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Thickness.Bottom\n  commentId: P:System.Windows.Thickness.Bottom\n  id: Bottom\n  parent: System.Windows.Thickness\n  langs:\n  - csharp\n  name: Bottom\n  nameWithType: Thickness.Bottom\n  fullName: Thickness.Bottom\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets or sets the width, in pixels, of the lower side of the bounding rectangle.\n  remarks: ''\n  example:\n  - \"The following example shows how to set the value of the <xref:System.Windows.Thickness.Bottom%2A> property by using [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] and code.  \\n  \\n [!code-csharp[ThicknessStruct#2](~/samples/snippets/csharp/VS_Snippets_Wpf/ThicknessStruct/CSharp/ThicknessSamp.cs#2)]\\n [!code-vb[ThicknessStruct#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ThicknessStruct/VisualBasic/ThicknessSampVB.vb#2)]\\n [!code-xml[ThicknessStruct#2](~/samples/snippets/xaml/VS_Snippets_Wpf/ThicknessStruct/XAML/default.xaml#2)]\"\n  syntax:\n    content: public double Bottom { get; set; }\n    return:\n      type: System.Double\n      description: A <xref href=\"System.Double\"></xref> that represents the width, in pixels, of the lower side of the bounding rectangle for this instance of <xref href=\"System.Windows.Thickness\"></xref>. A pixel is equal to 1/96 of an inch. The default is 0.\n  overload: System.Windows.Thickness.Bottom*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Thickness.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Thickness.Equals(System.Object)\n  commentId: M:System.Windows.Thickness.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Windows.Thickness\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: Thickness.Equals(Object)\n  fullName: Thickness.Equals(Object)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Compares this <xref href=\"System.Windows.Thickness\"></xref> structure to another <xref href=\"System.Object\"></xref> for equality.\n  remarks: Testing for equality on two floating-point values that are logically equivalent might fail because of precision errors that can accumulate as the values are operated on.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object to compare.\n    return:\n      type: System.Boolean\n      description: '`true` if the two objects are equal; otherwise, `false`.'\n  overload: System.Windows.Thickness.Equals*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Thickness.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Thickness.Equals(System.Windows.Thickness)\n  commentId: M:System.Windows.Thickness.Equals(System.Windows.Thickness)\n  id: Equals(System.Windows.Thickness)\n  parent: System.Windows.Thickness\n  langs:\n  - csharp\n  name: Equals(Thickness)\n  nameWithType: Thickness.Equals(Thickness)\n  fullName: Thickness.Equals(Thickness)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Compares this <xref href=\"System.Windows.Thickness\"></xref> structure to another <xref href=\"System.Windows.Thickness\"></xref> structure for equality.\n  remarks: Testing for equality or inequality on two floating-point values that are logically equivalent might fail because of precision errors that can accumulate as the values are operated on.\n  syntax:\n    content: public bool Equals (System.Windows.Thickness thickness);\n    parameters:\n    - id: thickness\n      type: System.Windows.Thickness\n      description: An instance of <xref href=\"System.Windows.Thickness\"></xref> to compare for equality.\n    return:\n      type: System.Boolean\n      description: '`true` if the two instances of <xref href=\"System.Windows.Thickness\"></xref> are equal; otherwise, `false`.'\n  overload: System.Windows.Thickness.Equals*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Thickness.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Thickness.GetHashCode\n  commentId: M:System.Windows.Thickness.GetHashCode\n  id: GetHashCode\n  parent: System.Windows.Thickness\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: Thickness.GetHashCode()\n  fullName: Thickness.GetHashCode()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Returns the hash code of the structure.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A hash code for this instance of <xref href=\"System.Windows.Thickness\"></xref>.\n  overload: System.Windows.Thickness.GetHashCode*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Thickness.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Thickness.Left\n  commentId: P:System.Windows.Thickness.Left\n  id: Left\n  parent: System.Windows.Thickness\n  langs:\n  - csharp\n  name: Left\n  nameWithType: Thickness.Left\n  fullName: Thickness.Left\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets or sets the width, in pixels, of the left side of the bounding rectangle.\n  remarks: ''\n  example:\n  - \"The following example shows how to set the value of the <xref:System.Windows.Thickness.Left%2A> property by using [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] and code.  \\n  \\n [!code-csharp[ThicknessStruct#2](~/samples/snippets/csharp/VS_Snippets_Wpf/ThicknessStruct/CSharp/ThicknessSamp.cs#2)]\\n [!code-vb[ThicknessStruct#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ThicknessStruct/VisualBasic/ThicknessSampVB.vb#2)]\\n [!code-xml[ThicknessStruct#2](~/samples/snippets/xaml/VS_Snippets_Wpf/ThicknessStruct/XAML/default.xaml#2)]\"\n  syntax:\n    content: public double Left { get; set; }\n    return:\n      type: System.Double\n      description: A <xref href=\"System.Double\"></xref> that represents the width, in pixels, of the left side of the bounding rectangle for this instance of <xref href=\"System.Windows.Thickness\"></xref>. a pixel is equal to 1/96 on an inch. The default is 0.\n  overload: System.Windows.Thickness.Left*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Thickness.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Thickness.op_Equality(System.Windows.Thickness,System.Windows.Thickness)\n  commentId: M:System.Windows.Thickness.op_Equality(System.Windows.Thickness,System.Windows.Thickness)\n  id: op_Equality(System.Windows.Thickness,System.Windows.Thickness)\n  parent: System.Windows.Thickness\n  langs:\n  - csharp\n  name: op_Equality(Thickness, Thickness)\n  nameWithType: Thickness.op_Equality(Thickness, Thickness)\n  fullName: Thickness.op_Equality(Thickness, Thickness)\n  type: Operator\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Compares the value of two <xref href=\"System.Windows.Thickness\"></xref> structures for equality.\n  remarks: Testing for equality on two floating-point values that are logically equivalent might fail because of precision errors that can accumulate as the values are operated on.\n  syntax:\n    content: public static bool op_Equality (System.Windows.Thickness t1, System.Windows.Thickness t2);\n    parameters:\n    - id: t1\n      type: System.Windows.Thickness\n      description: The first structure to compare.\n    - id: t2\n      type: System.Windows.Thickness\n      description: The other structure to compare.\n    return:\n      type: System.Boolean\n      description: '`true` if the two instances of <xref href=\"System.Windows.Thickness\"></xref> are equal; otherwise, `false`.'\n  overload: System.Windows.Thickness.op_Equality*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Thickness.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Thickness.op_Inequality(System.Windows.Thickness,System.Windows.Thickness)\n  commentId: M:System.Windows.Thickness.op_Inequality(System.Windows.Thickness,System.Windows.Thickness)\n  id: op_Inequality(System.Windows.Thickness,System.Windows.Thickness)\n  parent: System.Windows.Thickness\n  langs:\n  - csharp\n  name: op_Inequality(Thickness, Thickness)\n  nameWithType: Thickness.op_Inequality(Thickness, Thickness)\n  fullName: Thickness.op_Inequality(Thickness, Thickness)\n  type: Operator\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Compares two <xref href=\"System.Windows.Thickness\"></xref> structures for inequality.\n  remarks: Testing for equality or inequality on two floating-point values that are logically equivalent might fail because of precision errors that can accumulate as the values are operated on.\n  syntax:\n    content: public static bool op_Inequality (System.Windows.Thickness t1, System.Windows.Thickness t2);\n    parameters:\n    - id: t1\n      type: System.Windows.Thickness\n      description: The first structure to compare.\n    - id: t2\n      type: System.Windows.Thickness\n      description: The other structure to compare.\n    return:\n      type: System.Boolean\n      description: '`true` if the two instances of <xref href=\"System.Windows.Thickness\"></xref> are not equal; otherwise, `false`.'\n  overload: System.Windows.Thickness.op_Inequality*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Thickness.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Thickness.Right\n  commentId: P:System.Windows.Thickness.Right\n  id: Right\n  parent: System.Windows.Thickness\n  langs:\n  - csharp\n  name: Right\n  nameWithType: Thickness.Right\n  fullName: Thickness.Right\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets or sets the width, in pixels, of the right side of the bounding rectangle.\n  remarks: ''\n  example:\n  - \"The following example shows how to set the value of the <xref:System.Windows.Thickness.Right%2A> property by using [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] and code.  \\n  \\n [!code-csharp[ThicknessStruct#2](~/samples/snippets/csharp/VS_Snippets_Wpf/ThicknessStruct/CSharp/ThicknessSamp.cs#2)]\\n [!code-vb[ThicknessStruct#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ThicknessStruct/VisualBasic/ThicknessSampVB.vb#2)]\\n [!code-xml[ThicknessStruct#2](~/samples/snippets/xaml/VS_Snippets_Wpf/ThicknessStruct/XAML/default.xaml#2)]\"\n  syntax:\n    content: public double Right { get; set; }\n    return:\n      type: System.Double\n      description: A <xref href=\"System.Double\"></xref> that represents the width, in pixels, of the right side of the bounding rectangle for this instance of <xref href=\"System.Windows.Thickness\"></xref>. A pixel is equal to 1/96 of an inch. The default is 0.\n  overload: System.Windows.Thickness.Right*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Thickness.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Thickness.Top\n  commentId: P:System.Windows.Thickness.Top\n  id: Top\n  parent: System.Windows.Thickness\n  langs:\n  - csharp\n  name: Top\n  nameWithType: Thickness.Top\n  fullName: Thickness.Top\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets or sets the width, in pixels, of the upper side of the bounding rectangle.\n  remarks: ''\n  example:\n  - \"The following example shows how to set the value of the <xref:System.Windows.Thickness.Top%2A> property by using [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] and code.  \\n  \\n [!code-csharp[ThicknessStruct#2](~/samples/snippets/csharp/VS_Snippets_Wpf/ThicknessStruct/CSharp/ThicknessSamp.cs#2)]\\n [!code-vb[ThicknessStruct#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ThicknessStruct/VisualBasic/ThicknessSampVB.vb#2)]\\n [!code-xml[ThicknessStruct#2](~/samples/snippets/xaml/VS_Snippets_Wpf/ThicknessStruct/XAML/default.xaml#2)]\"\n  syntax:\n    content: public double Top { get; set; }\n    return:\n      type: System.Double\n      description: A <xref href=\"System.Double\"></xref> that represents the width, in pixels, of the upper side of the bounding rectangle for this instance of <xref href=\"System.Windows.Thickness\"></xref>. A pixel is equal to 1/96 of an inch. The default is 0.\n  overload: System.Windows.Thickness.Top*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Thickness.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Thickness.ToString\n  commentId: M:System.Windows.Thickness.ToString\n  id: ToString\n  parent: System.Windows.Thickness\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: Thickness.ToString()\n  fullName: Thickness.ToString()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Returns the string representation of the <xref href=\"System.Windows.Thickness\"></xref> structure.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> that represents the <xref href=\"System.Windows.Thickness\"></xref> value.\n  overload: System.Windows.Thickness.ToString*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Thickness.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  nameWithType: ValueType\n  fullName: System.ValueType\n- uid: System.Windows.Thickness.#ctor(System.Double)\n  parent: System.Windows.Thickness\n  isExternal: false\n  name: Thickness(Double)\n  nameWithType: Thickness.Thickness(Double)\n  fullName: Thickness.Thickness(Double)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Thickness.#ctor(System.Double,System.Double,System.Double,System.Double)\n  parent: System.Windows.Thickness\n  isExternal: false\n  name: Thickness(Double, Double, Double, Double)\n  nameWithType: Thickness.Thickness(Double, Double, Double, Double)\n  fullName: Thickness.Thickness(Double, Double, Double, Double)\n- uid: System.Windows.Thickness.Bottom\n  parent: System.Windows.Thickness\n  isExternal: false\n  name: Bottom\n  nameWithType: Thickness.Bottom\n  fullName: Thickness.Bottom\n- uid: System.Windows.Thickness.Equals(System.Object)\n  parent: System.Windows.Thickness\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Thickness.Equals(Object)\n  fullName: Thickness.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Thickness.Equals(System.Windows.Thickness)\n  parent: System.Windows.Thickness\n  isExternal: false\n  name: Equals(Thickness)\n  nameWithType: Thickness.Equals(Thickness)\n  fullName: Thickness.Equals(Thickness)\n- uid: System.Windows.Thickness\n  parent: System.Windows\n  isExternal: false\n  name: Thickness\n  nameWithType: Thickness\n  fullName: System.Windows.Thickness\n- uid: System.Windows.Thickness.GetHashCode\n  parent: System.Windows.Thickness\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Thickness.GetHashCode()\n  fullName: Thickness.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Thickness.Left\n  parent: System.Windows.Thickness\n  isExternal: false\n  name: Left\n  nameWithType: Thickness.Left\n  fullName: Thickness.Left\n- uid: System.Windows.Thickness.op_Equality(System.Windows.Thickness,System.Windows.Thickness)\n  parent: System.Windows.Thickness\n  isExternal: false\n  name: op_Equality(Thickness, Thickness)\n  nameWithType: Thickness.op_Equality(Thickness, Thickness)\n  fullName: Thickness.op_Equality(Thickness, Thickness)\n- uid: System.Windows.Thickness.op_Inequality(System.Windows.Thickness,System.Windows.Thickness)\n  parent: System.Windows.Thickness\n  isExternal: false\n  name: op_Inequality(Thickness, Thickness)\n  nameWithType: Thickness.op_Inequality(Thickness, Thickness)\n  fullName: Thickness.op_Inequality(Thickness, Thickness)\n- uid: System.Windows.Thickness.Right\n  parent: System.Windows.Thickness\n  isExternal: false\n  name: Right\n  nameWithType: Thickness.Right\n  fullName: Thickness.Right\n- uid: System.Windows.Thickness.Top\n  parent: System.Windows.Thickness\n  isExternal: false\n  name: Top\n  nameWithType: Thickness.Top\n  fullName: Thickness.Top\n- uid: System.Windows.Thickness.ToString\n  parent: System.Windows.Thickness\n  isExternal: false\n  name: ToString()\n  nameWithType: Thickness.ToString()\n  fullName: Thickness.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Thickness.#ctor*\n  parent: System.Windows.Thickness\n  isExternal: false\n  name: Thickness\n  nameWithType: Thickness.Thickness\n  fullName: Thickness.Thickness\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Thickness.xml\n- uid: System.Windows.Thickness.Bottom*\n  parent: System.Windows.Thickness\n  isExternal: false\n  name: Bottom\n  nameWithType: Thickness.Bottom\n  fullName: Thickness.Bottom\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Thickness.xml\n- uid: System.Windows.Thickness.Equals*\n  parent: System.Windows.Thickness\n  isExternal: false\n  name: Equals\n  nameWithType: Thickness.Equals\n  fullName: Thickness.Equals\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Thickness.xml\n- uid: System.Windows.Thickness.GetHashCode*\n  parent: System.Windows.Thickness\n  isExternal: false\n  name: GetHashCode\n  nameWithType: Thickness.GetHashCode\n  fullName: Thickness.GetHashCode\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Thickness.xml\n- uid: System.Windows.Thickness.Left*\n  parent: System.Windows.Thickness\n  isExternal: false\n  name: Left\n  nameWithType: Thickness.Left\n  fullName: Thickness.Left\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Thickness.xml\n- uid: System.Windows.Thickness.op_Equality*\n  parent: System.Windows.Thickness\n  isExternal: false\n  name: op_Equality\n  nameWithType: Thickness.op_Equality\n  fullName: Thickness.op_Equality\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Thickness.xml\n- uid: System.Windows.Thickness.op_Inequality*\n  parent: System.Windows.Thickness\n  isExternal: false\n  name: op_Inequality\n  nameWithType: Thickness.op_Inequality\n  fullName: Thickness.op_Inequality\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Thickness.xml\n- uid: System.Windows.Thickness.Right*\n  parent: System.Windows.Thickness\n  isExternal: false\n  name: Right\n  nameWithType: Thickness.Right\n  fullName: Thickness.Right\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Thickness.xml\n- uid: System.Windows.Thickness.Top*\n  parent: System.Windows.Thickness\n  isExternal: false\n  name: Top\n  nameWithType: Thickness.Top\n  fullName: Thickness.Top\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Thickness.xml\n- uid: System.Windows.Thickness.ToString*\n  parent: System.Windows.Thickness\n  isExternal: false\n  name: ToString\n  nameWithType: Thickness.ToString\n  fullName: Thickness.ToString\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Thickness.xml\n- uid: System.IEquatable`1\n  name: IEquatable<T>\n  nameWithType: IEquatable<T>\n  fullName: System.IEquatable<T>\n- uid: System.IEquatable{System.Windows.Thickness}\n  parent: System\n  isExternal: false\n  name: IEquatable<Thickness>\n  nameWithType: IEquatable<Thickness>\n  fullName: System.IEquatable<System.Windows.Thickness>\n  spec.csharp:\n  - uid: System.IEquatable`1\n    name: IEquatable\n    nameWithType: IEquatable\n    fullName: System.IEquatable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Windows.Thickness\n    name: Thickness\n    nameWithType: Thickness\n    fullName: System.Windows.Thickness\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n"}