{"nodes":[{"content":"Represents a rule for decorating a set of matching types with Managed Extensibility Framework (MEF) attributes.","nodes":[{"pos":[0,111],"content":"Represents a rule for decorating a set of matching types with Managed Extensibility Framework (MEF) attributes.","nodes":[{"content":"Represents a rule for decorating a set of matching types with Managed Extensibility Framework (MEF) attributes.","pos":[0,111]}]}],"pos":[3607,3719],"yaml":true},{"content":"Adds metadata to the matching types.","nodes":[{"pos":[0,36],"content":"Adds metadata to the matching types.","nodes":[{"content":"Adds metadata to the matching types.","pos":[0,36]}]}],"pos":[5514,5551],"yaml":true},{"content":"The metadata key.","nodes":[{"pos":[0,17],"content":"The metadata key.","nodes":[{"content":"The metadata key.","pos":[0,17]}]}],"pos":[5771,5789],"yaml":true},{"content":"A function that returns the metadata value, given the target type.","nodes":[{"pos":[0,66],"content":"A function that returns the metadata value, given the target type.","nodes":[{"content":"A function that returns the metadata value, given the target type.","pos":[0,66]}]}],"pos":[5878,5945],"yaml":true},{"content":"The current object, to allow chaining.","nodes":[{"pos":[0,38],"content":"The current object, to allow chaining.","nodes":[{"content":"The current object, to allow chaining.","pos":[0,38]}]}],"pos":[6047,6086],"yaml":true},{"content":"Adds metadata to the matching types.","nodes":[{"pos":[0,36],"content":"Adds metadata to the matching types.","nodes":[{"content":"Adds metadata to the matching types.","pos":[0,36]}]}],"pos":[7399,7436],"yaml":true},{"content":"The metadata key.","nodes":[{"pos":[0,17],"content":"The metadata key.","nodes":[{"content":"The metadata key.","pos":[0,17]}]}],"pos":[7642,7660],"yaml":true},{"content":"The metadata value.","nodes":[{"pos":[0,19],"content":"The metadata value.","nodes":[{"content":"The metadata value.","pos":[0,19]}]}],"pos":[7721,7741],"yaml":true},{"content":"The current object, to allow chaining.","nodes":[{"pos":[0,38],"content":"The current object, to allow chaining.","nodes":[{"content":"The current object, to allow chaining.","pos":[0,38]}]}],"pos":[7843,7882],"yaml":true},{"content":"Specifies that matching types should be exported.","nodes":[{"pos":[0,49],"content":"Specifies that matching types should be exported.","nodes":[{"content":"Specifies that matching types should be exported.","pos":[0,49]}]}],"pos":[9036,9086],"yaml":true},{"content":"The current object, to allow chaining.","nodes":[{"pos":[0,38],"content":"The current object, to allow chaining.","nodes":[{"content":"The current object, to allow chaining.","pos":[0,38]}]}],"pos":[9307,9346],"yaml":true},{"content":"Specifies that matching types should be exported, and provides configuration information for the resulting exports.","nodes":[{"pos":[0,115],"content":"Specifies that matching types should be exported, and provides configuration information for the resulting exports.","nodes":[{"content":"Specifies that matching types should be exported, and provides configuration information for the resulting exports.","pos":[0,115]}]}],"pos":[10789,10905],"yaml":true},{"content":"An object that contains configuration information about the export. The default value is `null`.","nodes":[{"pos":[0,96],"content":"An object that contains configuration information about the export. The default value is `null`.","nodes":[{"content":"An object that contains configuration information about the export.","pos":[0,67]},{"content":"The default value is <ph id=\"ph1\">`null`</ph>.","pos":[68,96],"source":" The default value is `null`."}]}],"pos":[11246,11343],"yaml":true},{"content":"The current object, to allow chaining.","nodes":[{"pos":[0,38],"content":"The current object, to allow chaining.","nodes":[{"content":"The current object, to allow chaining.","pos":[0,38]}]}],"pos":[11445,11484],"yaml":true},{"content":"Specifies that matching types should be exported by using the specified contract type.","nodes":[{"pos":[0,86],"content":"Specifies that matching types should be exported by using the specified contract type.","nodes":[{"content":"Specifies that matching types should be exported by using the specified contract type.","pos":[0,86]}]}],"pos":[12651,12738],"yaml":true},{"content":"The type of contract.","nodes":[{"pos":[0,21],"content":"The type of contract.","nodes":[{"content":"The type of contract.","pos":[0,21]}]}],"pos":[12911,12933],"yaml":true},{"content":"The current object, to allow chaining.","nodes":[{"pos":[0,38],"content":"The current object, to allow chaining.","nodes":[{"content":"The current object, to allow chaining.","pos":[0,38]}]}],"pos":[13035,13074],"yaml":true},{"content":"Specifies that matching types should be exported by using the specified contract type, and provides configuration information for the resulting exports.","nodes":[{"pos":[0,152],"content":"Specifies that matching types should be exported by using the specified contract type, and provides configuration information for the resulting exports.","nodes":[{"content":"Specifies that matching types should be exported by using the specified contract type, and provides configuration information for the resulting exports.","pos":[0,152]}]}],"pos":[14538,14691],"yaml":true},{"content":"An object that contains configuration information about the export. The default value is `null`.","nodes":[{"pos":[0,96],"content":"An object that contains configuration information about the export. The default value is `null`.","nodes":[{"content":"An object that contains configuration information about the export.","pos":[0,67]},{"content":"The default value is <ph id=\"ph1\">`null`</ph>.","pos":[68,96],"source":" The default value is `null`."}]}],"pos":[15035,15132],"yaml":true},{"content":"The type of contract.","nodes":[{"pos":[0,21],"content":"The type of contract.","nodes":[{"content":"The type of contract.","pos":[0,21]}]}],"pos":[15183,15205],"yaml":true},{"content":"The current object, to allow chaining.","nodes":[{"pos":[0,38],"content":"The current object, to allow chaining.","nodes":[{"content":"The current object, to allow chaining.","pos":[0,38]}]}],"pos":[15307,15346],"yaml":true},{"content":"Specifies that all the interfaces of the matching types should be exported.","nodes":[{"pos":[0,75],"content":"Specifies that all the interfaces of the matching types should be exported.","nodes":[{"content":"Specifies that all the interfaces of the matching types should be exported.","pos":[0,75]}]}],"pos":[16558,16634],"yaml":true},{"content":"The current object, to allow chaining.","nodes":[{"pos":[0,38],"content":"The current object, to allow chaining.","nodes":[{"content":"The current object, to allow chaining.","pos":[0,38]}]}],"pos":[16865,16904],"yaml":true},{"content":"Specifies a set of interfaces on the matching types that should be exported.","nodes":[{"pos":[0,76],"content":"Specifies a set of interfaces on the matching types that should be exported.","nodes":[{"content":"Specifies a set of interfaces on the matching types that should be exported.","pos":[0,76]}]}],"pos":[18261,18338],"yaml":true},{"content":"This method will not export <xref:System.IDisposable> or <xref:System.ComponentModel.Composition.IPartImportsSatisfiedNotification> objects.","nodes":[{"pos":[0,140],"content":"This method will not export <xref:System.IDisposable> or <xref:System.ComponentModel.Composition.IPartImportsSatisfiedNotification> objects.","nodes":[{"content":"This method will not export <ph id=\"ph1\">&lt;xref:System.IDisposable&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.ComponentModel.Composition.IPartImportsSatisfiedNotification&gt;</ph> objects.","pos":[0,140],"source":"This method will not export <xref:System.IDisposable> or <xref:System.ComponentModel.Composition.IPartImportsSatisfiedNotification> objects."}]}],"pos":[18349,18490],"yaml":true,"extradata":"MT"},{"content":"A predicate that specifies a set of interfaces.","nodes":[{"pos":[0,47],"content":"A predicate that specifies a set of interfaces.","nodes":[{"content":"A predicate that specifies a set of interfaces.","pos":[0,47]}]}],"pos":[18734,18782],"yaml":true},{"content":"The current object, to allow chaining.","nodes":[{"pos":[0,38],"content":"The current object, to allow chaining.","nodes":[{"content":"The current object, to allow chaining.","pos":[0,38]}]}],"pos":[18884,18923],"yaml":true},{"content":"<code>interfaceFilter</code> is `null`.","nodes":[{"pos":[0,39],"content":"<ph id=\"ph1\">&lt;code&gt;interfaceFilter&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>interfaceFilter</code> is `null`."}],"pos":[19128,19168],"yaml":true},{"content":"Specifies a set of interfaces on the matching types that should be exported, and provides configuration information for the resulting exports.","nodes":[{"pos":[0,142],"content":"Specifies a set of interfaces on the matching types that should be exported, and provides configuration information for the resulting exports.","nodes":[{"content":"Specifies a set of interfaces on the matching types that should be exported, and provides configuration information for the resulting exports.","pos":[0,142]}]}],"pos":[20767,20910],"yaml":true},{"content":"This method will not export <xref:System.IDisposable> or <xref:System.ComponentModel.Composition.IPartImportsSatisfiedNotification> objects.","nodes":[{"pos":[0,140],"content":"This method will not export <xref:System.IDisposable> or <xref:System.ComponentModel.Composition.IPartImportsSatisfiedNotification> objects.","nodes":[{"content":"This method will not export <ph id=\"ph1\">&lt;xref:System.IDisposable&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.ComponentModel.Composition.IPartImportsSatisfiedNotification&gt;</ph> objects.","pos":[0,140],"source":"This method will not export <xref:System.IDisposable> or <xref:System.ComponentModel.Composition.IPartImportsSatisfiedNotification> objects."}]}],"pos":[20921,21062],"yaml":true,"extradata":"MT"},{"content":"A predicate that specifies a set of interfaces.","nodes":[{"pos":[0,47],"content":"A predicate that specifies a set of interfaces.","nodes":[{"content":"A predicate that specifies a set of interfaces.","pos":[0,47]}]}],"pos":[21401,21449],"yaml":true},{"content":"An object that contains configuration information about the export. The default value is `null`.","nodes":[{"pos":[0,96],"content":"An object that contains configuration information about the export. The default value is `null`.","nodes":[{"content":"An object that contains configuration information about the export.","pos":[0,67]},{"content":"The default value is <ph id=\"ph1\">`null`</ph>.","pos":[68,96],"source":" The default value is `null`."}]}],"pos":[21598,21695],"yaml":true},{"content":"The current object, to allow chaining.","nodes":[{"pos":[0,38],"content":"The current object, to allow chaining.","nodes":[{"content":"The current object, to allow chaining.","pos":[0,38]}]}],"pos":[21797,21836],"yaml":true},{"content":"<code>interfaceFilter</code> is `null`.","nodes":[{"pos":[0,39],"content":"<ph id=\"ph1\">&lt;code&gt;interfaceFilter&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>interfaceFilter</code> is `null`."}],"pos":[22041,22081],"yaml":true},{"content":"Specifies a set of properties on the matching types that should be exported, and provides configuration information for those exports.","nodes":[{"pos":[0,134],"content":"Specifies a set of properties on the matching types that should be exported, and provides configuration information for those exports.","nodes":[{"content":"Specifies a set of properties on the matching types that should be exported, and provides configuration information for those exports.","pos":[0,134]}]}],"pos":[23842,23977],"yaml":true},{"content":"A predicate that specifies a set of properties.","nodes":[{"pos":[0,47],"content":"A predicate that specifies a set of properties.","nodes":[{"content":"A predicate that specifies a set of properties.","pos":[0,47]}]}],"pos":[24385,24433],"yaml":true},{"content":"An object that contains configuration information about the export. The default value is `null`.","nodes":[{"pos":[0,96],"content":"An object that contains configuration information about the export. The default value is `null`.","nodes":[{"content":"An object that contains configuration information about the export.","pos":[0,67]},{"content":"The default value is <ph id=\"ph1\">`null`</ph>.","pos":[68,96],"source":" The default value is `null`."}]}],"pos":[24601,24698],"yaml":true},{"content":"The current object, to allow chaining.","nodes":[{"pos":[0,38],"content":"The current object, to allow chaining.","nodes":[{"content":"The current object, to allow chaining.","pos":[0,38]}]}],"pos":[24800,24839],"yaml":true},{"content":"<code>propertyFilter</code> is `null`.","nodes":[{"pos":[0,38],"content":"<ph id=\"ph1\">&lt;code&gt;propertyFilter&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>propertyFilter</code> is `null`."}],"pos":[25044,25083],"yaml":true},{"content":"Specifies a set of properties that should be exported on the matching types.","nodes":[{"pos":[0,76],"content":"Specifies a set of properties that should be exported on the matching types.","nodes":[{"content":"Specifies a set of properties that should be exported on the matching types.","pos":[0,76]}]}],"pos":[26415,26492],"yaml":true},{"content":"A predicate that specifies a set of properties.","nodes":[{"pos":[0,47],"content":"A predicate that specifies a set of properties.","nodes":[{"content":"A predicate that specifies a set of properties.","pos":[0,47]}]}],"pos":[26779,26827],"yaml":true},{"content":"The current object, to allow chaining.","nodes":[{"pos":[0,38],"content":"The current object, to allow chaining.","nodes":[{"content":"The current object, to allow chaining.","pos":[0,38]}]}],"pos":[26929,26968],"yaml":true},{"content":"<code>propertyFilter</code> is `null`.","nodes":[{"pos":[0,38],"content":"<ph id=\"ph1\">&lt;code&gt;propertyFilter&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>propertyFilter</code> is `null`."}],"pos":[27173,27212],"yaml":true},{"content":"Specifies a set of properties on the matching types that should be exported, by using the specified contract type.","nodes":[{"pos":[0,114],"content":"Specifies a set of properties on the matching types that should be exported, by using the specified contract type.","nodes":[{"content":"Specifies a set of properties on the matching types that should be exported, by using the specified contract type.","pos":[0,114]}]}],"pos":[28562,28677],"yaml":true},{"content":"A predicate that specifies a set of properties.","nodes":[{"pos":[0,47],"content":"A predicate that specifies a set of properties.","nodes":[{"content":"A predicate that specifies a set of properties.","pos":[0,47]}]}],"pos":[28967,29015],"yaml":true},{"content":"The type of contract.","nodes":[{"pos":[0,21],"content":"The type of contract.","nodes":[{"content":"The type of contract.","pos":[0,21]}]}],"pos":[29066,29088],"yaml":true},{"content":"The current object, to allow chaining.","nodes":[{"pos":[0,38],"content":"The current object, to allow chaining.","nodes":[{"content":"The current object, to allow chaining.","pos":[0,38]}]}],"pos":[29190,29229],"yaml":true},{"content":"<code>propertyFilter</code> is `null`.","nodes":[{"pos":[0,38],"content":"<ph id=\"ph1\">&lt;code&gt;propertyFilter&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>propertyFilter</code> is `null`."}],"pos":[29437,29476],"yaml":true},{"content":"Specifies a set of properties on the matching types that should be exported by using the specified contract type, and provides configuration information for the resulting exports.","nodes":[{"pos":[0,179],"content":"Specifies a set of properties on the matching types that should be exported by using the specified contract type, and provides configuration information for the resulting exports.","nodes":[{"content":"Specifies a set of properties on the matching types that should be exported by using the specified contract type, and provides configuration information for the resulting exports.","pos":[0,179]}]}],"pos":[31255,31435],"yaml":true},{"content":"A predicate that specifies a set of properties.","nodes":[{"pos":[0,47],"content":"A predicate that specifies a set of properties.","nodes":[{"content":"A predicate that specifies a set of properties.","pos":[0,47]}]}],"pos":[31846,31894],"yaml":true},{"content":"An object that contains configuration information about the export. The default value is `null`.","nodes":[{"pos":[0,96],"content":"An object that contains configuration information about the export. The default value is `null`.","nodes":[{"content":"An object that contains configuration information about the export.","pos":[0,67]},{"content":"The default value is <ph id=\"ph1\">`null`</ph>.","pos":[68,96],"source":" The default value is `null`."}]}],"pos":[32062,32159],"yaml":true},{"content":"The type of contract.","nodes":[{"pos":[0,21],"content":"The type of contract.","nodes":[{"content":"The type of contract.","pos":[0,21]}]}],"pos":[32210,32232],"yaml":true},{"content":"The current object, to allow chaining.","nodes":[{"pos":[0,38],"content":"The current object, to allow chaining.","nodes":[{"content":"The current object, to allow chaining.","pos":[0,38]}]}],"pos":[32334,32373],"yaml":true},{"content":"<code>propertyFilter</code> is `null`.","nodes":[{"pos":[0,38],"content":"<ph id=\"ph1\">&lt;code&gt;propertyFilter&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>propertyFilter</code> is `null`."}],"pos":[32581,32620],"yaml":true},{"content":"Specifies a set of properties on the matching types that should be imported.","nodes":[{"pos":[0,76],"content":"Specifies a set of properties on the matching types that should be imported.","nodes":[{"content":"Specifies a set of properties on the matching types that should be imported.","pos":[0,76]}]}],"pos":[33952,34029],"yaml":true},{"content":"A predicate that specifies a set of properties.","nodes":[{"pos":[0,47],"content":"A predicate that specifies a set of properties.","nodes":[{"content":"A predicate that specifies a set of properties.","pos":[0,47]}]}],"pos":[34316,34364],"yaml":true},{"content":"The current object, to allow chaining.","nodes":[{"pos":[0,38],"content":"The current object, to allow chaining.","nodes":[{"content":"The current object, to allow chaining.","pos":[0,38]}]}],"pos":[34466,34505],"yaml":true},{"content":"<code>propertyFilter</code> is `null`.","nodes":[{"pos":[0,38],"content":"<ph id=\"ph1\">&lt;code&gt;propertyFilter&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>propertyFilter</code> is `null`."}],"pos":[34710,34749],"yaml":true},{"content":"Specifies a set of properties on the matching types that should be marked as imports, and provides configuration information for the resulting imports.","nodes":[{"pos":[0,151],"content":"Specifies a set of properties on the matching types that should be marked as imports, and provides configuration information for the resulting imports.","nodes":[{"content":"Specifies a set of properties on the matching types that should be marked as imports, and provides configuration information for the resulting imports.","pos":[0,151]}]}],"pos":[36510,36662],"yaml":true},{"content":"A predicate that specifies a set of properties.","nodes":[{"pos":[0,47],"content":"A predicate that specifies a set of properties.","nodes":[{"content":"A predicate that specifies a set of properties.","pos":[0,47]}]}],"pos":[37070,37118],"yaml":true},{"content":"An object that contains configuration information about the import. The default value is `null`.","nodes":[{"pos":[0,96],"content":"An object that contains configuration information about the import. The default value is `null`.","nodes":[{"content":"An object that contains configuration information about the import.","pos":[0,67]},{"content":"The default value is <ph id=\"ph1\">`null`</ph>.","pos":[68,96],"source":" The default value is `null`."}]}],"pos":[37286,37383],"yaml":true},{"content":"The current object, to allow chaining.","nodes":[{"pos":[0,38],"content":"The current object, to allow chaining.","nodes":[{"content":"The current object, to allow chaining.","pos":[0,38]}]}],"pos":[37485,37524],"yaml":true},{"content":"<code>propertyFilter</code> is `null`.","nodes":[{"pos":[0,38],"content":"<ph id=\"ph1\">&lt;code&gt;propertyFilter&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>propertyFilter</code> is `null`."}],"pos":[37729,37768],"yaml":true},{"content":"Specifies a set of properties on the matching types that should be marked as imports using the specified contract type.","nodes":[{"pos":[0,119],"content":"Specifies a set of properties on the matching types that should be marked as imports using the specified contract type.","nodes":[{"content":"Specifies a set of properties on the matching types that should be marked as imports using the specified contract type.","pos":[0,119]}]}],"pos":[39118,39238],"yaml":true},{"content":"A predicate that specifies a set of properties.","nodes":[{"pos":[0,47],"content":"A predicate that specifies a set of properties.","nodes":[{"content":"A predicate that specifies a set of properties.","pos":[0,47]}]}],"pos":[39528,39576],"yaml":true},{"content":"The type of contract.","nodes":[{"pos":[0,21],"content":"The type of contract.","nodes":[{"content":"The type of contract.","pos":[0,21]}]}],"pos":[39627,39649],"yaml":true},{"content":"The current object, to allow chaining.","nodes":[{"pos":[0,38],"content":"The current object, to allow chaining.","nodes":[{"content":"The current object, to allow chaining.","pos":[0,38]}]}],"pos":[39751,39790],"yaml":true},{"content":"<code>propertyFilter</code> is `null`.","nodes":[{"pos":[0,38],"content":"<ph id=\"ph1\">&lt;code&gt;propertyFilter&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>propertyFilter</code> is `null`."}],"pos":[39998,40037],"yaml":true},{"content":"Specifies a set of properties on the matching types that should be marked as imports by using the specified contract type, and provides configuration information for the resulting imports.","nodes":[{"pos":[0,188],"content":"Specifies a set of properties on the matching types that should be marked as imports by using the specified contract type, and provides configuration information for the resulting imports.","nodes":[{"content":"Specifies a set of properties on the matching types that should be marked as imports by using the specified contract type, and provides configuration information for the resulting imports.","pos":[0,188]}]}],"pos":[41816,42005],"yaml":true},{"content":"A predicate that specifies a set of properties.","nodes":[{"pos":[0,47],"content":"A predicate that specifies a set of properties.","nodes":[{"content":"A predicate that specifies a set of properties.","pos":[0,47]}]}],"pos":[42416,42464],"yaml":true},{"content":"An object that contains configuration information about the import. The default value is `null`.","nodes":[{"pos":[0,96],"content":"An object that contains configuration information about the import. The default value is `null`.","nodes":[{"content":"An object that contains configuration information about the import.","pos":[0,67]},{"content":"The default value is <ph id=\"ph1\">`null`</ph>.","pos":[68,96],"source":" The default value is `null`."}]}],"pos":[42632,42729],"yaml":true},{"content":"The type of contract.","nodes":[{"pos":[0,21],"content":"The type of contract.","nodes":[{"content":"The type of contract.","pos":[0,21]}]}],"pos":[42780,42802],"yaml":true},{"content":"The current object, to allow chaining.","nodes":[{"pos":[0,38],"content":"The current object, to allow chaining.","nodes":[{"content":"The current object, to allow chaining.","pos":[0,38]}]}],"pos":[42904,42943],"yaml":true},{"content":"<code>propertyFilter</code> is `null`.","nodes":[{"pos":[0,38],"content":"<ph id=\"ph1\">&lt;code&gt;propertyFilter&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>propertyFilter</code> is `null`."}],"pos":[43151,43190],"yaml":true},{"content":"Specifies the constructor that matching types should use as an importing constructor.","nodes":[{"pos":[0,85],"content":"Specifies the constructor that matching types should use as an importing constructor.","nodes":[{"content":"Specifies the constructor that matching types should use as an importing constructor.","pos":[0,85]}]}],"pos":[44678,44764],"yaml":true},{"content":"A function that chooses one constructor from a set of constructors.","nodes":[{"pos":[0,67],"content":"A function that chooses one constructor from a set of constructors.","nodes":[{"content":"A function that chooses one constructor from a set of constructors.","pos":[0,67]}]}],"pos":[45126,45194],"yaml":true},{"content":"The current object, to allow chaining.","nodes":[{"pos":[0,38],"content":"The current object, to allow chaining.","nodes":[{"content":"The current object, to allow chaining.","pos":[0,38]}]}],"pos":[45296,45335],"yaml":true},{"content":"<code>constructorFilter</code> is `null`.","nodes":[{"pos":[0,41],"content":"<ph id=\"ph1\">&lt;code&gt;constructorFilter&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>constructorFilter</code> is `null`."}],"pos":[45541,45583],"yaml":true},{"content":"<code>constructorFilter</code> returns `null`.","nodes":[{"pos":[0,46],"content":"<ph id=\"ph1\">&lt;code&gt;constructorFilter&lt;/code&gt;</ph> returns <ph id=\"ph2\">`null`</ph>.","source":"<code>constructorFilter</code> returns `null`."}],"pos":[45677,45724],"yaml":true},{"content":"<code>constructorFilter</code> returns a constructor that is not associated with the target type.","nodes":[{"pos":[0,97],"content":"<ph id=\"ph1\">&lt;code&gt;constructorFilter&lt;/code&gt;</ph> returns a constructor that is not associated with the target type.","source":"<code>constructorFilter</code> returns a constructor that is not associated with the target type."}],"pos":[45834,45932],"yaml":true},{"content":"Specifies the constructor that matching types should use as an importing constructor, and provides configuration information for the resulting import.","nodes":[{"pos":[0,150],"content":"Specifies the constructor that matching types should use as an importing constructor, and provides configuration information for the resulting import.","nodes":[{"content":"Specifies the constructor that matching types should use as an importing constructor, and provides configuration information for the resulting import.","pos":[0,150]}]}],"pos":[47855,48006],"yaml":true},{"content":"A function that chooses one constructor from a set of constructors.","nodes":[{"pos":[0,67],"content":"A function that chooses one constructor from a set of constructors.","nodes":[{"content":"A function that chooses one constructor from a set of constructors.","pos":[0,67]}]}],"pos":[48490,48558],"yaml":true},{"content":"An object that contains configuration information for the importing constructor. The default is `null`.","nodes":[{"pos":[0,103],"content":"An object that contains configuration information for the importing constructor. The default is `null`.","nodes":[{"content":"An object that contains configuration information for the importing constructor.","pos":[0,80]},{"content":"The default is <ph id=\"ph1\">`null`</ph>.","pos":[81,103],"source":" The default is `null`."}]}],"pos":[48727,48831],"yaml":true},{"content":"The current object, to allow chaining.","nodes":[{"pos":[0,38],"content":"The current object, to allow chaining.","nodes":[{"content":"The current object, to allow chaining.","pos":[0,38]}]}],"pos":[48933,48972],"yaml":true},{"content":"<code>constructorFilter</code> is `null`.","nodes":[{"pos":[0,41],"content":"<ph id=\"ph1\">&lt;code&gt;constructorFilter&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>constructorFilter</code> is `null`."}],"pos":[49178,49220],"yaml":true},{"content":"<code>constructorFilter</code> returns `null`.","nodes":[{"pos":[0,46],"content":"<ph id=\"ph1\">&lt;code&gt;constructorFilter&lt;/code&gt;</ph> returns <ph id=\"ph2\">`null`</ph>.","source":"<code>constructorFilter</code> returns `null`."}],"pos":[49314,49361],"yaml":true},{"content":"<code>constructorFilter</code> returns a constructor that is not associated with the target type.","nodes":[{"pos":[0,97],"content":"<ph id=\"ph1\">&lt;code&gt;constructorFilter&lt;/code&gt;</ph> returns a constructor that is not associated with the target type.","source":"<code>constructorFilter</code> returns a constructor that is not associated with the target type."}],"pos":[49471,49569],"yaml":true},{"content":"Specifies the creation policy for matching types.","nodes":[{"pos":[0,49],"content":"Specifies the creation policy for matching types.","nodes":[{"content":"Specifies the creation policy for matching types.","pos":[0,49]}]}],"pos":[50880,50930],"yaml":true},{"content":"The creation policy.","nodes":[{"pos":[0,20],"content":"The creation policy.","nodes":[{"content":"The creation policy.","pos":[0,20]}]}],"pos":[51225,51246],"yaml":true},{"content":"The current object, to allow chaining.","nodes":[{"pos":[0,38],"content":"The current object, to allow chaining.","nodes":[{"content":"The current object, to allow chaining.","pos":[0,38]}]}],"pos":[51348,51387],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.Composition.Registration.PartBuilder\n  commentId: T:System.ComponentModel.Composition.Registration.PartBuilder\n  id: PartBuilder\n  children:\n  - System.ComponentModel.Composition.Registration.PartBuilder.AddMetadata(System.String,System.Func{System.Type,System.Object})\n  - System.ComponentModel.Composition.Registration.PartBuilder.AddMetadata(System.String,System.Object)\n  - System.ComponentModel.Composition.Registration.PartBuilder.Export\n  - System.ComponentModel.Composition.Registration.PartBuilder.Export(System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})\n  - System.ComponentModel.Composition.Registration.PartBuilder.Export``1\n  - System.ComponentModel.Composition.Registration.PartBuilder.Export``1(System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})\n  - System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces\n  - System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces(System.Predicate{System.Type})\n  - System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces(System.Predicate{System.Type},System.Action{System.Type,System.ComponentModel.Composition.Registration.ExportBuilder})\n  - System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder})\n  - System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo})\n  - System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo})\n  - System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder})\n  - System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo})\n  - System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder})\n  - System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo})\n  - System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder})\n  - System.ComponentModel.Composition.Registration.PartBuilder.SelectConstructor(System.Func{System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo})\n  - System.ComponentModel.Composition.Registration.PartBuilder.SelectConstructor(System.Func{System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo},System.Action{System.Reflection.ParameterInfo,System.ComponentModel.Composition.Registration.ImportBuilder})\n  - System.ComponentModel.Composition.Registration.PartBuilder.SetCreationPolicy(System.ComponentModel.Composition.CreationPolicy)\n  langs:\n  - csharp\n  name: PartBuilder\n  nameWithType: PartBuilder\n  fullName: System.ComponentModel.Composition.Registration.PartBuilder\n  type: Class\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  summary: Represents a rule for decorating a set of matching types with Managed Extensibility Framework (MEF) attributes.\n  syntax:\n    content: public class PartBuilder\n  inheritance:\n  - System.Object\n  derivedClasses:\n  - System.ComponentModel.Composition.Registration.PartBuilder`1\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Registration/PartBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.AddMetadata(System.String,System.Func{System.Type,System.Object})\n  commentId: M:System.ComponentModel.Composition.Registration.PartBuilder.AddMetadata(System.String,System.Func{System.Type,System.Object})\n  id: AddMetadata(System.String,System.Func{System.Type,System.Object})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  langs:\n  - csharp\n  name: AddMetadata(String, Func<Type,Object>)\n  nameWithType: PartBuilder.AddMetadata(String, Func<Type,Object>)\n  fullName: PartBuilder.AddMetadata(String, Func<Type,Object>)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  summary: Adds metadata to the matching types.\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.PartBuilder AddMetadata (string name, Func<Type,object> itemFunc);\n    parameters:\n    - id: name\n      type: System.String\n      description: The metadata key.\n    - id: itemFunc\n      type: System.Func{System.Type,System.Object}\n      description: A function that returns the metadata value, given the target type.\n    return:\n      type: System.ComponentModel.Composition.Registration.PartBuilder\n      description: The current object, to allow chaining.\n  overload: System.ComponentModel.Composition.Registration.PartBuilder.AddMetadata*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Registration/PartBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.AddMetadata(System.String,System.Object)\n  commentId: M:System.ComponentModel.Composition.Registration.PartBuilder.AddMetadata(System.String,System.Object)\n  id: AddMetadata(System.String,System.Object)\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  langs:\n  - csharp\n  name: AddMetadata(String, Object)\n  nameWithType: PartBuilder.AddMetadata(String, Object)\n  fullName: PartBuilder.AddMetadata(String, Object)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  summary: Adds metadata to the matching types.\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.PartBuilder AddMetadata (string name, object value);\n    parameters:\n    - id: name\n      type: System.String\n      description: The metadata key.\n    - id: value\n      type: System.Object\n      description: The metadata value.\n    return:\n      type: System.ComponentModel.Composition.Registration.PartBuilder\n      description: The current object, to allow chaining.\n  overload: System.ComponentModel.Composition.Registration.PartBuilder.AddMetadata*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Registration/PartBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.Export\n  commentId: M:System.ComponentModel.Composition.Registration.PartBuilder.Export\n  id: Export\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  langs:\n  - csharp\n  name: Export()\n  nameWithType: PartBuilder.Export()\n  fullName: PartBuilder.Export()\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  summary: Specifies that matching types should be exported.\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.PartBuilder Export ();\n    parameters: []\n    return:\n      type: System.ComponentModel.Composition.Registration.PartBuilder\n      description: The current object, to allow chaining.\n  overload: System.ComponentModel.Composition.Registration.PartBuilder.Export*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Registration/PartBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.Export(System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})\n  commentId: M:System.ComponentModel.Composition.Registration.PartBuilder.Export(System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})\n  id: Export(System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  langs:\n  - csharp\n  name: Export(Action<ExportBuilder>)\n  nameWithType: PartBuilder.Export(Action<ExportBuilder>)\n  fullName: PartBuilder.Export(Action<ExportBuilder>)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  summary: Specifies that matching types should be exported, and provides configuration information for the resulting exports.\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.PartBuilder Export (Action<System.ComponentModel.Composition.Registration.ExportBuilder> exportConfiguration);\n    parameters:\n    - id: exportConfiguration\n      type: System.Action{System.ComponentModel.Composition.Registration.ExportBuilder}\n      description: An object that contains configuration information about the export. The default value is `null`.\n    return:\n      type: System.ComponentModel.Composition.Registration.PartBuilder\n      description: The current object, to allow chaining.\n  overload: System.ComponentModel.Composition.Registration.PartBuilder.Export*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Registration/PartBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.Export``1\n  commentId: M:System.ComponentModel.Composition.Registration.PartBuilder.Export``1\n  id: Export``1\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  langs:\n  - csharp\n  name: Export<T>()\n  nameWithType: PartBuilder.Export<T>()\n  fullName: PartBuilder.Export<T>()\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  summary: Specifies that matching types should be exported by using the specified contract type.\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.PartBuilder Export<T> ();\n    parameters: []\n    typeParameters:\n    - id: T\n      description: The type of contract.\n    return:\n      type: System.ComponentModel.Composition.Registration.PartBuilder\n      description: The current object, to allow chaining.\n  overload: System.ComponentModel.Composition.Registration.PartBuilder.Export``1*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Registration/PartBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.Export``1(System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})\n  commentId: M:System.ComponentModel.Composition.Registration.PartBuilder.Export``1(System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})\n  id: Export``1(System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  langs:\n  - csharp\n  name: Export<T>(Action<ExportBuilder>)\n  nameWithType: PartBuilder.Export<T>(Action<ExportBuilder>)\n  fullName: PartBuilder.Export<T>(Action<ExportBuilder>)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  summary: Specifies that matching types should be exported by using the specified contract type, and provides configuration information for the resulting exports.\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.PartBuilder Export<T> (Action<System.ComponentModel.Composition.Registration.ExportBuilder> exportConfiguration);\n    parameters:\n    - id: exportConfiguration\n      type: System.Action{System.ComponentModel.Composition.Registration.ExportBuilder}\n      description: An object that contains configuration information about the export. The default value is `null`.\n    typeParameters:\n    - id: T\n      description: The type of contract.\n    return:\n      type: System.ComponentModel.Composition.Registration.PartBuilder\n      description: The current object, to allow chaining.\n  overload: System.ComponentModel.Composition.Registration.PartBuilder.Export``1*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Registration/PartBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces\n  commentId: M:System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces\n  id: ExportInterfaces\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  langs:\n  - csharp\n  name: ExportInterfaces()\n  nameWithType: PartBuilder.ExportInterfaces()\n  fullName: PartBuilder.ExportInterfaces()\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  summary: Specifies that all the interfaces of the matching types should be exported.\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.PartBuilder ExportInterfaces ();\n    parameters: []\n    return:\n      type: System.ComponentModel.Composition.Registration.PartBuilder\n      description: The current object, to allow chaining.\n  overload: System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Registration/PartBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces(System.Predicate{System.Type})\n  commentId: M:System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces(System.Predicate{System.Type})\n  id: ExportInterfaces(System.Predicate{System.Type})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  langs:\n  - csharp\n  name: ExportInterfaces(Predicate<Type>)\n  nameWithType: PartBuilder.ExportInterfaces(Predicate<Type>)\n  fullName: PartBuilder.ExportInterfaces(Predicate<Type>)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  summary: Specifies a set of interfaces on the matching types that should be exported.\n  remarks: This method will not export <xref:System.IDisposable> or <xref:System.ComponentModel.Composition.IPartImportsSatisfiedNotification> objects.\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.PartBuilder ExportInterfaces (Predicate<Type> interfaceFilter);\n    parameters:\n    - id: interfaceFilter\n      type: System.Predicate{System.Type}\n      description: A predicate that specifies a set of interfaces.\n    return:\n      type: System.ComponentModel.Composition.Registration.PartBuilder\n      description: The current object, to allow chaining.\n  overload: System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>interfaceFilter</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Registration/PartBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces(System.Predicate{System.Type},System.Action{System.Type,System.ComponentModel.Composition.Registration.ExportBuilder})\n  commentId: M:System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces(System.Predicate{System.Type},System.Action{System.Type,System.ComponentModel.Composition.Registration.ExportBuilder})\n  id: ExportInterfaces(System.Predicate{System.Type},System.Action{System.Type,System.ComponentModel.Composition.Registration.ExportBuilder})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  langs:\n  - csharp\n  name: ExportInterfaces(Predicate<Type>, Action<Type,ExportBuilder>)\n  nameWithType: PartBuilder.ExportInterfaces(Predicate<Type>, Action<Type,ExportBuilder>)\n  fullName: PartBuilder.ExportInterfaces(Predicate<Type>, Action<Type,ExportBuilder>)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  summary: Specifies a set of interfaces on the matching types that should be exported, and provides configuration information for the resulting exports.\n  remarks: This method will not export <xref:System.IDisposable> or <xref:System.ComponentModel.Composition.IPartImportsSatisfiedNotification> objects.\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.PartBuilder ExportInterfaces (Predicate<Type> interfaceFilter, Action<Type,System.ComponentModel.Composition.Registration.ExportBuilder> exportConfiguration);\n    parameters:\n    - id: interfaceFilter\n      type: System.Predicate{System.Type}\n      description: A predicate that specifies a set of interfaces.\n    - id: exportConfiguration\n      type: System.Action{System.Type,System.ComponentModel.Composition.Registration.ExportBuilder}\n      description: An object that contains configuration information about the export. The default value is `null`.\n    return:\n      type: System.ComponentModel.Composition.Registration.PartBuilder\n      description: The current object, to allow chaining.\n  overload: System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>interfaceFilter</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Registration/PartBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder})\n  commentId: M:System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder})\n  id: ExportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  langs:\n  - csharp\n  name: ExportProperties(Predicate<PropertyInfo>, Action<PropertyInfo,ExportBuilder>)\n  nameWithType: PartBuilder.ExportProperties(Predicate<PropertyInfo>, Action<PropertyInfo,ExportBuilder>)\n  fullName: PartBuilder.ExportProperties(Predicate<PropertyInfo>, Action<PropertyInfo,ExportBuilder>)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  summary: Specifies a set of properties on the matching types that should be exported, and provides configuration information for those exports.\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.PartBuilder ExportProperties (Predicate<System.Reflection.PropertyInfo> propertyFilter, Action<System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder> exportConfiguration);\n    parameters:\n    - id: propertyFilter\n      type: System.Predicate{System.Reflection.PropertyInfo}\n      description: A predicate that specifies a set of properties.\n    - id: exportConfiguration\n      type: System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder}\n      description: An object that contains configuration information about the export. The default value is `null`.\n    return:\n      type: System.ComponentModel.Composition.Registration.PartBuilder\n      description: The current object, to allow chaining.\n  overload: System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>propertyFilter</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Registration/PartBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo})\n  commentId: M:System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo})\n  id: ExportProperties(System.Predicate{System.Reflection.PropertyInfo})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  langs:\n  - csharp\n  name: ExportProperties(Predicate<PropertyInfo>)\n  nameWithType: PartBuilder.ExportProperties(Predicate<PropertyInfo>)\n  fullName: PartBuilder.ExportProperties(Predicate<PropertyInfo>)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  summary: Specifies a set of properties that should be exported on the matching types.\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.PartBuilder ExportProperties (Predicate<System.Reflection.PropertyInfo> propertyFilter);\n    parameters:\n    - id: propertyFilter\n      type: System.Predicate{System.Reflection.PropertyInfo}\n      description: A predicate that specifies a set of properties.\n    return:\n      type: System.ComponentModel.Composition.Registration.PartBuilder\n      description: The current object, to allow chaining.\n  overload: System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>propertyFilter</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Registration/PartBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo})\n  commentId: M:System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo})\n  id: ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  langs:\n  - csharp\n  name: ExportProperties<T>(Predicate<PropertyInfo>)\n  nameWithType: PartBuilder.ExportProperties<T>(Predicate<PropertyInfo>)\n  fullName: PartBuilder.ExportProperties<T>(Predicate<PropertyInfo>)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  summary: Specifies a set of properties on the matching types that should be exported, by using the specified contract type.\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.PartBuilder ExportProperties<T> (Predicate<System.Reflection.PropertyInfo> propertyFilter);\n    parameters:\n    - id: propertyFilter\n      type: System.Predicate{System.Reflection.PropertyInfo}\n      description: A predicate that specifies a set of properties.\n    typeParameters:\n    - id: T\n      description: The type of contract.\n    return:\n      type: System.ComponentModel.Composition.Registration.PartBuilder\n      description: The current object, to allow chaining.\n  overload: System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties``1*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>propertyFilter</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Registration/PartBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder})\n  commentId: M:System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder})\n  id: ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  langs:\n  - csharp\n  name: ExportProperties<T>(Predicate<PropertyInfo>, Action<PropertyInfo,ExportBuilder>)\n  nameWithType: PartBuilder.ExportProperties<T>(Predicate<PropertyInfo>, Action<PropertyInfo,ExportBuilder>)\n  fullName: PartBuilder.ExportProperties<T>(Predicate<PropertyInfo>, Action<PropertyInfo,ExportBuilder>)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  summary: Specifies a set of properties on the matching types that should be exported by using the specified contract type, and provides configuration information for the resulting exports.\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.PartBuilder ExportProperties<T> (Predicate<System.Reflection.PropertyInfo> propertyFilter, Action<System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder> exportConfiguration);\n    parameters:\n    - id: propertyFilter\n      type: System.Predicate{System.Reflection.PropertyInfo}\n      description: A predicate that specifies a set of properties.\n    - id: exportConfiguration\n      type: System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder}\n      description: An object that contains configuration information about the export. The default value is `null`.\n    typeParameters:\n    - id: T\n      description: The type of contract.\n    return:\n      type: System.ComponentModel.Composition.Registration.PartBuilder\n      description: The current object, to allow chaining.\n  overload: System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties``1*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>propertyFilter</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Registration/PartBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo})\n  commentId: M:System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo})\n  id: ImportProperties(System.Predicate{System.Reflection.PropertyInfo})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  langs:\n  - csharp\n  name: ImportProperties(Predicate<PropertyInfo>)\n  nameWithType: PartBuilder.ImportProperties(Predicate<PropertyInfo>)\n  fullName: PartBuilder.ImportProperties(Predicate<PropertyInfo>)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  summary: Specifies a set of properties on the matching types that should be imported.\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.PartBuilder ImportProperties (Predicate<System.Reflection.PropertyInfo> propertyFilter);\n    parameters:\n    - id: propertyFilter\n      type: System.Predicate{System.Reflection.PropertyInfo}\n      description: A predicate that specifies a set of properties.\n    return:\n      type: System.ComponentModel.Composition.Registration.PartBuilder\n      description: The current object, to allow chaining.\n  overload: System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>propertyFilter</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Registration/PartBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder})\n  commentId: M:System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder})\n  id: ImportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  langs:\n  - csharp\n  name: ImportProperties(Predicate<PropertyInfo>, Action<PropertyInfo,ImportBuilder>)\n  nameWithType: PartBuilder.ImportProperties(Predicate<PropertyInfo>, Action<PropertyInfo,ImportBuilder>)\n  fullName: PartBuilder.ImportProperties(Predicate<PropertyInfo>, Action<PropertyInfo,ImportBuilder>)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  summary: Specifies a set of properties on the matching types that should be marked as imports, and provides configuration information for the resulting imports.\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.PartBuilder ImportProperties (Predicate<System.Reflection.PropertyInfo> propertyFilter, Action<System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder> importConfiguration);\n    parameters:\n    - id: propertyFilter\n      type: System.Predicate{System.Reflection.PropertyInfo}\n      description: A predicate that specifies a set of properties.\n    - id: importConfiguration\n      type: System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder}\n      description: An object that contains configuration information about the import. The default value is `null`.\n    return:\n      type: System.ComponentModel.Composition.Registration.PartBuilder\n      description: The current object, to allow chaining.\n  overload: System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>propertyFilter</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Registration/PartBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo})\n  commentId: M:System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo})\n  id: ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  langs:\n  - csharp\n  name: ImportProperties<T>(Predicate<PropertyInfo>)\n  nameWithType: PartBuilder.ImportProperties<T>(Predicate<PropertyInfo>)\n  fullName: PartBuilder.ImportProperties<T>(Predicate<PropertyInfo>)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  summary: Specifies a set of properties on the matching types that should be marked as imports using the specified contract type.\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.PartBuilder ImportProperties<T> (Predicate<System.Reflection.PropertyInfo> propertyFilter);\n    parameters:\n    - id: propertyFilter\n      type: System.Predicate{System.Reflection.PropertyInfo}\n      description: A predicate that specifies a set of properties.\n    typeParameters:\n    - id: T\n      description: The type of contract.\n    return:\n      type: System.ComponentModel.Composition.Registration.PartBuilder\n      description: The current object, to allow chaining.\n  overload: System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties``1*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>propertyFilter</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Registration/PartBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder})\n  commentId: M:System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder})\n  id: ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  langs:\n  - csharp\n  name: ImportProperties<T>(Predicate<PropertyInfo>, Action<PropertyInfo,ImportBuilder>)\n  nameWithType: PartBuilder.ImportProperties<T>(Predicate<PropertyInfo>, Action<PropertyInfo,ImportBuilder>)\n  fullName: PartBuilder.ImportProperties<T>(Predicate<PropertyInfo>, Action<PropertyInfo,ImportBuilder>)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  summary: Specifies a set of properties on the matching types that should be marked as imports by using the specified contract type, and provides configuration information for the resulting imports.\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.PartBuilder ImportProperties<T> (Predicate<System.Reflection.PropertyInfo> propertyFilter, Action<System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder> importConfiguration);\n    parameters:\n    - id: propertyFilter\n      type: System.Predicate{System.Reflection.PropertyInfo}\n      description: A predicate that specifies a set of properties.\n    - id: importConfiguration\n      type: System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder}\n      description: An object that contains configuration information about the import. The default value is `null`.\n    typeParameters:\n    - id: T\n      description: The type of contract.\n    return:\n      type: System.ComponentModel.Composition.Registration.PartBuilder\n      description: The current object, to allow chaining.\n  overload: System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties``1*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>propertyFilter</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Registration/PartBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.SelectConstructor(System.Func{System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo})\n  commentId: M:System.ComponentModel.Composition.Registration.PartBuilder.SelectConstructor(System.Func{System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo})\n  id: SelectConstructor(System.Func{System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  langs:\n  - csharp\n  name: SelectConstructor(Func<ConstructorInfo[],ConstructorInfo>)\n  nameWithType: PartBuilder.SelectConstructor(Func<ConstructorInfo[],ConstructorInfo>)\n  fullName: PartBuilder.SelectConstructor(Func<ConstructorInfo[],ConstructorInfo>)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  summary: Specifies the constructor that matching types should use as an importing constructor.\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.PartBuilder SelectConstructor (Func<System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo> constructorFilter);\n    parameters:\n    - id: constructorFilter\n      type: System.Func{System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo}\n      description: A function that chooses one constructor from a set of constructors.\n    return:\n      type: System.ComponentModel.Composition.Registration.PartBuilder\n      description: The current object, to allow chaining.\n  overload: System.ComponentModel.Composition.Registration.PartBuilder.SelectConstructor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>constructorFilter</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>constructorFilter</code> returns `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <code>constructorFilter</code> returns a constructor that is not associated with the target type.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Registration/PartBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.SelectConstructor(System.Func{System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo},System.Action{System.Reflection.ParameterInfo,System.ComponentModel.Composition.Registration.ImportBuilder})\n  commentId: M:System.ComponentModel.Composition.Registration.PartBuilder.SelectConstructor(System.Func{System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo},System.Action{System.Reflection.ParameterInfo,System.ComponentModel.Composition.Registration.ImportBuilder})\n  id: SelectConstructor(System.Func{System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo},System.Action{System.Reflection.ParameterInfo,System.ComponentModel.Composition.Registration.ImportBuilder})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  langs:\n  - csharp\n  name: SelectConstructor(Func<ConstructorInfo[],ConstructorInfo>, Action<ParameterInfo,ImportBuilder>)\n  nameWithType: PartBuilder.SelectConstructor(Func<ConstructorInfo[],ConstructorInfo>, Action<ParameterInfo,ImportBuilder>)\n  fullName: PartBuilder.SelectConstructor(Func<ConstructorInfo[],ConstructorInfo>, Action<ParameterInfo,ImportBuilder>)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  summary: Specifies the constructor that matching types should use as an importing constructor, and provides configuration information for the resulting import.\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.PartBuilder SelectConstructor (Func<System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo> constructorFilter, Action<System.Reflection.ParameterInfo,System.ComponentModel.Composition.Registration.ImportBuilder> importConfiguration);\n    parameters:\n    - id: constructorFilter\n      type: System.Func{System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo}\n      description: A function that chooses one constructor from a set of constructors.\n    - id: importConfiguration\n      type: System.Action{System.Reflection.ParameterInfo,System.ComponentModel.Composition.Registration.ImportBuilder}\n      description: An object that contains configuration information for the importing constructor. The default is `null`.\n    return:\n      type: System.ComponentModel.Composition.Registration.PartBuilder\n      description: The current object, to allow chaining.\n  overload: System.ComponentModel.Composition.Registration.PartBuilder.SelectConstructor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>constructorFilter</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>constructorFilter</code> returns `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <code>constructorFilter</code> returns a constructor that is not associated with the target type.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Registration/PartBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.SetCreationPolicy(System.ComponentModel.Composition.CreationPolicy)\n  commentId: M:System.ComponentModel.Composition.Registration.PartBuilder.SetCreationPolicy(System.ComponentModel.Composition.CreationPolicy)\n  id: SetCreationPolicy(System.ComponentModel.Composition.CreationPolicy)\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  langs:\n  - csharp\n  name: SetCreationPolicy(CreationPolicy)\n  nameWithType: PartBuilder.SetCreationPolicy(CreationPolicy)\n  fullName: PartBuilder.SetCreationPolicy(CreationPolicy)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  summary: Specifies the creation policy for matching types.\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.PartBuilder SetCreationPolicy (System.ComponentModel.Composition.CreationPolicy creationPolicy);\n    parameters:\n    - id: creationPolicy\n      type: System.ComponentModel.Composition.CreationPolicy\n      description: The creation policy.\n    return:\n      type: System.ComponentModel.Composition.Registration.PartBuilder\n      description: The current object, to allow chaining.\n  overload: System.ComponentModel.Composition.Registration.PartBuilder.SetCreationPolicy*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Registration/PartBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.AddMetadata(System.String,System.Func{System.Type,System.Object})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: AddMetadata(String, Func<Type,Object>)\n  nameWithType: PartBuilder.AddMetadata(String, Func<Type,Object>)\n  fullName: PartBuilder.AddMetadata(String, Func<Type,Object>)\n- uid: System.ComponentModel.Composition.Registration.PartBuilder\n  parent: System.ComponentModel.Composition.Registration\n  isExternal: false\n  name: PartBuilder\n  nameWithType: PartBuilder\n  fullName: System.ComponentModel.Composition.Registration.PartBuilder\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Func`2\n  name: Func<T,TResult>\n  nameWithType: Func<T,TResult>\n  fullName: System.Func<T,TResult>\n- uid: System.Type\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Func{System.Type,System.Object}\n  parent: System\n  isExternal: false\n  name: Func<Type,Object>\n  nameWithType: Func<Type,Object>\n  fullName: System.Func<System.Type,System.Object>\n  spec.csharp:\n  - uid: System.Func`2\n    name: Func\n    nameWithType: Func\n    fullName: System.Func\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Type\n    name: Type\n    nameWithType: Type\n    fullName: System.Type\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.AddMetadata(System.String,System.Object)\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: AddMetadata(String, Object)\n  nameWithType: PartBuilder.AddMetadata(String, Object)\n  fullName: PartBuilder.AddMetadata(String, Object)\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.Export\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: Export()\n  nameWithType: PartBuilder.Export()\n  fullName: PartBuilder.Export()\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.Export(System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: Export(Action<ExportBuilder>)\n  nameWithType: PartBuilder.Export(Action<ExportBuilder>)\n  fullName: PartBuilder.Export(Action<ExportBuilder>)\n- uid: System.Action`1\n  name: Action<T>\n  nameWithType: Action<T>\n  fullName: System.Action<T>\n- uid: System.ComponentModel.Composition.Registration.ExportBuilder\n  name: ExportBuilder\n  nameWithType: ExportBuilder\n  fullName: System.ComponentModel.Composition.Registration.ExportBuilder\n- uid: System.Action{System.ComponentModel.Composition.Registration.ExportBuilder}\n  parent: System\n  isExternal: false\n  name: Action<ExportBuilder>\n  nameWithType: Action<ExportBuilder>\n  fullName: System.Action<System.ComponentModel.Composition.Registration.ExportBuilder>\n  spec.csharp:\n  - uid: System.Action`1\n    name: Action\n    nameWithType: Action\n    fullName: System.Action\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ComponentModel.Composition.Registration.ExportBuilder\n    name: ExportBuilder\n    nameWithType: ExportBuilder\n    fullName: System.ComponentModel.Composition.Registration.ExportBuilder\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.Export``1\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: Export<T>()\n  nameWithType: PartBuilder.Export<T>()\n  fullName: PartBuilder.Export<T>()\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.Export``1(System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: Export<T>(Action<ExportBuilder>)\n  nameWithType: PartBuilder.Export<T>(Action<ExportBuilder>)\n  fullName: PartBuilder.Export<T>(Action<ExportBuilder>)\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: ExportInterfaces()\n  nameWithType: PartBuilder.ExportInterfaces()\n  fullName: PartBuilder.ExportInterfaces()\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces(System.Predicate{System.Type})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: ExportInterfaces(Predicate<Type>)\n  nameWithType: PartBuilder.ExportInterfaces(Predicate<Type>)\n  fullName: PartBuilder.ExportInterfaces(Predicate<Type>)\n- uid: System.Predicate`1\n  name: Predicate<T>\n  nameWithType: Predicate<T>\n  fullName: System.Predicate<T>\n- uid: System.Predicate{System.Type}\n  parent: System\n  isExternal: false\n  name: Predicate<Type>\n  nameWithType: Predicate<Type>\n  fullName: System.Predicate<System.Type>\n  spec.csharp:\n  - uid: System.Predicate`1\n    name: Predicate\n    nameWithType: Predicate\n    fullName: System.Predicate\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Type\n    name: Type\n    nameWithType: Type\n    fullName: System.Type\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces(System.Predicate{System.Type},System.Action{System.Type,System.ComponentModel.Composition.Registration.ExportBuilder})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: ExportInterfaces(Predicate<Type>, Action<Type,ExportBuilder>)\n  nameWithType: PartBuilder.ExportInterfaces(Predicate<Type>, Action<Type,ExportBuilder>)\n  fullName: PartBuilder.ExportInterfaces(Predicate<Type>, Action<Type,ExportBuilder>)\n- uid: System.Action`2\n  name: Action<T1,T2>\n  nameWithType: Action<T1,T2>\n  fullName: System.Action<T1,T2>\n- uid: System.Action{System.Type,System.ComponentModel.Composition.Registration.ExportBuilder}\n  parent: System\n  isExternal: false\n  name: Action<Type,ExportBuilder>\n  nameWithType: Action<Type,ExportBuilder>\n  fullName: System.Action<System.Type,System.ComponentModel.Composition.Registration.ExportBuilder>\n  spec.csharp:\n  - uid: System.Action`2\n    name: Action\n    nameWithType: Action\n    fullName: System.Action\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Type\n    name: Type\n    nameWithType: Type\n    fullName: System.Type\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.ComponentModel.Composition.Registration.ExportBuilder\n    name: ExportBuilder\n    nameWithType: ExportBuilder\n    fullName: System.ComponentModel.Composition.Registration.ExportBuilder\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: ExportProperties(Predicate<PropertyInfo>, Action<PropertyInfo,ExportBuilder>)\n  nameWithType: PartBuilder.ExportProperties(Predicate<PropertyInfo>, Action<PropertyInfo,ExportBuilder>)\n  fullName: PartBuilder.ExportProperties(Predicate<PropertyInfo>, Action<PropertyInfo,ExportBuilder>)\n- uid: System.Reflection.PropertyInfo\n  name: PropertyInfo\n  nameWithType: PropertyInfo\n  fullName: System.Reflection.PropertyInfo\n- uid: System.Predicate{System.Reflection.PropertyInfo}\n  parent: System\n  isExternal: false\n  name: Predicate<PropertyInfo>\n  nameWithType: Predicate<PropertyInfo>\n  fullName: System.Predicate<System.Reflection.PropertyInfo>\n  spec.csharp:\n  - uid: System.Predicate`1\n    name: Predicate\n    nameWithType: Predicate\n    fullName: System.Predicate\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Reflection.PropertyInfo\n    name: PropertyInfo\n    nameWithType: PropertyInfo\n    fullName: System.Reflection.PropertyInfo\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder}\n  parent: System\n  isExternal: false\n  name: Action<PropertyInfo,ExportBuilder>\n  nameWithType: Action<PropertyInfo,ExportBuilder>\n  fullName: System.Action<System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder>\n  spec.csharp:\n  - uid: System.Action`2\n    name: Action\n    nameWithType: Action\n    fullName: System.Action\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Reflection.PropertyInfo\n    name: PropertyInfo\n    nameWithType: PropertyInfo\n    fullName: System.Reflection.PropertyInfo\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.ComponentModel.Composition.Registration.ExportBuilder\n    name: ExportBuilder\n    nameWithType: ExportBuilder\n    fullName: System.ComponentModel.Composition.Registration.ExportBuilder\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: ExportProperties(Predicate<PropertyInfo>)\n  nameWithType: PartBuilder.ExportProperties(Predicate<PropertyInfo>)\n  fullName: PartBuilder.ExportProperties(Predicate<PropertyInfo>)\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: ExportProperties<T>(Predicate<PropertyInfo>)\n  nameWithType: PartBuilder.ExportProperties<T>(Predicate<PropertyInfo>)\n  fullName: PartBuilder.ExportProperties<T>(Predicate<PropertyInfo>)\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: ExportProperties<T>(Predicate<PropertyInfo>, Action<PropertyInfo,ExportBuilder>)\n  nameWithType: PartBuilder.ExportProperties<T>(Predicate<PropertyInfo>, Action<PropertyInfo,ExportBuilder>)\n  fullName: PartBuilder.ExportProperties<T>(Predicate<PropertyInfo>, Action<PropertyInfo,ExportBuilder>)\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: ImportProperties(Predicate<PropertyInfo>)\n  nameWithType: PartBuilder.ImportProperties(Predicate<PropertyInfo>)\n  fullName: PartBuilder.ImportProperties(Predicate<PropertyInfo>)\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: ImportProperties(Predicate<PropertyInfo>, Action<PropertyInfo,ImportBuilder>)\n  nameWithType: PartBuilder.ImportProperties(Predicate<PropertyInfo>, Action<PropertyInfo,ImportBuilder>)\n  fullName: PartBuilder.ImportProperties(Predicate<PropertyInfo>, Action<PropertyInfo,ImportBuilder>)\n- uid: System.ComponentModel.Composition.Registration.ImportBuilder\n  name: ImportBuilder\n  nameWithType: ImportBuilder\n  fullName: System.ComponentModel.Composition.Registration.ImportBuilder\n- uid: System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder}\n  parent: System\n  isExternal: false\n  name: Action<PropertyInfo,ImportBuilder>\n  nameWithType: Action<PropertyInfo,ImportBuilder>\n  fullName: System.Action<System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder>\n  spec.csharp:\n  - uid: System.Action`2\n    name: Action\n    nameWithType: Action\n    fullName: System.Action\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Reflection.PropertyInfo\n    name: PropertyInfo\n    nameWithType: PropertyInfo\n    fullName: System.Reflection.PropertyInfo\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.ComponentModel.Composition.Registration.ImportBuilder\n    name: ImportBuilder\n    nameWithType: ImportBuilder\n    fullName: System.ComponentModel.Composition.Registration.ImportBuilder\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: ImportProperties<T>(Predicate<PropertyInfo>)\n  nameWithType: PartBuilder.ImportProperties<T>(Predicate<PropertyInfo>)\n  fullName: PartBuilder.ImportProperties<T>(Predicate<PropertyInfo>)\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: ImportProperties<T>(Predicate<PropertyInfo>, Action<PropertyInfo,ImportBuilder>)\n  nameWithType: PartBuilder.ImportProperties<T>(Predicate<PropertyInfo>, Action<PropertyInfo,ImportBuilder>)\n  fullName: PartBuilder.ImportProperties<T>(Predicate<PropertyInfo>, Action<PropertyInfo,ImportBuilder>)\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.SelectConstructor(System.Func{System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: SelectConstructor(Func<ConstructorInfo[],ConstructorInfo>)\n  nameWithType: PartBuilder.SelectConstructor(Func<ConstructorInfo[],ConstructorInfo>)\n  fullName: PartBuilder.SelectConstructor(Func<ConstructorInfo[],ConstructorInfo>)\n- uid: System.Reflection.ConstructorInfo\n  name: ConstructorInfo\n  nameWithType: ConstructorInfo\n  fullName: System.Reflection.ConstructorInfo\n- uid: System.Func{System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo}\n  parent: System\n  isExternal: false\n  name: Func<ConstructorInfo[],ConstructorInfo>\n  nameWithType: Func<ConstructorInfo[],ConstructorInfo>\n  fullName: System.Func<System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo>\n  spec.csharp:\n  - uid: System.Func`2\n    name: Func\n    nameWithType: Func\n    fullName: System.Func\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Reflection.ConstructorInfo\n    name: ConstructorInfo\n    nameWithType: ConstructorInfo\n    fullName: System.Reflection.ConstructorInfo\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Reflection.ConstructorInfo\n    name: ConstructorInfo\n    nameWithType: ConstructorInfo\n    fullName: System.Reflection.ConstructorInfo\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.SelectConstructor(System.Func{System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo},System.Action{System.Reflection.ParameterInfo,System.ComponentModel.Composition.Registration.ImportBuilder})\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: SelectConstructor(Func<ConstructorInfo[],ConstructorInfo>, Action<ParameterInfo,ImportBuilder>)\n  nameWithType: PartBuilder.SelectConstructor(Func<ConstructorInfo[],ConstructorInfo>, Action<ParameterInfo,ImportBuilder>)\n  fullName: PartBuilder.SelectConstructor(Func<ConstructorInfo[],ConstructorInfo>, Action<ParameterInfo,ImportBuilder>)\n- uid: System.Reflection.ParameterInfo\n  name: ParameterInfo\n  nameWithType: ParameterInfo\n  fullName: System.Reflection.ParameterInfo\n- uid: System.Action{System.Reflection.ParameterInfo,System.ComponentModel.Composition.Registration.ImportBuilder}\n  parent: System\n  isExternal: false\n  name: Action<ParameterInfo,ImportBuilder>\n  nameWithType: Action<ParameterInfo,ImportBuilder>\n  fullName: System.Action<System.Reflection.ParameterInfo,System.ComponentModel.Composition.Registration.ImportBuilder>\n  spec.csharp:\n  - uid: System.Action`2\n    name: Action\n    nameWithType: Action\n    fullName: System.Action\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Reflection.ParameterInfo\n    name: ParameterInfo\n    nameWithType: ParameterInfo\n    fullName: System.Reflection.ParameterInfo\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.ComponentModel.Composition.Registration.ImportBuilder\n    name: ImportBuilder\n    nameWithType: ImportBuilder\n    fullName: System.ComponentModel.Composition.Registration.ImportBuilder\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.SetCreationPolicy(System.ComponentModel.Composition.CreationPolicy)\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: SetCreationPolicy(CreationPolicy)\n  nameWithType: PartBuilder.SetCreationPolicy(CreationPolicy)\n  fullName: PartBuilder.SetCreationPolicy(CreationPolicy)\n- uid: System.ComponentModel.Composition.CreationPolicy\n  parent: System.ComponentModel.Composition\n  isExternal: false\n  name: CreationPolicy\n  nameWithType: CreationPolicy\n  fullName: System.ComponentModel.Composition.CreationPolicy\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.AddMetadata*\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: AddMetadata\n  nameWithType: PartBuilder.AddMetadata\n  fullName: PartBuilder.AddMetadata\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Registration/PartBuilder.xml\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.Export*\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: Export\n  nameWithType: PartBuilder.Export\n  fullName: PartBuilder.Export\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Registration/PartBuilder.xml\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.Export``1*\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: Export<T>\n  nameWithType: PartBuilder.Export<T>\n  fullName: PartBuilder.Export<T>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Registration/PartBuilder.xml\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces*\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: ExportInterfaces\n  nameWithType: PartBuilder.ExportInterfaces\n  fullName: PartBuilder.ExportInterfaces\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Registration/PartBuilder.xml\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties*\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: ExportProperties\n  nameWithType: PartBuilder.ExportProperties\n  fullName: PartBuilder.ExportProperties\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Registration/PartBuilder.xml\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties``1*\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: ExportProperties<T>\n  nameWithType: PartBuilder.ExportProperties<T>\n  fullName: PartBuilder.ExportProperties<T>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Registration/PartBuilder.xml\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties*\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: ImportProperties\n  nameWithType: PartBuilder.ImportProperties\n  fullName: PartBuilder.ImportProperties\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Registration/PartBuilder.xml\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties``1*\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: ImportProperties<T>\n  nameWithType: PartBuilder.ImportProperties<T>\n  fullName: PartBuilder.ImportProperties<T>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Registration/PartBuilder.xml\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.SelectConstructor*\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: SelectConstructor\n  nameWithType: PartBuilder.SelectConstructor\n  fullName: PartBuilder.SelectConstructor\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Registration/PartBuilder.xml\n- uid: System.ComponentModel.Composition.Registration.PartBuilder.SetCreationPolicy*\n  parent: System.ComponentModel.Composition.Registration.PartBuilder\n  isExternal: false\n  name: SetCreationPolicy\n  nameWithType: PartBuilder.SetCreationPolicy\n  fullName: PartBuilder.SetCreationPolicy\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Registration/PartBuilder.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}