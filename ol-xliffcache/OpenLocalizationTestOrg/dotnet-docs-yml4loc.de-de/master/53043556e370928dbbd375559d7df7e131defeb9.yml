### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.DataVisualization.Charting.Grid
  commentId: T:System.Windows.Forms.DataVisualization.Charting.Grid
  id: Grid
  children:
  - System.Windows.Forms.DataVisualization.Charting.Grid.#ctor
  - System.Windows.Forms.DataVisualization.Charting.Grid.Enabled
  - System.Windows.Forms.DataVisualization.Charting.Grid.Interval
  - System.Windows.Forms.DataVisualization.Charting.Grid.IntervalOffset
  - System.Windows.Forms.DataVisualization.Charting.Grid.IntervalOffsetType
  - System.Windows.Forms.DataVisualization.Charting.Grid.IntervalType
  - System.Windows.Forms.DataVisualization.Charting.Grid.LineColor
  - System.Windows.Forms.DataVisualization.Charting.Grid.LineDashStyle
  - System.Windows.Forms.DataVisualization.Charting.Grid.LineWidth
  langs:
  - csharp
  name: Grid
  nameWithType: Grid
  fullName: System.Windows.Forms.DataVisualization.Charting.Grid
  type: Class
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: Provides methods and properties that manage the major and minor grids of <xref href="System.Windows.Forms.DataVisualization.Charting.Axis"></xref> objects.
  remarks: "This class provides the functionality for the grids on the chart, and is exposed using the <xref:System.Windows.Forms.DataVisualization.Charting.Axis.MajorGrid%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.Axis.MinorGrid%2A> properties of each <xref:System.Windows.Forms.DataVisualization.Charting.Axis> object.  \n  \n Major grid lines by default do not have their <xref:System.Windows.Forms.DataVisualization.Charting.Grid.Interval%2A>, <xref:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalOffset%2A>, <xref:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalType%2A>, and <xref:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalOffsetType%2A> properties set. When these properties for major grid lines are not set, the <xref:System.Windows.Forms.DataVisualization.Charting.Chart> control determines the appropriate values for grid lines automatically.  \n  \n The axis and its minor grid lines by default have their <xref:System.Windows.Forms.DataVisualization.Charting.Grid.Interval%2A>, <xref:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalOffset%2A>, <xref:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalType%2A>, and <xref:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalOffsetType%2A> properties set to **Auto** (0). If axis labels or minor grid lines are enabled and these properties are not modified, the <xref:System.Windows.Forms.DataVisualization.Charting.Chart> control automatically determines how often to draw the minor grid lines.  \n  \n Axis grids:  \n  \n-   Can be enabled or disabled.  \n  \n-   Have a starting point that determines where they are first drawn.  \n  \n-   Display lines that can be set for style, width and color.  \n  \n-   Can have either automatic intervals, or intervals that are set manually."
  syntax:
    content: public class Grid
  inheritance:
  - System.Object
  derivedClasses:
  - System.Windows.Forms.DataVisualization.Charting.TickMark
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Grid.xml
  ms.technology:
  - dotnet-winforms
  ms.author: mblythe
  manager: mblythe
- uid: System.Windows.Forms.DataVisualization.Charting.Grid.#ctor
  commentId: M:System.Windows.Forms.DataVisualization.Charting.Grid.#ctor
  id: '#ctor'
  parent: System.Windows.Forms.DataVisualization.Charting.Grid
  langs:
  - csharp
  name: Grid()
  nameWithType: Grid.Grid()
  fullName: Grid.Grid()
  type: Constructor
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: Initializes a new instance of the <xref href="System.Windows.Forms.DataVisualization.Charting.Grid"></xref> class.
  syntax:
    content: public Grid ();
    parameters: []
  overload: System.Windows.Forms.DataVisualization.Charting.Grid.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Grid.xml
  ms.technology:
  - dotnet-winforms
  ms.author: mblythe
  manager: mblythe
- uid: System.Windows.Forms.DataVisualization.Charting.Grid.Enabled
  commentId: P:System.Windows.Forms.DataVisualization.Charting.Grid.Enabled
  id: Enabled
  parent: System.Windows.Forms.DataVisualization.Charting.Grid
  langs:
  - csharp
  name: Enabled
  nameWithType: Grid.Enabled
  fullName: Grid.Enabled
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: Gets or sets a flag that determines whether major or minor grid lines are enabled.
  remarks: "Major and minor grids are visible when enabled, and not visible when disabled.  \n  \n Tick marks will not be displayed if disabled.  \n  \n You can disable tick marks by setting the <xref:System.Windows.Forms.DataVisualization.Charting.TickMark.TickMarkStyle%2A> property to <xref:System.Windows.Forms.DataVisualization.Charting.TickMarkStyle.None>."
  syntax:
    content: >-
      [System.ComponentModel.Bindable(true)]

      public bool Enabled { get; set; }
    return:
      type: System.Boolean
      description: '`True` if enabled, `false` if disabled. The default is `true` for major grid objects and `false` for minor grid objects.'
  overload: System.Windows.Forms.DataVisualization.Charting.Grid.Enabled*
  exceptions: []
  attributes:
  - type: System.ComponentModel.BindableAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Grid.xml
  ms.technology:
  - dotnet-winforms
  ms.author: mblythe
  manager: mblythe
- uid: System.Windows.Forms.DataVisualization.Charting.Grid.Interval
  commentId: P:System.Windows.Forms.DataVisualization.Charting.Grid.Interval
  id: Interval
  parent: System.Windows.Forms.DataVisualization.Charting.Grid
  langs:
  - csharp
  name: Interval
  nameWithType: Grid.Interval
  fullName: Grid.Interval
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: Gets or sets the interval between major or minor grid lines.
  remarks: "By default this property is not set for axis labels, major tick marks and major grid lines. If it is not set—either by default, by explicitly using <xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.NotSet> at design time, or by assigning a value of <xref:System.Double.NaN> at run time—the actual value of this property is determined by the <xref:System.Windows.Forms.DataVisualization.Charting.Axis.Interval%2A> property of the <xref:System.Windows.Forms.DataVisualization.Charting.Axis> object to which the chart element, such as a grid line or tick mark, belongs.  \n  \n The interval of minor tick marks and grid lines is never affected by the <xref:System.Windows.Forms.DataVisualization.Charting.Axis.Interval%2A> property value.  \n  \n The interval is measured in axis units, and determines how often an applicable chart element is drawn. For example, suppose a column chart has an X axis step of 1 (that is, 1, 2, 3, 4, and so forth); if you set the <xref:System.Windows.Forms.DataVisualization.Charting.LabelStyle.Interval%2A> property for the X axis to 2, an axis label will be displayed for every other column.  \n  \n The same holds true for all applicable chart elements. In other words, if in the previous example strip lines were being used, with an <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.IntervalOffset%2A> of 0.5, and their <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.Interval%2A> property was 2, a strip line would be displayed at 0.5, 2.5, 4.5, and so on.  \n  \n If you set a chart element `Interval` property to zero, an interval will be automatically determined by the <xref:System.Windows.Forms.DataVisualization.Charting.Chart>control."
  syntax:
    content: >-
      [System.ComponentModel.Bindable(true)]

      [System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.AxisElementIntervalValueConverter))]

      public double Interval { get; set; }
    return:
      type: System.Double
      description: A `double` value that represents the interval between grid lines. By default, the value is not set (<xref href="System.Double.NaN"></xref>) for major grid lines. For minor grid lines, the default value is zero (0).
  overload: System.Windows.Forms.DataVisualization.Charting.Grid.Interval*
  exceptions: []
  attributes:
  - type: System.ComponentModel.BindableAttribute
  - type: System.ComponentModel.TypeConverterAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Grid.xml
  ms.technology:
  - dotnet-winforms
  ms.author: mblythe
  manager: mblythe
- uid: System.Windows.Forms.DataVisualization.Charting.Grid.IntervalOffset
  commentId: P:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalOffset
  id: IntervalOffset
  parent: System.Windows.Forms.DataVisualization.Charting.Grid
  langs:
  - csharp
  name: IntervalOffset
  nameWithType: Grid.IntervalOffset
  fullName: Grid.IntervalOffset
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: Gets or sets the offset of grid lines.
  remarks: "By default this property is not set for axis labels, major tick marks and major grid lines. If it is not set—either by default, by explicitly specifying \"Not Set\"at design time, or by assigning it a value of <xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.NotSet> at run time—the actual value of this property is determined by the <xref:System.Windows.Forms.DataVisualization.Charting.Axis.IntervalOffset%2A> property of the <xref:System.Windows.Forms.DataVisualization.Charting.Axis> object that the chart element, such as a grid line or a tick mark, belongs to.  \n  \n The interval offset of minor tick marks and grid lines is never affected by the value of the <xref:System.Windows.Forms.DataVisualization.Charting.Axis.IntervalOffset%2A> property of the <xref:System.Windows.Forms.DataVisualization.Charting.Axis> object.  \n  \n The <xref:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalOffsetType%2A> property setting defines the units of measurement of the offset.  \n  \n The <xref:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalOffset%2A> can be a negative value."
  syntax:
    content: >-
      [System.ComponentModel.Bindable(true)]

      [System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.AxisElementIntervalValueConverter))]

      public double IntervalOffset { get; set; }
    return:
      type: System.Double
      description: A `double` value that represents the interval offset.
  overload: System.Windows.Forms.DataVisualization.Charting.Grid.IntervalOffset*
  exceptions: []
  attributes:
  - type: System.ComponentModel.BindableAttribute
  - type: System.ComponentModel.TypeConverterAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Grid.xml
  ms.technology:
  - dotnet-winforms
  ms.author: mblythe
  manager: mblythe
- uid: System.Windows.Forms.DataVisualization.Charting.Grid.IntervalOffsetType
  commentId: P:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalOffsetType
  id: IntervalOffsetType
  parent: System.Windows.Forms.DataVisualization.Charting.Grid
  langs:
  - csharp
  name: IntervalOffsetType
  nameWithType: Grid.IntervalOffsetType
  fullName: Grid.IntervalOffsetType
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: Gets or sets the interval offset type of major and minor grid lines.
  remarks: "By default this property is not set for axis labels, major tick marks and major grid lines. If it is not set—either by default, by explicitly specifying \"Not Set\" at design time, or by assigning it a value of <xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.NotSet> at run time—the actual value of this property is determined by the <xref:System.Windows.Forms.DataVisualization.Charting.Axis.IntervalOffsetType%2A> property of the <xref:System.Windows.Forms.DataVisualization.Charting.Axis> object that the chart element—a grid line or tick mark, for example—belongs to.  \n  \n The interval offset type of minor tick marks and grid lines is never affected by the <xref:System.Windows.Forms.DataVisualization.Charting.Axis.IntervalOffsetType%2A> property value.  \n  \n If this interval offset type is set to <xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.Auto>, the <xref:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalType%2A> property will be used."
  syntax:
    content: >-
      [System.ComponentModel.Bindable(true)]

      public System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType IntervalOffsetType { get; set; }
    return:
      type: System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType
      description: A <xref href="System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType"></xref> enumeration value that indicates the interval type. By default it is not set for major grid lines. The default value for minor grid lines is <xref href="System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.Auto"></xref>.
  overload: System.Windows.Forms.DataVisualization.Charting.Grid.IntervalOffsetType*
  exceptions: []
  attributes:
  - type: System.ComponentModel.BindableAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Grid.xml
  ms.technology:
  - dotnet-winforms
  ms.author: mblythe
  manager: mblythe
- uid: System.Windows.Forms.DataVisualization.Charting.Grid.IntervalType
  commentId: P:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalType
  id: IntervalType
  parent: System.Windows.Forms.DataVisualization.Charting.Grid
  langs:
  - csharp
  name: IntervalType
  nameWithType: Grid.IntervalType
  fullName: Grid.IntervalType
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: Gets or sets the interval type for major or minor grid lines.
  remarks: "By default this property is not set for axis labels, major tick marks and major grid lines. If it is not set—either by default, by explicitly using \"Not Set\" at design time, or by assigning it a value of <xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.NotSet> at run time— the actual value of this property is determined by the <xref:System.Windows.Forms.DataVisualization.Charting.Axis.IntervalOffsetType%2A> property of the <xref:System.Windows.Forms.DataVisualization.Charting.Axis> object that the chart element—a grid line or tick mark, for example—belongs to.  \n  \n The interval type of minor tick marks and grid lines is never affected by the value of the <xref:System.Windows.Forms.DataVisualization.Charting.Axis.IntervalType%2A> property.  \n  \n Interval types can be set to <xref:System.Web.UI.DataVisualization.Charting.DateTimeIntervalType.Auto>; the type of interval then depends on either the X-values or Y-values of the plotted <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint> objects, depending on which axis the applicable elements belong to.  \n  \n Setting the <xref:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalType%2A> property for a value axis will only have an effect if the values of the data points are <xref:System.DateTime> or `double` values. Also, the <xref:System.Windows.Forms.DataVisualization.Charting.Series.XValueType%2A> or <xref:System.Windows.Forms.DataVisualization.Charting.Series.YValueType%2A> property of the plotted <xref:System.Windows.Forms.DataVisualization.Charting.Series> must be set to <xref:System.Windows.Forms.DataVisualization.Charting.ChartValueType.Auto> or <xref:System.Windows.Forms.DataVisualization.Charting.ChartValueType.DateTime>.  \n  \n Setting the <xref:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalType%2A> property for a categorical axis will only have an effect if the <xref:System.Windows.Forms.DataVisualization.Charting.Series.XValueType%2A> property (or <xref:System.Windows.Forms.DataVisualization.Charting.Series.YValueType%2A> property, depending on the axis in question) of the plotted <xref:System.Windows.Forms.DataVisualization.Charting.Series> object is either <xref:System.Windows.Forms.DataVisualization.Charting.ChartValueType.Auto> or <xref:System.Windows.Forms.DataVisualization.Charting.ChartValueType.DateTime>.  \n  \n> [!NOTE]\n>  Sunday is considered the first day of the week."
  syntax:
    content: >-
      [System.ComponentModel.Bindable(true)]

      public System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType IntervalType { get; set; }
    return:
      type: System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType
      description: A <xref href="System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType"></xref> enumeration value that indicates the interval type. By default it is not set for axis labels, major tick marks and major grid lines, by using the <xref href="System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.NotSet"></xref> enumeration value. The default value for minor tick marks and grid lines is <xref href="System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.Auto"></xref>.
  overload: System.Windows.Forms.DataVisualization.Charting.Grid.IntervalType*
  exceptions: []
  attributes:
  - type: System.ComponentModel.BindableAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Grid.xml
  ms.technology:
  - dotnet-winforms
  ms.author: mblythe
  manager: mblythe
- uid: System.Windows.Forms.DataVisualization.Charting.Grid.LineColor
  commentId: P:System.Windows.Forms.DataVisualization.Charting.Grid.LineColor
  id: LineColor
  parent: System.Windows.Forms.DataVisualization.Charting.Grid
  langs:
  - csharp
  name: LineColor
  nameWithType: Grid.LineColor
  fullName: Grid.LineColor
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: Gets or sets the line color of a grid.
  remarks: The <xref:System.Windows.Forms.DataVisualization.Charting.Grid.LineColor%2A> property is used to specify the color of major and minor tick marks or grids.
  syntax:
    content: >-
      [System.ComponentModel.Bindable(true)]

      [System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))]

      public System.Drawing.Color LineColor { get; set; }
    return:
      type: System.Drawing.Color
      description: A <xref href="System.Drawing.Color"></xref> object. The default value is <xref href="System.Drawing.Color.Black"></xref>.
  overload: System.Windows.Forms.DataVisualization.Charting.Grid.LineColor*
  exceptions: []
  attributes:
  - type: System.ComponentModel.BindableAttribute
  - type: System.ComponentModel.TypeConverterAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Grid.xml
  ms.technology:
  - dotnet-winforms
  ms.author: mblythe
  manager: mblythe
- uid: System.Windows.Forms.DataVisualization.Charting.Grid.LineDashStyle
  commentId: P:System.Windows.Forms.DataVisualization.Charting.Grid.LineDashStyle
  id: LineDashStyle
  parent: System.Windows.Forms.DataVisualization.Charting.Grid
  langs:
  - csharp
  name: LineDashStyle
  nameWithType: Grid.LineDashStyle
  fullName: Grid.LineDashStyle
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: Gets or sets the line style of a grid.
  remarks: The <xref:System.Windows.Forms.DataVisualization.Charting.Grid.LineDashStyle%2A> property can be used to specify the line style of major and minor tick marks or grids. The line can be solid, dotted, and so forth.
  syntax:
    content: >-
      [System.ComponentModel.Bindable(true)]

      public System.Windows.Forms.DataVisualization.Charting.ChartDashStyle LineDashStyle { get; set; }
    return:
      type: System.Windows.Forms.DataVisualization.Charting.ChartDashStyle
      description: A <xref href="System.Windows.Forms.DataVisualization.Charting.ChartDashStyle"></xref> enumeration value. The default is <xref href="System.Windows.Forms.DataVisualization.Charting.ChartDashStyle.Solid"></xref>.
  overload: System.Windows.Forms.DataVisualization.Charting.Grid.LineDashStyle*
  exceptions: []
  attributes:
  - type: System.ComponentModel.BindableAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Grid.xml
  ms.technology:
  - dotnet-winforms
  ms.author: mblythe
  manager: mblythe
- uid: System.Windows.Forms.DataVisualization.Charting.Grid.LineWidth
  commentId: P:System.Windows.Forms.DataVisualization.Charting.Grid.LineWidth
  id: LineWidth
  parent: System.Windows.Forms.DataVisualization.Charting.Grid
  langs:
  - csharp
  name: LineWidth
  nameWithType: Grid.LineWidth
  fullName: Grid.LineWidth
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: Gets or sets the line width of major and minor grid lines.
  remarks: The <xref:System.Windows.Forms.DataVisualization.Charting.Grid.LineWidth%2A> property can be used to specify the line width, in pixels, of major and minor tick marks or grids.
  syntax:
    content: >-
      [System.ComponentModel.Bindable(true)]

      public int LineWidth { get; set; }
    return:
      type: System.Int32
      description: An `integer` that represents the line width in pixels. The default value is one (1).
  overload: System.Windows.Forms.DataVisualization.Charting.Grid.LineWidth*
  exceptions: []
  attributes:
  - type: System.ComponentModel.BindableAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Grid.xml
  ms.technology:
  - dotnet-winforms
  ms.author: mblythe
  manager: mblythe
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Forms.DataVisualization.Charting.Grid.#ctor
  parent: System.Windows.Forms.DataVisualization.Charting.Grid
  isExternal: false
  name: Grid()
  nameWithType: Grid.Grid()
  fullName: Grid.Grid()
- uid: System.Windows.Forms.DataVisualization.Charting.Grid.Enabled
  parent: System.Windows.Forms.DataVisualization.Charting.Grid
  isExternal: false
  name: Enabled
  nameWithType: Grid.Enabled
  fullName: Grid.Enabled
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.DataVisualization.Charting.Grid.Interval
  parent: System.Windows.Forms.DataVisualization.Charting.Grid
  isExternal: false
  name: Interval
  nameWithType: Grid.Interval
  fullName: Grid.Interval
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Forms.DataVisualization.Charting.Grid.IntervalOffset
  parent: System.Windows.Forms.DataVisualization.Charting.Grid
  isExternal: false
  name: IntervalOffset
  nameWithType: Grid.IntervalOffset
  fullName: Grid.IntervalOffset
- uid: System.Windows.Forms.DataVisualization.Charting.Grid.IntervalOffsetType
  parent: System.Windows.Forms.DataVisualization.Charting.Grid
  isExternal: false
  name: IntervalOffsetType
  nameWithType: Grid.IntervalOffsetType
  fullName: Grid.IntervalOffsetType
- uid: System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType
  parent: System.Windows.Forms.DataVisualization.Charting
  isExternal: false
  name: DateTimeIntervalType
  nameWithType: DateTimeIntervalType
  fullName: System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType
- uid: System.Windows.Forms.DataVisualization.Charting.Grid.IntervalType
  parent: System.Windows.Forms.DataVisualization.Charting.Grid
  isExternal: false
  name: IntervalType
  nameWithType: Grid.IntervalType
  fullName: Grid.IntervalType
- uid: System.Windows.Forms.DataVisualization.Charting.Grid.LineColor
  parent: System.Windows.Forms.DataVisualization.Charting.Grid
  isExternal: false
  name: LineColor
  nameWithType: Grid.LineColor
  fullName: Grid.LineColor
- uid: System.Drawing.Color
  parent: System.Drawing
  isExternal: false
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color
- uid: System.Windows.Forms.DataVisualization.Charting.Grid.LineDashStyle
  parent: System.Windows.Forms.DataVisualization.Charting.Grid
  isExternal: false
  name: LineDashStyle
  nameWithType: Grid.LineDashStyle
  fullName: Grid.LineDashStyle
- uid: System.Windows.Forms.DataVisualization.Charting.ChartDashStyle
  parent: System.Windows.Forms.DataVisualization.Charting
  isExternal: false
  name: ChartDashStyle
  nameWithType: ChartDashStyle
  fullName: System.Windows.Forms.DataVisualization.Charting.ChartDashStyle
- uid: System.Windows.Forms.DataVisualization.Charting.Grid.LineWidth
  parent: System.Windows.Forms.DataVisualization.Charting.Grid
  isExternal: false
  name: LineWidth
  nameWithType: Grid.LineWidth
  fullName: Grid.LineWidth
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.DataVisualization.Charting.Grid.#ctor*
  parent: System.Windows.Forms.DataVisualization.Charting.Grid
  isExternal: false
  name: Grid
  nameWithType: Grid.Grid
  fullName: Grid.Grid
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Grid.xml
- uid: System.Windows.Forms.DataVisualization.Charting.Grid.Enabled*
  parent: System.Windows.Forms.DataVisualization.Charting.Grid
  isExternal: false
  name: Enabled
  nameWithType: Grid.Enabled
  fullName: Grid.Enabled
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Grid.xml
- uid: System.Windows.Forms.DataVisualization.Charting.Grid.Interval*
  parent: System.Windows.Forms.DataVisualization.Charting.Grid
  isExternal: false
  name: Interval
  nameWithType: Grid.Interval
  fullName: Grid.Interval
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Grid.xml
- uid: System.Windows.Forms.DataVisualization.Charting.Grid.IntervalOffset*
  parent: System.Windows.Forms.DataVisualization.Charting.Grid
  isExternal: false
  name: IntervalOffset
  nameWithType: Grid.IntervalOffset
  fullName: Grid.IntervalOffset
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Grid.xml
- uid: System.Windows.Forms.DataVisualization.Charting.Grid.IntervalOffsetType*
  parent: System.Windows.Forms.DataVisualization.Charting.Grid
  isExternal: false
  name: IntervalOffsetType
  nameWithType: Grid.IntervalOffsetType
  fullName: Grid.IntervalOffsetType
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Grid.xml
- uid: System.Windows.Forms.DataVisualization.Charting.Grid.IntervalType*
  parent: System.Windows.Forms.DataVisualization.Charting.Grid
  isExternal: false
  name: IntervalType
  nameWithType: Grid.IntervalType
  fullName: Grid.IntervalType
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Grid.xml
- uid: System.Windows.Forms.DataVisualization.Charting.Grid.LineColor*
  parent: System.Windows.Forms.DataVisualization.Charting.Grid
  isExternal: false
  name: LineColor
  nameWithType: Grid.LineColor
  fullName: Grid.LineColor
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Grid.xml
- uid: System.Windows.Forms.DataVisualization.Charting.Grid.LineDashStyle*
  parent: System.Windows.Forms.DataVisualization.Charting.Grid
  isExternal: false
  name: LineDashStyle
  nameWithType: Grid.LineDashStyle
  fullName: Grid.LineDashStyle
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Grid.xml
- uid: System.Windows.Forms.DataVisualization.Charting.Grid.LineWidth*
  parent: System.Windows.Forms.DataVisualization.Charting.Grid
  isExternal: false
  name: LineWidth
  nameWithType: Grid.LineWidth
  fullName: Grid.LineWidth
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms.DataVisualization.Charting/Grid.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
