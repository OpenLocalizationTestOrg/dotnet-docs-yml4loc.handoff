{"nodes":[{"content":"Provides a type converter for a property representing a field in a data source schema.","nodes":[{"pos":[0,86],"content":"Provides a type converter for a property representing a field in a data source schema.","nodes":[{"content":"Provides a type converter for a property representing a field in a data source schema.","pos":[0,86]}]}],"pos":[1321,1408],"yaml":true},{"content":"Use the <xref:System.Web.UI.Design.DataSourceViewSchemaConverter> class to convert object types before assignment to a control property. In general, the <xref:System.Web.UI.Design.DataSourceViewSchemaConverter> supports converting string object types and supplies a list of standard values available for assignment to the associated control property. The standard values collection is the list of fields in the data source schema for the current control.  \n  \n To support converting additional object types, derive a class from <xref:System.Web.UI.Design.DataSourceViewSchemaConverter> and override the <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.CanConvertFrom%2A> and <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.ConvertFrom%2A> methods for the additional object types. To support a custom list of standard assignable values, override the <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues%2A> method.  \n  \n Apply the <xref:System.ComponentModel.TypeConverterAttribute> attribute to specify the <xref:System.Web.UI.Design.DataSourceViewSchemaConverter> class as the type converter for a control property. For example, the <xref:System.Web.UI.WebControls.DataControlField.SortExpression%2A> property of the <xref:System.Web.UI.WebControls.DataControlField> class and the <xref:System.Web.UI.WebControls.BoundField.DataField%2A> property of the <xref:System.Web.UI.WebControls.BoundField> class use the <xref:System.Web.UI.Design.DataSourceViewSchemaConverter> as the property type converter.  \n  \n> [!NOTE]\n>  You should never access a type converter directly. Instead, call the appropriate converter by using a <xref:System.ComponentModel.TypeDescriptor> object. For more information, see the examples in <xref:System.ComponentModel.TypeConverter>.  \n  \n The <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesSupported%2A> method indicates that the converter supports returning a list of available values through the <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues%2A> method. The <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesExclusive%2A> method indicates that the list is not an exclusive list of possible values.","nodes":[{"pos":[0,454],"content":"Use the <xref:System.Web.UI.Design.DataSourceViewSchemaConverter> class to convert object types before assignment to a control property. In general, the <xref:System.Web.UI.Design.DataSourceViewSchemaConverter> supports converting string object types and supplies a list of standard values available for assignment to the associated control property. The standard values collection is the list of fields in the data source schema for the current control.","nodes":[{"content":"Use the <xref:System.Web.UI.Design.DataSourceViewSchemaConverter> class to convert object types before assignment to a control property. In general, the <xref:System.Web.UI.Design.DataSourceViewSchemaConverter> supports converting string object types and supplies a list of standard values available for assignment to the associated control property. The standard values collection is the list of fields in the data source schema for the current control.","pos":[0,454],"nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Web.UI.Design.DataSourceViewSchemaConverter&gt;</ph> class to convert object types before assignment to a control property.","pos":[0,136],"source":"Use the <xref:System.Web.UI.Design.DataSourceViewSchemaConverter> class to convert object types before assignment to a control property."},{"content":"In general, the <ph id=\"ph1\">&lt;xref:System.Web.UI.Design.DataSourceViewSchemaConverter&gt;</ph> supports converting string object types and supplies a list of standard values available for assignment to the associated control property.","pos":[137,350],"source":" In general, the <xref:System.Web.UI.Design.DataSourceViewSchemaConverter> supports converting string object types and supplies a list of standard values available for assignment to the associated control property."},{"content":"The standard values collection is the list of fields in the data source schema for the current control.","pos":[351,454]}]}]},{"pos":[461,952],"content":"To support converting additional object types, derive a class from <xref:System.Web.UI.Design.DataSourceViewSchemaConverter> and override the <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.CanConvertFrom%2A> and <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.ConvertFrom%2A> methods for the additional object types. To support a custom list of standard assignable values, override the <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues%2A> method.","nodes":[{"content":"To support converting additional object types, derive a class from <xref:System.Web.UI.Design.DataSourceViewSchemaConverter> and override the <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.CanConvertFrom%2A> and <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.ConvertFrom%2A> methods for the additional object types. To support a custom list of standard assignable values, override the <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues%2A> method.","pos":[0,491],"nodes":[{"content":"To support converting additional object types, derive a class from <ph id=\"ph1\">&lt;xref:System.Web.UI.Design.DataSourceViewSchemaConverter&gt;</ph> and override the <ph id=\"ph2\">&lt;xref:System.Web.UI.Design.DataSourceViewSchemaConverter.CanConvertFrom%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Web.UI.Design.DataSourceViewSchemaConverter.ConvertFrom%2A&gt;</ph> methods for the additional object types.","pos":[0,335],"source":"To support converting additional object types, derive a class from <xref:System.Web.UI.Design.DataSourceViewSchemaConverter> and override the <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.CanConvertFrom%2A> and <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.ConvertFrom%2A> methods for the additional object types."},{"content":"To support a custom list of standard assignable values, override the <ph id=\"ph1\">&lt;xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues%2A&gt;</ph> method.","pos":[336,491],"source":" To support a custom list of standard assignable values, override the <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues%2A> method."}]}]},{"pos":[959,1541],"content":"Apply the <xref:System.ComponentModel.TypeConverterAttribute> attribute to specify the <xref:System.Web.UI.Design.DataSourceViewSchemaConverter> class as the type converter for a control property. For example, the <xref:System.Web.UI.WebControls.DataControlField.SortExpression%2A> property of the <xref:System.Web.UI.WebControls.DataControlField> class and the <xref:System.Web.UI.WebControls.BoundField.DataField%2A> property of the <xref:System.Web.UI.WebControls.BoundField> class use the <xref:System.Web.UI.Design.DataSourceViewSchemaConverter> as the property type converter.","nodes":[{"content":"Apply the <xref:System.ComponentModel.TypeConverterAttribute> attribute to specify the <xref:System.Web.UI.Design.DataSourceViewSchemaConverter> class as the type converter for a control property. For example, the <xref:System.Web.UI.WebControls.DataControlField.SortExpression%2A> property of the <xref:System.Web.UI.WebControls.DataControlField> class and the <xref:System.Web.UI.WebControls.BoundField.DataField%2A> property of the <xref:System.Web.UI.WebControls.BoundField> class use the <xref:System.Web.UI.Design.DataSourceViewSchemaConverter> as the property type converter.","pos":[0,582],"nodes":[{"content":"Apply the <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph> attribute to specify the <ph id=\"ph2\">&lt;xref:System.Web.UI.Design.DataSourceViewSchemaConverter&gt;</ph> class as the type converter for a control property.","pos":[0,196],"source":"Apply the <xref:System.ComponentModel.TypeConverterAttribute> attribute to specify the <xref:System.Web.UI.Design.DataSourceViewSchemaConverter> class as the type converter for a control property."},{"content":"For example, the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.DataControlField.SortExpression%2A&gt;</ph> property of the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.DataControlField&gt;</ph> class and the <ph id=\"ph3\">&lt;xref:System.Web.UI.WebControls.BoundField.DataField%2A&gt;</ph> property of the <ph id=\"ph4\">&lt;xref:System.Web.UI.WebControls.BoundField&gt;</ph> class use the <ph id=\"ph5\">&lt;xref:System.Web.UI.Design.DataSourceViewSchemaConverter&gt;</ph> as the property type converter.","pos":[197,582],"source":" For example, the <xref:System.Web.UI.WebControls.DataControlField.SortExpression%2A> property of the <xref:System.Web.UI.WebControls.DataControlField> class and the <xref:System.Web.UI.WebControls.BoundField.DataField%2A> property of the <xref:System.Web.UI.WebControls.BoundField> class use the <xref:System.Web.UI.Design.DataSourceViewSchemaConverter> as the property type converter."}]}]},{"pos":[1549,1799],"content":"[!NOTE]\n You should never access a type converter directly. Instead, call the appropriate converter by using a <xref:System.ComponentModel.TypeDescriptor> object. For more information, see the examples in <xref:System.ComponentModel.TypeConverter>.","leadings":["","> "],"nodes":[{"content":" You should never access a type converter directly. Instead, call the appropriate converter by using a <xref:System.ComponentModel.TypeDescriptor> object. For more information, see the examples in <xref:System.ComponentModel.TypeConverter>.","pos":[8,248],"nodes":[{"content":"You should never access a type converter directly.","pos":[1,51]},{"content":"Instead, call the appropriate converter by using a <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> object.","pos":[52,154],"source":" Instead, call the appropriate converter by using a <xref:System.ComponentModel.TypeDescriptor> object."},{"content":"For more information, see the examples in <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph>.","pos":[155,240],"source":" For more information, see the examples in <xref:System.ComponentModel.TypeConverter>."}]}]},{"pos":[1806,2246],"content":"The <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesSupported%2A> method indicates that the converter supports returning a list of available values through the <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues%2A> method. The <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesExclusive%2A> method indicates that the list is not an exclusive list of possible values.","nodes":[{"content":"The <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesSupported%2A> method indicates that the converter supports returning a list of available values through the <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues%2A> method. The <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesExclusive%2A> method indicates that the list is not an exclusive list of possible values.","pos":[0,440],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesSupported%2A&gt;</ph> method indicates that the converter supports returning a list of available values through the <ph id=\"ph2\">&lt;xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues%2A&gt;</ph> method.","pos":[0,272],"source":"The <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesSupported%2A> method indicates that the converter supports returning a list of available values through the <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues%2A> method."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesExclusive%2A&gt;</ph> method indicates that the list is not an exclusive list of possible values.","pos":[273,440],"source":" The <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesExclusive%2A> method indicates that the list is not an exclusive list of possible values."}]}]}],"pos":[1419,3677],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Web.UI.Design.DataSourceViewSchemaConverter\"></xref> class.","nodes":[{"pos":[0,112],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.Design.DataSourceViewSchemaConverter\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Web.UI.Design.DataSourceViewSchemaConverter\"></xref> class."}],"pos":[8475,8588],"yaml":true},{"content":"> [!NOTE]\n>  You should never access a type converter directly. Instead, call the appropriate converter by using a <xref:System.ComponentModel.TypeDescriptor> object. For more information, see the examples in <xref:System.ComponentModel.TypeConverter>.","nodes":[{"pos":[2,252],"content":"[!NOTE]\n You should never access a type converter directly. Instead, call the appropriate converter by using a <xref:System.ComponentModel.TypeDescriptor> object. For more information, see the examples in <xref:System.ComponentModel.TypeConverter>.","leadings":["","> "],"nodes":[{"content":" You should never access a type converter directly. Instead, call the appropriate converter by using a <xref:System.ComponentModel.TypeDescriptor> object. For more information, see the examples in <xref:System.ComponentModel.TypeConverter>.","pos":[8,248],"nodes":[{"content":"You should never access a type converter directly.","pos":[1,51]},{"content":"Instead, call the appropriate converter by using a <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> object.","pos":[52,154],"source":" Instead, call the appropriate converter by using a <xref:System.ComponentModel.TypeDescriptor> object."},{"content":"For more information, see the examples in <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph>.","pos":[155,240],"source":" For more information, see the examples in <xref:System.ComponentModel.TypeConverter>."}]}]}],"pos":[8599,8864],"yaml":true,"extradata":"MT"},{"content":"Indicates whether the specified source type can be converted to the type of the associated control property.","nodes":[{"pos":[0,108],"content":"Indicates whether the specified source type can be converted to the type of the associated control property.","nodes":[{"content":"Indicates whether the specified source type can be converted to the type of the associated control property.","pos":[0,108]}]}],"pos":[10318,10427],"yaml":true},{"content":"Call the <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.CanConvertFrom%2A> method to determine whether the <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.ConvertFrom%2A> method supports converting the source type.  \n  \n The <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.ConvertFrom%2A> method can convert only from a string, so the <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.CanConvertFrom%2A> method returns `true` when `sourceType` is a string.","nodes":[{"pos":[0,233],"content":"Call the <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.CanConvertFrom%2A> method to determine whether the <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.ConvertFrom%2A> method supports converting the source type.","nodes":[{"content":"Call the <ph id=\"ph1\">&lt;xref:System.Web.UI.Design.DataSourceViewSchemaConverter.CanConvertFrom%2A&gt;</ph> method to determine whether the <ph id=\"ph2\">&lt;xref:System.Web.UI.Design.DataSourceViewSchemaConverter.ConvertFrom%2A&gt;</ph> method supports converting the source type.","pos":[0,233],"source":"Call the <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.CanConvertFrom%2A> method to determine whether the <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.ConvertFrom%2A> method supports converting the source type."}]},{"pos":[240,491],"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.Design.DataSourceViewSchemaConverter.ConvertFrom%2A&gt;</ph> method can convert only from a string, so the <ph id=\"ph2\">&lt;xref:System.Web.UI.Design.DataSourceViewSchemaConverter.CanConvertFrom%2A&gt;</ph> method returns <ph id=\"ph3\">`true`</ph> when <ph id=\"ph4\">`sourceType`</ph> is a string.","source":"The <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.ConvertFrom%2A> method can convert only from a string, so the <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.CanConvertFrom%2A> method returns `true` when `sourceType` is a string."}],"pos":[10438,10934],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> implementation that can be used to gain additional context information.","nodes":[{"pos":[0,140],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;&lt;/xref&gt;</ph> implementation that can be used to gain additional context information.","source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> implementation that can be used to gain additional context information."}],"pos":[11176,11317],"yaml":true},{"content":"The type to convert from.","nodes":[{"pos":[0,25],"content":"The type to convert from.","nodes":[{"content":"The type to convert from.","pos":[0,25]}]}],"pos":[11381,11407],"yaml":true},{"content":"`true` if the converter can perform the conversion; otherwise, `false`.","nodes":[{"pos":[0,71],"content":"<ph id=\"ph1\">`true`</ph> if the converter can perform the conversion; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the converter can perform the conversion; otherwise, `false`."}],"pos":[11465,11539],"yaml":true},{"content":"Converts the specified object to the type of the associated control property.","nodes":[{"pos":[0,77],"content":"Converts the specified object to the type of the associated control property.","nodes":[{"content":"Converts the specified object to the type of the associated control property.","pos":[0,77]}]}],"pos":[13051,13129],"yaml":true},{"content":"If `value` is a string, then the string representation of `value` is returned. If `value` is `null`, an empty string (\"\") is returned. For all other specified values, a <xref:System.NotSupportedException> exception is thrown.  \n  \n Call the <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.CanConvertFrom%2A> method to determine whether the <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.ConvertFrom%2A> method supports converting the source type.","nodes":[{"pos":[0,225],"content":"If `value` is a string, then the string representation of `value` is returned. If `value` is `null`, an empty string (\"\") is returned. For all other specified values, a <xref:System.NotSupportedException> exception is thrown.","nodes":[{"content":"If <ph id=\"ph1\">`value`</ph> is a string, then the string representation of <ph id=\"ph2\">`value`</ph> is returned.","pos":[0,78],"source":"If `value` is a string, then the string representation of `value` is returned."},{"content":"If <ph id=\"ph1\">`value`</ph> is <ph id=\"ph2\">`null`</ph>, an empty string (\"\") is returned.","pos":[79,134],"source":" If `value` is `null`, an empty string (\"\") is returned."},{"content":"For all other specified values, a <ph id=\"ph1\">&lt;xref:System.NotSupportedException&gt;</ph> exception is thrown.","pos":[135,225],"source":" For all other specified values, a <xref:System.NotSupportedException> exception is thrown."}]},{"pos":[232,465],"content":"Call the <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.CanConvertFrom%2A> method to determine whether the <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.ConvertFrom%2A> method supports converting the source type.","nodes":[{"content":"Call the <ph id=\"ph1\">&lt;xref:System.Web.UI.Design.DataSourceViewSchemaConverter.CanConvertFrom%2A&gt;</ph> method to determine whether the <ph id=\"ph2\">&lt;xref:System.Web.UI.Design.DataSourceViewSchemaConverter.ConvertFrom%2A&gt;</ph> method supports converting the source type.","pos":[0,233],"source":"Call the <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.CanConvertFrom%2A> method to determine whether the <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.ConvertFrom%2A> method supports converting the source type."}]}],"pos":[13140,13612],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> implementation that can be used to gain additional context information.","nodes":[{"pos":[0,140],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;&lt;/xref&gt;</ph> implementation that can be used to gain additional context information.","source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> implementation that can be used to gain additional context information."}],"pos":[13892,14033],"yaml":true},{"content":"The <xref href=\"System.Globalization.CultureInfo\"></xref> object that can be used to support localization features.","nodes":[{"pos":[0,115],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Globalization.CultureInfo\"&gt;&lt;/xref&gt;</ph> object that can be used to support localization features.","source":"The <xref href=\"System.Globalization.CultureInfo\"></xref> object that can be used to support localization features."}],"pos":[14115,14231],"yaml":true},{"content":"The object to convert.","nodes":[{"pos":[0,22],"content":"The object to convert.","nodes":[{"content":"The object to convert.","pos":[0,22]}]}],"pos":[14292,14315],"yaml":true},{"content":"An <xref href=\"System.Object\"></xref> instance that represents the converted object.","nodes":[{"pos":[0,84],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> instance that represents the converted object.","source":"An <xref href=\"System.Object\"></xref> instance that represents the converted object."}],"pos":[14372,14457],"yaml":true},{"content":"The conversion could not be performed.","nodes":[{"pos":[0,38],"content":"The conversion could not be performed.","nodes":[{"content":"The conversion could not be performed.","pos":[0,38]}]}],"pos":[14649,14688],"yaml":true},{"content":"Returns a list of available values that can be assigned to the associated control property.","nodes":[{"pos":[0,91],"content":"Returns a list of available values that can be assigned to the associated control property.","nodes":[{"content":"Returns a list of available values that can be assigned to the associated control property.","pos":[0,91]}]}],"pos":[15936,16028],"yaml":true},{"content":"The <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues%2A> method uses the <xref:System.ComponentModel.ITypeDescriptorContext.Instance%2A> property of the specified `context` object to obtain an <xref:System.Web.UI.IDataSourceViewSchemaAccessor> implementation. If the <xref:System.Web.UI.IDataSourceViewSchemaAccessor> implementation is available, it is used to access the data source schema for the associated control at design time and retrieve the list of available fields from the associated data source schema view.  \n  \n The collection of available values is built from the fields in the data source schema for the associated control.","nodes":[{"pos":[0,545],"content":"The <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues%2A> method uses the <xref:System.ComponentModel.ITypeDescriptorContext.Instance%2A> property of the specified `context` object to obtain an <xref:System.Web.UI.IDataSourceViewSchemaAccessor> implementation. If the <xref:System.Web.UI.IDataSourceViewSchemaAccessor> implementation is available, it is used to access the data source schema for the associated control at design time and retrieve the list of available fields from the associated data source schema view.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues%2A&gt;</ph> method uses the <ph id=\"ph2\">&lt;xref:System.ComponentModel.ITypeDescriptorContext.Instance%2A&gt;</ph> property of the specified <ph id=\"ph3\">`context`</ph> object to obtain an <ph id=\"ph4\">&lt;xref:System.Web.UI.IDataSourceViewSchemaAccessor&gt;</ph> implementation.","pos":[0,285],"source":"The <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues%2A> method uses the <xref:System.ComponentModel.ITypeDescriptorContext.Instance%2A> property of the specified `context` object to obtain an <xref:System.Web.UI.IDataSourceViewSchemaAccessor> implementation."},{"content":"If the <ph id=\"ph1\">&lt;xref:System.Web.UI.IDataSourceViewSchemaAccessor&gt;</ph> implementation is available, it is used to access the data source schema for the associated control at design time and retrieve the list of available fields from the associated data source schema view.","pos":[286,545],"source":" If the <xref:System.Web.UI.IDataSourceViewSchemaAccessor> implementation is available, it is used to access the data source schema for the associated control at design time and retrieve the list of available fields from the associated data source schema view."}]},{"pos":[552,665],"content":"The collection of available values is built from the fields in the data source schema for the associated control.","nodes":[{"content":"The collection of available values is built from the fields in the data source schema for the associated control.","pos":[0,113]}]}],"pos":[16039,16709],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> implementation that can be used to gain additional context information.","nodes":[{"pos":[0,140],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;&lt;/xref&gt;</ph> implementation that can be used to gain additional context information.","source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> implementation that can be used to gain additional context information."}],"pos":[16993,17134],"yaml":true},{"content":"A <xref href=\"System.ComponentModel.TypeConverter.StandardValuesCollection\"></xref> containing available values for assignment to the associated control property.","nodes":[{"pos":[0,162],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.TypeConverter.StandardValuesCollection\"&gt;&lt;/xref&gt;</ph> containing available values for assignment to the associated control property.","source":"A <xref href=\"System.ComponentModel.TypeConverter.StandardValuesCollection\"></xref> containing available values for assignment to the associated control property."}],"pos":[17238,17401],"yaml":true},{"content":"Returns a list of available values that can be assigned to the associated control property.","nodes":[{"pos":[0,91],"content":"Returns a list of available values that can be assigned to the associated control property.","nodes":[{"content":"Returns a list of available values that can be assigned to the associated control property.","pos":[0,91]}]}],"pos":[18802,18894],"yaml":true},{"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> implementation that can be used to gain additional context information.","nodes":[{"pos":[0,140],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;&lt;/xref&gt;</ph> implementation that can be used to gain additional context information.","source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> implementation that can be used to gain additional context information."}],"pos":[19194,19335],"yaml":true},{"content":"A type used to filter fields to include in the standard values list.","nodes":[{"pos":[0,68],"content":"A type used to filter fields to include in the standard values list.","nodes":[{"content":"A type used to filter fields to include in the standard values list.","pos":[0,68]}]}],"pos":[19399,19468],"yaml":true},{"content":"A <xref href=\"System.ComponentModel.TypeConverter.StandardValuesCollection\"></xref> containing available values for assignment to the associated control property.","nodes":[{"pos":[0,162],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.TypeConverter.StandardValuesCollection\"&gt;&lt;/xref&gt;</ph> containing available values for assignment to the associated control property.","source":"A <xref href=\"System.ComponentModel.TypeConverter.StandardValuesCollection\"></xref> containing available values for assignment to the associated control property."}],"pos":[19572,19735],"yaml":true},{"content":"Indicates whether this converter returns a list containing all possible values that can be assigned to the associated control property.","nodes":[{"pos":[0,135],"content":"Indicates whether this converter returns a list containing all possible values that can be assigned to the associated control property.","nodes":[{"content":"Indicates whether this converter returns a list containing all possible values that can be assigned to the associated control property.","pos":[0,135]}]}],"pos":[21136,21272],"yaml":true},{"content":"The <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesExclusive%2A> method for a <xref:System.Web.UI.Design.DataSourceViewSchemaConverter> returns `false`, indicating that the list returned by the <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues%2A> method is not an exclusive list of all possible assignable values.","nodes":[{"pos":[0,366],"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesExclusive%2A&gt;</ph> method for a <ph id=\"ph2\">&lt;xref:System.Web.UI.Design.DataSourceViewSchemaConverter&gt;</ph> returns <ph id=\"ph3\">`false`</ph>, indicating that the list returned by the <ph id=\"ph4\">&lt;xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues%2A&gt;</ph> method is not an exclusive list of all possible assignable values.","source":"The <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesExclusive%2A> method for a <xref:System.Web.UI.Design.DataSourceViewSchemaConverter> returns `false`, indicating that the list returned by the <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues%2A> method is not an exclusive list of all possible assignable values."}],"pos":[21283,21650],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> implementation that can be used to gain additional context information.","nodes":[{"pos":[0,140],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;&lt;/xref&gt;</ph> implementation that can be used to gain additional context information.","source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> implementation that can be used to gain additional context information."}],"pos":[21887,22028],"yaml":true},{"content":"`true` if this converter returns a list containing all possible values that can be assigned to the associated control property; otherwise `false`.","nodes":[{"pos":[0,146],"content":"<ph id=\"ph1\">`true`</ph> if this converter returns a list containing all possible values that can be assigned to the associated control property; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if this converter returns a list containing all possible values that can be assigned to the associated control property; otherwise `false`."}],"pos":[22086,22235],"yaml":true},{"content":"Indicates whether this converter returns a set of available values for assignment to a control property within the specified context.","nodes":[{"pos":[0,133],"content":"Indicates whether this converter returns a set of available values for assignment to a control property within the specified context.","nodes":[{"content":"Indicates whether this converter returns a set of available values for assignment to a control property within the specified context.","pos":[0,133]}]}],"pos":[23645,23779],"yaml":true},{"content":"The <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesSupported%2A> method indicates whether the converter supports returning a list of available values through the <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues%2A> method.  \n  \n The <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesSupported%2A> method for the <xref:System.Web.UI.Design.DataSourceViewSchemaConverter> object returns `true` if the specified `context` object supplies an <xref:System.Web.UI.IDataSourceViewSchemaAccessor> implementation in its <xref:System.ComponentModel.ITypeDescriptorContext.Instance%2A> property. The <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues%2A> method uses the <xref:System.Web.UI.IDataSourceViewSchemaAccessor> implementation to retrieve the list of available fields from the associated data source schema.","nodes":[{"pos":[0,275],"content":"The <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesSupported%2A> method indicates whether the converter supports returning a list of available values through the <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues%2A> method.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesSupported%2A&gt;</ph> method indicates whether the converter supports returning a list of available values through the <ph id=\"ph2\">&lt;xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues%2A&gt;</ph> method.","pos":[0,275],"source":"The <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesSupported%2A> method indicates whether the converter supports returning a list of available values through the <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues%2A> method."}]},{"pos":[282,907],"content":"The <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesSupported%2A> method for the <xref:System.Web.UI.Design.DataSourceViewSchemaConverter> object returns `true` if the specified `context` object supplies an <xref:System.Web.UI.IDataSourceViewSchemaAccessor> implementation in its <xref:System.ComponentModel.ITypeDescriptorContext.Instance%2A> property. The <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues%2A> method uses the <xref:System.Web.UI.IDataSourceViewSchemaAccessor> implementation to retrieve the list of available fields from the associated data source schema.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesSupported%2A&gt;</ph> method for the <ph id=\"ph2\">&lt;xref:System.Web.UI.Design.DataSourceViewSchemaConverter&gt;</ph> object returns <ph id=\"ph3\">`true`</ph> if the specified <ph id=\"ph4\">`context`</ph> object supplies an <ph id=\"ph5\">&lt;xref:System.Web.UI.IDataSourceViewSchemaAccessor&gt;</ph> implementation in its <ph id=\"ph6\">&lt;xref:System.ComponentModel.ITypeDescriptorContext.Instance%2A&gt;</ph> property.","pos":[0,379],"source":"The <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesSupported%2A> method for the <xref:System.Web.UI.Design.DataSourceViewSchemaConverter> object returns `true` if the specified `context` object supplies an <xref:System.Web.UI.IDataSourceViewSchemaAccessor> implementation in its <xref:System.ComponentModel.ITypeDescriptorContext.Instance%2A> property."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues%2A&gt;</ph> method uses the <ph id=\"ph2\">&lt;xref:System.Web.UI.IDataSourceViewSchemaAccessor&gt;</ph> implementation to retrieve the list of available fields from the associated data source schema.","pos":[380,625],"source":" The <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues%2A> method uses the <xref:System.Web.UI.IDataSourceViewSchemaAccessor> implementation to retrieve the list of available fields from the associated data source schema."}]}],"pos":[23790,24702],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> implementation that can be used to gain additional context information.","nodes":[{"pos":[0,140],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;&lt;/xref&gt;</ph> implementation that can be used to gain additional context information.","source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> implementation that can be used to gain additional context information."}],"pos":[24939,25080],"yaml":true},{"content":"`true` if this converter returns a standard set of available values for assignment to the associated control property; otherwise `false`.","nodes":[{"pos":[0,137],"content":"<ph id=\"ph1\">`true`</ph> if this converter returns a standard set of available values for assignment to the associated control property; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if this converter returns a standard set of available values for assignment to the associated control property; otherwise `false`."}],"pos":[25138,25278],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.Design.DataSourceViewSchemaConverter\n  commentId: T:System.Web.UI.Design.DataSourceViewSchemaConverter\n  id: DataSourceViewSchemaConverter\n  children:\n  - System.Web.UI.Design.DataSourceViewSchemaConverter.#ctor\n  - System.Web.UI.Design.DataSourceViewSchemaConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.Web.UI.Design.DataSourceViewSchemaConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  - System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  - System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  langs:\n  - csharp\n  name: DataSourceViewSchemaConverter\n  nameWithType: DataSourceViewSchemaConverter\n  fullName: System.Web.UI.Design.DataSourceViewSchemaConverter\n  type: Class\n  assemblies:\n  - System.Design\n  namespace: System.Web.UI.Design\n  summary: Provides a type converter for a property representing a field in a data source schema.\n  remarks: \"Use the <xref:System.Web.UI.Design.DataSourceViewSchemaConverter> class to convert object types before assignment to a control property. In general, the <xref:System.Web.UI.Design.DataSourceViewSchemaConverter> supports converting string object types and supplies a list of standard values available for assignment to the associated control property. The standard values collection is the list of fields in the data source schema for the current control.  \\n  \\n To support converting additional object types, derive a class from <xref:System.Web.UI.Design.DataSourceViewSchemaConverter> and override the <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.CanConvertFrom%2A> and <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.ConvertFrom%2A> methods for the additional object types. To support a custom list of standard assignable values, override the <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues%2A> method.  \\n  \\n Apply the <xref:System.ComponentModel.TypeConverterAttribute> attribute to specify the <xref:System.Web.UI.Design.DataSourceViewSchemaConverter> class as the type converter for a control property. For example, the <xref:System.Web.UI.WebControls.DataControlField.SortExpression%2A> property of the <xref:System.Web.UI.WebControls.DataControlField> class and the <xref:System.Web.UI.WebControls.BoundField.DataField%2A> property of the <xref:System.Web.UI.WebControls.BoundField> class use the <xref:System.Web.UI.Design.DataSourceViewSchemaConverter> as the property type converter.  \\n  \\n> [!NOTE]\\n>  You should never access a type converter directly. Instead, call the appropriate converter by using a <xref:System.ComponentModel.TypeDescriptor> object. For more information, see the examples in <xref:System.ComponentModel.TypeConverter>.  \\n  \\n The <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesSupported%2A> method indicates that the converter supports returning a list of available values through the <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues%2A> method. The <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesExclusive%2A> method indicates that the list is not an exclusive list of possible values.\"\n  syntax:\n    content: 'public class DataSourceViewSchemaConverter : System.ComponentModel.TypeConverter'\n  inheritance:\n  - System.Object\n  - System.ComponentModel.TypeConverter\n  derivedClasses:\n  - System.Web.UI.Design.DataSourceBooleanViewSchemaConverter\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  - System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  - System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValues\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.IsValid(System.Object)\n  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.Design/DataSourceViewSchemaConverter.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.Design.DataSourceViewSchemaConverter.#ctor\n  commentId: M:System.Web.UI.Design.DataSourceViewSchemaConverter.#ctor\n  id: '#ctor'\n  parent: System.Web.UI.Design.DataSourceViewSchemaConverter\n  langs:\n  - csharp\n  name: DataSourceViewSchemaConverter()\n  nameWithType: DataSourceViewSchemaConverter.DataSourceViewSchemaConverter()\n  fullName: DataSourceViewSchemaConverter.DataSourceViewSchemaConverter()\n  type: Constructor\n  assemblies:\n  - System.Design\n  namespace: System.Web.UI.Design\n  summary: Initializes a new instance of the <xref href=\"System.Web.UI.Design.DataSourceViewSchemaConverter\"></xref> class.\n  remarks: >-\n    > [!NOTE]\n\n    >  You should never access a type converter directly. Instead, call the appropriate converter by using a <xref:System.ComponentModel.TypeDescriptor> object. For more information, see the examples in <xref:System.ComponentModel.TypeConverter>.\n  syntax:\n    content: public DataSourceViewSchemaConverter ();\n    parameters: []\n  overload: System.Web.UI.Design.DataSourceViewSchemaConverter.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.Design/DataSourceViewSchemaConverter.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.Design.DataSourceViewSchemaConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  commentId: M:System.Web.UI.Design.DataSourceViewSchemaConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Web.UI.Design.DataSourceViewSchemaConverter\n  langs:\n  - csharp\n  name: CanConvertFrom(ITypeDescriptorContext, Type)\n  nameWithType: DataSourceViewSchemaConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n  fullName: DataSourceViewSchemaConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.Web.UI.Design\n  summary: Indicates whether the specified source type can be converted to the type of the associated control property.\n  remarks: \"Call the <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.CanConvertFrom%2A> method to determine whether the <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.ConvertFrom%2A> method supports converting the source type.  \\n  \\n The <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.ConvertFrom%2A> method can convert only from a string, so the <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.CanConvertFrom%2A> method returns `true` when `sourceType` is a string.\"\n  syntax:\n    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> implementation that can be used to gain additional context information.\n    - id: sourceType\n      type: System.Type\n      description: The type to convert from.\n    return:\n      type: System.Boolean\n      description: '`true` if the converter can perform the conversion; otherwise, `false`.'\n  overload: System.Web.UI.Design.DataSourceViewSchemaConverter.CanConvertFrom*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.Design/DataSourceViewSchemaConverter.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.Design.DataSourceViewSchemaConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  commentId: M:System.Web.UI.Design.DataSourceViewSchemaConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.Web.UI.Design.DataSourceViewSchemaConverter\n  langs:\n  - csharp\n  name: ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  nameWithType: DataSourceViewSchemaConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: DataSourceViewSchemaConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.Web.UI.Design\n  summary: Converts the specified object to the type of the associated control property.\n  remarks: \"If `value` is a string, then the string representation of `value` is returned. If `value` is `null`, an empty string (\\\"\\\") is returned. For all other specified values, a <xref:System.NotSupportedException> exception is thrown.  \\n  \\n Call the <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.CanConvertFrom%2A> method to determine whether the <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.ConvertFrom%2A> method supports converting the source type.\"\n  syntax:\n    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> implementation that can be used to gain additional context information.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: The <xref href=\"System.Globalization.CultureInfo\"></xref> object that can be used to support localization features.\n    - id: value\n      type: System.Object\n      description: The object to convert.\n    return:\n      type: System.Object\n      description: An <xref href=\"System.Object\"></xref> instance that represents the converted object.\n  overload: System.Web.UI.Design.DataSourceViewSchemaConverter.ConvertFrom*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The conversion could not be performed.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.Design/DataSourceViewSchemaConverter.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  commentId: M:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  id: GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.Web.UI.Design.DataSourceViewSchemaConverter\n  langs:\n  - csharp\n  name: GetStandardValues(ITypeDescriptorContext)\n  nameWithType: DataSourceViewSchemaConverter.GetStandardValues(ITypeDescriptorContext)\n  fullName: DataSourceViewSchemaConverter.GetStandardValues(ITypeDescriptorContext)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.Web.UI.Design\n  summary: Returns a list of available values that can be assigned to the associated control property.\n  remarks: \"The <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues%2A> method uses the <xref:System.ComponentModel.ITypeDescriptorContext.Instance%2A> property of the specified `context` object to obtain an <xref:System.Web.UI.IDataSourceViewSchemaAccessor> implementation. If the <xref:System.Web.UI.IDataSourceViewSchemaAccessor> implementation is available, it is used to access the data source schema for the associated control at design time and retrieve the list of available fields from the associated data source schema view.  \\n  \\n The collection of available values is built from the fields in the data source schema for the associated control.\"\n  syntax:\n    content: public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> implementation that can be used to gain additional context information.\n    return:\n      type: System.ComponentModel.TypeConverter+StandardValuesCollection\n      description: A <xref href=\"System.ComponentModel.TypeConverter.StandardValuesCollection\"></xref> containing available values for assignment to the associated control property.\n  overload: System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.Design/DataSourceViewSchemaConverter.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  commentId: M:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: GetStandardValues(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Web.UI.Design.DataSourceViewSchemaConverter\n  langs:\n  - csharp\n  name: GetStandardValues(ITypeDescriptorContext, Type)\n  nameWithType: DataSourceViewSchemaConverter.GetStandardValues(ITypeDescriptorContext, Type)\n  fullName: DataSourceViewSchemaConverter.GetStandardValues(ITypeDescriptorContext, Type)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.Web.UI.Design\n  summary: Returns a list of available values that can be assigned to the associated control property.\n  syntax:\n    content: public virtual System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context, Type typeFilter);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> implementation that can be used to gain additional context information.\n    - id: typeFilter\n      type: System.Type\n      description: A type used to filter fields to include in the standard values list.\n    return:\n      type: System.ComponentModel.TypeConverter+StandardValuesCollection\n      description: A <xref href=\"System.ComponentModel.TypeConverter.StandardValuesCollection\"></xref> containing available values for assignment to the associated control property.\n  overload: System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.Design/DataSourceViewSchemaConverter.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  commentId: M:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  id: GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.Web.UI.Design.DataSourceViewSchemaConverter\n  langs:\n  - csharp\n  name: GetStandardValuesExclusive(ITypeDescriptorContext)\n  nameWithType: DataSourceViewSchemaConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n  fullName: DataSourceViewSchemaConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.Web.UI.Design\n  summary: Indicates whether this converter returns a list containing all possible values that can be assigned to the associated control property.\n  remarks: The <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesExclusive%2A> method for a <xref:System.Web.UI.Design.DataSourceViewSchemaConverter> returns `false`, indicating that the list returned by the <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues%2A> method is not an exclusive list of all possible assignable values.\n  syntax:\n    content: public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> implementation that can be used to gain additional context information.\n    return:\n      type: System.Boolean\n      description: '`true` if this converter returns a list containing all possible values that can be assigned to the associated control property; otherwise `false`.'\n  overload: System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesExclusive*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.Design/DataSourceViewSchemaConverter.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  commentId: M:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  id: GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.Web.UI.Design.DataSourceViewSchemaConverter\n  langs:\n  - csharp\n  name: GetStandardValuesSupported(ITypeDescriptorContext)\n  nameWithType: DataSourceViewSchemaConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n  fullName: DataSourceViewSchemaConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.Web.UI.Design\n  summary: Indicates whether this converter returns a set of available values for assignment to a control property within the specified context.\n  remarks: \"The <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesSupported%2A> method indicates whether the converter supports returning a list of available values through the <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues%2A> method.  \\n  \\n The <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesSupported%2A> method for the <xref:System.Web.UI.Design.DataSourceViewSchemaConverter> object returns `true` if the specified `context` object supplies an <xref:System.Web.UI.IDataSourceViewSchemaAccessor> implementation in its <xref:System.ComponentModel.ITypeDescriptorContext.Instance%2A> property. The <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues%2A> method uses the <xref:System.Web.UI.IDataSourceViewSchemaAccessor> implementation to retrieve the list of available fields from the associated data source schema.\"\n  syntax:\n    content: public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> implementation that can be used to gain additional context information.\n    return:\n      type: System.Boolean\n      description: '`true` if this converter returns a standard set of available values for assignment to the associated control property; otherwise `false`.'\n  overload: System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesSupported*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.Design/DataSourceViewSchemaConverter.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\nreferences:\n- uid: System.ComponentModel.TypeConverter\n  parent: System.ComponentModel\n  isExternal: false\n  name: TypeConverter\n  nameWithType: TypeConverter\n  fullName: System.ComponentModel.TypeConverter\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  nameWithType: NotSupportedException\n  fullName: System.NotSupportedException\n- uid: System.Web.UI.Design.DataSourceViewSchemaConverter.#ctor\n  parent: System.Web.UI.Design.DataSourceViewSchemaConverter\n  isExternal: false\n  name: DataSourceViewSchemaConverter()\n  nameWithType: DataSourceViewSchemaConverter.DataSourceViewSchemaConverter()\n  fullName: DataSourceViewSchemaConverter.DataSourceViewSchemaConverter()\n- uid: System.Web.UI.Design.DataSourceViewSchemaConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Web.UI.Design.DataSourceViewSchemaConverter\n  isExternal: false\n  name: CanConvertFrom(ITypeDescriptorContext, Type)\n  nameWithType: DataSourceViewSchemaConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n  fullName: DataSourceViewSchemaConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.ITypeDescriptorContext\n  parent: System.ComponentModel\n  isExternal: false\n  name: ITypeDescriptorContext\n  nameWithType: ITypeDescriptorContext\n  fullName: System.ComponentModel.ITypeDescriptorContext\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Web.UI.Design.DataSourceViewSchemaConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.Web.UI.Design.DataSourceViewSchemaConverter\n  isExternal: false\n  name: ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  nameWithType: DataSourceViewSchemaConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: DataSourceViewSchemaConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.Web.UI.Design.DataSourceViewSchemaConverter\n  isExternal: false\n  name: GetStandardValues(ITypeDescriptorContext)\n  nameWithType: DataSourceViewSchemaConverter.GetStandardValues(ITypeDescriptorContext)\n  fullName: DataSourceViewSchemaConverter.GetStandardValues(ITypeDescriptorContext)\n- uid: System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Web.UI.Design.DataSourceViewSchemaConverter\n  isExternal: false\n  name: GetStandardValues(ITypeDescriptorContext, Type)\n  nameWithType: DataSourceViewSchemaConverter.GetStandardValues(ITypeDescriptorContext, Type)\n  fullName: DataSourceViewSchemaConverter.GetStandardValues(ITypeDescriptorContext, Type)\n- uid: System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.Web.UI.Design.DataSourceViewSchemaConverter\n  isExternal: false\n  name: GetStandardValuesExclusive(ITypeDescriptorContext)\n  nameWithType: DataSourceViewSchemaConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n  fullName: DataSourceViewSchemaConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n- uid: System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.Web.UI.Design.DataSourceViewSchemaConverter\n  isExternal: false\n  name: GetStandardValuesSupported(ITypeDescriptorContext)\n  nameWithType: DataSourceViewSchemaConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n  fullName: DataSourceViewSchemaConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n- uid: System.Web.UI.Design.DataSourceViewSchemaConverter.#ctor*\n  parent: System.Web.UI.Design.DataSourceViewSchemaConverter\n  isExternal: false\n  name: DataSourceViewSchemaConverter\n  nameWithType: DataSourceViewSchemaConverter.DataSourceViewSchemaConverter\n  fullName: DataSourceViewSchemaConverter.DataSourceViewSchemaConverter\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.Design/DataSourceViewSchemaConverter.xml\n- uid: System.Web.UI.Design.DataSourceViewSchemaConverter.CanConvertFrom*\n  parent: System.Web.UI.Design.DataSourceViewSchemaConverter\n  isExternal: false\n  name: CanConvertFrom\n  nameWithType: DataSourceViewSchemaConverter.CanConvertFrom\n  fullName: DataSourceViewSchemaConverter.CanConvertFrom\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.Design/DataSourceViewSchemaConverter.xml\n- uid: System.Web.UI.Design.DataSourceViewSchemaConverter.ConvertFrom*\n  parent: System.Web.UI.Design.DataSourceViewSchemaConverter\n  isExternal: false\n  name: ConvertFrom\n  nameWithType: DataSourceViewSchemaConverter.ConvertFrom\n  fullName: DataSourceViewSchemaConverter.ConvertFrom\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.Design/DataSourceViewSchemaConverter.xml\n- uid: System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues*\n  parent: System.Web.UI.Design.DataSourceViewSchemaConverter\n  isExternal: false\n  name: GetStandardValues\n  nameWithType: DataSourceViewSchemaConverter.GetStandardValues\n  fullName: DataSourceViewSchemaConverter.GetStandardValues\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.Design/DataSourceViewSchemaConverter.xml\n- uid: System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesExclusive*\n  parent: System.Web.UI.Design.DataSourceViewSchemaConverter\n  isExternal: false\n  name: GetStandardValuesExclusive\n  nameWithType: DataSourceViewSchemaConverter.GetStandardValuesExclusive\n  fullName: DataSourceViewSchemaConverter.GetStandardValuesExclusive\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.Design/DataSourceViewSchemaConverter.xml\n- uid: System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesSupported*\n  parent: System.Web.UI.Design.DataSourceViewSchemaConverter\n  isExternal: false\n  name: GetStandardValuesSupported\n  nameWithType: DataSourceViewSchemaConverter.GetStandardValuesSupported\n  fullName: DataSourceViewSchemaConverter.GetStandardValuesSupported\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.Design/DataSourceViewSchemaConverter.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CanConvertFrom(Type)\n  nameWithType: TypeConverter.CanConvertFrom(Type)\n  fullName: TypeConverter.CanConvertFrom(Type)\n- uid: System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CanConvertTo(Type)\n  nameWithType: TypeConverter.CanConvertTo(Type)\n  fullName: TypeConverter.CanConvertTo(Type)\n- uid: System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CanConvertTo(ITypeDescriptorContext, Type)\n  nameWithType: TypeConverter.CanConvertTo(ITypeDescriptorContext, Type)\n  fullName: TypeConverter.CanConvertTo(ITypeDescriptorContext, Type)\n- uid: System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFrom(Object)\n  nameWithType: TypeConverter.ConvertFrom(Object)\n  fullName: TypeConverter.ConvertFrom(Object)\n- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromInvariantString(String)\n  nameWithType: TypeConverter.ConvertFromInvariantString(String)\n  fullName: TypeConverter.ConvertFromInvariantString(String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromInvariantString(ITypeDescriptorContext, String)\n  nameWithType: TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext, String)\n  fullName: TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext, String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n  fullName: TypeConverter.ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromString(String)\n  nameWithType: TypeConverter.ConvertFromString(String)\n  fullName: TypeConverter.ConvertFromString(String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromString(ITypeDescriptorContext, String)\n  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext, String)\n  fullName: TypeConverter.ConvertFromString(ITypeDescriptorContext, String)\n- uid: System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertTo(Object, Type)\n  nameWithType: TypeConverter.ConvertTo(Object, Type)\n  fullName: TypeConverter.ConvertTo(Object, Type)\n- uid: System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  nameWithType: TypeConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  fullName: TypeConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToInvariantString(Object)\n  nameWithType: TypeConverter.ConvertToInvariantString(Object)\n  fullName: TypeConverter.ConvertToInvariantString(Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToInvariantString(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.ConvertToInvariantString(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.ConvertToInvariantString(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: TypeConverter.ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToString(Object)\n  nameWithType: TypeConverter.ConvertToString(Object)\n  fullName: TypeConverter.ConvertToString(Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToString(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.ConvertToString(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CreateInstance(ITypeDescriptorContext, IDictionary)\n  nameWithType: TypeConverter.CreateInstance(ITypeDescriptorContext, IDictionary)\n  fullName: TypeConverter.CreateInstance(ITypeDescriptorContext, IDictionary)\n- uid: System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CreateInstance(IDictionary)\n  nameWithType: TypeConverter.CreateInstance(IDictionary)\n  fullName: TypeConverter.CreateInstance(IDictionary)\n- uid: System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetConvertFromException(Object)\n  nameWithType: TypeConverter.GetConvertFromException(Object)\n  fullName: TypeConverter.GetConvertFromException(Object)\n- uid: System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetConvertToException(Object, Type)\n  nameWithType: TypeConverter.GetConvertToException(Object, Type)\n  fullName: TypeConverter.GetConvertToException(Object, Type)\n- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetCreateInstanceSupported()\n  nameWithType: TypeConverter.GetCreateInstanceSupported()\n  fullName: TypeConverter.GetCreateInstanceSupported()\n- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetCreateInstanceSupported(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext)\n  fullName: TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetProperties(Object)\n  nameWithType: TypeConverter.GetProperties(Object)\n  fullName: TypeConverter.GetProperties(Object)\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetProperties(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.GetProperties(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.GetProperties(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetProperties(ITypeDescriptorContext, Object, Attribute[])\n  nameWithType: TypeConverter.GetProperties(ITypeDescriptorContext, Object, Attribute[])\n  fullName: TypeConverter.GetProperties(ITypeDescriptorContext, Object, Attribute[])\n- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetPropertiesSupported(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetPropertiesSupported(ITypeDescriptorContext)\n  fullName: TypeConverter.GetPropertiesSupported(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetPropertiesSupported()\n  nameWithType: TypeConverter.GetPropertiesSupported()\n  fullName: TypeConverter.GetPropertiesSupported()\n- uid: System.ComponentModel.TypeConverter.GetStandardValues\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValues()\n  nameWithType: TypeConverter.GetStandardValues()\n  fullName: TypeConverter.GetStandardValues()\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesExclusive()\n  nameWithType: TypeConverter.GetStandardValuesExclusive()\n  fullName: TypeConverter.GetStandardValuesExclusive()\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesSupported()\n  nameWithType: TypeConverter.GetStandardValuesSupported()\n  fullName: TypeConverter.GetStandardValuesSupported()\n- uid: System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: IsValid(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.IsValid(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.IsValid(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.IsValid(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: IsValid(Object)\n  nameWithType: TypeConverter.IsValid(Object)\n  fullName: TypeConverter.IsValid(Object)\n- uid: System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: SortProperties(PropertyDescriptorCollection, String[])\n  nameWithType: TypeConverter.SortProperties(PropertyDescriptorCollection, String[])\n  fullName: TypeConverter.SortProperties(PropertyDescriptorCollection, String[])\n"}