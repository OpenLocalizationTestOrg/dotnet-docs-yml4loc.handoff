### YamlMime:ManagedReference
items:
- uid: System.Data.Linq.Table`1
  commentId: T:System.Data.Linq.Table`1
  id: Table`1
  children:
  - System.Data.Linq.Table`1.Attach(`0)
  - System.Data.Linq.Table`1.Attach(`0,System.Boolean)
  - System.Data.Linq.Table`1.Attach(`0,`0)
  - System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0})
  - System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)
  - System.Data.Linq.Table`1.Context
  - System.Data.Linq.Table`1.DeleteAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})
  - System.Data.Linq.Table`1.DeleteOnSubmit(`0)
  - System.Data.Linq.Table`1.GetEnumerator
  - System.Data.Linq.Table`1.GetModifiedMembers(`0)
  - System.Data.Linq.Table`1.GetNewBindingList
  - System.Data.Linq.Table`1.GetOriginalEntityState(`0)
  - System.Data.Linq.Table`1.InsertAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})
  - System.Data.Linq.Table`1.InsertOnSubmit(`0)
  - System.Data.Linq.Table`1.IsReadOnly
  - System.Data.Linq.Table`1.ToString
  - System.Data.Linq.Table`1.System#Collections#Generic#IEnumerable{TEntity}#GetEnumerator
  - System.Data.Linq.Table`1.System#Collections#IEnumerable#GetEnumerator
  - System.Data.Linq.Table`1.System#ComponentModel#IListSource#ContainsListCollection
  - System.Data.Linq.Table`1.System#ComponentModel#IListSource#GetList
  - System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object,System.Boolean)
  - System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object,System.Object)
  - System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object)
  - System.Data.Linq.Table`1.System#Data#Linq#ITable#AttachAll(System.Collections.IEnumerable)
  - System.Data.Linq.Table`1.System#Data#Linq#ITable#AttachAll(System.Collections.IEnumerable,System.Boolean)
  - System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteAllOnSubmit(System.Collections.IEnumerable)
  - System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteOnSubmit(System.Object)
  - System.Data.Linq.Table`1.System#Data#Linq#ITable#GetModifiedMembers(System.Object)
  - System.Data.Linq.Table`1.System#Data#Linq#ITable#GetOriginalEntityState(System.Object)
  - System.Data.Linq.Table`1.System#Data#Linq#ITable#InsertAllOnSubmit(System.Collections.IEnumerable)
  - System.Data.Linq.Table`1.System#Data#Linq#ITable#InsertOnSubmit(System.Object)
  - System.Data.Linq.Table`1.System#Linq#IQueryable#ElementType
  - System.Data.Linq.Table`1.System#Linq#IQueryable#Expression
  - System.Data.Linq.Table`1.System#Linq#IQueryable#Provider
  - System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery(System.Linq.Expressions.Expression)
  - System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery``1(System.Linq.Expressions.Expression)
  - System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute(System.Linq.Expressions.Expression)
  - System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute``1(System.Linq.Expressions.Expression)
  langs:
  - csharp
  name: Table<TEntity>
  nameWithType: Table<TEntity>
  fullName: System.Data.Linq.Table<TEntity>
  type: Class
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Represents a table for a particular type in the underlying database.
  remarks: "This class enables you to query over the table and add, remove, and attach objects.  \n  \n An application can access a <xref:System.Data.Linq.Table%601> instance via <xref:System.Data.Linq.DataContext.GetTable%2A> or by using a strongly typed property for the strongly typed <xref:System.Data.Linq.DataContext>. That is, when the designer generates a DataContext object, it generates properties to represent each Table. For example:  \n  \n```  \n[global::System.Data.Linq.Mapping.DatabaseAttribute(Name=\"SignOffTool\")]  \npublic partial class DataClasses1DataContext : System.Data.Linq.DataContext {  \n   public System.Data.Linq.Table<User> Users {  \n      get {  \n         return this.GetTable<User>();  \n      }  \n   }  \n}  \n```  \n  \n For this strongly typed DataContext, you can access the Users property to get `Table<User>`."
  syntax:
    content: 'public sealed class Table<TEntity> : System.Collections.Generic.IEnumerable<TEntity>, System.ComponentModel.IListSource, System.Data.Linq.ITable, System.Linq.IQueryable<TEntity>, System.Linq.IQueryProvider where TEntity : class'
    typeParameters:
    - id: TEntity
      description: The type of the data in the table.
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEnumerable{TEntity}
  - System.ComponentModel.IListSource
  - System.Data.Linq.ITable
  - System.Linq.IQueryable{TEntity}
  - System.Linq.IQueryProvider
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - System.Collections.Immutable.ImmutableArray.ToImmutableArray``1(System.Collections.Generic.IEnumerable{``0})
  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0})
  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})
  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})
  - System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0})
  - System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  - System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Generic.IEnumerable{``0})
  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0})
  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})
  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1})
  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})
  - System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0})
  - System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})
  - System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})
  - System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)
  - System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)
  - System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})
  - System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})
  - System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})
  - System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  - System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  - System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)
  - System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Decimal})
  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Double})
  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int32})
  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int64})
  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})
  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})
  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})
  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})
  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})
  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Single})
  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  - System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
  - System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)
  - System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
  - System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  - System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)
  - System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  - System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  - System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  - System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  - System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  - System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  - System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  - System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})
  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})
  - System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})
  - System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})
  - System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})
  - System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})
  - System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  - System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})
  - System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})
  - System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  - System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  - System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Decimal})
  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Double})
  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int32})
  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int64})
  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})
  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})
  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})
  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})
  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})
  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Single})
  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  - System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Decimal})
  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Double})
  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int32})
  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int64})
  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})
  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})
  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})
  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})
  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})
  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Single})
  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  - System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  - System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
  - System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  - System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  - System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  - System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  - System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)
  - System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  - System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})
  - System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})
  - System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})
  - System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
  - System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
  - System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  - System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  - System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  - System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  - System.Linq.Enumerable.SkipLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  - System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  - System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Decimal})
  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Double})
  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int32})
  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int64})
  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})
  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})
  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})
  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})
  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})
  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Single})
  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  - System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  - System.Linq.Enumerable.TakeLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  - System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  - System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
  - System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  - System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  - System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  - System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  - System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  - System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  - System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  - System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  - System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  - System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  - System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  - System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
  - System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})
  - System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  - System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Queryable.Aggregate``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``0,``0}})
  - System.Linq.Queryable.Aggregate``2(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}})
  - System.Linq.Queryable.Aggregate``3(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,``2}})
  - System.Linq.Queryable.All``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  - System.Linq.Queryable.Any``1(System.Linq.IQueryable{``0})
  - System.Linq.Queryable.Any``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  - System.Linq.Queryable.Append``1(System.Linq.IQueryable{``0},``0)
  - System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  - System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Queryable.Average(System.Linq.IQueryable{System.Decimal})
  - System.Linq.Queryable.Average(System.Linq.IQueryable{System.Double})
  - System.Linq.Queryable.Average(System.Linq.IQueryable{System.Int32})
  - System.Linq.Queryable.Average(System.Linq.IQueryable{System.Int64})
  - System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Decimal}})
  - System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Double}})
  - System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Int32}})
  - System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Int64}})
  - System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Single}})
  - System.Linq.Queryable.Average(System.Linq.IQueryable{System.Single})
  - System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})
  - System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})
  - System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})
  - System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})
  - System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})
  - System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})
  - System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})
  - System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})
  - System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})
  - System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})
  - System.Linq.Queryable.Cast``1(System.Linq.IQueryable)
  - System.Linq.Queryable.Concat``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0},``0)
  - System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
  - System.Linq.Queryable.Count``1(System.Linq.IQueryable{``0})
  - System.Linq.Queryable.Count``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  - System.Linq.Queryable.DefaultIfEmpty``1(System.Linq.IQueryable{``0})
  - System.Linq.Queryable.DefaultIfEmpty``1(System.Linq.IQueryable{``0},``0)
  - System.Linq.Queryable.Distinct``1(System.Linq.IQueryable{``0})
  - System.Linq.Queryable.Distinct``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEqualityComparer{``0})
  - System.Linq.Queryable.ElementAt``1(System.Linq.IQueryable{``0},System.Int32)
  - System.Linq.Queryable.ElementAtOrDefault``1(System.Linq.IQueryable{``0},System.Int32)
  - System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  - System.Linq.Queryable.First``1(System.Linq.IQueryable{``0})
  - System.Linq.Queryable.First``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  - System.Linq.Queryable.FirstOrDefault``1(System.Linq.IQueryable{``0})
  - System.Linq.Queryable.FirstOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  - System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  - System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEqualityComparer{``1})
  - System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}})
  - System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Collections.Generic.IEqualityComparer{``1})
  - System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}})
  - System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}},System.Collections.Generic.IEqualityComparer{``1})
  - System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}})
  - System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}},System.Collections.Generic.IEqualityComparer{``1})
  - System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}})
  - System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}},System.Collections.Generic.IEqualityComparer{``2})
  - System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  - System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}})
  - System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}},System.Collections.Generic.IEqualityComparer{``2})
  - System.Linq.Queryable.Last``1(System.Linq.IQueryable{``0})
  - System.Linq.Queryable.Last``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  - System.Linq.Queryable.LastOrDefault``1(System.Linq.IQueryable{``0})
  - System.Linq.Queryable.LastOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  - System.Linq.Queryable.LongCount``1(System.Linq.IQueryable{``0})
  - System.Linq.Queryable.LongCount``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  - System.Linq.Queryable.Max``1(System.Linq.IQueryable{``0})
  - System.Linq.Queryable.Max``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  - System.Linq.Queryable.Min``1(System.Linq.IQueryable{``0})
  - System.Linq.Queryable.Min``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  - System.Linq.Queryable.OfType``1(System.Linq.IQueryable)
  - System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  - System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})
  - System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  - System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})
  - System.Linq.Queryable.Prepend``1(System.Linq.IQueryable{``0},``0)
  - System.Linq.Queryable.Reverse``1(System.Linq.IQueryable{``0})
  - System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  - System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,``1}})
  - System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}})
  - System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}})
  - System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})
  - System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})
  - System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  - System.Linq.Queryable.Single``1(System.Linq.IQueryable{``0})
  - System.Linq.Queryable.Single``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  - System.Linq.Queryable.SingleOrDefault``1(System.Linq.IQueryable{``0})
  - System.Linq.Queryable.SingleOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  - System.Linq.Queryable.Skip``1(System.Linq.IQueryable{``0},System.Int32)
  - System.Linq.Queryable.SkipLast``1(System.Linq.IQueryable{``0},System.Int32)
  - System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  - System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})
  - System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Decimal})
  - System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Double})
  - System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Int32})
  - System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Int64})
  - System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Decimal}})
  - System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Double}})
  - System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Int32}})
  - System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Int64}})
  - System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Single}})
  - System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Single})
  - System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})
  - System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})
  - System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})
  - System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})
  - System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})
  - System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})
  - System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})
  - System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})
  - System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})
  - System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})
  - System.Linq.Queryable.Take``1(System.Linq.IQueryable{``0},System.Int32)
  - System.Linq.Queryable.TakeLast``1(System.Linq.IQueryable{``0},System.Int32)
  - System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  - System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})
  - System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  - System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  - System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})
  - System.Linq.Queryable.Zip``3(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})
  - System.Web.UI.WebControls.QueryExtensions.SortBy``1(System.Linq.IQueryable{``0},System.String)
  - System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})
  - System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)
  - System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})
  - System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)
  - System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})
  - System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)
  - System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})
  - System.Xml.Linq.Extensions.DescendantNodesAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})
  - System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})
  - System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)
  - System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})
  - System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)
  - System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})
  - System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)
  - System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})
  - System.Xml.Linq.Extensions.Nodes``1(System.Collections.Generic.IEnumerable{``0})
  - System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute})
  - System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable{``0})
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Linq.Table`1.Attach(`0)
  commentId: M:System.Data.Linq.Table`1.Attach(`0)
  id: Attach(`0)
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: Attach(TEntity)
  nameWithType: Table<TEntity>.Attach(TEntity)
  fullName: Table<TEntity>.Attach(TEntity)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Attaches a disconnected or "detached" entity to a new <xref href="System.Data.Linq.DataContext"></xref> when original values are required for optimistic concurrency checks.
  remarks: "Use the `Attach` methods with entities that have been created in one <xref:System.Data.Linq.DataContext>, serialized to a client, and then deserialized back to perform an update or delete operation. Because the new <xref:System.Data.Linq.DataContext> has no way of tracking what the original values were for a disconnected entity, the client is responsible for supplying those values. In this version of <xref:System.Data.Linq.Table%601.Attach%2A>, the entity is assumed to be in its original value state. After calling this method, you can then update its fields, for example with additional data sent from the client.  \n  \n When a new entity is attached, deferred loaders for any child collections (for example, `EntitySet` collections of entities from associated tables) are initialized. When <xref:System.Data.Linq.DataContext.SubmitChanges%2A> is called, members of the child collections are put into an `Unmodified` state. To update members of a child collection, you must explicitly call `Attach` and specify that entity.  \n  \n For more information, see [Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md).  \n  \n Do not try to `Attach` an entity that has not been detached through serialization. Entities that have not been serialized still maintain associations with deferred loaders that can cause unexpected results if the entity becomes tracked by a second data context."
  syntax:
    content: public void Attach (TEntity entity);
    parameters:
    - id: entity
      type: TEntity
      description: The original values of the entity to be attached.
  overload: System.Data.Linq.Table`1.Attach*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Linq.Table`1.Attach(`0,System.Boolean)
  commentId: M:System.Data.Linq.Table`1.Attach(`0,System.Boolean)
  id: Attach(`0,System.Boolean)
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: Attach(TEntity, Boolean)
  nameWithType: Table<TEntity>.Attach(TEntity, Boolean)
  fullName: Table<TEntity>.Attach(TEntity, Boolean)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Attaches an entity to the <xref href="System.Data.Linq.DataContext"></xref> in either a modified or unmodified state.
  remarks: If attaching *as modified*, the entity must either declare a version member or must not participate in update conflict checking. When a new entity is attached, deferred loaders for any child collections (for example, `EntitySet` collections of entities from associated tables) are initialized. When <xref:System.Data.Linq.DataContext.SubmitChanges%2A> is called, members of the child collections are put into an `Unmodified` state. To update members of a child collection, you must explicitly call `Attach` and specify that entity.
  syntax:
    content: public void Attach (TEntity entity, bool asModified);
    parameters:
    - id: entity
      type: TEntity
      description: The entity to be attached.
    - id: asModified
      type: System.Boolean
      description: '`true` to attach the entity as modified; `false` to attach the entity as unmodified.'
  overload: System.Data.Linq.Table`1.Attach*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Linq.Table`1.Attach(`0,`0)
  commentId: M:System.Data.Linq.Table`1.Attach(`0,`0)
  id: Attach(`0,`0)
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: Attach(TEntity, TEntity)
  nameWithType: Table<TEntity>.Attach(TEntity, TEntity)
  fullName: Table<TEntity>.Attach(TEntity, TEntity)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Attaches an entity to the <xref href="System.Data.Linq.DataContext"></xref> in either a modified or unmodified state by specifying both the entity and its original state.
  remarks: "In the following example, the `Customer` object is already correctly configured. You can call `Attach` without having to replay the updates.  \n  \n When a new entity is attached, deferred loaders for any child collections (for example, `EntitySet` collections of entities from associated tables) are initialized. When <xref:System.Data.Linq.DataContext.SubmitChanges%2A> is called, members of the child collections are put into an `Unmodified` state. To update members of a child collection, you must explicitly call `Attach` and specify that entity."
  example:
  - >-
    [!code-csharp[DLinqNTier#4](~/samples/snippets/csharp/VS_Snippets_Data/DLinqNTier/cs/Program.cs#4)]
     [!code-vb[DLinqNTier#4](~/samples/snippets/visualbasic/VS_Snippets_Data/DLinqNTier/vb/Module1.vb#4)]
  syntax:
    content: public void Attach (TEntity entity, TEntity original);
    parameters:
    - id: entity
      type: TEntity
      description: The entity to be attached.
    - id: original
      type: TEntity
      description: An instance of the same entity type with data members that contain the original values.
  overload: System.Data.Linq.Table`1.Attach*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0})
  id: AttachAll``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: AttachAll<TSubEntity>(IEnumerable<TSubEntity>)
  nameWithType: Table<TEntity>.AttachAll<TSubEntity>(IEnumerable<TSubEntity>)
  fullName: Table<TEntity>.AttachAll<TSubEntity>(IEnumerable<TSubEntity>)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Attaches all entities of a collection to the <xref href="System.Data.Linq.DataContext"></xref> in either a modified or unmodified state.
  remarks: "This method attaches all entities of a collection to a new <xref:System.Data.Linq.DataContext>. When a new entity is attached, deferred loaders for any child collections (for example, `EntitySet` collections of entities from associated tables) are initialized. When <xref:System.Data.Linq.DataContext.SubmitChanges%2A> is called, members of the child collections are put into an `Unmodified` state. To update members of a child collection, you must explicitly call `Attach` and specify that entity.  \n  \n For more information, see [Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)."
  syntax:
    content: 'public void AttachAll<TSubEntity> (System.Collections.Generic.IEnumerable<TSubEntity> entities) where TSubEntity : TEntity;'
    parameters:
    - id: entities
      type: System.Collections.Generic.IEnumerable{TSubEntity}
      description: The collection of entities.
    typeParameters:
    - id: TSubEntity
      description: The type of entities to attach.
  overload: System.Data.Linq.Table`1.AttachAll``1*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)
  commentId: M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)
  id: AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: AttachAll<TSubEntity>(IEnumerable<TSubEntity>, Boolean)
  nameWithType: Table<TEntity>.AttachAll<TSubEntity>(IEnumerable<TSubEntity>, Boolean)
  fullName: Table<TEntity>.AttachAll<TSubEntity>(IEnumerable<TSubEntity>, Boolean)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Attaches all entities of a collection to the <xref href="System.Data.Linq.DataContext"></xref> in either a modified or unmodified state.
  remarks: "This method attaches all entities of a collection to the <xref:System.Data.Linq.DataContext> in either a *modified* or *unmodified* state. If attaching as modified, the entity must either declare a version member or must not participate in update conflict checking. If attaching as unmodified, the entity is assumed to represent the original value. After calling this method, the entity's fields can be modified with other information from the client before <xref:System.Data.Linq.DataContext.SubmitChanges%2A> is called. For more information, see [Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md).  \n  \n When a new entity is attached, deferred loaders for any child collections (for example, `EntitySet` collections of entities from associated tables) are initialized. When <xref:System.Data.Linq.DataContext.SubmitChanges%2A> is called, members of the child collections are put into an `Unmodified` state. To update members of a child collection, you must explicitly call `Attach` and specify that entity."
  example:
  - "The following example shows how you can update an `Order` object on a different <xref:System.Data.Linq.DataContext> instance. The example assumes that you have a connection to a database and have made a [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] file for it (in this case, the Northwind sample database).  \n  \n [!code-csharp[DLinqNTier#1](~/samples/snippets/csharp/VS_Snippets_Data/DLinqNTier/cs/Program.cs#1)]\n [!code-vb[DLinqNTier#1](~/samples/snippets/visualbasic/VS_Snippets_Data/DLinqNTier/vb/Module1.vb#1)]  \n  \n In the following example, an entity object to be attached has a foreign key relation with another object and is stored in the cache but not attached. When you call <xref:System.Data.Linq.DataContext.SubmitChanges%2A>, the `ChangeProcessor` adds an `Insert` operation for all the foreign key objects. This is a side-effect when an entity instance is re-used in a different <xref:System.Data.Linq.DataContext> instance. For this reason, [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] does not support re-use of objects.  \n  \n [!code-csharp[DlinqNTier#7](~/samples/snippets/csharp/VS_Snippets_Data/DLinqNTier/cs/Program.cs#7)]\n [!code-vb[DlinqNTier#7](~/samples/snippets/visualbasic/VS_Snippets_Data/DLinqNTier/vb/Module1.vb#7)]  \n  \n The following example shows a scenario in which Customer A has canceled all orders and Customer B has taken ownership of them. You can attach all orders of Customer A at the same time.  \n  \n [!code-csharp[DlinqNTier#3](~/samples/snippets/csharp/VS_Snippets_Data/DLinqNTier/cs/Program.cs#3)]\n [!code-vb[DlinqNTier#3](~/samples/snippets/visualbasic/VS_Snippets_Data/DLinqNTier/vb/Module1.vb#3)]"
  syntax:
    content: 'public void AttachAll<TSubEntity> (System.Collections.Generic.IEnumerable<TSubEntity> entities, bool asModified) where TSubEntity : TEntity;'
    parameters:
    - id: entities
      type: System.Collections.Generic.IEnumerable{TSubEntity}
      description: The collection of entities.
    - id: asModified
      type: System.Boolean
      description: '`true` if the object has a timestamp or RowVersion member; `false` if original values are being used for the optimistic concurrency check.'
    typeParameters:
    - id: TSubEntity
      description: The type of entities to attach.
  overload: System.Data.Linq.Table`1.AttachAll``1*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Linq.Table`1.Context
  commentId: P:System.Data.Linq.Table`1.Context
  id: Context
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: Context
  nameWithType: Table<TEntity>.Context
  fullName: Table<TEntity>.Context
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Gets the <xref href="System.Data.Linq.DataContext"></xref> that has been used to retrieve this <xref href="System.Data.Linq.Table`1"></xref>.
  syntax:
    content: public System.Data.Linq.DataContext Context { get; }
    return:
      type: System.Data.Linq.DataContext
      description: The data context that has been used to retrieve this table.
  overload: System.Data.Linq.Table`1.Context*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Linq.Table`1.DeleteAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:System.Data.Linq.Table`1.DeleteAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})
  id: DeleteAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: DeleteAllOnSubmit<TSubEntity>(IEnumerable<TSubEntity>)
  nameWithType: Table<TEntity>.DeleteAllOnSubmit<TSubEntity>(IEnumerable<TSubEntity>)
  fullName: Table<TEntity>.DeleteAllOnSubmit<TSubEntity>(IEnumerable<TSubEntity>)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Puts all entities from the collection into a `pending delete` state.
  remarks: "Entities that are put into the pending delete state with this method do not disappear from query results until after <xref:System.Data.Linq.DataContext.SubmitChanges%2A> is called. Disconnected entities must be attached before they can be deleted. For more information, see [Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md).  \n  \n The following C# snippet shows one use for this method:  \n  \n```  \nIEnumerable<Customer> customersWithoutOrders = (from c in db.Customers  \n   where c.Orders.Count == 0  \n   select c).ToList();  \n  \ndb.Customers.DeleteAllOnSubmit(customersWithoutOrders);  \ndb.SubmitChanges();  \n```  \n  \n In Visual Basic:  \n  \n```  \nDim customersWithoutOrders As IEnumerable(Of Customer) = (From c In db.Customers _   \n    Where c.Orders.Count = 0 _   \n    Select c).ToList()  \n  \ndb.Customers.DeleteAllOnSubmit(customersWithoutOrders)  \ndb.SubmitChanges()  \n```"
  syntax:
    content: 'public void DeleteAllOnSubmit<TSubEntity> (System.Collections.Generic.IEnumerable<TSubEntity> entities) where TSubEntity : TEntity;'
    parameters:
    - id: entities
      type: System.Collections.Generic.IEnumerable{TSubEntity}
      description: The entities to delete.
    typeParameters:
    - id: TSubEntity
      description: The type of the elements to delete.
  overload: System.Data.Linq.Table`1.DeleteAllOnSubmit``1*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Linq.Table`1.DeleteOnSubmit(`0)
  commentId: M:System.Data.Linq.Table`1.DeleteOnSubmit(`0)
  id: DeleteOnSubmit(`0)
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: DeleteOnSubmit(TEntity)
  nameWithType: Table<TEntity>.DeleteOnSubmit(TEntity)
  fullName: Table<TEntity>.DeleteOnSubmit(TEntity)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Puts an entity from this table into a `pending delete` state.
  remarks: "The removed entity does not disappear from the query results until after <xref:System.Data.Linq.DataContext.SubmitChanges%2A> is called. Disconnected entities must first be attached before they can be deleted. For more information, see [Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md).  \n  \n> [!NOTE]\n>  [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] does not support or recognize cascade-delete operations. If you want to delete a row in a table that has constraints against it, you must either set the `ON DELETE CASCADE` rule in the foreign-key constraint in the database, or use your own code to first delete the child objects that prevent the parent object from being deleted. Otherwise, an exception is thrown."
  example:
  - >-
    [!code-csharp[System.Data.Linq.Table#3](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.table/cs/program.cs#3)]
     [!code-vb[System.Data.Linq.Table#3](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.table/vb/module1.vb#3)]
  syntax:
    content: public void DeleteOnSubmit (TEntity entity);
    parameters:
    - id: entity
      type: TEntity
      description: The entity to be deleted.
  overload: System.Data.Linq.Table`1.DeleteOnSubmit*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Linq.Table`1.GetEnumerator
  commentId: M:System.Data.Linq.Table`1.GetEnumerator
  id: GetEnumerator
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: Table<TEntity>.GetEnumerator()
  fullName: Table<TEntity>.GetEnumerator()
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Gets an enumerator that iterates through the collection.
  syntax:
    content: public System.Collections.Generic.IEnumerator<TEntity> GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{TEntity}
      description: An enumerator that can be used to iterate through the collection.
  overload: System.Data.Linq.Table`1.GetEnumerator*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Linq.Table`1.GetModifiedMembers(`0)
  commentId: M:System.Data.Linq.Table`1.GetModifiedMembers(`0)
  id: GetModifiedMembers(`0)
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: GetModifiedMembers(TEntity)
  nameWithType: Table<TEntity>.GetModifiedMembers(TEntity)
  fullName: Table<TEntity>.GetModifiedMembers(TEntity)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Returns an array of modified members that contain their current and original values.
  syntax:
    content: public System.Data.Linq.ModifiedMemberInfo[] GetModifiedMembers (TEntity entity);
    parameters:
    - id: entity
      type: TEntity
      description: The entity from which to get the array.
    return:
      type: System.Data.Linq.ModifiedMemberInfo[]
      description: An array of modified members that contain their current and original values.
  overload: System.Data.Linq.Table`1.GetModifiedMembers*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Linq.Table`1.GetNewBindingList
  commentId: M:System.Data.Linq.Table`1.GetNewBindingList
  id: GetNewBindingList
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: GetNewBindingList()
  nameWithType: Table<TEntity>.GetNewBindingList()
  fullName: Table<TEntity>.GetNewBindingList()
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Creates a new list for binding to a data source.
  remarks: The returned list supports standard operations, such as additions, deletions, insertions, and updates, but saves must be explicitly managed by the programmer.
  syntax:
    content: public System.ComponentModel.IBindingList GetNewBindingList ();
    parameters: []
    return:
      type: System.ComponentModel.IBindingList
      description: A new <xref href="System.ComponentModel.IBindingList"></xref> for binding to a data source.
  overload: System.Data.Linq.Table`1.GetNewBindingList*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Linq.Table`1.GetOriginalEntityState(`0)
  commentId: M:System.Data.Linq.Table`1.GetOriginalEntityState(`0)
  id: GetOriginalEntityState(`0)
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: GetOriginalEntityState(TEntity)
  nameWithType: Table<TEntity>.GetOriginalEntityState(TEntity)
  fullName: Table<TEntity>.GetOriginalEntityState(TEntity)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Returns a <xref href="System.Data.Linq.Table`1"></xref> instance that contains the original state of the entity.
  remarks: This method returns the original state of an entity since it was either created or attached to the current <xref:System.Data.Linq.DataContext>. The original state of an entity that has been serialized and deserialized must be provided by an independent tracking mechanism and supplied when the entity is attached to a new <xref:System.Data.Linq.DataContext>. For more information, see [Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md).
  syntax:
    content: public TEntity GetOriginalEntityState (TEntity entity);
    parameters:
    - id: entity
      type: TEntity
      description: The entity whose original state is to be returned.
    return:
      type: TEntity
      description: A <xref href="System.Data.Linq.Table`1"></xref> instance that contains the original state of the entity.
  overload: System.Data.Linq.Table`1.GetOriginalEntityState*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Linq.Table`1.InsertAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:System.Data.Linq.Table`1.InsertAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})
  id: InsertAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: InsertAllOnSubmit<TSubEntity>(IEnumerable<TSubEntity>)
  nameWithType: Table<TEntity>.InsertAllOnSubmit<TSubEntity>(IEnumerable<TSubEntity>)
  fullName: Table<TEntity>.InsertAllOnSubmit<TSubEntity>(IEnumerable<TSubEntity>)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Adds all entities of a collection to the <xref href="System.Data.Linq.DataContext"></xref> in a `pending insert` state.
  remarks: The added entities will not be in query results until after <xref:System.Data.Linq.DataContext.SubmitChanges%2A> has been called.
  syntax:
    content: 'public void InsertAllOnSubmit<TSubEntity> (System.Collections.Generic.IEnumerable<TSubEntity> entities) where TSubEntity : TEntity;'
    parameters:
    - id: entities
      type: System.Collections.Generic.IEnumerable{TSubEntity}
      description: The entities to add.
    typeParameters:
    - id: TSubEntity
      description: The type of the elements to insert.
  overload: System.Data.Linq.Table`1.InsertAllOnSubmit``1*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Linq.Table`1.InsertOnSubmit(`0)
  commentId: M:System.Data.Linq.Table`1.InsertOnSubmit(`0)
  id: InsertOnSubmit(`0)
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: InsertOnSubmit(TEntity)
  nameWithType: Table<TEntity>.InsertOnSubmit(TEntity)
  fullName: Table<TEntity>.InsertOnSubmit(TEntity)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Adds an entity in a `pending insert` state to this <xref href="System.Data.Linq.Table`1"></xref>.
  remarks: The added entity will not appear in query results from this table until after <xref:System.Data.Linq.DataContext.SubmitChanges%2A> has been called.
  example:
  - >-
    [!code-csharp[System.Data.Linq.Table#1](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.table/cs/program.cs#1)]
     [!code-vb[System.Data.Linq.Table#1](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.table/vb/module1.vb#1)]
  syntax:
    content: public void InsertOnSubmit (TEntity entity);
    parameters:
    - id: entity
      type: TEntity
      description: The entity to be added.
  overload: System.Data.Linq.Table`1.InsertOnSubmit*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Linq.Table`1.IsReadOnly
  commentId: P:System.Data.Linq.Table`1.IsReadOnly
  id: IsReadOnly
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: Table<TEntity>.IsReadOnly
  fullName: Table<TEntity>.IsReadOnly
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Gets a value that indicates whether the type of the entities contained in this <xref href="System.Data.Linq.Table`1"></xref> instance has a primary key.
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: '`true` if the entity type does not have a primary key; otherwise, `false`.'
  overload: System.Data.Linq.Table`1.IsReadOnly*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Linq.Table`1.ToString
  commentId: M:System.Data.Linq.Table`1.ToString
  id: ToString
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: ToString()
  nameWithType: Table<TEntity>.ToString()
  fullName: Table<TEntity>.ToString()
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Returns a string that represents the table.
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: A string representation of the table.
  overload: System.Data.Linq.Table`1.ToString*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Linq.Table`1.System#Collections#Generic#IEnumerable{TEntity}#GetEnumerator
  commentId: M:System.Data.Linq.Table`1.System#Collections#Generic#IEnumerable<TEntity>#GetEnumerator
  id: System#Collections#Generic#IEnumerable{TEntity}#GetEnumerator
  isEii: true
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: IEnumerable<TEntity>.GetEnumerator()
  nameWithType: Table<TEntity>.IEnumerable<TEntity>.GetEnumerator()
  fullName: Table<TEntity>.IEnumerable<TEntity>.GetEnumerator()
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Returns an enumerator that iterates through the collection.
  syntax:
    content: System.Collections.Generic.IEnumerator<TEntity> IEnumerable<TEntity>.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{TEntity}
      description: An enumerator that can be used to iterate through the collection.
  overload: System.Data.Linq.Table`1.System#Collections#Generic#IEnumerable{TEntity}#GetEnumerator*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Linq.Table`1.System#Collections#IEnumerable#GetEnumerator
  commentId: M:System.Data.Linq.Table`1.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: IEnumerable.GetEnumerator()
  nameWithType: Table<TEntity>.IEnumerable.GetEnumerator()
  fullName: Table<TEntity>.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Returns an enumerator that iterates through the collection.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.Table%601> instance is cast to an <xref:System.Collections.Generic.IEnumerable%601> interface.
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: An enumerator that can be used to iterate through the collection.
  overload: System.Data.Linq.Table`1.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Linq.Table`1.System#ComponentModel#IListSource#ContainsListCollection
  commentId: P:System.Data.Linq.Table`1.System#ComponentModel#IListSource#ContainsListCollection
  id: System#ComponentModel#IListSource#ContainsListCollection
  isEii: true
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: IListSource.ContainsListCollection
  nameWithType: Table<TEntity>.IListSource.ContainsListCollection
  fullName: Table<TEntity>.IListSource.ContainsListCollection
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Gets a value that indicates whether the collection is a collection of <xref href="System.Collections.IList"></xref> objects.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.Table%601> instance is cast to an <xref:System.ComponentModel.IListSource> interface.
  syntax:
    content: bool System.ComponentModel.IListSource.ContainsListCollection { get; }
    return:
      type: System.Boolean
      description: '`true` if the collection is a collection of <xref href="System.Collections.IList"></xref> objects; otherwise, `false`.'
  overload: System.Data.Linq.Table`1.System#ComponentModel#IListSource#ContainsListCollection*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Linq.Table`1.System#ComponentModel#IListSource#GetList
  commentId: M:System.Data.Linq.Table`1.System#ComponentModel#IListSource#GetList
  id: System#ComponentModel#IListSource#GetList
  isEii: true
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: IListSource.GetList()
  nameWithType: Table<TEntity>.IListSource.GetList()
  fullName: Table<TEntity>.IListSource.GetList()
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Returns an <xref href="System.Collections.IList"></xref> that can be bound to a data source from an object that does not implement an <xref href="System.Collections.IList"></xref> itself.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.Table%601> instance is cast to an <xref:System.ComponentModel.IListSource> interface.
  syntax:
    content: System.Collections.IList IListSource.GetList ();
    parameters: []
    return:
      type: System.Collections.IList
      description: An <xref href="System.Collections.IList"></xref> that can be bound to a data source.
  overload: System.Data.Linq.Table`1.System#ComponentModel#IListSource#GetList*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object,System.Boolean)
  commentId: M:System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object,System.Boolean)
  id: System#Data#Linq#ITable#Attach(System.Object,System.Boolean)
  isEii: true
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: ITable.Attach(Object, Boolean)
  nameWithType: Table<TEntity>.ITable.Attach(Object, Boolean)
  fullName: Table<TEntity>.ITable.Attach(Object, Boolean)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Attaches all entities of a collection to the <xref href="System.Data.Linq.DataContext"></xref> in either a modified or unmodified state.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.Table%601> instance is cast to an <xref:System.Data.Linq.ITable> interface.
  syntax:
    content: void ITable.Attach (object entity, bool asModified);
    parameters:
    - id: entity
      type: System.Object
      description: The entity to be attached.
    - id: asModified
      type: System.Boolean
      description: '`true` to attach the entity as modified; `false` to attached the entity as unmodified.'
  overload: System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object,System.Object)
  commentId: M:System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object,System.Object)
  id: System#Data#Linq#ITable#Attach(System.Object,System.Object)
  isEii: true
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: ITable.Attach(Object, Object)
  nameWithType: Table<TEntity>.ITable.Attach(Object, Object)
  fullName: Table<TEntity>.ITable.Attach(Object, Object)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Attaches an entity to the <xref href="System.Data.Linq.DataContext"></xref> in either a modified or unmodified state by specifying both the entity and its original state.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.Table%601> instance is cast to an <xref:System.Data.Linq.ITable> interface.
  syntax:
    content: void ITable.Attach (object entity, object original);
    parameters:
    - id: entity
      type: System.Object
      description: The entity to be attached.
    - id: original
      type: System.Object
      description: An instance of the same entity type with data members that contain the original values.
  overload: System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object)
  commentId: M:System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object)
  id: System#Data#Linq#ITable#Attach(System.Object)
  isEii: true
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: ITable.Attach(Object)
  nameWithType: Table<TEntity>.ITable.Attach(Object)
  fullName: Table<TEntity>.ITable.Attach(Object)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Attaches an entity to the <xref href="System.Data.Linq.DataContext"></xref> in an unmodified state.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.Table%601> instance is cast to an <xref:System.Data.Linq.ITable> interface.
  syntax:
    content: void ITable.Attach (object entity);
    parameters:
    - id: entity
      type: System.Object
      description: The entity to be attached.
  overload: System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#AttachAll(System.Collections.IEnumerable)
  commentId: M:System.Data.Linq.Table`1.System#Data#Linq#ITable#AttachAll(System.Collections.IEnumerable)
  id: System#Data#Linq#ITable#AttachAll(System.Collections.IEnumerable)
  isEii: true
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: ITable.AttachAll(IEnumerable)
  nameWithType: Table<TEntity>.ITable.AttachAll(IEnumerable)
  fullName: Table<TEntity>.ITable.AttachAll(IEnumerable)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Attaches all entities of a collection to the <xref href="System.Data.Linq.DataContext"></xref> in either a modified or unmodified state.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.Table%601> instance is cast to an <xref:System.Data.Linq.ITable> interface.
  syntax:
    content: void ITable.AttachAll (System.Collections.IEnumerable entities);
    parameters:
    - id: entities
      type: System.Collections.IEnumerable
      description: The collection of entities to be attached.
  overload: System.Data.Linq.Table`1.System#Data#Linq#ITable#AttachAll*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#AttachAll(System.Collections.IEnumerable,System.Boolean)
  commentId: M:System.Data.Linq.Table`1.System#Data#Linq#ITable#AttachAll(System.Collections.IEnumerable,System.Boolean)
  id: System#Data#Linq#ITable#AttachAll(System.Collections.IEnumerable,System.Boolean)
  isEii: true
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: ITable.AttachAll(IEnumerable, Boolean)
  nameWithType: Table<TEntity>.ITable.AttachAll(IEnumerable, Boolean)
  fullName: Table<TEntity>.ITable.AttachAll(IEnumerable, Boolean)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Attaches all entities of a collection to the <xref href="System.Data.Linq.DataContext"></xref> in either a modified or unmodified state.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.Table%601> instance is cast to an <xref:System.Data.Linq.ITable> interface.
  syntax:
    content: void ITable.AttachAll (System.Collections.IEnumerable entities, bool asModified);
    parameters:
    - id: entities
      type: System.Collections.IEnumerable
      description: The collection of entities to be attched.
    - id: asModified
      type: System.Boolean
      description: '`true` to attach the entities as modified; `false` to attach the entities as unmodified.'
  overload: System.Data.Linq.Table`1.System#Data#Linq#ITable#AttachAll*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteAllOnSubmit(System.Collections.IEnumerable)
  commentId: M:System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteAllOnSubmit(System.Collections.IEnumerable)
  id: System#Data#Linq#ITable#DeleteAllOnSubmit(System.Collections.IEnumerable)
  isEii: true
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: ITable.DeleteAllOnSubmit(IEnumerable)
  nameWithType: Table<TEntity>.ITable.DeleteAllOnSubmit(IEnumerable)
  fullName: Table<TEntity>.ITable.DeleteAllOnSubmit(IEnumerable)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Puts all entities from the collection into a `pending delete` state.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.Table%601> instance is cast to an <xref:System.Data.Linq.ITable> interface.
  syntax:
    content: void ITable.DeleteAllOnSubmit (System.Collections.IEnumerable entities);
    parameters:
    - id: entities
      type: System.Collections.IEnumerable
      description: The entities being removed.
  overload: System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteAllOnSubmit*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteOnSubmit(System.Object)
  commentId: M:System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteOnSubmit(System.Object)
  id: System#Data#Linq#ITable#DeleteOnSubmit(System.Object)
  isEii: true
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: ITable.DeleteOnSubmit(Object)
  nameWithType: Table<TEntity>.ITable.DeleteOnSubmit(Object)
  fullName: Table<TEntity>.ITable.DeleteOnSubmit(Object)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Puts an entity from this table into a `pending delete` state.
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.Table%601> instance is cast to an <xref:System.Data.Linq.ITable> interface.  \n  \n> [!NOTE]\n>  [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] does not support or recognize cascade-delete operations. If you want to delete a row in a table that has constraints against it, you must either set the `ON DELETE CASCADE` rule in the foreign-key constraint in the database, or use your own code to first delete the child objects that prevent the parent object from being deleted. Otherwise, an exception is thrown."
  syntax:
    content: void ITable.DeleteOnSubmit (object entity);
    parameters:
    - id: entity
      type: System.Object
      description: The entity to be removed.
  overload: System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteOnSubmit*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#GetModifiedMembers(System.Object)
  commentId: M:System.Data.Linq.Table`1.System#Data#Linq#ITable#GetModifiedMembers(System.Object)
  id: System#Data#Linq#ITable#GetModifiedMembers(System.Object)
  isEii: true
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: ITable.GetModifiedMembers(Object)
  nameWithType: Table<TEntity>.ITable.GetModifiedMembers(Object)
  fullName: Table<TEntity>.ITable.GetModifiedMembers(Object)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Returns an array of modified members that contain their current and original values.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.Table%601> instance is cast to an <xref:System.Data.Linq.ITable> interface.
  syntax:
    content: >-
      [System.Obsolete("NOT IMPLEMENTED YET")]

      System.Data.Linq.ModifiedMemberInfo[] ITable.GetModifiedMembers (object entity);
    parameters:
    - id: entity
      type: System.Object
      description: The entity from which to obtain the modified members.
    return:
      type: System.Data.Linq.ModifiedMemberInfo[]
      description: An array of modified members.
  overload: System.Data.Linq.Table`1.System#Data#Linq#ITable#GetModifiedMembers*
  exceptions: []
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#GetOriginalEntityState(System.Object)
  commentId: M:System.Data.Linq.Table`1.System#Data#Linq#ITable#GetOriginalEntityState(System.Object)
  id: System#Data#Linq#ITable#GetOriginalEntityState(System.Object)
  isEii: true
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: ITable.GetOriginalEntityState(Object)
  nameWithType: Table<TEntity>.ITable.GetOriginalEntityState(Object)
  fullName: Table<TEntity>.ITable.GetOriginalEntityState(Object)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Retrieves original values of a given entity.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.Table%601> instance is cast to an <xref:System.Data.Linq.ITable> interface.
  syntax:
    content: >-
      [System.Obsolete("NOT IMPLEMENTED YET")]

      object ITable.GetOriginalEntityState (object entity);
    parameters:
    - id: entity
      type: System.Object
      description: The entity whose original state is to be accessed.
    return:
      type: System.Object
      description: A copy of the original entity.
  overload: System.Data.Linq.Table`1.System#Data#Linq#ITable#GetOriginalEntityState*
  exceptions: []
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#InsertAllOnSubmit(System.Collections.IEnumerable)
  commentId: M:System.Data.Linq.Table`1.System#Data#Linq#ITable#InsertAllOnSubmit(System.Collections.IEnumerable)
  id: System#Data#Linq#ITable#InsertAllOnSubmit(System.Collections.IEnumerable)
  isEii: true
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: ITable.InsertAllOnSubmit(IEnumerable)
  nameWithType: Table<TEntity>.ITable.InsertAllOnSubmit(IEnumerable)
  fullName: Table<TEntity>.ITable.InsertAllOnSubmit(IEnumerable)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Adds all entities of a collection to the <xref href="System.Data.Linq.DataContext"></xref> in an `pending insert` state.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.Table%601> instance is cast to an <xref:System.Data.Linq.ITable> interface.
  syntax:
    content: void ITable.InsertAllOnSubmit (System.Collections.IEnumerable entities);
    parameters:
    - id: entities
      type: System.Collections.IEnumerable
      description: The collection of entities to be added.
  overload: System.Data.Linq.Table`1.System#Data#Linq#ITable#InsertAllOnSubmit*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#InsertOnSubmit(System.Object)
  commentId: M:System.Data.Linq.Table`1.System#Data#Linq#ITable#InsertOnSubmit(System.Object)
  id: System#Data#Linq#ITable#InsertOnSubmit(System.Object)
  isEii: true
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: ITable.InsertOnSubmit(Object)
  nameWithType: Table<TEntity>.ITable.InsertOnSubmit(Object)
  fullName: Table<TEntity>.ITable.InsertOnSubmit(Object)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Adds an entity in a `pending insert` state to this table.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.Table%601> instance is cast to an <xref:System.Data.Linq.ITable> interface.
  syntax:
    content: void ITable.InsertOnSubmit (object entity);
    parameters:
    - id: entity
      type: System.Object
      description: The entity to add.
  overload: System.Data.Linq.Table`1.System#Data#Linq#ITable#InsertOnSubmit*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Linq.Table`1.System#Linq#IQueryable#ElementType
  commentId: P:System.Data.Linq.Table`1.System#Linq#IQueryable#ElementType
  id: System#Linq#IQueryable#ElementType
  isEii: true
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: IQueryable.ElementType
  nameWithType: Table<TEntity>.IQueryable.ElementType
  fullName: Table<TEntity>.IQueryable.ElementType
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Gets the type of the element(s) that are returned when the expression tree associated with this object is executed.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.Table%601> instance is cast to an <xref:System.Linq.IQueryable> interface.
  syntax:
    content: Type System.Linq.IQueryable.ElementType { get; }
    return:
      type: System.Type
      description: The type of the element(s) that are returned when the expression tree associated with this object is executed.
  overload: System.Data.Linq.Table`1.System#Linq#IQueryable#ElementType*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Linq.Table`1.System#Linq#IQueryable#Expression
  commentId: P:System.Data.Linq.Table`1.System#Linq#IQueryable#Expression
  id: System#Linq#IQueryable#Expression
  isEii: true
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: IQueryable.Expression
  nameWithType: Table<TEntity>.IQueryable.Expression
  fullName: Table<TEntity>.IQueryable.Expression
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Gets the expression tree that is associated with this instance of <xref href="System.Linq.IQueryable"></xref>.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.Table%601> instance is cast to an <xref:System.Linq.IQueryable> interface.
  syntax:
    content: System.Linq.Expressions.Expression System.Linq.IQueryable.Expression { get; }
    return:
      type: System.Linq.Expressions.Expression
      description: The <xref href="System.Linq.Expressions.Expression"></xref> that is associated with this instance of <xref href="System.Linq.IQueryable"></xref>.
  overload: System.Data.Linq.Table`1.System#Linq#IQueryable#Expression*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Linq.Table`1.System#Linq#IQueryable#Provider
  commentId: P:System.Data.Linq.Table`1.System#Linq#IQueryable#Provider
  id: System#Linq#IQueryable#Provider
  isEii: true
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: IQueryable.Provider
  nameWithType: Table<TEntity>.IQueryable.Provider
  fullName: Table<TEntity>.IQueryable.Provider
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Gets the query provider that is associated with this data source.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.Table%601> instance is cast to an <xref:System.Linq.IQueryable> interface.
  syntax:
    content: System.Linq.IQueryProvider System.Linq.IQueryable.Provider { get; }
    return:
      type: System.Linq.IQueryProvider
      description: The <xref href="System.Linq.IQueryProvider"></xref> that is associated with this data source.
  overload: System.Data.Linq.Table`1.System#Linq#IQueryable#Provider*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery(System.Linq.Expressions.Expression)
  commentId: M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery(System.Linq.Expressions.Expression)
  id: System#Linq#IQueryProvider#CreateQuery(System.Linq.Expressions.Expression)
  isEii: true
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: IQueryProvider.CreateQuery(Expression)
  nameWithType: Table<TEntity>.IQueryProvider.CreateQuery(Expression)
  fullName: Table<TEntity>.IQueryProvider.CreateQuery(Expression)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Constructs an <xref href="System.Linq.IQueryable"></xref> object that can evaluate the query represented by a specified expression tree.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.Table%601> instance is cast to an <xref:System.Linq.IQueryProvider> interface.
  syntax:
    content: System.Linq.IQueryable IQueryProvider.CreateQuery (System.Linq.Expressions.Expression expression);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: The query expression from which the evaluation is performed.
    return:
      type: System.Linq.IQueryable
      description: An <xref href="System.Linq.IQueryable"></xref> that can evaluate the query represented by the specified expression tree.
  overload: System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery``1(System.Linq.Expressions.Expression)
  commentId: M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery``1(System.Linq.Expressions.Expression)
  id: System#Linq#IQueryProvider#CreateQuery``1(System.Linq.Expressions.Expression)
  isEii: true
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: IQueryProvider.CreateQuery<TResult>(Expression)
  nameWithType: Table<TEntity>.IQueryProvider.CreateQuery<TResult>(Expression)
  fullName: Table<TEntity>.IQueryProvider.CreateQuery<TResult>(Expression)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Constructs an <xref href="System.Linq.IQueryable`1"></xref> object that can evaluate the query represented by a specified expression tree.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.Table%601> instance is cast to an <xref:System.Linq.IQueryProvider> interface.
  syntax:
    content: System.Linq.IQueryable<TResult> IQueryProvider.CreateQuery<TResult> (System.Linq.Expressions.Expression expression);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: The query expression from which the evaluation is performed.
    typeParameters:
    - id: TResult
      description: The type of the data in the table.
    return:
      type: System.Linq.IQueryable{TResult}
      description: An <xref href="System.Linq.IQueryable`1"></xref> that can evaluate the query represented by the specified expression tree.
  overload: System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery``1*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute(System.Linq.Expressions.Expression)
  commentId: M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute(System.Linq.Expressions.Expression)
  id: System#Linq#IQueryProvider#Execute(System.Linq.Expressions.Expression)
  isEii: true
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: IQueryProvider.Execute(Expression)
  nameWithType: Table<TEntity>.IQueryProvider.Execute(Expression)
  fullName: Table<TEntity>.IQueryProvider.Execute(Expression)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Executes the query represented by a specified expression tree.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.Table%601> instance is cast to an <xref:System.Linq.IQueryProvider> interface.
  syntax:
    content: object IQueryProvider.Execute (System.Linq.Expressions.Expression expression);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: The query expression to execute.
    return:
      type: System.Object
      description: The value that results from executing the specified query.
  overload: System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute``1(System.Linq.Expressions.Expression)
  commentId: M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute``1(System.Linq.Expressions.Expression)
  id: System#Linq#IQueryProvider#Execute``1(System.Linq.Expressions.Expression)
  isEii: true
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: IQueryProvider.Execute<TResult>(Expression)
  nameWithType: Table<TEntity>.IQueryProvider.Execute<TResult>(Expression)
  fullName: Table<TEntity>.IQueryProvider.Execute<TResult>(Expression)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Executes the strongly-typed query represented by a specified expression tree.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.Table%601> instance is cast to an <xref:System.Linq.IQueryProvider> interface.
  syntax:
    content: TResult IQueryProvider.Execute<TResult> (System.Linq.Expressions.Expression expression);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: The query expression to execute.
    typeParameters:
    - id: TResult
      description: The type of the data in the table.
    return:
      type: TResult
      description: The value that results from executing the specified query.
  overload: System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute``1*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.Linq.Table`1.Attach(`0)
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: Attach(TEntity)
  nameWithType: Table<TEntity>.Attach(TEntity)
  fullName: Table<TEntity>.Attach(TEntity)
- uid: TEntity
  isExternal: true
  name: TEntity
  nameWithType: TEntity
  fullName: TEntity
- uid: System.Data.Linq.Table`1.Attach(`0,System.Boolean)
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: Attach(TEntity, Boolean)
  nameWithType: Table<TEntity>.Attach(TEntity, Boolean)
  fullName: Table<TEntity>.Attach(TEntity, Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Linq.Table`1.Attach(`0,`0)
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: Attach(TEntity, TEntity)
  nameWithType: Table<TEntity>.Attach(TEntity, TEntity)
  fullName: Table<TEntity>.Attach(TEntity, TEntity)
- uid: System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: AttachAll<TSubEntity>(IEnumerable<TSubEntity>)
  nameWithType: Table<TEntity>.AttachAll<TSubEntity>(IEnumerable<TSubEntity>)
  fullName: Table<TEntity>.AttachAll<TSubEntity>(IEnumerable<TSubEntity>)
- uid: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
- uid: TSubEntity
  name: TSubEntity
  nameWithType: TSubEntity
  fullName: TSubEntity
- uid: System.Collections.Generic.IEnumerable{TSubEntity}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<TSubEntity>
  nameWithType: IEnumerable<TSubEntity>
  fullName: System.Collections.Generic.IEnumerable<TSubEntity>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: TSubEntity
    name: TSubEntity
    nameWithType: TSubEntity
    fullName: TSubEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: AttachAll<TSubEntity>(IEnumerable<TSubEntity>, Boolean)
  nameWithType: Table<TEntity>.AttachAll<TSubEntity>(IEnumerable<TSubEntity>, Boolean)
  fullName: Table<TEntity>.AttachAll<TSubEntity>(IEnumerable<TSubEntity>, Boolean)
- uid: System.Data.Linq.Table`1.Context
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: Context
  nameWithType: Table<TEntity>.Context
  fullName: Table<TEntity>.Context
- uid: System.Data.Linq.DataContext
  parent: System.Data.Linq
  isExternal: false
  name: DataContext
  nameWithType: DataContext
  fullName: System.Data.Linq.DataContext
- uid: System.Data.Linq.Table`1.DeleteAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: DeleteAllOnSubmit<TSubEntity>(IEnumerable<TSubEntity>)
  nameWithType: Table<TEntity>.DeleteAllOnSubmit<TSubEntity>(IEnumerable<TSubEntity>)
  fullName: Table<TEntity>.DeleteAllOnSubmit<TSubEntity>(IEnumerable<TSubEntity>)
- uid: System.Data.Linq.Table`1.DeleteOnSubmit(`0)
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: DeleteOnSubmit(TEntity)
  nameWithType: Table<TEntity>.DeleteOnSubmit(TEntity)
  fullName: Table<TEntity>.DeleteOnSubmit(TEntity)
- uid: System.Data.Linq.Table`1.GetEnumerator
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: GetEnumerator()
  nameWithType: Table<TEntity>.GetEnumerator()
  fullName: Table<TEntity>.GetEnumerator()
- uid: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
- uid: System.Collections.Generic.IEnumerator{TEntity}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerator<TEntity>
  nameWithType: IEnumerator<TEntity>
  fullName: System.Collections.Generic.IEnumerator<TEntity>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
  - name: <
    nameWithType: <
    fullName: <
  - uid: TEntity
    name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Linq.Table`1.GetModifiedMembers(`0)
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: GetModifiedMembers(TEntity)
  nameWithType: Table<TEntity>.GetModifiedMembers(TEntity)
  fullName: Table<TEntity>.GetModifiedMembers(TEntity)
- uid: System.Data.Linq.ModifiedMemberInfo
  name: ModifiedMemberInfo
  nameWithType: ModifiedMemberInfo
  fullName: System.Data.Linq.ModifiedMemberInfo
- uid: System.Data.Linq.ModifiedMemberInfo[]
  parent: System.Data.Linq
  isExternal: false
  name: ModifiedMemberInfo[]
  nameWithType: ModifiedMemberInfo[]
  fullName: System.Data.Linq.ModifiedMemberInfo[]
  spec.csharp:
  - uid: System.Data.Linq.ModifiedMemberInfo
    name: ModifiedMemberInfo
    nameWithType: ModifiedMemberInfo
    fullName: System.Data.Linq.ModifiedMemberInfo
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.Linq.Table`1.GetNewBindingList
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: GetNewBindingList()
  nameWithType: Table<TEntity>.GetNewBindingList()
  fullName: Table<TEntity>.GetNewBindingList()
- uid: System.ComponentModel.IBindingList
  parent: System.ComponentModel
  isExternal: false
  name: IBindingList
  nameWithType: IBindingList
  fullName: System.ComponentModel.IBindingList
- uid: System.Data.Linq.Table`1.GetOriginalEntityState(`0)
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: GetOriginalEntityState(TEntity)
  nameWithType: Table<TEntity>.GetOriginalEntityState(TEntity)
  fullName: Table<TEntity>.GetOriginalEntityState(TEntity)
- uid: System.Data.Linq.Table`1.InsertAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: InsertAllOnSubmit<TSubEntity>(IEnumerable<TSubEntity>)
  nameWithType: Table<TEntity>.InsertAllOnSubmit<TSubEntity>(IEnumerable<TSubEntity>)
  fullName: Table<TEntity>.InsertAllOnSubmit<TSubEntity>(IEnumerable<TSubEntity>)
- uid: System.Data.Linq.Table`1.InsertOnSubmit(`0)
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: InsertOnSubmit(TEntity)
  nameWithType: Table<TEntity>.InsertOnSubmit(TEntity)
  fullName: Table<TEntity>.InsertOnSubmit(TEntity)
- uid: System.Data.Linq.Table`1.IsReadOnly
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: IsReadOnly
  nameWithType: Table<TEntity>.IsReadOnly
  fullName: Table<TEntity>.IsReadOnly
- uid: System.Data.Linq.Table`1.ToString
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: ToString()
  nameWithType: Table<TEntity>.ToString()
  fullName: Table<TEntity>.ToString()
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Linq.Table`1.System#Collections#Generic#IEnumerable{TEntity}#GetEnumerator
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: IEnumerable<TEntity>.GetEnumerator()
  nameWithType: Table<TEntity>.IEnumerable<TEntity>.GetEnumerator()
  fullName: Table<TEntity>.IEnumerable<TEntity>.GetEnumerator()
- uid: System.Data.Linq.Table`1.System#Collections#IEnumerable#GetEnumerator
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: IEnumerable.GetEnumerator()
  nameWithType: Table<TEntity>.IEnumerable.GetEnumerator()
  fullName: Table<TEntity>.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Data.Linq.Table`1.System#ComponentModel#IListSource#ContainsListCollection
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: IListSource.ContainsListCollection
  nameWithType: Table<TEntity>.IListSource.ContainsListCollection
  fullName: Table<TEntity>.IListSource.ContainsListCollection
- uid: System.Data.Linq.Table`1.System#ComponentModel#IListSource#GetList
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: IListSource.GetList()
  nameWithType: Table<TEntity>.IListSource.GetList()
  fullName: Table<TEntity>.IListSource.GetList()
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: false
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object,System.Boolean)
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: ITable.Attach(Object, Boolean)
  nameWithType: Table<TEntity>.ITable.Attach(Object, Boolean)
  fullName: Table<TEntity>.ITable.Attach(Object, Boolean)
- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object,System.Object)
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: ITable.Attach(Object, Object)
  nameWithType: Table<TEntity>.ITable.Attach(Object, Object)
  fullName: Table<TEntity>.ITable.Attach(Object, Object)
- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object)
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: ITable.Attach(Object)
  nameWithType: Table<TEntity>.ITable.Attach(Object)
  fullName: Table<TEntity>.ITable.Attach(Object)
- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#AttachAll(System.Collections.IEnumerable)
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: ITable.AttachAll(IEnumerable)
  nameWithType: Table<TEntity>.ITable.AttachAll(IEnumerable)
  fullName: Table<TEntity>.ITable.AttachAll(IEnumerable)
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: false
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#AttachAll(System.Collections.IEnumerable,System.Boolean)
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: ITable.AttachAll(IEnumerable, Boolean)
  nameWithType: Table<TEntity>.ITable.AttachAll(IEnumerable, Boolean)
  fullName: Table<TEntity>.ITable.AttachAll(IEnumerable, Boolean)
- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteAllOnSubmit(System.Collections.IEnumerable)
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: ITable.DeleteAllOnSubmit(IEnumerable)
  nameWithType: Table<TEntity>.ITable.DeleteAllOnSubmit(IEnumerable)
  fullName: Table<TEntity>.ITable.DeleteAllOnSubmit(IEnumerable)
- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteOnSubmit(System.Object)
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: ITable.DeleteOnSubmit(Object)
  nameWithType: Table<TEntity>.ITable.DeleteOnSubmit(Object)
  fullName: Table<TEntity>.ITable.DeleteOnSubmit(Object)
- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#GetModifiedMembers(System.Object)
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: ITable.GetModifiedMembers(Object)
  nameWithType: Table<TEntity>.ITable.GetModifiedMembers(Object)
  fullName: Table<TEntity>.ITable.GetModifiedMembers(Object)
- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#GetOriginalEntityState(System.Object)
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: ITable.GetOriginalEntityState(Object)
  nameWithType: Table<TEntity>.ITable.GetOriginalEntityState(Object)
  fullName: Table<TEntity>.ITable.GetOriginalEntityState(Object)
- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#InsertAllOnSubmit(System.Collections.IEnumerable)
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: ITable.InsertAllOnSubmit(IEnumerable)
  nameWithType: Table<TEntity>.ITable.InsertAllOnSubmit(IEnumerable)
  fullName: Table<TEntity>.ITable.InsertAllOnSubmit(IEnumerable)
- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#InsertOnSubmit(System.Object)
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: ITable.InsertOnSubmit(Object)
  nameWithType: Table<TEntity>.ITable.InsertOnSubmit(Object)
  fullName: Table<TEntity>.ITable.InsertOnSubmit(Object)
- uid: System.Data.Linq.Table`1.System#Linq#IQueryable#ElementType
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: IQueryable.ElementType
  nameWithType: Table<TEntity>.IQueryable.ElementType
  fullName: Table<TEntity>.IQueryable.ElementType
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Data.Linq.Table`1.System#Linq#IQueryable#Expression
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: IQueryable.Expression
  nameWithType: Table<TEntity>.IQueryable.Expression
  fullName: Table<TEntity>.IQueryable.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Data.Linq.Table`1.System#Linq#IQueryable#Provider
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: IQueryable.Provider
  nameWithType: Table<TEntity>.IQueryable.Provider
  fullName: Table<TEntity>.IQueryable.Provider
- uid: System.Linq.IQueryProvider
  parent: System.Linq
  isExternal: false
  name: IQueryProvider
  nameWithType: IQueryProvider
  fullName: System.Linq.IQueryProvider
- uid: System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery(System.Linq.Expressions.Expression)
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: IQueryProvider.CreateQuery(Expression)
  nameWithType: Table<TEntity>.IQueryProvider.CreateQuery(Expression)
  fullName: Table<TEntity>.IQueryProvider.CreateQuery(Expression)
- uid: System.Linq.IQueryable
  parent: System.Linq
  isExternal: false
  name: IQueryable
  nameWithType: IQueryable
  fullName: System.Linq.IQueryable
- uid: System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery``1(System.Linq.Expressions.Expression)
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: IQueryProvider.CreateQuery<TResult>(Expression)
  nameWithType: Table<TEntity>.IQueryProvider.CreateQuery<TResult>(Expression)
  fullName: Table<TEntity>.IQueryProvider.CreateQuery<TResult>(Expression)
- uid: System.Linq.IQueryable`1
  name: IQueryable<T>
  nameWithType: IQueryable<T>
  fullName: System.Linq.IQueryable<T>
- uid: TResult
  name: TResult
  nameWithType: TResult
  fullName: TResult
- uid: System.Linq.IQueryable{TResult}
  parent: System.Linq
  isExternal: false
  name: IQueryable<TResult>
  nameWithType: IQueryable<TResult>
  fullName: System.Linq.IQueryable<TResult>
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
  - name: <
    nameWithType: <
    fullName: <
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute(System.Linq.Expressions.Expression)
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: IQueryProvider.Execute(Expression)
  nameWithType: Table<TEntity>.IQueryProvider.Execute(Expression)
  fullName: Table<TEntity>.IQueryProvider.Execute(Expression)
- uid: System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute``1(System.Linq.Expressions.Expression)
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: IQueryProvider.Execute<TResult>(Expression)
  nameWithType: Table<TEntity>.IQueryProvider.Execute<TResult>(Expression)
  fullName: Table<TEntity>.IQueryProvider.Execute<TResult>(Expression)
- uid: System.Data.Linq.Table`1.Attach*
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: Attach
  nameWithType: Table<TEntity>.Attach
  fullName: Table<TEntity>.Attach
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
- uid: System.Data.Linq.Table`1.AttachAll``1*
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: AttachAll<TSubEntity>
  nameWithType: Table<TEntity>.AttachAll<TSubEntity>
  fullName: Table<TEntity>.AttachAll<TSubEntity>
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
- uid: System.Data.Linq.Table`1.Context*
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: Context
  nameWithType: Table<TEntity>.Context
  fullName: Table<TEntity>.Context
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
- uid: System.Data.Linq.Table`1.DeleteAllOnSubmit``1*
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: DeleteAllOnSubmit<TSubEntity>
  nameWithType: Table<TEntity>.DeleteAllOnSubmit<TSubEntity>
  fullName: Table<TEntity>.DeleteAllOnSubmit<TSubEntity>
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
- uid: System.Data.Linq.Table`1.DeleteOnSubmit*
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: DeleteOnSubmit
  nameWithType: Table<TEntity>.DeleteOnSubmit
  fullName: Table<TEntity>.DeleteOnSubmit
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
- uid: System.Data.Linq.Table`1.GetEnumerator*
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: GetEnumerator
  nameWithType: Table<TEntity>.GetEnumerator
  fullName: Table<TEntity>.GetEnumerator
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
- uid: System.Data.Linq.Table`1.GetModifiedMembers*
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: GetModifiedMembers
  nameWithType: Table<TEntity>.GetModifiedMembers
  fullName: Table<TEntity>.GetModifiedMembers
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
- uid: System.Data.Linq.Table`1.GetNewBindingList*
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: GetNewBindingList
  nameWithType: Table<TEntity>.GetNewBindingList
  fullName: Table<TEntity>.GetNewBindingList
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
- uid: System.Data.Linq.Table`1.GetOriginalEntityState*
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: GetOriginalEntityState
  nameWithType: Table<TEntity>.GetOriginalEntityState
  fullName: Table<TEntity>.GetOriginalEntityState
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
- uid: System.Data.Linq.Table`1.InsertAllOnSubmit``1*
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: InsertAllOnSubmit<TSubEntity>
  nameWithType: Table<TEntity>.InsertAllOnSubmit<TSubEntity>
  fullName: Table<TEntity>.InsertAllOnSubmit<TSubEntity>
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
- uid: System.Data.Linq.Table`1.InsertOnSubmit*
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: InsertOnSubmit
  nameWithType: Table<TEntity>.InsertOnSubmit
  fullName: Table<TEntity>.InsertOnSubmit
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
- uid: System.Data.Linq.Table`1.IsReadOnly*
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: IsReadOnly
  nameWithType: Table<TEntity>.IsReadOnly
  fullName: Table<TEntity>.IsReadOnly
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
- uid: System.Data.Linq.Table`1.ToString*
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: ToString
  nameWithType: Table<TEntity>.ToString
  fullName: Table<TEntity>.ToString
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
- uid: System.Data.Linq.Table`1.System#Collections#Generic#IEnumerable{TEntity}#GetEnumerator*
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: System.Collections.Generic.IEnumerable<TEntity>.GetEnumerator
  nameWithType: Table<TEntity>.System.Collections.Generic.IEnumerable<TEntity>.GetEnumerator
  fullName: Table<TEntity>.System.Collections.Generic.IEnumerable<TEntity>.GetEnumerator
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
- uid: System.Data.Linq.Table`1.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: Table<TEntity>.System.Collections.IEnumerable.GetEnumerator
  fullName: Table<TEntity>.System.Collections.IEnumerable.GetEnumerator
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
- uid: System.Data.Linq.Table`1.System#ComponentModel#IListSource#ContainsListCollection*
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: System.ComponentModel.IListSource.ContainsListCollection
  nameWithType: Table<TEntity>.System.ComponentModel.IListSource.ContainsListCollection
  fullName: Table<TEntity>.System.ComponentModel.IListSource.ContainsListCollection
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
- uid: System.Data.Linq.Table`1.System#ComponentModel#IListSource#GetList*
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: System.ComponentModel.IListSource.GetList
  nameWithType: Table<TEntity>.System.ComponentModel.IListSource.GetList
  fullName: Table<TEntity>.System.ComponentModel.IListSource.GetList
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach*
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: System.Data.Linq.ITable.Attach
  nameWithType: Table<TEntity>.System.Data.Linq.ITable.Attach
  fullName: Table<TEntity>.System.Data.Linq.ITable.Attach
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#AttachAll*
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: System.Data.Linq.ITable.AttachAll
  nameWithType: Table<TEntity>.System.Data.Linq.ITable.AttachAll
  fullName: Table<TEntity>.System.Data.Linq.ITable.AttachAll
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteAllOnSubmit*
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: System.Data.Linq.ITable.DeleteAllOnSubmit
  nameWithType: Table<TEntity>.System.Data.Linq.ITable.DeleteAllOnSubmit
  fullName: Table<TEntity>.System.Data.Linq.ITable.DeleteAllOnSubmit
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteOnSubmit*
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: System.Data.Linq.ITable.DeleteOnSubmit
  nameWithType: Table<TEntity>.System.Data.Linq.ITable.DeleteOnSubmit
  fullName: Table<TEntity>.System.Data.Linq.ITable.DeleteOnSubmit
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#GetModifiedMembers*
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: System.Data.Linq.ITable.GetModifiedMembers
  nameWithType: Table<TEntity>.System.Data.Linq.ITable.GetModifiedMembers
  fullName: Table<TEntity>.System.Data.Linq.ITable.GetModifiedMembers
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#GetOriginalEntityState*
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: System.Data.Linq.ITable.GetOriginalEntityState
  nameWithType: Table<TEntity>.System.Data.Linq.ITable.GetOriginalEntityState
  fullName: Table<TEntity>.System.Data.Linq.ITable.GetOriginalEntityState
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#InsertAllOnSubmit*
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: System.Data.Linq.ITable.InsertAllOnSubmit
  nameWithType: Table<TEntity>.System.Data.Linq.ITable.InsertAllOnSubmit
  fullName: Table<TEntity>.System.Data.Linq.ITable.InsertAllOnSubmit
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#InsertOnSubmit*
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: System.Data.Linq.ITable.InsertOnSubmit
  nameWithType: Table<TEntity>.System.Data.Linq.ITable.InsertOnSubmit
  fullName: Table<TEntity>.System.Data.Linq.ITable.InsertOnSubmit
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
- uid: System.Data.Linq.Table`1.System#Linq#IQueryable#ElementType*
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: System.Linq.IQueryable.ElementType
  nameWithType: Table<TEntity>.System.Linq.IQueryable.ElementType
  fullName: Table<TEntity>.System.Linq.IQueryable.ElementType
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
- uid: System.Data.Linq.Table`1.System#Linq#IQueryable#Expression*
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: System.Linq.IQueryable.Expression
  nameWithType: Table<TEntity>.System.Linq.IQueryable.Expression
  fullName: Table<TEntity>.System.Linq.IQueryable.Expression
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
- uid: System.Data.Linq.Table`1.System#Linq#IQueryable#Provider*
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: System.Linq.IQueryable.Provider
  nameWithType: Table<TEntity>.System.Linq.IQueryable.Provider
  fullName: Table<TEntity>.System.Linq.IQueryable.Provider
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
- uid: System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery*
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: System.Linq.IQueryProvider.CreateQuery
  nameWithType: Table<TEntity>.System.Linq.IQueryProvider.CreateQuery
  fullName: Table<TEntity>.System.Linq.IQueryProvider.CreateQuery
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
- uid: System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery``1*
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: System.Linq.IQueryProvider.CreateQuery<TResult>
  nameWithType: Table<TEntity>.System.Linq.IQueryProvider.CreateQuery<TResult>
  fullName: Table<TEntity>.System.Linq.IQueryProvider.CreateQuery<TResult>
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
- uid: System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute*
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: System.Linq.IQueryProvider.Execute
  nameWithType: Table<TEntity>.System.Linq.IQueryProvider.Execute
  fullName: Table<TEntity>.System.Linq.IQueryProvider.Execute
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
- uid: System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute``1*
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: System.Linq.IQueryProvider.Execute<TResult>
  nameWithType: Table<TEntity>.System.Linq.IQueryProvider.Execute<TResult>
  fullName: Table<TEntity>.System.Linq.IQueryProvider.Execute<TResult>
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Table`1.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Collections.Immutable.ImmutableArray.ToImmutableArray``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Collections.Immutable.ImmutableArray
  isExternal: false
  name: ToImmutableArray<TSource>(IEnumerable<TSource>)
  nameWithType: ImmutableArray.ToImmutableArray<TSource>(IEnumerable<TSource>)
  fullName: ImmutableArray.ToImmutableArray<TSource>(IEnumerable<TSource>)
- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  parent: System.Collections.Immutable.ImmutableDictionary
  isExternal: false
  name: ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)
  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)
  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)
- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Collections.Immutable.ImmutableDictionary
  isExternal: false
  name: ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)
  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)
  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)
- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  parent: System.Collections.Immutable.ImmutableDictionary
  isExternal: false
  name: ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)
  nameWithType: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)
  fullName: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)
- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Collections.Immutable.ImmutableDictionary
  isExternal: false
  name: ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>)
  nameWithType: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>)
  fullName: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>)
- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Collections.Immutable.ImmutableDictionary
  isExternal: false
  name: ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)
  nameWithType: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)
  fullName: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)
- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  parent: System.Collections.Immutable.ImmutableDictionary
  isExternal: false
  name: ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)
  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)
  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)
- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Collections.Immutable.ImmutableDictionary
  isExternal: false
  name: ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>)
  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>)
  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>)
- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})
  parent: System.Collections.Immutable.ImmutableDictionary
  isExternal: false
  name: ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)
  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)
  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)
- uid: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Collections.Immutable.ImmutableHashSet
  isExternal: false
  name: ToImmutableHashSet<TSource>(IEnumerable<TSource>)
  nameWithType: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>)
  fullName: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>)
- uid: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Collections.Immutable.ImmutableHashSet
  isExternal: false
  name: ToImmutableHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)
  nameWithType: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)
  fullName: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)
- uid: System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Collections.Immutable.ImmutableList
  isExternal: false
  name: ToImmutableList<TSource>(IEnumerable<TSource>)
  nameWithType: ImmutableList.ToImmutableList<TSource>(IEnumerable<TSource>)
  fullName: ImmutableList.ToImmutableList<TSource>(IEnumerable<TSource>)
- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  isExternal: false
  name: ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)
  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)
  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)
- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0})
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  isExternal: false
  name: ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>)
  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>)
  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>)
- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  isExternal: false
  name: ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>, IEqualityComparer<TValue>)
  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>, IEqualityComparer<TValue>)
  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>, IEqualityComparer<TValue>)
- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  isExternal: false
  name: ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)
  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)
  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)
- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1})
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  isExternal: false
  name: ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>)
  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>)
  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>)
- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  isExternal: false
  name: ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>, IEqualityComparer<TValue>)
  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>, IEqualityComparer<TValue>)
  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>, IEqualityComparer<TValue>)
- uid: System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Collections.Immutable.ImmutableSortedSet
  isExternal: false
  name: ToImmutableSortedSet<TSource>(IEnumerable<TSource>)
  nameWithType: ImmutableSortedSet.ToImmutableSortedSet<TSource>(IEnumerable<TSource>)
  fullName: ImmutableSortedSet.ToImmutableSortedSet<TSource>(IEnumerable<TSource>)
- uid: System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})
  parent: System.Collections.Immutable.ImmutableSortedSet
  isExternal: false
  name: ToImmutableSortedSet<TSource>(IEnumerable<TSource>, IComparer<TSource>)
  nameWithType: ImmutableSortedSet.ToImmutableSortedSet<TSource>(IEnumerable<TSource>, IComparer<TSource>)
  fullName: ImmutableSortedSet.ToImmutableSortedSet<TSource>(IEnumerable<TSource>, IComparer<TSource>)
- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Data.DataTableExtensions
  isExternal: false
  name: CopyToDataTable<T>(IEnumerable<T>)
  nameWithType: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>)
  fullName: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>)
- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)
  parent: System.Data.DataTableExtensions
  isExternal: false
  name: CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption)
  nameWithType: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption)
  fullName: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption)
- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)
  parent: System.Data.DataTableExtensions
  isExternal: false
  name: CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption, FillErrorEventHandler)
  nameWithType: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption, FillErrorEventHandler)
  fullName: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption, FillErrorEventHandler)
- uid: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Aggregate<TSource>(IEnumerable<TSource>, Func<TSource,TSource,TSource>)
  nameWithType: Enumerable.Aggregate<TSource>(IEnumerable<TSource>, Func<TSource,TSource,TSource>)
  fullName: Enumerable.Aggregate<TSource>(IEnumerable<TSource>, Func<TSource,TSource,TSource>)
- uid: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Aggregate<TSource,TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>)
  nameWithType: Enumerable.Aggregate<TSource,TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>)
  fullName: Enumerable.Aggregate<TSource,TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>)
- uid: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Aggregate<TSource,TAccumulate,TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>, Func<TAccumulate,TResult>)
  nameWithType: Enumerable.Aggregate<TSource,TAccumulate,TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>, Func<TAccumulate,TResult>)
  fullName: Enumerable.Aggregate<TSource,TAccumulate,TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>, Func<TAccumulate,TResult>)
- uid: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.Enumerable
  isExternal: false
  name: All<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
  nameWithType: Enumerable.All<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
  fullName: Enumerable.All<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
- uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Any<TSource>(IEnumerable<TSource>)
  nameWithType: Enumerable.Any<TSource>(IEnumerable<TSource>)
  fullName: Enumerable.Any<TSource>(IEnumerable<TSource>)
- uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Any<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
  nameWithType: Enumerable.Any<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
  fullName: Enumerable.Any<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
- uid: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Append<TSource>(IEnumerable<TSource>, TSource)
  nameWithType: Enumerable.Append<TSource>(IEnumerable<TSource>, TSource)
  fullName: Enumerable.Append<TSource>(IEnumerable<TSource>, TSource)
- uid: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: AsEnumerable<TSource>(IEnumerable<TSource>)
  nameWithType: Enumerable.AsEnumerable<TSource>(IEnumerable<TSource>)
  fullName: Enumerable.AsEnumerable<TSource>(IEnumerable<TSource>)
- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Decimal})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Average(IEnumerable<Decimal>)
  nameWithType: Enumerable.Average(IEnumerable<Decimal>)
  fullName: Enumerable.Average(IEnumerable<Decimal>)
- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Double})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Average(IEnumerable<Double>)
  nameWithType: Enumerable.Average(IEnumerable<Double>)
  fullName: Enumerable.Average(IEnumerable<Double>)
- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int32})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Average(IEnumerable<Int32>)
  nameWithType: Enumerable.Average(IEnumerable<Int32>)
  fullName: Enumerable.Average(IEnumerable<Int32>)
- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int64})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Average(IEnumerable<Int64>)
  nameWithType: Enumerable.Average(IEnumerable<Int64>)
  fullName: Enumerable.Average(IEnumerable<Int64>)
- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Average(IEnumerable<Nullable<Decimal>>)
  nameWithType: Enumerable.Average(IEnumerable<Nullable<Decimal>>)
  fullName: Enumerable.Average(IEnumerable<Nullable<Decimal>>)
- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Average(IEnumerable<Nullable<Double>>)
  nameWithType: Enumerable.Average(IEnumerable<Nullable<Double>>)
  fullName: Enumerable.Average(IEnumerable<Nullable<Double>>)
- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Average(IEnumerable<Nullable<Int32>>)
  nameWithType: Enumerable.Average(IEnumerable<Nullable<Int32>>)
  fullName: Enumerable.Average(IEnumerable<Nullable<Int32>>)
- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Average(IEnumerable<Nullable<Int64>>)
  nameWithType: Enumerable.Average(IEnumerable<Nullable<Int64>>)
  fullName: Enumerable.Average(IEnumerable<Nullable<Int64>>)
- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Average(IEnumerable<Nullable<Single>>)
  nameWithType: Enumerable.Average(IEnumerable<Nullable<Single>>)
  fullName: Enumerable.Average(IEnumerable<Nullable<Single>>)
- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Single})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Average(IEnumerable<Single>)
  nameWithType: Enumerable.Average(IEnumerable<Single>)
  fullName: Enumerable.Average(IEnumerable<Single>)
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)
  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)
  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Double>)
  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Double>)
  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Double>)
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)
  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)
  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)
  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)
  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)
  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)
  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)
  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)
  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)
  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)
  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)
  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)
  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)
  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)
  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Single>)
  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Single>)
  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Single>)
- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Cast<TResult>(IEnumerable)
  nameWithType: Enumerable.Cast<TResult>(IEnumerable)
  fullName: Enumerable.Cast<TResult>(IEnumerable)
- uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  nameWithType: Enumerable.Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  fullName: Enumerable.Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
- uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Contains<TSource>(IEnumerable<TSource>, TSource)
  nameWithType: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource)
  fullName: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource)
- uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)
  nameWithType: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)
  fullName: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)
- uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Count<TSource>(IEnumerable<TSource>)
  nameWithType: Enumerable.Count<TSource>(IEnumerable<TSource>)
  fullName: Enumerable.Count<TSource>(IEnumerable<TSource>)
- uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Count<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
  nameWithType: Enumerable.Count<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
  fullName: Enumerable.Count<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
- uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: DefaultIfEmpty<TSource>(IEnumerable<TSource>)
  nameWithType: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>)
  fullName: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>)
- uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)
  parent: System.Linq.Enumerable
  isExternal: false
  name: DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)
  nameWithType: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)
  fullName: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)
- uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Distinct<TSource>(IEnumerable<TSource>)
  nameWithType: Enumerable.Distinct<TSource>(IEnumerable<TSource>)
  fullName: Enumerable.Distinct<TSource>(IEnumerable<TSource>)
- uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)
  nameWithType: Enumerable.Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)
  fullName: Enumerable.Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)
- uid: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  parent: System.Linq.Enumerable
  isExternal: false
  name: ElementAt<TSource>(IEnumerable<TSource>, Int32)
  nameWithType: Enumerable.ElementAt<TSource>(IEnumerable<TSource>, Int32)
  fullName: Enumerable.ElementAt<TSource>(IEnumerable<TSource>, Int32)
- uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  parent: System.Linq.Enumerable
  isExternal: false
  name: ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)
  nameWithType: Enumerable.ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)
  fullName: Enumerable.ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)
- uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  nameWithType: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  fullName: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
- uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  nameWithType: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  fullName: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
- uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: First<TSource>(IEnumerable<TSource>)
  nameWithType: Enumerable.First<TSource>(IEnumerable<TSource>)
  fullName: Enumerable.First<TSource>(IEnumerable<TSource>)
- uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.Enumerable
  isExternal: false
  name: First<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
  nameWithType: Enumerable.First<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
  fullName: Enumerable.First<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
- uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: FirstOrDefault<TSource>(IEnumerable<TSource>)
  nameWithType: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>)
  fullName: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>)
- uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.Enumerable
  isExternal: false
  name: FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
  nameWithType: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
  fullName: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
- uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  parent: System.Linq.Enumerable
  isExternal: false
  name: GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)
  nameWithType: Enumerable.GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)
  fullName: Enumerable.GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)
- uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.Enumerable
  isExternal: false
  name: GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)
  nameWithType: Enumerable.GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)
  fullName: Enumerable.GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)
- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  parent: System.Linq.Enumerable
  isExternal: false
  name: GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)
  nameWithType: Enumerable.GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)
  fullName: Enumerable.GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)
- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.Enumerable
  isExternal: false
  name: GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)
  nameWithType: Enumerable.GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)
  fullName: Enumerable.GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)
- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})
  parent: System.Linq.Enumerable
  isExternal: false
  name: GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>)
  nameWithType: Enumerable.GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>)
  fullName: Enumerable.GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>)
- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.Enumerable
  isExternal: false
  name: GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>, IEqualityComparer<TKey>)
  nameWithType: Enumerable.GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>, IEqualityComparer<TKey>)
  fullName: Enumerable.GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>, IEqualityComparer<TKey>)
- uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})
  parent: System.Linq.Enumerable
  isExternal: false
  name: GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>)
  nameWithType: Enumerable.GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>)
  fullName: Enumerable.GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>)
- uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.Enumerable
  isExternal: false
  name: GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>, IEqualityComparer<TKey>)
  nameWithType: Enumerable.GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>, IEqualityComparer<TKey>)
  fullName: Enumerable.GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>, IEqualityComparer<TKey>)
- uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})
  parent: System.Linq.Enumerable
  isExternal: false
  name: GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>)
  nameWithType: Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>)
  fullName: Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>)
- uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})
  parent: System.Linq.Enumerable
  isExternal: false
  name: GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>, IEqualityComparer<TKey>)
  nameWithType: Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>, IEqualityComparer<TKey>)
  fullName: Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>, IEqualityComparer<TKey>)
- uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  nameWithType: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  fullName: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
- uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  nameWithType: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  fullName: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
- uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>)
  nameWithType: Enumerable.Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>)
  fullName: Enumerable.Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>)
- uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>, IEqualityComparer<TKey>)
  nameWithType: Enumerable.Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>, IEqualityComparer<TKey>)
  fullName: Enumerable.Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>, IEqualityComparer<TKey>)
- uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Last<TSource>(IEnumerable<TSource>)
  nameWithType: Enumerable.Last<TSource>(IEnumerable<TSource>)
  fullName: Enumerable.Last<TSource>(IEnumerable<TSource>)
- uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Last<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
  nameWithType: Enumerable.Last<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
  fullName: Enumerable.Last<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
- uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: LastOrDefault<TSource>(IEnumerable<TSource>)
  nameWithType: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>)
  fullName: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>)
- uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.Enumerable
  isExternal: false
  name: LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
  nameWithType: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
  fullName: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
- uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: LongCount<TSource>(IEnumerable<TSource>)
  nameWithType: Enumerable.LongCount<TSource>(IEnumerable<TSource>)
  fullName: Enumerable.LongCount<TSource>(IEnumerable<TSource>)
- uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.Enumerable
  isExternal: false
  name: LongCount<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
  nameWithType: Enumerable.LongCount<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
  fullName: Enumerable.LongCount<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Decimal})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Max(IEnumerable<Decimal>)
  nameWithType: Enumerable.Max(IEnumerable<Decimal>)
  fullName: Enumerable.Max(IEnumerable<Decimal>)
- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Double})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Max(IEnumerable<Double>)
  nameWithType: Enumerable.Max(IEnumerable<Double>)
  fullName: Enumerable.Max(IEnumerable<Double>)
- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int32})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Max(IEnumerable<Int32>)
  nameWithType: Enumerable.Max(IEnumerable<Int32>)
  fullName: Enumerable.Max(IEnumerable<Int32>)
- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int64})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Max(IEnumerable<Int64>)
  nameWithType: Enumerable.Max(IEnumerable<Int64>)
  fullName: Enumerable.Max(IEnumerable<Int64>)
- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Max(IEnumerable<Nullable<Decimal>>)
  nameWithType: Enumerable.Max(IEnumerable<Nullable<Decimal>>)
  fullName: Enumerable.Max(IEnumerable<Nullable<Decimal>>)
- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Max(IEnumerable<Nullable<Double>>)
  nameWithType: Enumerable.Max(IEnumerable<Nullable<Double>>)
  fullName: Enumerable.Max(IEnumerable<Nullable<Double>>)
- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Max(IEnumerable<Nullable<Int32>>)
  nameWithType: Enumerable.Max(IEnumerable<Nullable<Int32>>)
  fullName: Enumerable.Max(IEnumerable<Nullable<Int32>>)
- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Max(IEnumerable<Nullable<Int64>>)
  nameWithType: Enumerable.Max(IEnumerable<Nullable<Int64>>)
  fullName: Enumerable.Max(IEnumerable<Nullable<Int64>>)
- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Max(IEnumerable<Nullable<Single>>)
  nameWithType: Enumerable.Max(IEnumerable<Nullable<Single>>)
  fullName: Enumerable.Max(IEnumerable<Nullable<Single>>)
- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Single})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Max(IEnumerable<Single>)
  nameWithType: Enumerable.Max(IEnumerable<Single>)
  fullName: Enumerable.Max(IEnumerable<Single>)
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Max<TSource>(IEnumerable<TSource>)
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>)
  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>)
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)
  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Double>)
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Double>)
  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Double>)
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)
  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)
  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)
  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)
  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)
  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)
  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)
  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Single>)
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Single>)
  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Single>)
- uid: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Max<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)
  nameWithType: Enumerable.Max<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)
  fullName: Enumerable.Max<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)
- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Decimal})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Min(IEnumerable<Decimal>)
  nameWithType: Enumerable.Min(IEnumerable<Decimal>)
  fullName: Enumerable.Min(IEnumerable<Decimal>)
- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Double})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Min(IEnumerable<Double>)
  nameWithType: Enumerable.Min(IEnumerable<Double>)
  fullName: Enumerable.Min(IEnumerable<Double>)
- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int32})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Min(IEnumerable<Int32>)
  nameWithType: Enumerable.Min(IEnumerable<Int32>)
  fullName: Enumerable.Min(IEnumerable<Int32>)
- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int64})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Min(IEnumerable<Int64>)
  nameWithType: Enumerable.Min(IEnumerable<Int64>)
  fullName: Enumerable.Min(IEnumerable<Int64>)
- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Min(IEnumerable<Nullable<Decimal>>)
  nameWithType: Enumerable.Min(IEnumerable<Nullable<Decimal>>)
  fullName: Enumerable.Min(IEnumerable<Nullable<Decimal>>)
- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Min(IEnumerable<Nullable<Double>>)
  nameWithType: Enumerable.Min(IEnumerable<Nullable<Double>>)
  fullName: Enumerable.Min(IEnumerable<Nullable<Double>>)
- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Min(IEnumerable<Nullable<Int32>>)
  nameWithType: Enumerable.Min(IEnumerable<Nullable<Int32>>)
  fullName: Enumerable.Min(IEnumerable<Nullable<Int32>>)
- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Min(IEnumerable<Nullable<Int64>>)
  nameWithType: Enumerable.Min(IEnumerable<Nullable<Int64>>)
  fullName: Enumerable.Min(IEnumerable<Nullable<Int64>>)
- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Min(IEnumerable<Nullable<Single>>)
  nameWithType: Enumerable.Min(IEnumerable<Nullable<Single>>)
  fullName: Enumerable.Min(IEnumerable<Nullable<Single>>)
- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Single})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Min(IEnumerable<Single>)
  nameWithType: Enumerable.Min(IEnumerable<Single>)
  fullName: Enumerable.Min(IEnumerable<Single>)
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Min<TSource>(IEnumerable<TSource>)
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>)
  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>)
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)
  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Double>)
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Double>)
  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Double>)
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)
  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)
  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)
  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)
  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)
  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)
  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)
  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Single>)
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Single>)
  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Single>)
- uid: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Min<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)
  nameWithType: Enumerable.Min<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)
  fullName: Enumerable.Min<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)
- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
  parent: System.Linq.Enumerable
  isExternal: false
  name: OfType<TResult>(IEnumerable)
  nameWithType: Enumerable.OfType<TResult>(IEnumerable)
  fullName: Enumerable.OfType<TResult>(IEnumerable)
- uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  parent: System.Linq.Enumerable
  isExternal: false
  name: OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)
  nameWithType: Enumerable.OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)
  fullName: Enumerable.OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)
- uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  parent: System.Linq.Enumerable
  isExternal: false
  name: OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)
  nameWithType: Enumerable.OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)
  fullName: Enumerable.OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)
- uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  parent: System.Linq.Enumerable
  isExternal: false
  name: OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)
  nameWithType: Enumerable.OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)
  fullName: Enumerable.OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)
- uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  parent: System.Linq.Enumerable
  isExternal: false
  name: OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)
  nameWithType: Enumerable.OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)
  fullName: Enumerable.OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)
- uid: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Prepend<TSource>(IEnumerable<TSource>, TSource)
  nameWithType: Enumerable.Prepend<TSource>(IEnumerable<TSource>, TSource)
  fullName: Enumerable.Prepend<TSource>(IEnumerable<TSource>, TSource)
- uid: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Reverse<TSource>(IEnumerable<TSource>)
  nameWithType: Enumerable.Reverse<TSource>(IEnumerable<TSource>)
  fullName: Enumerable.Reverse<TSource>(IEnumerable<TSource>)
- uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)
  nameWithType: Enumerable.Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)
  fullName: Enumerable.Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)
- uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,TResult>)
  nameWithType: Enumerable.Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,TResult>)
  fullName: Enumerable.Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,TResult>)
- uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TResult>>)
  nameWithType: Enumerable.SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TResult>>)
  fullName: Enumerable.SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TResult>>)
- uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TResult>>)
  nameWithType: Enumerable.SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TResult>>)
  fullName: Enumerable.SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TResult>>)
- uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
  parent: System.Linq.Enumerable
  isExternal: false
  name: SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)
  nameWithType: Enumerable.SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)
  fullName: Enumerable.SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)
- uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
  parent: System.Linq.Enumerable
  isExternal: false
  name: SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)
  nameWithType: Enumerable.SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)
  fullName: Enumerable.SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)
- uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  nameWithType: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  fullName: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
- uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  nameWithType: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  fullName: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
- uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Single<TSource>(IEnumerable<TSource>)
  nameWithType: Enumerable.Single<TSource>(IEnumerable<TSource>)
  fullName: Enumerable.Single<TSource>(IEnumerable<TSource>)
- uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Single<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
  nameWithType: Enumerable.Single<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
  fullName: Enumerable.Single<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
- uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: SingleOrDefault<TSource>(IEnumerable<TSource>)
  nameWithType: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>)
  fullName: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>)
- uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.Enumerable
  isExternal: false
  name: SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
  nameWithType: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
  fullName: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
- uid: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Skip<TSource>(IEnumerable<TSource>, Int32)
  nameWithType: Enumerable.Skip<TSource>(IEnumerable<TSource>, Int32)
  fullName: Enumerable.Skip<TSource>(IEnumerable<TSource>, Int32)
- uid: System.Linq.Enumerable.SkipLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  parent: System.Linq.Enumerable
  isExternal: false
  name: SkipLast<TSource>(IEnumerable<TSource>, Int32)
  nameWithType: Enumerable.SkipLast<TSource>(IEnumerable<TSource>, Int32)
  fullName: Enumerable.SkipLast<TSource>(IEnumerable<TSource>, Int32)
- uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.Enumerable
  isExternal: false
  name: SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
  nameWithType: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
  fullName: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
- uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
  parent: System.Linq.Enumerable
  isExternal: false
  name: SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)
  nameWithType: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)
  fullName: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)
- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Decimal})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Sum(IEnumerable<Decimal>)
  nameWithType: Enumerable.Sum(IEnumerable<Decimal>)
  fullName: Enumerable.Sum(IEnumerable<Decimal>)
- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Double})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Sum(IEnumerable<Double>)
  nameWithType: Enumerable.Sum(IEnumerable<Double>)
  fullName: Enumerable.Sum(IEnumerable<Double>)
- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int32})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Sum(IEnumerable<Int32>)
  nameWithType: Enumerable.Sum(IEnumerable<Int32>)
  fullName: Enumerable.Sum(IEnumerable<Int32>)
- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int64})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Sum(IEnumerable<Int64>)
  nameWithType: Enumerable.Sum(IEnumerable<Int64>)
  fullName: Enumerable.Sum(IEnumerable<Int64>)
- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Sum(IEnumerable<Nullable<Decimal>>)
  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Decimal>>)
  fullName: Enumerable.Sum(IEnumerable<Nullable<Decimal>>)
- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Sum(IEnumerable<Nullable<Double>>)
  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Double>>)
  fullName: Enumerable.Sum(IEnumerable<Nullable<Double>>)
- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Sum(IEnumerable<Nullable<Int32>>)
  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Int32>>)
  fullName: Enumerable.Sum(IEnumerable<Nullable<Int32>>)
- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Sum(IEnumerable<Nullable<Int64>>)
  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Int64>>)
  fullName: Enumerable.Sum(IEnumerable<Nullable<Int64>>)
- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Sum(IEnumerable<Nullable<Single>>)
  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Single>>)
  fullName: Enumerable.Sum(IEnumerable<Nullable<Single>>)
- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Single})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Sum(IEnumerable<Single>)
  nameWithType: Enumerable.Sum(IEnumerable<Single>)
  fullName: Enumerable.Sum(IEnumerable<Single>)
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)
  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)
  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Double>)
  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Double>)
  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Double>)
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)
  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)
  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)
  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)
  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)
  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)
  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)
  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)
  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)
  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)
  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)
  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)
  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)
  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)
  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Single>)
  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Single>)
  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Single>)
- uid: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Take<TSource>(IEnumerable<TSource>, Int32)
  nameWithType: Enumerable.Take<TSource>(IEnumerable<TSource>, Int32)
  fullName: Enumerable.Take<TSource>(IEnumerable<TSource>, Int32)
- uid: System.Linq.Enumerable.TakeLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  parent: System.Linq.Enumerable
  isExternal: false
  name: TakeLast<TSource>(IEnumerable<TSource>, Int32)
  nameWithType: Enumerable.TakeLast<TSource>(IEnumerable<TSource>, Int32)
  fullName: Enumerable.TakeLast<TSource>(IEnumerable<TSource>, Int32)
- uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.Enumerable
  isExternal: false
  name: TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
  nameWithType: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
  fullName: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
- uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
  parent: System.Linq.Enumerable
  isExternal: false
  name: TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)
  nameWithType: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)
  fullName: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)
- uid: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: ToArray<TSource>(IEnumerable<TSource>)
  nameWithType: Enumerable.ToArray<TSource>(IEnumerable<TSource>)
  fullName: Enumerable.ToArray<TSource>(IEnumerable<TSource>)
- uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  parent: System.Linq.Enumerable
  isExternal: false
  name: ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)
  nameWithType: Enumerable.ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)
  fullName: Enumerable.ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)
- uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.Enumerable
  isExternal: false
  name: ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)
  nameWithType: Enumerable.ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)
  fullName: Enumerable.ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)
- uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  parent: System.Linq.Enumerable
  isExternal: false
  name: ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)
  nameWithType: Enumerable.ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)
  fullName: Enumerable.ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)
- uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.Enumerable
  isExternal: false
  name: ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)
  nameWithType: Enumerable.ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)
  fullName: Enumerable.ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)
- uid: System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: ToHashSet<TSource>(IEnumerable<TSource>)
  nameWithType: Enumerable.ToHashSet<TSource>(IEnumerable<TSource>)
  fullName: Enumerable.ToHashSet<TSource>(IEnumerable<TSource>)
- uid: System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: ToHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)
  nameWithType: Enumerable.ToHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)
  fullName: Enumerable.ToHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)
- uid: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: ToList<TSource>(IEnumerable<TSource>)
  nameWithType: Enumerable.ToList<TSource>(IEnumerable<TSource>)
  fullName: Enumerable.ToList<TSource>(IEnumerable<TSource>)
- uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  parent: System.Linq.Enumerable
  isExternal: false
  name: ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)
  nameWithType: Enumerable.ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)
  fullName: Enumerable.ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)
- uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.Enumerable
  isExternal: false
  name: ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)
  nameWithType: Enumerable.ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)
  fullName: Enumerable.ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)
- uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  parent: System.Linq.Enumerable
  isExternal: false
  name: ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)
  nameWithType: Enumerable.ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)
  fullName: Enumerable.ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)
- uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.Enumerable
  isExternal: false
  name: ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)
  nameWithType: Enumerable.ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)
  fullName: Enumerable.ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)
- uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  nameWithType: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  fullName: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
- uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  nameWithType: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  fullName: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
- uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Where<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
  nameWithType: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
  fullName: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
- uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Where<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)
  nameWithType: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)
  fullName: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)
- uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Zip<TFirst,TSecond,TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst,TSecond,TResult>)
  nameWithType: Enumerable.Zip<TFirst,TSecond,TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst,TSecond,TResult>)
  fullName: Enumerable.Zip<TFirst,TSecond,TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst,TSecond,TResult>)
- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: AsParallel(IEnumerable)
  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)
  fullName: ParallelEnumerable.AsParallel(IEnumerable)
- uid: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: AsParallel<TSource>(IEnumerable<TSource>)
  nameWithType: ParallelEnumerable.AsParallel<TSource>(IEnumerable<TSource>)
  fullName: ParallelEnumerable.AsParallel<TSource>(IEnumerable<TSource>)
- uid: System.Linq.Queryable.Aggregate``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``0,``0}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Aggregate<TSource>(IQueryable<TSource>, Expression<Func<TSource,TSource,TSource>>)
  nameWithType: Queryable.Aggregate<TSource>(IQueryable<TSource>, Expression<Func<TSource,TSource,TSource>>)
  fullName: Queryable.Aggregate<TSource>(IQueryable<TSource>, Expression<Func<TSource,TSource,TSource>>)
- uid: System.Linq.Queryable.Aggregate``2(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Aggregate<TSource,TAccumulate>(IQueryable<TSource>, TAccumulate, Expression<Func<TAccumulate,TSource,TAccumulate>>)
  nameWithType: Queryable.Aggregate<TSource,TAccumulate>(IQueryable<TSource>, TAccumulate, Expression<Func<TAccumulate,TSource,TAccumulate>>)
  fullName: Queryable.Aggregate<TSource,TAccumulate>(IQueryable<TSource>, TAccumulate, Expression<Func<TAccumulate,TSource,TAccumulate>>)
- uid: System.Linq.Queryable.Aggregate``3(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,``2}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Aggregate<TSource,TAccumulate,TResult>(IQueryable<TSource>, TAccumulate, Expression<Func<TAccumulate,TSource,TAccumulate>>, Expression<Func<TAccumulate,TResult>>)
  nameWithType: Queryable.Aggregate<TSource,TAccumulate,TResult>(IQueryable<TSource>, TAccumulate, Expression<Func<TAccumulate,TSource,TAccumulate>>, Expression<Func<TAccumulate,TResult>>)
  fullName: Queryable.Aggregate<TSource,TAccumulate,TResult>(IQueryable<TSource>, TAccumulate, Expression<Func<TAccumulate,TSource,TAccumulate>>, Expression<Func<TAccumulate,TResult>>)
- uid: System.Linq.Queryable.All``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  parent: System.Linq.Queryable
  isExternal: false
  name: All<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)
  nameWithType: Queryable.All<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)
  fullName: Queryable.All<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)
- uid: System.Linq.Queryable.Any``1(System.Linq.IQueryable{``0})
  parent: System.Linq.Queryable
  isExternal: false
  name: Any<TSource>(IQueryable<TSource>)
  nameWithType: Queryable.Any<TSource>(IQueryable<TSource>)
  fullName: Queryable.Any<TSource>(IQueryable<TSource>)
- uid: System.Linq.Queryable.Any``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Any<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)
  nameWithType: Queryable.Any<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)
  fullName: Queryable.Any<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)
- uid: System.Linq.Queryable.Append``1(System.Linq.IQueryable{``0},``0)
  parent: System.Linq.Queryable
  isExternal: false
  name: Append<TSource>(IQueryable<TSource>, TSource)
  nameWithType: Queryable.Append<TSource>(IQueryable<TSource>, TSource)
  fullName: Queryable.Append<TSource>(IQueryable<TSource>, TSource)
- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  parent: System.Linq.Queryable
  isExternal: false
  name: AsQueryable(IEnumerable)
  nameWithType: Queryable.AsQueryable(IEnumerable)
  fullName: Queryable.AsQueryable(IEnumerable)
- uid: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Queryable
  isExternal: false
  name: AsQueryable<TElement>(IEnumerable<TElement>)
  nameWithType: Queryable.AsQueryable<TElement>(IEnumerable<TElement>)
  fullName: Queryable.AsQueryable<TElement>(IEnumerable<TElement>)
- uid: System.Linq.Queryable.Average(System.Linq.IQueryable{System.Decimal})
  parent: System.Linq.Queryable
  isExternal: false
  name: Average(IQueryable<Decimal>)
  nameWithType: Queryable.Average(IQueryable<Decimal>)
  fullName: Queryable.Average(IQueryable<Decimal>)
- uid: System.Linq.Queryable.Average(System.Linq.IQueryable{System.Double})
  parent: System.Linq.Queryable
  isExternal: false
  name: Average(IQueryable<Double>)
  nameWithType: Queryable.Average(IQueryable<Double>)
  fullName: Queryable.Average(IQueryable<Double>)
- uid: System.Linq.Queryable.Average(System.Linq.IQueryable{System.Int32})
  parent: System.Linq.Queryable
  isExternal: false
  name: Average(IQueryable<Int32>)
  nameWithType: Queryable.Average(IQueryable<Int32>)
  fullName: Queryable.Average(IQueryable<Int32>)
- uid: System.Linq.Queryable.Average(System.Linq.IQueryable{System.Int64})
  parent: System.Linq.Queryable
  isExternal: false
  name: Average(IQueryable<Int64>)
  nameWithType: Queryable.Average(IQueryable<Int64>)
  fullName: Queryable.Average(IQueryable<Int64>)
- uid: System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Decimal}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Average(IQueryable<Nullable<Decimal>>)
  nameWithType: Queryable.Average(IQueryable<Nullable<Decimal>>)
  fullName: Queryable.Average(IQueryable<Nullable<Decimal>>)
- uid: System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Double}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Average(IQueryable<Nullable<Double>>)
  nameWithType: Queryable.Average(IQueryable<Nullable<Double>>)
  fullName: Queryable.Average(IQueryable<Nullable<Double>>)
- uid: System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Int32}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Average(IQueryable<Nullable<Int32>>)
  nameWithType: Queryable.Average(IQueryable<Nullable<Int32>>)
  fullName: Queryable.Average(IQueryable<Nullable<Int32>>)
- uid: System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Int64}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Average(IQueryable<Nullable<Int64>>)
  nameWithType: Queryable.Average(IQueryable<Nullable<Int64>>)
  fullName: Queryable.Average(IQueryable<Nullable<Int64>>)
- uid: System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Single}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Average(IQueryable<Nullable<Single>>)
  nameWithType: Queryable.Average(IQueryable<Nullable<Single>>)
  fullName: Queryable.Average(IQueryable<Nullable<Single>>)
- uid: System.Linq.Queryable.Average(System.Linq.IQueryable{System.Single})
  parent: System.Linq.Queryable
  isExternal: false
  name: Average(IQueryable<Single>)
  nameWithType: Queryable.Average(IQueryable<Single>)
  fullName: Queryable.Average(IQueryable<Single>)
- uid: System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Decimal>>)
  nameWithType: Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Decimal>>)
  fullName: Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Decimal>>)
- uid: System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Double>>)
  nameWithType: Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Double>>)
  fullName: Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Double>>)
- uid: System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int32>>)
  nameWithType: Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int32>>)
  fullName: Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int32>>)
- uid: System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int64>>)
  nameWithType: Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int64>>)
  fullName: Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int64>>)
- uid: System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Decimal>>>)
  nameWithType: Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Decimal>>>)
  fullName: Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Decimal>>>)
- uid: System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Double>>>)
  nameWithType: Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Double>>>)
  fullName: Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Double>>>)
- uid: System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Int32>>>)
  nameWithType: Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Int32>>>)
  fullName: Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Int32>>>)
- uid: System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Int64>>>)
  nameWithType: Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Int64>>>)
  fullName: Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Int64>>>)
- uid: System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Single>>>)
  nameWithType: Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Single>>>)
  fullName: Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Single>>>)
- uid: System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Single>>)
  nameWithType: Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Single>>)
  fullName: Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Single>>)
- uid: System.Linq.Queryable.Cast``1(System.Linq.IQueryable)
  parent: System.Linq.Queryable
  isExternal: false
  name: Cast<TResult>(IQueryable)
  nameWithType: Queryable.Cast<TResult>(IQueryable)
  fullName: Queryable.Cast<TResult>(IQueryable)
- uid: System.Linq.Queryable.Concat``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Queryable
  isExternal: false
  name: Concat<TSource>(IQueryable<TSource>, IEnumerable<TSource>)
  nameWithType: Queryable.Concat<TSource>(IQueryable<TSource>, IEnumerable<TSource>)
  fullName: Queryable.Concat<TSource>(IQueryable<TSource>, IEnumerable<TSource>)
- uid: System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0},``0)
  parent: System.Linq.Queryable
  isExternal: false
  name: Contains<TSource>(IQueryable<TSource>, TSource)
  nameWithType: Queryable.Contains<TSource>(IQueryable<TSource>, TSource)
  fullName: Queryable.Contains<TSource>(IQueryable<TSource>, TSource)
- uid: System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.Queryable
  isExternal: false
  name: Contains<TSource>(IQueryable<TSource>, TSource, IEqualityComparer<TSource>)
  nameWithType: Queryable.Contains<TSource>(IQueryable<TSource>, TSource, IEqualityComparer<TSource>)
  fullName: Queryable.Contains<TSource>(IQueryable<TSource>, TSource, IEqualityComparer<TSource>)
- uid: System.Linq.Queryable.Count``1(System.Linq.IQueryable{``0})
  parent: System.Linq.Queryable
  isExternal: false
  name: Count<TSource>(IQueryable<TSource>)
  nameWithType: Queryable.Count<TSource>(IQueryable<TSource>)
  fullName: Queryable.Count<TSource>(IQueryable<TSource>)
- uid: System.Linq.Queryable.Count``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Count<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)
  nameWithType: Queryable.Count<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)
  fullName: Queryable.Count<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)
- uid: System.Linq.Queryable.DefaultIfEmpty``1(System.Linq.IQueryable{``0})
  parent: System.Linq.Queryable
  isExternal: false
  name: DefaultIfEmpty<TSource>(IQueryable<TSource>)
  nameWithType: Queryable.DefaultIfEmpty<TSource>(IQueryable<TSource>)
  fullName: Queryable.DefaultIfEmpty<TSource>(IQueryable<TSource>)
- uid: System.Linq.Queryable.DefaultIfEmpty``1(System.Linq.IQueryable{``0},``0)
  parent: System.Linq.Queryable
  isExternal: false
  name: DefaultIfEmpty<TSource>(IQueryable<TSource>, TSource)
  nameWithType: Queryable.DefaultIfEmpty<TSource>(IQueryable<TSource>, TSource)
  fullName: Queryable.DefaultIfEmpty<TSource>(IQueryable<TSource>, TSource)
- uid: System.Linq.Queryable.Distinct``1(System.Linq.IQueryable{``0})
  parent: System.Linq.Queryable
  isExternal: false
  name: Distinct<TSource>(IQueryable<TSource>)
  nameWithType: Queryable.Distinct<TSource>(IQueryable<TSource>)
  fullName: Queryable.Distinct<TSource>(IQueryable<TSource>)
- uid: System.Linq.Queryable.Distinct``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.Queryable
  isExternal: false
  name: Distinct<TSource>(IQueryable<TSource>, IEqualityComparer<TSource>)
  nameWithType: Queryable.Distinct<TSource>(IQueryable<TSource>, IEqualityComparer<TSource>)
  fullName: Queryable.Distinct<TSource>(IQueryable<TSource>, IEqualityComparer<TSource>)
- uid: System.Linq.Queryable.ElementAt``1(System.Linq.IQueryable{``0},System.Int32)
  parent: System.Linq.Queryable
  isExternal: false
  name: ElementAt<TSource>(IQueryable<TSource>, Int32)
  nameWithType: Queryable.ElementAt<TSource>(IQueryable<TSource>, Int32)
  fullName: Queryable.ElementAt<TSource>(IQueryable<TSource>, Int32)
- uid: System.Linq.Queryable.ElementAtOrDefault``1(System.Linq.IQueryable{``0},System.Int32)
  parent: System.Linq.Queryable
  isExternal: false
  name: ElementAtOrDefault<TSource>(IQueryable<TSource>, Int32)
  nameWithType: Queryable.ElementAtOrDefault<TSource>(IQueryable<TSource>, Int32)
  fullName: Queryable.ElementAtOrDefault<TSource>(IQueryable<TSource>, Int32)
- uid: System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Queryable
  isExternal: false
  name: Except<TSource>(IQueryable<TSource>, IEnumerable<TSource>)
  nameWithType: Queryable.Except<TSource>(IQueryable<TSource>, IEnumerable<TSource>)
  fullName: Queryable.Except<TSource>(IQueryable<TSource>, IEnumerable<TSource>)
- uid: System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.Queryable
  isExternal: false
  name: Except<TSource>(IQueryable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  nameWithType: Queryable.Except<TSource>(IQueryable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  fullName: Queryable.Except<TSource>(IQueryable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
- uid: System.Linq.Queryable.First``1(System.Linq.IQueryable{``0})
  parent: System.Linq.Queryable
  isExternal: false
  name: First<TSource>(IQueryable<TSource>)
  nameWithType: Queryable.First<TSource>(IQueryable<TSource>)
  fullName: Queryable.First<TSource>(IQueryable<TSource>)
- uid: System.Linq.Queryable.First``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  parent: System.Linq.Queryable
  isExternal: false
  name: First<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)
  nameWithType: Queryable.First<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)
  fullName: Queryable.First<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)
- uid: System.Linq.Queryable.FirstOrDefault``1(System.Linq.IQueryable{``0})
  parent: System.Linq.Queryable
  isExternal: false
  name: FirstOrDefault<TSource>(IQueryable<TSource>)
  nameWithType: Queryable.FirstOrDefault<TSource>(IQueryable<TSource>)
  fullName: Queryable.FirstOrDefault<TSource>(IQueryable<TSource>)
- uid: System.Linq.Queryable.FirstOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  parent: System.Linq.Queryable
  isExternal: false
  name: FirstOrDefault<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)
  nameWithType: Queryable.FirstOrDefault<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)
  fullName: Queryable.FirstOrDefault<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)
- uid: System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  parent: System.Linq.Queryable
  isExternal: false
  name: GroupBy<TSource,TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>)
  nameWithType: Queryable.GroupBy<TSource,TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>)
  fullName: Queryable.GroupBy<TSource,TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>)
- uid: System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.Queryable
  isExternal: false
  name: GroupBy<TSource,TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, IEqualityComparer<TKey>)
  nameWithType: Queryable.GroupBy<TSource,TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, IEqualityComparer<TKey>)
  fullName: Queryable.GroupBy<TSource,TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, IEqualityComparer<TKey>)
- uid: System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}})
  parent: System.Linq.Queryable
  isExternal: false
  name: GroupBy<TSource,TKey,TElement>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TSource,TElement>>)
  nameWithType: Queryable.GroupBy<TSource,TKey,TElement>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TSource,TElement>>)
  fullName: Queryable.GroupBy<TSource,TKey,TElement>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TSource,TElement>>)
- uid: System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.Queryable
  isExternal: false
  name: GroupBy<TSource,TKey,TElement>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TSource,TElement>>, IEqualityComparer<TKey>)
  nameWithType: Queryable.GroupBy<TSource,TKey,TElement>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TSource,TElement>>, IEqualityComparer<TKey>)
  fullName: Queryable.GroupBy<TSource,TKey,TElement>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TSource,TElement>>, IEqualityComparer<TKey>)
- uid: System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}})
  parent: System.Linq.Queryable
  isExternal: false
  name: GroupBy<TSource,TKey,TResult>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TKey,IEnumerable<TSource>,TResult>>)
  nameWithType: Queryable.GroupBy<TSource,TKey,TResult>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TKey,IEnumerable<TSource>,TResult>>)
  fullName: Queryable.GroupBy<TSource,TKey,TResult>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TKey,IEnumerable<TSource>,TResult>>)
- uid: System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.Queryable
  isExternal: false
  name: GroupBy<TSource,TKey,TResult>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TKey,IEnumerable<TSource>,TResult>>, IEqualityComparer<TKey>)
  nameWithType: Queryable.GroupBy<TSource,TKey,TResult>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TKey,IEnumerable<TSource>,TResult>>, IEqualityComparer<TKey>)
  fullName: Queryable.GroupBy<TSource,TKey,TResult>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TKey,IEnumerable<TSource>,TResult>>, IEqualityComparer<TKey>)
- uid: System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}})
  parent: System.Linq.Queryable
  isExternal: false
  name: GroupBy<TSource,TKey,TElement,TResult>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TSource,TElement>>, Expression<Func<TKey,IEnumerable<TElement>,TResult>>)
  nameWithType: Queryable.GroupBy<TSource,TKey,TElement,TResult>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TSource,TElement>>, Expression<Func<TKey,IEnumerable<TElement>,TResult>>)
  fullName: Queryable.GroupBy<TSource,TKey,TElement,TResult>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TSource,TElement>>, Expression<Func<TKey,IEnumerable<TElement>,TResult>>)
- uid: System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.Queryable
  isExternal: false
  name: GroupBy<TSource,TKey,TElement,TResult>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TSource,TElement>>, Expression<Func<TKey,IEnumerable<TElement>,TResult>>, IEqualityComparer<TKey>)
  nameWithType: Queryable.GroupBy<TSource,TKey,TElement,TResult>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TSource,TElement>>, Expression<Func<TKey,IEnumerable<TElement>,TResult>>, IEqualityComparer<TKey>)
  fullName: Queryable.GroupBy<TSource,TKey,TElement,TResult>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TSource,TElement>>, Expression<Func<TKey,IEnumerable<TElement>,TResult>>, IEqualityComparer<TKey>)
- uid: System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}})
  parent: System.Linq.Queryable
  isExternal: false
  name: GroupJoin<TOuter,TInner,TKey,TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,IEnumerable<TInner>,TResult>>)
  nameWithType: Queryable.GroupJoin<TOuter,TInner,TKey,TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,IEnumerable<TInner>,TResult>>)
  fullName: Queryable.GroupJoin<TOuter,TInner,TKey,TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,IEnumerable<TInner>,TResult>>)
- uid: System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}},System.Collections.Generic.IEqualityComparer{``2})
  parent: System.Linq.Queryable
  isExternal: false
  name: GroupJoin<TOuter,TInner,TKey,TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,IEnumerable<TInner>,TResult>>, IEqualityComparer<TKey>)
  nameWithType: Queryable.GroupJoin<TOuter,TInner,TKey,TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,IEnumerable<TInner>,TResult>>, IEqualityComparer<TKey>)
  fullName: Queryable.GroupJoin<TOuter,TInner,TKey,TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,IEnumerable<TInner>,TResult>>, IEqualityComparer<TKey>)
- uid: System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Queryable
  isExternal: false
  name: Intersect<TSource>(IQueryable<TSource>, IEnumerable<TSource>)
  nameWithType: Queryable.Intersect<TSource>(IQueryable<TSource>, IEnumerable<TSource>)
  fullName: Queryable.Intersect<TSource>(IQueryable<TSource>, IEnumerable<TSource>)
- uid: System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.Queryable
  isExternal: false
  name: Intersect<TSource>(IQueryable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  nameWithType: Queryable.Intersect<TSource>(IQueryable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  fullName: Queryable.Intersect<TSource>(IQueryable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
- uid: System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Join<TOuter,TInner,TKey,TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,TInner,TResult>>)
  nameWithType: Queryable.Join<TOuter,TInner,TKey,TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,TInner,TResult>>)
  fullName: Queryable.Join<TOuter,TInner,TKey,TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,TInner,TResult>>)
- uid: System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}},System.Collections.Generic.IEqualityComparer{``2})
  parent: System.Linq.Queryable
  isExternal: false
  name: Join<TOuter,TInner,TKey,TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,TInner,TResult>>, IEqualityComparer<TKey>)
  nameWithType: Queryable.Join<TOuter,TInner,TKey,TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,TInner,TResult>>, IEqualityComparer<TKey>)
  fullName: Queryable.Join<TOuter,TInner,TKey,TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,TInner,TResult>>, IEqualityComparer<TKey>)
- uid: System.Linq.Queryable.Last``1(System.Linq.IQueryable{``0})
  parent: System.Linq.Queryable
  isExternal: false
  name: Last<TSource>(IQueryable<TSource>)
  nameWithType: Queryable.Last<TSource>(IQueryable<TSource>)
  fullName: Queryable.Last<TSource>(IQueryable<TSource>)
- uid: System.Linq.Queryable.Last``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Last<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)
  nameWithType: Queryable.Last<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)
  fullName: Queryable.Last<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)
- uid: System.Linq.Queryable.LastOrDefault``1(System.Linq.IQueryable{``0})
  parent: System.Linq.Queryable
  isExternal: false
  name: LastOrDefault<TSource>(IQueryable<TSource>)
  nameWithType: Queryable.LastOrDefault<TSource>(IQueryable<TSource>)
  fullName: Queryable.LastOrDefault<TSource>(IQueryable<TSource>)
- uid: System.Linq.Queryable.LastOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  parent: System.Linq.Queryable
  isExternal: false
  name: LastOrDefault<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)
  nameWithType: Queryable.LastOrDefault<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)
  fullName: Queryable.LastOrDefault<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)
- uid: System.Linq.Queryable.LongCount``1(System.Linq.IQueryable{``0})
  parent: System.Linq.Queryable
  isExternal: false
  name: LongCount<TSource>(IQueryable<TSource>)
  nameWithType: Queryable.LongCount<TSource>(IQueryable<TSource>)
  fullName: Queryable.LongCount<TSource>(IQueryable<TSource>)
- uid: System.Linq.Queryable.LongCount``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  parent: System.Linq.Queryable
  isExternal: false
  name: LongCount<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)
  nameWithType: Queryable.LongCount<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)
  fullName: Queryable.LongCount<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)
- uid: System.Linq.Queryable.Max``1(System.Linq.IQueryable{``0})
  parent: System.Linq.Queryable
  isExternal: false
  name: Max<TSource>(IQueryable<TSource>)
  nameWithType: Queryable.Max<TSource>(IQueryable<TSource>)
  fullName: Queryable.Max<TSource>(IQueryable<TSource>)
- uid: System.Linq.Queryable.Max``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Max<TSource,TResult>(IQueryable<TSource>, Expression<Func<TSource,TResult>>)
  nameWithType: Queryable.Max<TSource,TResult>(IQueryable<TSource>, Expression<Func<TSource,TResult>>)
  fullName: Queryable.Max<TSource,TResult>(IQueryable<TSource>, Expression<Func<TSource,TResult>>)
- uid: System.Linq.Queryable.Min``1(System.Linq.IQueryable{``0})
  parent: System.Linq.Queryable
  isExternal: false
  name: Min<TSource>(IQueryable<TSource>)
  nameWithType: Queryable.Min<TSource>(IQueryable<TSource>)
  fullName: Queryable.Min<TSource>(IQueryable<TSource>)
- uid: System.Linq.Queryable.Min``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Min<TSource,TResult>(IQueryable<TSource>, Expression<Func<TSource,TResult>>)
  nameWithType: Queryable.Min<TSource,TResult>(IQueryable<TSource>, Expression<Func<TSource,TResult>>)
  fullName: Queryable.Min<TSource,TResult>(IQueryable<TSource>, Expression<Func<TSource,TResult>>)
- uid: System.Linq.Queryable.OfType``1(System.Linq.IQueryable)
  parent: System.Linq.Queryable
  isExternal: false
  name: OfType<TResult>(IQueryable)
  nameWithType: Queryable.OfType<TResult>(IQueryable)
  fullName: Queryable.OfType<TResult>(IQueryable)
- uid: System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  parent: System.Linq.Queryable
  isExternal: false
  name: OrderBy<TSource,TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>)
  nameWithType: Queryable.OrderBy<TSource,TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>)
  fullName: Queryable.OrderBy<TSource,TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>)
- uid: System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})
  parent: System.Linq.Queryable
  isExternal: false
  name: OrderBy<TSource,TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, IComparer<TKey>)
  nameWithType: Queryable.OrderBy<TSource,TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, IComparer<TKey>)
  fullName: Queryable.OrderBy<TSource,TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, IComparer<TKey>)
- uid: System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  parent: System.Linq.Queryable
  isExternal: false
  name: OrderByDescending<TSource,TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>)
  nameWithType: Queryable.OrderByDescending<TSource,TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>)
  fullName: Queryable.OrderByDescending<TSource,TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>)
- uid: System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})
  parent: System.Linq.Queryable
  isExternal: false
  name: OrderByDescending<TSource,TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, IComparer<TKey>)
  nameWithType: Queryable.OrderByDescending<TSource,TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, IComparer<TKey>)
  fullName: Queryable.OrderByDescending<TSource,TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, IComparer<TKey>)
- uid: System.Linq.Queryable.Prepend``1(System.Linq.IQueryable{``0},``0)
  parent: System.Linq.Queryable
  isExternal: false
  name: Prepend<TSource>(IQueryable<TSource>, TSource)
  nameWithType: Queryable.Prepend<TSource>(IQueryable<TSource>, TSource)
  fullName: Queryable.Prepend<TSource>(IQueryable<TSource>, TSource)
- uid: System.Linq.Queryable.Reverse``1(System.Linq.IQueryable{``0})
  parent: System.Linq.Queryable
  isExternal: false
  name: Reverse<TSource>(IQueryable<TSource>)
  nameWithType: Queryable.Reverse<TSource>(IQueryable<TSource>)
  fullName: Queryable.Reverse<TSource>(IQueryable<TSource>)
- uid: System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Select<TSource,TResult>(IQueryable<TSource>, Expression<Func<TSource,TResult>>)
  nameWithType: Queryable.Select<TSource,TResult>(IQueryable<TSource>, Expression<Func<TSource,TResult>>)
  fullName: Queryable.Select<TSource,TResult>(IQueryable<TSource>, Expression<Func<TSource,TResult>>)
- uid: System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,``1}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Select<TSource,TResult>(IQueryable<TSource>, Expression<Func<TSource,Int32,TResult>>)
  nameWithType: Queryable.Select<TSource,TResult>(IQueryable<TSource>, Expression<Func<TSource,Int32,TResult>>)
  fullName: Queryable.Select<TSource,TResult>(IQueryable<TSource>, Expression<Func<TSource,Int32,TResult>>)
- uid: System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}})
  parent: System.Linq.Queryable
  isExternal: false
  name: SelectMany<TSource,TResult>(IQueryable<TSource>, Expression<Func<TSource,IEnumerable<TResult>>>)
  nameWithType: Queryable.SelectMany<TSource,TResult>(IQueryable<TSource>, Expression<Func<TSource,IEnumerable<TResult>>>)
  fullName: Queryable.SelectMany<TSource,TResult>(IQueryable<TSource>, Expression<Func<TSource,IEnumerable<TResult>>>)
- uid: System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}})
  parent: System.Linq.Queryable
  isExternal: false
  name: SelectMany<TSource,TResult>(IQueryable<TSource>, Expression<Func<TSource,Int32,IEnumerable<TResult>>>)
  nameWithType: Queryable.SelectMany<TSource,TResult>(IQueryable<TSource>, Expression<Func<TSource,Int32,IEnumerable<TResult>>>)
  fullName: Queryable.SelectMany<TSource,TResult>(IQueryable<TSource>, Expression<Func<TSource,Int32,IEnumerable<TResult>>>)
- uid: System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})
  parent: System.Linq.Queryable
  isExternal: false
  name: SelectMany<TSource,TCollection,TResult>(IQueryable<TSource>, Expression<Func<TSource,IEnumerable<TCollection>>>, Expression<Func<TSource,TCollection,TResult>>)
  nameWithType: Queryable.SelectMany<TSource,TCollection,TResult>(IQueryable<TSource>, Expression<Func<TSource,IEnumerable<TCollection>>>, Expression<Func<TSource,TCollection,TResult>>)
  fullName: Queryable.SelectMany<TSource,TCollection,TResult>(IQueryable<TSource>, Expression<Func<TSource,IEnumerable<TCollection>>>, Expression<Func<TSource,TCollection,TResult>>)
- uid: System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})
  parent: System.Linq.Queryable
  isExternal: false
  name: SelectMany<TSource,TCollection,TResult>(IQueryable<TSource>, Expression<Func<TSource,Int32,IEnumerable<TCollection>>>, Expression<Func<TSource,TCollection,TResult>>)
  nameWithType: Queryable.SelectMany<TSource,TCollection,TResult>(IQueryable<TSource>, Expression<Func<TSource,Int32,IEnumerable<TCollection>>>, Expression<Func<TSource,TCollection,TResult>>)
  fullName: Queryable.SelectMany<TSource,TCollection,TResult>(IQueryable<TSource>, Expression<Func<TSource,Int32,IEnumerable<TCollection>>>, Expression<Func<TSource,TCollection,TResult>>)
- uid: System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Queryable
  isExternal: false
  name: SequenceEqual<TSource>(IQueryable<TSource>, IEnumerable<TSource>)
  nameWithType: Queryable.SequenceEqual<TSource>(IQueryable<TSource>, IEnumerable<TSource>)
  fullName: Queryable.SequenceEqual<TSource>(IQueryable<TSource>, IEnumerable<TSource>)
- uid: System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.Queryable
  isExternal: false
  name: SequenceEqual<TSource>(IQueryable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  nameWithType: Queryable.SequenceEqual<TSource>(IQueryable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  fullName: Queryable.SequenceEqual<TSource>(IQueryable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
- uid: System.Linq.Queryable.Single``1(System.Linq.IQueryable{``0})
  parent: System.Linq.Queryable
  isExternal: false
  name: Single<TSource>(IQueryable<TSource>)
  nameWithType: Queryable.Single<TSource>(IQueryable<TSource>)
  fullName: Queryable.Single<TSource>(IQueryable<TSource>)
- uid: System.Linq.Queryable.Single``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Single<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)
  nameWithType: Queryable.Single<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)
  fullName: Queryable.Single<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)
- uid: System.Linq.Queryable.SingleOrDefault``1(System.Linq.IQueryable{``0})
  parent: System.Linq.Queryable
  isExternal: false
  name: SingleOrDefault<TSource>(IQueryable<TSource>)
  nameWithType: Queryable.SingleOrDefault<TSource>(IQueryable<TSource>)
  fullName: Queryable.SingleOrDefault<TSource>(IQueryable<TSource>)
- uid: System.Linq.Queryable.SingleOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  parent: System.Linq.Queryable
  isExternal: false
  name: SingleOrDefault<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)
  nameWithType: Queryable.SingleOrDefault<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)
  fullName: Queryable.SingleOrDefault<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)
- uid: System.Linq.Queryable.Skip``1(System.Linq.IQueryable{``0},System.Int32)
  parent: System.Linq.Queryable
  isExternal: false
  name: Skip<TSource>(IQueryable<TSource>, Int32)
  nameWithType: Queryable.Skip<TSource>(IQueryable<TSource>, Int32)
  fullName: Queryable.Skip<TSource>(IQueryable<TSource>, Int32)
- uid: System.Linq.Queryable.SkipLast``1(System.Linq.IQueryable{``0},System.Int32)
  parent: System.Linq.Queryable
  isExternal: false
  name: SkipLast<TSource>(IQueryable<TSource>, Int32)
  nameWithType: Queryable.SkipLast<TSource>(IQueryable<TSource>, Int32)
  fullName: Queryable.SkipLast<TSource>(IQueryable<TSource>, Int32)
- uid: System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  parent: System.Linq.Queryable
  isExternal: false
  name: SkipWhile<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)
  nameWithType: Queryable.SkipWhile<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)
  fullName: Queryable.SkipWhile<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)
- uid: System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})
  parent: System.Linq.Queryable
  isExternal: false
  name: SkipWhile<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int32,Boolean>>)
  nameWithType: Queryable.SkipWhile<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int32,Boolean>>)
  fullName: Queryable.SkipWhile<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int32,Boolean>>)
- uid: System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Decimal})
  parent: System.Linq.Queryable
  isExternal: false
  name: Sum(IQueryable<Decimal>)
  nameWithType: Queryable.Sum(IQueryable<Decimal>)
  fullName: Queryable.Sum(IQueryable<Decimal>)
- uid: System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Double})
  parent: System.Linq.Queryable
  isExternal: false
  name: Sum(IQueryable<Double>)
  nameWithType: Queryable.Sum(IQueryable<Double>)
  fullName: Queryable.Sum(IQueryable<Double>)
- uid: System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Int32})
  parent: System.Linq.Queryable
  isExternal: false
  name: Sum(IQueryable<Int32>)
  nameWithType: Queryable.Sum(IQueryable<Int32>)
  fullName: Queryable.Sum(IQueryable<Int32>)
- uid: System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Int64})
  parent: System.Linq.Queryable
  isExternal: false
  name: Sum(IQueryable<Int64>)
  nameWithType: Queryable.Sum(IQueryable<Int64>)
  fullName: Queryable.Sum(IQueryable<Int64>)
- uid: System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Decimal}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Sum(IQueryable<Nullable<Decimal>>)
  nameWithType: Queryable.Sum(IQueryable<Nullable<Decimal>>)
  fullName: Queryable.Sum(IQueryable<Nullable<Decimal>>)
- uid: System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Double}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Sum(IQueryable<Nullable<Double>>)
  nameWithType: Queryable.Sum(IQueryable<Nullable<Double>>)
  fullName: Queryable.Sum(IQueryable<Nullable<Double>>)
- uid: System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Int32}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Sum(IQueryable<Nullable<Int32>>)
  nameWithType: Queryable.Sum(IQueryable<Nullable<Int32>>)
  fullName: Queryable.Sum(IQueryable<Nullable<Int32>>)
- uid: System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Int64}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Sum(IQueryable<Nullable<Int64>>)
  nameWithType: Queryable.Sum(IQueryable<Nullable<Int64>>)
  fullName: Queryable.Sum(IQueryable<Nullable<Int64>>)
- uid: System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Single}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Sum(IQueryable<Nullable<Single>>)
  nameWithType: Queryable.Sum(IQueryable<Nullable<Single>>)
  fullName: Queryable.Sum(IQueryable<Nullable<Single>>)
- uid: System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Single})
  parent: System.Linq.Queryable
  isExternal: false
  name: Sum(IQueryable<Single>)
  nameWithType: Queryable.Sum(IQueryable<Single>)
  fullName: Queryable.Sum(IQueryable<Single>)
- uid: System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Decimal>>)
  nameWithType: Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Decimal>>)
  fullName: Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Decimal>>)
- uid: System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Double>>)
  nameWithType: Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Double>>)
  fullName: Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Double>>)
- uid: System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int32>>)
  nameWithType: Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int32>>)
  fullName: Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int32>>)
- uid: System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int64>>)
  nameWithType: Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int64>>)
  fullName: Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int64>>)
- uid: System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Decimal>>>)
  nameWithType: Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Decimal>>>)
  fullName: Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Decimal>>>)
- uid: System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Double>>>)
  nameWithType: Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Double>>>)
  fullName: Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Double>>>)
- uid: System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Int32>>>)
  nameWithType: Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Int32>>>)
  fullName: Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Int32>>>)
- uid: System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Int64>>>)
  nameWithType: Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Int64>>>)
  fullName: Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Int64>>>)
- uid: System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Single>>>)
  nameWithType: Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Single>>>)
  fullName: Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Single>>>)
- uid: System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Single>>)
  nameWithType: Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Single>>)
  fullName: Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Single>>)
- uid: System.Linq.Queryable.Take``1(System.Linq.IQueryable{``0},System.Int32)
  parent: System.Linq.Queryable
  isExternal: false
  name: Take<TSource>(IQueryable<TSource>, Int32)
  nameWithType: Queryable.Take<TSource>(IQueryable<TSource>, Int32)
  fullName: Queryable.Take<TSource>(IQueryable<TSource>, Int32)
- uid: System.Linq.Queryable.TakeLast``1(System.Linq.IQueryable{``0},System.Int32)
  parent: System.Linq.Queryable
  isExternal: false
  name: TakeLast<TSource>(IQueryable<TSource>, Int32)
  nameWithType: Queryable.TakeLast<TSource>(IQueryable<TSource>, Int32)
  fullName: Queryable.TakeLast<TSource>(IQueryable<TSource>, Int32)
- uid: System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  parent: System.Linq.Queryable
  isExternal: false
  name: TakeWhile<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)
  nameWithType: Queryable.TakeWhile<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)
  fullName: Queryable.TakeWhile<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)
- uid: System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})
  parent: System.Linq.Queryable
  isExternal: false
  name: TakeWhile<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int32,Boolean>>)
  nameWithType: Queryable.TakeWhile<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int32,Boolean>>)
  fullName: Queryable.TakeWhile<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int32,Boolean>>)
- uid: System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Queryable
  isExternal: false
  name: Union<TSource>(IQueryable<TSource>, IEnumerable<TSource>)
  nameWithType: Queryable.Union<TSource>(IQueryable<TSource>, IEnumerable<TSource>)
  fullName: Queryable.Union<TSource>(IQueryable<TSource>, IEnumerable<TSource>)
- uid: System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.Queryable
  isExternal: false
  name: Union<TSource>(IQueryable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  nameWithType: Queryable.Union<TSource>(IQueryable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  fullName: Queryable.Union<TSource>(IQueryable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
- uid: System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Where<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)
  nameWithType: Queryable.Where<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)
  fullName: Queryable.Where<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)
- uid: System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Where<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int32,Boolean>>)
  nameWithType: Queryable.Where<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int32,Boolean>>)
  fullName: Queryable.Where<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int32,Boolean>>)
- uid: System.Linq.Queryable.Zip``3(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Zip<TFirst,TSecond,TResult>(IQueryable<TFirst>, IEnumerable<TSecond>, Expression<Func<TFirst,TSecond,TResult>>)
  nameWithType: Queryable.Zip<TFirst,TSecond,TResult>(IQueryable<TFirst>, IEnumerable<TSecond>, Expression<Func<TFirst,TSecond,TResult>>)
  fullName: Queryable.Zip<TFirst,TSecond,TResult>(IQueryable<TFirst>, IEnumerable<TSecond>, Expression<Func<TFirst,TSecond,TResult>>)
- uid: System.Web.UI.WebControls.QueryExtensions.SortBy``1(System.Linq.IQueryable{``0},System.String)
  parent: System.Web.UI.WebControls.QueryExtensions
  isExternal: false
  name: SortBy<T>(IQueryable<T>, String)
  nameWithType: QueryExtensions.SortBy<T>(IQueryable<T>, String)
  fullName: QueryExtensions.SortBy<T>(IQueryable<T>, String)
- uid: System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Xml.Linq.Extensions
  isExternal: false
  name: Ancestors<T>(IEnumerable<T>)
  nameWithType: Extensions.Ancestors<T>(IEnumerable<T>)
  fullName: Extensions.Ancestors<T>(IEnumerable<T>)
- uid: System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)
  parent: System.Xml.Linq.Extensions
  isExternal: false
  name: Ancestors<T>(IEnumerable<T>, XName)
  nameWithType: Extensions.Ancestors<T>(IEnumerable<T>, XName)
  fullName: Extensions.Ancestors<T>(IEnumerable<T>, XName)
- uid: System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})
  parent: System.Xml.Linq.Extensions
  isExternal: false
  name: AncestorsAndSelf(IEnumerable<XElement>)
  nameWithType: Extensions.AncestorsAndSelf(IEnumerable<XElement>)
  fullName: Extensions.AncestorsAndSelf(IEnumerable<XElement>)
- uid: System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)
  parent: System.Xml.Linq.Extensions
  isExternal: false
  name: AncestorsAndSelf(IEnumerable<XElement>, XName)
  nameWithType: Extensions.AncestorsAndSelf(IEnumerable<XElement>, XName)
  fullName: Extensions.AncestorsAndSelf(IEnumerable<XElement>, XName)
- uid: System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})
  parent: System.Xml.Linq.Extensions
  isExternal: false
  name: Attributes(IEnumerable<XElement>)
  nameWithType: Extensions.Attributes(IEnumerable<XElement>)
  fullName: Extensions.Attributes(IEnumerable<XElement>)
- uid: System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)
  parent: System.Xml.Linq.Extensions
  isExternal: false
  name: Attributes(IEnumerable<XElement>, XName)
  nameWithType: Extensions.Attributes(IEnumerable<XElement>, XName)
  fullName: Extensions.Attributes(IEnumerable<XElement>, XName)
- uid: System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Xml.Linq.Extensions
  isExternal: false
  name: DescendantNodes<T>(IEnumerable<T>)
  nameWithType: Extensions.DescendantNodes<T>(IEnumerable<T>)
  fullName: Extensions.DescendantNodes<T>(IEnumerable<T>)
- uid: System.Xml.Linq.Extensions.DescendantNodesAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})
  parent: System.Xml.Linq.Extensions
  isExternal: false
  name: DescendantNodesAndSelf(IEnumerable<XElement>)
  nameWithType: Extensions.DescendantNodesAndSelf(IEnumerable<XElement>)
  fullName: Extensions.DescendantNodesAndSelf(IEnumerable<XElement>)
- uid: System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Xml.Linq.Extensions
  isExternal: false
  name: Descendants<T>(IEnumerable<T>)
  nameWithType: Extensions.Descendants<T>(IEnumerable<T>)
  fullName: Extensions.Descendants<T>(IEnumerable<T>)
- uid: System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)
  parent: System.Xml.Linq.Extensions
  isExternal: false
  name: Descendants<T>(IEnumerable<T>, XName)
  nameWithType: Extensions.Descendants<T>(IEnumerable<T>, XName)
  fullName: Extensions.Descendants<T>(IEnumerable<T>, XName)
- uid: System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})
  parent: System.Xml.Linq.Extensions
  isExternal: false
  name: DescendantsAndSelf(IEnumerable<XElement>)
  nameWithType: Extensions.DescendantsAndSelf(IEnumerable<XElement>)
  fullName: Extensions.DescendantsAndSelf(IEnumerable<XElement>)
- uid: System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)
  parent: System.Xml.Linq.Extensions
  isExternal: false
  name: DescendantsAndSelf(IEnumerable<XElement>, XName)
  nameWithType: Extensions.DescendantsAndSelf(IEnumerable<XElement>, XName)
  fullName: Extensions.DescendantsAndSelf(IEnumerable<XElement>, XName)
- uid: System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Xml.Linq.Extensions
  isExternal: false
  name: Elements<T>(IEnumerable<T>)
  nameWithType: Extensions.Elements<T>(IEnumerable<T>)
  fullName: Extensions.Elements<T>(IEnumerable<T>)
- uid: System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)
  parent: System.Xml.Linq.Extensions
  isExternal: false
  name: Elements<T>(IEnumerable<T>, XName)
  nameWithType: Extensions.Elements<T>(IEnumerable<T>, XName)
  fullName: Extensions.Elements<T>(IEnumerable<T>, XName)
- uid: System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Xml.Linq.Extensions
  isExternal: false
  name: InDocumentOrder<T>(IEnumerable<T>)
  nameWithType: Extensions.InDocumentOrder<T>(IEnumerable<T>)
  fullName: Extensions.InDocumentOrder<T>(IEnumerable<T>)
- uid: System.Xml.Linq.Extensions.Nodes``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Xml.Linq.Extensions
  isExternal: false
  name: Nodes<T>(IEnumerable<T>)
  nameWithType: Extensions.Nodes<T>(IEnumerable<T>)
  fullName: Extensions.Nodes<T>(IEnumerable<T>)
- uid: System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute})
  parent: System.Xml.Linq.Extensions
  isExternal: false
  name: Remove(IEnumerable<XAttribute>)
  nameWithType: Extensions.Remove(IEnumerable<XAttribute>)
  fullName: Extensions.Remove(IEnumerable<XAttribute>)
- uid: System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Xml.Linq.Extensions
  isExternal: false
  name: Remove<T>(IEnumerable<T>)
  nameWithType: Extensions.Remove<T>(IEnumerable<T>)
  fullName: Extensions.Remove<T>(IEnumerable<T>)
- uid: System.Collections.Generic.IEnumerable{TEntity}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<TEntity>
  nameWithType: IEnumerable<TEntity>
  fullName: System.Collections.Generic.IEnumerable<TEntity>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: TEntity
    name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.IListSource
  parent: System.ComponentModel
  isExternal: false
  name: IListSource
  nameWithType: IListSource
  fullName: System.ComponentModel.IListSource
- uid: System.Data.Linq.ITable
  parent: System.Data.Linq
  isExternal: false
  name: ITable
  nameWithType: ITable
  fullName: System.Data.Linq.ITable
- uid: System.Linq.IQueryable{TEntity}
  parent: System.Linq
  isExternal: false
  name: IQueryable<TEntity>
  nameWithType: IQueryable<TEntity>
  fullName: System.Linq.IQueryable<TEntity>
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
  - name: <
    nameWithType: <
    fullName: <
  - uid: TEntity
    name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
