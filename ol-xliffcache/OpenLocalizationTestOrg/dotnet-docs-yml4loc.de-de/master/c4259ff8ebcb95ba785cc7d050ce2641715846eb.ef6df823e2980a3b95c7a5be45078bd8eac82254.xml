{"nodes":[{"content":"Specifies constants that define the state of a key.","nodes":[{"pos":[0,51],"content":"Specifies constants that define the state of a key.","nodes":[{"content":"Specifies constants that define the state of a key.","pos":[0,51]}]}],"pos":[471,523],"yaml":true},{"content":"The <xref:System.Windows.Input.KeyStates> class is a bit field (flagwise) enumeration. Therefore, a key can be in multiple states.  For example, a key could be in the Down state as well as in the Toggled state.  Use bit operations to determine the exact state or states the key is in.","nodes":[{"pos":[0,284],"content":"The <xref:System.Windows.Input.KeyStates> class is a bit field (flagwise) enumeration. Therefore, a key can be in multiple states.  For example, a key could be in the Down state as well as in the Toggled state.  Use bit operations to determine the exact state or states the key is in.","nodes":[{"content":"The <xref:System.Windows.Input.KeyStates> class is a bit field (flagwise) enumeration. Therefore, a key can be in multiple states.  For example, a key could be in the Down state as well as in the Toggled state.  Use bit operations to determine the exact state or states the key is in.","pos":[0,284],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Input.KeyStates&gt;</ph> class is a bit field (flagwise) enumeration.","pos":[0,86],"source":"The <xref:System.Windows.Input.KeyStates> class is a bit field (flagwise) enumeration."},{"content":"Therefore, a key can be in multiple states.","pos":[87,130]},{"content":"For example, a key could be in the Down state as well as in the Toggled state.","pos":[132,210]},{"content":"Use bit operations to determine the exact state or states the key is in.","pos":[212,284]}]}]}],"pos":[534,819],"yaml":true,"extradata":"MT"},{"content":"The key is pressed.","nodes":[{"pos":[0,19],"content":"The key is pressed.","nodes":[{"content":"The key is pressed.","pos":[0,19]}]}],"pos":[2669,2689],"yaml":true},{"content":"The key is not pressed.","nodes":[{"pos":[0,23],"content":"The key is not pressed.","nodes":[{"content":"The key is not pressed.","pos":[0,23]}]}],"pos":[3576,3600],"yaml":true},{"content":"The key is toggled.","nodes":[{"pos":[0,19],"content":"The key is toggled.","nodes":[{"content":"The key is toggled.","pos":[0,19]}]}],"pos":[4505,4525],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Input.KeyStates\n  commentId: T:System.Windows.Input.KeyStates\n  id: KeyStates\n  children:\n  - System.Windows.Input.KeyStates.Down\n  - System.Windows.Input.KeyStates.None\n  - System.Windows.Input.KeyStates.Toggled\n  langs:\n  - csharp\n  name: KeyStates\n  nameWithType: KeyStates\n  fullName: System.Windows.Input.KeyStates\n  type: Enum\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Specifies constants that define the state of a key.\n  remarks: The <xref:System.Windows.Input.KeyStates> class is a bit field (flagwise) enumeration. Therefore, a key can be in multiple states.  For example, a key could be in the Down state as well as in the Toggled state.  Use bit operations to determine the exact state or states the key is in.\n  example:\n  - \"The following example changes the color of a <xref:System.Windows.Controls.Button> if the <xref:System.Windows.Input.KeyStates.Toggled> of the key passed in the <xref:System.Windows.Input.KeyEventArgs> is Down. The state of the key is determined by using a bitwise `AND` operation.  The same technique can be used to determine whether a key has multiple states, such as being in the Toggled state and the Down state.  \\n  \\n [!code-csharp[keyargssnippetsample#KeyEventArgsKeyStatesDown](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyArgsSnippetSample/CSharp/Window1.xaml.cs#keyeventargskeystatesdown)]\\n [!code-vb[keyargssnippetsample#KeyEventArgsKeyStatesDown](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyArgsSnippetSample/visualbasic/window1.xaml.vb#keyeventargskeystatesdown)]\"\n  syntax:\n    content: >-\n      [System.Flags]\n\n      public enum KeyStates\n  inheritance:\n  - System.Object\n  - System.ValueType\n  - System.Enum\n  attributes:\n  - type: System.FlagsAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/KeyStates.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.KeyStates.Down\n  commentId: F:System.Windows.Input.KeyStates.Down\n  id: Down\n  parent: System.Windows.Input.KeyStates\n  langs:\n  - csharp\n  name: Down\n  nameWithType: KeyStates.Down\n  fullName: KeyStates.Down\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: The key is pressed.\n  syntax:\n    content: Down\n    return:\n      type: System.Windows.Input.KeyStates\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/KeyStates.xml\n- uid: System.Windows.Input.KeyStates.None\n  commentId: F:System.Windows.Input.KeyStates.None\n  id: None\n  parent: System.Windows.Input.KeyStates\n  langs:\n  - csharp\n  name: None\n  nameWithType: KeyStates.None\n  fullName: KeyStates.None\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: The key is not pressed.\n  syntax:\n    content: None\n    return:\n      type: System.Windows.Input.KeyStates\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/KeyStates.xml\n- uid: System.Windows.Input.KeyStates.Toggled\n  commentId: F:System.Windows.Input.KeyStates.Toggled\n  id: Toggled\n  parent: System.Windows.Input.KeyStates\n  langs:\n  - csharp\n  name: Toggled\n  nameWithType: KeyStates.Toggled\n  fullName: KeyStates.Toggled\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: The key is toggled.\n  syntax:\n    content: Toggled\n    return:\n      type: System.Windows.Input.KeyStates\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/KeyStates.xml\nreferences:\n- uid: System.Enum\n  parent: System\n  isExternal: false\n  name: Enum\n  nameWithType: Enum\n  fullName: System.Enum\n- uid: System.Windows.Input.KeyStates.Down\n  parent: System.Windows.Input.KeyStates\n  isExternal: false\n  name: Down\n  nameWithType: KeyStates.Down\n  fullName: KeyStates.Down\n- uid: System.Windows.Input.KeyStates\n  parent: System.Windows.Input\n  isExternal: false\n  name: KeyStates\n  nameWithType: KeyStates\n  fullName: System.Windows.Input.KeyStates\n- uid: System.Windows.Input.KeyStates.None\n  parent: System.Windows.Input.KeyStates\n  isExternal: false\n  name: None\n  nameWithType: KeyStates.None\n  fullName: KeyStates.None\n- uid: System.Windows.Input.KeyStates.Toggled\n  parent: System.Windows.Input.KeyStates\n  isExternal: false\n  name: Toggled\n  nameWithType: KeyStates.Toggled\n  fullName: KeyStates.Toggled\n"}