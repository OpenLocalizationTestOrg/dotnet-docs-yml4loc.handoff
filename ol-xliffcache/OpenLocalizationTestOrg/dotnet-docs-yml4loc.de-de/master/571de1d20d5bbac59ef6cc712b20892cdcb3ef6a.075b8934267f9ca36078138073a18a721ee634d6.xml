{"nodes":[{"content":"Holds values for an object type registered on the client as a server-activated type (single call or singleton).","nodes":[{"pos":[0,111],"content":"Holds values for an object type registered on the client as a server-activated type (single call or singleton).","nodes":[{"content":"Holds values for an object type registered on the client as a server-activated type (single call or singleton).","pos":[0,111]}]}],"pos":[888,1000],"yaml":true},{"content":"Server-activated types can be either single call or singleton. If a class is registered as a single call type, a new instance is created each time a call from the client arrives. All calls to a singleton object are handled by one instance of that object, unless that object has been collected.  \n  \n Any client that knows the URI of a registered server-activated object can obtain a proxy for this object by registering the channel it prefers with <xref:System.Runtime.Remoting.Channels.ChannelServices> and activating the object by calling `new` or <xref:System.Activator.GetObject%2A?displayProperty=fullName>. To activate a server-activated object with `new`, you must first register the server-activated object type on the client using the <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType%2A> method. By calling <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType%2A>, you are giving the remoting infrastructure the location of the remote object, which allows the `new` keyword to create it. If, on the other hand, you use the <xref:System.Activator.GetObject%2A?displayProperty=fullName> method to activate a server-activated object, you must supply it with the object's URL as an argument, so no prior registration on the client is necessary.  \n  \n For a detailed description of server-activated objects and remote object activation, see [&#91;\\<topic://cpconActivation>&#93;](http://msdn.microsoft.com/en-us/e90d0c64-00da-4080-ae78-a6c558825c25).","nodes":[{"pos":[0,293],"content":"Server-activated types can be either single call or singleton. If a class is registered as a single call type, a new instance is created each time a call from the client arrives. All calls to a singleton object are handled by one instance of that object, unless that object has been collected.","nodes":[{"content":"Server-activated types can be either single call or singleton. If a class is registered as a single call type, a new instance is created each time a call from the client arrives. All calls to a singleton object are handled by one instance of that object, unless that object has been collected.","pos":[0,293],"nodes":[{"content":"Server-activated types can be either single call or singleton.","pos":[0,62]},{"content":"If a class is registered as a single call type, a new instance is created each time a call from the client arrives.","pos":[63,178]},{"content":"All calls to a singleton object are handled by one instance of that object, unless that object has been collected.","pos":[179,293]}]}]},{"pos":[300,1307],"content":"Any client that knows the URI of a registered server-activated object can obtain a proxy for this object by registering the channel it prefers with <xref:System.Runtime.Remoting.Channels.ChannelServices> and activating the object by calling `new` or <xref:System.Activator.GetObject%2A?displayProperty=fullName>. To activate a server-activated object with `new`, you must first register the server-activated object type on the client using the <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType%2A> method. By calling <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType%2A>, you are giving the remoting infrastructure the location of the remote object, which allows the `new` keyword to create it. If, on the other hand, you use the <xref:System.Activator.GetObject%2A?displayProperty=fullName> method to activate a server-activated object, you must supply it with the object's URL as an argument, so no prior registration on the client is necessary.","nodes":[{"content":"Any client that knows the URI of a registered server-activated object can obtain a proxy for this object by registering the channel it prefers with <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Channels.ChannelServices&gt;</ph> and activating the object by calling <ph id=\"ph2\">`new`</ph> or <ph id=\"ph3\">&lt;xref:System.Activator.GetObject%2A?displayProperty=fullName&gt;</ph>.","pos":[0,312],"source":"Any client that knows the URI of a registered server-activated object can obtain a proxy for this object by registering the channel it prefers with <xref:System.Runtime.Remoting.Channels.ChannelServices> and activating the object by calling `new` or <xref:System.Activator.GetObject%2A?displayProperty=fullName>."},{"content":"To activate a server-activated object with <ph id=\"ph1\">`new`</ph>, you must first register the server-activated object type on the client using the <ph id=\"ph2\">&lt;xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType%2A&gt;</ph> method.","pos":[313,535],"source":" To activate a server-activated object with `new`, you must first register the server-activated object type on the client using the <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType%2A> method."},{"content":"By calling <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType%2A&gt;</ph>, you are giving the remoting infrastructure the location of the remote object, which allows the <ph id=\"ph2\">`new`</ph> keyword to create it.","pos":[536,754],"source":" By calling <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType%2A>, you are giving the remoting infrastructure the location of the remote object, which allows the `new` keyword to create it."},{"content":"If, on the other hand, you use the <ph id=\"ph1\">&lt;xref:System.Activator.GetObject%2A?displayProperty=fullName&gt;</ph> method to activate a server-activated object, you must supply it with the object's URL as an argument, so no prior registration on the client is necessary.","pos":[755,1007],"source":" If, on the other hand, you use the <xref:System.Activator.GetObject%2A?displayProperty=fullName> method to activate a server-activated object, you must supply it with the object's URL as an argument, so no prior registration on the client is necessary."}]},{"pos":[1314,1512],"content":"For a detailed description of server-activated objects and remote object activation, see <bpt id=\"p1\">[</bpt>&amp;#91;<ph id=\"ph1\">\\&lt;</ph>topic://cpconActivation&gt;&amp;#93;<ept id=\"p1\">](http://msdn.microsoft.com/en-us/e90d0c64-00da-4080-ae78-a6c558825c25)</ept>.","source":"For a detailed description of server-activated objects and remote object activation, see [&#91;\\<topic://cpconActivation>&#93;](http://msdn.microsoft.com/en-us/e90d0c64-00da-4080-ae78-a6c558825c25)."}],"pos":[1011,2531],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Runtime.Remoting.WellKnownClientTypeEntry\"></xref> class with the given type and URL.","nodes":[{"pos":[0,138],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Remoting.WellKnownClientTypeEntry\"&gt;&lt;/xref&gt;</ph> class with the given type and URL.","source":"Initializes a new instance of the <xref href=\"System.Runtime.Remoting.WellKnownClientTypeEntry\"></xref> class with the given type and URL."}],"pos":[4996,5135],"yaml":true},{"content":"The <xref href=\"System.Type\"></xref> of the server-activated type.","nodes":[{"pos":[0,66],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> of the server-activated type.","source":"The <xref href=\"System.Type\"></xref> of the server-activated type."}],"pos":[5295,5362],"yaml":true},{"content":"The URL of the server-activated type.","nodes":[{"pos":[0,37],"content":"The URL of the server-activated type.","nodes":[{"content":"The URL of the server-activated type.","pos":[0,37]}]}],"pos":[5427,5465],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Runtime.Remoting.WellKnownClientTypeEntry\"></xref> class with the given type, assembly name, and URL.","nodes":[{"pos":[0,154],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Remoting.WellKnownClientTypeEntry\"&gt;&lt;/xref&gt;</ph> class with the given type, assembly name, and URL.","source":"Initializes a new instance of the <xref href=\"System.Runtime.Remoting.WellKnownClientTypeEntry\"></xref> class with the given type, assembly name, and URL."}],"pos":[6863,7018],"yaml":true},{"content":"The type name of the server-activated type.","nodes":[{"pos":[0,43],"content":"The type name of the server-activated type.","nodes":[{"content":"The type name of the server-activated type.","pos":[0,43]}]}],"pos":[7211,7255],"yaml":true},{"content":"The assembly name of the server-activated type.","nodes":[{"pos":[0,47],"content":"The assembly name of the server-activated type.","nodes":[{"content":"The assembly name of the server-activated type.","pos":[0,47]}]}],"pos":[7323,7371],"yaml":true},{"content":"The URL of the server-activated type.","nodes":[{"pos":[0,37],"content":"The URL of the server-activated type.","nodes":[{"content":"The URL of the server-activated type.","pos":[0,37]}]}],"pos":[7436,7474],"yaml":true},{"content":"Gets or sets the URL of the application to activate the type in.","nodes":[{"pos":[0,64],"content":"Gets or sets the URL of the application to activate the type in.","nodes":[{"content":"Gets or sets the URL of the application to activate the type in.","pos":[0,64]}]}],"pos":[8663,8728],"yaml":true},{"content":"The application URL is optional and should be set to the URL of the application corresponding to the server-activated object.","nodes":[{"pos":[0,125],"content":"The application URL is optional and should be set to the URL of the application corresponding to the server-activated object.","nodes":[{"content":"The application URL is optional and should be set to the URL of the application corresponding to the server-activated object.","pos":[0,125]}]}],"pos":[8739,8865],"yaml":true,"extradata":"MT"},{"content":"The URL of the application to activate the type in.","nodes":[{"pos":[0,51],"content":"The URL of the application to activate the type in.","nodes":[{"content":"The URL of the application to activate the type in.","pos":[0,51]}]}],"pos":[8988,9040],"yaml":true},{"content":"Gets the <xref href=\"System.Type\"></xref> of the server-activated client type.","nodes":[{"pos":[0,78],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> of the server-activated client type.","source":"Gets the <xref href=\"System.Type\"></xref> of the server-activated client type."}],"pos":[10214,10293],"yaml":true},{"content":"Gets the <xref href=\"System.Type\"></xref> of the server-activated client type.","nodes":[{"pos":[0,78],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> of the server-activated client type.","source":"Gets the <xref href=\"System.Type\"></xref> of the server-activated client type."}],"pos":[10403,10482],"yaml":true},{"content":"Gets the URL of the server-activated client object.","nodes":[{"pos":[0,51],"content":"Gets the URL of the server-activated client object.","nodes":[{"content":"Gets the URL of the server-activated client object.","pos":[0,51]}]}],"pos":[11646,11698],"yaml":true},{"content":"The URL of the server-activated client object.","nodes":[{"pos":[0,46],"content":"The URL of the server-activated client object.","nodes":[{"content":"The URL of the server-activated client object.","pos":[0,46]}]}],"pos":[11811,11858],"yaml":true},{"content":"Returns the full type name, assembly name, and object URL of the server-activated client type as a <xref href=\"System.String\"></xref>.","nodes":[{"pos":[0,134],"content":"Returns the full type name, assembly name, and object URL of the server-activated client type as a <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph>.","source":"Returns the full type name, assembly name, and object URL of the server-activated client type as a <xref href=\"System.String\"></xref>."}],"pos":[13019,13154],"yaml":true},{"content":"If <xref:System.Runtime.Remoting.WellKnownClientTypeEntry.ApplicationUrl%2A> is not `null`, it is returned at the end of the string.","nodes":[{"pos":[0,132],"content":"If <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.WellKnownClientTypeEntry.ApplicationUrl%2A&gt;</ph> is not <ph id=\"ph2\">`null`</ph>, it is returned at the end of the string.","source":"If <xref:System.Runtime.Remoting.WellKnownClientTypeEntry.ApplicationUrl%2A> is not `null`, it is returned at the end of the string."}],"pos":[13165,13298],"yaml":true,"extradata":"MT"},{"content":"The full type name, assembly name, and object URL of the server-activated client type as a <xref href=\"System.String\"></xref>.","nodes":[{"pos":[0,126],"content":"The full type name, assembly name, and object URL of the server-activated client type as a <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph>.","source":"The full type name, assembly name, and object URL of the server-activated client type as a <xref href=\"System.String\"></xref>."}],"pos":[13433,13560],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.Remoting.WellKnownClientTypeEntry\n  commentId: T:System.Runtime.Remoting.WellKnownClientTypeEntry\n  id: WellKnownClientTypeEntry\n  children:\n  - System.Runtime.Remoting.WellKnownClientTypeEntry.#ctor(System.Type,System.String)\n  - System.Runtime.Remoting.WellKnownClientTypeEntry.#ctor(System.String,System.String,System.String)\n  - System.Runtime.Remoting.WellKnownClientTypeEntry.ApplicationUrl\n  - System.Runtime.Remoting.WellKnownClientTypeEntry.ObjectType\n  - System.Runtime.Remoting.WellKnownClientTypeEntry.ObjectUrl\n  - System.Runtime.Remoting.WellKnownClientTypeEntry.ToString\n  langs:\n  - csharp\n  name: WellKnownClientTypeEntry\n  nameWithType: WellKnownClientTypeEntry\n  fullName: System.Runtime.Remoting.WellKnownClientTypeEntry\n  type: Class\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting\n  summary: Holds values for an object type registered on the client as a server-activated type (single call or singleton).\n  remarks: \"Server-activated types can be either single call or singleton. If a class is registered as a single call type, a new instance is created each time a call from the client arrives. All calls to a singleton object are handled by one instance of that object, unless that object has been collected.  \\n  \\n Any client that knows the URI of a registered server-activated object can obtain a proxy for this object by registering the channel it prefers with <xref:System.Runtime.Remoting.Channels.ChannelServices> and activating the object by calling `new` or <xref:System.Activator.GetObject%2A?displayProperty=fullName>. To activate a server-activated object with `new`, you must first register the server-activated object type on the client using the <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType%2A> method. By calling <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType%2A>, you are giving the remoting infrastructure the location of the remote object, which allows the `new` keyword to create it. If, on the other hand, you use the <xref:System.Activator.GetObject%2A?displayProperty=fullName> method to activate a server-activated object, you must supply it with the object's URL as an argument, so no prior registration on the client is necessary.  \\n  \\n For a detailed description of server-activated objects and remote object activation, see [&#91;\\\\<topic://cpconActivation>&#93;](http://msdn.microsoft.com/en-us/e90d0c64-00da-4080-ae78-a6c558825c25).\"\n  example:\n  - >-\n    [!code-cpp[WellKnownClientTypeEntry_Client#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WellKnownClientTypeEntry_Client/CPP/wellknownclienttypeentry_client.cpp#1)]\n     [!code-csharp[WellKnownClientTypeEntry_Client#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WellKnownClientTypeEntry_Client/CS/wellknownclienttypeentry_client.cs#1)]\n     [!code-vb[WellKnownClientTypeEntry_Client#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WellKnownClientTypeEntry_Client/VB/wellknownclienttypeentry_client.vb#1)]\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class WellKnownClientTypeEntry : System.Runtime.Remoting.TypeEntry\n  inheritance:\n  - System.Object\n  - System.Runtime.Remoting.TypeEntry\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Runtime.Remoting.TypeEntry.AssemblyName\n  - System.Runtime.Remoting.TypeEntry.TypeName\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/WellKnownClientTypeEntry.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.WellKnownClientTypeEntry.#ctor(System.Type,System.String)\n  commentId: M:System.Runtime.Remoting.WellKnownClientTypeEntry.#ctor(System.Type,System.String)\n  id: '#ctor(System.Type,System.String)'\n  parent: System.Runtime.Remoting.WellKnownClientTypeEntry\n  langs:\n  - csharp\n  name: WellKnownClientTypeEntry(Type, String)\n  nameWithType: WellKnownClientTypeEntry.WellKnownClientTypeEntry(Type, String)\n  fullName: WellKnownClientTypeEntry.WellKnownClientTypeEntry(Type, String)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting\n  summary: Initializes a new instance of the <xref href=\"System.Runtime.Remoting.WellKnownClientTypeEntry\"></xref> class with the given type and URL.\n  syntax:\n    content: public WellKnownClientTypeEntry (Type type, string objectUrl);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> of the server-activated type.\n    - id: objectUrl\n      type: System.String\n      description: The URL of the server-activated type.\n  overload: System.Runtime.Remoting.WellKnownClientTypeEntry.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/WellKnownClientTypeEntry.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.WellKnownClientTypeEntry.#ctor(System.String,System.String,System.String)\n  commentId: M:System.Runtime.Remoting.WellKnownClientTypeEntry.#ctor(System.String,System.String,System.String)\n  id: '#ctor(System.String,System.String,System.String)'\n  parent: System.Runtime.Remoting.WellKnownClientTypeEntry\n  langs:\n  - csharp\n  name: WellKnownClientTypeEntry(String, String, String)\n  nameWithType: WellKnownClientTypeEntry.WellKnownClientTypeEntry(String, String, String)\n  fullName: WellKnownClientTypeEntry.WellKnownClientTypeEntry(String, String, String)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting\n  summary: Initializes a new instance of the <xref href=\"System.Runtime.Remoting.WellKnownClientTypeEntry\"></xref> class with the given type, assembly name, and URL.\n  syntax:\n    content: public WellKnownClientTypeEntry (string typeName, string assemblyName, string objectUrl);\n    parameters:\n    - id: typeName\n      type: System.String\n      description: The type name of the server-activated type.\n    - id: assemblyName\n      type: System.String\n      description: The assembly name of the server-activated type.\n    - id: objectUrl\n      type: System.String\n      description: The URL of the server-activated type.\n  overload: System.Runtime.Remoting.WellKnownClientTypeEntry.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/WellKnownClientTypeEntry.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.WellKnownClientTypeEntry.ApplicationUrl\n  commentId: P:System.Runtime.Remoting.WellKnownClientTypeEntry.ApplicationUrl\n  id: ApplicationUrl\n  parent: System.Runtime.Remoting.WellKnownClientTypeEntry\n  langs:\n  - csharp\n  name: ApplicationUrl\n  nameWithType: WellKnownClientTypeEntry.ApplicationUrl\n  fullName: WellKnownClientTypeEntry.ApplicationUrl\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting\n  summary: Gets or sets the URL of the application to activate the type in.\n  remarks: The application URL is optional and should be set to the URL of the application corresponding to the server-activated object.\n  syntax:\n    content: public string ApplicationUrl { get; set; }\n    return:\n      type: System.String\n      description: The URL of the application to activate the type in.\n  overload: System.Runtime.Remoting.WellKnownClientTypeEntry.ApplicationUrl*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/WellKnownClientTypeEntry.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.WellKnownClientTypeEntry.ObjectType\n  commentId: P:System.Runtime.Remoting.WellKnownClientTypeEntry.ObjectType\n  id: ObjectType\n  parent: System.Runtime.Remoting.WellKnownClientTypeEntry\n  langs:\n  - csharp\n  name: ObjectType\n  nameWithType: WellKnownClientTypeEntry.ObjectType\n  fullName: WellKnownClientTypeEntry.ObjectType\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting\n  summary: Gets the <xref href=\"System.Type\"></xref> of the server-activated client type.\n  syntax:\n    content: public Type ObjectType { get; }\n    return:\n      type: System.Type\n      description: Gets the <xref href=\"System.Type\"></xref> of the server-activated client type.\n  overload: System.Runtime.Remoting.WellKnownClientTypeEntry.ObjectType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/WellKnownClientTypeEntry.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.WellKnownClientTypeEntry.ObjectUrl\n  commentId: P:System.Runtime.Remoting.WellKnownClientTypeEntry.ObjectUrl\n  id: ObjectUrl\n  parent: System.Runtime.Remoting.WellKnownClientTypeEntry\n  langs:\n  - csharp\n  name: ObjectUrl\n  nameWithType: WellKnownClientTypeEntry.ObjectUrl\n  fullName: WellKnownClientTypeEntry.ObjectUrl\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting\n  summary: Gets the URL of the server-activated client object.\n  syntax:\n    content: public string ObjectUrl { get; }\n    return:\n      type: System.String\n      description: The URL of the server-activated client object.\n  overload: System.Runtime.Remoting.WellKnownClientTypeEntry.ObjectUrl*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/WellKnownClientTypeEntry.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.WellKnownClientTypeEntry.ToString\n  commentId: M:System.Runtime.Remoting.WellKnownClientTypeEntry.ToString\n  id: ToString\n  parent: System.Runtime.Remoting.WellKnownClientTypeEntry\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: WellKnownClientTypeEntry.ToString()\n  fullName: WellKnownClientTypeEntry.ToString()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting\n  summary: Returns the full type name, assembly name, and object URL of the server-activated client type as a <xref href=\"System.String\"></xref>.\n  remarks: If <xref:System.Runtime.Remoting.WellKnownClientTypeEntry.ApplicationUrl%2A> is not `null`, it is returned at the end of the string.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: The full type name, assembly name, and object URL of the server-activated client type as a <xref href=\"System.String\"></xref>.\n  overload: System.Runtime.Remoting.WellKnownClientTypeEntry.ToString*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/WellKnownClientTypeEntry.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\nreferences:\n- uid: System.Runtime.Remoting.TypeEntry\n  parent: System.Runtime.Remoting\n  isExternal: false\n  name: TypeEntry\n  nameWithType: TypeEntry\n  fullName: System.Runtime.Remoting.TypeEntry\n- uid: System.Runtime.Remoting.WellKnownClientTypeEntry.#ctor(System.Type,System.String)\n  parent: System.Runtime.Remoting.WellKnownClientTypeEntry\n  isExternal: false\n  name: WellKnownClientTypeEntry(Type, String)\n  nameWithType: WellKnownClientTypeEntry.WellKnownClientTypeEntry(Type, String)\n  fullName: WellKnownClientTypeEntry.WellKnownClientTypeEntry(Type, String)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Runtime.Remoting.WellKnownClientTypeEntry.#ctor(System.String,System.String,System.String)\n  parent: System.Runtime.Remoting.WellKnownClientTypeEntry\n  isExternal: false\n  name: WellKnownClientTypeEntry(String, String, String)\n  nameWithType: WellKnownClientTypeEntry.WellKnownClientTypeEntry(String, String, String)\n  fullName: WellKnownClientTypeEntry.WellKnownClientTypeEntry(String, String, String)\n- uid: System.Runtime.Remoting.WellKnownClientTypeEntry.ApplicationUrl\n  parent: System.Runtime.Remoting.WellKnownClientTypeEntry\n  isExternal: false\n  name: ApplicationUrl\n  nameWithType: WellKnownClientTypeEntry.ApplicationUrl\n  fullName: WellKnownClientTypeEntry.ApplicationUrl\n- uid: System.Runtime.Remoting.WellKnownClientTypeEntry.ObjectType\n  parent: System.Runtime.Remoting.WellKnownClientTypeEntry\n  isExternal: false\n  name: ObjectType\n  nameWithType: WellKnownClientTypeEntry.ObjectType\n  fullName: WellKnownClientTypeEntry.ObjectType\n- uid: System.Runtime.Remoting.WellKnownClientTypeEntry.ObjectUrl\n  parent: System.Runtime.Remoting.WellKnownClientTypeEntry\n  isExternal: false\n  name: ObjectUrl\n  nameWithType: WellKnownClientTypeEntry.ObjectUrl\n  fullName: WellKnownClientTypeEntry.ObjectUrl\n- uid: System.Runtime.Remoting.WellKnownClientTypeEntry.ToString\n  parent: System.Runtime.Remoting.WellKnownClientTypeEntry\n  isExternal: false\n  name: ToString()\n  nameWithType: WellKnownClientTypeEntry.ToString()\n  fullName: WellKnownClientTypeEntry.ToString()\n- uid: System.Runtime.Remoting.WellKnownClientTypeEntry.#ctor*\n  parent: System.Runtime.Remoting.WellKnownClientTypeEntry\n  isExternal: false\n  name: WellKnownClientTypeEntry\n  nameWithType: WellKnownClientTypeEntry.WellKnownClientTypeEntry\n  fullName: WellKnownClientTypeEntry.WellKnownClientTypeEntry\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/WellKnownClientTypeEntry.xml\n- uid: System.Runtime.Remoting.WellKnownClientTypeEntry.ApplicationUrl*\n  parent: System.Runtime.Remoting.WellKnownClientTypeEntry\n  isExternal: false\n  name: ApplicationUrl\n  nameWithType: WellKnownClientTypeEntry.ApplicationUrl\n  fullName: WellKnownClientTypeEntry.ApplicationUrl\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/WellKnownClientTypeEntry.xml\n- uid: System.Runtime.Remoting.WellKnownClientTypeEntry.ObjectType*\n  parent: System.Runtime.Remoting.WellKnownClientTypeEntry\n  isExternal: false\n  name: ObjectType\n  nameWithType: WellKnownClientTypeEntry.ObjectType\n  fullName: WellKnownClientTypeEntry.ObjectType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/WellKnownClientTypeEntry.xml\n- uid: System.Runtime.Remoting.WellKnownClientTypeEntry.ObjectUrl*\n  parent: System.Runtime.Remoting.WellKnownClientTypeEntry\n  isExternal: false\n  name: ObjectUrl\n  nameWithType: WellKnownClientTypeEntry.ObjectUrl\n  fullName: WellKnownClientTypeEntry.ObjectUrl\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/WellKnownClientTypeEntry.xml\n- uid: System.Runtime.Remoting.WellKnownClientTypeEntry.ToString*\n  parent: System.Runtime.Remoting.WellKnownClientTypeEntry\n  isExternal: false\n  name: ToString\n  nameWithType: WellKnownClientTypeEntry.ToString\n  fullName: WellKnownClientTypeEntry.ToString\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting/WellKnownClientTypeEntry.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Runtime.Remoting.TypeEntry.AssemblyName\n  parent: System.Runtime.Remoting.TypeEntry\n  isExternal: false\n  name: AssemblyName\n  nameWithType: TypeEntry.AssemblyName\n  fullName: TypeEntry.AssemblyName\n- uid: System.Runtime.Remoting.TypeEntry.TypeName\n  parent: System.Runtime.Remoting.TypeEntry\n  isExternal: false\n  name: TypeName\n  nameWithType: TypeEntry.TypeName\n  fullName: TypeEntry.TypeName\n"}