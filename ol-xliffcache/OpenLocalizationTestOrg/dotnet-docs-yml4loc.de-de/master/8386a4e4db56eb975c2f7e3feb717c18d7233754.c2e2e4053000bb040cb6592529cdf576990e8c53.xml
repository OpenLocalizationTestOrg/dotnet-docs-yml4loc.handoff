{"nodes":[{"content":"Specifies the version of the assembly being attributed.","nodes":[{"pos":[0,55],"content":"Specifies the version of the assembly being attributed.","nodes":[{"content":"Specifies the version of the assembly being attributed.","pos":[0,55]}]}],"pos":[577,633],"yaml":true},{"content":"The <xref:System.Reflection.AssemblyVersionAttribute> attribute is used to assign a version number to an assembly. That version number is then stored with the assembly's metadata.  \n  \n The assembly version number is part of an assembly's identity and plays a key part in binding to the assembly and in version policy. The default version policy for the runtime is that applications run only with the versions they were built and tested with, unless overridden by explicit version policy in configuration files (the application configuration file, the publisher policy file, and the computer's administrator configuration file). See [Assemblies in the Common Language Runtime](~/docs/framework/app-domains/assemblies-in-the-common-language-runtime.md) for more information.  \n  \n> [!NOTE]\n>  Version checking only occurs with strong-named assemblies.  \n  \n The version number has four parts, as follows:  \n  \n \\<major version>.\\<minor version>.\\<build number>.\\<revision>  \n  \n> [!IMPORTANT]\n>  All components of the version must be integers greater than or equal to 0. Metadata restricts the major, minor, build, and revision components for an assembly to a maximum value of <xref:System.UInt16.MaxValue?displayProperty=fullName> - 1. If a component exceeds this value, a compilation error occurs.  \n  \n You can specify all the values or you can accept the default build number, revision number, or both by using an asterisk (*). For example, `[assembly:AssemblyVersion(\"2.3.25.1\")]` indicates 2 as the major version, 3 as the minor version, 25 as the build number, and 1 as the revision number. A version number such as `[assembly:AssemblyVersion(\"1.2.*\")]` specifies 1 as the major version, 2 as the minor version, and accepts the default build and revision numbers. A version number such as `[assembly:AssemblyVersion(\"1.2.15.*\")]` specifies 1 as the major version, 2 as the minor version, 15 as the build number, and accepts the default revision number. The default build number increments daily. The default revision number is the number of seconds since midnight local time (without taking into account time zone adjustments for daylight saving time), divided by 2.  \n  \n> [!NOTE]\n>  If you specify an asterisk for the build number, you cannot specify a revision number.  \n  \n The assembly major and minor versions are used as the type library version number when the assembly is exported. Some COM hosts do not accept type libraries with the version number 0.0. Therefore, if you want to expose an assembly to COM clients, set the assembly version explicitly to 1.0 in the `AssemblyVersionAttribute` page for projects created outside [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] and with no `AssemblyVersionAttribute` specified. Do this even when the assembly version is 0.0. All projects created in [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] have a default assembly version of 1.0.*.  \n  \n To get the name of an assembly you have loaded, call <xref:System.Reflection.Assembly.GetName%2A> on the assembly to get an <xref:System.Reflection.AssemblyName>, and then get the <xref:System.Reflection.AssemblyName.Version%2A> property. To get the name of an assembly you have not loaded, call <xref:System.Reflection.AssemblyName.GetAssemblyName%2A> from your client application to check the assembly version that your application uses.  \n  \n The <xref:System.Reflection.AssemblyVersionAttribute> attribute can only be applied once. Some Visual Studio project templates already include the attribute. In those projects, adding the attribute in code causes a compiler error.","nodes":[{"pos":[0,179],"content":"The <xref:System.Reflection.AssemblyVersionAttribute> attribute is used to assign a version number to an assembly. That version number is then stored with the assembly's metadata.","nodes":[{"content":"The <xref:System.Reflection.AssemblyVersionAttribute> attribute is used to assign a version number to an assembly. That version number is then stored with the assembly's metadata.","pos":[0,179],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.AssemblyVersionAttribute&gt;</ph> attribute is used to assign a version number to an assembly.","pos":[0,114],"source":"The <xref:System.Reflection.AssemblyVersionAttribute> attribute is used to assign a version number to an assembly."},{"content":"That version number is then stored with the assembly's metadata.","pos":[115,179]}]}]},{"pos":[186,773],"content":"The assembly version number is part of an assembly's identity and plays a key part in binding to the assembly and in version policy. The default version policy for the runtime is that applications run only with the versions they were built and tested with, unless overridden by explicit version policy in configuration files (the application configuration file, the publisher policy file, and the computer's administrator configuration file). See [Assemblies in the Common Language Runtime](~/docs/framework/app-domains/assemblies-in-the-common-language-runtime.md) for more information.","nodes":[{"content":"The assembly version number is part of an assembly's identity and plays a key part in binding to the assembly and in version policy.","pos":[0,132]},{"content":"The default version policy for the runtime is that applications run only with the versions they were built and tested with, unless overridden by explicit version policy in configuration files (the application configuration file, the publisher policy file, and the computer's administrator configuration file).","pos":[133,442]},{"content":"See <bpt id=\"p1\">[</bpt>Assemblies in the Common Language Runtime<ept id=\"p1\">](~/docs/framework/app-domains/assemblies-in-the-common-language-runtime.md)</ept> for more information.","pos":[443,587],"source":" See [Assemblies in the Common Language Runtime](~/docs/framework/app-domains/assemblies-in-the-common-language-runtime.md) for more information."}]},{"pos":[781,850],"content":"[!NOTE]\n Version checking only occurs with strong-named assemblies.","leadings":["","> "],"nodes":[{"content":"Version checking only occurs with strong-named assemblies.","pos":[9,67]}]},{"pos":[857,903],"content":"The version number has four parts, as follows:","nodes":[{"content":"The version number has four parts, as follows:","pos":[0,46]}]},{"pos":[910,971],"content":"\\<major version>.\\<minor version>.\\<build number>.\\<revision>","nodes":[{"content":"<ph id=\"ph1\">\\&lt;</ph>major version&gt;.<ph id=\"ph2\">\\&lt;</ph>minor version&gt;.<ph id=\"ph3\">\\&lt;</ph>build number&gt;.<ph id=\"ph4\">\\&lt;</ph>revision&gt;","pos":[0,61],"source":"\\<major version>.\\<minor version>.\\<build number>.\\<revision>"}]},{"pos":[979,1298],"content":"[!IMPORTANT]\n All components of the version must be integers greater than or equal to 0. Metadata restricts the major, minor, build, and revision components for an assembly to a maximum value of <xref:System.UInt16.MaxValue?displayProperty=fullName> - 1. If a component exceeds this value, a compilation error occurs.","leadings":["","> "],"nodes":[{"content":" All components of the version must be integers greater than or equal to 0. Metadata restricts the major, minor, build, and revision components for an assembly to a maximum value of <xref:System.UInt16.MaxValue?displayProperty=fullName> - 1. If a component exceeds this value, a compilation error occurs.","pos":[13,317],"nodes":[{"content":"All components of the version must be integers greater than or equal to 0.","pos":[1,75]},{"content":"Metadata restricts the major, minor, build, and revision components for an assembly to a maximum value of <ph id=\"ph1\">&lt;xref:System.UInt16.MaxValue?displayProperty=fullName&gt;</ph> - 1.","pos":[76,241],"source":" Metadata restricts the major, minor, build, and revision components for an assembly to a maximum value of <xref:System.UInt16.MaxValue?displayProperty=fullName> - 1."},{"content":"If a component exceeds this value, a compilation error occurs.","pos":[242,304]}]}]},{"pos":[1305,2172],"content":"You can specify all the values or you can accept the default build number, revision number, or both by using an asterisk (*). For example, `[assembly:AssemblyVersion(\"2.3.25.1\")]` indicates 2 as the major version, 3 as the minor version, 25 as the build number, and 1 as the revision number. A version number such as `[assembly:AssemblyVersion(\"1.2.*\")]` specifies 1 as the major version, 2 as the minor version, and accepts the default build and revision numbers. A version number such as `[assembly:AssemblyVersion(\"1.2.15.*\")]` specifies 1 as the major version, 2 as the minor version, 15 as the build number, and accepts the default revision number. The default build number increments daily. The default revision number is the number of seconds since midnight local time (without taking into account time zone adjustments for daylight saving time), divided by 2.","nodes":[{"content":"You can specify all the values or you can accept the default build number, revision number, or both by using an asterisk (*).","pos":[0,125]},{"content":"For example, <ph id=\"ph1\">`[assembly:AssemblyVersion(\"2.3.25.1\")]`</ph> indicates 2 as the major version, 3 as the minor version, 25 as the build number, and 1 as the revision number.","pos":[126,291],"source":" For example, `[assembly:AssemblyVersion(\"2.3.25.1\")]` indicates 2 as the major version, 3 as the minor version, 25 as the build number, and 1 as the revision number."},{"content":"A version number such as <ph id=\"ph1\">`[assembly:AssemblyVersion(\"1.2.*\")]`</ph> specifies 1 as the major version, 2 as the minor version, and accepts the default build and revision numbers.","pos":[292,464],"source":" A version number such as `[assembly:AssemblyVersion(\"1.2.*\")]` specifies 1 as the major version, 2 as the minor version, and accepts the default build and revision numbers."},{"content":"A version number such as <ph id=\"ph1\">`[assembly:AssemblyVersion(\"1.2.15.*\")]`</ph> specifies 1 as the major version, 2 as the minor version, 15 as the build number, and accepts the default revision number.","pos":[465,653],"source":" A version number such as `[assembly:AssemblyVersion(\"1.2.15.*\")]` specifies 1 as the major version, 2 as the minor version, 15 as the build number, and accepts the default revision number."},{"content":"The default build number increments daily.","pos":[654,696]},{"content":"The default revision number is the number of seconds since midnight local time (without taking into account time zone adjustments for daylight saving time), divided by 2.","pos":[697,867]}]},{"pos":[2180,2277],"content":"[!NOTE]\n If you specify an asterisk for the build number, you cannot specify a revision number.","leadings":["","> "],"nodes":[{"content":"If you specify an asterisk for the build number, you cannot specify a revision number.","pos":[9,95]}]},{"pos":[2284,2908],"content":"The assembly major and minor versions are used as the type library version number when the assembly is exported. Some COM hosts do not accept type libraries with the version number 0.0. Therefore, if you want to expose an assembly to COM clients, set the assembly version explicitly to 1.0 in the `AssemblyVersionAttribute` page for projects created outside [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] and with no `AssemblyVersionAttribute` specified. Do this even when the assembly version is 0.0. All projects created in [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] have a default assembly version of 1.0.*.","nodes":[{"content":"The assembly major and minor versions are used as the type library version number when the assembly is exported.","pos":[0,112]},{"content":"Some COM hosts do not accept type libraries with the version number 0.0.","pos":[113,185]},{"content":"Therefore, if you want to expose an assembly to COM clients, set the assembly version explicitly to 1.0 in the <ph id=\"ph1\">`AssemblyVersionAttribute`</ph> page for projects created outside <ph id=\"ph2\">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]</ph> and with no <ph id=\"ph3\">`AssemblyVersionAttribute`</ph> specified.","pos":[186,459],"source":" Therefore, if you want to expose an assembly to COM clients, set the assembly version explicitly to 1.0 in the `AssemblyVersionAttribute` page for projects created outside [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] and with no `AssemblyVersionAttribute` specified."},{"content":"Do this even when the assembly version is 0.0.","pos":[460,506]},{"content":"All projects created in <ph id=\"ph1\">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]</ph> have a default assembly version of 1.0.*.","pos":[507,624],"source":" All projects created in [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] have a default assembly version of 1.0.*."}]},{"pos":[2915,3354],"content":"To get the name of an assembly you have loaded, call <xref:System.Reflection.Assembly.GetName%2A> on the assembly to get an <xref:System.Reflection.AssemblyName>, and then get the <xref:System.Reflection.AssemblyName.Version%2A> property. To get the name of an assembly you have not loaded, call <xref:System.Reflection.AssemblyName.GetAssemblyName%2A> from your client application to check the assembly version that your application uses.","nodes":[{"content":"To get the name of an assembly you have loaded, call <xref:System.Reflection.Assembly.GetName%2A> on the assembly to get an <xref:System.Reflection.AssemblyName>, and then get the <xref:System.Reflection.AssemblyName.Version%2A> property. To get the name of an assembly you have not loaded, call <xref:System.Reflection.AssemblyName.GetAssemblyName%2A> from your client application to check the assembly version that your application uses.","pos":[0,439],"nodes":[{"content":"To get the name of an assembly you have loaded, call <ph id=\"ph1\">&lt;xref:System.Reflection.Assembly.GetName%2A&gt;</ph> on the assembly to get an <ph id=\"ph2\">&lt;xref:System.Reflection.AssemblyName&gt;</ph>, and then get the <ph id=\"ph3\">&lt;xref:System.Reflection.AssemblyName.Version%2A&gt;</ph> property.","pos":[0,238],"source":"To get the name of an assembly you have loaded, call <xref:System.Reflection.Assembly.GetName%2A> on the assembly to get an <xref:System.Reflection.AssemblyName>, and then get the <xref:System.Reflection.AssemblyName.Version%2A> property."},{"content":"To get the name of an assembly you have not loaded, call <ph id=\"ph1\">&lt;xref:System.Reflection.AssemblyName.GetAssemblyName%2A&gt;</ph> from your client application to check the assembly version that your application uses.","pos":[239,439],"source":" To get the name of an assembly you have not loaded, call <xref:System.Reflection.AssemblyName.GetAssemblyName%2A> from your client application to check the assembly version that your application uses."}]}]},{"pos":[3361,3591],"content":"The <xref:System.Reflection.AssemblyVersionAttribute> attribute can only be applied once. Some Visual Studio project templates already include the attribute. In those projects, adding the attribute in code causes a compiler error.","nodes":[{"content":"The <xref:System.Reflection.AssemblyVersionAttribute> attribute can only be applied once. Some Visual Studio project templates already include the attribute. In those projects, adding the attribute in code causes a compiler error.","pos":[0,230],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.AssemblyVersionAttribute&gt;</ph> attribute can only be applied once.","pos":[0,89],"source":"The <xref:System.Reflection.AssemblyVersionAttribute> attribute can only be applied once."},{"content":"Some Visual Studio project templates already include the attribute.","pos":[90,157]},{"content":"In those projects, adding the attribute in code causes a compiler error.","pos":[158,230]}]}]}],"pos":[644,4271],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the `AssemblyVersionAttribute` class with the version number of the assembly being attributed.","nodes":[{"pos":[0,124],"content":"Initializes a new instance of the <ph id=\"ph1\">`AssemblyVersionAttribute`</ph> class with the version number of the assembly being attributed.","source":"Initializes a new instance of the `AssemblyVersionAttribute` class with the version number of the assembly being attributed."}],"pos":[10928,11053],"yaml":true},{"content":"The format of the `version` string is: `major`. `minor`. `build`. `revision`.  \n  \n When specifying a version, you have to at least specify `major`. If you specify `major` and `minor`, you can specify an asterisk (*) for `build`. This will cause `build` to be equal to the number of days since January 1, 2000 local time, and for `revision` to be equal to the number of seconds since midnight local time (without taking into account time zone adjustments for daylight saving time), divided by 2.  \n  \n If you specify `major`, `minor`, and `build`, you can specify an asterisk for `revision`. This will cause `revision` to be equal to the number of seconds since midnight local time, divided by 2.  \n  \n Examples of valid version strings include:  \n  \n 1  \n  \n 1.1  \n  \n 1.1.*  \n  \n 1.1.1  \n  \n 1.1.1.*  \n  \n 1.1.1.1","nodes":[{"pos":[0,77],"content":"The format of the `version` string is: `major`. `minor`. `build`. `revision`.","nodes":[{"content":"The format of the <ph id=\"ph1\">`version`</ph> string is: <ph id=\"ph2\">`major`</ph>.","pos":[0,47],"source":"The format of the `version` string is: `major`."},{"content":"<ph id=\"ph1\">`minor`</ph>.","pos":[48,56],"source":"`minor`."},{"content":"<ph id=\"ph1\">`build`</ph>.","pos":[57,65],"source":"`build`."},{"content":"<ph id=\"ph1\">`revision`</ph>.","pos":[66,77],"source":"`revision`."}]},{"pos":[84,495],"content":"When specifying a version, you have to at least specify `major`. If you specify `major` and `minor`, you can specify an asterisk (*) for `build`. This will cause `build` to be equal to the number of days since January 1, 2000 local time, and for `revision` to be equal to the number of seconds since midnight local time (without taking into account time zone adjustments for daylight saving time), divided by 2.","nodes":[{"content":"When specifying a version, you have to at least specify <ph id=\"ph1\">`major`</ph>.","pos":[0,64],"source":"When specifying a version, you have to at least specify `major`."},{"content":"If you specify <ph id=\"ph1\">`major`</ph> and <ph id=\"ph2\">`minor`</ph>, you can specify an asterisk (*) for <ph id=\"ph3\">`build`</ph>.","pos":[65,145],"source":" If you specify `major` and `minor`, you can specify an asterisk (*) for `build`."},{"content":"This will cause <ph id=\"ph1\">`build`</ph> to be equal to the number of days since January 1, 2000 local time, and for <ph id=\"ph2\">`revision`</ph> to be equal to the number of seconds since midnight local time (without taking into account time zone adjustments for daylight saving time), divided by 2.","pos":[146,411],"source":" This will cause `build` to be equal to the number of days since January 1, 2000 local time, and for `revision` to be equal to the number of seconds since midnight local time (without taking into account time zone adjustments for daylight saving time), divided by 2."}]},{"pos":[502,696],"content":"If you specify `major`, `minor`, and `build`, you can specify an asterisk for `revision`. This will cause `revision` to be equal to the number of seconds since midnight local time, divided by 2.","nodes":[{"content":"If you specify <ph id=\"ph1\">`major`</ph>, <ph id=\"ph2\">`minor`</ph>, and <ph id=\"ph3\">`build`</ph>, you can specify an asterisk for <ph id=\"ph4\">`revision`</ph>.","pos":[0,89],"source":"If you specify `major`, `minor`, and `build`, you can specify an asterisk for `revision`."},{"content":"This will cause <ph id=\"ph1\">`revision`</ph> to be equal to the number of seconds since midnight local time, divided by 2.","pos":[90,194],"source":" This will cause `revision` to be equal to the number of seconds since midnight local time, divided by 2."}]},{"pos":[703,745],"content":"Examples of valid version strings include:","nodes":[{"content":"Examples of valid version strings include:","pos":[0,42]}]},{"pos":[752,753],"content":"1","nodes":[{"content":"1","pos":[0,1]}]},{"pos":[760,763],"content":"1.1","nodes":[{"content":"1.1","pos":[0,3]}]},{"pos":[770,775],"content":"1.1.*","nodes":[{"content":"1.1.*","pos":[0,5]}]},{"pos":[782,787],"content":"1.1.1","nodes":[{"content":"1.1.1","pos":[0,5]}]},{"pos":[794,801],"content":"1.1.1.*","nodes":[{"content":"1.1.1.*","pos":[0,7]}]},{"pos":[808,815],"content":"1.1.1.1","nodes":[{"content":"1.1.1.1","pos":[0,7]}]}],"pos":[11064,11900],"yaml":true,"extradata":"MT"},{"content":"The version number of the attributed assembly.","nodes":[{"pos":[0,46],"content":"The version number of the attributed assembly.","nodes":[{"content":"The version number of the attributed assembly.","pos":[0,46]}]}],"pos":[12052,12099],"yaml":true},{"content":"Gets the version number of the attributed assembly.","nodes":[{"pos":[0,51],"content":"Gets the version number of the attributed assembly.","nodes":[{"content":"Gets the version number of the attributed assembly.","pos":[0,51]}]}],"pos":[13703,13755],"yaml":true},{"content":"A string containing the assembly version number.","nodes":[{"pos":[0,48],"content":"A string containing the assembly version number.","nodes":[{"content":"A string containing the assembly version number.","pos":[0,48]}]}],"pos":[13866,13915],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Reflection.AssemblyVersionAttribute\n  commentId: T:System.Reflection.AssemblyVersionAttribute\n  id: AssemblyVersionAttribute\n  children:\n  - System.Reflection.AssemblyVersionAttribute.#ctor(System.String)\n  - System.Reflection.AssemblyVersionAttribute.Version\n  langs:\n  - csharp\n  name: AssemblyVersionAttribute\n  nameWithType: AssemblyVersionAttribute\n  fullName: System.Reflection.AssemblyVersionAttribute\n  type: Class\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Reflection\n  summary: Specifies the version of the assembly being attributed.\n  remarks: \"The <xref:System.Reflection.AssemblyVersionAttribute> attribute is used to assign a version number to an assembly. That version number is then stored with the assembly's metadata.  \\n  \\n The assembly version number is part of an assembly's identity and plays a key part in binding to the assembly and in version policy. The default version policy for the runtime is that applications run only with the versions they were built and tested with, unless overridden by explicit version policy in configuration files (the application configuration file, the publisher policy file, and the computer's administrator configuration file). See [Assemblies in the Common Language Runtime](~/docs/framework/app-domains/assemblies-in-the-common-language-runtime.md) for more information.  \\n  \\n> [!NOTE]\\n>  Version checking only occurs with strong-named assemblies.  \\n  \\n The version number has four parts, as follows:  \\n  \\n \\\\<major version>.\\\\<minor version>.\\\\<build number>.\\\\<revision>  \\n  \\n> [!IMPORTANT]\\n>  All components of the version must be integers greater than or equal to 0. Metadata restricts the major, minor, build, and revision components for an assembly to a maximum value of <xref:System.UInt16.MaxValue?displayProperty=fullName> - 1. If a component exceeds this value, a compilation error occurs.  \\n  \\n You can specify all the values or you can accept the default build number, revision number, or both by using an asterisk (*). For example, `[assembly:AssemblyVersion(\\\"2.3.25.1\\\")]` indicates 2 as the major version, 3 as the minor version, 25 as the build number, and 1 as the revision number. A version number such as `[assembly:AssemblyVersion(\\\"1.2.*\\\")]` specifies 1 as the major version, 2 as the minor version, and accepts the default build and revision numbers. A version number such as `[assembly:AssemblyVersion(\\\"1.2.15.*\\\")]` specifies 1 as the major version, 2 as the minor version, 15 as the build number, and accepts the default revision number. The default build number increments daily. The default revision number is the number of seconds since midnight local time (without taking into account time zone adjustments for daylight saving time), divided by 2.  \\n  \\n> [!NOTE]\\n>  If you specify an asterisk for the build number, you cannot specify a revision number.  \\n  \\n The assembly major and minor versions are used as the type library version number when the assembly is exported. Some COM hosts do not accept type libraries with the version number 0.0. Therefore, if you want to expose an assembly to COM clients, set the assembly version explicitly to 1.0 in the `AssemblyVersionAttribute` page for projects created outside [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] and with no `AssemblyVersionAttribute` specified. Do this even when the assembly version is 0.0. All projects created in [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] have a default assembly version of 1.0.*.  \\n  \\n To get the name of an assembly you have loaded, call <xref:System.Reflection.Assembly.GetName%2A> on the assembly to get an <xref:System.Reflection.AssemblyName>, and then get the <xref:System.Reflection.AssemblyName.Version%2A> property. To get the name of an assembly you have not loaded, call <xref:System.Reflection.AssemblyName.GetAssemblyName%2A> from your client application to check the assembly version that your application uses.  \\n  \\n The <xref:System.Reflection.AssemblyVersionAttribute> attribute can only be applied once. Some Visual Studio project templates already include the attribute. In those projects, adding the attribute in code causes a compiler error.\"\n  example:\n  - \"The following example uses the <xref:System.Reflection.AssemblyVersionAttribute> attribute to assign a version number to an assembly. At compile time, this version information is stored with the assembly's metadata. At run time, the example retrieves the value of the <xref:System.Type.Assembly%2A?displayProperty=fullName> property on a type found in the assembly to get a reference to the executing assembly, and it retrieves the assembly's version information from the <xref:System.Reflection.AssemblyName.Version%2A> property of the <xref:System.Reflection.AssemblyName> object returned by the <xref:System.Reflection.Assembly.GetName%2A?displayProperty=fullName> method.  \\n  \\n [!code-csharp[System.Version.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Version.Class/cs/example1.cs#6)]\\n [!code-vb[System.Version.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Version.Class/vb/example1.vb#6)]\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Assembly, Inherited=false)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class AssemblyVersionAttribute : Attribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  implements: []\n  inheritedMembers:\n  - System.Attribute.Equals(System.Object)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetHashCode\n  - System.Attribute.IsDefaultAttribute\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.Match(System.Object)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Attribute.TypeId\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.AttributeUsageAttribute\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyVersionAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.AssemblyVersionAttribute.#ctor(System.String)\n  commentId: M:System.Reflection.AssemblyVersionAttribute.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Reflection.AssemblyVersionAttribute\n  langs:\n  - csharp\n  name: AssemblyVersionAttribute(String)\n  nameWithType: AssemblyVersionAttribute.AssemblyVersionAttribute(String)\n  fullName: AssemblyVersionAttribute.AssemblyVersionAttribute(String)\n  type: Constructor\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Reflection\n  summary: Initializes a new instance of the `AssemblyVersionAttribute` class with the version number of the assembly being attributed.\n  remarks: \"The format of the `version` string is: `major`. `minor`. `build`. `revision`.  \\n  \\n When specifying a version, you have to at least specify `major`. If you specify `major` and `minor`, you can specify an asterisk (*) for `build`. This will cause `build` to be equal to the number of days since January 1, 2000 local time, and for `revision` to be equal to the number of seconds since midnight local time (without taking into account time zone adjustments for daylight saving time), divided by 2.  \\n  \\n If you specify `major`, `minor`, and `build`, you can specify an asterisk for `revision`. This will cause `revision` to be equal to the number of seconds since midnight local time, divided by 2.  \\n  \\n Examples of valid version strings include:  \\n  \\n 1  \\n  \\n 1.1  \\n  \\n 1.1.*  \\n  \\n 1.1.1  \\n  \\n 1.1.1.*  \\n  \\n 1.1.1.1\"\n  syntax:\n    content: public AssemblyVersionAttribute (string version);\n    parameters:\n    - id: version\n      type: System.String\n      description: The version number of the attributed assembly.\n  overload: System.Reflection.AssemblyVersionAttribute.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyVersionAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.AssemblyVersionAttribute.Version\n  commentId: P:System.Reflection.AssemblyVersionAttribute.Version\n  id: Version\n  parent: System.Reflection.AssemblyVersionAttribute\n  langs:\n  - csharp\n  name: Version\n  nameWithType: AssemblyVersionAttribute.Version\n  fullName: AssemblyVersionAttribute.Version\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Reflection\n  summary: Gets the version number of the attributed assembly.\n  syntax:\n    content: public string Version { get; }\n    return:\n      type: System.String\n      description: A string containing the assembly version number.\n  overload: System.Reflection.AssemblyVersionAttribute.Version*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyVersionAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Attribute\n  parent: System\n  isExternal: false\n  name: Attribute\n  nameWithType: Attribute\n  fullName: System.Attribute\n- uid: System.Reflection.AssemblyVersionAttribute.#ctor(System.String)\n  parent: System.Reflection.AssemblyVersionAttribute\n  isExternal: false\n  name: AssemblyVersionAttribute(String)\n  nameWithType: AssemblyVersionAttribute.AssemblyVersionAttribute(String)\n  fullName: AssemblyVersionAttribute.AssemblyVersionAttribute(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.AssemblyVersionAttribute.Version\n  parent: System.Reflection.AssemblyVersionAttribute\n  isExternal: false\n  name: Version\n  nameWithType: AssemblyVersionAttribute.Version\n  fullName: AssemblyVersionAttribute.Version\n- uid: System.Reflection.AssemblyVersionAttribute.#ctor*\n  parent: System.Reflection.AssemblyVersionAttribute\n  isExternal: false\n  name: AssemblyVersionAttribute\n  nameWithType: AssemblyVersionAttribute.AssemblyVersionAttribute\n  fullName: AssemblyVersionAttribute.AssemblyVersionAttribute\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyVersionAttribute.xml\n- uid: System.Reflection.AssemblyVersionAttribute.Version*\n  parent: System.Reflection.AssemblyVersionAttribute\n  isExternal: false\n  name: Version\n  nameWithType: AssemblyVersionAttribute.Version\n  fullName: AssemblyVersionAttribute.Version\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/AssemblyVersionAttribute.xml\n- uid: System.Attribute.Equals(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Attribute.Equals(Object)\n  fullName: Attribute.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Attribute.GetHashCode\n  parent: System.Attribute\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Attribute.GetHashCode()\n  fullName: Attribute.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type)\n  fullName: Attribute.GetCustomAttribute(Module, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type)\n  fullName: Attribute.GetCustomAttributes(Module, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module)\n  nameWithType: Attribute.GetCustomAttributes(Module)\n  fullName: Attribute.GetCustomAttributes(Module)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo)\n  fullName: Attribute.GetCustomAttributes(MemberInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly)\n  nameWithType: Attribute.GetCustomAttributes(Assembly)\n  fullName: Attribute.GetCustomAttributes(Assembly)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type)\n- uid: System.Attribute.IsDefaultAttribute\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefaultAttribute()\n  nameWithType: Attribute.IsDefaultAttribute()\n  fullName: Attribute.IsDefaultAttribute()\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Module, Type, Boolean)\n  fullName: Attribute.IsDefined(Module, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(MemberInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)\n  fullName: Attribute.IsDefined(Assembly, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type)\n  fullName: Attribute.IsDefined(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type)\n  nameWithType: Attribute.IsDefined(Module, Type)\n  fullName: Attribute.IsDefined(Module, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type)\n  nameWithType: Attribute.IsDefined(Assembly, Type)\n  fullName: Attribute.IsDefined(Assembly, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type)\n  fullName: Attribute.IsDefined(ParameterInfo, Type)\n- uid: System.Attribute.Match(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Match(Object)\n  nameWithType: Attribute.Match(Object)\n  fullName: Attribute.Match(Object)\n- uid: System.Attribute.TypeId\n  parent: System.Attribute\n  isExternal: false\n  name: TypeId\n  nameWithType: Attribute.TypeId\n  fullName: Attribute.TypeId\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfoCount(UInt32)\n  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)\n  fullName: Attribute._Attribute.GetTypeInfoCount(UInt32)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n"}