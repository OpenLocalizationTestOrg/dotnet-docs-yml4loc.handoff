{"nodes":[{"content":"Provides a managed implementation of the Advanced Encryption Standard (AES) symmetric algorithm.","nodes":[{"pos":[0,96],"content":"Provides a managed implementation of the Advanced Encryption Standard (AES) symmetric algorithm.","nodes":[{"content":"Provides a managed implementation of the Advanced Encryption Standard (AES) symmetric algorithm.","pos":[0,96]}]}],"pos":[1446,1543],"yaml":true},{"content":"The AES algorithm is essentially the Rijndael symmetric algorithm with a fixed block size and iteration count. This class functions the same way as the <xref:System.Security.Cryptography.RijndaelManaged> class but limits blocks to 128 bits and does not allow feedback modes.  \n  \n> [!NOTE]\n>  If the Windows security policy setting for Federal Information Processing Standards (FIPS)-compliant algorithms is enabled, using this algorithm throws a <xref:System.Security.Cryptography.CryptographicException>.","nodes":[{"pos":[0,274],"content":"The AES algorithm is essentially the Rijndael symmetric algorithm with a fixed block size and iteration count. This class functions the same way as the <xref:System.Security.Cryptography.RijndaelManaged> class but limits blocks to 128 bits and does not allow feedback modes.","nodes":[{"content":"The AES algorithm is essentially the Rijndael symmetric algorithm with a fixed block size and iteration count. This class functions the same way as the <xref:System.Security.Cryptography.RijndaelManaged> class but limits blocks to 128 bits and does not allow feedback modes.","pos":[0,274],"nodes":[{"content":"The AES algorithm is essentially the Rijndael symmetric algorithm with a fixed block size and iteration count.","pos":[0,110]},{"content":"This class functions the same way as the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.RijndaelManaged&gt;</ph> class but limits blocks to 128 bits and does not allow feedback modes.","pos":[111,274],"source":" This class functions the same way as the <xref:System.Security.Cryptography.RijndaelManaged> class but limits blocks to 128 bits and does not allow feedback modes."}]}]},{"pos":[282,506],"content":"[!NOTE]\n If the Windows security policy setting for Federal Information Processing Standards (FIPS)-compliant algorithms is enabled, using this algorithm throws a <xref:System.Security.Cryptography.CryptographicException>.","leadings":["","> "],"nodes":[{"content":"If the Windows security policy setting for Federal Information Processing Standards (FIPS)-compliant algorithms is enabled, using this algorithm throws a <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.CryptographicException&gt;</ph>.","pos":[9,222],"source":" If the Windows security policy setting for Federal Information Processing Standards (FIPS)-compliant algorithms is enabled, using this algorithm throws a <xref:System.Security.Cryptography.CryptographicException>."}]}],"pos":[1554,2066],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.AesManaged\"></xref> class.","nodes":[{"pos":[0,101],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.AesManaged\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.AesManaged\"></xref> class."}],"pos":[5039,5141],"yaml":true},{"content":"The Windows security policy setting for FIPS is enabled.","nodes":[{"pos":[0,56],"content":"The Windows security policy setting for FIPS is enabled.","nodes":[{"content":"The Windows security policy setting for FIPS is enabled.","pos":[0,56]}]}],"pos":[5426,5483],"yaml":true},{"content":"This implementation is not part of the Windows Platform FIPS-validated cryptographic algorithms.","nodes":[{"pos":[0,96],"content":"This implementation is not part of the Windows Platform FIPS-validated cryptographic algorithms.","nodes":[{"content":"This implementation is not part of the Windows Platform FIPS-validated cryptographic algorithms.","pos":[0,96]}]}],"pos":[5593,5690],"yaml":true},{"content":"Creates a symmetric decryptor object using the current key and initialization vector (IV).","nodes":[{"pos":[0,90],"content":"Creates a symmetric decryptor object using the current key and initialization vector (IV).","nodes":[{"content":"Creates a symmetric decryptor object using the current key and initialization vector (IV).","pos":[0,90]}]}],"pos":[7703,7794],"yaml":true},{"content":"A symmetric decryptor object.","nodes":[{"pos":[0,29],"content":"A symmetric decryptor object.","nodes":[{"content":"A symmetric decryptor object.","pos":[0,29]}]}],"pos":[8007,8037],"yaml":true},{"content":"Creates a symmetric decryptor object using the specified key and initialization vector (IV).","nodes":[{"pos":[0,92],"content":"Creates a symmetric decryptor object using the specified key and initialization vector (IV).","nodes":[{"content":"Creates a symmetric decryptor object using the specified key and initialization vector (IV).","pos":[0,92]}]}],"pos":[9441,9534],"yaml":true},{"content":"The secret key to use for the symmetric algorithm.","nodes":[{"pos":[0,50],"content":"The secret key to use for the symmetric algorithm.","nodes":[{"content":"The secret key to use for the symmetric algorithm.","pos":[0,50]}]}],"pos":[10266,10317],"yaml":true},{"content":"The initialization vector to use for the symmetric algorithm.","nodes":[{"pos":[0,61],"content":"The initialization vector to use for the symmetric algorithm.","nodes":[{"content":"The initialization vector to use for the symmetric algorithm.","pos":[0,61]}]}],"pos":[10375,10437],"yaml":true},{"content":"A symmetric decryptor object.","nodes":[{"pos":[0,29],"content":"A symmetric decryptor object.","nodes":[{"content":"A symmetric decryptor object.","pos":[0,29]}]}],"pos":[10526,10556],"yaml":true},{"content":"<code>key</code> or <code>iv</code> is `null`.","nodes":[{"pos":[0,46],"content":"<ph id=\"ph1\">&lt;code&gt;key&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;iv&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>key</code> or <code>iv</code> is `null`."}],"pos":[10741,10788],"yaml":true},{"content":"<code>key</code> is invalid.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;key&lt;/code&gt;</ph> is invalid.","source":"<code>key</code> is invalid."}],"pos":[10882,10911],"yaml":true},{"content":"Creates a symmetric encryptor object using the current key and initialization vector (IV).","nodes":[{"pos":[0,90],"content":"Creates a symmetric encryptor object using the current key and initialization vector (IV).","nodes":[{"content":"Creates a symmetric encryptor object using the current key and initialization vector (IV).","pos":[0,90]}]}],"pos":[12140,12231],"yaml":true},{"content":"A symmetric encryptor object.","nodes":[{"pos":[0,29],"content":"A symmetric encryptor object.","nodes":[{"content":"A symmetric encryptor object.","pos":[0,29]}]}],"pos":[12444,12474],"yaml":true},{"content":"Creates a symmetric encryptor object using the specified key and initialization vector (IV).","nodes":[{"pos":[0,92],"content":"Creates a symmetric encryptor object using the specified key and initialization vector (IV).","nodes":[{"content":"Creates a symmetric encryptor object using the specified key and initialization vector (IV).","pos":[0,92]}]}],"pos":[13878,13971],"yaml":true},{"content":"The secret key to use for the symmetric algorithm.","nodes":[{"pos":[0,50],"content":"The secret key to use for the symmetric algorithm.","nodes":[{"content":"The secret key to use for the symmetric algorithm.","pos":[0,50]}]}],"pos":[14667,14718],"yaml":true},{"content":"The initialization vector to use for the symmetric algorithm.","nodes":[{"pos":[0,61],"content":"The initialization vector to use for the symmetric algorithm.","nodes":[{"content":"The initialization vector to use for the symmetric algorithm.","pos":[0,61]}]}],"pos":[14776,14838],"yaml":true},{"content":"A symmetric encryptor object.","nodes":[{"pos":[0,29],"content":"A symmetric encryptor object.","nodes":[{"content":"A symmetric encryptor object.","pos":[0,29]}]}],"pos":[14927,14957],"yaml":true},{"content":"<code>key</code> or <code>iv</code> is `null`.","nodes":[{"pos":[0,46],"content":"<ph id=\"ph1\">&lt;code&gt;key&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;iv&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>key</code> or <code>iv</code> is `null`."}],"pos":[15142,15189],"yaml":true},{"content":"<code>key</code> is invalid.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;key&lt;/code&gt;</ph> is invalid.","source":"<code>key</code> is invalid."}],"pos":[15283,15312],"yaml":true},{"content":"Gets or sets the number of bits to use as feedback.","nodes":[{"pos":[0,51],"content":"Gets or sets the number of bits to use as feedback.","nodes":[{"content":"Gets or sets the number of bits to use as feedback.","pos":[0,51]}]}],"pos":[17860,17912],"yaml":true},{"content":"The maximum feedback size is 128 bits.  \n  \n> [!NOTE]\n>  Because this algorithm does not support feedback modes, using this property is discouraged.","nodes":[{"pos":[0,38],"content":"The maximum feedback size is 128 bits.","nodes":[{"content":"The maximum feedback size is 128 bits.","pos":[0,38]}]},{"pos":[46,148],"content":"[!NOTE]\n Because this algorithm does not support feedback modes, using this property is discouraged.","leadings":["","> "],"nodes":[{"content":"Because this algorithm does not support feedback modes, using this property is discouraged.","pos":[9,100]}]}],"pos":[17923,18077],"yaml":true,"extradata":"MT"},{"content":"The feedback size, in bits.","nodes":[{"pos":[0,27],"content":"The feedback size, in bits.","nodes":[{"content":"The feedback size, in bits.","pos":[0,27]}]}],"pos":[18203,18231],"yaml":true},{"content":"Generates a random initialization vector (IV) to use for the symmetric algorithm.","nodes":[{"pos":[0,81],"content":"Generates a random initialization vector (IV) to use for the symmetric algorithm.","nodes":[{"content":"Generates a random initialization vector (IV) to use for the symmetric algorithm.","pos":[0,81]}]}],"pos":[19473,19555],"yaml":true},{"content":"Generates a random key to use for the symmetric algorithm.","nodes":[{"pos":[0,58],"content":"Generates a random key to use for the symmetric algorithm.","nodes":[{"content":"Generates a random key to use for the symmetric algorithm.","pos":[0,58]}]}],"pos":[20919,20978],"yaml":true},{"content":"Gets or sets the initialization vector (IV) to use for the symmetric algorithm.","nodes":[{"pos":[0,79],"content":"Gets or sets the initialization vector (IV) to use for the symmetric algorithm.","nodes":[{"content":"Gets or sets the initialization vector (IV) to use for the symmetric algorithm.","pos":[0,79]}]}],"pos":[22286,22366],"yaml":true},{"content":"The initialization vector to use for the symmetric algorithm","nodes":[{"pos":[0,60],"content":"The initialization vector to use for the symmetric algorithm","nodes":[{"content":"The initialization vector to use for the symmetric algorithm","pos":[0,60]}]}],"pos":[22486,22547],"yaml":true},{"content":"Gets or sets the secret key used for the symmetric algorithm.","nodes":[{"pos":[0,61],"content":"Gets or sets the secret key used for the symmetric algorithm.","nodes":[{"content":"Gets or sets the secret key used for the symmetric algorithm.","pos":[0,61]}]}],"pos":[23733,23795],"yaml":true},{"content":"The key for the symmetric algorithm.","nodes":[{"pos":[0,36],"content":"The key for the symmetric algorithm.","nodes":[{"content":"The key for the symmetric algorithm.","pos":[0,36]}]}],"pos":[23916,23953],"yaml":true},{"content":"Gets or sets the size, in bits, of the secret key used for the symmetric algorithm.","nodes":[{"pos":[0,83],"content":"Gets or sets the size, in bits, of the secret key used for the symmetric algorithm.","nodes":[{"content":"Gets or sets the size, in bits, of the secret key used for the symmetric algorithm.","pos":[0,83]}]}],"pos":[25164,25248],"yaml":true},{"content":"The maximum size of the key is 256 bits.","nodes":[{"pos":[0,40],"content":"The maximum size of the key is 256 bits.","nodes":[{"content":"The maximum size of the key is 256 bits.","pos":[0,40]}]}],"pos":[25259,25300],"yaml":true,"extradata":"MT"},{"content":"The size, in bits, of the key used by the symmetric algorithm.","nodes":[{"pos":[0,62],"content":"The size, in bits, of the key used by the symmetric algorithm.","nodes":[{"content":"The size, in bits, of the key used by the symmetric algorithm.","pos":[0,62]}]}],"pos":[25421,25484],"yaml":true},{"content":"Gets or sets the mode for operation of the symmetric algorithm.","nodes":[{"pos":[0,63],"content":"Gets or sets the mode for operation of the symmetric algorithm.","nodes":[{"content":"Gets or sets the mode for operation of the symmetric algorithm.","pos":[0,63]}]}],"pos":[28445,28509],"yaml":true},{"content":"The <xref:System.Security.Cryptography.CipherMode.CFB> and <xref:System.Security.Cryptography.CipherMode.OFB> modes are not supported.","nodes":[{"pos":[0,134],"content":"The <xref:System.Security.Cryptography.CipherMode.CFB> and <xref:System.Security.Cryptography.CipherMode.OFB> modes are not supported.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.CipherMode.CFB&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.CipherMode.OFB&gt;</ph> modes are not supported.","pos":[0,134],"source":"The <xref:System.Security.Cryptography.CipherMode.CFB> and <xref:System.Security.Cryptography.CipherMode.OFB> modes are not supported."}]}],"pos":[28520,28655],"yaml":true,"extradata":"MT"},{"content":"One of the enumeration values that specifies the block cipher mode to use for encryption. The default is <xref href=\"System.Security.Cryptography.CipherMode.CBC\"></xref>.","nodes":[{"pos":[0,170],"content":"One of the enumeration values that specifies the block cipher mode to use for encryption. The default is <xref href=\"System.Security.Cryptography.CipherMode.CBC\"></xref>.","nodes":[{"content":"One of the enumeration values that specifies the block cipher mode to use for encryption.","pos":[0,89]},{"content":"The default is <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.CipherMode.CBC\"&gt;&lt;/xref&gt;</ph>.","pos":[90,170],"source":" The default is <xref href=\"System.Security.Cryptography.CipherMode.CBC\"></xref>."}]}],"pos":[28836,29007],"yaml":true},{"content":"<xref href=\"System.Security.Cryptography.AesManaged.Mode\"></xref> is set to <xref href=\"System.Security.Cryptography.CipherMode.CFB\"></xref> or <xref href=\"System.Security.Cryptography.CipherMode.OFB\"></xref>.","nodes":[{"pos":[0,209],"content":"<ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.AesManaged.Mode\"&gt;&lt;/xref&gt;</ph> is set to <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.CipherMode.CFB\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph3\">&lt;xref href=\"System.Security.Cryptography.CipherMode.OFB\"&gt;&lt;/xref&gt;</ph>.","source":"<xref href=\"System.Security.Cryptography.AesManaged.Mode\"></xref> is set to <xref href=\"System.Security.Cryptography.CipherMode.CFB\"></xref> or <xref href=\"System.Security.Cryptography.CipherMode.OFB\"></xref>."}],"pos":[29227,29437],"yaml":true},{"content":"Gets or sets the padding mode used in the symmetric algorithm.","nodes":[{"pos":[0,62],"content":"Gets or sets the padding mode used in the symmetric algorithm.","nodes":[{"content":"Gets or sets the padding mode used in the symmetric algorithm.","pos":[0,62]}]}],"pos":[30574,30637],"yaml":true},{"content":"One of the enumeration values that specifies the type of padding to apply. The default is <xref href=\"System.Security.Cryptography.PaddingMode.PKCS7\"></xref>.","nodes":[{"pos":[0,158],"content":"One of the enumeration values that specifies the type of padding to apply. The default is <xref href=\"System.Security.Cryptography.PaddingMode.PKCS7\"></xref>.","nodes":[{"content":"One of the enumeration values that specifies the type of padding to apply.","pos":[0,74]},{"content":"The default is <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.PaddingMode.PKCS7\"&gt;&lt;/xref&gt;</ph>.","pos":[75,158],"source":" The default is <xref href=\"System.Security.Cryptography.PaddingMode.PKCS7\"></xref>."}]}],"pos":[30823,30982],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.AesManaged\n  commentId: T:System.Security.Cryptography.AesManaged\n  id: AesManaged\n  children:\n  - System.Security.Cryptography.AesManaged.#ctor\n  - System.Security.Cryptography.AesManaged.BlockSize\n  - System.Security.Cryptography.AesManaged.CreateDecryptor\n  - System.Security.Cryptography.AesManaged.CreateDecryptor(System.Byte[],System.Byte[])\n  - System.Security.Cryptography.AesManaged.CreateEncryptor\n  - System.Security.Cryptography.AesManaged.CreateEncryptor(System.Byte[],System.Byte[])\n  - System.Security.Cryptography.AesManaged.Dispose(System.Boolean)\n  - System.Security.Cryptography.AesManaged.FeedbackSize\n  - System.Security.Cryptography.AesManaged.GenerateIV\n  - System.Security.Cryptography.AesManaged.GenerateKey\n  - System.Security.Cryptography.AesManaged.IV\n  - System.Security.Cryptography.AesManaged.Key\n  - System.Security.Cryptography.AesManaged.KeySize\n  - System.Security.Cryptography.AesManaged.LegalBlockSizes\n  - System.Security.Cryptography.AesManaged.LegalKeySizes\n  - System.Security.Cryptography.AesManaged.Mode\n  - System.Security.Cryptography.AesManaged.Padding\n  langs:\n  - csharp\n  name: AesManaged\n  nameWithType: AesManaged\n  fullName: System.Security.Cryptography.AesManaged\n  type: Class\n  assemblies:\n  - System.Core\n  - netstandard\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: Provides a managed implementation of the Advanced Encryption Standard (AES) symmetric algorithm.\n  remarks: \"The AES algorithm is essentially the Rijndael symmetric algorithm with a fixed block size and iteration count. This class functions the same way as the <xref:System.Security.Cryptography.RijndaelManaged> class but limits blocks to 128 bits and does not allow feedback modes.  \\n  \\n> [!NOTE]\\n>  If the Windows security policy setting for Federal Information Processing Standards (FIPS)-compliant algorithms is enabled, using this algorithm throws a <xref:System.Security.Cryptography.CryptographicException>.\"\n  example:\n  - \"The following example demonstrates how to encrypt and decrypt sample data using the <xref:System.Security.Cryptography.AesManaged> class.  \\n  \\n [!code-csharp[AesManaged#1](~/samples/snippets/csharp/VS_Snippets_CLR/aesmanaged/cs/program.cs#1)]\\n [!code-vb[AesManaged#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/aesmanaged/vb/program.vb#1)]\"\n  syntax:\n    content: 'public sealed class AesManaged : System.Security.Cryptography.Aes'\n  inheritance:\n  - System.Object\n  - System.Security.Cryptography.SymmetricAlgorithm\n  - System.Security.Cryptography.Aes\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.Cryptography.Aes.Create\n  - System.Security.Cryptography.Aes.Create(System.String)\n  - System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.Clear\n  - System.Security.Cryptography.SymmetricAlgorithm.Dispose\n  - System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.IVValue\n  - System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.KeyValue\n  - System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizesValue\n  - System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizesValue\n  - System.Security.Cryptography.SymmetricAlgorithm.ModeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.PaddingValue\n  - System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize(System.Int32)\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesManaged.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.AesManaged.#ctor\n  commentId: M:System.Security.Cryptography.AesManaged.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.AesManaged\n  langs:\n  - csharp\n  name: AesManaged()\n  nameWithType: AesManaged.AesManaged()\n  fullName: AesManaged.AesManaged()\n  type: Constructor\n  assemblies:\n  - System.Core\n  - netstandard\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.AesManaged\"></xref> class.\n  syntax:\n    content: public AesManaged ();\n    parameters: []\n  overload: System.Security.Cryptography.AesManaged.#ctor*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: The Windows security policy setting for FIPS is enabled.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: This implementation is not part of the Windows Platform FIPS-validated cryptographic algorithms.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesManaged.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.AesManaged.BlockSize\n  commentId: P:System.Security.Cryptography.AesManaged.BlockSize\n  id: BlockSize\n  parent: System.Security.Cryptography.AesManaged\n  langs:\n  - csharp\n  name: BlockSize\n  nameWithType: AesManaged.BlockSize\n  fullName: AesManaged.BlockSize\n  type: Property\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override int BlockSize { get; set; }\n    return:\n      type: System.Int32\n      description: ''\n  overload: System.Security.Cryptography.AesManaged.BlockSize*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesManaged.xml\n- uid: System.Security.Cryptography.AesManaged.CreateDecryptor\n  commentId: M:System.Security.Cryptography.AesManaged.CreateDecryptor\n  id: CreateDecryptor\n  parent: System.Security.Cryptography.AesManaged\n  langs:\n  - csharp\n  name: CreateDecryptor()\n  nameWithType: AesManaged.CreateDecryptor()\n  fullName: AesManaged.CreateDecryptor()\n  type: Method\n  assemblies:\n  - System.Core\n  - netstandard\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: Creates a symmetric decryptor object using the current key and initialization vector (IV).\n  syntax:\n    content: public override System.Security.Cryptography.ICryptoTransform CreateDecryptor ();\n    parameters: []\n    return:\n      type: System.Security.Cryptography.ICryptoTransform\n      description: A symmetric decryptor object.\n  overload: System.Security.Cryptography.AesManaged.CreateDecryptor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesManaged.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.AesManaged.CreateDecryptor(System.Byte[],System.Byte[])\n  commentId: M:System.Security.Cryptography.AesManaged.CreateDecryptor(System.Byte[],System.Byte[])\n  id: CreateDecryptor(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.AesManaged\n  langs:\n  - csharp\n  name: CreateDecryptor(Byte[], Byte[])\n  nameWithType: AesManaged.CreateDecryptor(Byte[], Byte[])\n  fullName: AesManaged.CreateDecryptor(Byte[], Byte[])\n  type: Method\n  assemblies:\n  - System.Core\n  - netstandard\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: Creates a symmetric decryptor object using the specified key and initialization vector (IV).\n  remarks: ''\n  example:\n  - \"The following example shows how to use the <xref:System.Security.Cryptography.AesManaged.CreateDecryptor%2A?displayProperty=fullName> method to decrypt an encrypted message. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.AesManaged> class.  \\n  \\n [!code-csharp[AesManaged#3](~/samples/snippets/csharp/VS_Snippets_CLR/aesmanaged/cs/program.cs#3)]\\n [!code-vb[AesManaged#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/aesmanaged/vb/program.vb#3)]\"\n  syntax:\n    content: public override System.Security.Cryptography.ICryptoTransform CreateDecryptor (byte[] key, byte[] iv);\n    parameters:\n    - id: key\n      type: System.Byte[]\n      description: The secret key to use for the symmetric algorithm.\n    - id: iv\n      type: System.Byte[]\n      description: The initialization vector to use for the symmetric algorithm.\n    return:\n      type: System.Security.Cryptography.ICryptoTransform\n      description: A symmetric decryptor object.\n  overload: System.Security.Cryptography.AesManaged.CreateDecryptor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>key</code> or <code>iv</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>key</code> is invalid.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesManaged.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.AesManaged.CreateEncryptor\n  commentId: M:System.Security.Cryptography.AesManaged.CreateEncryptor\n  id: CreateEncryptor\n  parent: System.Security.Cryptography.AesManaged\n  langs:\n  - csharp\n  name: CreateEncryptor()\n  nameWithType: AesManaged.CreateEncryptor()\n  fullName: AesManaged.CreateEncryptor()\n  type: Method\n  assemblies:\n  - System.Core\n  - netstandard\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: Creates a symmetric encryptor object using the current key and initialization vector (IV).\n  syntax:\n    content: public override System.Security.Cryptography.ICryptoTransform CreateEncryptor ();\n    parameters: []\n    return:\n      type: System.Security.Cryptography.ICryptoTransform\n      description: A symmetric encryptor object.\n  overload: System.Security.Cryptography.AesManaged.CreateEncryptor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesManaged.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.AesManaged.CreateEncryptor(System.Byte[],System.Byte[])\n  commentId: M:System.Security.Cryptography.AesManaged.CreateEncryptor(System.Byte[],System.Byte[])\n  id: CreateEncryptor(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.AesManaged\n  langs:\n  - csharp\n  name: CreateEncryptor(Byte[], Byte[])\n  nameWithType: AesManaged.CreateEncryptor(Byte[], Byte[])\n  fullName: AesManaged.CreateEncryptor(Byte[], Byte[])\n  type: Method\n  assemblies:\n  - System.Core\n  - netstandard\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: Creates a symmetric encryptor object using the specified key and initialization vector (IV).\n  remarks: ''\n  example:\n  - \"The following example shows how to use the <xref:System.Security.Cryptography.AesManaged.CreateEncryptor%2A> method to encrypt a message. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.AesManaged> class.  \\n  \\n [!code-csharp[AesManaged#2](~/samples/snippets/csharp/VS_Snippets_CLR/aesmanaged/cs/program.cs#2)]\\n [!code-vb[AesManaged#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/aesmanaged/vb/program.vb#2)]\"\n  syntax:\n    content: public override System.Security.Cryptography.ICryptoTransform CreateEncryptor (byte[] key, byte[] iv);\n    parameters:\n    - id: key\n      type: System.Byte[]\n      description: The secret key to use for the symmetric algorithm.\n    - id: iv\n      type: System.Byte[]\n      description: The initialization vector to use for the symmetric algorithm.\n    return:\n      type: System.Security.Cryptography.ICryptoTransform\n      description: A symmetric encryptor object.\n  overload: System.Security.Cryptography.AesManaged.CreateEncryptor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>key</code> or <code>iv</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>key</code> is invalid.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesManaged.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.AesManaged.Dispose(System.Boolean)\n  commentId: M:System.Security.Cryptography.AesManaged.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Security.Cryptography.AesManaged\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: AesManaged.Dispose(Boolean)\n  fullName: AesManaged.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Core\n  - netstandard\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: ''\n  overload: System.Security.Cryptography.AesManaged.Dispose*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesManaged.xml\n- uid: System.Security.Cryptography.AesManaged.FeedbackSize\n  commentId: P:System.Security.Cryptography.AesManaged.FeedbackSize\n  id: FeedbackSize\n  parent: System.Security.Cryptography.AesManaged\n  langs:\n  - csharp\n  name: FeedbackSize\n  nameWithType: AesManaged.FeedbackSize\n  fullName: AesManaged.FeedbackSize\n  type: Property\n  assemblies:\n  - System.Core\n  - netstandard\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: Gets or sets the number of bits to use as feedback.\n  remarks: \"The maximum feedback size is 128 bits.  \\n  \\n> [!NOTE]\\n>  Because this algorithm does not support feedback modes, using this property is discouraged.\"\n  syntax:\n    content: public override int FeedbackSize { get; set; }\n    return:\n      type: System.Int32\n      description: The feedback size, in bits.\n  overload: System.Security.Cryptography.AesManaged.FeedbackSize*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesManaged.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.AesManaged.GenerateIV\n  commentId: M:System.Security.Cryptography.AesManaged.GenerateIV\n  id: GenerateIV\n  parent: System.Security.Cryptography.AesManaged\n  langs:\n  - csharp\n  name: GenerateIV()\n  nameWithType: AesManaged.GenerateIV()\n  fullName: AesManaged.GenerateIV()\n  type: Method\n  assemblies:\n  - System.Core\n  - netstandard\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: Generates a random initialization vector (IV) to use for the symmetric algorithm.\n  syntax:\n    content: public override void GenerateIV ();\n    parameters: []\n  overload: System.Security.Cryptography.AesManaged.GenerateIV*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesManaged.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.AesManaged.GenerateKey\n  commentId: M:System.Security.Cryptography.AesManaged.GenerateKey\n  id: GenerateKey\n  parent: System.Security.Cryptography.AesManaged\n  langs:\n  - csharp\n  name: GenerateKey()\n  nameWithType: AesManaged.GenerateKey()\n  fullName: AesManaged.GenerateKey()\n  type: Method\n  assemblies:\n  - System.Core\n  - netstandard\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: Generates a random key to use for the symmetric algorithm.\n  syntax:\n    content: public override void GenerateKey ();\n    parameters: []\n  overload: System.Security.Cryptography.AesManaged.GenerateKey*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesManaged.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.AesManaged.IV\n  commentId: P:System.Security.Cryptography.AesManaged.IV\n  id: IV\n  parent: System.Security.Cryptography.AesManaged\n  langs:\n  - csharp\n  name: IV\n  nameWithType: AesManaged.IV\n  fullName: AesManaged.IV\n  type: Property\n  assemblies:\n  - System.Core\n  - netstandard\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: Gets or sets the initialization vector (IV) to use for the symmetric algorithm.\n  syntax:\n    content: public override byte[] IV { get; set; }\n    return:\n      type: System.Byte[]\n      description: The initialization vector to use for the symmetric algorithm\n  overload: System.Security.Cryptography.AesManaged.IV*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesManaged.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.AesManaged.Key\n  commentId: P:System.Security.Cryptography.AesManaged.Key\n  id: Key\n  parent: System.Security.Cryptography.AesManaged\n  langs:\n  - csharp\n  name: Key\n  nameWithType: AesManaged.Key\n  fullName: AesManaged.Key\n  type: Property\n  assemblies:\n  - System.Core\n  - netstandard\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: Gets or sets the secret key used for the symmetric algorithm.\n  syntax:\n    content: public override byte[] Key { get; set; }\n    return:\n      type: System.Byte[]\n      description: The key for the symmetric algorithm.\n  overload: System.Security.Cryptography.AesManaged.Key*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesManaged.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.AesManaged.KeySize\n  commentId: P:System.Security.Cryptography.AesManaged.KeySize\n  id: KeySize\n  parent: System.Security.Cryptography.AesManaged\n  langs:\n  - csharp\n  name: KeySize\n  nameWithType: AesManaged.KeySize\n  fullName: AesManaged.KeySize\n  type: Property\n  assemblies:\n  - System.Core\n  - netstandard\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: Gets or sets the size, in bits, of the secret key used for the symmetric algorithm.\n  remarks: The maximum size of the key is 256 bits.\n  syntax:\n    content: public override int KeySize { get; set; }\n    return:\n      type: System.Int32\n      description: The size, in bits, of the key used by the symmetric algorithm.\n  overload: System.Security.Cryptography.AesManaged.KeySize*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesManaged.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.AesManaged.LegalBlockSizes\n  commentId: P:System.Security.Cryptography.AesManaged.LegalBlockSizes\n  id: LegalBlockSizes\n  parent: System.Security.Cryptography.AesManaged\n  langs:\n  - csharp\n  name: LegalBlockSizes\n  nameWithType: AesManaged.LegalBlockSizes\n  fullName: AesManaged.LegalBlockSizes\n  type: Property\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override System.Security.Cryptography.KeySizes[] LegalBlockSizes { get; }\n    return:\n      type: System.Security.Cryptography.KeySizes[]\n      description: ''\n  overload: System.Security.Cryptography.AesManaged.LegalBlockSizes*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesManaged.xml\n- uid: System.Security.Cryptography.AesManaged.LegalKeySizes\n  commentId: P:System.Security.Cryptography.AesManaged.LegalKeySizes\n  id: LegalKeySizes\n  parent: System.Security.Cryptography.AesManaged\n  langs:\n  - csharp\n  name: LegalKeySizes\n  nameWithType: AesManaged.LegalKeySizes\n  fullName: AesManaged.LegalKeySizes\n  type: Property\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override System.Security.Cryptography.KeySizes[] LegalKeySizes { get; }\n    return:\n      type: System.Security.Cryptography.KeySizes[]\n      description: ''\n  overload: System.Security.Cryptography.AesManaged.LegalKeySizes*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesManaged.xml\n- uid: System.Security.Cryptography.AesManaged.Mode\n  commentId: P:System.Security.Cryptography.AesManaged.Mode\n  id: Mode\n  parent: System.Security.Cryptography.AesManaged\n  langs:\n  - csharp\n  name: Mode\n  nameWithType: AesManaged.Mode\n  fullName: AesManaged.Mode\n  type: Property\n  assemblies:\n  - System.Core\n  - netstandard\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: Gets or sets the mode for operation of the symmetric algorithm.\n  remarks: The <xref:System.Security.Cryptography.CipherMode.CFB> and <xref:System.Security.Cryptography.CipherMode.OFB> modes are not supported.\n  syntax:\n    content: public override System.Security.Cryptography.CipherMode Mode { get; set; }\n    return:\n      type: System.Security.Cryptography.CipherMode\n      description: One of the enumeration values that specifies the block cipher mode to use for encryption. The default is <xref href=\"System.Security.Cryptography.CipherMode.CBC\"></xref>.\n  overload: System.Security.Cryptography.AesManaged.Mode*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: <xref href=\"System.Security.Cryptography.AesManaged.Mode\"></xref> is set to <xref href=\"System.Security.Cryptography.CipherMode.CFB\"></xref> or <xref href=\"System.Security.Cryptography.CipherMode.OFB\"></xref>.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesManaged.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.AesManaged.Padding\n  commentId: P:System.Security.Cryptography.AesManaged.Padding\n  id: Padding\n  parent: System.Security.Cryptography.AesManaged\n  langs:\n  - csharp\n  name: Padding\n  nameWithType: AesManaged.Padding\n  fullName: AesManaged.Padding\n  type: Property\n  assemblies:\n  - System.Core\n  - netstandard\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: Gets or sets the padding mode used in the symmetric algorithm.\n  syntax:\n    content: public override System.Security.Cryptography.PaddingMode Padding { get; set; }\n    return:\n      type: System.Security.Cryptography.PaddingMode\n      description: One of the enumeration values that specifies the type of padding to apply. The default is <xref href=\"System.Security.Cryptography.PaddingMode.PKCS7\"></xref>.\n  overload: System.Security.Cryptography.AesManaged.Padding*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesManaged.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Security.Cryptography.Aes\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: Aes\n  nameWithType: Aes\n  fullName: System.Security.Cryptography.Aes\n- uid: System.Security.Cryptography.CryptographicException\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CryptographicException\n  nameWithType: CryptographicException\n  fullName: System.Security.Cryptography.CryptographicException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.Security.Cryptography.AesManaged.#ctor\n  parent: System.Security.Cryptography.AesManaged\n  isExternal: false\n  name: AesManaged()\n  nameWithType: AesManaged.AesManaged()\n  fullName: AesManaged.AesManaged()\n- uid: System.Security.Cryptography.AesManaged.BlockSize\n  parent: System.Security.Cryptography.AesManaged\n  isExternal: false\n  name: BlockSize\n  nameWithType: AesManaged.BlockSize\n  fullName: AesManaged.BlockSize\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.AesManaged.CreateDecryptor\n  parent: System.Security.Cryptography.AesManaged\n  isExternal: false\n  name: CreateDecryptor()\n  nameWithType: AesManaged.CreateDecryptor()\n  fullName: AesManaged.CreateDecryptor()\n- uid: System.Security.Cryptography.ICryptoTransform\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ICryptoTransform\n  nameWithType: ICryptoTransform\n  fullName: System.Security.Cryptography.ICryptoTransform\n- uid: System.Security.Cryptography.AesManaged.CreateDecryptor(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.AesManaged\n  isExternal: false\n  name: CreateDecryptor(Byte[], Byte[])\n  nameWithType: AesManaged.CreateDecryptor(Byte[], Byte[])\n  fullName: AesManaged.CreateDecryptor(Byte[], Byte[])\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Security.Cryptography.AesManaged.CreateEncryptor\n  parent: System.Security.Cryptography.AesManaged\n  isExternal: false\n  name: CreateEncryptor()\n  nameWithType: AesManaged.CreateEncryptor()\n  fullName: AesManaged.CreateEncryptor()\n- uid: System.Security.Cryptography.AesManaged.CreateEncryptor(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.AesManaged\n  isExternal: false\n  name: CreateEncryptor(Byte[], Byte[])\n  nameWithType: AesManaged.CreateEncryptor(Byte[], Byte[])\n  fullName: AesManaged.CreateEncryptor(Byte[], Byte[])\n- uid: System.Security.Cryptography.AesManaged.Dispose(System.Boolean)\n  parent: System.Security.Cryptography.AesManaged\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: AesManaged.Dispose(Boolean)\n  fullName: AesManaged.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.AesManaged.FeedbackSize\n  parent: System.Security.Cryptography.AesManaged\n  isExternal: false\n  name: FeedbackSize\n  nameWithType: AesManaged.FeedbackSize\n  fullName: AesManaged.FeedbackSize\n- uid: System.Security.Cryptography.AesManaged.GenerateIV\n  parent: System.Security.Cryptography.AesManaged\n  isExternal: false\n  name: GenerateIV()\n  nameWithType: AesManaged.GenerateIV()\n  fullName: AesManaged.GenerateIV()\n- uid: System.Security.Cryptography.AesManaged.GenerateKey\n  parent: System.Security.Cryptography.AesManaged\n  isExternal: false\n  name: GenerateKey()\n  nameWithType: AesManaged.GenerateKey()\n  fullName: AesManaged.GenerateKey()\n- uid: System.Security.Cryptography.AesManaged.IV\n  parent: System.Security.Cryptography.AesManaged\n  isExternal: false\n  name: IV\n  nameWithType: AesManaged.IV\n  fullName: AesManaged.IV\n- uid: System.Security.Cryptography.AesManaged.Key\n  parent: System.Security.Cryptography.AesManaged\n  isExternal: false\n  name: Key\n  nameWithType: AesManaged.Key\n  fullName: AesManaged.Key\n- uid: System.Security.Cryptography.AesManaged.KeySize\n  parent: System.Security.Cryptography.AesManaged\n  isExternal: false\n  name: KeySize\n  nameWithType: AesManaged.KeySize\n  fullName: AesManaged.KeySize\n- uid: System.Security.Cryptography.AesManaged.LegalBlockSizes\n  parent: System.Security.Cryptography.AesManaged\n  isExternal: false\n  name: LegalBlockSizes\n  nameWithType: AesManaged.LegalBlockSizes\n  fullName: AesManaged.LegalBlockSizes\n- uid: System.Security.Cryptography.KeySizes\n  name: KeySizes\n  nameWithType: KeySizes\n  fullName: System.Security.Cryptography.KeySizes\n- uid: System.Security.Cryptography.KeySizes[]\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: KeySizes[]\n  nameWithType: KeySizes[]\n  fullName: System.Security.Cryptography.KeySizes[]\n  spec.csharp:\n  - uid: System.Security.Cryptography.KeySizes\n    name: KeySizes\n    nameWithType: KeySizes\n    fullName: System.Security.Cryptography.KeySizes\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Security.Cryptography.AesManaged.LegalKeySizes\n  parent: System.Security.Cryptography.AesManaged\n  isExternal: false\n  name: LegalKeySizes\n  nameWithType: AesManaged.LegalKeySizes\n  fullName: AesManaged.LegalKeySizes\n- uid: System.Security.Cryptography.AesManaged.Mode\n  parent: System.Security.Cryptography.AesManaged\n  isExternal: false\n  name: Mode\n  nameWithType: AesManaged.Mode\n  fullName: AesManaged.Mode\n- uid: System.Security.Cryptography.CipherMode\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CipherMode\n  nameWithType: CipherMode\n  fullName: System.Security.Cryptography.CipherMode\n- uid: System.Security.Cryptography.AesManaged.Padding\n  parent: System.Security.Cryptography.AesManaged\n  isExternal: false\n  name: Padding\n  nameWithType: AesManaged.Padding\n  fullName: AesManaged.Padding\n- uid: System.Security.Cryptography.PaddingMode\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: PaddingMode\n  nameWithType: PaddingMode\n  fullName: System.Security.Cryptography.PaddingMode\n- uid: System.Security.Cryptography.AesManaged.#ctor*\n  parent: System.Security.Cryptography.AesManaged\n  isExternal: false\n  name: AesManaged\n  nameWithType: AesManaged.AesManaged\n  fullName: AesManaged.AesManaged\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesManaged.xml\n- uid: System.Security.Cryptography.AesManaged.BlockSize*\n  parent: System.Security.Cryptography.AesManaged\n  isExternal: false\n  name: BlockSize\n  nameWithType: AesManaged.BlockSize\n  fullName: AesManaged.BlockSize\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesManaged.xml\n- uid: System.Security.Cryptography.AesManaged.CreateDecryptor*\n  parent: System.Security.Cryptography.AesManaged\n  isExternal: false\n  name: CreateDecryptor\n  nameWithType: AesManaged.CreateDecryptor\n  fullName: AesManaged.CreateDecryptor\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  - xamarinios-10.8\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesManaged.xml\n- uid: System.Security.Cryptography.AesManaged.CreateEncryptor*\n  parent: System.Security.Cryptography.AesManaged\n  isExternal: false\n  name: CreateEncryptor\n  nameWithType: AesManaged.CreateEncryptor\n  fullName: AesManaged.CreateEncryptor\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  - xamarinios-10.8\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesManaged.xml\n- uid: System.Security.Cryptography.AesManaged.Dispose*\n  parent: System.Security.Cryptography.AesManaged\n  isExternal: false\n  name: Dispose\n  nameWithType: AesManaged.Dispose\n  fullName: AesManaged.Dispose\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesManaged.xml\n- uid: System.Security.Cryptography.AesManaged.FeedbackSize*\n  parent: System.Security.Cryptography.AesManaged\n  isExternal: false\n  name: FeedbackSize\n  nameWithType: AesManaged.FeedbackSize\n  fullName: AesManaged.FeedbackSize\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesManaged.xml\n- uid: System.Security.Cryptography.AesManaged.GenerateIV*\n  parent: System.Security.Cryptography.AesManaged\n  isExternal: false\n  name: GenerateIV\n  nameWithType: AesManaged.GenerateIV\n  fullName: AesManaged.GenerateIV\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesManaged.xml\n- uid: System.Security.Cryptography.AesManaged.GenerateKey*\n  parent: System.Security.Cryptography.AesManaged\n  isExternal: false\n  name: GenerateKey\n  nameWithType: AesManaged.GenerateKey\n  fullName: AesManaged.GenerateKey\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesManaged.xml\n- uid: System.Security.Cryptography.AesManaged.IV*\n  parent: System.Security.Cryptography.AesManaged\n  isExternal: false\n  name: IV\n  nameWithType: AesManaged.IV\n  fullName: AesManaged.IV\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesManaged.xml\n- uid: System.Security.Cryptography.AesManaged.Key*\n  parent: System.Security.Cryptography.AesManaged\n  isExternal: false\n  name: Key\n  nameWithType: AesManaged.Key\n  fullName: AesManaged.Key\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesManaged.xml\n- uid: System.Security.Cryptography.AesManaged.KeySize*\n  parent: System.Security.Cryptography.AesManaged\n  isExternal: false\n  name: KeySize\n  nameWithType: AesManaged.KeySize\n  fullName: AesManaged.KeySize\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesManaged.xml\n- uid: System.Security.Cryptography.AesManaged.LegalBlockSizes*\n  parent: System.Security.Cryptography.AesManaged\n  isExternal: false\n  name: LegalBlockSizes\n  nameWithType: AesManaged.LegalBlockSizes\n  fullName: AesManaged.LegalBlockSizes\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesManaged.xml\n- uid: System.Security.Cryptography.AesManaged.LegalKeySizes*\n  parent: System.Security.Cryptography.AesManaged\n  isExternal: false\n  name: LegalKeySizes\n  nameWithType: AesManaged.LegalKeySizes\n  fullName: AesManaged.LegalKeySizes\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesManaged.xml\n- uid: System.Security.Cryptography.AesManaged.Mode*\n  parent: System.Security.Cryptography.AesManaged\n  isExternal: false\n  name: Mode\n  nameWithType: AesManaged.Mode\n  fullName: AesManaged.Mode\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesManaged.xml\n- uid: System.Security.Cryptography.AesManaged.Padding*\n  parent: System.Security.Cryptography.AesManaged\n  isExternal: false\n  name: Padding\n  nameWithType: AesManaged.Padding\n  fullName: AesManaged.Padding\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/AesManaged.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: BlockSizeValue\n  nameWithType: SymmetricAlgorithm.BlockSizeValue\n  fullName: SymmetricAlgorithm.BlockSizeValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.Clear\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: Clear()\n  nameWithType: SymmetricAlgorithm.Clear()\n  fullName: SymmetricAlgorithm.Clear()\n- uid: System.Security.Cryptography.Aes.Create\n  parent: System.Security.Cryptography.Aes\n  isExternal: false\n  name: Create()\n  nameWithType: Aes.Create()\n  fullName: Aes.Create()\n- uid: System.Security.Cryptography.Aes.Create(System.String)\n  parent: System.Security.Cryptography.Aes\n  isExternal: false\n  name: Create(String)\n  nameWithType: Aes.Create(String)\n  fullName: Aes.Create(String)\n- uid: System.Security.Cryptography.SymmetricAlgorithm.Dispose\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: Dispose()\n  nameWithType: SymmetricAlgorithm.Dispose()\n  fullName: SymmetricAlgorithm.Dispose()\n- uid: System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: FeedbackSizeValue\n  nameWithType: SymmetricAlgorithm.FeedbackSizeValue\n  fullName: SymmetricAlgorithm.FeedbackSizeValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.IVValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: IVValue\n  nameWithType: SymmetricAlgorithm.IVValue\n  fullName: SymmetricAlgorithm.IVValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: KeySizeValue\n  nameWithType: SymmetricAlgorithm.KeySizeValue\n  fullName: SymmetricAlgorithm.KeySizeValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.KeyValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: KeyValue\n  nameWithType: SymmetricAlgorithm.KeyValue\n  fullName: SymmetricAlgorithm.KeyValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizesValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: LegalBlockSizesValue\n  nameWithType: SymmetricAlgorithm.LegalBlockSizesValue\n  fullName: SymmetricAlgorithm.LegalBlockSizesValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizesValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: LegalKeySizesValue\n  nameWithType: SymmetricAlgorithm.LegalKeySizesValue\n  fullName: SymmetricAlgorithm.LegalKeySizesValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.ModeValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: ModeValue\n  nameWithType: SymmetricAlgorithm.ModeValue\n  fullName: SymmetricAlgorithm.ModeValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.PaddingValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: PaddingValue\n  nameWithType: SymmetricAlgorithm.PaddingValue\n  fullName: SymmetricAlgorithm.PaddingValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize(System.Int32)\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: ValidKeySize(Int32)\n  nameWithType: SymmetricAlgorithm.ValidKeySize(Int32)\n  fullName: SymmetricAlgorithm.ValidKeySize(Int32)\n"}