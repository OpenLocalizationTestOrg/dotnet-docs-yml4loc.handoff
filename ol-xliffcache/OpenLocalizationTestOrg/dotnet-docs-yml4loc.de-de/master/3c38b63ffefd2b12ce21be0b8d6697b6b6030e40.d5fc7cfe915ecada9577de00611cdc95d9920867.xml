{"nodes":[{"content":"Defines a provider interface for connecting two server controls using an entire table of data.","nodes":[{"pos":[0,94],"content":"Defines a provider interface for connecting two server controls using an entire table of data.","nodes":[{"content":"Defines a provider interface for connecting two server controls using an entire table of data.","pos":[0,94]}]}],"pos":[603,698],"yaml":true},{"content":"This interface is designed to be used with Web Parts connections. In a Web Parts connection, two server controls that reside in a <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone establish a connection and share data, with one control acting as the consumer and the other control acting as a provider. The mechanism for sharing data in a Web Parts connection is an interface instance, which the provider serves to the consumer by means of a callback method. To establish a connection, the consumer and provider must both work with the same interface type for sharing data. If the consumer does not recognize the interface type sent by the provider, it is still possible to connect the controls by means of a transformer (a <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> object) that translates the interface instance sent by the provider into a type that the consumer recognizes. For details on connections, see <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> and [Web Parts Connections Overview](http://msdn.microsoft.com/library/d98cfd0f-ebd6-4871-89d5-abbd2cdef67b).  \n  \n The <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interface is a provider interface included with the Web Parts control set as a standard interface for creating connections based on a data table. You can also create custom interfaces to use with Web Parts connections, but in many data-driven Web applications, it is useful to create connections based on a common field (for details, see the <xref:System.Web.UI.WebControls.WebParts.IWebPartField> interface), row (for details, see the <xref:System.Web.UI.WebControls.WebParts.IWebPartRow> interface), or table from the data source. In a typical connection, a <xref:System.Web.UI.WebControls.WebParts.WebPart> control acting as a provider would implement the <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interface and provide an instance of the interface to consumers in a special callback method. For example, the provider might implement an <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interface for a table that contains financial performance data. Another <xref:System.Web.UI.WebControls.WebParts.WebPart> control acting as a consumer would define a special method to receive the interface instance, and could then extract the data and render a chart to display the resulting information.  \n  \n The <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interface has two exposed members. The <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A> property returns schema information about the data table encapsulated in a <xref:System.ComponentModel.PropertyDescriptorCollection> object. The <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData%2A> method declares a method that an implementer (such as a provider control) uses to retrieve the interface instance's table data when the callback method is invoked.","nodes":[{"pos":[0,1109],"content":"This interface is designed to be used with Web Parts connections. In a Web Parts connection, two server controls that reside in a <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone establish a connection and share data, with one control acting as the consumer and the other control acting as a provider. The mechanism for sharing data in a Web Parts connection is an interface instance, which the provider serves to the consumer by means of a callback method. To establish a connection, the consumer and provider must both work with the same interface type for sharing data. If the consumer does not recognize the interface type sent by the provider, it is still possible to connect the controls by means of a transformer (a <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> object) that translates the interface instance sent by the provider into a type that the consumer recognizes. For details on connections, see <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> and [Web Parts Connections Overview](http://msdn.microsoft.com/library/d98cfd0f-ebd6-4871-89d5-abbd2cdef67b).","nodes":[{"content":"This interface is designed to be used with Web Parts connections.","pos":[0,65]},{"content":"In a Web Parts connection, two server controls that reside in a <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase&gt;</ph> zone establish a connection and share data, with one control acting as the consumer and the other control acting as a provider.","pos":[66,315],"source":" In a Web Parts connection, two server controls that reside in a <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone establish a connection and share data, with one control acting as the consumer and the other control acting as a provider."},{"content":"The mechanism for sharing data in a Web Parts connection is an interface instance, which the provider serves to the consumer by means of a callback method.","pos":[316,471]},{"content":"To establish a connection, the consumer and provider must both work with the same interface type for sharing data.","pos":[472,586]},{"content":"If the consumer does not recognize the interface type sent by the provider, it is still possible to connect the controls by means of a transformer (a <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.WebParts.WebPartTransformer&gt;</ph> object) that translates the interface instance sent by the provider into a type that the consumer recognizes.","pos":[587,907],"source":" If the consumer does not recognize the interface type sent by the provider, it is still possible to connect the controls by means of a transformer (a <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> object) that translates the interface instance sent by the provider into a type that the consumer recognizes."},{"content":"For details on connections, see <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.WebParts.WebPartConnection&gt;</ph> and <bpt id=\"p1\">[</bpt>Web Parts Connections Overview<ept id=\"p1\">](http://msdn.microsoft.com/library/d98cfd0f-ebd6-4871-89d5-abbd2cdef67b)</ept>.","pos":[908,1109],"source":" For details on connections, see <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> and [Web Parts Connections Overview](http://msdn.microsoft.com/library/d98cfd0f-ebd6-4871-89d5-abbd2cdef67b)."}]},{"pos":[1116,2390],"content":"The <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interface is a provider interface included with the Web Parts control set as a standard interface for creating connections based on a data table. You can also create custom interfaces to use with Web Parts connections, but in many data-driven Web applications, it is useful to create connections based on a common field (for details, see the <xref:System.Web.UI.WebControls.WebParts.IWebPartField> interface), row (for details, see the <xref:System.Web.UI.WebControls.WebParts.IWebPartRow> interface), or table from the data source. In a typical connection, a <xref:System.Web.UI.WebControls.WebParts.WebPart> control acting as a provider would implement the <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interface and provide an instance of the interface to consumers in a special callback method. For example, the provider might implement an <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interface for a table that contains financial performance data. Another <xref:System.Web.UI.WebControls.WebParts.WebPart> control acting as a consumer would define a special method to receive the interface instance, and could then extract the data and render a chart to display the resulting information.","nodes":[{"content":"The <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interface is a provider interface included with the Web Parts control set as a standard interface for creating connections based on a data table. You can also create custom interfaces to use with Web Parts connections, but in many data-driven Web applications, it is useful to create connections based on a common field (for details, see the <xref:System.Web.UI.WebControls.WebParts.IWebPartField> interface), row (for details, see the <xref:System.Web.UI.WebControls.WebParts.IWebPartRow> interface), or table from the data source. In a typical connection, a <xref:System.Web.UI.WebControls.WebParts.WebPart> control acting as a provider would implement the <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interface and provide an instance of the interface to consumers in a special callback method. For example, the provider might implement an <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interface for a table that contains financial performance data. Another <xref:System.Web.UI.WebControls.WebParts.WebPart> control acting as a consumer would define a special method to receive the interface instance, and could then extract the data and render a chart to display the resulting information.","pos":[0,1274],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPartTable&gt;</ph> interface is a provider interface included with the Web Parts control set as a standard interface for creating connections based on a data table.","pos":[0,205],"source":"The <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interface is a provider interface included with the Web Parts control set as a standard interface for creating connections based on a data table."},{"content":"You can also create custom interfaces to use with Web Parts connections, but in many data-driven Web applications, it is useful to create connections based on a common field (for details, see the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPartField&gt;</ph> interface), row (for details, see the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPartRow&gt;</ph> interface), or table from the data source.","pos":[206,592],"source":" You can also create custom interfaces to use with Web Parts connections, but in many data-driven Web applications, it is useful to create connections based on a common field (for details, see the <xref:System.Web.UI.WebControls.WebParts.IWebPartField> interface), row (for details, see the <xref:System.Web.UI.WebControls.WebParts.IWebPartRow> interface), or table from the data source."},{"content":"In a typical connection, a <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> control acting as a provider would implement the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPartTable&gt;</ph> interface and provide an instance of the interface to consumers in a special callback method.","pos":[593,868],"source":" In a typical connection, a <xref:System.Web.UI.WebControls.WebParts.WebPart> control acting as a provider would implement the <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interface and provide an instance of the interface to consumers in a special callback method."},{"content":"For example, the provider might implement an <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPartTable&gt;</ph> interface for a table that contains financial performance data.","pos":[869,1033],"source":" For example, the provider might implement an <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interface for a table that contains financial performance data."},{"content":"Another <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> control acting as a consumer would define a special method to receive the interface instance, and could then extract the data and render a chart to display the resulting information.","pos":[1034,1274],"source":" Another <xref:System.Web.UI.WebControls.WebParts.WebPart> control acting as a consumer would define a special method to receive the interface instance, and could then extract the data and render a chart to display the resulting information."}]}]},{"pos":[2397,2942],"content":"The <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interface has two exposed members. The <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A> property returns schema information about the data table encapsulated in a <xref:System.ComponentModel.PropertyDescriptorCollection> object. The <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData%2A> method declares a method that an implementer (such as a provider control) uses to retrieve the interface instance's table data when the callback method is invoked.","nodes":[{"content":"The <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interface has two exposed members. The <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A> property returns schema information about the data table encapsulated in a <xref:System.ComponentModel.PropertyDescriptorCollection> object. The <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData%2A> method declares a method that an implementer (such as a provider control) uses to retrieve the interface instance's table data when the callback method is invoked.","pos":[0,545],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPartTable&gt;</ph> interface has two exposed members.","pos":[0,94],"source":"The <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interface has two exposed members."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A&gt;</ph> property returns schema information about the data table encapsulated in a <ph id=\"ph2\">&lt;xref:System.ComponentModel.PropertyDescriptorCollection&gt;</ph> object.","pos":[95,305],"source":" The <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A> property returns schema information about the data table encapsulated in a <xref:System.ComponentModel.PropertyDescriptorCollection> object."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData%2A&gt;</ph> method declares a method that an implementer (such as a provider control) uses to retrieve the interface instance's table data when the callback method is invoked.","pos":[306,545],"source":" The <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData%2A> method declares a method that an implementer (such as a provider control) uses to retrieve the interface instance's table data when the callback method is invoked."}]}]}],"pos":[709,3658],"yaml":true,"extradata":"MT"},{"content":"Returns the data for the table that is being used by the interface as the basis of a connection between two <xref href=\"System.Web.UI.WebControls.WebParts.WebPart\"></xref> controls.","nodes":[{"pos":[0,181],"content":"Returns the data for the table that is being used by the interface as the basis of a connection between two <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.WebControls.WebParts.WebPart\"&gt;&lt;/xref&gt;</ph> controls.","source":"Returns the data for the table that is being used by the interface as the basis of a connection between two <xref href=\"System.Web.UI.WebControls.WebParts.WebPart\"></xref> controls."}],"pos":[8633,8815],"yaml":true},{"content":"Use this method to retrieve the data table values passed by the interface. The provider implements this method, and the consumer invokes it at the point when the consumer is ready to process or render data.","nodes":[{"pos":[0,206],"content":"Use this method to retrieve the data table values passed by the interface. The provider implements this method, and the consumer invokes it at the point when the consumer is ready to process or render data.","nodes":[{"content":"Use this method to retrieve the data table values passed by the interface. The provider implements this method, and the consumer invokes it at the point when the consumer is ready to process or render data.","pos":[0,206],"nodes":[{"content":"Use this method to retrieve the data table values passed by the interface.","pos":[0,74]},{"content":"The provider implements this method, and the consumer invokes it at the point when the consumer is ready to process or render data.","pos":[75,206]}]}]}],"pos":[8826,9033],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Web.UI.WebControls.WebParts.TableCallback\"></xref> delegate that contains the address of a method that receives the data.","nodes":[{"pos":[0,142],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.WebControls.WebParts.TableCallback\"&gt;&lt;/xref&gt;</ph> delegate that contains the address of a method that receives the data.","source":"A <xref href=\"System.Web.UI.WebControls.WebParts.TableCallback\"></xref> delegate that contains the address of a method that receives the data."}],"pos":[10213,10356],"yaml":true},{"content":"Gets the schema information for a data table that is used to share data between two <xref href=\"System.Web.UI.WebControls.WebParts.WebPart\"></xref> controls.","nodes":[{"pos":[0,157],"content":"Gets the schema information for a data table that is used to share data between two <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.WebControls.WebParts.WebPart\"&gt;&lt;/xref&gt;</ph> controls.","source":"Gets the schema information for a data table that is used to share data between two <xref href=\"System.Web.UI.WebControls.WebParts.WebPart\"></xref> controls."}],"pos":[11414,11572],"yaml":true},{"content":"This property provides property information on the data in an <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> instance. There is an implicit contract between the schema referenced by the <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A> property and the data in the table. The contract is that for each <xref:System.ComponentModel.PropertyDescriptor> object in the <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A> property, you can call <xref:System.ComponentModel.PropertyDescriptor.GetValue%2A> on an element of the table data to get the value in a column or a row of the table.","nodes":[{"pos":[0,621],"content":"This property provides property information on the data in an <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> instance. There is an implicit contract between the schema referenced by the <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A> property and the data in the table. The contract is that for each <xref:System.ComponentModel.PropertyDescriptor> object in the <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A> property, you can call <xref:System.ComponentModel.PropertyDescriptor.GetValue%2A> on an element of the table data to get the value in a column or a row of the table.","nodes":[{"content":"This property provides property information on the data in an <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> instance. There is an implicit contract between the schema referenced by the <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A> property and the data in the table. The contract is that for each <xref:System.ComponentModel.PropertyDescriptor> object in the <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A> property, you can call <xref:System.ComponentModel.PropertyDescriptor.GetValue%2A> on an element of the table data to get the value in a column or a row of the table.","pos":[0,621],"nodes":[{"content":"This property provides property information on the data in an <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPartTable&gt;</ph> instance.","pos":[0,127],"source":"This property provides property information on the data in an <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> instance."},{"content":"There is an implicit contract between the schema referenced by the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A&gt;</ph> property and the data in the table.","pos":[128,296],"source":" There is an implicit contract between the schema referenced by the <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A> property and the data in the table."},{"content":"The contract is that for each <ph id=\"ph1\">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph> object in the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A&gt;</ph> property, you can call <ph id=\"ph3\">&lt;xref:System.ComponentModel.PropertyDescriptor.GetValue%2A&gt;</ph> on an element of the table data to get the value in a column or a row of the table.","pos":[297,621],"source":" The contract is that for each <xref:System.ComponentModel.PropertyDescriptor> object in the <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A> property, you can call <xref:System.ComponentModel.PropertyDescriptor.GetValue%2A> on an element of the table data to get the value in a column or a row of the table."}]}]}],"pos":[11583,12205],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.ComponentModel.PropertyDescriptorCollection\"></xref> describing the data.","nodes":[{"pos":[0,94],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.PropertyDescriptorCollection\"&gt;&lt;/xref&gt;</ph> describing the data.","source":"A <xref href=\"System.ComponentModel.PropertyDescriptorCollection\"></xref> describing the data."}],"pos":[13331,13426],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.WebControls.WebParts.IWebPartTable\n  commentId: T:System.Web.UI.WebControls.WebParts.IWebPartTable\n  id: IWebPartTable\n  children:\n  - System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData(System.Web.UI.WebControls.WebParts.TableCallback)\n  - System.Web.UI.WebControls.WebParts.IWebPartTable.Schema\n  langs:\n  - csharp\n  name: IWebPartTable\n  nameWithType: IWebPartTable\n  fullName: System.Web.UI.WebControls.WebParts.IWebPartTable\n  type: Interface\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls.WebParts\n  summary: Defines a provider interface for connecting two server controls using an entire table of data.\n  remarks: \"This interface is designed to be used with Web Parts connections. In a Web Parts connection, two server controls that reside in a <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone establish a connection and share data, with one control acting as the consumer and the other control acting as a provider. The mechanism for sharing data in a Web Parts connection is an interface instance, which the provider serves to the consumer by means of a callback method. To establish a connection, the consumer and provider must both work with the same interface type for sharing data. If the consumer does not recognize the interface type sent by the provider, it is still possible to connect the controls by means of a transformer (a <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> object) that translates the interface instance sent by the provider into a type that the consumer recognizes. For details on connections, see <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> and [Web Parts Connections Overview](http://msdn.microsoft.com/library/d98cfd0f-ebd6-4871-89d5-abbd2cdef67b).  \\n  \\n The <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interface is a provider interface included with the Web Parts control set as a standard interface for creating connections based on a data table. You can also create custom interfaces to use with Web Parts connections, but in many data-driven Web applications, it is useful to create connections based on a common field (for details, see the <xref:System.Web.UI.WebControls.WebParts.IWebPartField> interface), row (for details, see the <xref:System.Web.UI.WebControls.WebParts.IWebPartRow> interface), or table from the data source. In a typical connection, a <xref:System.Web.UI.WebControls.WebParts.WebPart> control acting as a provider would implement the <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interface and provide an instance of the interface to consumers in a special callback method. For example, the provider might implement an <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interface for a table that contains financial performance data. Another <xref:System.Web.UI.WebControls.WebParts.WebPart> control acting as a consumer would define a special method to receive the interface instance, and could then extract the data and render a chart to display the resulting information.  \\n  \\n The <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interface has two exposed members. The <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A> property returns schema information about the data table encapsulated in a <xref:System.ComponentModel.PropertyDescriptorCollection> object. The <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData%2A> method declares a method that an implementer (such as a provider control) uses to retrieve the interface instance's table data when the callback method is invoked.\"\n  example:\n  - \"The following code example demonstrates how to create a static connection between two controls using the <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interface. The code example has three parts:  \\n  \\n-   Source code for two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can form a connection using the <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interface, with one control acting as the provider and the other acting as the consumer.  \\n  \\n-   A Web page that hosts the controls and declares the static connection in persistence format.  \\n  \\n-   A description of what happens when the example code runs.  \\n  \\n The first part of the code example is the source code for the two custom controls. First is the code for the provider, which implements the <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interface. For simplicity in the example, the provider creates a table with some data rather than connecting to a database. The `GetConnectionInterface` method serves as the provider's connection point, the callback method that returns the interface instance to the consumer. As for the consumer, it retrieves the interface instance from the provider in its method named `SetConnectionInterface`, which is marked with a `ConnectionConsumer` attribute. After retrieving the instance of the interface, the consumer, in its `OnPreRender` method, calls the implementation of the <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData%2A> method in the provider, to retrieve the actual data and write it to the page.  \\n  \\n For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example uses dynamic compilation. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  \\n  \\n [!code-csharp[WebParts_IWebPartTable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartTable_Overview/CS/ITableSample.cs#2)]\\n [!code-vb[WebParts_IWebPartTable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartTable_Overview/VB/ITableSample.vb#2)]  \\n  \\n The second part of the code example is the Web page that declares the static connection and hosts the controls. Near the top of the page is a `Register` directive that declares the namespace of the source code contained in the App_Code directory. The connection is declared using an `<asp:webpartconnection>` element. The custom consumer and provider controls are declared in a `<zonetemplate>` element within an `<asp:webpartzone>` element, which is required for them to be able to connect (they must reside within a zone that inherits from the <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> class).  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[WebParts_IWebPartRow_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartRow_Overview/CS/defaultcs.aspx#1)]  -->\\n <!-- TODO: review snippet reference [!code-vb[WebParts_IWebPartRow_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartRow_Overview/VB/defaultvb.aspx#1)]  -->  \\n  \\n Load the page in a browser. The consumer control displays the data provided from the specified table, which the provider makes available through an instance of the <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interface.\"\n  syntax:\n    content: public interface IWebPartTable\n  implements: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/IWebPartTable.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData(System.Web.UI.WebControls.WebParts.TableCallback)\n  commentId: M:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData(System.Web.UI.WebControls.WebParts.TableCallback)\n  id: GetTableData(System.Web.UI.WebControls.WebParts.TableCallback)\n  parent: System.Web.UI.WebControls.WebParts.IWebPartTable\n  langs:\n  - csharp\n  name: GetTableData(TableCallback)\n  nameWithType: IWebPartTable.GetTableData(TableCallback)\n  fullName: IWebPartTable.GetTableData(TableCallback)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls.WebParts\n  summary: Returns the data for the table that is being used by the interface as the basis of a connection between two <xref href=\"System.Web.UI.WebControls.WebParts.WebPart\"></xref> controls.\n  remarks: Use this method to retrieve the data table values passed by the interface. The provider implements this method, and the consumer invokes it at the point when the consumer is ready to process or render data.\n  example:\n  - \"The following code example shows the implementation and use of the <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData%2A> method. The complete example is shown in the class overview for the <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interface. The provider control implements the <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData%2A> method, returning the data in the specified table. The consumer control calls the <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData%2A> method in its `OnPreRender` method, so that the value of the data can be written to the page.  \\n  \\n [!code-csharp[WebParts_IWebPartTable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartTable_Overview/CS/ITableSample.cs#2)]\\n [!code-vb[WebParts_IWebPartTable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartTable_Overview/VB/ITableSample.vb#2)]\"\n  syntax:\n    content: public void GetTableData (System.Web.UI.WebControls.WebParts.TableCallback callback);\n    parameters:\n    - id: callback\n      type: System.Web.UI.WebControls.WebParts.TableCallback\n      description: A <xref href=\"System.Web.UI.WebControls.WebParts.TableCallback\"></xref> delegate that contains the address of a method that receives the data.\n  overload: System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/IWebPartTable.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.UI.WebControls.WebParts.IWebPartTable.Schema\n  commentId: P:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema\n  id: Schema\n  parent: System.Web.UI.WebControls.WebParts.IWebPartTable\n  langs:\n  - csharp\n  name: Schema\n  nameWithType: IWebPartTable.Schema\n  fullName: IWebPartTable.Schema\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls.WebParts\n  summary: Gets the schema information for a data table that is used to share data between two <xref href=\"System.Web.UI.WebControls.WebParts.WebPart\"></xref> controls.\n  remarks: This property provides property information on the data in an <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> instance. There is an implicit contract between the schema referenced by the <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A> property and the data in the table. The contract is that for each <xref:System.ComponentModel.PropertyDescriptor> object in the <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A> property, you can call <xref:System.ComponentModel.PropertyDescriptor.GetValue%2A> on an element of the table data to get the value in a column or a row of the table.\n  example:\n  - \"The following code example shows the implementation and use of the <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A> property. The complete example is shown in the class overview for the <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interface. The provider control implements the <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A> property. Then the consumer control, in its `RenderContents` method, queries the <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A> property to retrieve information about the table as it writes the table data to the page.  \\n  \\n [!code-csharp[WebParts_IWebPartTable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartTable_Overview/CS/ITableSample.cs#2)]\\n [!code-vb[WebParts_IWebPartTable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartTable_Overview/VB/ITableSample.vb#2)]\"\n  syntax:\n    content: public System.ComponentModel.PropertyDescriptorCollection Schema { get; }\n    return:\n      type: System.ComponentModel.PropertyDescriptorCollection\n      description: A <xref href=\"System.ComponentModel.PropertyDescriptorCollection\"></xref> describing the data.\n  overload: System.Web.UI.WebControls.WebParts.IWebPartTable.Schema*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/IWebPartTable.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\nreferences:\n- uid: System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData(System.Web.UI.WebControls.WebParts.TableCallback)\n  parent: System.Web.UI.WebControls.WebParts.IWebPartTable\n  isExternal: false\n  name: GetTableData(TableCallback)\n  nameWithType: IWebPartTable.GetTableData(TableCallback)\n  fullName: IWebPartTable.GetTableData(TableCallback)\n- uid: System.Web.UI.WebControls.WebParts.TableCallback\n  parent: System.Web.UI.WebControls.WebParts\n  isExternal: false\n  name: TableCallback\n  nameWithType: TableCallback\n  fullName: System.Web.UI.WebControls.WebParts.TableCallback\n- uid: System.Web.UI.WebControls.WebParts.IWebPartTable.Schema\n  parent: System.Web.UI.WebControls.WebParts.IWebPartTable\n  isExternal: false\n  name: Schema\n  nameWithType: IWebPartTable.Schema\n  fullName: IWebPartTable.Schema\n- uid: System.ComponentModel.PropertyDescriptorCollection\n  parent: System.ComponentModel\n  isExternal: false\n  name: PropertyDescriptorCollection\n  nameWithType: PropertyDescriptorCollection\n  fullName: System.ComponentModel.PropertyDescriptorCollection\n- uid: System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData*\n  parent: System.Web.UI.WebControls.WebParts.IWebPartTable\n  isExternal: false\n  name: GetTableData\n  nameWithType: IWebPartTable.GetTableData\n  fullName: IWebPartTable.GetTableData\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/IWebPartTable.xml\n- uid: System.Web.UI.WebControls.WebParts.IWebPartTable.Schema*\n  parent: System.Web.UI.WebControls.WebParts.IWebPartTable\n  isExternal: false\n  name: Schema\n  nameWithType: IWebPartTable.Schema\n  fullName: IWebPartTable.Schema\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/IWebPartTable.xml\n"}