{"nodes":[{"content":"Propagates the current behavior in the expression to child nodes. This class cannot be inherited.","nodes":[{"pos":[0,97],"content":"Propagates the current behavior in the expression to child nodes. This class cannot be inherited.","nodes":[{"content":"Propagates the current behavior in the expression to child nodes. This class cannot be inherited.","pos":[0,97],"nodes":[{"content":"Propagates the current behavior in the expression to child nodes.","pos":[0,65]},{"content":"This class cannot be inherited.","pos":[66,97]}]}]}],"pos":[1383,1481],"yaml":true},{"content":"This class is used by all <xref:System.Workflow.Activities.Rules.IRuleExpression> methods to propagate behavior to child nodes.","nodes":[{"pos":[0,127],"content":"This class is used by all <xref:System.Workflow.Activities.Rules.IRuleExpression> methods to propagate behavior to child nodes.","nodes":[{"content":"This class is used by all <ph id=\"ph1\">&lt;xref:System.Workflow.Activities.Rules.IRuleExpression&gt;</ph> methods to propagate behavior to child nodes.","pos":[0,127],"source":"This class is used by all <xref:System.Workflow.Activities.Rules.IRuleExpression> methods to propagate behavior to child nodes."}]}],"pos":[1492,1620],"yaml":true,"extradata":"MT"},{"content":"Identifies the fields and properties used by an expression and adds these as symbols to the <xref href=\"System.Workflow.Activities.Rules.RuleAnalysis\"></xref> instance.","nodes":[{"pos":[0,168],"content":"Identifies the fields and properties used by an expression and adds these as symbols to the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.Rules.RuleAnalysis\"&gt;&lt;/xref&gt;</ph> instance.","source":"Identifies the fields and properties used by an expression and adds these as symbols to the <xref href=\"System.Workflow.Activities.Rules.RuleAnalysis\"></xref> instance."}],"pos":[3708,3877],"yaml":true},{"content":"The <xref href=\"System.Workflow.Activities.Rules.RuleAnalysis\"></xref> instance that stores symbols representing the properties and fields used by rule conditions and actions.","nodes":[{"pos":[0,175],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.Rules.RuleAnalysis\"&gt;&lt;/xref&gt;</ph> instance that stores symbols representing the properties and fields used by rule conditions and actions.","source":"The <xref href=\"System.Workflow.Activities.Rules.RuleAnalysis\"></xref> instance that stores symbols representing the properties and fields used by rule conditions and actions."}],"pos":[4235,4411],"yaml":true},{"content":"The expression being executed.","nodes":[{"pos":[0,30],"content":"The expression being executed.","nodes":[{"content":"The expression being executed.","pos":[0,30]}]}],"pos":[4493,4524],"yaml":true},{"content":"`true` if fields and properties read by a <xref href=\"System.Workflow.Activities.Rules.RuleAction\"></xref> are to be added to <xref href=\"System.Workflow.Activities.Rules.RuleAnalysis\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,213],"content":"<ph id=\"ph1\">`true`</ph> if fields and properties read by a <ph id=\"ph2\">&lt;xref href=\"System.Workflow.Activities.Rules.RuleAction\"&gt;&lt;/xref&gt;</ph> are to be added to <ph id=\"ph3\">&lt;xref href=\"System.Workflow.Activities.Rules.RuleAnalysis\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if fields and properties read by a <xref href=\"System.Workflow.Activities.Rules.RuleAction\"></xref> are to be added to <xref href=\"System.Workflow.Activities.Rules.RuleAnalysis\"></xref>; otherwise, `false`."}],"pos":[4587,4803],"yaml":true},{"content":"`true` if fields and properties written by a <xref href=\"System.Workflow.Activities.Rules.RuleAction\"></xref> are to be added to <xref href=\"System.Workflow.Activities.Rules.RuleAnalysis\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,216],"content":"<ph id=\"ph1\">`true`</ph> if fields and properties written by a <ph id=\"ph2\">&lt;xref href=\"System.Workflow.Activities.Rules.RuleAction\"&gt;&lt;/xref&gt;</ph> are to be added to <ph id=\"ph3\">&lt;xref href=\"System.Workflow.Activities.Rules.RuleAnalysis\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if fields and properties written by a <xref href=\"System.Workflow.Activities.Rules.RuleAction\"></xref> are to be added to <xref href=\"System.Workflow.Activities.Rules.RuleAnalysis\"></xref>; otherwise, `false`."}],"pos":[4869,5088],"yaml":true},{"content":"The path of a field or property determined up to this point.","nodes":[{"pos":[0,60],"content":"The path of a field or property determined up to this point.","nodes":[{"content":"The path of a field or property determined up to this point.","pos":[0,60]}]}],"pos":[5190,5251],"yaml":true},{"content":"<code>analysis</code> is a null reference (`Nothing` in Visual Basic).","nodes":[{"pos":[0,70],"content":"<ph id=\"ph1\">&lt;code&gt;analysis&lt;/code&gt;</ph> is a null reference (<ph id=\"ph2\">`Nothing`</ph> in Visual Basic).","source":"<code>analysis</code> is a null reference (`Nothing` in Visual Basic)."}],"pos":[5447,5518],"yaml":true},{"content":"Creates a deep copy of the child nodes of the current <xref href=\"System.CodeDom.CodeExpression\"></xref>.","nodes":[{"pos":[0,105],"content":"Creates a deep copy of the child nodes of the current <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeExpression\"&gt;&lt;/xref&gt;</ph>.","source":"Creates a deep copy of the child nodes of the current <xref href=\"System.CodeDom.CodeExpression\"></xref>."}],"pos":[6622,6728],"yaml":true},{"content":"The expression that the clone is based on.","nodes":[{"pos":[0,42],"content":"The expression that the clone is based on.","nodes":[{"content":"The expression that the clone is based on.","pos":[0,42]}]}],"pos":[6959,7002],"yaml":true},{"content":"A <xref href=\"System.CodeDom.CodeExpression\"></xref> that is identical to this instance.","nodes":[{"pos":[0,88],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeExpression\"&gt;&lt;/xref&gt;</ph> that is identical to this instance.","source":"A <xref href=\"System.CodeDom.CodeExpression\"></xref> that is identical to this instance."}],"pos":[7075,7164],"yaml":true},{"content":"Decompiles the child nodes of the expression into string form.","nodes":[{"pos":[0,62],"content":"Decompiles the child nodes of the expression into string form.","nodes":[{"content":"Decompiles the child nodes of the expression into string form.","pos":[0,62]}]}],"pos":[8643,8706],"yaml":true},{"content":"The <xref href=\"System.Text.StringBuilder\"></xref> that contains the mutable string of characters.","nodes":[{"pos":[0,98],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Text.StringBuilder\"&gt;&lt;/xref&gt;</ph> that contains the mutable string of characters.","source":"The <xref href=\"System.Text.StringBuilder\"></xref> that contains the mutable string of characters."}],"pos":[8988,9087],"yaml":true},{"content":"The current <xref href=\"System.CodeDom.CodeExpression\"></xref>.","nodes":[{"pos":[0,63],"content":"The current <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeExpression\"&gt;&lt;/xref&gt;</ph>.","source":"The current <xref href=\"System.CodeDom.CodeExpression\"></xref>."}],"pos":[9169,9233],"yaml":true},{"content":"The parent <xref href=\"System.CodeDom.CodeExpression\"></xref>.","nodes":[{"pos":[0,62],"content":"The parent <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeExpression\"&gt;&lt;/xref&gt;</ph>.","source":"The parent <xref href=\"System.CodeDom.CodeExpression\"></xref>."}],"pos":[9321,9384],"yaml":true},{"content":"Evaluates the expression and all child expressions.","nodes":[{"pos":[0,51],"content":"Evaluates the expression and all child expressions.","nodes":[{"content":"Evaluates the expression and all child expressions.","pos":[0,51]}]}],"pos":[10803,10855],"yaml":true},{"content":"The <xref href=\"System.Workflow.Activities.Rules.RuleExecution\"></xref> to execute the expression.","nodes":[{"pos":[0,98],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.Rules.RuleExecution\"&gt;&lt;/xref&gt;</ph> to execute the expression.","source":"The <xref href=\"System.Workflow.Activities.Rules.RuleExecution\"></xref> to execute the expression."}],"pos":[11171,11270],"yaml":true},{"content":"The <xref href=\"System.CodeDom.CodeExpression\"></xref> to evaluate.","nodes":[{"pos":[0,67],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeExpression\"&gt;&lt;/xref&gt;</ph> to evaluate.","source":"The <xref href=\"System.CodeDom.CodeExpression\"></xref> to evaluate."}],"pos":[11352,11420],"yaml":true},{"content":"The <xref href=\"System.Workflow.Activities.Rules.RuleExpressionResult\"></xref> that indicates the result of the expression evaluation.","nodes":[{"pos":[0,134],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.Rules.RuleExpressionResult\"&gt;&lt;/xref&gt;</ph> that indicates the result of the expression evaluation.","source":"The <xref href=\"System.Workflow.Activities.Rules.RuleExpressionResult\"></xref> that indicates the result of the expression evaluation."}],"pos":[11517,11652],"yaml":true},{"content":"<code>execution</code> is a null reference (`Nothing` in Visual Basic).","nodes":[{"pos":[0,71],"content":"<ph id=\"ph1\">&lt;code&gt;execution&lt;/code&gt;</ph> is a null reference (<ph id=\"ph2\">`Nothing`</ph> in Visual Basic).","source":"<code>execution</code> is a null reference (`Nothing` in Visual Basic)."}],"pos":[11844,11916],"yaml":true},{"content":"Compares the current expression and child nodes to another expression to determine whether they are equal.","nodes":[{"pos":[0,106],"content":"Compares the current expression and child nodes to another expression to determine whether they are equal.","nodes":[{"content":"Compares the current expression and child nodes to another expression to determine whether they are equal.","pos":[0,106]}]}],"pos":[13158,13265],"yaml":true},{"content":"The first <xref href=\"System.CodeDom.CodeExpression\"></xref> in the comparison.","nodes":[{"pos":[0,79],"content":"The first <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeExpression\"&gt;&lt;/xref&gt;</ph> in the comparison.","source":"The first <xref href=\"System.CodeDom.CodeExpression\"></xref> in the comparison."}],"pos":[13513,13593],"yaml":true},{"content":"The second <xref href=\"System.CodeDom.CodeExpression\"></xref> in the comparison.","nodes":[{"pos":[0,80],"content":"The second <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeExpression\"&gt;&lt;/xref&gt;</ph> in the comparison.","source":"The second <xref href=\"System.CodeDom.CodeExpression\"></xref> in the comparison."}],"pos":[13681,13762],"yaml":true},{"content":"`true` if the expressions are equal; otherwise, `false`.","nodes":[{"pos":[0,56],"content":"<ph id=\"ph1\">`true`</ph> if the expressions are equal; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the expressions are equal; otherwise, `false`."}],"pos":[13820,13879],"yaml":true},{"content":"Verifies that the expression and child nodes are configured correctly and has no errors.","nodes":[{"pos":[0,88],"content":"Verifies that the expression and child nodes are configured correctly and has no errors.","nodes":[{"content":"Verifies that the expression and child nodes are configured correctly and has no errors.","pos":[0,88]}]}],"pos":[15372,15461],"yaml":true},{"content":"The <xref href=\"System.Workflow.Activities.Rules.RuleValidation\"></xref> to manage the validation process.","nodes":[{"pos":[0,106],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.Rules.RuleValidation\"&gt;&lt;/xref&gt;</ph> to manage the validation process.","source":"The <xref href=\"System.Workflow.Activities.Rules.RuleValidation\"></xref> to manage the validation process."}],"pos":[15795,15902],"yaml":true},{"content":"The <xref href=\"System.CodeDom.CodeExpression\"></xref> to evaluate.","nodes":[{"pos":[0,67],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeExpression\"&gt;&lt;/xref&gt;</ph> to evaluate.","source":"The <xref href=\"System.CodeDom.CodeExpression\"></xref> to evaluate."}],"pos":[15984,16052],"yaml":true},{"content":"`true` if fields and properties written by a <xref href=\"System.Workflow.Activities.Rules.RuleAction\"></xref> are stored in by <xref href=\"System.Workflow.Activities.Rules.RuleAnalysis\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,214],"content":"<ph id=\"ph1\">`true`</ph> if fields and properties written by a <ph id=\"ph2\">&lt;xref href=\"System.Workflow.Activities.Rules.RuleAction\"&gt;&lt;/xref&gt;</ph> are stored in by <ph id=\"ph3\">&lt;xref href=\"System.Workflow.Activities.Rules.RuleAnalysis\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if fields and properties written by a <xref href=\"System.Workflow.Activities.Rules.RuleAction\"></xref> are stored in by <xref href=\"System.Workflow.Activities.Rules.RuleAnalysis\"></xref>; otherwise, `false`."}],"pos":[16118,16335],"yaml":true},{"content":"The <xref href=\"System.Workflow.Activities.Rules.RuleExpressionInfo\"></xref> for the <xref href=\"System.CodeDom.CodeExpression\"></xref>.","nodes":[{"pos":[0,136],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.Rules.RuleExpressionInfo\"&gt;&lt;/xref&gt;</ph> for the <ph id=\"ph2\">&lt;xref href=\"System.CodeDom.CodeExpression\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Workflow.Activities.Rules.RuleExpressionInfo\"></xref> for the <xref href=\"System.CodeDom.CodeExpression\"></xref>."}],"pos":[16430,16567],"yaml":true},{"content":"<code>validation</code> is a null reference (`Nothing` in Visual Basic).","nodes":[{"pos":[0,72],"content":"<ph id=\"ph1\">&lt;code&gt;validation&lt;/code&gt;</ph> is a null reference (<ph id=\"ph2\">`Nothing`</ph> in Visual Basic).","source":"<code>validation</code> is a null reference (`Nothing` in Visual Basic)."}],"pos":[16759,16832],"yaml":true},{"content":"The <code>expression</code> is null and the errors collection on the <xref href=\"System.Workflow.Activities.Rules.RuleValidation\"></xref> object is a null reference (`Nothing`).","nodes":[{"pos":[0,177],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">expression</ph><ept id=\"p1\">&lt;/code&gt;</ept> is null and the errors collection on the <ph id=\"ph2\">&lt;xref href=\"System.Workflow.Activities.Rules.RuleValidation\"&gt;&lt;/xref&gt;</ph> object is a null reference (<ph id=\"ph3\">`Nothing`</ph>).","source":"The <code>expression</code> is null and the errors collection on the <xref href=\"System.Workflow.Activities.Rules.RuleValidation\"></xref> object is a null reference (`Nothing`)."}],"pos":[16942,17120],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Workflow.Activities.Rules.RuleExpressionWalker\n  commentId: T:System.Workflow.Activities.Rules.RuleExpressionWalker\n  id: RuleExpressionWalker\n  children:\n  - System.Workflow.Activities.Rules.RuleExpressionWalker.AnalyzeUsage(System.Workflow.Activities.Rules.RuleAnalysis,System.CodeDom.CodeExpression,System.Boolean,System.Boolean,System.Workflow.Activities.Rules.RulePathQualifier)\n  - System.Workflow.Activities.Rules.RuleExpressionWalker.Clone(System.CodeDom.CodeExpression)\n  - System.Workflow.Activities.Rules.RuleExpressionWalker.Decompile(System.Text.StringBuilder,System.CodeDom.CodeExpression,System.CodeDom.CodeExpression)\n  - System.Workflow.Activities.Rules.RuleExpressionWalker.Evaluate(System.Workflow.Activities.Rules.RuleExecution,System.CodeDom.CodeExpression)\n  - System.Workflow.Activities.Rules.RuleExpressionWalker.Match(System.CodeDom.CodeExpression,System.CodeDom.CodeExpression)\n  - System.Workflow.Activities.Rules.RuleExpressionWalker.Validate(System.Workflow.Activities.Rules.RuleValidation,System.CodeDom.CodeExpression,System.Boolean)\n  langs:\n  - csharp\n  name: RuleExpressionWalker\n  nameWithType: RuleExpressionWalker\n  fullName: System.Workflow.Activities.Rules.RuleExpressionWalker\n  type: Class\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities.Rules\n  summary: Propagates the current behavior in the expression to child nodes. This class cannot be inherited.\n  remarks: This class is used by all <xref:System.Workflow.Activities.Rules.IRuleExpression> methods to propagate behavior to child nodes.\n  syntax:\n    content: public static class RuleExpressionWalker\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities.Rules/RuleExpressionWalker.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.Rules.RuleExpressionWalker.AnalyzeUsage(System.Workflow.Activities.Rules.RuleAnalysis,System.CodeDom.CodeExpression,System.Boolean,System.Boolean,System.Workflow.Activities.Rules.RulePathQualifier)\n  commentId: M:System.Workflow.Activities.Rules.RuleExpressionWalker.AnalyzeUsage(System.Workflow.Activities.Rules.RuleAnalysis,System.CodeDom.CodeExpression,System.Boolean,System.Boolean,System.Workflow.Activities.Rules.RulePathQualifier)\n  id: AnalyzeUsage(System.Workflow.Activities.Rules.RuleAnalysis,System.CodeDom.CodeExpression,System.Boolean,System.Boolean,System.Workflow.Activities.Rules.RulePathQualifier)\n  parent: System.Workflow.Activities.Rules.RuleExpressionWalker\n  langs:\n  - csharp\n  name: AnalyzeUsage(RuleAnalysis, CodeExpression, Boolean, Boolean, RulePathQualifier)\n  nameWithType: RuleExpressionWalker.AnalyzeUsage(RuleAnalysis, CodeExpression, Boolean, Boolean, RulePathQualifier)\n  fullName: RuleExpressionWalker.AnalyzeUsage(RuleAnalysis, CodeExpression, Boolean, Boolean, RulePathQualifier)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities.Rules\n  summary: Identifies the fields and properties used by an expression and adds these as symbols to the <xref href=\"System.Workflow.Activities.Rules.RuleAnalysis\"></xref> instance.\n  syntax:\n    content: public static void AnalyzeUsage (System.Workflow.Activities.Rules.RuleAnalysis analysis, System.CodeDom.CodeExpression expression, bool isRead, bool isWritten, System.Workflow.Activities.Rules.RulePathQualifier qualifier);\n    parameters:\n    - id: analysis\n      type: System.Workflow.Activities.Rules.RuleAnalysis\n      description: The <xref href=\"System.Workflow.Activities.Rules.RuleAnalysis\"></xref> instance that stores symbols representing the properties and fields used by rule conditions and actions.\n    - id: expression\n      type: System.CodeDom.CodeExpression\n      description: The expression being executed.\n    - id: isRead\n      type: System.Boolean\n      description: '`true` if fields and properties read by a <xref href=\"System.Workflow.Activities.Rules.RuleAction\"></xref> are to be added to <xref href=\"System.Workflow.Activities.Rules.RuleAnalysis\"></xref>; otherwise, `false`.'\n    - id: isWritten\n      type: System.Boolean\n      description: '`true` if fields and properties written by a <xref href=\"System.Workflow.Activities.Rules.RuleAction\"></xref> are to be added to <xref href=\"System.Workflow.Activities.Rules.RuleAnalysis\"></xref>; otherwise, `false`.'\n    - id: qualifier\n      type: System.Workflow.Activities.Rules.RulePathQualifier\n      description: The path of a field or property determined up to this point.\n  overload: System.Workflow.Activities.Rules.RuleExpressionWalker.AnalyzeUsage*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>analysis</code> is a null reference (`Nothing` in Visual Basic).\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities.Rules/RuleExpressionWalker.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.Rules.RuleExpressionWalker.Clone(System.CodeDom.CodeExpression)\n  commentId: M:System.Workflow.Activities.Rules.RuleExpressionWalker.Clone(System.CodeDom.CodeExpression)\n  id: Clone(System.CodeDom.CodeExpression)\n  parent: System.Workflow.Activities.Rules.RuleExpressionWalker\n  langs:\n  - csharp\n  name: Clone(CodeExpression)\n  nameWithType: RuleExpressionWalker.Clone(CodeExpression)\n  fullName: RuleExpressionWalker.Clone(CodeExpression)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities.Rules\n  summary: Creates a deep copy of the child nodes of the current <xref href=\"System.CodeDom.CodeExpression\"></xref>.\n  syntax:\n    content: public static System.CodeDom.CodeExpression Clone (System.CodeDom.CodeExpression originalExpression);\n    parameters:\n    - id: originalExpression\n      type: System.CodeDom.CodeExpression\n      description: The expression that the clone is based on.\n    return:\n      type: System.CodeDom.CodeExpression\n      description: A <xref href=\"System.CodeDom.CodeExpression\"></xref> that is identical to this instance.\n  overload: System.Workflow.Activities.Rules.RuleExpressionWalker.Clone*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities.Rules/RuleExpressionWalker.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.Rules.RuleExpressionWalker.Decompile(System.Text.StringBuilder,System.CodeDom.CodeExpression,System.CodeDom.CodeExpression)\n  commentId: M:System.Workflow.Activities.Rules.RuleExpressionWalker.Decompile(System.Text.StringBuilder,System.CodeDom.CodeExpression,System.CodeDom.CodeExpression)\n  id: Decompile(System.Text.StringBuilder,System.CodeDom.CodeExpression,System.CodeDom.CodeExpression)\n  parent: System.Workflow.Activities.Rules.RuleExpressionWalker\n  langs:\n  - csharp\n  name: Decompile(StringBuilder, CodeExpression, CodeExpression)\n  nameWithType: RuleExpressionWalker.Decompile(StringBuilder, CodeExpression, CodeExpression)\n  fullName: RuleExpressionWalker.Decompile(StringBuilder, CodeExpression, CodeExpression)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities.Rules\n  summary: Decompiles the child nodes of the expression into string form.\n  syntax:\n    content: public static void Decompile (System.Text.StringBuilder stringBuilder, System.CodeDom.CodeExpression expression, System.CodeDom.CodeExpression parentExpression);\n    parameters:\n    - id: stringBuilder\n      type: System.Text.StringBuilder\n      description: The <xref href=\"System.Text.StringBuilder\"></xref> that contains the mutable string of characters.\n    - id: expression\n      type: System.CodeDom.CodeExpression\n      description: The current <xref href=\"System.CodeDom.CodeExpression\"></xref>.\n    - id: parentExpression\n      type: System.CodeDom.CodeExpression\n      description: The parent <xref href=\"System.CodeDom.CodeExpression\"></xref>.\n  overload: System.Workflow.Activities.Rules.RuleExpressionWalker.Decompile*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities.Rules/RuleExpressionWalker.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.Rules.RuleExpressionWalker.Evaluate(System.Workflow.Activities.Rules.RuleExecution,System.CodeDom.CodeExpression)\n  commentId: M:System.Workflow.Activities.Rules.RuleExpressionWalker.Evaluate(System.Workflow.Activities.Rules.RuleExecution,System.CodeDom.CodeExpression)\n  id: Evaluate(System.Workflow.Activities.Rules.RuleExecution,System.CodeDom.CodeExpression)\n  parent: System.Workflow.Activities.Rules.RuleExpressionWalker\n  langs:\n  - csharp\n  name: Evaluate(RuleExecution, CodeExpression)\n  nameWithType: RuleExpressionWalker.Evaluate(RuleExecution, CodeExpression)\n  fullName: RuleExpressionWalker.Evaluate(RuleExecution, CodeExpression)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities.Rules\n  summary: Evaluates the expression and all child expressions.\n  syntax:\n    content: public static System.Workflow.Activities.Rules.RuleExpressionResult Evaluate (System.Workflow.Activities.Rules.RuleExecution execution, System.CodeDom.CodeExpression expression);\n    parameters:\n    - id: execution\n      type: System.Workflow.Activities.Rules.RuleExecution\n      description: The <xref href=\"System.Workflow.Activities.Rules.RuleExecution\"></xref> to execute the expression.\n    - id: expression\n      type: System.CodeDom.CodeExpression\n      description: The <xref href=\"System.CodeDom.CodeExpression\"></xref> to evaluate.\n    return:\n      type: System.Workflow.Activities.Rules.RuleExpressionResult\n      description: The <xref href=\"System.Workflow.Activities.Rules.RuleExpressionResult\"></xref> that indicates the result of the expression evaluation.\n  overload: System.Workflow.Activities.Rules.RuleExpressionWalker.Evaluate*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>execution</code> is a null reference (`Nothing` in Visual Basic).\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities.Rules/RuleExpressionWalker.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.Rules.RuleExpressionWalker.Match(System.CodeDom.CodeExpression,System.CodeDom.CodeExpression)\n  commentId: M:System.Workflow.Activities.Rules.RuleExpressionWalker.Match(System.CodeDom.CodeExpression,System.CodeDom.CodeExpression)\n  id: Match(System.CodeDom.CodeExpression,System.CodeDom.CodeExpression)\n  parent: System.Workflow.Activities.Rules.RuleExpressionWalker\n  langs:\n  - csharp\n  name: Match(CodeExpression, CodeExpression)\n  nameWithType: RuleExpressionWalker.Match(CodeExpression, CodeExpression)\n  fullName: RuleExpressionWalker.Match(CodeExpression, CodeExpression)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities.Rules\n  summary: Compares the current expression and child nodes to another expression to determine whether they are equal.\n  syntax:\n    content: public static bool Match (System.CodeDom.CodeExpression firstExpression, System.CodeDom.CodeExpression secondExpression);\n    parameters:\n    - id: firstExpression\n      type: System.CodeDom.CodeExpression\n      description: The first <xref href=\"System.CodeDom.CodeExpression\"></xref> in the comparison.\n    - id: secondExpression\n      type: System.CodeDom.CodeExpression\n      description: The second <xref href=\"System.CodeDom.CodeExpression\"></xref> in the comparison.\n    return:\n      type: System.Boolean\n      description: '`true` if the expressions are equal; otherwise, `false`.'\n  overload: System.Workflow.Activities.Rules.RuleExpressionWalker.Match*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities.Rules/RuleExpressionWalker.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.Rules.RuleExpressionWalker.Validate(System.Workflow.Activities.Rules.RuleValidation,System.CodeDom.CodeExpression,System.Boolean)\n  commentId: M:System.Workflow.Activities.Rules.RuleExpressionWalker.Validate(System.Workflow.Activities.Rules.RuleValidation,System.CodeDom.CodeExpression,System.Boolean)\n  id: Validate(System.Workflow.Activities.Rules.RuleValidation,System.CodeDom.CodeExpression,System.Boolean)\n  parent: System.Workflow.Activities.Rules.RuleExpressionWalker\n  langs:\n  - csharp\n  name: Validate(RuleValidation, CodeExpression, Boolean)\n  nameWithType: RuleExpressionWalker.Validate(RuleValidation, CodeExpression, Boolean)\n  fullName: RuleExpressionWalker.Validate(RuleValidation, CodeExpression, Boolean)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities.Rules\n  summary: Verifies that the expression and child nodes are configured correctly and has no errors.\n  syntax:\n    content: public static System.Workflow.Activities.Rules.RuleExpressionInfo Validate (System.Workflow.Activities.Rules.RuleValidation validation, System.CodeDom.CodeExpression expression, bool isWritten);\n    parameters:\n    - id: validation\n      type: System.Workflow.Activities.Rules.RuleValidation\n      description: The <xref href=\"System.Workflow.Activities.Rules.RuleValidation\"></xref> to manage the validation process.\n    - id: expression\n      type: System.CodeDom.CodeExpression\n      description: The <xref href=\"System.CodeDom.CodeExpression\"></xref> to evaluate.\n    - id: isWritten\n      type: System.Boolean\n      description: '`true` if fields and properties written by a <xref href=\"System.Workflow.Activities.Rules.RuleAction\"></xref> are stored in by <xref href=\"System.Workflow.Activities.Rules.RuleAnalysis\"></xref>; otherwise, `false`.'\n    return:\n      type: System.Workflow.Activities.Rules.RuleExpressionInfo\n      description: The <xref href=\"System.Workflow.Activities.Rules.RuleExpressionInfo\"></xref> for the <xref href=\"System.CodeDom.CodeExpression\"></xref>.\n  overload: System.Workflow.Activities.Rules.RuleExpressionWalker.Validate*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>validation</code> is a null reference (`Nothing` in Visual Basic).\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <code>expression</code> is null and the errors collection on the <xref href=\"System.Workflow.Activities.Rules.RuleValidation\"></xref> object is a null reference (`Nothing`).\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities.Rules/RuleExpressionWalker.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.Workflow.Activities.Rules.RuleExpressionWalker.AnalyzeUsage(System.Workflow.Activities.Rules.RuleAnalysis,System.CodeDom.CodeExpression,System.Boolean,System.Boolean,System.Workflow.Activities.Rules.RulePathQualifier)\n  parent: System.Workflow.Activities.Rules.RuleExpressionWalker\n  isExternal: false\n  name: AnalyzeUsage(RuleAnalysis, CodeExpression, Boolean, Boolean, RulePathQualifier)\n  nameWithType: RuleExpressionWalker.AnalyzeUsage(RuleAnalysis, CodeExpression, Boolean, Boolean, RulePathQualifier)\n  fullName: RuleExpressionWalker.AnalyzeUsage(RuleAnalysis, CodeExpression, Boolean, Boolean, RulePathQualifier)\n- uid: System.Workflow.Activities.Rules.RuleAnalysis\n  parent: System.Workflow.Activities.Rules\n  isExternal: false\n  name: RuleAnalysis\n  nameWithType: RuleAnalysis\n  fullName: System.Workflow.Activities.Rules.RuleAnalysis\n- uid: System.CodeDom.CodeExpression\n  parent: System.CodeDom\n  isExternal: false\n  name: CodeExpression\n  nameWithType: CodeExpression\n  fullName: System.CodeDom.CodeExpression\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Workflow.Activities.Rules.RulePathQualifier\n  parent: System.Workflow.Activities.Rules\n  isExternal: false\n  name: RulePathQualifier\n  nameWithType: RulePathQualifier\n  fullName: System.Workflow.Activities.Rules.RulePathQualifier\n- uid: System.Workflow.Activities.Rules.RuleExpressionWalker.Clone(System.CodeDom.CodeExpression)\n  parent: System.Workflow.Activities.Rules.RuleExpressionWalker\n  isExternal: false\n  name: Clone(CodeExpression)\n  nameWithType: RuleExpressionWalker.Clone(CodeExpression)\n  fullName: RuleExpressionWalker.Clone(CodeExpression)\n- uid: System.Workflow.Activities.Rules.RuleExpressionWalker.Decompile(System.Text.StringBuilder,System.CodeDom.CodeExpression,System.CodeDom.CodeExpression)\n  parent: System.Workflow.Activities.Rules.RuleExpressionWalker\n  isExternal: false\n  name: Decompile(StringBuilder, CodeExpression, CodeExpression)\n  nameWithType: RuleExpressionWalker.Decompile(StringBuilder, CodeExpression, CodeExpression)\n  fullName: RuleExpressionWalker.Decompile(StringBuilder, CodeExpression, CodeExpression)\n- uid: System.Text.StringBuilder\n  parent: System.Text\n  isExternal: false\n  name: StringBuilder\n  nameWithType: StringBuilder\n  fullName: System.Text.StringBuilder\n- uid: System.Workflow.Activities.Rules.RuleExpressionWalker.Evaluate(System.Workflow.Activities.Rules.RuleExecution,System.CodeDom.CodeExpression)\n  parent: System.Workflow.Activities.Rules.RuleExpressionWalker\n  isExternal: false\n  name: Evaluate(RuleExecution, CodeExpression)\n  nameWithType: RuleExpressionWalker.Evaluate(RuleExecution, CodeExpression)\n  fullName: RuleExpressionWalker.Evaluate(RuleExecution, CodeExpression)\n- uid: System.Workflow.Activities.Rules.RuleExpressionResult\n  parent: System.Workflow.Activities.Rules\n  isExternal: false\n  name: RuleExpressionResult\n  nameWithType: RuleExpressionResult\n  fullName: System.Workflow.Activities.Rules.RuleExpressionResult\n- uid: System.Workflow.Activities.Rules.RuleExecution\n  parent: System.Workflow.Activities.Rules\n  isExternal: false\n  name: RuleExecution\n  nameWithType: RuleExecution\n  fullName: System.Workflow.Activities.Rules.RuleExecution\n- uid: System.Workflow.Activities.Rules.RuleExpressionWalker.Match(System.CodeDom.CodeExpression,System.CodeDom.CodeExpression)\n  parent: System.Workflow.Activities.Rules.RuleExpressionWalker\n  isExternal: false\n  name: Match(CodeExpression, CodeExpression)\n  nameWithType: RuleExpressionWalker.Match(CodeExpression, CodeExpression)\n  fullName: RuleExpressionWalker.Match(CodeExpression, CodeExpression)\n- uid: System.Workflow.Activities.Rules.RuleExpressionWalker.Validate(System.Workflow.Activities.Rules.RuleValidation,System.CodeDom.CodeExpression,System.Boolean)\n  parent: System.Workflow.Activities.Rules.RuleExpressionWalker\n  isExternal: false\n  name: Validate(RuleValidation, CodeExpression, Boolean)\n  nameWithType: RuleExpressionWalker.Validate(RuleValidation, CodeExpression, Boolean)\n  fullName: RuleExpressionWalker.Validate(RuleValidation, CodeExpression, Boolean)\n- uid: System.Workflow.Activities.Rules.RuleExpressionInfo\n  parent: System.Workflow.Activities.Rules\n  isExternal: false\n  name: RuleExpressionInfo\n  nameWithType: RuleExpressionInfo\n  fullName: System.Workflow.Activities.Rules.RuleExpressionInfo\n- uid: System.Workflow.Activities.Rules.RuleValidation\n  parent: System.Workflow.Activities.Rules\n  isExternal: false\n  name: RuleValidation\n  nameWithType: RuleValidation\n  fullName: System.Workflow.Activities.Rules.RuleValidation\n- uid: System.Workflow.Activities.Rules.RuleExpressionWalker.AnalyzeUsage*\n  parent: System.Workflow.Activities.Rules.RuleExpressionWalker\n  isExternal: false\n  name: AnalyzeUsage\n  nameWithType: RuleExpressionWalker.AnalyzeUsage\n  fullName: RuleExpressionWalker.AnalyzeUsage\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities.Rules/RuleExpressionWalker.xml\n- uid: System.Workflow.Activities.Rules.RuleExpressionWalker.Clone*\n  parent: System.Workflow.Activities.Rules.RuleExpressionWalker\n  isExternal: false\n  name: Clone\n  nameWithType: RuleExpressionWalker.Clone\n  fullName: RuleExpressionWalker.Clone\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities.Rules/RuleExpressionWalker.xml\n- uid: System.Workflow.Activities.Rules.RuleExpressionWalker.Decompile*\n  parent: System.Workflow.Activities.Rules.RuleExpressionWalker\n  isExternal: false\n  name: Decompile\n  nameWithType: RuleExpressionWalker.Decompile\n  fullName: RuleExpressionWalker.Decompile\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities.Rules/RuleExpressionWalker.xml\n- uid: System.Workflow.Activities.Rules.RuleExpressionWalker.Evaluate*\n  parent: System.Workflow.Activities.Rules.RuleExpressionWalker\n  isExternal: false\n  name: Evaluate\n  nameWithType: RuleExpressionWalker.Evaluate\n  fullName: RuleExpressionWalker.Evaluate\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities.Rules/RuleExpressionWalker.xml\n- uid: System.Workflow.Activities.Rules.RuleExpressionWalker.Match*\n  parent: System.Workflow.Activities.Rules.RuleExpressionWalker\n  isExternal: false\n  name: Match\n  nameWithType: RuleExpressionWalker.Match\n  fullName: RuleExpressionWalker.Match\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities.Rules/RuleExpressionWalker.xml\n- uid: System.Workflow.Activities.Rules.RuleExpressionWalker.Validate*\n  parent: System.Workflow.Activities.Rules.RuleExpressionWalker\n  isExternal: false\n  name: Validate\n  nameWithType: RuleExpressionWalker.Validate\n  fullName: RuleExpressionWalker.Validate\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities.Rules/RuleExpressionWalker.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}