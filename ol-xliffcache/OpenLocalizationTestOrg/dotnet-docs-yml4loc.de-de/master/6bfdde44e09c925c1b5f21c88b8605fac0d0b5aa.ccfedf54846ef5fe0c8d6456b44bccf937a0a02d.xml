{"nodes":[{"content":"Provides a Cryptography Next Generation (CNG) implementation of the Secure Hash Algorithm (SHA).","nodes":[{"pos":[0,96],"content":"Provides a Cryptography Next Generation (CNG) implementation of the Secure Hash Algorithm (SHA).","nodes":[{"content":"Provides a Cryptography Next Generation (CNG) implementation of the Secure Hash Algorithm (SHA).","pos":[0,96]}]}],"pos":[670,767],"yaml":true},{"content":"This algorithm is for hashing only and does not provide any encryption or decryption. It uses the BCrypt (BestCrypt) layer CNG.","nodes":[{"pos":[0,127],"content":"This algorithm is for hashing only and does not provide any encryption or decryption. It uses the BCrypt (BestCrypt) layer CNG.","nodes":[{"content":"This algorithm is for hashing only and does not provide any encryption or decryption. It uses the BCrypt (BestCrypt) layer CNG.","pos":[0,127],"nodes":[{"content":"This algorithm is for hashing only and does not provide any encryption or decryption.","pos":[0,85]},{"content":"It uses the BCrypt (BestCrypt) layer CNG.","pos":[86,127]}]}]}],"pos":[778,906],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.SHA1Cng\"></xref> class.","nodes":[{"pos":[0,98],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.SHA1Cng\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.SHA1Cng\"></xref> class."}],"pos":[3615,3714],"yaml":true},{"content":"Initializes, or re-initializes, the instance of the hash algorithm.","nodes":[{"pos":[0,67],"content":"Initializes, or re-initializes, the instance of the hash algorithm.","nodes":[{"content":"Initializes, or re-initializes, the instance of the hash algorithm.","pos":[0,67]}]}],"pos":[8903,8971],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.SHA1Cng\n  commentId: T:System.Security.Cryptography.SHA1Cng\n  id: SHA1Cng\n  children:\n  - System.Security.Cryptography.SHA1Cng.#ctor\n  - System.Security.Cryptography.SHA1Cng.Dispose(System.Boolean)\n  - System.Security.Cryptography.SHA1Cng.HashCore(System.Byte[],System.Int32,System.Int32)\n  - System.Security.Cryptography.SHA1Cng.HashFinal\n  - System.Security.Cryptography.SHA1Cng.Initialize\n  langs:\n  - csharp\n  name: SHA1Cng\n  nameWithType: SHA1Cng\n  fullName: System.Security.Cryptography.SHA1Cng\n  type: Class\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Provides a Cryptography Next Generation (CNG) implementation of the Secure Hash Algorithm (SHA).\n  remarks: This algorithm is for hashing only and does not provide any encryption or decryption. It uses the BCrypt (BestCrypt) layer CNG.\n  syntax:\n    content: 'public sealed class SHA1Cng : System.Security.Cryptography.SHA1'\n  inheritance:\n  - System.Object\n  - System.Security.Cryptography.HashAlgorithm\n  - System.Security.Cryptography.SHA1\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.Cryptography.HashAlgorithm.CanReuseTransform\n  - System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks\n  - System.Security.Cryptography.HashAlgorithm.Clear\n  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])\n  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)\n  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)\n  - System.Security.Cryptography.HashAlgorithm.Dispose\n  - System.Security.Cryptography.HashAlgorithm.Hash\n  - System.Security.Cryptography.HashAlgorithm.HashSize\n  - System.Security.Cryptography.HashAlgorithm.HashSizeValue\n  - System.Security.Cryptography.HashAlgorithm.HashValue\n  - System.Security.Cryptography.HashAlgorithm.InputBlockSize\n  - System.Security.Cryptography.HashAlgorithm.OutputBlockSize\n  - System.Security.Cryptography.HashAlgorithm.State\n  - System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)\n  - System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)\n  - System.Security.Cryptography.SHA1.Create\n  - System.Security.Cryptography.SHA1.Create(System.String)\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/SHA1Cng.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.SHA1Cng.#ctor\n  commentId: M:System.Security.Cryptography.SHA1Cng.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.SHA1Cng\n  langs:\n  - csharp\n  name: SHA1Cng()\n  nameWithType: SHA1Cng.SHA1Cng()\n  fullName: SHA1Cng.SHA1Cng()\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.SHA1Cng\"></xref> class.\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      public SHA1Cng ();\n    parameters: []\n  overload: System.Security.Cryptography.SHA1Cng.#ctor*\n  exceptions: []\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/SHA1Cng.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.SHA1Cng.Dispose(System.Boolean)\n  commentId: M:System.Security.Cryptography.SHA1Cng.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Security.Cryptography.SHA1Cng\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: SHA1Cng.Dispose(Boolean)\n  fullName: SHA1Cng.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: ''\n  overload: System.Security.Cryptography.SHA1Cng.Dispose*\n  exceptions: []\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/SHA1Cng.xml\n- uid: System.Security.Cryptography.SHA1Cng.HashCore(System.Byte[],System.Int32,System.Int32)\n  commentId: M:System.Security.Cryptography.SHA1Cng.HashCore(System.Byte[],System.Int32,System.Int32)\n  id: HashCore(System.Byte[],System.Int32,System.Int32)\n  parent: System.Security.Cryptography.SHA1Cng\n  langs:\n  - csharp\n  name: HashCore(Byte[], Int32, Int32)\n  nameWithType: SHA1Cng.HashCore(Byte[], Int32, Int32)\n  fullName: SHA1Cng.HashCore(Byte[], Int32, Int32)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      protected override void HashCore (byte[] array, int ibStart, int cbSize);\n    parameters:\n    - id: array\n      type: System.Byte[]\n      description: ''\n    - id: ibStart\n      type: System.Int32\n      description: ''\n    - id: cbSize\n      type: System.Int32\n      description: ''\n  overload: System.Security.Cryptography.SHA1Cng.HashCore*\n  exceptions: []\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/SHA1Cng.xml\n- uid: System.Security.Cryptography.SHA1Cng.HashFinal\n  commentId: M:System.Security.Cryptography.SHA1Cng.HashFinal\n  id: HashFinal\n  parent: System.Security.Cryptography.SHA1Cng\n  langs:\n  - csharp\n  name: HashFinal()\n  nameWithType: SHA1Cng.HashFinal()\n  fullName: SHA1Cng.HashFinal()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      protected override byte[] HashFinal ();\n    parameters: []\n    return:\n      type: System.Byte[]\n      description: ''\n  overload: System.Security.Cryptography.SHA1Cng.HashFinal*\n  exceptions: []\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/SHA1Cng.xml\n- uid: System.Security.Cryptography.SHA1Cng.Initialize\n  commentId: M:System.Security.Cryptography.SHA1Cng.Initialize\n  id: Initialize\n  parent: System.Security.Cryptography.SHA1Cng\n  langs:\n  - csharp\n  name: Initialize()\n  nameWithType: SHA1Cng.Initialize()\n  fullName: SHA1Cng.Initialize()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  summary: Initializes, or re-initializes, the instance of the hash algorithm.\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      public override void Initialize ();\n    parameters: []\n  overload: System.Security.Cryptography.SHA1Cng.Initialize*\n  exceptions: []\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/SHA1Cng.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Security.Cryptography.SHA1\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: SHA1\n  nameWithType: SHA1\n  fullName: System.Security.Cryptography.SHA1\n- uid: System.Security.Cryptography.SHA1Cng.#ctor\n  parent: System.Security.Cryptography.SHA1Cng\n  isExternal: false\n  name: SHA1Cng()\n  nameWithType: SHA1Cng.SHA1Cng()\n  fullName: SHA1Cng.SHA1Cng()\n- uid: System.Security.Cryptography.SHA1Cng.Dispose(System.Boolean)\n  parent: System.Security.Cryptography.SHA1Cng\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: SHA1Cng.Dispose(Boolean)\n  fullName: SHA1Cng.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.SHA1Cng.HashCore(System.Byte[],System.Int32,System.Int32)\n  parent: System.Security.Cryptography.SHA1Cng\n  isExternal: false\n  name: HashCore(Byte[], Int32, Int32)\n  nameWithType: SHA1Cng.HashCore(Byte[], Int32, Int32)\n  fullName: SHA1Cng.HashCore(Byte[], Int32, Int32)\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.SHA1Cng.HashFinal\n  parent: System.Security.Cryptography.SHA1Cng\n  isExternal: false\n  name: HashFinal()\n  nameWithType: SHA1Cng.HashFinal()\n  fullName: SHA1Cng.HashFinal()\n- uid: System.Security.Cryptography.SHA1Cng.Initialize\n  parent: System.Security.Cryptography.SHA1Cng\n  isExternal: false\n  name: Initialize()\n  nameWithType: SHA1Cng.Initialize()\n  fullName: SHA1Cng.Initialize()\n- uid: System.Security.Cryptography.SHA1Cng.#ctor*\n  parent: System.Security.Cryptography.SHA1Cng\n  isExternal: false\n  name: SHA1Cng\n  nameWithType: SHA1Cng.SHA1Cng\n  fullName: SHA1Cng.SHA1Cng\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/SHA1Cng.xml\n- uid: System.Security.Cryptography.SHA1Cng.Dispose*\n  parent: System.Security.Cryptography.SHA1Cng\n  isExternal: false\n  name: Dispose\n  nameWithType: SHA1Cng.Dispose\n  fullName: SHA1Cng.Dispose\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/SHA1Cng.xml\n- uid: System.Security.Cryptography.SHA1Cng.HashCore*\n  parent: System.Security.Cryptography.SHA1Cng\n  isExternal: false\n  name: HashCore\n  nameWithType: SHA1Cng.HashCore\n  fullName: SHA1Cng.HashCore\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/SHA1Cng.xml\n- uid: System.Security.Cryptography.SHA1Cng.HashFinal*\n  parent: System.Security.Cryptography.SHA1Cng\n  isExternal: false\n  name: HashFinal\n  nameWithType: SHA1Cng.HashFinal\n  fullName: SHA1Cng.HashFinal\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/SHA1Cng.xml\n- uid: System.Security.Cryptography.SHA1Cng.Initialize*\n  parent: System.Security.Cryptography.SHA1Cng\n  isExternal: false\n  name: Initialize\n  nameWithType: SHA1Cng.Initialize\n  fullName: SHA1Cng.Initialize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/SHA1Cng.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Security.Cryptography.HashAlgorithm.CanReuseTransform\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: CanReuseTransform\n  nameWithType: HashAlgorithm.CanReuseTransform\n  fullName: HashAlgorithm.CanReuseTransform\n- uid: System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: CanTransformMultipleBlocks\n  nameWithType: HashAlgorithm.CanTransformMultipleBlocks\n  fullName: HashAlgorithm.CanTransformMultipleBlocks\n- uid: System.Security.Cryptography.HashAlgorithm.Clear\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: Clear()\n  nameWithType: HashAlgorithm.Clear()\n  fullName: HashAlgorithm.Clear()\n- uid: System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: ComputeHash(Byte[])\n  nameWithType: HashAlgorithm.ComputeHash(Byte[])\n  fullName: HashAlgorithm.ComputeHash(Byte[])\n- uid: System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: ComputeHash(Stream)\n  nameWithType: HashAlgorithm.ComputeHash(Stream)\n  fullName: HashAlgorithm.ComputeHash(Stream)\n- uid: System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: ComputeHash(Byte[], Int32, Int32)\n  nameWithType: HashAlgorithm.ComputeHash(Byte[], Int32, Int32)\n  fullName: HashAlgorithm.ComputeHash(Byte[], Int32, Int32)\n- uid: System.Security.Cryptography.SHA1.Create\n  parent: System.Security.Cryptography.SHA1\n  isExternal: false\n  name: Create()\n  nameWithType: SHA1.Create()\n  fullName: SHA1.Create()\n- uid: System.Security.Cryptography.SHA1.Create(System.String)\n  parent: System.Security.Cryptography.SHA1\n  isExternal: false\n  name: Create(String)\n  nameWithType: SHA1.Create(String)\n  fullName: SHA1.Create(String)\n- uid: System.Security.Cryptography.HashAlgorithm.Dispose\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: Dispose()\n  nameWithType: HashAlgorithm.Dispose()\n  fullName: HashAlgorithm.Dispose()\n- uid: System.Security.Cryptography.HashAlgorithm.Hash\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: Hash\n  nameWithType: HashAlgorithm.Hash\n  fullName: HashAlgorithm.Hash\n- uid: System.Security.Cryptography.HashAlgorithm.HashSize\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: HashSize\n  nameWithType: HashAlgorithm.HashSize\n  fullName: HashAlgorithm.HashSize\n- uid: System.Security.Cryptography.HashAlgorithm.HashSizeValue\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: HashSizeValue\n  nameWithType: HashAlgorithm.HashSizeValue\n  fullName: HashAlgorithm.HashSizeValue\n- uid: System.Security.Cryptography.HashAlgorithm.HashValue\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: HashValue\n  nameWithType: HashAlgorithm.HashValue\n  fullName: HashAlgorithm.HashValue\n- uid: System.Security.Cryptography.HashAlgorithm.InputBlockSize\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: InputBlockSize\n  nameWithType: HashAlgorithm.InputBlockSize\n  fullName: HashAlgorithm.InputBlockSize\n- uid: System.Security.Cryptography.HashAlgorithm.OutputBlockSize\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: OutputBlockSize\n  nameWithType: HashAlgorithm.OutputBlockSize\n  fullName: HashAlgorithm.OutputBlockSize\n- uid: System.Security.Cryptography.HashAlgorithm.State\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: State\n  nameWithType: HashAlgorithm.State\n  fullName: HashAlgorithm.State\n- uid: System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: TransformBlock(Byte[], Int32, Int32, Byte[], Int32)\n  nameWithType: HashAlgorithm.TransformBlock(Byte[], Int32, Int32, Byte[], Int32)\n  fullName: HashAlgorithm.TransformBlock(Byte[], Int32, Int32, Byte[], Int32)\n- uid: System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: TransformFinalBlock(Byte[], Int32, Int32)\n  nameWithType: HashAlgorithm.TransformFinalBlock(Byte[], Int32, Int32)\n  fullName: HashAlgorithm.TransformFinalBlock(Byte[], Int32, Int32)\n"}