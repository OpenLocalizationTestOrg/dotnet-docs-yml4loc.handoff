{"nodes":[{"content":"Contains transformation data that is accumulated when manipulation events occur.","nodes":[{"pos":[0,80],"content":"Contains transformation data that is accumulated when manipulation events occur.","nodes":[{"content":"Contains transformation data that is accumulated when manipulation events occur.","pos":[0,80]}]}],"pos":[736,817],"yaml":true},{"content":"The <xref:System.Windows.Input.ManipulationDelta> class contains information about the changes in the position of a manipulation.  [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] interprets the changes as a <xref:System.Windows.Input.ManipulationDelta.Translation%2A>, <xref:System.Windows.Input.ManipulationDelta.Expansion%2A>, or <xref:System.Windows.Input.ManipulationDelta.Rotation%2A>. When the <xref:System.Windows.UIElement.ManipulationDelta> event occurs on a <xref:System.Windows.UIElement>, use the properties on a <xref:System.Windows.Input.ManipulationDelta> object to transform the object that should be manipulated.  The <xref:System.Windows.Input.ManipulationDeltaEventArgs> class provides two properties of type <xref:System.Windows.Input.ManipulationDelta>: <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> and <xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A>.  \n  \n For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).  For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).","nodes":[{"pos":[0,958],"content":"The <xref:System.Windows.Input.ManipulationDelta> class contains information about the changes in the position of a manipulation.  [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] interprets the changes as a <xref:System.Windows.Input.ManipulationDelta.Translation%2A>, <xref:System.Windows.Input.ManipulationDelta.Expansion%2A>, or <xref:System.Windows.Input.ManipulationDelta.Rotation%2A>. When the <xref:System.Windows.UIElement.ManipulationDelta> event occurs on a <xref:System.Windows.UIElement>, use the properties on a <xref:System.Windows.Input.ManipulationDelta> object to transform the object that should be manipulated.  The <xref:System.Windows.Input.ManipulationDeltaEventArgs> class provides two properties of type <xref:System.Windows.Input.ManipulationDelta>: <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> and <xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Input.ManipulationDelta&gt;</ph> class contains information about the changes in the position of a manipulation.","pos":[0,129],"source":"The <xref:System.Windows.Input.ManipulationDelta> class contains information about the changes in the position of a manipulation."},{"content":"<ph id=\"ph1\">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> interprets the changes as a <ph id=\"ph2\">&lt;xref:System.Windows.Input.ManipulationDelta.Translation%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Windows.Input.ManipulationDelta.Expansion%2A&gt;</ph>, or <ph id=\"ph4\">&lt;xref:System.Windows.Input.ManipulationDelta.Rotation%2A&gt;</ph>.","pos":[131,412],"source":"[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] interprets the changes as a <xref:System.Windows.Input.ManipulationDelta.Translation%2A>, <xref:System.Windows.Input.ManipulationDelta.Expansion%2A>, or <xref:System.Windows.Input.ManipulationDelta.Rotation%2A>."},{"content":"When the <ph id=\"ph1\">&lt;xref:System.Windows.UIElement.ManipulationDelta&gt;</ph> event occurs on a <ph id=\"ph2\">&lt;xref:System.Windows.UIElement&gt;</ph>, use the properties on a <ph id=\"ph3\">&lt;xref:System.Windows.Input.ManipulationDelta&gt;</ph> object to transform the object that should be manipulated.","pos":[413,651],"source":" When the <xref:System.Windows.UIElement.ManipulationDelta> event occurs on a <xref:System.Windows.UIElement>, use the properties on a <xref:System.Windows.Input.ManipulationDelta> object to transform the object that should be manipulated."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Input.ManipulationDeltaEventArgs&gt;</ph> class provides two properties of type <ph id=\"ph2\">&lt;xref:System.Windows.Input.ManipulationDelta&gt;</ph>: <ph id=\"ph3\">&lt;xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A&gt;</ph> and <ph id=\"ph4\">&lt;xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A&gt;</ph>.","pos":[653,958],"source":"  The <xref:System.Windows.Input.ManipulationDeltaEventArgs> class provides two properties of type <xref:System.Windows.Input.ManipulationDelta>: <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> and <xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A>."}]},{"pos":[965,1289],"content":"For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).  For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).","nodes":[{"content":"For more information about manipulations, see the <bpt id=\"p1\">[</bpt>Input Overview<ept id=\"p1\">](~/docs/framework/wpf/advanced/input-overview.md)</ept>.","pos":[0,116],"source":"For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md)."},{"content":"For an example of an application that responds to manipulations, see <bpt id=\"p1\">[</bpt>Walkthrough: Creating Your First Touch Application<ept id=\"p1\">](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)</ept>.","pos":[118,324],"source":"  For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)."}]}],"pos":[828,2122],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Input.ManipulationDelta\"></xref> class.","nodes":[{"pos":[0,100],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.ManipulationDelta\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Windows.Input.ManipulationDelta\"></xref> class."}],"pos":[4738,4839],"yaml":true},{"content":"The linear motion of the manipulation in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].","nodes":[{"pos":[0,125],"content":"The linear motion of the manipulation in <ph id=\"ph1\">[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</ph>.","source":"The linear motion of the manipulation in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]."}],"pos":[5094,5220],"yaml":true},{"content":"The rotation of the manipulation in degrees.","nodes":[{"pos":[0,44],"content":"The rotation of the manipulation in degrees.","nodes":[{"content":"The rotation of the manipulation in degrees.","pos":[0,44]}]}],"pos":[5284,5329],"yaml":true},{"content":"The amount the manipulation has resized as a multiplier.","nodes":[{"pos":[0,56],"content":"The amount the manipulation has resized as a multiplier.","nodes":[{"content":"The amount the manipulation has resized as a multiplier.","pos":[0,56]}]}],"pos":[5398,5455],"yaml":true},{"content":"The amount the manipulation has resized in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].","nodes":[{"pos":[0,127],"content":"The amount the manipulation has resized in <ph id=\"ph1\">[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</ph>.","source":"The amount the manipulation has resized in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]."}],"pos":[5528,5656],"yaml":true},{"content":"Gets or sets the amount the manipulation has resized in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].","nodes":[{"pos":[0,140],"content":"Gets or sets the amount the manipulation has resized in <ph id=\"ph1\">[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</ph>.","source":"Gets or sets the amount the manipulation has resized in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]."}],"pos":[6668,6809],"yaml":true},{"content":"The <xref:System.Windows.Input.ManipulationDelta.Scale%2A> and <xref:System.Windows.Input.ManipulationDelta.Expansion%2A> properties both report a resizing manipulation.  The difference between the two is the way in which the value is reported.  The <xref:System.Windows.Input.ManipulationDelta.Expansion%2A> property reports the resizing manipulation in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]. The <xref:System.Windows.Input.ManipulationDelta.Scale%2A> property reports the value as a multiplier.  If <xref:System.Windows.Input.ManipulationDelta.Scale%2A> is 0.5, the manipulation is interpreted as decreasing the size by 50 percent.  If <xref:System.Windows.Input.ManipulationDelta.Scale%2A> is 2, the manipulation is interpreted as increasing the size by 100 percent.","nodes":[{"pos":[0,815],"content":"The <xref:System.Windows.Input.ManipulationDelta.Scale%2A> and <xref:System.Windows.Input.ManipulationDelta.Expansion%2A> properties both report a resizing manipulation.  The difference between the two is the way in which the value is reported.  The <xref:System.Windows.Input.ManipulationDelta.Expansion%2A> property reports the resizing manipulation in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]. The <xref:System.Windows.Input.ManipulationDelta.Scale%2A> property reports the value as a multiplier.  If <xref:System.Windows.Input.ManipulationDelta.Scale%2A> is 0.5, the manipulation is interpreted as decreasing the size by 50 percent.  If <xref:System.Windows.Input.ManipulationDelta.Scale%2A> is 2, the manipulation is interpreted as increasing the size by 100 percent.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Input.ManipulationDelta.Scale%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Input.ManipulationDelta.Expansion%2A&gt;</ph> properties both report a resizing manipulation.","pos":[0,169],"source":"The <xref:System.Windows.Input.ManipulationDelta.Scale%2A> and <xref:System.Windows.Input.ManipulationDelta.Expansion%2A> properties both report a resizing manipulation."},{"content":"The difference between the two is the way in which the value is reported.","pos":[171,244]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Input.ManipulationDelta.Expansion%2A&gt;</ph> property reports the resizing manipulation in <ph id=\"ph2\">[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</ph>.","pos":[246,439],"source":"  The <xref:System.Windows.Input.ManipulationDelta.Expansion%2A> property reports the resizing manipulation in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Input.ManipulationDelta.Scale%2A&gt;</ph> property reports the value as a multiplier.","pos":[440,542],"source":" The <xref:System.Windows.Input.ManipulationDelta.Scale%2A> property reports the value as a multiplier."},{"content":"If <ph id=\"ph1\">&lt;xref:System.Windows.Input.ManipulationDelta.Scale%2A&gt;</ph> is 0.5, the manipulation is interpreted as decreasing the size by 50 percent.","pos":[544,679],"source":"  If <xref:System.Windows.Input.ManipulationDelta.Scale%2A> is 0.5, the manipulation is interpreted as decreasing the size by 50 percent."},{"content":"If <ph id=\"ph1\">&lt;xref:System.Windows.Input.ManipulationDelta.Scale%2A&gt;</ph> is 2, the manipulation is interpreted as increasing the size by 100 percent.","pos":[681,815],"source":"  If <xref:System.Windows.Input.ManipulationDelta.Scale%2A> is 2, the manipulation is interpreted as increasing the size by 100 percent."}]}],"pos":[6820,7636],"yaml":true,"extradata":"MT"},{"content":"The amount the manipulation has resized in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].","nodes":[{"pos":[0,127],"content":"The amount the manipulation has resized in <ph id=\"ph1\">[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</ph>.","source":"The amount the manipulation has resized in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]."}],"pos":[7772,7900],"yaml":true},{"content":"Gets or sets the rotation of the manipulation in degrees.","nodes":[{"pos":[0,57],"content":"Gets or sets the rotation of the manipulation in degrees.","nodes":[{"content":"Gets or sets the rotation of the manipulation in degrees.","pos":[0,57]}]}],"pos":[8910,8968],"yaml":true},{"content":"The <xref:System.Windows.Input.ManipulationDelta.Rotation%2A> property reports the way a manipulation is interpreted as rotating around an axis.  The axis is usually the point between the two points of contact that initiated the manipulation.","nodes":[{"pos":[0,242],"content":"The <xref:System.Windows.Input.ManipulationDelta.Rotation%2A> property reports the way a manipulation is interpreted as rotating around an axis.  The axis is usually the point between the two points of contact that initiated the manipulation.","nodes":[{"content":"The <xref:System.Windows.Input.ManipulationDelta.Rotation%2A> property reports the way a manipulation is interpreted as rotating around an axis.  The axis is usually the point between the two points of contact that initiated the manipulation.","pos":[0,242],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Input.ManipulationDelta.Rotation%2A&gt;</ph> property reports the way a manipulation is interpreted as rotating around an axis.","pos":[0,144],"source":"The <xref:System.Windows.Input.ManipulationDelta.Rotation%2A> property reports the way a manipulation is interpreted as rotating around an axis."},{"content":"The axis is usually the point between the two points of contact that initiated the manipulation.","pos":[146,242]}]}]}],"pos":[8979,9222],"yaml":true,"extradata":"MT"},{"content":"The rotation of the manipulation in degrees.","nodes":[{"pos":[0,44],"content":"The rotation of the manipulation in degrees.","nodes":[{"content":"The rotation of the manipulation in degrees.","pos":[0,44]}]}],"pos":[10259,10304],"yaml":true},{"content":"Gets or sets the amount the manipulation has resized as a multiplier.","nodes":[{"pos":[0,69],"content":"Gets or sets the amount the manipulation has resized as a multiplier.","nodes":[{"content":"Gets or sets the amount the manipulation has resized as a multiplier.","pos":[0,69]}]}],"pos":[11295,11365],"yaml":true},{"content":"The <xref:System.Windows.Input.ManipulationDelta.Scale%2A> and <xref:System.Windows.Input.ManipulationDelta.Expansion%2A> properties both report a resizing manipulation.  The difference between the two is the way in which the value is reported.  The <xref:System.Windows.Input.ManipulationDelta.Scale%2A> property reports the value as a multiplier.  If <xref:System.Windows.Input.ManipulationDelta.Scale%2A> is 0.5, the manipulation is interpreted as decreasing the size by 50 percent.  If <xref:System.Windows.Input.ManipulationDelta.Scale%2A> is 2, the manipulation is interpreted as increasing the size by 100 percent. The <xref:System.Windows.Input.ManipulationDelta.Expansion%2A> property reports the resizing manipulation in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].","nodes":[{"pos":[0,815],"content":"The <xref:System.Windows.Input.ManipulationDelta.Scale%2A> and <xref:System.Windows.Input.ManipulationDelta.Expansion%2A> properties both report a resizing manipulation.  The difference between the two is the way in which the value is reported.  The <xref:System.Windows.Input.ManipulationDelta.Scale%2A> property reports the value as a multiplier.  If <xref:System.Windows.Input.ManipulationDelta.Scale%2A> is 0.5, the manipulation is interpreted as decreasing the size by 50 percent.  If <xref:System.Windows.Input.ManipulationDelta.Scale%2A> is 2, the manipulation is interpreted as increasing the size by 100 percent. The <xref:System.Windows.Input.ManipulationDelta.Expansion%2A> property reports the resizing manipulation in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Input.ManipulationDelta.Scale%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Input.ManipulationDelta.Expansion%2A&gt;</ph> properties both report a resizing manipulation.","pos":[0,169],"source":"The <xref:System.Windows.Input.ManipulationDelta.Scale%2A> and <xref:System.Windows.Input.ManipulationDelta.Expansion%2A> properties both report a resizing manipulation."},{"content":"The difference between the two is the way in which the value is reported.","pos":[171,244]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Input.ManipulationDelta.Scale%2A&gt;</ph> property reports the value as a multiplier.","pos":[246,348],"source":"  The <xref:System.Windows.Input.ManipulationDelta.Scale%2A> property reports the value as a multiplier."},{"content":"If <ph id=\"ph1\">&lt;xref:System.Windows.Input.ManipulationDelta.Scale%2A&gt;</ph> is 0.5, the manipulation is interpreted as decreasing the size by 50 percent.","pos":[350,485],"source":"  If <xref:System.Windows.Input.ManipulationDelta.Scale%2A> is 0.5, the manipulation is interpreted as decreasing the size by 50 percent."},{"content":"If <ph id=\"ph1\">&lt;xref:System.Windows.Input.ManipulationDelta.Scale%2A&gt;</ph> is 2, the manipulation is interpreted as increasing the size by 100 percent.","pos":[487,621],"source":"  If <xref:System.Windows.Input.ManipulationDelta.Scale%2A> is 2, the manipulation is interpreted as increasing the size by 100 percent."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Input.ManipulationDelta.Expansion%2A&gt;</ph> property reports the resizing manipulation in <ph id=\"ph2\">[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</ph>.","pos":[622,815],"source":" The <xref:System.Windows.Input.ManipulationDelta.Expansion%2A> property reports the resizing manipulation in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]."}]}],"pos":[11376,12192],"yaml":true,"extradata":"MT"},{"content":"The amount the manipulation has resized.","nodes":[{"pos":[0,40],"content":"The amount the manipulation has resized.","nodes":[{"content":"The amount the manipulation has resized.","pos":[0,40]}]}],"pos":[13249,13290],"yaml":true},{"content":"Gets or sets the linear motion of the manipulation.","nodes":[{"pos":[0,51],"content":"Gets or sets the linear motion of the manipulation.","nodes":[{"content":"Gets or sets the linear motion of the manipulation.","pos":[0,51]}]}],"pos":[14314,14366],"yaml":true},{"content":"The <xref:System.Windows.Input.ManipulationDelta.Translation%2A> property reports the way a manipulation is interpreted as moving horizontally and vertically on the screen.","nodes":[{"pos":[0,172],"content":"The <xref:System.Windows.Input.ManipulationDelta.Translation%2A> property reports the way a manipulation is interpreted as moving horizontally and vertically on the screen.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Input.ManipulationDelta.Translation%2A&gt;</ph> property reports the way a manipulation is interpreted as moving horizontally and vertically on the screen.","pos":[0,172],"source":"The <xref:System.Windows.Input.ManipulationDelta.Translation%2A> property reports the way a manipulation is interpreted as moving horizontally and vertically on the screen."}]}],"pos":[14377,14550],"yaml":true,"extradata":"MT"},{"content":"The linear motion of the manipulation in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].","nodes":[{"pos":[0,125],"content":"The linear motion of the manipulation in <ph id=\"ph1\">[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</ph>.","source":"The linear motion of the manipulation in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]."}],"pos":[15613,15739],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Input.ManipulationDelta\n  commentId: T:System.Windows.Input.ManipulationDelta\n  id: ManipulationDelta\n  children:\n  - System.Windows.Input.ManipulationDelta.#ctor(System.Windows.Vector,System.Double,System.Windows.Vector,System.Windows.Vector)\n  - System.Windows.Input.ManipulationDelta.Expansion\n  - System.Windows.Input.ManipulationDelta.Rotation\n  - System.Windows.Input.ManipulationDelta.Scale\n  - System.Windows.Input.ManipulationDelta.Translation\n  langs:\n  - csharp\n  name: ManipulationDelta\n  nameWithType: ManipulationDelta\n  fullName: System.Windows.Input.ManipulationDelta\n  type: Class\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Contains transformation data that is accumulated when manipulation events occur.\n  remarks: \"The <xref:System.Windows.Input.ManipulationDelta> class contains information about the changes in the position of a manipulation.  [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] interprets the changes as a <xref:System.Windows.Input.ManipulationDelta.Translation%2A>, <xref:System.Windows.Input.ManipulationDelta.Expansion%2A>, or <xref:System.Windows.Input.ManipulationDelta.Rotation%2A>. When the <xref:System.Windows.UIElement.ManipulationDelta> event occurs on a <xref:System.Windows.UIElement>, use the properties on a <xref:System.Windows.Input.ManipulationDelta> object to transform the object that should be manipulated.  The <xref:System.Windows.Input.ManipulationDeltaEventArgs> class provides two properties of type <xref:System.Windows.Input.ManipulationDelta>: <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> and <xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A>.  \\n  \\n For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).  For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).\"\n  example:\n  - \"The following example shows an event handler for the <xref:System.Windows.UIElement.ManipulationDelta> event.  The example applies the <xref:System.Windows.Input.ManipulationDelta.Translation%2A>, <xref:System.Windows.Input.ManipulationDelta.Scale%2A>, and <xref:System.Windows.Input.ManipulationDelta.Rotation%2A> properties to move, resize, and rotate a <xref:System.Windows.Shapes.Rectangle>. This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).  \\n  \\n [!code-csharp[BasicManipulation#ManipulationDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationdelta)]\\n [!code-vb[BasicManipulation#ManipulationDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationdelta)]\"\n  syntax:\n    content: public class ManipulationDelta\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationDelta.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.ManipulationDelta.#ctor(System.Windows.Vector,System.Double,System.Windows.Vector,System.Windows.Vector)\n  commentId: M:System.Windows.Input.ManipulationDelta.#ctor(System.Windows.Vector,System.Double,System.Windows.Vector,System.Windows.Vector)\n  id: '#ctor(System.Windows.Vector,System.Double,System.Windows.Vector,System.Windows.Vector)'\n  parent: System.Windows.Input.ManipulationDelta\n  langs:\n  - csharp\n  name: ManipulationDelta(Vector, Double, Vector, Vector)\n  nameWithType: ManipulationDelta.ManipulationDelta(Vector, Double, Vector, Vector)\n  fullName: ManipulationDelta.ManipulationDelta(Vector, Double, Vector, Vector)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Input.ManipulationDelta\"></xref> class.\n  syntax:\n    content: public ManipulationDelta (System.Windows.Vector translation, double rotation, System.Windows.Vector scale, System.Windows.Vector expansion);\n    parameters:\n    - id: translation\n      type: System.Windows.Vector\n      description: The linear motion of the manipulation in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].\n    - id: rotation\n      type: System.Double\n      description: The rotation of the manipulation in degrees.\n    - id: scale\n      type: System.Windows.Vector\n      description: The amount the manipulation has resized as a multiplier.\n    - id: expansion\n      type: System.Windows.Vector\n      description: The amount the manipulation has resized in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].\n  overload: System.Windows.Input.ManipulationDelta.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationDelta.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.ManipulationDelta.Expansion\n  commentId: P:System.Windows.Input.ManipulationDelta.Expansion\n  id: Expansion\n  parent: System.Windows.Input.ManipulationDelta\n  langs:\n  - csharp\n  name: Expansion\n  nameWithType: ManipulationDelta.Expansion\n  fullName: ManipulationDelta.Expansion\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Gets or sets the amount the manipulation has resized in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].\n  remarks: The <xref:System.Windows.Input.ManipulationDelta.Scale%2A> and <xref:System.Windows.Input.ManipulationDelta.Expansion%2A> properties both report a resizing manipulation.  The difference between the two is the way in which the value is reported.  The <xref:System.Windows.Input.ManipulationDelta.Expansion%2A> property reports the resizing manipulation in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]. The <xref:System.Windows.Input.ManipulationDelta.Scale%2A> property reports the value as a multiplier.  If <xref:System.Windows.Input.ManipulationDelta.Scale%2A> is 0.5, the manipulation is interpreted as decreasing the size by 50 percent.  If <xref:System.Windows.Input.ManipulationDelta.Scale%2A> is 2, the manipulation is interpreted as increasing the size by 100 percent.\n  syntax:\n    content: public System.Windows.Vector Expansion { get; }\n    return:\n      type: System.Windows.Vector\n      description: The amount the manipulation has resized in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].\n  overload: System.Windows.Input.ManipulationDelta.Expansion*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationDelta.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.ManipulationDelta.Rotation\n  commentId: P:System.Windows.Input.ManipulationDelta.Rotation\n  id: Rotation\n  parent: System.Windows.Input.ManipulationDelta\n  langs:\n  - csharp\n  name: Rotation\n  nameWithType: ManipulationDelta.Rotation\n  fullName: ManipulationDelta.Rotation\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Gets or sets the rotation of the manipulation in degrees.\n  remarks: The <xref:System.Windows.Input.ManipulationDelta.Rotation%2A> property reports the way a manipulation is interpreted as rotating around an axis.  The axis is usually the point between the two points of contact that initiated the manipulation.\n  example:\n  - \"The following example shows an event handler for the <xref:System.Windows.UIElement.ManipulationDelta> event.  The example applies the <xref:System.Windows.Input.ManipulationDelta.Translation%2A>, <xref:System.Windows.Input.ManipulationDelta.Scale%2A>, and <xref:System.Windows.Input.ManipulationDelta.Rotation%2A> properties to move, resize, and rotate a <xref:System.Windows.Shapes.Rectangle>. This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).  \\n  \\n [!code-csharp[BasicManipulation#ManipulationDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationdelta)]\\n [!code-vb[BasicManipulation#ManipulationDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationdelta)]\"\n  syntax:\n    content: public double Rotation { get; }\n    return:\n      type: System.Double\n      description: The rotation of the manipulation in degrees.\n  overload: System.Windows.Input.ManipulationDelta.Rotation*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationDelta.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.ManipulationDelta.Scale\n  commentId: P:System.Windows.Input.ManipulationDelta.Scale\n  id: Scale\n  parent: System.Windows.Input.ManipulationDelta\n  langs:\n  - csharp\n  name: Scale\n  nameWithType: ManipulationDelta.Scale\n  fullName: ManipulationDelta.Scale\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Gets or sets the amount the manipulation has resized as a multiplier.\n  remarks: The <xref:System.Windows.Input.ManipulationDelta.Scale%2A> and <xref:System.Windows.Input.ManipulationDelta.Expansion%2A> properties both report a resizing manipulation.  The difference between the two is the way in which the value is reported.  The <xref:System.Windows.Input.ManipulationDelta.Scale%2A> property reports the value as a multiplier.  If <xref:System.Windows.Input.ManipulationDelta.Scale%2A> is 0.5, the manipulation is interpreted as decreasing the size by 50 percent.  If <xref:System.Windows.Input.ManipulationDelta.Scale%2A> is 2, the manipulation is interpreted as increasing the size by 100 percent. The <xref:System.Windows.Input.ManipulationDelta.Expansion%2A> property reports the resizing manipulation in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].\n  example:\n  - \"The following example shows an event handler for the <xref:System.Windows.UIElement.ManipulationDelta> event.  The example applies the <xref:System.Windows.Input.ManipulationDelta.Translation%2A>, <xref:System.Windows.Input.ManipulationDelta.Scale%2A>, and <xref:System.Windows.Input.ManipulationDelta.Rotation%2A> properties to move, resize, and rotate a <xref:System.Windows.Shapes.Rectangle>. This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).  \\n  \\n [!code-csharp[BasicManipulation#ManipulationDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationdelta)]\\n [!code-vb[BasicManipulation#ManipulationDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationdelta)]\"\n  syntax:\n    content: public System.Windows.Vector Scale { get; }\n    return:\n      type: System.Windows.Vector\n      description: The amount the manipulation has resized.\n  overload: System.Windows.Input.ManipulationDelta.Scale*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationDelta.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.ManipulationDelta.Translation\n  commentId: P:System.Windows.Input.ManipulationDelta.Translation\n  id: Translation\n  parent: System.Windows.Input.ManipulationDelta\n  langs:\n  - csharp\n  name: Translation\n  nameWithType: ManipulationDelta.Translation\n  fullName: ManipulationDelta.Translation\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Gets or sets the linear motion of the manipulation.\n  remarks: The <xref:System.Windows.Input.ManipulationDelta.Translation%2A> property reports the way a manipulation is interpreted as moving horizontally and vertically on the screen.\n  example:\n  - \"The following example shows an event handler for the <xref:System.Windows.UIElement.ManipulationDelta> event.  The example applies the <xref:System.Windows.Input.ManipulationDelta.Translation%2A>, <xref:System.Windows.Input.ManipulationDelta.Scale%2A>, and <xref:System.Windows.Input.ManipulationDelta.Rotation%2A> properties to move, resize, and rotate a <xref:System.Windows.Shapes.Rectangle>. This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).  \\n  \\n [!code-csharp[BasicManipulation#ManipulationDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationdelta)]\\n [!code-vb[BasicManipulation#ManipulationDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationdelta)]\"\n  syntax:\n    content: public System.Windows.Vector Translation { get; }\n    return:\n      type: System.Windows.Vector\n      description: The linear motion of the manipulation in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].\n  overload: System.Windows.Input.ManipulationDelta.Translation*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationDelta.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Input.ManipulationDelta.#ctor(System.Windows.Vector,System.Double,System.Windows.Vector,System.Windows.Vector)\n  parent: System.Windows.Input.ManipulationDelta\n  isExternal: false\n  name: ManipulationDelta(Vector, Double, Vector, Vector)\n  nameWithType: ManipulationDelta.ManipulationDelta(Vector, Double, Vector, Vector)\n  fullName: ManipulationDelta.ManipulationDelta(Vector, Double, Vector, Vector)\n- uid: System.Windows.Vector\n  parent: System.Windows\n  isExternal: false\n  name: Vector\n  nameWithType: Vector\n  fullName: System.Windows.Vector\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Input.ManipulationDelta.Expansion\n  parent: System.Windows.Input.ManipulationDelta\n  isExternal: false\n  name: Expansion\n  nameWithType: ManipulationDelta.Expansion\n  fullName: ManipulationDelta.Expansion\n- uid: System.Windows.Input.ManipulationDelta.Rotation\n  parent: System.Windows.Input.ManipulationDelta\n  isExternal: false\n  name: Rotation\n  nameWithType: ManipulationDelta.Rotation\n  fullName: ManipulationDelta.Rotation\n- uid: System.Windows.Input.ManipulationDelta.Scale\n  parent: System.Windows.Input.ManipulationDelta\n  isExternal: false\n  name: Scale\n  nameWithType: ManipulationDelta.Scale\n  fullName: ManipulationDelta.Scale\n- uid: System.Windows.Input.ManipulationDelta.Translation\n  parent: System.Windows.Input.ManipulationDelta\n  isExternal: false\n  name: Translation\n  nameWithType: ManipulationDelta.Translation\n  fullName: ManipulationDelta.Translation\n- uid: System.Windows.Input.ManipulationDelta.#ctor*\n  parent: System.Windows.Input.ManipulationDelta\n  isExternal: false\n  name: ManipulationDelta\n  nameWithType: ManipulationDelta.ManipulationDelta\n  fullName: ManipulationDelta.ManipulationDelta\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationDelta.xml\n- uid: System.Windows.Input.ManipulationDelta.Expansion*\n  parent: System.Windows.Input.ManipulationDelta\n  isExternal: false\n  name: Expansion\n  nameWithType: ManipulationDelta.Expansion\n  fullName: ManipulationDelta.Expansion\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationDelta.xml\n- uid: System.Windows.Input.ManipulationDelta.Rotation*\n  parent: System.Windows.Input.ManipulationDelta\n  isExternal: false\n  name: Rotation\n  nameWithType: ManipulationDelta.Rotation\n  fullName: ManipulationDelta.Rotation\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationDelta.xml\n- uid: System.Windows.Input.ManipulationDelta.Scale*\n  parent: System.Windows.Input.ManipulationDelta\n  isExternal: false\n  name: Scale\n  nameWithType: ManipulationDelta.Scale\n  fullName: ManipulationDelta.Scale\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationDelta.xml\n- uid: System.Windows.Input.ManipulationDelta.Translation*\n  parent: System.Windows.Input.ManipulationDelta\n  isExternal: false\n  name: Translation\n  nameWithType: ManipulationDelta.Translation\n  fullName: ManipulationDelta.Translation\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationDelta.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}