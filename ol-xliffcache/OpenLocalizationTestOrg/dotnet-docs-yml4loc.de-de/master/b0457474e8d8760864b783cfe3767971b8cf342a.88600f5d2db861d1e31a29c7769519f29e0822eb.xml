{"nodes":[{"content":"Exposes methods and properties to support UI Automation client access to controls that initiate or perform a single, unambiguous action and do not maintain state when activated.","nodes":[{"pos":[0,177],"content":"Exposes methods and properties to support UI Automation client access to controls that initiate or perform a single, unambiguous action and do not maintain state when activated.","nodes":[{"content":"Exposes methods and properties to support UI Automation client access to controls that initiate or perform a single, unambiguous action and do not maintain state when activated.","pos":[0,177]}]}],"pos":[511,689],"yaml":true},{"content":"Implemented on a UI Automation provider that must support the <xref:System.Windows.Automation.InvokePattern> control pattern.  \n  \n Controls implement <xref:System.Windows.Automation.Provider.IInvokeProvider> if the same behavior is not exposed through another control pattern provider. For example, if the <xref:System.Windows.Automation.InvokePattern.Invoke%2A> method on a control performs the same action as the <xref:System.Windows.Automation.ExpandCollapsePattern.Expand%2A> or <xref:System.Windows.Automation.ExpandCollapsePattern.Collapse%2A> method, the control should not implement <xref:System.Windows.Automation.Provider.IInvokeProvider>.","nodes":[{"pos":[0,125],"content":"Implemented on a UI Automation provider that must support the <xref:System.Windows.Automation.InvokePattern> control pattern.","nodes":[{"content":"Implemented on a UI Automation provider that must support the <ph id=\"ph1\">&lt;xref:System.Windows.Automation.InvokePattern&gt;</ph> control pattern.","pos":[0,125],"source":"Implemented on a UI Automation provider that must support the <xref:System.Windows.Automation.InvokePattern> control pattern."}]},{"pos":[132,650],"content":"Controls implement <xref:System.Windows.Automation.Provider.IInvokeProvider> if the same behavior is not exposed through another control pattern provider. For example, if the <xref:System.Windows.Automation.InvokePattern.Invoke%2A> method on a control performs the same action as the <xref:System.Windows.Automation.ExpandCollapsePattern.Expand%2A> or <xref:System.Windows.Automation.ExpandCollapsePattern.Collapse%2A> method, the control should not implement <xref:System.Windows.Automation.Provider.IInvokeProvider>.","nodes":[{"content":"Controls implement <xref:System.Windows.Automation.Provider.IInvokeProvider> if the same behavior is not exposed through another control pattern provider. For example, if the <xref:System.Windows.Automation.InvokePattern.Invoke%2A> method on a control performs the same action as the <xref:System.Windows.Automation.ExpandCollapsePattern.Expand%2A> or <xref:System.Windows.Automation.ExpandCollapsePattern.Collapse%2A> method, the control should not implement <xref:System.Windows.Automation.Provider.IInvokeProvider>.","pos":[0,518],"nodes":[{"content":"Controls implement <ph id=\"ph1\">&lt;xref:System.Windows.Automation.Provider.IInvokeProvider&gt;</ph> if the same behavior is not exposed through another control pattern provider.","pos":[0,154],"source":"Controls implement <xref:System.Windows.Automation.Provider.IInvokeProvider> if the same behavior is not exposed through another control pattern provider."},{"content":"For example, if the <ph id=\"ph1\">&lt;xref:System.Windows.Automation.InvokePattern.Invoke%2A&gt;</ph> method on a control performs the same action as the <ph id=\"ph2\">&lt;xref:System.Windows.Automation.ExpandCollapsePattern.Expand%2A&gt;</ph> or <ph id=\"ph3\">&lt;xref:System.Windows.Automation.ExpandCollapsePattern.Collapse%2A&gt;</ph> method, the control should not implement <ph id=\"ph4\">&lt;xref:System.Windows.Automation.Provider.IInvokeProvider&gt;</ph>.","pos":[155,518],"source":" For example, if the <xref:System.Windows.Automation.InvokePattern.Invoke%2A> method on a control performs the same action as the <xref:System.Windows.Automation.ExpandCollapsePattern.Expand%2A> or <xref:System.Windows.Automation.ExpandCollapsePattern.Collapse%2A> method, the control should not implement <xref:System.Windows.Automation.Provider.IInvokeProvider>."}]}]}],"pos":[700,1355],"yaml":true,"extradata":"MT"},{"content":"Sends a request to activate a control and initiate its single, unambiguous action.","nodes":[{"pos":[0,82],"content":"Sends a request to activate a control and initiate its single, unambiguous action.","nodes":[{"content":"Sends a request to activate a control and initiate its single, unambiguous action.","pos":[0,82]}]}],"pos":[3750,3833],"yaml":true},{"content":"<xref:System.Windows.Automation.Provider.IInvokeProvider.Invoke%2A> is an asynchronous call and must return immediately without blocking.  \n  \n> [!NOTE]\n>  This behavior is particularly critical for controls that, directly or indirectly, launch a modal dialog when invoked. Any UI Automation client that instigated the event will remain blocked until the modal dialog is closed.  \n  \n <xref:System.Windows.Automation.Provider.IInvokeProvider.Invoke%2A> raises the <xref:System.Windows.Automation.InvokePatternIdentifiers.InvokedEvent> event. If possible, the event should be raised after the control has completed its associated action.  \n  \n <xref:System.Windows.Automation.InvokePatternIdentifiers.InvokedEvent> should be raised before servicing the <xref:System.Windows.Automation.Provider.IInvokeProvider.Invoke%2A> request in the following scenarios:  \n  \n-   It is not possible or practical to wait until the action is complete.  \n  \n-   The action requires user interaction.  \n  \n-   The action is time-consuming and will cause the calling client to block for a significant length of time.","nodes":[{"pos":[0,137],"content":"<xref:System.Windows.Automation.Provider.IInvokeProvider.Invoke%2A> is an asynchronous call and must return immediately without blocking.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Automation.Provider.IInvokeProvider.Invoke%2A&gt;</ph> is an asynchronous call and must return immediately without blocking.","pos":[0,137],"source":"<xref:System.Windows.Automation.Provider.IInvokeProvider.Invoke%2A> is an asynchronous call and must return immediately without blocking."}]},{"pos":[145,378],"content":"[!NOTE]\n This behavior is particularly critical for controls that, directly or indirectly, launch a modal dialog when invoked. Any UI Automation client that instigated the event will remain blocked until the modal dialog is closed.","leadings":["","> "],"nodes":[{"content":" This behavior is particularly critical for controls that, directly or indirectly, launch a modal dialog when invoked. Any UI Automation client that instigated the event will remain blocked until the modal dialog is closed.","pos":[8,231],"nodes":[{"content":"This behavior is particularly critical for controls that, directly or indirectly, launch a modal dialog when invoked.","pos":[1,118]},{"content":"Any UI Automation client that instigated the event will remain blocked until the modal dialog is closed.","pos":[119,223]}]}]},{"pos":[385,636],"content":"<xref:System.Windows.Automation.Provider.IInvokeProvider.Invoke%2A> raises the <xref:System.Windows.Automation.InvokePatternIdentifiers.InvokedEvent> event. If possible, the event should be raised after the control has completed its associated action.","nodes":[{"content":"<xref:System.Windows.Automation.Provider.IInvokeProvider.Invoke%2A> raises the <xref:System.Windows.Automation.InvokePatternIdentifiers.InvokedEvent> event. If possible, the event should be raised after the control has completed its associated action.","pos":[0,251],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Automation.Provider.IInvokeProvider.Invoke%2A&gt;</ph> raises the <ph id=\"ph2\">&lt;xref:System.Windows.Automation.InvokePatternIdentifiers.InvokedEvent&gt;</ph> event.","pos":[0,156],"source":"<xref:System.Windows.Automation.Provider.IInvokeProvider.Invoke%2A> raises the <xref:System.Windows.Automation.InvokePatternIdentifiers.InvokedEvent> event."},{"content":"If possible, the event should be raised after the control has completed its associated action.","pos":[157,251]}]}]},{"pos":[643,855],"content":"<xref:System.Windows.Automation.InvokePatternIdentifiers.InvokedEvent> should be raised before servicing the <xref:System.Windows.Automation.Provider.IInvokeProvider.Invoke%2A> request in the following scenarios:","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Automation.InvokePatternIdentifiers.InvokedEvent&gt;</ph> should be raised before servicing the <ph id=\"ph2\">&lt;xref:System.Windows.Automation.Provider.IInvokeProvider.Invoke%2A&gt;</ph> request in the following scenarios:","pos":[0,212],"source":"<xref:System.Windows.Automation.InvokePatternIdentifiers.InvokedEvent> should be raised before servicing the <xref:System.Windows.Automation.Provider.IInvokeProvider.Invoke%2A> request in the following scenarios:"}]},{"pos":[865,934],"content":"It is not possible or practical to wait until the action is complete.","nodes":[{"content":"It is not possible or practical to wait until the action is complete.","pos":[0,69]}]},{"pos":[944,981],"content":"The action requires user interaction.","nodes":[{"content":"The action requires user interaction.","pos":[0,37]}]},{"pos":[991,1096],"content":"The action is time-consuming and will cause the calling client to block for a significant length of time.","nodes":[{"content":"The action is time-consuming and will cause the calling client to block for a significant length of time.","pos":[0,105]}]}],"pos":[3844,4956],"yaml":true,"extradata":"MT"},{"content":"If the control is not enabled.","nodes":[{"pos":[0,30],"content":"If the control is not enabled.","nodes":[{"content":"If the control is not enabled.","pos":[0,30]}]}],"pos":[5661,5692],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Automation.Provider.IInvokeProvider\n  commentId: T:System.Windows.Automation.Provider.IInvokeProvider\n  id: IInvokeProvider\n  children:\n  - System.Windows.Automation.Provider.IInvokeProvider.Invoke\n  langs:\n  - csharp\n  name: IInvokeProvider\n  nameWithType: IInvokeProvider\n  fullName: System.Windows.Automation.Provider.IInvokeProvider\n  type: Interface\n  assemblies:\n  - UIAutomationProvider\n  namespace: System.Windows.Automation.Provider\n  summary: Exposes methods and properties to support UI Automation client access to controls that initiate or perform a single, unambiguous action and do not maintain state when activated.\n  remarks: \"Implemented on a UI Automation provider that must support the <xref:System.Windows.Automation.InvokePattern> control pattern.  \\n  \\n Controls implement <xref:System.Windows.Automation.Provider.IInvokeProvider> if the same behavior is not exposed through another control pattern provider. For example, if the <xref:System.Windows.Automation.InvokePattern.Invoke%2A> method on a control performs the same action as the <xref:System.Windows.Automation.ExpandCollapsePattern.Expand%2A> or <xref:System.Windows.Automation.ExpandCollapsePattern.Collapse%2A> method, the control should not implement <xref:System.Windows.Automation.Provider.IInvokeProvider>.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      [System.Runtime.InteropServices.Guid(\"54fcb24b-e18e-47a2-b4d3-eccbe77599a2\")]\n\n      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]\n\n      public interface IInvokeProvider\n  derivedClasses:\n  - System.Windows.Automation.Peers.ButtonAutomationPeer\n  - System.Windows.Automation.Peers.DataGridCellItemAutomationPeer\n  - System.Windows.Automation.Peers.DataGridColumnHeaderItemAutomationPeer\n  - System.Windows.Automation.Peers.DataGridItemAutomationPeer\n  - System.Windows.Automation.Peers.DateTimeAutomationPeer\n  - System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer\n  - System.Windows.Automation.Peers.HyperlinkAutomationPeer\n  - System.Windows.Automation.Peers.MenuItemAutomationPeer\n  - System.Windows.Automation.Peers.RepeatButtonAutomationPeer\n  - System.Windows.Automation.Peers.RibbonContextualTabGroupDataAutomationPeer\n  - System.Windows.Automation.Peers.RibbonMenuItemDataAutomationPeer\n  - System.Windows.Automation.Peers.RibbonSplitButtonAutomationPeer\n  - System.Windows.Automation.Peers.RibbonTextBoxAutomationPeer\n  implements: []\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  - type: System.Runtime.InteropServices.GuidAttribute\n  - type: System.Runtime.InteropServices.InterfaceTypeAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Automation.Provider/IInvokeProvider.xml\n  ms.technology:\n  - dotnet-wpf\n  author: Xansky\n  ms.author: mhopkins\n  manager: markl\n- uid: System.Windows.Automation.Provider.IInvokeProvider.Invoke\n  commentId: M:System.Windows.Automation.Provider.IInvokeProvider.Invoke\n  id: Invoke\n  parent: System.Windows.Automation.Provider.IInvokeProvider\n  langs:\n  - csharp\n  name: Invoke()\n  nameWithType: IInvokeProvider.Invoke()\n  fullName: IInvokeProvider.Invoke()\n  type: Method\n  assemblies:\n  - UIAutomationProvider\n  namespace: System.Windows.Automation.Provider\n  summary: Sends a request to activate a control and initiate its single, unambiguous action.\n  remarks: \"<xref:System.Windows.Automation.Provider.IInvokeProvider.Invoke%2A> is an asynchronous call and must return immediately without blocking.  \\n  \\n> [!NOTE]\\n>  This behavior is particularly critical for controls that, directly or indirectly, launch a modal dialog when invoked. Any UI Automation client that instigated the event will remain blocked until the modal dialog is closed.  \\n  \\n <xref:System.Windows.Automation.Provider.IInvokeProvider.Invoke%2A> raises the <xref:System.Windows.Automation.InvokePatternIdentifiers.InvokedEvent> event. If possible, the event should be raised after the control has completed its associated action.  \\n  \\n <xref:System.Windows.Automation.InvokePatternIdentifiers.InvokedEvent> should be raised before servicing the <xref:System.Windows.Automation.Provider.IInvokeProvider.Invoke%2A> request in the following scenarios:  \\n  \\n-   It is not possible or practical to wait until the action is complete.  \\n  \\n-   The action requires user interaction.  \\n  \\n-   The action is time-consuming and will cause the calling client to block for a significant length of time.\"\n  example:\n  - \"The following example implements the <xref:System.Windows.Automation.Provider.IInvokeProvider.Invoke%2A> method on the MouseDown event handler of a control. Assume that `providerControl` is a member variable that was initialized when the class was constructed.  \\n  \\n [!code-csharp[UIAProvider_snip#106](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAProvider_snip/CSharp/Invoker.cs#106)]\"\n  syntax:\n    content: public void Invoke ();\n    parameters: []\n  overload: System.Windows.Automation.Provider.IInvokeProvider.Invoke*\n  exceptions:\n  - type: System.Windows.Automation.ElementNotEnabledException\n    commentId: T:System.Windows.Automation.ElementNotEnabledException\n    description: If the control is not enabled.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Automation.Provider/IInvokeProvider.xml\n  ms.technology:\n  - dotnet-wpf\n  author: Xansky\n  ms.author: mhopkins\n  manager: markl\nreferences:\n- uid: System.Windows.Automation.ElementNotEnabledException\n  parent: System.Windows.Automation\n  isExternal: false\n  name: ElementNotEnabledException\n  nameWithType: ElementNotEnabledException\n  fullName: System.Windows.Automation.ElementNotEnabledException\n- uid: System.Windows.Automation.Provider.IInvokeProvider.Invoke\n  parent: System.Windows.Automation.Provider.IInvokeProvider\n  isExternal: false\n  name: Invoke()\n  nameWithType: IInvokeProvider.Invoke()\n  fullName: IInvokeProvider.Invoke()\n- uid: System.Windows.Automation.Provider.IInvokeProvider.Invoke*\n  parent: System.Windows.Automation.Provider.IInvokeProvider\n  isExternal: false\n  name: Invoke\n  nameWithType: IInvokeProvider.Invoke\n  fullName: IInvokeProvider.Invoke\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Automation.Provider/IInvokeProvider.xml\n"}