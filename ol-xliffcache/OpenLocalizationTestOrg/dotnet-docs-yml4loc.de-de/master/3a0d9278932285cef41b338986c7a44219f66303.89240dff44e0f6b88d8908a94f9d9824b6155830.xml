{"nodes":[{"content":"Associates a security action with a custom security attribute.","nodes":[{"pos":[0,62],"content":"Associates a security action with a custom security attribute.","nodes":[{"content":"Associates a security action with a custom security attribute.","pos":[0,62]}]}],"pos":[995,1058],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Data.Common.DBDataPermissionAttribute\"></xref>.","nodes":[{"pos":[0,100],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.DBDataPermissionAttribute\"&gt;&lt;/xref&gt;</ph>.","source":"Initializes a new instance of the <xref href=\"System.Data.Common.DBDataPermissionAttribute\"></xref>."}],"pos":[7048,7149],"yaml":true},{"content":"One of the security action values representing an action that can be performed by declarative security.","nodes":[{"pos":[0,103],"content":"One of the security action values representing an action that can be performed by declarative security.","nodes":[{"content":"One of the security action values representing an action that can be performed by declarative security.","pos":[0,103]}]}],"pos":[7368,7472],"yaml":true},{"content":"Gets or sets a value indicating whether a blank password is allowed.","nodes":[{"pos":[0,68],"content":"Gets or sets a value indicating whether a blank password is allowed.","nodes":[{"content":"Gets or sets a value indicating whether a blank password is allowed.","pos":[0,68]}]}],"pos":[8772,8841],"yaml":true},{"content":"`true` if a blank password is allowed; otherwise `false`.","nodes":[{"pos":[0,57],"content":"<ph id=\"ph1\">`true`</ph> if a blank password is allowed; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if a blank password is allowed; otherwise `false`."}],"pos":[8967,9027],"yaml":true},{"content":"Gets or sets a permitted connection string.","nodes":[{"pos":[0,43],"content":"Gets or sets a permitted connection string.","nodes":[{"content":"Gets or sets a permitted connection string.","pos":[0,43]}]}],"pos":[10328,10372],"yaml":true},{"content":"Multiple connection strings may be identified. You may also provide additional connection string restrictions using **KeyRestrictions**.","nodes":[{"pos":[0,136],"content":"Multiple connection strings may be identified. You may also provide additional connection string restrictions using **KeyRestrictions**.","nodes":[{"content":"Multiple connection strings may be identified.","pos":[0,46]},{"content":"You may also provide additional connection string restrictions using <bpt id=\"p1\">**</bpt>KeyRestrictions<ept id=\"p1\">**</ept>.","pos":[47,136],"source":" You may also provide additional connection string restrictions using **KeyRestrictions**."}]}],"pos":[10383,10520],"yaml":true,"extradata":"MT"},{"content":"A permitted connection string.","nodes":[{"pos":[0,30],"content":"A permitted connection string.","nodes":[{"content":"A permitted connection string.","pos":[0,30]}]}],"pos":[10645,10676],"yaml":true},{"content":"Identifies whether the list of connection string parameters identified by the <xref href=\"System.Data.Common.DBDataPermissionAttribute.KeyRestrictions\"></xref> property are the only connection string parameters allowed.","nodes":[{"pos":[0,219],"content":"Identifies whether the list of connection string parameters identified by the <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.DBDataPermissionAttribute.KeyRestrictions\"&gt;&lt;/xref&gt;</ph> property are the only connection string parameters allowed.","source":"Identifies whether the list of connection string parameters identified by the <xref href=\"System.Data.Common.DBDataPermissionAttribute.KeyRestrictions\"></xref> property are the only connection string parameters allowed."}],"pos":[12011,12231],"yaml":true},{"content":"One of the <xref href=\"System.Data.KeyRestrictionBehavior\"></xref> values.","nodes":[{"pos":[0,74],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Data.KeyRestrictionBehavior\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Data.KeyRestrictionBehavior\"></xref> values."}],"pos":[12411,12486],"yaml":true},{"content":"Gets or sets connection string parameters that are allowed or disallowed.","nodes":[{"pos":[0,73],"content":"Gets or sets connection string parameters that are allowed or disallowed.","nodes":[{"content":"Gets or sets connection string parameters that are allowed or disallowed.","pos":[0,73]}]}],"pos":[13785,13859],"yaml":true},{"content":"Connection string parameters are identified in the form *\\<parameter name>*=. Multiple parameters can be specified, delimited using a semicolon (;). The connection string parameters listed may be identified as either the only additional parameters allowed or additional parameters that are not allowed using the <xref:System.Data.Common.DBDataPermissionAttribute.KeyRestrictionBehavior%2A> property.  \n  \n If no key restrictions are specified, and the <xref:System.Data.Common.DBDataPermissionAttribute.KeyRestrictionBehavior%2A> property is set to `AllowOnly`, no additional connection string parameters are allowed.  \n  \n If no key restrictions are specified, and the <xref:System.Data.Common.DBDataPermissionAttribute.KeyRestrictionBehavior%2A> property is set to `PreventUsage`, additional connection string parameters are allowed. If more than one rule is set for the same connection string, the more restrictive rule is selected during the permission check.","nodes":[{"pos":[0,399],"content":"Connection string parameters are identified in the form *\\<parameter name>*=. Multiple parameters can be specified, delimited using a semicolon (;). The connection string parameters listed may be identified as either the only additional parameters allowed or additional parameters that are not allowed using the <xref:System.Data.Common.DBDataPermissionAttribute.KeyRestrictionBehavior%2A> property.","nodes":[{"content":"Connection string parameters are identified in the form <bpt id=\"p1\">*</bpt><ph id=\"ph1\">\\&lt;</ph>parameter name&gt;<ept id=\"p1\">*</ept>=.","pos":[0,77],"source":"Connection string parameters are identified in the form *\\<parameter name>*=."},{"content":"Multiple parameters can be specified, delimited using a semicolon (;).","pos":[78,148]},{"content":"The connection string parameters listed may be identified as either the only additional parameters allowed or additional parameters that are not allowed using the <ph id=\"ph1\">&lt;xref:System.Data.Common.DBDataPermissionAttribute.KeyRestrictionBehavior%2A&gt;</ph> property.","pos":[149,399],"source":" The connection string parameters listed may be identified as either the only additional parameters allowed or additional parameters that are not allowed using the <xref:System.Data.Common.DBDataPermissionAttribute.KeyRestrictionBehavior%2A> property."}]},{"pos":[406,617],"content":"If no key restrictions are specified, and the <ph id=\"ph1\">&lt;xref:System.Data.Common.DBDataPermissionAttribute.KeyRestrictionBehavior%2A&gt;</ph> property is set to <ph id=\"ph2\">`AllowOnly`</ph>, no additional connection string parameters are allowed.","source":"If no key restrictions are specified, and the <xref:System.Data.Common.DBDataPermissionAttribute.KeyRestrictionBehavior%2A> property is set to `AllowOnly`, no additional connection string parameters are allowed."},{"pos":[624,963],"content":"If no key restrictions are specified, and the <xref:System.Data.Common.DBDataPermissionAttribute.KeyRestrictionBehavior%2A> property is set to `PreventUsage`, additional connection string parameters are allowed. If more than one rule is set for the same connection string, the more restrictive rule is selected during the permission check.","nodes":[{"content":"If no key restrictions are specified, and the <ph id=\"ph1\">&lt;xref:System.Data.Common.DBDataPermissionAttribute.KeyRestrictionBehavior%2A&gt;</ph> property is set to <ph id=\"ph2\">`PreventUsage`</ph>, additional connection string parameters are allowed.","pos":[0,211],"source":"If no key restrictions are specified, and the <xref:System.Data.Common.DBDataPermissionAttribute.KeyRestrictionBehavior%2A> property is set to `PreventUsage`, additional connection string parameters are allowed."},{"content":"If more than one rule is set for the same connection string, the more restrictive rule is selected during the permission check.","pos":[212,339]}]}],"pos":[13870,14841],"yaml":true,"extradata":"MT"},{"content":"One or more connection string parameters that are allowed or disallowed.","nodes":[{"pos":[0,72],"content":"One or more connection string parameters that are allowed or disallowed.","nodes":[{"content":"One or more connection string parameters that are allowed or disallowed.","pos":[0,72]}]}],"pos":[14965,15038],"yaml":true},{"content":"Identifies whether the attribute should serialize the connection string.","nodes":[{"pos":[0,72],"content":"Identifies whether the attribute should serialize the connection string.","nodes":[{"content":"Identifies whether the attribute should serialize the connection string.","pos":[0,72]}]}],"pos":[16430,16503],"yaml":true},{"content":"`true` if the attribute should serialize the connection string; otherwise `false`.","nodes":[{"pos":[0,82],"content":"<ph id=\"ph1\">`true`</ph> if the attribute should serialize the connection string; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if the attribute should serialize the connection string; otherwise `false`."}],"pos":[16651,16736],"yaml":true},{"content":"Identifies whether the attribute should serialize the set of key restrictions.","nodes":[{"pos":[0,78],"content":"Identifies whether the attribute should serialize the set of key restrictions.","nodes":[{"content":"Identifies whether the attribute should serialize the set of key restrictions.","pos":[0,78]}]}],"pos":[18155,18234],"yaml":true},{"content":"`true` if the attribute should serialize the set of key restrictions; otherwise `false`.","nodes":[{"pos":[0,88],"content":"<ph id=\"ph1\">`true`</ph> if the attribute should serialize the set of key restrictions; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if the attribute should serialize the set of key restrictions; otherwise `false`."}],"pos":[18381,18472],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Common.DBDataPermissionAttribute\n  commentId: T:System.Data.Common.DBDataPermissionAttribute\n  id: DBDataPermissionAttribute\n  children:\n  - System.Data.Common.DBDataPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)\n  - System.Data.Common.DBDataPermissionAttribute.AllowBlankPassword\n  - System.Data.Common.DBDataPermissionAttribute.ConnectionString\n  - System.Data.Common.DBDataPermissionAttribute.KeyRestrictionBehavior\n  - System.Data.Common.DBDataPermissionAttribute.KeyRestrictions\n  - System.Data.Common.DBDataPermissionAttribute.ShouldSerializeConnectionString\n  - System.Data.Common.DBDataPermissionAttribute.ShouldSerializeKeyRestrictions\n  langs:\n  - csharp\n  name: DBDataPermissionAttribute\n  nameWithType: DBDataPermissionAttribute\n  fullName: System.Data.Common.DBDataPermissionAttribute\n  type: Class\n  assemblies:\n  - System.Data\n  - System.Security.Permissions\n  namespace: System.Data.Common\n  summary: Associates a security action with a custom security attribute.\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Constructor | System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)]\n\n      public abstract class DBDataPermissionAttribute : System.Security.Permissions.CodeAccessSecurityAttribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  - System.Security.Permissions.SecurityAttribute\n  - System.Security.Permissions.CodeAccessSecurityAttribute\n  derivedClasses:\n  - System.Data.Odbc.OdbcPermissionAttribute\n  - System.Data.OleDb.OleDbPermissionAttribute\n  - System.Data.SqlClient.SqlClientPermissionAttribute\n  implements: []\n  inheritedMembers:\n  - System.Attribute.Equals(System.Object)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetHashCode\n  - System.Attribute.IsDefaultAttribute\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.Match(System.Object)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Attribute.TypeId\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.Permissions.SecurityAttribute.Action\n  - System.Security.Permissions.SecurityAttribute.CreatePermission\n  - System.Security.Permissions.SecurityAttribute.Unrestricted\n  attributes:\n  - type: System.AttributeUsageAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DBDataPermissionAttribute.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DBDataPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)\n  commentId: M:System.Data.Common.DBDataPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)\n  id: '#ctor(System.Security.Permissions.SecurityAction)'\n  parent: System.Data.Common.DBDataPermissionAttribute\n  langs:\n  - csharp\n  name: DBDataPermissionAttribute(SecurityAction)\n  nameWithType: DBDataPermissionAttribute.DBDataPermissionAttribute(SecurityAction)\n  fullName: DBDataPermissionAttribute.DBDataPermissionAttribute(SecurityAction)\n  type: Constructor\n  assemblies:\n  - System.Data\n  - System.Security.Permissions\n  namespace: System.Data.Common\n  summary: Initializes a new instance of the <xref href=\"System.Data.Common.DBDataPermissionAttribute\"></xref>.\n  syntax:\n    content: protected DBDataPermissionAttribute (System.Security.Permissions.SecurityAction action);\n    parameters:\n    - id: action\n      type: System.Security.Permissions.SecurityAction\n      description: One of the security action values representing an action that can be performed by declarative security.\n  overload: System.Data.Common.DBDataPermissionAttribute.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DBDataPermissionAttribute.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DBDataPermissionAttribute.AllowBlankPassword\n  commentId: P:System.Data.Common.DBDataPermissionAttribute.AllowBlankPassword\n  id: AllowBlankPassword\n  parent: System.Data.Common.DBDataPermissionAttribute\n  langs:\n  - csharp\n  name: AllowBlankPassword\n  nameWithType: DBDataPermissionAttribute.AllowBlankPassword\n  fullName: DBDataPermissionAttribute.AllowBlankPassword\n  type: Property\n  assemblies:\n  - System.Data\n  - System.Security.Permissions\n  namespace: System.Data.Common\n  summary: Gets or sets a value indicating whether a blank password is allowed.\n  syntax:\n    content: public bool AllowBlankPassword { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if a blank password is allowed; otherwise `false`.'\n  overload: System.Data.Common.DBDataPermissionAttribute.AllowBlankPassword*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DBDataPermissionAttribute.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DBDataPermissionAttribute.ConnectionString\n  commentId: P:System.Data.Common.DBDataPermissionAttribute.ConnectionString\n  id: ConnectionString\n  parent: System.Data.Common.DBDataPermissionAttribute\n  langs:\n  - csharp\n  name: ConnectionString\n  nameWithType: DBDataPermissionAttribute.ConnectionString\n  fullName: DBDataPermissionAttribute.ConnectionString\n  type: Property\n  assemblies:\n  - System.Data\n  - System.Security.Permissions\n  namespace: System.Data.Common\n  summary: Gets or sets a permitted connection string.\n  remarks: Multiple connection strings may be identified. You may also provide additional connection string restrictions using **KeyRestrictions**.\n  syntax:\n    content: public string ConnectionString { get; set; }\n    return:\n      type: System.String\n      description: A permitted connection string.\n  overload: System.Data.Common.DBDataPermissionAttribute.ConnectionString*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DBDataPermissionAttribute.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DBDataPermissionAttribute.KeyRestrictionBehavior\n  commentId: P:System.Data.Common.DBDataPermissionAttribute.KeyRestrictionBehavior\n  id: KeyRestrictionBehavior\n  parent: System.Data.Common.DBDataPermissionAttribute\n  langs:\n  - csharp\n  name: KeyRestrictionBehavior\n  nameWithType: DBDataPermissionAttribute.KeyRestrictionBehavior\n  fullName: DBDataPermissionAttribute.KeyRestrictionBehavior\n  type: Property\n  assemblies:\n  - System.Data\n  - System.Security.Permissions\n  namespace: System.Data.Common\n  summary: Identifies whether the list of connection string parameters identified by the <xref href=\"System.Data.Common.DBDataPermissionAttribute.KeyRestrictions\"></xref> property are the only connection string parameters allowed.\n  syntax:\n    content: public System.Data.KeyRestrictionBehavior KeyRestrictionBehavior { get; set; }\n    return:\n      type: System.Data.KeyRestrictionBehavior\n      description: One of the <xref href=\"System.Data.KeyRestrictionBehavior\"></xref> values.\n  overload: System.Data.Common.DBDataPermissionAttribute.KeyRestrictionBehavior*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DBDataPermissionAttribute.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DBDataPermissionAttribute.KeyRestrictions\n  commentId: P:System.Data.Common.DBDataPermissionAttribute.KeyRestrictions\n  id: KeyRestrictions\n  parent: System.Data.Common.DBDataPermissionAttribute\n  langs:\n  - csharp\n  name: KeyRestrictions\n  nameWithType: DBDataPermissionAttribute.KeyRestrictions\n  fullName: DBDataPermissionAttribute.KeyRestrictions\n  type: Property\n  assemblies:\n  - System.Data\n  - System.Security.Permissions\n  namespace: System.Data.Common\n  summary: Gets or sets connection string parameters that are allowed or disallowed.\n  remarks: \"Connection string parameters are identified in the form *\\\\<parameter name>*=. Multiple parameters can be specified, delimited using a semicolon (;). The connection string parameters listed may be identified as either the only additional parameters allowed or additional parameters that are not allowed using the <xref:System.Data.Common.DBDataPermissionAttribute.KeyRestrictionBehavior%2A> property.  \\n  \\n If no key restrictions are specified, and the <xref:System.Data.Common.DBDataPermissionAttribute.KeyRestrictionBehavior%2A> property is set to `AllowOnly`, no additional connection string parameters are allowed.  \\n  \\n If no key restrictions are specified, and the <xref:System.Data.Common.DBDataPermissionAttribute.KeyRestrictionBehavior%2A> property is set to `PreventUsage`, additional connection string parameters are allowed. If more than one rule is set for the same connection string, the more restrictive rule is selected during the permission check.\"\n  syntax:\n    content: public string KeyRestrictions { get; set; }\n    return:\n      type: System.String\n      description: One or more connection string parameters that are allowed or disallowed.\n  overload: System.Data.Common.DBDataPermissionAttribute.KeyRestrictions*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DBDataPermissionAttribute.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DBDataPermissionAttribute.ShouldSerializeConnectionString\n  commentId: M:System.Data.Common.DBDataPermissionAttribute.ShouldSerializeConnectionString\n  id: ShouldSerializeConnectionString\n  parent: System.Data.Common.DBDataPermissionAttribute\n  langs:\n  - csharp\n  name: ShouldSerializeConnectionString()\n  nameWithType: DBDataPermissionAttribute.ShouldSerializeConnectionString()\n  fullName: DBDataPermissionAttribute.ShouldSerializeConnectionString()\n  type: Method\n  assemblies:\n  - System.Data\n  - System.Security.Permissions\n  namespace: System.Data.Common\n  summary: Identifies whether the attribute should serialize the connection string.\n  syntax:\n    content: public bool ShouldSerializeConnectionString ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the attribute should serialize the connection string; otherwise `false`.'\n  overload: System.Data.Common.DBDataPermissionAttribute.ShouldSerializeConnectionString*\n  exceptions: []\n  attributes: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DBDataPermissionAttribute.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.DBDataPermissionAttribute.ShouldSerializeKeyRestrictions\n  commentId: M:System.Data.Common.DBDataPermissionAttribute.ShouldSerializeKeyRestrictions\n  id: ShouldSerializeKeyRestrictions\n  parent: System.Data.Common.DBDataPermissionAttribute\n  langs:\n  - csharp\n  name: ShouldSerializeKeyRestrictions()\n  nameWithType: DBDataPermissionAttribute.ShouldSerializeKeyRestrictions()\n  fullName: DBDataPermissionAttribute.ShouldSerializeKeyRestrictions()\n  type: Method\n  assemblies:\n  - System.Data\n  - System.Security.Permissions\n  namespace: System.Data.Common\n  summary: Identifies whether the attribute should serialize the set of key restrictions.\n  syntax:\n    content: public bool ShouldSerializeKeyRestrictions ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the attribute should serialize the set of key restrictions; otherwise `false`.'\n  overload: System.Data.Common.DBDataPermissionAttribute.ShouldSerializeKeyRestrictions*\n  exceptions: []\n  attributes: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DBDataPermissionAttribute.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\nreferences:\n- uid: System.Security.Permissions.CodeAccessSecurityAttribute\n  parent: System.Security.Permissions\n  isExternal: false\n  name: CodeAccessSecurityAttribute\n  nameWithType: CodeAccessSecurityAttribute\n  fullName: System.Security.Permissions.CodeAccessSecurityAttribute\n- uid: System.Data.Common.DBDataPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)\n  parent: System.Data.Common.DBDataPermissionAttribute\n  isExternal: false\n  name: DBDataPermissionAttribute(SecurityAction)\n  nameWithType: DBDataPermissionAttribute.DBDataPermissionAttribute(SecurityAction)\n  fullName: DBDataPermissionAttribute.DBDataPermissionAttribute(SecurityAction)\n- uid: System.Security.Permissions.SecurityAction\n  parent: System.Security.Permissions\n  isExternal: false\n  name: SecurityAction\n  nameWithType: SecurityAction\n  fullName: System.Security.Permissions.SecurityAction\n- uid: System.Data.Common.DBDataPermissionAttribute.AllowBlankPassword\n  parent: System.Data.Common.DBDataPermissionAttribute\n  isExternal: false\n  name: AllowBlankPassword\n  nameWithType: DBDataPermissionAttribute.AllowBlankPassword\n  fullName: DBDataPermissionAttribute.AllowBlankPassword\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.Common.DBDataPermissionAttribute.ConnectionString\n  parent: System.Data.Common.DBDataPermissionAttribute\n  isExternal: false\n  name: ConnectionString\n  nameWithType: DBDataPermissionAttribute.ConnectionString\n  fullName: DBDataPermissionAttribute.ConnectionString\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.Common.DBDataPermissionAttribute.KeyRestrictionBehavior\n  parent: System.Data.Common.DBDataPermissionAttribute\n  isExternal: false\n  name: KeyRestrictionBehavior\n  nameWithType: DBDataPermissionAttribute.KeyRestrictionBehavior\n  fullName: DBDataPermissionAttribute.KeyRestrictionBehavior\n- uid: System.Data.KeyRestrictionBehavior\n  parent: System.Data\n  isExternal: false\n  name: KeyRestrictionBehavior\n  nameWithType: KeyRestrictionBehavior\n  fullName: System.Data.KeyRestrictionBehavior\n- uid: System.Data.Common.DBDataPermissionAttribute.KeyRestrictions\n  parent: System.Data.Common.DBDataPermissionAttribute\n  isExternal: false\n  name: KeyRestrictions\n  nameWithType: DBDataPermissionAttribute.KeyRestrictions\n  fullName: DBDataPermissionAttribute.KeyRestrictions\n- uid: System.Data.Common.DBDataPermissionAttribute.ShouldSerializeConnectionString\n  parent: System.Data.Common.DBDataPermissionAttribute\n  isExternal: false\n  name: ShouldSerializeConnectionString()\n  nameWithType: DBDataPermissionAttribute.ShouldSerializeConnectionString()\n  fullName: DBDataPermissionAttribute.ShouldSerializeConnectionString()\n- uid: System.Data.Common.DBDataPermissionAttribute.ShouldSerializeKeyRestrictions\n  parent: System.Data.Common.DBDataPermissionAttribute\n  isExternal: false\n  name: ShouldSerializeKeyRestrictions()\n  nameWithType: DBDataPermissionAttribute.ShouldSerializeKeyRestrictions()\n  fullName: DBDataPermissionAttribute.ShouldSerializeKeyRestrictions()\n- uid: System.Data.Common.DBDataPermissionAttribute.#ctor*\n  parent: System.Data.Common.DBDataPermissionAttribute\n  isExternal: false\n  name: DBDataPermissionAttribute\n  nameWithType: DBDataPermissionAttribute.DBDataPermissionAttribute\n  fullName: DBDataPermissionAttribute.DBDataPermissionAttribute\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DBDataPermissionAttribute.xml\n- uid: System.Data.Common.DBDataPermissionAttribute.AllowBlankPassword*\n  parent: System.Data.Common.DBDataPermissionAttribute\n  isExternal: false\n  name: AllowBlankPassword\n  nameWithType: DBDataPermissionAttribute.AllowBlankPassword\n  fullName: DBDataPermissionAttribute.AllowBlankPassword\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DBDataPermissionAttribute.xml\n- uid: System.Data.Common.DBDataPermissionAttribute.ConnectionString*\n  parent: System.Data.Common.DBDataPermissionAttribute\n  isExternal: false\n  name: ConnectionString\n  nameWithType: DBDataPermissionAttribute.ConnectionString\n  fullName: DBDataPermissionAttribute.ConnectionString\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DBDataPermissionAttribute.xml\n- uid: System.Data.Common.DBDataPermissionAttribute.KeyRestrictionBehavior*\n  parent: System.Data.Common.DBDataPermissionAttribute\n  isExternal: false\n  name: KeyRestrictionBehavior\n  nameWithType: DBDataPermissionAttribute.KeyRestrictionBehavior\n  fullName: DBDataPermissionAttribute.KeyRestrictionBehavior\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DBDataPermissionAttribute.xml\n- uid: System.Data.Common.DBDataPermissionAttribute.KeyRestrictions*\n  parent: System.Data.Common.DBDataPermissionAttribute\n  isExternal: false\n  name: KeyRestrictions\n  nameWithType: DBDataPermissionAttribute.KeyRestrictions\n  fullName: DBDataPermissionAttribute.KeyRestrictions\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DBDataPermissionAttribute.xml\n- uid: System.Data.Common.DBDataPermissionAttribute.ShouldSerializeConnectionString*\n  parent: System.Data.Common.DBDataPermissionAttribute\n  isExternal: false\n  name: ShouldSerializeConnectionString\n  nameWithType: DBDataPermissionAttribute.ShouldSerializeConnectionString\n  fullName: DBDataPermissionAttribute.ShouldSerializeConnectionString\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DBDataPermissionAttribute.xml\n- uid: System.Data.Common.DBDataPermissionAttribute.ShouldSerializeKeyRestrictions*\n  parent: System.Data.Common.DBDataPermissionAttribute\n  isExternal: false\n  name: ShouldSerializeKeyRestrictions\n  nameWithType: DBDataPermissionAttribute.ShouldSerializeKeyRestrictions\n  fullName: DBDataPermissionAttribute.ShouldSerializeKeyRestrictions\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DBDataPermissionAttribute.xml\n- uid: System.Attribute.Equals(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Attribute.Equals(Object)\n  fullName: Attribute.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Attribute.GetHashCode\n  parent: System.Attribute\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Attribute.GetHashCode()\n  fullName: Attribute.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type)\n  fullName: Attribute.GetCustomAttribute(Module, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type)\n  fullName: Attribute.GetCustomAttributes(Module, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module)\n  nameWithType: Attribute.GetCustomAttributes(Module)\n  fullName: Attribute.GetCustomAttributes(Module)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo)\n  fullName: Attribute.GetCustomAttributes(MemberInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly)\n  nameWithType: Attribute.GetCustomAttributes(Assembly)\n  fullName: Attribute.GetCustomAttributes(Assembly)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type)\n- uid: System.Attribute.IsDefaultAttribute\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefaultAttribute()\n  nameWithType: Attribute.IsDefaultAttribute()\n  fullName: Attribute.IsDefaultAttribute()\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Module, Type, Boolean)\n  fullName: Attribute.IsDefined(Module, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(MemberInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)\n  fullName: Attribute.IsDefined(Assembly, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type)\n  fullName: Attribute.IsDefined(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type)\n  nameWithType: Attribute.IsDefined(Module, Type)\n  fullName: Attribute.IsDefined(Module, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type)\n  nameWithType: Attribute.IsDefined(Assembly, Type)\n  fullName: Attribute.IsDefined(Assembly, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type)\n  fullName: Attribute.IsDefined(ParameterInfo, Type)\n- uid: System.Attribute.Match(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Match(Object)\n  nameWithType: Attribute.Match(Object)\n  fullName: Attribute.Match(Object)\n- uid: System.Attribute.TypeId\n  parent: System.Attribute\n  isExternal: false\n  name: TypeId\n  nameWithType: Attribute.TypeId\n  fullName: Attribute.TypeId\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfoCount(UInt32)\n  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)\n  fullName: Attribute._Attribute.GetTypeInfoCount(UInt32)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n- uid: System.Security.Permissions.SecurityAttribute.Action\n  parent: System.Security.Permissions.SecurityAttribute\n  isExternal: false\n  name: Action\n  nameWithType: SecurityAttribute.Action\n  fullName: SecurityAttribute.Action\n- uid: System.Security.Permissions.SecurityAttribute.CreatePermission\n  parent: System.Security.Permissions.SecurityAttribute\n  isExternal: false\n  name: CreatePermission()\n  nameWithType: SecurityAttribute.CreatePermission()\n  fullName: SecurityAttribute.CreatePermission()\n- uid: System.Security.Permissions.SecurityAttribute.Unrestricted\n  parent: System.Security.Permissions.SecurityAttribute\n  isExternal: false\n  name: Unrestricted\n  nameWithType: SecurityAttribute.Unrestricted\n  fullName: SecurityAttribute.Unrestricted\n"}