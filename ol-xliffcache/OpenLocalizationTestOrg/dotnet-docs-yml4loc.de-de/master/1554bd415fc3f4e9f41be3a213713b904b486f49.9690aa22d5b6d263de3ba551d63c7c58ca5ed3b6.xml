{"nodes":[{"content":"A type for HTTP handlers that delegate the processing of HTTP response messages to another handler, called the inner handler.","nodes":[{"pos":[0,125],"content":"A type for HTTP handlers that delegate the processing of HTTP response messages to another handler, called the inner handler.","nodes":[{"content":"A type for HTTP handlers that delegate the processing of HTTP response messages to another handler, called the inner handler.","pos":[0,125]}]}],"pos":[748,874],"yaml":true},{"content":"This application normally instantiate this class and then set the inner handler or provide an inner handler in the constructor.  \n  \n Note that <xref:System.Net.Http.DelegatingHandler.InnerHandler%2A> property may be a delegating handler too. This approach allows the creation of handler stacks to process the HTTP response messages.","nodes":[{"pos":[0,127],"content":"This application normally instantiate this class and then set the inner handler or provide an inner handler in the constructor.","nodes":[{"content":"This application normally instantiate this class and then set the inner handler or provide an inner handler in the constructor.","pos":[0,127]}]},{"pos":[134,333],"content":"Note that <xref:System.Net.Http.DelegatingHandler.InnerHandler%2A> property may be a delegating handler too. This approach allows the creation of handler stacks to process the HTTP response messages.","nodes":[{"content":"Note that <xref:System.Net.Http.DelegatingHandler.InnerHandler%2A> property may be a delegating handler too. This approach allows the creation of handler stacks to process the HTTP response messages.","pos":[0,199],"nodes":[{"content":"Note that <ph id=\"ph1\">&lt;xref:System.Net.Http.DelegatingHandler.InnerHandler%2A&gt;</ph> property may be a delegating handler too.","pos":[0,108],"source":"Note that <xref:System.Net.Http.DelegatingHandler.InnerHandler%2A> property may be a delegating handler too."},{"content":"This approach allows the creation of handler stacks to process the HTTP response messages.","pos":[109,199]}]}]}],"pos":[885,1223],"yaml":true,"extradata":"MT"},{"content":"Creates a new instance of the <xref href=\"System.Net.Http.DelegatingHandler\"></xref> class.","nodes":[{"pos":[0,91],"content":"Creates a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Net.Http.DelegatingHandler\"&gt;&lt;/xref&gt;</ph> class.","source":"Creates a new instance of the <xref href=\"System.Net.Http.DelegatingHandler\"></xref> class."}],"pos":[3174,3266],"yaml":true},{"content":"The inner handle can be set using the <xref:System.Net.Http.DelegatingHandler.InnerHandler%2A>.","nodes":[{"pos":[0,95],"content":"The inner handle can be set using the <xref:System.Net.Http.DelegatingHandler.InnerHandler%2A>.","nodes":[{"content":"The inner handle can be set using the <ph id=\"ph1\">&lt;xref:System.Net.Http.DelegatingHandler.InnerHandler%2A&gt;</ph>.","pos":[0,95],"source":"The inner handle can be set using the <xref:System.Net.Http.DelegatingHandler.InnerHandler%2A>."}]}],"pos":[3277,3373],"yaml":true,"extradata":"MT"},{"content":"Creates a new instance of the <xref href=\"System.Net.Http.DelegatingHandler\"></xref> class with a specific inner handler.","nodes":[{"pos":[0,121],"content":"Creates a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Net.Http.DelegatingHandler\"&gt;&lt;/xref&gt;</ph> class with a specific inner handler.","source":"Creates a new instance of the <xref href=\"System.Net.Http.DelegatingHandler\"></xref> class with a specific inner handler."}],"pos":[5035,5157],"yaml":true},{"content":"The inner handler which is responsible for processing the HTTP response messages.","nodes":[{"pos":[0,81],"content":"The inner handler which is responsible for processing the HTTP response messages.","nodes":[{"content":"The inner handler which is responsible for processing the HTTP response messages.","pos":[0,81]}]}],"pos":[5364,5446],"yaml":true},{"content":"Releases the unmanaged resources used by the <xref href=\"System.Net.Http.DelegatingHandler\"></xref>, and optionally disposes of the managed resources.","nodes":[{"pos":[0,150],"content":"Releases the unmanaged resources used by the <ph id=\"ph1\">&lt;xref href=\"System.Net.Http.DelegatingHandler\"&gt;&lt;/xref&gt;</ph>, and optionally disposes of the managed resources.","source":"Releases the unmanaged resources used by the <xref href=\"System.Net.Http.DelegatingHandler\"></xref>, and optionally disposes of the managed resources."}],"pos":[6910,7061],"yaml":true},{"content":"`true` to release both managed and unmanaged resources; `false` to releases only unmanaged resources.","nodes":[{"pos":[0,101],"content":"<ph id=\"ph1\">`true`</ph> to release both managed and unmanaged resources; <ph id=\"ph2\">`false`</ph> to releases only unmanaged resources.","source":"`true` to release both managed and unmanaged resources; `false` to releases only unmanaged resources."}],"pos":[7216,7320],"yaml":true},{"content":"Gets or sets the inner handler which processes the HTTP response messages.","nodes":[{"pos":[0,74],"content":"Gets or sets the inner handler which processes the HTTP response messages.","nodes":[{"content":"Gets or sets the inner handler which processes the HTTP response messages.","pos":[0,74]}]}],"pos":[8743,8818],"yaml":true},{"content":"This <xref:System.Net.Http.DelegatingHandler.InnerHandler%2A> property can only be set before the class is used (the <xref:System.Net.Http.DelegatingHandler.SendAsync%2A> method is called).  \n  \n Note that <xref:System.Net.Http.DelegatingHandler.InnerHandler%2A> property may be a delegating handler too, although this is uncommon. This approach allows the creation of handler stacks for the HTTP response messages.","nodes":[{"pos":[0,189],"content":"This <xref:System.Net.Http.DelegatingHandler.InnerHandler%2A> property can only be set before the class is used (the <xref:System.Net.Http.DelegatingHandler.SendAsync%2A> method is called).","nodes":[{"content":"This <ph id=\"ph1\">&lt;xref:System.Net.Http.DelegatingHandler.InnerHandler%2A&gt;</ph> property can only be set before the class is used (the <ph id=\"ph2\">&lt;xref:System.Net.Http.DelegatingHandler.SendAsync%2A&gt;</ph> method is called).","pos":[0,189],"source":"This <xref:System.Net.Http.DelegatingHandler.InnerHandler%2A> property can only be set before the class is used (the <xref:System.Net.Http.DelegatingHandler.SendAsync%2A> method is called)."}]},{"pos":[196,415],"content":"Note that <xref:System.Net.Http.DelegatingHandler.InnerHandler%2A> property may be a delegating handler too, although this is uncommon. This approach allows the creation of handler stacks for the HTTP response messages.","nodes":[{"content":"Note that <xref:System.Net.Http.DelegatingHandler.InnerHandler%2A> property may be a delegating handler too, although this is uncommon. This approach allows the creation of handler stacks for the HTTP response messages.","pos":[0,219],"nodes":[{"content":"Note that <ph id=\"ph1\">&lt;xref:System.Net.Http.DelegatingHandler.InnerHandler%2A&gt;</ph> property may be a delegating handler too, although this is uncommon.","pos":[0,135],"source":"Note that <xref:System.Net.Http.DelegatingHandler.InnerHandler%2A> property may be a delegating handler too, although this is uncommon."},{"content":"This approach allows the creation of handler stacks for the HTTP response messages.","pos":[136,219]}]}]}],"pos":[8829,9249],"yaml":true,"extradata":"MT"},{"content":"The inner handler for HTTP response messages.","nodes":[{"pos":[0,45],"content":"The inner handler for HTTP response messages.","nodes":[{"content":"The inner handler for HTTP response messages.","pos":[0,45]}]}],"pos":[9419,9465],"yaml":true},{"content":"Sends an HTTP request to the inner handler to send to the server as an asynchronous operation.","nodes":[{"pos":[0,94],"content":"Sends an HTTP request to the inner handler to send to the server as an asynchronous operation.","nodes":[{"content":"Sends an HTTP request to the inner handler to send to the server as an asynchronous operation.","pos":[0,94]}]}],"pos":[11203,11298],"yaml":true},{"content":"This operation does not block. This overridable implementation of <xref:System.Net.Http.HttpClientHandler.SendAsync%2A> method forwards the HTTP request to the inner handler to send to the server as an asynchronous operation.  \n  \n The <xref:System.Net.Http.DelegatingHandler.SendAsync%2A> method is mainly used by the system and not by applications. When this method is called, it calls the <xref:System.Net.Http.DelegatingHandler.SendAsync%2A> method on the inner handler.","nodes":[{"pos":[0,225],"content":"This operation does not block. This overridable implementation of <xref:System.Net.Http.HttpClientHandler.SendAsync%2A> method forwards the HTTP request to the inner handler to send to the server as an asynchronous operation.","nodes":[{"content":"This operation does not block. This overridable implementation of <xref:System.Net.Http.HttpClientHandler.SendAsync%2A> method forwards the HTTP request to the inner handler to send to the server as an asynchronous operation.","pos":[0,225],"nodes":[{"content":"This operation does not block.","pos":[0,30]},{"content":"This overridable implementation of <ph id=\"ph1\">&lt;xref:System.Net.Http.HttpClientHandler.SendAsync%2A&gt;</ph> method forwards the HTTP request to the inner handler to send to the server as an asynchronous operation.","pos":[31,225],"source":" This overridable implementation of <xref:System.Net.Http.HttpClientHandler.SendAsync%2A> method forwards the HTTP request to the inner handler to send to the server as an asynchronous operation."}]}]},{"pos":[232,474],"content":"The <xref:System.Net.Http.DelegatingHandler.SendAsync%2A> method is mainly used by the system and not by applications. When this method is called, it calls the <xref:System.Net.Http.DelegatingHandler.SendAsync%2A> method on the inner handler.","nodes":[{"content":"The <xref:System.Net.Http.DelegatingHandler.SendAsync%2A> method is mainly used by the system and not by applications. When this method is called, it calls the <xref:System.Net.Http.DelegatingHandler.SendAsync%2A> method on the inner handler.","pos":[0,242],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Http.DelegatingHandler.SendAsync%2A&gt;</ph> method is mainly used by the system and not by applications.","pos":[0,118],"source":"The <xref:System.Net.Http.DelegatingHandler.SendAsync%2A> method is mainly used by the system and not by applications."},{"content":"When this method is called, it calls the <ph id=\"ph1\">&lt;xref:System.Net.Http.DelegatingHandler.SendAsync%2A&gt;</ph> method on the inner handler.","pos":[119,242],"source":" When this method is called, it calls the <xref:System.Net.Http.DelegatingHandler.SendAsync%2A> method on the inner handler."}]}]}],"pos":[11309,11788],"yaml":true,"extradata":"MT"},{"content":"The HTTP request message to send to the server.","nodes":[{"pos":[0,47],"content":"The HTTP request message to send to the server.","nodes":[{"content":"The HTTP request message to send to the server.","pos":[0,47]}]}],"pos":[12105,12153],"yaml":true},{"content":"A cancellation token to cancel operation.","nodes":[{"pos":[0,41],"content":"A cancellation token to cancel operation.","nodes":[{"content":"A cancellation token to cancel operation.","pos":[0,41]}]}],"pos":[12247,12289],"yaml":true},{"content":"The task object representing the asynchronous operation.","nodes":[{"pos":[0,56],"content":"The task object representing the asynchronous operation.","nodes":[{"content":"The task object representing the asynchronous operation.","pos":[0,56]}]}],"pos":[12397,12454],"yaml":true},{"content":"The <code>request</code> was `null`.","nodes":[{"pos":[0,36],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">request</ph><ept id=\"p1\">&lt;/code&gt;</ept> was <ph id=\"ph2\">`null`</ph>.","source":"The <code>request</code> was `null`."}],"pos":[12627,12664],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Net.Http.DelegatingHandler\n  commentId: T:System.Net.Http.DelegatingHandler\n  id: DelegatingHandler\n  children:\n  - System.Net.Http.DelegatingHandler.#ctor\n  - System.Net.Http.DelegatingHandler.#ctor(System.Net.Http.HttpMessageHandler)\n  - System.Net.Http.DelegatingHandler.Dispose(System.Boolean)\n  - System.Net.Http.DelegatingHandler.InnerHandler\n  - System.Net.Http.DelegatingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)\n  langs:\n  - csharp\n  name: DelegatingHandler\n  nameWithType: DelegatingHandler\n  fullName: System.Net.Http.DelegatingHandler\n  type: Class\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http\n  summary: A type for HTTP handlers that delegate the processing of HTTP response messages to another handler, called the inner handler.\n  remarks: \"This application normally instantiate this class and then set the inner handler or provide an inner handler in the constructor.  \\n  \\n Note that <xref:System.Net.Http.DelegatingHandler.InnerHandler%2A> property may be a delegating handler too. This approach allows the creation of handler stacks to process the HTTP response messages.\"\n  syntax:\n    content: 'public abstract class DelegatingHandler : System.Net.Http.HttpMessageHandler'\n  inheritance:\n  - System.Object\n  - System.Net.Http.HttpMessageHandler\n  derivedClasses:\n  - System.Net.Http.MessageProcessingHandler\n  implements: []\n  inheritedMembers:\n  - System.Net.Http.HttpMessageHandler.Dispose\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/DelegatingHandler.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Http.DelegatingHandler.#ctor\n  commentId: M:System.Net.Http.DelegatingHandler.#ctor\n  id: '#ctor'\n  parent: System.Net.Http.DelegatingHandler\n  langs:\n  - csharp\n  name: DelegatingHandler()\n  nameWithType: DelegatingHandler.DelegatingHandler()\n  fullName: DelegatingHandler.DelegatingHandler()\n  type: Constructor\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http\n  summary: Creates a new instance of the <xref href=\"System.Net.Http.DelegatingHandler\"></xref> class.\n  remarks: The inner handle can be set using the <xref:System.Net.Http.DelegatingHandler.InnerHandler%2A>.\n  syntax:\n    content: protected DelegatingHandler ();\n    parameters: []\n  overload: System.Net.Http.DelegatingHandler.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/DelegatingHandler.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Http.DelegatingHandler.#ctor(System.Net.Http.HttpMessageHandler)\n  commentId: M:System.Net.Http.DelegatingHandler.#ctor(System.Net.Http.HttpMessageHandler)\n  id: '#ctor(System.Net.Http.HttpMessageHandler)'\n  parent: System.Net.Http.DelegatingHandler\n  langs:\n  - csharp\n  name: DelegatingHandler(HttpMessageHandler)\n  nameWithType: DelegatingHandler.DelegatingHandler(HttpMessageHandler)\n  fullName: DelegatingHandler.DelegatingHandler(HttpMessageHandler)\n  type: Constructor\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http\n  summary: Creates a new instance of the <xref href=\"System.Net.Http.DelegatingHandler\"></xref> class with a specific inner handler.\n  syntax:\n    content: protected DelegatingHandler (System.Net.Http.HttpMessageHandler innerHandler);\n    parameters:\n    - id: innerHandler\n      type: System.Net.Http.HttpMessageHandler\n      description: The inner handler which is responsible for processing the HTTP response messages.\n  overload: System.Net.Http.DelegatingHandler.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/DelegatingHandler.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Http.DelegatingHandler.Dispose(System.Boolean)\n  commentId: M:System.Net.Http.DelegatingHandler.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Net.Http.DelegatingHandler\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: DelegatingHandler.Dispose(Boolean)\n  fullName: DelegatingHandler.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http\n  summary: Releases the unmanaged resources used by the <xref href=\"System.Net.Http.DelegatingHandler\"></xref>, and optionally disposes of the managed resources.\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: '`true` to release both managed and unmanaged resources; `false` to releases only unmanaged resources.'\n  overload: System.Net.Http.DelegatingHandler.Dispose*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/DelegatingHandler.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Http.DelegatingHandler.InnerHandler\n  commentId: P:System.Net.Http.DelegatingHandler.InnerHandler\n  id: InnerHandler\n  parent: System.Net.Http.DelegatingHandler\n  langs:\n  - csharp\n  name: InnerHandler\n  nameWithType: DelegatingHandler.InnerHandler\n  fullName: DelegatingHandler.InnerHandler\n  type: Property\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http\n  summary: Gets or sets the inner handler which processes the HTTP response messages.\n  remarks: \"This <xref:System.Net.Http.DelegatingHandler.InnerHandler%2A> property can only be set before the class is used (the <xref:System.Net.Http.DelegatingHandler.SendAsync%2A> method is called).  \\n  \\n Note that <xref:System.Net.Http.DelegatingHandler.InnerHandler%2A> property may be a delegating handler too, although this is uncommon. This approach allows the creation of handler stacks for the HTTP response messages.\"\n  syntax:\n    content: public System.Net.Http.HttpMessageHandler InnerHandler { get; set; }\n    return:\n      type: System.Net.Http.HttpMessageHandler\n      description: The inner handler for HTTP response messages.\n  overload: System.Net.Http.DelegatingHandler.InnerHandler*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/DelegatingHandler.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Http.DelegatingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)\n  commentId: M:System.Net.Http.DelegatingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)\n  id: SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)\n  parent: System.Net.Http.DelegatingHandler\n  langs:\n  - csharp\n  name: SendAsync(HttpRequestMessage, CancellationToken)\n  nameWithType: DelegatingHandler.SendAsync(HttpRequestMessage, CancellationToken)\n  fullName: DelegatingHandler.SendAsync(HttpRequestMessage, CancellationToken)\n  type: Method\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http\n  summary: Sends an HTTP request to the inner handler to send to the server as an asynchronous operation.\n  remarks: \"This operation does not block. This overridable implementation of <xref:System.Net.Http.HttpClientHandler.SendAsync%2A> method forwards the HTTP request to the inner handler to send to the server as an asynchronous operation.  \\n  \\n The <xref:System.Net.Http.DelegatingHandler.SendAsync%2A> method is mainly used by the system and not by applications. When this method is called, it calls the <xref:System.Net.Http.DelegatingHandler.SendAsync%2A> method on the inner handler.\"\n  syntax:\n    content: protected override System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> SendAsync (System.Net.Http.HttpRequestMessage request, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: request\n      type: System.Net.Http.HttpRequestMessage\n      description: The HTTP request message to send to the server.\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: A cancellation token to cancel operation.\n    return:\n      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}\n      description: The task object representing the asynchronous operation.\n  overload: System.Net.Http.DelegatingHandler.SendAsync*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>request</code> was `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/DelegatingHandler.xml\n  ms.author: bobdel\n  manager: markl\nreferences:\n- uid: System.Net.Http.HttpMessageHandler\n  parent: System.Net.Http\n  isExternal: false\n  name: HttpMessageHandler\n  nameWithType: HttpMessageHandler\n  fullName: System.Net.Http.HttpMessageHandler\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Net.Http.DelegatingHandler.#ctor\n  parent: System.Net.Http.DelegatingHandler\n  isExternal: false\n  name: DelegatingHandler()\n  nameWithType: DelegatingHandler.DelegatingHandler()\n  fullName: DelegatingHandler.DelegatingHandler()\n- uid: System.Net.Http.DelegatingHandler.#ctor(System.Net.Http.HttpMessageHandler)\n  parent: System.Net.Http.DelegatingHandler\n  isExternal: false\n  name: DelegatingHandler(HttpMessageHandler)\n  nameWithType: DelegatingHandler.DelegatingHandler(HttpMessageHandler)\n  fullName: DelegatingHandler.DelegatingHandler(HttpMessageHandler)\n- uid: System.Net.Http.DelegatingHandler.Dispose(System.Boolean)\n  parent: System.Net.Http.DelegatingHandler\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: DelegatingHandler.Dispose(Boolean)\n  fullName: DelegatingHandler.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Net.Http.DelegatingHandler.InnerHandler\n  parent: System.Net.Http.DelegatingHandler\n  isExternal: false\n  name: InnerHandler\n  nameWithType: DelegatingHandler.InnerHandler\n  fullName: DelegatingHandler.InnerHandler\n- uid: System.Net.Http.DelegatingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)\n  parent: System.Net.Http.DelegatingHandler\n  isExternal: false\n  name: SendAsync(HttpRequestMessage, CancellationToken)\n  nameWithType: DelegatingHandler.SendAsync(HttpRequestMessage, CancellationToken)\n  fullName: DelegatingHandler.SendAsync(HttpRequestMessage, CancellationToken)\n- uid: System.Threading.Tasks.Task`1\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Net.Http.HttpResponseMessage\n  name: HttpResponseMessage\n  nameWithType: HttpResponseMessage\n  fullName: System.Net.Http.HttpResponseMessage\n- uid: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<HttpResponseMessage>\n  nameWithType: Task<HttpResponseMessage>\n  fullName: System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage>\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    nameWithType: Task\n    fullName: System.Threading.Tasks.Task\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Net.Http.HttpResponseMessage\n    name: HttpResponseMessage\n    nameWithType: HttpResponseMessage\n    fullName: System.Net.Http.HttpResponseMessage\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Net.Http.HttpRequestMessage\n  parent: System.Net.Http\n  isExternal: false\n  name: HttpRequestMessage\n  nameWithType: HttpRequestMessage\n  fullName: System.Net.Http.HttpRequestMessage\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Net.Http.DelegatingHandler.#ctor*\n  parent: System.Net.Http.DelegatingHandler\n  isExternal: false\n  name: DelegatingHandler\n  nameWithType: DelegatingHandler.DelegatingHandler\n  fullName: DelegatingHandler.DelegatingHandler\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/DelegatingHandler.xml\n- uid: System.Net.Http.DelegatingHandler.Dispose*\n  parent: System.Net.Http.DelegatingHandler\n  isExternal: false\n  name: Dispose\n  nameWithType: DelegatingHandler.Dispose\n  fullName: DelegatingHandler.Dispose\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/DelegatingHandler.xml\n- uid: System.Net.Http.DelegatingHandler.InnerHandler*\n  parent: System.Net.Http.DelegatingHandler\n  isExternal: false\n  name: InnerHandler\n  nameWithType: DelegatingHandler.InnerHandler\n  fullName: DelegatingHandler.InnerHandler\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/DelegatingHandler.xml\n- uid: System.Net.Http.DelegatingHandler.SendAsync*\n  parent: System.Net.Http.DelegatingHandler\n  isExternal: false\n  name: SendAsync\n  nameWithType: DelegatingHandler.SendAsync\n  fullName: DelegatingHandler.SendAsync\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/DelegatingHandler.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Net.Http.HttpMessageHandler.Dispose\n  parent: System.Net.Http.HttpMessageHandler\n  isExternal: false\n  name: Dispose()\n  nameWithType: HttpMessageHandler.Dispose()\n  fullName: HttpMessageHandler.Dispose()\n"}