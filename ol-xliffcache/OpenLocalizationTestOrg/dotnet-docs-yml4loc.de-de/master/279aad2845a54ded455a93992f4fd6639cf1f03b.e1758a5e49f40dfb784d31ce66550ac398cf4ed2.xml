{"nodes":[{"content":"Specifies flags that describe the attributes of a field.","nodes":[{"pos":[0,56],"content":"Specifies flags that describe the attributes of a field.","nodes":[{"content":"Specifies flags that describe the attributes of a field.","pos":[0,56]}]}],"pos":[1365,1422],"yaml":true},{"content":"`FieldAttributes` uses the value from `FieldAccessMask` to mask off only the parts of the attribute value that pertain to the accessibility. For example, the following code determines if `Attributes` has the public bit set.  \n  \n [!code-cpp[System.Reflection.FieldAttributes#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.reflection.fieldattributes/cpp/remarks.cpp#1)]\n [!code-csharp[System.Reflection.FieldAttributes#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.fieldattributes/cs/remarks.cs#1)]\n [!code-vb[System.Reflection.FieldAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.fieldattributes/vb/remarks.vb#1)]  \n  \n To get the `FieldAttributes`, first get the class `Type`. From the `Type`, get the `FieldInfo`. From the `FieldInfo`, get the `Attributes`.  \n  \n The enumerated value is a number representing the bitwise OR of the attributes implemented on the field.","nodes":[{"pos":[0,223],"content":"`FieldAttributes` uses the value from `FieldAccessMask` to mask off only the parts of the attribute value that pertain to the accessibility. For example, the following code determines if `Attributes` has the public bit set.","nodes":[{"content":"<ph id=\"ph1\">`FieldAttributes`</ph> uses the value from <ph id=\"ph2\">`FieldAccessMask`</ph> to mask off only the parts of the attribute value that pertain to the accessibility.","pos":[0,140],"source":"`FieldAttributes` uses the value from `FieldAccessMask` to mask off only the parts of the attribute value that pertain to the accessibility."},{"content":"For example, the following code determines if <ph id=\"ph1\">`Attributes`</ph> has the public bit set.","pos":[141,223],"source":" For example, the following code determines if `Attributes` has the public bit set."}]},{"pos":[230,684],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>System.Reflection.FieldAttributes#1<ept id=\"p2\">](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.reflection.fieldattributes/cpp/remarks.cpp#1)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-csharp</bpt><bpt id=\"p4\">[</bpt>System.Reflection.FieldAttributes#1<ept id=\"p4\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.fieldattributes/cs/remarks.cs#1)</ept><ept id=\"p3\">]</ept> <bpt id=\"p5\">[!code-vb</bpt><bpt id=\"p6\">[</bpt>System.Reflection.FieldAttributes#1<ept id=\"p6\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.fieldattributes/vb/remarks.vb#1)</ept><ept id=\"p5\">]</ept>","source":"[!code-cpp[System.Reflection.FieldAttributes#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.reflection.fieldattributes/cpp/remarks.cpp#1)]\n [!code-csharp[System.Reflection.FieldAttributes#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.fieldattributes/cs/remarks.cs#1)]\n [!code-vb[System.Reflection.FieldAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.fieldattributes/vb/remarks.vb#1)]"},{"pos":[691,830],"content":"To get the `FieldAttributes`, first get the class `Type`. From the `Type`, get the `FieldInfo`. From the `FieldInfo`, get the `Attributes`.","nodes":[{"content":"To get the <ph id=\"ph1\">`FieldAttributes`</ph>, first get the class <ph id=\"ph2\">`Type`</ph>.","pos":[0,57],"source":"To get the `FieldAttributes`, first get the class `Type`."},{"content":"From the <ph id=\"ph1\">`Type`</ph>, get the <ph id=\"ph2\">`FieldInfo`</ph>.","pos":[58,95],"source":" From the `Type`, get the `FieldInfo`."},{"content":"From the <ph id=\"ph1\">`FieldInfo`</ph>, get the <ph id=\"ph2\">`Attributes`</ph>.","pos":[96,139],"source":" From the `FieldInfo`, get the `Attributes`."}]},{"pos":[837,941],"content":"The enumerated value is a number representing the bitwise OR of the attributes implemented on the field.","nodes":[{"content":"The enumerated value is a number representing the bitwise OR of the attributes implemented on the field.","pos":[0,104]}]}],"pos":[1433,2385],"yaml":true,"extradata":"MT"},{"content":"Specifies that the field is accessible throughout the assembly.","nodes":[{"pos":[0,63],"content":"Specifies that the field is accessible throughout the assembly.","nodes":[{"content":"Specifies that the field is accessible throughout the assembly.","pos":[0,63]}]}],"pos":[4860,4924],"yaml":true},{"content":"Specifies that the field is accessible only by subtypes in this assembly.","nodes":[{"pos":[0,73],"content":"Specifies that the field is accessible only by subtypes in this assembly.","nodes":[{"content":"Specifies that the field is accessible only by subtypes in this assembly.","pos":[0,73]}]}],"pos":[6441,6515],"yaml":true},{"content":"Specifies that the field is accessible only by type and subtypes.","nodes":[{"pos":[0,65],"content":"Specifies that the field is accessible only by type and subtypes.","nodes":[{"content":"Specifies that the field is accessible only by type and subtypes.","pos":[0,65]}]}],"pos":[8005,8071],"yaml":true},{"content":"Specifies that the field is accessible by subtypes anywhere, as well as throughout this assembly.","nodes":[{"pos":[0,97],"content":"Specifies that the field is accessible by subtypes anywhere, as well as throughout this assembly.","nodes":[{"content":"Specifies that the field is accessible by subtypes anywhere, as well as throughout this assembly.","pos":[0,97]}]}],"pos":[9580,9678],"yaml":true},{"content":"Specifies the access level of a given field.","nodes":[{"pos":[0,44],"content":"Specifies the access level of a given field.","nodes":[{"content":"Specifies the access level of a given field.","pos":[0,44]}]}],"pos":[11221,11266],"yaml":true},{"content":"Specifies that the field has a default value.","nodes":[{"pos":[0,45],"content":"Specifies that the field has a default value.","nodes":[{"content":"Specifies that the field has a default value.","pos":[0,45]}]}],"pos":[12784,12830],"yaml":true},{"content":"Specifies that the field has marshaling information.","nodes":[{"pos":[0,52],"content":"Specifies that the field has marshaling information.","nodes":[{"content":"Specifies that the field has marshaling information.","pos":[0,52]}]}],"pos":[14373,14426],"yaml":true},{"content":"Specifies that the field has a relative virtual address (RVA). The RVA is the location of the method body in the current image, as an address relative to the start of the image file in which it is located.","nodes":[{"pos":[0,205],"content":"Specifies that the field has a relative virtual address (RVA). The RVA is the location of the method body in the current image, as an address relative to the start of the image file in which it is located.","nodes":[{"content":"Specifies that the field has a relative virtual address (RVA). The RVA is the location of the method body in the current image, as an address relative to the start of the image file in which it is located.","pos":[0,205],"nodes":[{"content":"Specifies that the field has a relative virtual address (RVA).","pos":[0,62]},{"content":"The RVA is the location of the method body in the current image, as an address relative to the start of the image file in which it is located.","pos":[63,205]}]}]}],"pos":[15950,16156],"yaml":true},{"content":"Specifies that the field is initialized only, and can be set only in the body of a constructor.","nodes":[{"pos":[0,95],"content":"Specifies that the field is initialized only, and can be set only in the body of a constructor.","nodes":[{"content":"Specifies that the field is initialized only, and can be set only in the body of a constructor.","pos":[0,95]}]}],"pos":[17658,17754],"yaml":true},{"content":"Specifies that the field's value is a compile-time (static or early bound) constant. Any attempt to set it throws a <xref href=\"System.FieldAccessException\"></xref>.","nodes":[{"pos":[0,165],"content":"Specifies that the field's value is a compile-time (static or early bound) constant. Any attempt to set it throws a <xref href=\"System.FieldAccessException\"></xref>.","nodes":[{"content":"Specifies that the field's value is a compile-time (static or early bound) constant.","pos":[0,84]},{"content":"Any attempt to set it throws a <ph id=\"ph1\">&lt;xref href=\"System.FieldAccessException\"&gt;&lt;/xref&gt;</ph>.","pos":[85,165],"source":" Any attempt to set it throws a <xref href=\"System.FieldAccessException\"></xref>."}]}],"pos":[19247,19413],"yaml":true},{"content":"Specifies that the field does not have to be serialized when the type is remoted.","nodes":[{"pos":[0,81],"content":"Specifies that the field does not have to be serialized when the type is remoted.","nodes":[{"content":"Specifies that the field does not have to be serialized when the type is remoted.","pos":[0,81]}]}],"pos":[20941,21023],"yaml":true},{"content":"Reserved for future use.","nodes":[{"pos":[0,24],"content":"Reserved for future use.","nodes":[{"content":"Reserved for future use.","pos":[0,24]}]}],"pos":[22545,22570],"yaml":true},{"content":"Specifies that the field is accessible only by the parent type.","nodes":[{"pos":[0,63],"content":"Specifies that the field is accessible only by the parent type.","nodes":[{"content":"Specifies that the field is accessible only by the parent type.","pos":[0,63]}]}],"pos":[24066,24130],"yaml":true},{"content":"Specifies that the field cannot be referenced.","nodes":[{"pos":[0,46],"content":"Specifies that the field cannot be referenced.","nodes":[{"content":"Specifies that the field cannot be referenced.","pos":[0,46]}]}],"pos":[25652,25699],"yaml":true},{"content":"Specifies that the field is accessible by any member for whom this scope is visible.","nodes":[{"pos":[0,84],"content":"Specifies that the field is accessible by any member for whom this scope is visible.","nodes":[{"content":"Specifies that the field is accessible by any member for whom this scope is visible.","pos":[0,84]}]}],"pos":[27190,27275],"yaml":true},{"content":"Reserved.","nodes":[{"pos":[0,9],"content":"Reserved.","nodes":[{"content":"Reserved.","pos":[0,9]}]}],"pos":[28763,28773],"yaml":true},{"content":"Specifies that the common language runtime (metadata internal APIs) should check the name encoding.","nodes":[{"pos":[0,99],"content":"Specifies that the common language runtime (metadata internal APIs) should check the name encoding.","nodes":[{"content":"Specifies that the common language runtime (metadata internal APIs) should check the name encoding.","pos":[0,99]}]}],"pos":[30002,30102],"yaml":true},{"content":"Specifies a special method, with the name describing how the method is special.","nodes":[{"pos":[0,79],"content":"Specifies a special method, with the name describing how the method is special.","nodes":[{"content":"Specifies a special method, with the name describing how the method is special.","pos":[0,79]}]}],"pos":[31624,31704],"yaml":true},{"content":"Specifies that the field represents the defined type, or else it is per-instance.","nodes":[{"pos":[0,81],"content":"Specifies that the field represents the defined type, or else it is per-instance.","nodes":[{"content":"Specifies that the field represents the defined type, or else it is per-instance.","pos":[0,81]}]}],"pos":[33194,33276],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Reflection.FieldAttributes\n  commentId: T:System.Reflection.FieldAttributes\n  id: FieldAttributes\n  children:\n  - System.Reflection.FieldAttributes.Assembly\n  - System.Reflection.FieldAttributes.FamANDAssem\n  - System.Reflection.FieldAttributes.Family\n  - System.Reflection.FieldAttributes.FamORAssem\n  - System.Reflection.FieldAttributes.FieldAccessMask\n  - System.Reflection.FieldAttributes.HasDefault\n  - System.Reflection.FieldAttributes.HasFieldMarshal\n  - System.Reflection.FieldAttributes.HasFieldRVA\n  - System.Reflection.FieldAttributes.InitOnly\n  - System.Reflection.FieldAttributes.Literal\n  - System.Reflection.FieldAttributes.NotSerialized\n  - System.Reflection.FieldAttributes.PinvokeImpl\n  - System.Reflection.FieldAttributes.Private\n  - System.Reflection.FieldAttributes.PrivateScope\n  - System.Reflection.FieldAttributes.Public\n  - System.Reflection.FieldAttributes.ReservedMask\n  - System.Reflection.FieldAttributes.RTSpecialName\n  - System.Reflection.FieldAttributes.SpecialName\n  - System.Reflection.FieldAttributes.Static\n  langs:\n  - csharp\n  name: FieldAttributes\n  nameWithType: FieldAttributes\n  fullName: System.Reflection.FieldAttributes\n  type: Enum\n  assemblies:\n  - System.Reflection.Primitives\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Specifies flags that describe the attributes of a field.\n  remarks: \"`FieldAttributes` uses the value from `FieldAccessMask` to mask off only the parts of the attribute value that pertain to the accessibility. For example, the following code determines if `Attributes` has the public bit set.  \\n  \\n [!code-cpp[System.Reflection.FieldAttributes#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.reflection.fieldattributes/cpp/remarks.cpp#1)]\\n [!code-csharp[System.Reflection.FieldAttributes#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.fieldattributes/cs/remarks.cs#1)]\\n [!code-vb[System.Reflection.FieldAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.fieldattributes/vb/remarks.vb#1)]  \\n  \\n To get the `FieldAttributes`, first get the class `Type`. From the `Type`, get the `FieldInfo`. From the `FieldInfo`, get the `Attributes`.  \\n  \\n The enumerated value is a number representing the bitwise OR of the attributes implemented on the field.\"\n  example:\n  - \"In this example, three fields are built and the `FieldAttributes` values are displayed. A `FieldAttributes` value can contain more than one attribute, for example, both `Public` and `Literal`, as shown in the third field.  \\n  \\n [!code-cpp[Classic FieldAttributes Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FieldAttributes Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic FieldAttributes Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FieldAttributes Example/CS/source.cs#1)]\\n [!code-vb[Classic FieldAttributes Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FieldAttributes Example/VB/source.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Flags]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public enum FieldAttributes\n  inheritance:\n  - System.Object\n  - System.ValueType\n  - System.Enum\n  attributes:\n  - type: System.FlagsAttribute\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/FieldAttributes.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.FieldAttributes.Assembly\n  commentId: F:System.Reflection.FieldAttributes.Assembly\n  id: Assembly\n  parent: System.Reflection.FieldAttributes\n  langs:\n  - csharp\n  name: Assembly\n  nameWithType: FieldAttributes.Assembly\n  fullName: FieldAttributes.Assembly\n  type: Field\n  assemblies:\n  - System.Reflection.Primitives\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Specifies that the field is accessible throughout the assembly.\n  syntax:\n    content: Assembly\n    return:\n      type: System.Reflection.FieldAttributes\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/FieldAttributes.xml\n- uid: System.Reflection.FieldAttributes.FamANDAssem\n  commentId: F:System.Reflection.FieldAttributes.FamANDAssem\n  id: FamANDAssem\n  parent: System.Reflection.FieldAttributes\n  langs:\n  - csharp\n  name: FamANDAssem\n  nameWithType: FieldAttributes.FamANDAssem\n  fullName: FieldAttributes.FamANDAssem\n  type: Field\n  assemblies:\n  - System.Reflection.Primitives\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Specifies that the field is accessible only by subtypes in this assembly.\n  syntax:\n    content: FamANDAssem\n    return:\n      type: System.Reflection.FieldAttributes\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/FieldAttributes.xml\n- uid: System.Reflection.FieldAttributes.Family\n  commentId: F:System.Reflection.FieldAttributes.Family\n  id: Family\n  parent: System.Reflection.FieldAttributes\n  langs:\n  - csharp\n  name: Family\n  nameWithType: FieldAttributes.Family\n  fullName: FieldAttributes.Family\n  type: Field\n  assemblies:\n  - System.Reflection.Primitives\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Specifies that the field is accessible only by type and subtypes.\n  syntax:\n    content: Family\n    return:\n      type: System.Reflection.FieldAttributes\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/FieldAttributes.xml\n- uid: System.Reflection.FieldAttributes.FamORAssem\n  commentId: F:System.Reflection.FieldAttributes.FamORAssem\n  id: FamORAssem\n  parent: System.Reflection.FieldAttributes\n  langs:\n  - csharp\n  name: FamORAssem\n  nameWithType: FieldAttributes.FamORAssem\n  fullName: FieldAttributes.FamORAssem\n  type: Field\n  assemblies:\n  - System.Reflection.Primitives\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Specifies that the field is accessible by subtypes anywhere, as well as throughout this assembly.\n  syntax:\n    content: FamORAssem\n    return:\n      type: System.Reflection.FieldAttributes\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/FieldAttributes.xml\n- uid: System.Reflection.FieldAttributes.FieldAccessMask\n  commentId: F:System.Reflection.FieldAttributes.FieldAccessMask\n  id: FieldAccessMask\n  parent: System.Reflection.FieldAttributes\n  langs:\n  - csharp\n  name: FieldAccessMask\n  nameWithType: FieldAttributes.FieldAccessMask\n  fullName: FieldAttributes.FieldAccessMask\n  type: Field\n  assemblies:\n  - System.Reflection.Primitives\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Specifies the access level of a given field.\n  syntax:\n    content: FieldAccessMask\n    return:\n      type: System.Reflection.FieldAttributes\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/FieldAttributes.xml\n- uid: System.Reflection.FieldAttributes.HasDefault\n  commentId: F:System.Reflection.FieldAttributes.HasDefault\n  id: HasDefault\n  parent: System.Reflection.FieldAttributes\n  langs:\n  - csharp\n  name: HasDefault\n  nameWithType: FieldAttributes.HasDefault\n  fullName: FieldAttributes.HasDefault\n  type: Field\n  assemblies:\n  - System.Reflection.Primitives\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Specifies that the field has a default value.\n  syntax:\n    content: HasDefault\n    return:\n      type: System.Reflection.FieldAttributes\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/FieldAttributes.xml\n- uid: System.Reflection.FieldAttributes.HasFieldMarshal\n  commentId: F:System.Reflection.FieldAttributes.HasFieldMarshal\n  id: HasFieldMarshal\n  parent: System.Reflection.FieldAttributes\n  langs:\n  - csharp\n  name: HasFieldMarshal\n  nameWithType: FieldAttributes.HasFieldMarshal\n  fullName: FieldAttributes.HasFieldMarshal\n  type: Field\n  assemblies:\n  - System.Reflection.Primitives\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Specifies that the field has marshaling information.\n  syntax:\n    content: HasFieldMarshal\n    return:\n      type: System.Reflection.FieldAttributes\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/FieldAttributes.xml\n- uid: System.Reflection.FieldAttributes.HasFieldRVA\n  commentId: F:System.Reflection.FieldAttributes.HasFieldRVA\n  id: HasFieldRVA\n  parent: System.Reflection.FieldAttributes\n  langs:\n  - csharp\n  name: HasFieldRVA\n  nameWithType: FieldAttributes.HasFieldRVA\n  fullName: FieldAttributes.HasFieldRVA\n  type: Field\n  assemblies:\n  - System.Reflection.Primitives\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Specifies that the field has a relative virtual address (RVA). The RVA is the location of the method body in the current image, as an address relative to the start of the image file in which it is located.\n  syntax:\n    content: HasFieldRVA\n    return:\n      type: System.Reflection.FieldAttributes\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/FieldAttributes.xml\n- uid: System.Reflection.FieldAttributes.InitOnly\n  commentId: F:System.Reflection.FieldAttributes.InitOnly\n  id: InitOnly\n  parent: System.Reflection.FieldAttributes\n  langs:\n  - csharp\n  name: InitOnly\n  nameWithType: FieldAttributes.InitOnly\n  fullName: FieldAttributes.InitOnly\n  type: Field\n  assemblies:\n  - System.Reflection.Primitives\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Specifies that the field is initialized only, and can be set only in the body of a constructor.\n  syntax:\n    content: InitOnly\n    return:\n      type: System.Reflection.FieldAttributes\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/FieldAttributes.xml\n- uid: System.Reflection.FieldAttributes.Literal\n  commentId: F:System.Reflection.FieldAttributes.Literal\n  id: Literal\n  parent: System.Reflection.FieldAttributes\n  langs:\n  - csharp\n  name: Literal\n  nameWithType: FieldAttributes.Literal\n  fullName: FieldAttributes.Literal\n  type: Field\n  assemblies:\n  - System.Reflection.Primitives\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Specifies that the field's value is a compile-time (static or early bound) constant. Any attempt to set it throws a <xref href=\"System.FieldAccessException\"></xref>.\n  syntax:\n    content: Literal\n    return:\n      type: System.Reflection.FieldAttributes\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/FieldAttributes.xml\n- uid: System.Reflection.FieldAttributes.NotSerialized\n  commentId: F:System.Reflection.FieldAttributes.NotSerialized\n  id: NotSerialized\n  parent: System.Reflection.FieldAttributes\n  langs:\n  - csharp\n  name: NotSerialized\n  nameWithType: FieldAttributes.NotSerialized\n  fullName: FieldAttributes.NotSerialized\n  type: Field\n  assemblies:\n  - System.Reflection.Primitives\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Specifies that the field does not have to be serialized when the type is remoted.\n  syntax:\n    content: NotSerialized\n    return:\n      type: System.Reflection.FieldAttributes\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/FieldAttributes.xml\n- uid: System.Reflection.FieldAttributes.PinvokeImpl\n  commentId: F:System.Reflection.FieldAttributes.PinvokeImpl\n  id: PinvokeImpl\n  parent: System.Reflection.FieldAttributes\n  langs:\n  - csharp\n  name: PinvokeImpl\n  nameWithType: FieldAttributes.PinvokeImpl\n  fullName: FieldAttributes.PinvokeImpl\n  type: Field\n  assemblies:\n  - System.Reflection.Primitives\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Reserved for future use.\n  syntax:\n    content: PinvokeImpl\n    return:\n      type: System.Reflection.FieldAttributes\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/FieldAttributes.xml\n- uid: System.Reflection.FieldAttributes.Private\n  commentId: F:System.Reflection.FieldAttributes.Private\n  id: Private\n  parent: System.Reflection.FieldAttributes\n  langs:\n  - csharp\n  name: Private\n  nameWithType: FieldAttributes.Private\n  fullName: FieldAttributes.Private\n  type: Field\n  assemblies:\n  - System.Reflection.Primitives\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Specifies that the field is accessible only by the parent type.\n  syntax:\n    content: Private\n    return:\n      type: System.Reflection.FieldAttributes\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/FieldAttributes.xml\n- uid: System.Reflection.FieldAttributes.PrivateScope\n  commentId: F:System.Reflection.FieldAttributes.PrivateScope\n  id: PrivateScope\n  parent: System.Reflection.FieldAttributes\n  langs:\n  - csharp\n  name: PrivateScope\n  nameWithType: FieldAttributes.PrivateScope\n  fullName: FieldAttributes.PrivateScope\n  type: Field\n  assemblies:\n  - System.Reflection.Primitives\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Specifies that the field cannot be referenced.\n  syntax:\n    content: PrivateScope\n    return:\n      type: System.Reflection.FieldAttributes\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/FieldAttributes.xml\n- uid: System.Reflection.FieldAttributes.Public\n  commentId: F:System.Reflection.FieldAttributes.Public\n  id: Public\n  parent: System.Reflection.FieldAttributes\n  langs:\n  - csharp\n  name: Public\n  nameWithType: FieldAttributes.Public\n  fullName: FieldAttributes.Public\n  type: Field\n  assemblies:\n  - System.Reflection.Primitives\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Specifies that the field is accessible by any member for whom this scope is visible.\n  syntax:\n    content: Public\n    return:\n      type: System.Reflection.FieldAttributes\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/FieldAttributes.xml\n- uid: System.Reflection.FieldAttributes.ReservedMask\n  commentId: F:System.Reflection.FieldAttributes.ReservedMask\n  id: ReservedMask\n  parent: System.Reflection.FieldAttributes\n  langs:\n  - csharp\n  name: ReservedMask\n  nameWithType: FieldAttributes.ReservedMask\n  fullName: FieldAttributes.ReservedMask\n  type: Field\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Reserved.\n  syntax:\n    content: ReservedMask\n    return:\n      type: System.Reflection.FieldAttributes\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/FieldAttributes.xml\n- uid: System.Reflection.FieldAttributes.RTSpecialName\n  commentId: F:System.Reflection.FieldAttributes.RTSpecialName\n  id: RTSpecialName\n  parent: System.Reflection.FieldAttributes\n  langs:\n  - csharp\n  name: RTSpecialName\n  nameWithType: FieldAttributes.RTSpecialName\n  fullName: FieldAttributes.RTSpecialName\n  type: Field\n  assemblies:\n  - System.Reflection.Primitives\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Specifies that the common language runtime (metadata internal APIs) should check the name encoding.\n  syntax:\n    content: RTSpecialName\n    return:\n      type: System.Reflection.FieldAttributes\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/FieldAttributes.xml\n- uid: System.Reflection.FieldAttributes.SpecialName\n  commentId: F:System.Reflection.FieldAttributes.SpecialName\n  id: SpecialName\n  parent: System.Reflection.FieldAttributes\n  langs:\n  - csharp\n  name: SpecialName\n  nameWithType: FieldAttributes.SpecialName\n  fullName: FieldAttributes.SpecialName\n  type: Field\n  assemblies:\n  - System.Reflection.Primitives\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Specifies a special method, with the name describing how the method is special.\n  syntax:\n    content: SpecialName\n    return:\n      type: System.Reflection.FieldAttributes\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/FieldAttributes.xml\n- uid: System.Reflection.FieldAttributes.Static\n  commentId: F:System.Reflection.FieldAttributes.Static\n  id: Static\n  parent: System.Reflection.FieldAttributes\n  langs:\n  - csharp\n  name: Static\n  nameWithType: FieldAttributes.Static\n  fullName: FieldAttributes.Static\n  type: Field\n  assemblies:\n  - System.Reflection.Primitives\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Specifies that the field represents the defined type, or else it is per-instance.\n  syntax:\n    content: Static\n    return:\n      type: System.Reflection.FieldAttributes\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/FieldAttributes.xml\nreferences:\n- uid: System.Enum\n  parent: System\n  isExternal: false\n  name: Enum\n  nameWithType: Enum\n  fullName: System.Enum\n- uid: System.Reflection.FieldAttributes.Assembly\n  parent: System.Reflection.FieldAttributes\n  isExternal: false\n  name: Assembly\n  nameWithType: FieldAttributes.Assembly\n  fullName: FieldAttributes.Assembly\n- uid: System.Reflection.FieldAttributes\n  parent: System.Reflection\n  isExternal: false\n  name: FieldAttributes\n  nameWithType: FieldAttributes\n  fullName: System.Reflection.FieldAttributes\n- uid: System.Reflection.FieldAttributes.FamANDAssem\n  parent: System.Reflection.FieldAttributes\n  isExternal: false\n  name: FamANDAssem\n  nameWithType: FieldAttributes.FamANDAssem\n  fullName: FieldAttributes.FamANDAssem\n- uid: System.Reflection.FieldAttributes.Family\n  parent: System.Reflection.FieldAttributes\n  isExternal: false\n  name: Family\n  nameWithType: FieldAttributes.Family\n  fullName: FieldAttributes.Family\n- uid: System.Reflection.FieldAttributes.FamORAssem\n  parent: System.Reflection.FieldAttributes\n  isExternal: false\n  name: FamORAssem\n  nameWithType: FieldAttributes.FamORAssem\n  fullName: FieldAttributes.FamORAssem\n- uid: System.Reflection.FieldAttributes.FieldAccessMask\n  parent: System.Reflection.FieldAttributes\n  isExternal: false\n  name: FieldAccessMask\n  nameWithType: FieldAttributes.FieldAccessMask\n  fullName: FieldAttributes.FieldAccessMask\n- uid: System.Reflection.FieldAttributes.HasDefault\n  parent: System.Reflection.FieldAttributes\n  isExternal: false\n  name: HasDefault\n  nameWithType: FieldAttributes.HasDefault\n  fullName: FieldAttributes.HasDefault\n- uid: System.Reflection.FieldAttributes.HasFieldMarshal\n  parent: System.Reflection.FieldAttributes\n  isExternal: false\n  name: HasFieldMarshal\n  nameWithType: FieldAttributes.HasFieldMarshal\n  fullName: FieldAttributes.HasFieldMarshal\n- uid: System.Reflection.FieldAttributes.HasFieldRVA\n  parent: System.Reflection.FieldAttributes\n  isExternal: false\n  name: HasFieldRVA\n  nameWithType: FieldAttributes.HasFieldRVA\n  fullName: FieldAttributes.HasFieldRVA\n- uid: System.Reflection.FieldAttributes.InitOnly\n  parent: System.Reflection.FieldAttributes\n  isExternal: false\n  name: InitOnly\n  nameWithType: FieldAttributes.InitOnly\n  fullName: FieldAttributes.InitOnly\n- uid: System.Reflection.FieldAttributes.Literal\n  parent: System.Reflection.FieldAttributes\n  isExternal: false\n  name: Literal\n  nameWithType: FieldAttributes.Literal\n  fullName: FieldAttributes.Literal\n- uid: System.Reflection.FieldAttributes.NotSerialized\n  parent: System.Reflection.FieldAttributes\n  isExternal: false\n  name: NotSerialized\n  nameWithType: FieldAttributes.NotSerialized\n  fullName: FieldAttributes.NotSerialized\n- uid: System.Reflection.FieldAttributes.PinvokeImpl\n  parent: System.Reflection.FieldAttributes\n  isExternal: false\n  name: PinvokeImpl\n  nameWithType: FieldAttributes.PinvokeImpl\n  fullName: FieldAttributes.PinvokeImpl\n- uid: System.Reflection.FieldAttributes.Private\n  parent: System.Reflection.FieldAttributes\n  isExternal: false\n  name: Private\n  nameWithType: FieldAttributes.Private\n  fullName: FieldAttributes.Private\n- uid: System.Reflection.FieldAttributes.PrivateScope\n  parent: System.Reflection.FieldAttributes\n  isExternal: false\n  name: PrivateScope\n  nameWithType: FieldAttributes.PrivateScope\n  fullName: FieldAttributes.PrivateScope\n- uid: System.Reflection.FieldAttributes.Public\n  parent: System.Reflection.FieldAttributes\n  isExternal: false\n  name: Public\n  nameWithType: FieldAttributes.Public\n  fullName: FieldAttributes.Public\n- uid: System.Reflection.FieldAttributes.ReservedMask\n  parent: System.Reflection.FieldAttributes\n  isExternal: false\n  name: ReservedMask\n  nameWithType: FieldAttributes.ReservedMask\n  fullName: FieldAttributes.ReservedMask\n- uid: System.Reflection.FieldAttributes.RTSpecialName\n  parent: System.Reflection.FieldAttributes\n  isExternal: false\n  name: RTSpecialName\n  nameWithType: FieldAttributes.RTSpecialName\n  fullName: FieldAttributes.RTSpecialName\n- uid: System.Reflection.FieldAttributes.SpecialName\n  parent: System.Reflection.FieldAttributes\n  isExternal: false\n  name: SpecialName\n  nameWithType: FieldAttributes.SpecialName\n  fullName: FieldAttributes.SpecialName\n- uid: System.Reflection.FieldAttributes.Static\n  parent: System.Reflection.FieldAttributes\n  isExternal: false\n  name: Static\n  nameWithType: FieldAttributes.Static\n  fullName: FieldAttributes.Static\n"}