{"nodes":[{"content":"Retrieves and imports metadata as <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> objects.","nodes":[{"pos":[0,111],"content":"Retrieves and imports metadata as <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Description.ServiceEndpoint\"&gt;&lt;/xref&gt;</ph> objects.","source":"Retrieves and imports metadata as <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> objects."}],"pos":[3147,3259],"yaml":true},{"content":"Use the <xref:System.ServiceModel.Description.MetadataResolver> class to quickly import endpoints for a service from metadata. This class downloads and converts metadata into <xref:System.ServiceModel.Description.ServiceEndpoint> objects. To download metadata and process that information as a <xref:System.ServiceModel.Description.MetadataSet?displayProperty=fullName>, see <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>.","nodes":[{"pos":[0,462],"content":"Use the <xref:System.ServiceModel.Description.MetadataResolver> class to quickly import endpoints for a service from metadata. This class downloads and converts metadata into <xref:System.ServiceModel.Description.ServiceEndpoint> objects. To download metadata and process that information as a <xref:System.ServiceModel.Description.MetadataSet?displayProperty=fullName>, see <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>.","nodes":[{"content":"Use the <xref:System.ServiceModel.Description.MetadataResolver> class to quickly import endpoints for a service from metadata. This class downloads and converts metadata into <xref:System.ServiceModel.Description.ServiceEndpoint> objects. To download metadata and process that information as a <xref:System.ServiceModel.Description.MetadataSet?displayProperty=fullName>, see <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>.","pos":[0,462],"nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.MetadataResolver&gt;</ph> class to quickly import endpoints for a service from metadata.","pos":[0,126],"source":"Use the <xref:System.ServiceModel.Description.MetadataResolver> class to quickly import endpoints for a service from metadata."},{"content":"This class downloads and converts metadata into <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph> objects.","pos":[127,238],"source":" This class downloads and converts metadata into <xref:System.ServiceModel.Description.ServiceEndpoint> objects."},{"content":"To download metadata and process that information as a <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.MetadataSet?displayProperty=fullName&gt;</ph>, see <ph id=\"ph2\">&lt;xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName&gt;</ph>.","pos":[239,462],"source":" To download metadata and process that information as a <xref:System.ServiceModel.Description.MetadataSet?displayProperty=fullName>, see <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>."}]}]}],"pos":[3270,3733],"yaml":true,"extradata":"MT"},{"content":"Begins an asynchronous call that resolves a metadata address into the <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> objects for the specified contracts, using the specified address and asynchronous state and delegate.","nodes":[{"pos":[0,240],"content":"Begins an asynchronous call that resolves a metadata address into the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Description.ServiceEndpoint\"&gt;&lt;/xref&gt;</ph> objects for the specified contracts, using the specified address and asynchronous state and delegate.","source":"Begins an asynchronous call that resolves a metadata address into the <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> objects for the specified contracts, using the specified address and asynchronous state and delegate."}],"pos":[6651,6892],"yaml":true},{"content":"The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> are used to retrieve the metadata and the default <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> is <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.  \n  \n To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly.  \n  \n> [!NOTE]\n>  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.","nodes":[{"pos":[0,350],"content":"The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> are used to retrieve the metadata and the default <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> is <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.","nodes":[{"content":"The default settings on the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName&gt;</ph> are used to retrieve the metadata and the default <ph id=\"ph2\">&lt;xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName&gt;</ph> is <ph id=\"ph3\">&lt;xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName&gt;</ph>.","pos":[0,350],"source":"The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> are used to retrieve the metadata and the default <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> is <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>."}]},{"pos":[357,583],"content":"To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly.","nodes":[{"content":"To download metadata but not resolve the information into <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph> objects, use the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName&gt;</ph> directly.","pos":[0,226],"source":"To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly."}]},{"pos":[591,768],"content":"[!NOTE]\n An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.","leadings":["","> "],"nodes":[{"content":" An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.","pos":[8,175],"nodes":[{"content":"An empty collection is returned if no endpoints were imported or if no endpoints matched the contract.","pos":[1,103]},{"content":"If an empty collection is returned, a warning trace is written.","pos":[104,167]}]}]}],"pos":[6903,7679],"yaml":true,"extradata":"MT"},{"content":"The contracts for which to download and resolve metadata.","nodes":[{"pos":[0,57],"content":"The contracts for which to download and resolve metadata.","nodes":[{"content":"The contracts for which to download and resolve metadata.","pos":[0,57]}]}],"pos":[8094,8152],"yaml":true},{"content":"The metadata address.","nodes":[{"pos":[0,21],"content":"The metadata address.","nodes":[{"content":"The metadata address.","pos":[0,21]}]}],"pos":[8237,8259],"yaml":true},{"content":"The asynchronous callback delegate invoked when the call is complete.","nodes":[{"pos":[0,69],"content":"The asynchronous callback delegate invoked when the call is complete.","nodes":[{"content":"The asynchronous callback delegate invoked when the call is complete.","pos":[0,69]}]}],"pos":[8330,8400],"yaml":true},{"content":"The state associated with the asynchronous call.","nodes":[{"pos":[0,48],"content":"The state associated with the asynchronous call.","nodes":[{"content":"The state associated with the asynchronous call.","pos":[0,48]}]}],"pos":[8466,8515],"yaml":true},{"content":"The <xref href=\"System.IAsyncResult\"></xref> that references the asynchronous resolve operation.","nodes":[{"pos":[0,96],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> that references the asynchronous resolve operation.","source":"The <xref href=\"System.IAsyncResult\"></xref> that references the asynchronous resolve operation."}],"pos":[8578,8675],"yaml":true},{"content":"The address, contract, or callback is `null`.","nodes":[{"pos":[0,45],"content":"The address, contract, or callback is <ph id=\"ph1\">`null`</ph>.","source":"The address, contract, or callback is `null`."}],"pos":[8866,8912],"yaml":true},{"content":"<code>contracts</code> is empty, at least one member of <code>contracts</code> is `null`, or <code>contracts</code> contains more than one contract with the same name and namespace.","nodes":[{"pos":[0,181],"content":"<ph id=\"ph1\">&lt;code&gt;contracts&lt;/code&gt;</ph> is empty, at least one member of <ph id=\"ph2\">&lt;code&gt;contracts&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>, or <ph id=\"ph4\">&lt;code&gt;contracts&lt;/code&gt;</ph> contains more than one contract with the same name and namespace.","source":"<code>contracts</code> is empty, at least one member of <code>contracts</code> is `null`, or <code>contracts</code> contains more than one contract with the same name and namespace."}],"pos":[9006,9188],"yaml":true},{"content":"Begins an asynchronous call that resolves a metadata address into the <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> objects for the specified contract using the specified address and asynchronous state and delegate.","nodes":[{"pos":[0,238],"content":"Begins an asynchronous call that resolves a metadata address into the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Description.ServiceEndpoint\"&gt;&lt;/xref&gt;</ph> objects for the specified contract using the specified address and asynchronous state and delegate.","source":"Begins an asynchronous call that resolves a metadata address into the <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> objects for the specified contract using the specified address and asynchronous state and delegate."}],"pos":[10584,10823],"yaml":true},{"content":"The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> are used to retrieve the metadata and the default <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> is <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.  \n  \n To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly.  \n  \n> [!NOTE]\n>  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.  \n  \n This method requires that you specify a contract type. You can specify the contract by declaring the service interface in the client code or by using a [!INCLUDE[indigo2](~/includes/indigo2-md.md)] client generated by Svcutil.exe. If the interface changes (adding a new operation, for example) you must update the interface in the client code or generate a new [!INCLUDE[indigo2](~/includes/indigo2-md.md)] client. If you do not, an exception is thrown. For example, you have a service that implements a service contract called ICalculator that defines Add(), Sub(), Mult(), and Div(). You create a client application and generate [!INCLUDE[indigo2](~/includes/indigo2-md.md)] client. You then add a method to ICalculator called Echo(). If you then write an application that calls <xref:System.ServiceModel.Description.MetadataResolver.Resolve%28System.Type%2CSystem.ServiceModel.EndpointAddress%29> without generating a new [!INCLUDE[indigo2](~/includes/indigo2-md.md)] client you get the following exception.  \n  \n `Unhandled Exception: System.ServiceModel.Description.WsdlImporter+WsdlImportException: Cannot locate operation Echo in Contract ICalculator`.","nodes":[{"pos":[0,350],"content":"The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> are used to retrieve the metadata and the default <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> is <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.","nodes":[{"content":"The default settings on the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName&gt;</ph> are used to retrieve the metadata and the default <ph id=\"ph2\">&lt;xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName&gt;</ph> is <ph id=\"ph3\">&lt;xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName&gt;</ph>.","pos":[0,350],"source":"The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> are used to retrieve the metadata and the default <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> is <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>."}]},{"pos":[357,583],"content":"To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly.","nodes":[{"content":"To download metadata but not resolve the information into <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph> objects, use the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName&gt;</ph> directly.","pos":[0,226],"source":"To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly."}]},{"pos":[591,768],"content":"[!NOTE]\n An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.","leadings":["","> "],"nodes":[{"content":" An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.","pos":[8,175],"nodes":[{"content":"An empty collection is returned if no endpoints were imported or if no endpoints matched the contract.","pos":[1,103]},{"content":"If an empty collection is returned, a warning trace is written.","pos":[104,167]}]}]},{"pos":[775,1785],"content":"This method requires that you specify a contract type. You can specify the contract by declaring the service interface in the client code or by using a [!INCLUDE[indigo2](~/includes/indigo2-md.md)] client generated by Svcutil.exe. If the interface changes (adding a new operation, for example) you must update the interface in the client code or generate a new [!INCLUDE[indigo2](~/includes/indigo2-md.md)] client. If you do not, an exception is thrown. For example, you have a service that implements a service contract called ICalculator that defines Add(), Sub(), Mult(), and Div(). You create a client application and generate [!INCLUDE[indigo2](~/includes/indigo2-md.md)] client. You then add a method to ICalculator called Echo(). If you then write an application that calls <xref:System.ServiceModel.Description.MetadataResolver.Resolve%28System.Type%2CSystem.ServiceModel.EndpointAddress%29> without generating a new [!INCLUDE[indigo2](~/includes/indigo2-md.md)] client you get the following exception.","nodes":[{"content":"This method requires that you specify a contract type.","pos":[0,54]},{"content":"You can specify the contract by declaring the service interface in the client code or by using a <ph id=\"ph1\">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> client generated by Svcutil.exe.","pos":[55,230],"source":" You can specify the contract by declaring the service interface in the client code or by using a [!INCLUDE[indigo2](~/includes/indigo2-md.md)] client generated by Svcutil.exe."},{"content":"If the interface changes (adding a new operation, for example) you must update the interface in the client code or generate a new <ph id=\"ph1\">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> client.","pos":[231,414],"source":" If the interface changes (adding a new operation, for example) you must update the interface in the client code or generate a new [!INCLUDE[indigo2](~/includes/indigo2-md.md)] client."},{"content":"If you do not, an exception is thrown.","pos":[415,453]},{"content":"For example, you have a service that implements a service contract called ICalculator that defines Add(), Sub(), Mult(), and Div().","pos":[454,585]},{"content":"You create a client application and generate <ph id=\"ph1\">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> client.","pos":[586,684],"source":" You create a client application and generate [!INCLUDE[indigo2](~/includes/indigo2-md.md)] client."},{"content":"You then add a method to ICalculator called Echo().","pos":[685,736]},{"content":"If you then write an application that calls <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.MetadataResolver.Resolve%28System.Type%2CSystem.ServiceModel.EndpointAddress%29&gt;</ph> without generating a new <ph id=\"ph2\">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> client you get the following exception.","pos":[737,1010],"source":" If you then write an application that calls <xref:System.ServiceModel.Description.MetadataResolver.Resolve%28System.Type%2CSystem.ServiceModel.EndpointAddress%29> without generating a new [!INCLUDE[indigo2](~/includes/indigo2-md.md)] client you get the following exception."}]},{"pos":[1792,1934],"content":"<ph id=\"ph1\">`Unhandled Exception: System.ServiceModel.Description.WsdlImporter+WsdlImportException: Cannot locate operation Echo in Contract ICalculator`</ph>.","source":"`Unhandled Exception: System.ServiceModel.Description.WsdlImporter+WsdlImportException: Cannot locate operation Echo in Contract ICalculator`."}],"pos":[10834,12780],"yaml":true,"extradata":"MT"},{"content":"The contract for which to download and resolve metadata.","nodes":[{"pos":[0,56],"content":"The contract for which to download and resolve metadata.","nodes":[{"content":"The contract for which to download and resolve metadata.","pos":[0,56]}]}],"pos":[13026,13083],"yaml":true},{"content":"The metadata address.","nodes":[{"pos":[0,21],"content":"The metadata address.","nodes":[{"content":"The metadata address.","pos":[0,21]}]}],"pos":[13168,13190],"yaml":true},{"content":"The asynchronous callback delegate invoked when the call is complete.","nodes":[{"pos":[0,69],"content":"The asynchronous callback delegate invoked when the call is complete.","nodes":[{"content":"The asynchronous callback delegate invoked when the call is complete.","pos":[0,69]}]}],"pos":[13261,13331],"yaml":true},{"content":"The state associated with the asynchronous call.","nodes":[{"pos":[0,48],"content":"The state associated with the asynchronous call.","nodes":[{"content":"The state associated with the asynchronous call.","pos":[0,48]}]}],"pos":[13397,13446],"yaml":true},{"content":"The <xref href=\"System.IAsyncResult\"></xref> that references the asynchronous resolve operation.","nodes":[{"pos":[0,96],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> that references the asynchronous resolve operation.","source":"The <xref href=\"System.IAsyncResult\"></xref> that references the asynchronous resolve operation."}],"pos":[13509,13606],"yaml":true},{"content":"The address, contract, or callback is `null`.","nodes":[{"pos":[0,45],"content":"The address, contract, or callback is <ph id=\"ph1\">`null`</ph>.","source":"The address, contract, or callback is `null`."}],"pos":[13797,13843],"yaml":true},{"content":"Begins an asynchronous call that resolves a metadata address into the <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> objects for the specified contracts, using the specified address, <xref href=\"System.ServiceModel.Description.MetadataExchangeClient\"></xref>, asynchronous state and delegate.","nodes":[{"pos":[0,314],"content":"Begins an asynchronous call that resolves a metadata address into the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Description.ServiceEndpoint\"&gt;&lt;/xref&gt;</ph> objects for the specified contracts, using the specified address, <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Description.MetadataExchangeClient\"&gt;&lt;/xref&gt;</ph>, asynchronous state and delegate.","source":"Begins an asynchronous call that resolves a metadata address into the <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> objects for the specified contracts, using the specified address, <xref href=\"System.ServiceModel.Description.MetadataExchangeClient\"></xref>, asynchronous state and delegate."}],"pos":[15800,16115],"yaml":true},{"content":"The default <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> is <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.  \n  \n To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly.  \n  \n> [!NOTE]\n>  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.","nodes":[{"pos":[0,197],"content":"The default <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> is <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.","nodes":[{"content":"The default <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName&gt;</ph> is <ph id=\"ph2\">&lt;xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName&gt;</ph>.","pos":[0,197],"source":"The default <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> is <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>."}]},{"pos":[204,430],"content":"To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly.","nodes":[{"content":"To download metadata but not resolve the information into <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph> objects, use the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName&gt;</ph> directly.","pos":[0,226],"source":"To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly."}]},{"pos":[438,615],"content":"[!NOTE]\n An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.","leadings":["","> "],"nodes":[{"content":" An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.","pos":[8,175],"nodes":[{"content":"An empty collection is returned if no endpoints were imported or if no endpoints matched the contract.","pos":[1,103]},{"content":"If an empty collection is returned, a warning trace is written.","pos":[104,167]}]}]}],"pos":[16126,16749],"yaml":true,"extradata":"MT"},{"content":"The contracts for which to download and resolve metadata.","nodes":[{"pos":[0,57],"content":"The contracts for which to download and resolve metadata.","nodes":[{"content":"The contracts for which to download and resolve metadata.","pos":[0,57]}]}],"pos":[17227,17285],"yaml":true},{"content":"The metadata address.","nodes":[{"pos":[0,21],"content":"The metadata address.","nodes":[{"content":"The metadata address.","pos":[0,21]}]}],"pos":[17370,17392],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Description.MetadataExchangeClient\"></xref> used to retrieve the metadata.","nodes":[{"pos":[0,110],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Description.MetadataExchangeClient\"&gt;&lt;/xref&gt;</ph> used to retrieve the metadata.","source":"The <xref href=\"System.ServiceModel.Description.MetadataExchangeClient\"></xref> used to retrieve the metadata."}],"pos":[17495,17606],"yaml":true},{"content":"The asynchronous callback delegate invoked when the call is complete.","nodes":[{"pos":[0,69],"content":"The asynchronous callback delegate invoked when the call is complete.","nodes":[{"content":"The asynchronous callback delegate invoked when the call is complete.","pos":[0,69]}]}],"pos":[17677,17747],"yaml":true},{"content":"The state associated with the asynchronous call.","nodes":[{"pos":[0,48],"content":"The state associated with the asynchronous call.","nodes":[{"content":"The state associated with the asynchronous call.","pos":[0,48]}]}],"pos":[17813,17862],"yaml":true},{"content":"The <xref href=\"System.IAsyncResult\"></xref> that references the asynchronous resolve operation.","nodes":[{"pos":[0,96],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> that references the asynchronous resolve operation.","source":"The <xref href=\"System.IAsyncResult\"></xref> that references the asynchronous resolve operation."}],"pos":[17925,18022],"yaml":true},{"content":"The address, contract, client, or callback is `null`.","nodes":[{"pos":[0,53],"content":"The address, contract, client, or callback is <ph id=\"ph1\">`null`</ph>.","source":"The address, contract, client, or callback is `null`."}],"pos":[18213,18267],"yaml":true},{"content":"<code>contracts</code> is empty, at least one member of <code>contracts</code> is null, or <code>contracts</code> contains more than one contract with the same name and namespace.","nodes":[{"pos":[0,179],"content":"<ph id=\"ph1\">&lt;code&gt;contracts&lt;/code&gt;</ph> is empty, at least one member of <ph id=\"ph2\">&lt;code&gt;contracts&lt;/code&gt;</ph> is null, or <ph id=\"ph3\">&lt;code&gt;contracts&lt;/code&gt;</ph> contains more than one contract with the same name and namespace.","source":"<code>contracts</code> is empty, at least one member of <code>contracts</code> is null, or <code>contracts</code> contains more than one contract with the same name and namespace."}],"pos":[18361,18541],"yaml":true},{"content":"Begins an asynchronous call that resolves a metadata address into the <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> objects for the specified contracts, using the specified address, <xref href=\"System.ServiceModel.Description.MetadataExchangeClientMode\"></xref> value, asynchronous state and delegate.","nodes":[{"pos":[0,324],"content":"Begins an asynchronous call that resolves a metadata address into the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Description.ServiceEndpoint\"&gt;&lt;/xref&gt;</ph> objects for the specified contracts, using the specified address, <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Description.MetadataExchangeClientMode\"&gt;&lt;/xref&gt;</ph> value, asynchronous state and delegate.","source":"Begins an asynchronous call that resolves a metadata address into the <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> objects for the specified contracts, using the specified address, <xref href=\"System.ServiceModel.Description.MetadataExchangeClientMode\"></xref> value, asynchronous state and delegate."}],"pos":[20411,20736],"yaml":true},{"content":"The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> are used to retrieve the metadata.  \n  \n To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly.  \n  \n> [!NOTE]\n>  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.","nodes":[{"pos":[0,149],"content":"The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> are used to retrieve the metadata.","nodes":[{"content":"The default settings on the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName&gt;</ph> are used to retrieve the metadata.","pos":[0,149],"source":"The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> are used to retrieve the metadata."}]},{"pos":[156,382],"content":"To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly.","nodes":[{"content":"To download metadata but not resolve the information into <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph> objects, use the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName&gt;</ph> directly.","pos":[0,226],"source":"To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly."}]},{"pos":[390,567],"content":"[!NOTE]\n An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.","leadings":["","> "],"nodes":[{"content":" An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.","pos":[8,175],"nodes":[{"content":"An empty collection is returned if no endpoints were imported or if no endpoints matched the contract.","pos":[1,103]},{"content":"If an empty collection is returned, a warning trace is written.","pos":[104,167]}]}]}],"pos":[20747,21322],"yaml":true,"extradata":"MT"},{"content":"The contracts for which to download and resolve metadata.","nodes":[{"pos":[0,57],"content":"The contracts for which to download and resolve metadata.","nodes":[{"content":"The contracts for which to download and resolve metadata.","pos":[0,57]}]}],"pos":[21770,21828],"yaml":true},{"content":"The metadata address.","nodes":[{"pos":[0,21],"content":"The metadata address.","nodes":[{"content":"The metadata address.","pos":[0,21]}]}],"pos":[21888,21910],"yaml":true},{"content":"The mode of retrieval.","nodes":[{"pos":[0,22],"content":"The mode of retrieval.","nodes":[{"content":"The mode of retrieval.","pos":[0,22]}]}],"pos":[22015,22038],"yaml":true},{"content":"The asynchronous callback delegate invoked when the call is complete.","nodes":[{"pos":[0,69],"content":"The asynchronous callback delegate invoked when the call is complete.","nodes":[{"content":"The asynchronous callback delegate invoked when the call is complete.","pos":[0,69]}]}],"pos":[22109,22179],"yaml":true},{"content":"The state associated with the asynchronous call.","nodes":[{"pos":[0,48],"content":"The state associated with the asynchronous call.","nodes":[{"content":"The state associated with the asynchronous call.","pos":[0,48]}]}],"pos":[22245,22294],"yaml":true},{"content":"The <xref href=\"System.IAsyncResult\"></xref> that references the asynchronous resolve operation.","nodes":[{"pos":[0,96],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> that references the asynchronous resolve operation.","source":"The <xref href=\"System.IAsyncResult\"></xref> that references the asynchronous resolve operation."}],"pos":[22357,22454],"yaml":true},{"content":"The address, contract, or callback is `null`.","nodes":[{"pos":[0,45],"content":"The address, contract, or callback is <ph id=\"ph1\">`null`</ph>.","source":"The address, contract, or callback is `null`."}],"pos":[22645,22691],"yaml":true},{"content":"<code>contracts</code> is empty, at least one member of <code>contracts</code> is null, or <code>contracts</code> contains more than one contract with the same name and namespace.","nodes":[{"pos":[0,179],"content":"<ph id=\"ph1\">&lt;code&gt;contracts&lt;/code&gt;</ph> is empty, at least one member of <ph id=\"ph2\">&lt;code&gt;contracts&lt;/code&gt;</ph> is null, or <ph id=\"ph3\">&lt;code&gt;contracts&lt;/code&gt;</ph> contains more than one contract with the same name and namespace.","source":"<code>contracts</code> is empty, at least one member of <code>contracts</code> is null, or <code>contracts</code> contains more than one contract with the same name and namespace."}],"pos":[22785,22965],"yaml":true},{"content":"Begins an asynchronous call that resolves a metadata address into the <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> objects for the specified contract, using the specified address, <xref href=\"System.ServiceModel.Description.MetadataExchangeClientMode\"></xref>, asynchronous state and delegate.","nodes":[{"pos":[0,317],"content":"Begins an asynchronous call that resolves a metadata address into the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Description.ServiceEndpoint\"&gt;&lt;/xref&gt;</ph> objects for the specified contract, using the specified address, <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Description.MetadataExchangeClientMode\"&gt;&lt;/xref&gt;</ph>, asynchronous state and delegate.","source":"Begins an asynchronous call that resolves a metadata address into the <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> objects for the specified contract, using the specified address, <xref href=\"System.ServiceModel.Description.MetadataExchangeClientMode\"></xref>, asynchronous state and delegate."}],"pos":[24511,24829],"yaml":true},{"content":"The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> are used to retrieve the metadata.  \n  \n To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly.  \n  \n> [!NOTE]\n>  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.","nodes":[{"pos":[0,149],"content":"The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> are used to retrieve the metadata.","nodes":[{"content":"The default settings on the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName&gt;</ph> are used to retrieve the metadata.","pos":[0,149],"source":"The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> are used to retrieve the metadata."}]},{"pos":[156,382],"content":"To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly.","nodes":[{"content":"To download metadata but not resolve the information into <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph> objects, use the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName&gt;</ph> directly.","pos":[0,226],"source":"To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly."}]},{"pos":[390,567],"content":"[!NOTE]\n An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.","leadings":["","> "],"nodes":[{"content":" An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.","pos":[8,175],"nodes":[{"content":"An empty collection is returned if no endpoints were imported or if no endpoints matched the contract.","pos":[1,103]},{"content":"If an empty collection is returned, a warning trace is written.","pos":[104,167]}]}]}],"pos":[24840,25415],"yaml":true,"extradata":"MT"},{"content":"The contract for which to download and resolve metadata.","nodes":[{"pos":[0,56],"content":"The contract for which to download and resolve metadata.","nodes":[{"content":"The contract for which to download and resolve metadata.","pos":[0,56]}]}],"pos":[25694,25751],"yaml":true},{"content":"The metadata address.","nodes":[{"pos":[0,21],"content":"The metadata address.","nodes":[{"content":"The metadata address.","pos":[0,21]}]}],"pos":[25811,25833],"yaml":true},{"content":"The mode of retrieval.","nodes":[{"pos":[0,22],"content":"The mode of retrieval.","nodes":[{"content":"The mode of retrieval.","pos":[0,22]}]}],"pos":[25938,25961],"yaml":true},{"content":"The asynchronous callback delegate invoked when the call is complete.","nodes":[{"pos":[0,69],"content":"The asynchronous callback delegate invoked when the call is complete.","nodes":[{"content":"The asynchronous callback delegate invoked when the call is complete.","pos":[0,69]}]}],"pos":[26032,26102],"yaml":true},{"content":"The state associated with the asynchronous call.","nodes":[{"pos":[0,48],"content":"The state associated with the asynchronous call.","nodes":[{"content":"The state associated with the asynchronous call.","pos":[0,48]}]}],"pos":[26168,26217],"yaml":true},{"content":"The <xref href=\"System.IAsyncResult\"></xref> that references the asynchronous resolve operation.","nodes":[{"pos":[0,96],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> that references the asynchronous resolve operation.","source":"The <xref href=\"System.IAsyncResult\"></xref> that references the asynchronous resolve operation."}],"pos":[26280,26377],"yaml":true},{"content":"The address, contract, or callback is `null`.","nodes":[{"pos":[0,45],"content":"The address, contract, or callback is <ph id=\"ph1\">`null`</ph>.","source":"The address, contract, or callback is `null`."}],"pos":[26568,26614],"yaml":true},{"content":"Begins an asynchronous call that resolves a metadata address into the <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> objects for the specified contracts, using the specified address, <xref href=\"System.ServiceModel.Description.MetadataExchangeClient\"></xref>, <xref href=\"System.ServiceModel.Description.MetadataExchangeClientMode\"></xref>, asynchronous state, and delegate.","nodes":[{"pos":[0,396],"content":"Begins an asynchronous call that resolves a metadata address into the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Description.ServiceEndpoint\"&gt;&lt;/xref&gt;</ph> objects for the specified contracts, using the specified address, <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Description.MetadataExchangeClient\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph3\">&lt;xref href=\"System.ServiceModel.Description.MetadataExchangeClientMode\"&gt;&lt;/xref&gt;</ph>, asynchronous state, and delegate.","source":"Begins an asynchronous call that resolves a metadata address into the <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> objects for the specified contracts, using the specified address, <xref href=\"System.ServiceModel.Description.MetadataExchangeClient\"></xref>, <xref href=\"System.ServiceModel.Description.MetadataExchangeClientMode\"></xref>, asynchronous state, and delegate."}],"pos":[28721,29118],"yaml":true},{"content":"To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly.  \n  \n> [!NOTE]\n>  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.","nodes":[{"pos":[0,226],"content":"To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly.","nodes":[{"content":"To download metadata but not resolve the information into <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph> objects, use the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName&gt;</ph> directly.","pos":[0,226],"source":"To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly."}]},{"pos":[234,411],"content":"[!NOTE]\n An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.","leadings":["","> "],"nodes":[{"content":" An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.","pos":[8,175],"nodes":[{"content":"An empty collection is returned if no endpoints were imported or if no endpoints matched the contract.","pos":[1,103]},{"content":"If an empty collection is returned, a warning trace is written.","pos":[104,167]}]}]}],"pos":[29129,29546],"yaml":true,"extradata":"MT"},{"content":"The contracts for which to download and resolve metadata.","nodes":[{"pos":[0,57],"content":"The contracts for which to download and resolve metadata.","nodes":[{"content":"The contracts for which to download and resolve metadata.","pos":[0,57]}]}],"pos":[30057,30115],"yaml":true},{"content":"The metadata address.","nodes":[{"pos":[0,21],"content":"The metadata address.","nodes":[{"content":"The metadata address.","pos":[0,21]}]}],"pos":[30175,30197],"yaml":true},{"content":"The mode of retrieval.","nodes":[{"pos":[0,22],"content":"The mode of retrieval.","nodes":[{"content":"The mode of retrieval.","pos":[0,22]}]}],"pos":[30302,30325],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Description.MetadataExchangeClient\"></xref> used to retrieve the metadata.","nodes":[{"pos":[0,110],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Description.MetadataExchangeClient\"&gt;&lt;/xref&gt;</ph> used to retrieve the metadata.","source":"The <xref href=\"System.ServiceModel.Description.MetadataExchangeClient\"></xref> used to retrieve the metadata."}],"pos":[30428,30539],"yaml":true},{"content":"The asynchronous callback delegate invoked when the call is complete.","nodes":[{"pos":[0,69],"content":"The asynchronous callback delegate invoked when the call is complete.","nodes":[{"content":"The asynchronous callback delegate invoked when the call is complete.","pos":[0,69]}]}],"pos":[30610,30680],"yaml":true},{"content":"The state associated with the asynchronous call.","nodes":[{"pos":[0,48],"content":"The state associated with the asynchronous call.","nodes":[{"content":"The state associated with the asynchronous call.","pos":[0,48]}]}],"pos":[30746,30795],"yaml":true},{"content":"The <xref href=\"System.IAsyncResult\"></xref> that references the asynchronous resolve operation.","nodes":[{"pos":[0,96],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> that references the asynchronous resolve operation.","source":"The <xref href=\"System.IAsyncResult\"></xref> that references the asynchronous resolve operation."}],"pos":[30858,30955],"yaml":true},{"content":"The address, contract, or callback is `null`.","nodes":[{"pos":[0,45],"content":"The address, contract, or callback is <ph id=\"ph1\">`null`</ph>.","source":"The address, contract, or callback is `null`."}],"pos":[31146,31192],"yaml":true},{"content":"<code>contracts</code> is empty, at least one member of <code>contracts</code> is null, or <code>contracts</code> contains more than one contract with the same name and namespace.","nodes":[{"pos":[0,179],"content":"<ph id=\"ph1\">&lt;code&gt;contracts&lt;/code&gt;</ph> is empty, at least one member of <ph id=\"ph2\">&lt;code&gt;contracts&lt;/code&gt;</ph> is null, or <ph id=\"ph3\">&lt;code&gt;contracts&lt;/code&gt;</ph> contains more than one contract with the same name and namespace.","source":"<code>contracts</code> is empty, at least one member of <code>contracts</code> is null, or <code>contracts</code> contains more than one contract with the same name and namespace."}],"pos":[31286,31466],"yaml":true},{"content":"Completes an asynchronous call to resolve metadata into a collection of endpoints.","nodes":[{"pos":[0,82],"content":"Completes an asynchronous call to resolve metadata into a collection of endpoints.","nodes":[{"content":"Completes an asynchronous call to resolve metadata into a collection of endpoints.","pos":[0,82]}]}],"pos":[32565,32648],"yaml":true},{"content":"Ends an asynchronous call to one of the <xref:System.ServiceModel.Description.MetadataResolver.BeginResolve%2A> methods.","nodes":[{"pos":[0,120],"content":"Ends an asynchronous call to one of the <xref:System.ServiceModel.Description.MetadataResolver.BeginResolve%2A> methods.","nodes":[{"content":"Ends an asynchronous call to one of the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.MetadataResolver.BeginResolve%2A&gt;</ph> methods.","pos":[0,120],"source":"Ends an asynchronous call to one of the <xref:System.ServiceModel.Description.MetadataResolver.BeginResolve%2A> methods."}]}],"pos":[32659,32780],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.IAsyncResult\"></xref> object that was received from a call to the <xref href=\"System.ServiceModel.Description.MetadataResolver.BeginResolve*\"></xref> method.","nodes":[{"pos":[0,180],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> object that was received from a call to the <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Description.MetadataResolver.BeginResolve*\"&gt;&lt;/xref&gt;</ph> method.","source":"The <xref href=\"System.IAsyncResult\"></xref> object that was received from a call to the <xref href=\"System.ServiceModel.Description.MetadataResolver.BeginResolve*\"></xref> method."}],"pos":[32993,33174],"yaml":true},{"content":"A collection of <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> objects for the endpoints contained in the metadata.","nodes":[{"pos":[0,137],"content":"A collection of <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Description.ServiceEndpoint\"&gt;&lt;/xref&gt;</ph> objects for the endpoints contained in the metadata.","source":"A collection of <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> objects for the endpoints contained in the metadata."}],"pos":[33275,33413],"yaml":true},{"content":"Resolves a metadata address into the <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> objects for the specified contracts using the specified metadata address.","nodes":[{"pos":[0,179],"content":"Resolves a metadata address into the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Description.ServiceEndpoint\"&gt;&lt;/xref&gt;</ph> objects for the specified contracts using the specified metadata address.","source":"Resolves a metadata address into the <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> objects for the specified contracts using the specified metadata address."}],"pos":[35019,35199],"yaml":true},{"content":"The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> are used to retrieve the metadata and the default <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> is <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.  \n  \n To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly.  \n  \n> [!NOTE]\n>  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.","nodes":[{"pos":[0,350],"content":"The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> are used to retrieve the metadata and the default <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> is <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.","nodes":[{"content":"The default settings on the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName&gt;</ph> are used to retrieve the metadata and the default <ph id=\"ph2\">&lt;xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName&gt;</ph> is <ph id=\"ph3\">&lt;xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName&gt;</ph>.","pos":[0,350],"source":"The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> are used to retrieve the metadata and the default <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> is <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>."}]},{"pos":[357,583],"content":"To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly.","nodes":[{"content":"To download metadata but not resolve the information into <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph> objects, use the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName&gt;</ph> directly.","pos":[0,226],"source":"To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly."}]},{"pos":[591,768],"content":"[!NOTE]\n An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.","leadings":["","> "],"nodes":[{"content":" An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.","pos":[8,175],"nodes":[{"content":"An empty collection is returned if no endpoints were imported or if no endpoints matched the contract.","pos":[1,103]},{"content":"If an empty collection is returned, a warning trace is written.","pos":[104,167]}]}]}],"pos":[35210,35986],"yaml":true,"extradata":"MT"},{"content":"The contracts for which to download and resolve metadata.","nodes":[{"pos":[0,57],"content":"The contracts for which to download and resolve metadata.","nodes":[{"content":"The contracts for which to download and resolve metadata.","pos":[0,57]}]}],"pos":[36398,36456],"yaml":true},{"content":"The metadata address.","nodes":[{"pos":[0,21],"content":"The metadata address.","nodes":[{"content":"The metadata address.","pos":[0,21]}]}],"pos":[36541,36563],"yaml":true},{"content":"A collection of <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> objects for the specified contract.","nodes":[{"pos":[0,120],"content":"A collection of <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Description.ServiceEndpoint\"&gt;&lt;/xref&gt;</ph> objects for the specified contract.","source":"A collection of <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> objects for the specified contract."}],"pos":[36664,36785],"yaml":true},{"content":"The address or contracts collection is `null`.","nodes":[{"pos":[0,46],"content":"The address or contracts collection is <ph id=\"ph1\">`null`</ph>.","source":"The address or contracts collection is `null`."}],"pos":[36971,37018],"yaml":true},{"content":"<code>contracts</code> is empty, at least one member of <code>contracts</code> is null, or <code>contracts</code> contains more than one contract with the same name and namespace.","nodes":[{"pos":[0,179],"content":"<ph id=\"ph1\">&lt;code&gt;contracts&lt;/code&gt;</ph> is empty, at least one member of <ph id=\"ph2\">&lt;code&gt;contracts&lt;/code&gt;</ph> is null, or <ph id=\"ph3\">&lt;code&gt;contracts&lt;/code&gt;</ph> contains more than one contract with the same name and namespace.","source":"<code>contracts</code> is empty, at least one member of <code>contracts</code> is null, or <code>contracts</code> contains more than one contract with the same name and namespace."}],"pos":[37112,37292],"yaml":true},{"content":"Downloads and resolves a metadata address into a collection of <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> objects for a specified contract at a specified address.","nodes":[{"pos":[0,188],"content":"Downloads and resolves a metadata address into a collection of <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Description.ServiceEndpoint\"&gt;&lt;/xref&gt;</ph> objects for a specified contract at a specified address.","source":"Downloads and resolves a metadata address into a collection of <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> objects for a specified contract at a specified address."}],"pos":[38484,38673],"yaml":true},{"content":"Use the <xref:System.ServiceModel.Description.MetadataResolver.Resolve%2A> method to specify the contract and the metadata address to use when downloading and resolving metadata.  \n  \n The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> are used to retrieve the metadata and the default <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> is <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.  \n  \n To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly.  \n  \n> [!NOTE]\n>  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.  \n  \n This method requires that you specify a contract type. You can specify the contract by declaring the service interface in the client code or by using a [!INCLUDE[indigo2](~/includes/indigo2-md.md)] client generated by Svcutil.exe. If the interface changes (adding a new operation, for example) you must update the interface in the client code or generate a new [!INCLUDE[indigo2](~/includes/indigo2-md.md)] client. If you do not, an exception is thrown. For example, you have a service that implements a service contract called ICalculator that defines Add(), Sub(), Mult(), and Div(). You create a client application and generate [!INCLUDE[indigo2](~/includes/indigo2-md.md)] client. You then add a method to ICalculator called Echo(). If you then write an application that calls <xref:System.ServiceModel.Description.MetadataResolver.Resolve%28System.Type%2CSystem.ServiceModel.EndpointAddress%29> without generating a new [!INCLUDE[indigo2](~/includes/indigo2-md.md)] client you get the following exception.  \n  \n `Unhandled Exception: System.ServiceModel.Description.WsdlImporter+WsdlImportException: Cannot locate operation Echo in Contract ICalculator`.","nodes":[{"pos":[0,178],"content":"Use the <xref:System.ServiceModel.Description.MetadataResolver.Resolve%2A> method to specify the contract and the metadata address to use when downloading and resolving metadata.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.MetadataResolver.Resolve%2A&gt;</ph> method to specify the contract and the metadata address to use when downloading and resolving metadata.","pos":[0,178],"source":"Use the <xref:System.ServiceModel.Description.MetadataResolver.Resolve%2A> method to specify the contract and the metadata address to use when downloading and resolving metadata."}]},{"pos":[185,535],"content":"The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> are used to retrieve the metadata and the default <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> is <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.","nodes":[{"content":"The default settings on the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName&gt;</ph> are used to retrieve the metadata and the default <ph id=\"ph2\">&lt;xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName&gt;</ph> is <ph id=\"ph3\">&lt;xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName&gt;</ph>.","pos":[0,350],"source":"The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> are used to retrieve the metadata and the default <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> is <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>."}]},{"pos":[542,768],"content":"To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly.","nodes":[{"content":"To download metadata but not resolve the information into <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph> objects, use the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName&gt;</ph> directly.","pos":[0,226],"source":"To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly."}]},{"pos":[776,953],"content":"[!NOTE]\n An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.","leadings":["","> "],"nodes":[{"content":" An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.","pos":[8,175],"nodes":[{"content":"An empty collection is returned if no endpoints were imported or if no endpoints matched the contract.","pos":[1,103]},{"content":"If an empty collection is returned, a warning trace is written.","pos":[104,167]}]}]},{"pos":[960,1970],"content":"This method requires that you specify a contract type. You can specify the contract by declaring the service interface in the client code or by using a [!INCLUDE[indigo2](~/includes/indigo2-md.md)] client generated by Svcutil.exe. If the interface changes (adding a new operation, for example) you must update the interface in the client code or generate a new [!INCLUDE[indigo2](~/includes/indigo2-md.md)] client. If you do not, an exception is thrown. For example, you have a service that implements a service contract called ICalculator that defines Add(), Sub(), Mult(), and Div(). You create a client application and generate [!INCLUDE[indigo2](~/includes/indigo2-md.md)] client. You then add a method to ICalculator called Echo(). If you then write an application that calls <xref:System.ServiceModel.Description.MetadataResolver.Resolve%28System.Type%2CSystem.ServiceModel.EndpointAddress%29> without generating a new [!INCLUDE[indigo2](~/includes/indigo2-md.md)] client you get the following exception.","nodes":[{"content":"This method requires that you specify a contract type.","pos":[0,54]},{"content":"You can specify the contract by declaring the service interface in the client code or by using a <ph id=\"ph1\">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> client generated by Svcutil.exe.","pos":[55,230],"source":" You can specify the contract by declaring the service interface in the client code or by using a [!INCLUDE[indigo2](~/includes/indigo2-md.md)] client generated by Svcutil.exe."},{"content":"If the interface changes (adding a new operation, for example) you must update the interface in the client code or generate a new <ph id=\"ph1\">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> client.","pos":[231,414],"source":" If the interface changes (adding a new operation, for example) you must update the interface in the client code or generate a new [!INCLUDE[indigo2](~/includes/indigo2-md.md)] client."},{"content":"If you do not, an exception is thrown.","pos":[415,453]},{"content":"For example, you have a service that implements a service contract called ICalculator that defines Add(), Sub(), Mult(), and Div().","pos":[454,585]},{"content":"You create a client application and generate <ph id=\"ph1\">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> client.","pos":[586,684],"source":" You create a client application and generate [!INCLUDE[indigo2](~/includes/indigo2-md.md)] client."},{"content":"You then add a method to ICalculator called Echo().","pos":[685,736]},{"content":"If you then write an application that calls <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.MetadataResolver.Resolve%28System.Type%2CSystem.ServiceModel.EndpointAddress%29&gt;</ph> without generating a new <ph id=\"ph2\">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> client you get the following exception.","pos":[737,1010],"source":" If you then write an application that calls <xref:System.ServiceModel.Description.MetadataResolver.Resolve%28System.Type%2CSystem.ServiceModel.EndpointAddress%29> without generating a new [!INCLUDE[indigo2](~/includes/indigo2-md.md)] client you get the following exception."}]},{"pos":[1977,2119],"content":"<ph id=\"ph1\">`Unhandled Exception: System.ServiceModel.Description.WsdlImporter+WsdlImportException: Cannot locate operation Echo in Contract ICalculator`</ph>.","source":"`Unhandled Exception: System.ServiceModel.Description.WsdlImporter+WsdlImportException: Cannot locate operation Echo in Contract ICalculator`."}],"pos":[38684,40817],"yaml":true,"extradata":"MT"},{"content":"The contracts for which to download and resolve metadata.","nodes":[{"pos":[0,57],"content":"The contracts for which to download and resolve metadata.","nodes":[{"content":"The contracts for which to download and resolve metadata.","pos":[0,57]}]}],"pos":[41459,41517],"yaml":true},{"content":"The metadata address.","nodes":[{"pos":[0,21],"content":"The metadata address.","nodes":[{"content":"The metadata address.","pos":[0,21]}]}],"pos":[41602,41624],"yaml":true},{"content":"A collection of <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> objects for the specified contract.","nodes":[{"pos":[0,120],"content":"A collection of <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Description.ServiceEndpoint\"&gt;&lt;/xref&gt;</ph> objects for the specified contract.","source":"A collection of <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> objects for the specified contract."}],"pos":[41725,41846],"yaml":true},{"content":"The address or the contract is `null`.","nodes":[{"pos":[0,38],"content":"The address or the contract is <ph id=\"ph1\">`null`</ph>.","source":"The address or the contract is `null`."}],"pos":[42032,42071],"yaml":true},{"content":"Resolves a metadata address into the <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> objects for the specified contracts using the specified metadata address and <xref href=\"System.ServiceModel.Description.MetadataExchangeClient\"></xref>.","nodes":[{"pos":[0,259],"content":"Resolves a metadata address into the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Description.ServiceEndpoint\"&gt;&lt;/xref&gt;</ph> objects for the specified contracts using the specified metadata address and <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Description.MetadataExchangeClient\"&gt;&lt;/xref&gt;</ph>.","source":"Resolves a metadata address into the <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> objects for the specified contracts using the specified metadata address and <xref href=\"System.ServiceModel.Description.MetadataExchangeClient\"></xref>."}],"pos":[43824,44084],"yaml":true},{"content":"The default <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> is <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.  \n  \n To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly.  \n  \n> [!NOTE]\n>  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.","nodes":[{"pos":[0,197],"content":"The default <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> is <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.","nodes":[{"content":"The default <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName&gt;</ph> is <ph id=\"ph2\">&lt;xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName&gt;</ph>.","pos":[0,197],"source":"The default <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> is <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>."}]},{"pos":[204,430],"content":"To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly.","nodes":[{"content":"To download metadata but not resolve the information into <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph> objects, use the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName&gt;</ph> directly.","pos":[0,226],"source":"To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly."}]},{"pos":[438,615],"content":"[!NOTE]\n An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.","leadings":["","> "],"nodes":[{"content":" An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.","pos":[8,175],"nodes":[{"content":"An empty collection is returned if no endpoints were imported or if no endpoints matched the contract.","pos":[1,103]},{"content":"If an empty collection is returned, a warning trace is written.","pos":[104,167]}]}]}],"pos":[44095,44718],"yaml":true,"extradata":"MT"},{"content":"The contracts for which to download and resolve metadata.","nodes":[{"pos":[0,57],"content":"The contracts for which to download and resolve metadata.","nodes":[{"content":"The contracts for which to download and resolve metadata.","pos":[0,57]}]}],"pos":[45193,45251],"yaml":true},{"content":"The metadata address.","nodes":[{"pos":[0,21],"content":"The metadata address.","nodes":[{"content":"The metadata address.","pos":[0,21]}]}],"pos":[45336,45358],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Description.MetadataExchangeClient\"></xref> used to retrieve the metadata.","nodes":[{"pos":[0,110],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Description.MetadataExchangeClient\"&gt;&lt;/xref&gt;</ph> used to retrieve the metadata.","source":"The <xref href=\"System.ServiceModel.Description.MetadataExchangeClient\"></xref> used to retrieve the metadata."}],"pos":[45461,45572],"yaml":true},{"content":"A collection of <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> objects for the specified contract.","nodes":[{"pos":[0,120],"content":"A collection of <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Description.ServiceEndpoint\"&gt;&lt;/xref&gt;</ph> objects for the specified contract.","source":"A collection of <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> objects for the specified contract."}],"pos":[45673,45794],"yaml":true},{"content":"The address, contracts collection, or client is `null`.","nodes":[{"pos":[0,55],"content":"The address, contracts collection, or client is <ph id=\"ph1\">`null`</ph>.","source":"The address, contracts collection, or client is `null`."}],"pos":[45980,46036],"yaml":true},{"content":"<code>contracts</code> is empty, at least one member of <code>contracts</code> is null, or <code>contracts</code> contains more than one contract with the same name and namespace.","nodes":[{"pos":[0,179],"content":"<ph id=\"ph1\">&lt;code&gt;contracts&lt;/code&gt;</ph> is empty, at least one member of <ph id=\"ph2\">&lt;code&gt;contracts&lt;/code&gt;</ph> is null, or <ph id=\"ph3\">&lt;code&gt;contracts&lt;/code&gt;</ph> contains more than one contract with the same name and namespace.","source":"<code>contracts</code> is empty, at least one member of <code>contracts</code> is null, or <code>contracts</code> contains more than one contract with the same name and namespace."}],"pos":[46130,46310],"yaml":true},{"content":"Resolves a metadata address into the <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> objects for the specified contracts using the specified address and transfer mode.","nodes":[{"pos":[0,188],"content":"Resolves a metadata address into the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Description.ServiceEndpoint\"&gt;&lt;/xref&gt;</ph> objects for the specified contracts using the specified address and transfer mode.","source":"Resolves a metadata address into the <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> objects for the specified contracts using the specified address and transfer mode."}],"pos":[47976,48165],"yaml":true},{"content":"The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> are used to retrieve the metadata.  \n  \n To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly.  \n  \n> [!NOTE]\n>  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.","nodes":[{"pos":[0,149],"content":"The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> are used to retrieve the metadata.","nodes":[{"content":"The default settings on the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName&gt;</ph> are used to retrieve the metadata.","pos":[0,149],"source":"The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> are used to retrieve the metadata."}]},{"pos":[156,382],"content":"To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly.","nodes":[{"content":"To download metadata but not resolve the information into <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph> objects, use the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName&gt;</ph> directly.","pos":[0,226],"source":"To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly."}]},{"pos":[390,567],"content":"[!NOTE]\n An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.","leadings":["","> "],"nodes":[{"content":" An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.","pos":[8,175],"nodes":[{"content":"An empty collection is returned if no endpoints were imported or if no endpoints matched the contract.","pos":[1,103]},{"content":"If an empty collection is returned, a warning trace is written.","pos":[104,167]}]}]}],"pos":[48176,48751],"yaml":true,"extradata":"MT"},{"content":"The contracts for which to download and resolve metadata.","nodes":[{"pos":[0,57],"content":"The contracts for which to download and resolve metadata.","nodes":[{"content":"The contracts for which to download and resolve metadata.","pos":[0,57]}]}],"pos":[49196,49254],"yaml":true},{"content":"The metadata address.","nodes":[{"pos":[0,21],"content":"The metadata address.","nodes":[{"content":"The metadata address.","pos":[0,21]}]}],"pos":[49314,49336],"yaml":true},{"content":"The mode of retrieval.","nodes":[{"pos":[0,22],"content":"The mode of retrieval.","nodes":[{"content":"The mode of retrieval.","pos":[0,22]}]}],"pos":[49441,49464],"yaml":true},{"content":"A collection of <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> objects for the specified contract.","nodes":[{"pos":[0,120],"content":"A collection of <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Description.ServiceEndpoint\"&gt;&lt;/xref&gt;</ph> objects for the specified contract.","source":"A collection of <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> objects for the specified contract."}],"pos":[49565,49686],"yaml":true},{"content":"The address or contracts collection is `null`.","nodes":[{"pos":[0,46],"content":"The address or contracts collection is <ph id=\"ph1\">`null`</ph>.","source":"The address or contracts collection is `null`."}],"pos":[49872,49919],"yaml":true},{"content":"<code>contracts</code> is empty, at least one member of <code>contracts</code> is null, or <code>contracts</code> contains more than one contract with the same name and namespace.","nodes":[{"pos":[0,179],"content":"<ph id=\"ph1\">&lt;code&gt;contracts&lt;/code&gt;</ph> is empty, at least one member of <ph id=\"ph2\">&lt;code&gt;contracts&lt;/code&gt;</ph> is null, or <ph id=\"ph3\">&lt;code&gt;contracts&lt;/code&gt;</ph> contains more than one contract with the same name and namespace.","source":"<code>contracts</code> is empty, at least one member of <code>contracts</code> is null, or <code>contracts</code> contains more than one contract with the same name and namespace."}],"pos":[50013,50193],"yaml":true},{"content":"Resolves a metadata address into the <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> objects for the specified contract using the specified address and transfer mode.","nodes":[{"pos":[0,187],"content":"Resolves a metadata address into the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Description.ServiceEndpoint\"&gt;&lt;/xref&gt;</ph> objects for the specified contract using the specified address and transfer mode.","source":"Resolves a metadata address into the <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> objects for the specified contract using the specified address and transfer mode."}],"pos":[51535,51723],"yaml":true},{"content":"Use the <xref:System.ServiceModel.Description.MetadataResolver.Resolve%2A> method to specify a contract, and address, and the download mechanism to use.  \n  \n The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> are used to retrieve the metadata.  \n  \n To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly.  \n  \n> [!NOTE]\n>  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.","nodes":[{"pos":[0,152],"content":"Use the <xref:System.ServiceModel.Description.MetadataResolver.Resolve%2A> method to specify a contract, and address, and the download mechanism to use.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.MetadataResolver.Resolve%2A&gt;</ph> method to specify a contract, and address, and the download mechanism to use.","pos":[0,152],"source":"Use the <xref:System.ServiceModel.Description.MetadataResolver.Resolve%2A> method to specify a contract, and address, and the download mechanism to use."}]},{"pos":[159,308],"content":"The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> are used to retrieve the metadata.","nodes":[{"content":"The default settings on the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName&gt;</ph> are used to retrieve the metadata.","pos":[0,149],"source":"The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> are used to retrieve the metadata."}]},{"pos":[315,541],"content":"To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly.","nodes":[{"content":"To download metadata but not resolve the information into <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph> objects, use the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName&gt;</ph> directly.","pos":[0,226],"source":"To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly."}]},{"pos":[549,726],"content":"[!NOTE]\n An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.","leadings":["","> "],"nodes":[{"content":" An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.","pos":[8,175],"nodes":[{"content":"An empty collection is returned if no endpoints were imported or if no endpoints matched the contract.","pos":[1,103]},{"content":"If an empty collection is returned, a warning trace is written.","pos":[104,167]}]}]}],"pos":[51734,52470],"yaml":true,"extradata":"MT"},{"content":"The contract for which to download and resolve metadata.","nodes":[{"pos":[0,56],"content":"The contract for which to download and resolve metadata.","nodes":[{"content":"The contract for which to download and resolve metadata.","pos":[0,56]}]}],"pos":[53150,53207],"yaml":true},{"content":"The metadata address.","nodes":[{"pos":[0,21],"content":"The metadata address.","nodes":[{"content":"The metadata address.","pos":[0,21]}]}],"pos":[53267,53289],"yaml":true},{"content":"The mode of retrieval.","nodes":[{"pos":[0,22],"content":"The mode of retrieval.","nodes":[{"content":"The mode of retrieval.","pos":[0,22]}]}],"pos":[53394,53417],"yaml":true},{"content":"A collection of <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> objects for the specified contract.","nodes":[{"pos":[0,120],"content":"A collection of <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Description.ServiceEndpoint\"&gt;&lt;/xref&gt;</ph> objects for the specified contract.","source":"A collection of <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> objects for the specified contract."}],"pos":[53518,53639],"yaml":true},{"content":"The address or contract is `null`.","nodes":[{"pos":[0,34],"content":"The address or contract is <ph id=\"ph1\">`null`</ph>.","source":"The address or contract is `null`."}],"pos":[53825,53860],"yaml":true},{"content":"Resolves a metadata address into the <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> objects for the specified contracts using the specified address, transfer mode, and transfer client.","nodes":[{"pos":[0,206],"content":"Resolves a metadata address into the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Description.ServiceEndpoint\"&gt;&lt;/xref&gt;</ph> objects for the specified contracts using the specified address, transfer mode, and transfer client.","source":"Resolves a metadata address into the <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> objects for the specified contracts using the specified address, transfer mode, and transfer client."}],"pos":[55763,55970],"yaml":true},{"content":"To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly.  \n  \n> [!NOTE]\n>  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.","nodes":[{"pos":[0,226],"content":"To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly.","nodes":[{"content":"To download metadata but not resolve the information into <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph> objects, use the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName&gt;</ph> directly.","pos":[0,226],"source":"To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly."}]},{"pos":[234,411],"content":"[!NOTE]\n An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.","leadings":["","> "],"nodes":[{"content":" An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.","pos":[8,175],"nodes":[{"content":"An empty collection is returned if no endpoints were imported or if no endpoints matched the contract.","pos":[1,103]},{"content":"If an empty collection is returned, a warning trace is written.","pos":[104,167]}]}]}],"pos":[55981,56398],"yaml":true,"extradata":"MT"},{"content":"The contracts for which to download and resolve metadata.","nodes":[{"pos":[0,57],"content":"The contracts for which to download and resolve metadata.","nodes":[{"content":"The contracts for which to download and resolve metadata.","pos":[0,57]}]}],"pos":[56906,56964],"yaml":true},{"content":"The metadata address.","nodes":[{"pos":[0,21],"content":"The metadata address.","nodes":[{"content":"The metadata address.","pos":[0,21]}]}],"pos":[57024,57046],"yaml":true},{"content":"The mode of retrieval.","nodes":[{"pos":[0,22],"content":"The mode of retrieval.","nodes":[{"content":"The mode of retrieval.","pos":[0,22]}]}],"pos":[57151,57174],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Description.MetadataExchangeClient\"></xref> used to retrieve the metadata.","nodes":[{"pos":[0,110],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Description.MetadataExchangeClient\"&gt;&lt;/xref&gt;</ph> used to retrieve the metadata.","source":"The <xref href=\"System.ServiceModel.Description.MetadataExchangeClient\"></xref> used to retrieve the metadata."}],"pos":[57277,57388],"yaml":true},{"content":"A collection of <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> objects for the specified contract.","nodes":[{"pos":[0,120],"content":"A collection of <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Description.ServiceEndpoint\"&gt;&lt;/xref&gt;</ph> objects for the specified contract.","source":"A collection of <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> objects for the specified contract."}],"pos":[57489,57610],"yaml":true},{"content":"The address, contracts collection, or client is `null`.","nodes":[{"pos":[0,55],"content":"The address, contracts collection, or client is <ph id=\"ph1\">`null`</ph>.","source":"The address, contracts collection, or client is `null`."}],"pos":[57796,57852],"yaml":true},{"content":"<code>contracts</code> is empty, at least one member of <code>contracts</code> is null, or <code>contracts</code> contains more than one contract with the same name and namespace.","nodes":[{"pos":[0,179],"content":"<ph id=\"ph1\">&lt;code&gt;contracts&lt;/code&gt;</ph> is empty, at least one member of <ph id=\"ph2\">&lt;code&gt;contracts&lt;/code&gt;</ph> is null, or <ph id=\"ph3\">&lt;code&gt;contracts&lt;/code&gt;</ph> contains more than one contract with the same name and namespace.","source":"<code>contracts</code> is empty, at least one member of <code>contracts</code> is null, or <code>contracts</code> contains more than one contract with the same name and namespace."}],"pos":[57946,58126],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Description.MetadataResolver\n  commentId: T:System.ServiceModel.Description.MetadataResolver\n  id: MetadataResolver\n  children:\n  - System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Description.MetadataResolver.EndResolve(System.IAsyncResult)\n  - System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress)\n  - System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.ServiceModel.EndpointAddress)\n  - System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient)\n  - System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)\n  - System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)\n  - System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient)\n  langs:\n  - csharp\n  name: MetadataResolver\n  nameWithType: MetadataResolver\n  fullName: System.ServiceModel.Description.MetadataResolver\n  type: Class\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Description\n  summary: Retrieves and imports metadata as <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> objects.\n  remarks: Use the <xref:System.ServiceModel.Description.MetadataResolver> class to quickly import endpoints for a service from metadata. This class downloads and converts metadata into <xref:System.ServiceModel.Description.ServiceEndpoint> objects. To download metadata and process that information as a <xref:System.ServiceModel.Description.MetadataSet?displayProperty=fullName>, see <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>.\n  example:\n  - \"The following code example shows the use of the <xref:System.ServiceModel.Description.MetadataResolver> class to return metadata as a collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects that are then used to connect to a service instance.  \\n  \\n [!code-csharp[MetadataResolver#1](~/samples/snippets/csharp/VS_Snippets_CFX/metadataresolver/cs/client.cs#1)]  \\n  \\n The following code example shows the use of the <xref:System.ServiceModel.Description.MetadataResolver> to download and return metadata as a collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects using an HTTP GET request rather than WS-Transfer.  \\n  \\n [!code-csharp[MetadataResolver#2](~/samples/snippets/csharp/VS_Snippets_CFX/metadataresolver/cs/client.cs#2)]\"\n  syntax:\n    content: public static class MetadataResolver\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Description/MetadataResolver.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)\n  commentId: M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)\n  id: BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Description.MetadataResolver\n  langs:\n  - csharp\n  name: BeginResolve(IEnumerable<ContractDescription>, EndpointAddress, AsyncCallback, Object)\n  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>, EndpointAddress, AsyncCallback, Object)\n  fullName: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>, EndpointAddress, AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Description\n  summary: Begins an asynchronous call that resolves a metadata address into the <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> objects for the specified contracts, using the specified address and asynchronous state and delegate.\n  remarks: \"The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> are used to retrieve the metadata and the default <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> is <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.  \\n  \\n To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly.  \\n  \\n> [!NOTE]\\n>  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.\"\n  syntax:\n    content: public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, System.ServiceModel.EndpointAddress address, AsyncCallback callback, object asyncState);\n    parameters:\n    - id: contracts\n      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}\n      description: The contracts for which to download and resolve metadata.\n    - id: address\n      type: System.ServiceModel.EndpointAddress\n      description: The metadata address.\n    - id: callback\n      type: System.AsyncCallback\n      description: The asynchronous callback delegate invoked when the call is complete.\n    - id: asyncState\n      type: System.Object\n      description: The state associated with the asynchronous call.\n    return:\n      type: System.IAsyncResult\n      description: The <xref href=\"System.IAsyncResult\"></xref> that references the asynchronous resolve operation.\n  overload: System.ServiceModel.Description.MetadataResolver.BeginResolve*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The address, contract, or callback is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>contracts</code> is empty, at least one member of <code>contracts</code> is `null`, or <code>contracts</code> contains more than one contract with the same name and namespace.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Description/MetadataResolver.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)\n  commentId: M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)\n  id: BeginResolve(System.Type,System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Description.MetadataResolver\n  langs:\n  - csharp\n  name: BeginResolve(Type, EndpointAddress, AsyncCallback, Object)\n  nameWithType: MetadataResolver.BeginResolve(Type, EndpointAddress, AsyncCallback, Object)\n  fullName: MetadataResolver.BeginResolve(Type, EndpointAddress, AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Description\n  summary: Begins an asynchronous call that resolves a metadata address into the <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> objects for the specified contract using the specified address and asynchronous state and delegate.\n  remarks: \"The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> are used to retrieve the metadata and the default <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> is <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.  \\n  \\n To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly.  \\n  \\n> [!NOTE]\\n>  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.  \\n  \\n This method requires that you specify a contract type. You can specify the contract by declaring the service interface in the client code or by using a [!INCLUDE[indigo2](~/includes/indigo2-md.md)] client generated by Svcutil.exe. If the interface changes (adding a new operation, for example) you must update the interface in the client code or generate a new [!INCLUDE[indigo2](~/includes/indigo2-md.md)] client. If you do not, an exception is thrown. For example, you have a service that implements a service contract called ICalculator that defines Add(), Sub(), Mult(), and Div(). You create a client application and generate [!INCLUDE[indigo2](~/includes/indigo2-md.md)] client. You then add a method to ICalculator called Echo(). If you then write an application that calls <xref:System.ServiceModel.Description.MetadataResolver.Resolve%28System.Type%2CSystem.ServiceModel.EndpointAddress%29> without generating a new [!INCLUDE[indigo2](~/includes/indigo2-md.md)] client you get the following exception.  \\n  \\n `Unhandled Exception: System.ServiceModel.Description.WsdlImporter+WsdlImportException: Cannot locate operation Echo in Contract ICalculator`.\"\n  syntax:\n    content: public static IAsyncResult BeginResolve (Type contract, System.ServiceModel.EndpointAddress address, AsyncCallback callback, object asyncState);\n    parameters:\n    - id: contract\n      type: System.Type\n      description: The contract for which to download and resolve metadata.\n    - id: address\n      type: System.ServiceModel.EndpointAddress\n      description: The metadata address.\n    - id: callback\n      type: System.AsyncCallback\n      description: The asynchronous callback delegate invoked when the call is complete.\n    - id: asyncState\n      type: System.Object\n      description: The state associated with the asynchronous call.\n    return:\n      type: System.IAsyncResult\n      description: The <xref href=\"System.IAsyncResult\"></xref> that references the asynchronous resolve operation.\n  overload: System.ServiceModel.Description.MetadataResolver.BeginResolve*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The address, contract, or callback is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Description/MetadataResolver.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)\n  commentId: M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)\n  id: BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Description.MetadataResolver\n  langs:\n  - csharp\n  name: BeginResolve(IEnumerable<ContractDescription>, EndpointAddress, MetadataExchangeClient, AsyncCallback, Object)\n  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>, EndpointAddress, MetadataExchangeClient, AsyncCallback, Object)\n  fullName: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>, EndpointAddress, MetadataExchangeClient, AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Description\n  summary: Begins an asynchronous call that resolves a metadata address into the <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> objects for the specified contracts, using the specified address, <xref href=\"System.ServiceModel.Description.MetadataExchangeClient\"></xref>, asynchronous state and delegate.\n  remarks: \"The default <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> is <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.  \\n  \\n To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly.  \\n  \\n> [!NOTE]\\n>  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.\"\n  syntax:\n    content: public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, System.ServiceModel.EndpointAddress address, System.ServiceModel.Description.MetadataExchangeClient client, AsyncCallback callback, object asyncState);\n    parameters:\n    - id: contracts\n      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}\n      description: The contracts for which to download and resolve metadata.\n    - id: address\n      type: System.ServiceModel.EndpointAddress\n      description: The metadata address.\n    - id: client\n      type: System.ServiceModel.Description.MetadataExchangeClient\n      description: The <xref href=\"System.ServiceModel.Description.MetadataExchangeClient\"></xref> used to retrieve the metadata.\n    - id: callback\n      type: System.AsyncCallback\n      description: The asynchronous callback delegate invoked when the call is complete.\n    - id: asyncState\n      type: System.Object\n      description: The state associated with the asynchronous call.\n    return:\n      type: System.IAsyncResult\n      description: The <xref href=\"System.IAsyncResult\"></xref> that references the asynchronous resolve operation.\n  overload: System.ServiceModel.Description.MetadataResolver.BeginResolve*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The address, contract, client, or callback is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>contracts</code> is empty, at least one member of <code>contracts</code> is null, or <code>contracts</code> contains more than one contract with the same name and namespace.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Description/MetadataResolver.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)\n  commentId: M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)\n  id: BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Description.MetadataResolver\n  langs:\n  - csharp\n  name: BeginResolve(IEnumerable<ContractDescription>, Uri, MetadataExchangeClientMode, AsyncCallback, Object)\n  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>, Uri, MetadataExchangeClientMode, AsyncCallback, Object)\n  fullName: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>, Uri, MetadataExchangeClientMode, AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Description\n  summary: Begins an asynchronous call that resolves a metadata address into the <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> objects for the specified contracts, using the specified address, <xref href=\"System.ServiceModel.Description.MetadataExchangeClientMode\"></xref> value, asynchronous state and delegate.\n  remarks: \"The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> are used to retrieve the metadata.  \\n  \\n To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly.  \\n  \\n> [!NOTE]\\n>  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.\"\n  syntax:\n    content: public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, AsyncCallback callback, object asyncState);\n    parameters:\n    - id: contracts\n      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}\n      description: The contracts for which to download and resolve metadata.\n    - id: address\n      type: System.Uri\n      description: The metadata address.\n    - id: mode\n      type: System.ServiceModel.Description.MetadataExchangeClientMode\n      description: The mode of retrieval.\n    - id: callback\n      type: System.AsyncCallback\n      description: The asynchronous callback delegate invoked when the call is complete.\n    - id: asyncState\n      type: System.Object\n      description: The state associated with the asynchronous call.\n    return:\n      type: System.IAsyncResult\n      description: The <xref href=\"System.IAsyncResult\"></xref> that references the asynchronous resolve operation.\n  overload: System.ServiceModel.Description.MetadataResolver.BeginResolve*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The address, contract, or callback is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>contracts</code> is empty, at least one member of <code>contracts</code> is null, or <code>contracts</code> contains more than one contract with the same name and namespace.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Description/MetadataResolver.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)\n  commentId: M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)\n  id: BeginResolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Description.MetadataResolver\n  langs:\n  - csharp\n  name: BeginResolve(Type, Uri, MetadataExchangeClientMode, AsyncCallback, Object)\n  nameWithType: MetadataResolver.BeginResolve(Type, Uri, MetadataExchangeClientMode, AsyncCallback, Object)\n  fullName: MetadataResolver.BeginResolve(Type, Uri, MetadataExchangeClientMode, AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Description\n  summary: Begins an asynchronous call that resolves a metadata address into the <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> objects for the specified contract, using the specified address, <xref href=\"System.ServiceModel.Description.MetadataExchangeClientMode\"></xref>, asynchronous state and delegate.\n  remarks: \"The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> are used to retrieve the metadata.  \\n  \\n To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly.  \\n  \\n> [!NOTE]\\n>  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.\"\n  syntax:\n    content: public static IAsyncResult BeginResolve (Type contract, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, AsyncCallback callback, object asyncState);\n    parameters:\n    - id: contract\n      type: System.Type\n      description: The contract for which to download and resolve metadata.\n    - id: address\n      type: System.Uri\n      description: The metadata address.\n    - id: mode\n      type: System.ServiceModel.Description.MetadataExchangeClientMode\n      description: The mode of retrieval.\n    - id: callback\n      type: System.AsyncCallback\n      description: The asynchronous callback delegate invoked when the call is complete.\n    - id: asyncState\n      type: System.Object\n      description: The state associated with the asynchronous call.\n    return:\n      type: System.IAsyncResult\n      description: The <xref href=\"System.IAsyncResult\"></xref> that references the asynchronous resolve operation.\n  overload: System.ServiceModel.Description.MetadataResolver.BeginResolve*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The address, contract, or callback is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Description/MetadataResolver.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)\n  commentId: M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)\n  id: BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Description.MetadataResolver\n  langs:\n  - csharp\n  name: BeginResolve(IEnumerable<ContractDescription>, Uri, MetadataExchangeClientMode, MetadataExchangeClient, AsyncCallback, Object)\n  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>, Uri, MetadataExchangeClientMode, MetadataExchangeClient, AsyncCallback, Object)\n  fullName: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>, Uri, MetadataExchangeClientMode, MetadataExchangeClient, AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Description\n  summary: Begins an asynchronous call that resolves a metadata address into the <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> objects for the specified contracts, using the specified address, <xref href=\"System.ServiceModel.Description.MetadataExchangeClient\"></xref>, <xref href=\"System.ServiceModel.Description.MetadataExchangeClientMode\"></xref>, asynchronous state, and delegate.\n  remarks: \"To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly.  \\n  \\n> [!NOTE]\\n>  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.\"\n  syntax:\n    content: public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, System.ServiceModel.Description.MetadataExchangeClient client, AsyncCallback callback, object asyncState);\n    parameters:\n    - id: contracts\n      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}\n      description: The contracts for which to download and resolve metadata.\n    - id: address\n      type: System.Uri\n      description: The metadata address.\n    - id: mode\n      type: System.ServiceModel.Description.MetadataExchangeClientMode\n      description: The mode of retrieval.\n    - id: client\n      type: System.ServiceModel.Description.MetadataExchangeClient\n      description: The <xref href=\"System.ServiceModel.Description.MetadataExchangeClient\"></xref> used to retrieve the metadata.\n    - id: callback\n      type: System.AsyncCallback\n      description: The asynchronous callback delegate invoked when the call is complete.\n    - id: asyncState\n      type: System.Object\n      description: The state associated with the asynchronous call.\n    return:\n      type: System.IAsyncResult\n      description: The <xref href=\"System.IAsyncResult\"></xref> that references the asynchronous resolve operation.\n  overload: System.ServiceModel.Description.MetadataResolver.BeginResolve*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The address, contract, or callback is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>contracts</code> is empty, at least one member of <code>contracts</code> is null, or <code>contracts</code> contains more than one contract with the same name and namespace.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Description/MetadataResolver.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Description.MetadataResolver.EndResolve(System.IAsyncResult)\n  commentId: M:System.ServiceModel.Description.MetadataResolver.EndResolve(System.IAsyncResult)\n  id: EndResolve(System.IAsyncResult)\n  parent: System.ServiceModel.Description.MetadataResolver\n  langs:\n  - csharp\n  name: EndResolve(IAsyncResult)\n  nameWithType: MetadataResolver.EndResolve(IAsyncResult)\n  fullName: MetadataResolver.EndResolve(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Description\n  summary: Completes an asynchronous call to resolve metadata into a collection of endpoints.\n  remarks: Ends an asynchronous call to one of the <xref:System.ServiceModel.Description.MetadataResolver.BeginResolve%2A> methods.\n  syntax:\n    content: public static System.ServiceModel.Description.ServiceEndpointCollection EndResolve (IAsyncResult result);\n    parameters:\n    - id: result\n      type: System.IAsyncResult\n      description: The <xref href=\"System.IAsyncResult\"></xref> object that was received from a call to the <xref href=\"System.ServiceModel.Description.MetadataResolver.BeginResolve*\"></xref> method.\n    return:\n      type: System.ServiceModel.Description.ServiceEndpointCollection\n      description: A collection of <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> objects for the endpoints contained in the metadata.\n  overload: System.ServiceModel.Description.MetadataResolver.EndResolve*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Description/MetadataResolver.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress)\n  commentId: M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress)\n  id: Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress)\n  parent: System.ServiceModel.Description.MetadataResolver\n  langs:\n  - csharp\n  name: Resolve(IEnumerable<ContractDescription>, EndpointAddress)\n  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>, EndpointAddress)\n  fullName: MetadataResolver.Resolve(IEnumerable<ContractDescription>, EndpointAddress)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Description\n  summary: Resolves a metadata address into the <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> objects for the specified contracts using the specified metadata address.\n  remarks: \"The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> are used to retrieve the metadata and the default <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> is <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.  \\n  \\n To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly.  \\n  \\n> [!NOTE]\\n>  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.\"\n  syntax:\n    content: public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, System.ServiceModel.EndpointAddress address);\n    parameters:\n    - id: contracts\n      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}\n      description: The contracts for which to download and resolve metadata.\n    - id: address\n      type: System.ServiceModel.EndpointAddress\n      description: The metadata address.\n    return:\n      type: System.ServiceModel.Description.ServiceEndpointCollection\n      description: A collection of <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> objects for the specified contract.\n  overload: System.ServiceModel.Description.MetadataResolver.Resolve*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The address or contracts collection is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>contracts</code> is empty, at least one member of <code>contracts</code> is null, or <code>contracts</code> contains more than one contract with the same name and namespace.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Description/MetadataResolver.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.ServiceModel.EndpointAddress)\n  commentId: M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.ServiceModel.EndpointAddress)\n  id: Resolve(System.Type,System.ServiceModel.EndpointAddress)\n  parent: System.ServiceModel.Description.MetadataResolver\n  langs:\n  - csharp\n  name: Resolve(Type, EndpointAddress)\n  nameWithType: MetadataResolver.Resolve(Type, EndpointAddress)\n  fullName: MetadataResolver.Resolve(Type, EndpointAddress)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Description\n  summary: Downloads and resolves a metadata address into a collection of <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> objects for a specified contract at a specified address.\n  remarks: \"Use the <xref:System.ServiceModel.Description.MetadataResolver.Resolve%2A> method to specify the contract and the metadata address to use when downloading and resolving metadata.  \\n  \\n The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> are used to retrieve the metadata and the default <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> is <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.  \\n  \\n To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly.  \\n  \\n> [!NOTE]\\n>  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.  \\n  \\n This method requires that you specify a contract type. You can specify the contract by declaring the service interface in the client code or by using a [!INCLUDE[indigo2](~/includes/indigo2-md.md)] client generated by Svcutil.exe. If the interface changes (adding a new operation, for example) you must update the interface in the client code or generate a new [!INCLUDE[indigo2](~/includes/indigo2-md.md)] client. If you do not, an exception is thrown. For example, you have a service that implements a service contract called ICalculator that defines Add(), Sub(), Mult(), and Div(). You create a client application and generate [!INCLUDE[indigo2](~/includes/indigo2-md.md)] client. You then add a method to ICalculator called Echo(). If you then write an application that calls <xref:System.ServiceModel.Description.MetadataResolver.Resolve%28System.Type%2CSystem.ServiceModel.EndpointAddress%29> without generating a new [!INCLUDE[indigo2](~/includes/indigo2-md.md)] client you get the following exception.  \\n  \\n `Unhandled Exception: System.ServiceModel.Description.WsdlImporter+WsdlImportException: Cannot locate operation Echo in Contract ICalculator`.\"\n  example:\n  - \"The following code example shows the use of the <xref:System.ServiceModel.Description.MetadataResolver> class to return metadata as a collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects that are then used to connect to a service instance.  \\n  \\n [!code-csharp[MetadataResolver#1](~/samples/snippets/csharp/VS_Snippets_CFX/metadataresolver/cs/client.cs#1)]\"\n  syntax:\n    content: public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (Type contract, System.ServiceModel.EndpointAddress address);\n    parameters:\n    - id: contract\n      type: System.Type\n      description: The contracts for which to download and resolve metadata.\n    - id: address\n      type: System.ServiceModel.EndpointAddress\n      description: The metadata address.\n    return:\n      type: System.ServiceModel.Description.ServiceEndpointCollection\n      description: A collection of <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> objects for the specified contract.\n  overload: System.ServiceModel.Description.MetadataResolver.Resolve*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The address or the contract is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Description/MetadataResolver.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient)\n  commentId: M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient)\n  id: Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient)\n  parent: System.ServiceModel.Description.MetadataResolver\n  langs:\n  - csharp\n  name: Resolve(IEnumerable<ContractDescription>, EndpointAddress, MetadataExchangeClient)\n  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>, EndpointAddress, MetadataExchangeClient)\n  fullName: MetadataResolver.Resolve(IEnumerable<ContractDescription>, EndpointAddress, MetadataExchangeClient)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Description\n  summary: Resolves a metadata address into the <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> objects for the specified contracts using the specified metadata address and <xref href=\"System.ServiceModel.Description.MetadataExchangeClient\"></xref>.\n  remarks: \"The default <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> is <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.  \\n  \\n To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly.  \\n  \\n> [!NOTE]\\n>  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.\"\n  syntax:\n    content: public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, System.ServiceModel.EndpointAddress address, System.ServiceModel.Description.MetadataExchangeClient client);\n    parameters:\n    - id: contracts\n      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}\n      description: The contracts for which to download and resolve metadata.\n    - id: address\n      type: System.ServiceModel.EndpointAddress\n      description: The metadata address.\n    - id: client\n      type: System.ServiceModel.Description.MetadataExchangeClient\n      description: The <xref href=\"System.ServiceModel.Description.MetadataExchangeClient\"></xref> used to retrieve the metadata.\n    return:\n      type: System.ServiceModel.Description.ServiceEndpointCollection\n      description: A collection of <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> objects for the specified contract.\n  overload: System.ServiceModel.Description.MetadataResolver.Resolve*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The address, contracts collection, or client is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>contracts</code> is empty, at least one member of <code>contracts</code> is null, or <code>contracts</code> contains more than one contract with the same name and namespace.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Description/MetadataResolver.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)\n  commentId: M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)\n  id: Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)\n  parent: System.ServiceModel.Description.MetadataResolver\n  langs:\n  - csharp\n  name: Resolve(IEnumerable<ContractDescription>, Uri, MetadataExchangeClientMode)\n  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>, Uri, MetadataExchangeClientMode)\n  fullName: MetadataResolver.Resolve(IEnumerable<ContractDescription>, Uri, MetadataExchangeClientMode)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Description\n  summary: Resolves a metadata address into the <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> objects for the specified contracts using the specified address and transfer mode.\n  remarks: \"The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> are used to retrieve the metadata.  \\n  \\n To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly.  \\n  \\n> [!NOTE]\\n>  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.\"\n  syntax:\n    content: public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode);\n    parameters:\n    - id: contracts\n      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}\n      description: The contracts for which to download and resolve metadata.\n    - id: address\n      type: System.Uri\n      description: The metadata address.\n    - id: mode\n      type: System.ServiceModel.Description.MetadataExchangeClientMode\n      description: The mode of retrieval.\n    return:\n      type: System.ServiceModel.Description.ServiceEndpointCollection\n      description: A collection of <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> objects for the specified contract.\n  overload: System.ServiceModel.Description.MetadataResolver.Resolve*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The address or contracts collection is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>contracts</code> is empty, at least one member of <code>contracts</code> is null, or <code>contracts</code> contains more than one contract with the same name and namespace.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Description/MetadataResolver.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)\n  commentId: M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)\n  id: Resolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)\n  parent: System.ServiceModel.Description.MetadataResolver\n  langs:\n  - csharp\n  name: Resolve(Type, Uri, MetadataExchangeClientMode)\n  nameWithType: MetadataResolver.Resolve(Type, Uri, MetadataExchangeClientMode)\n  fullName: MetadataResolver.Resolve(Type, Uri, MetadataExchangeClientMode)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Description\n  summary: Resolves a metadata address into the <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> objects for the specified contract using the specified address and transfer mode.\n  remarks: \"Use the <xref:System.ServiceModel.Description.MetadataResolver.Resolve%2A> method to specify a contract, and address, and the download mechanism to use.  \\n  \\n The default settings on the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> are used to retrieve the metadata.  \\n  \\n To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly.  \\n  \\n> [!NOTE]\\n>  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.\"\n  example:\n  - \"The following code example shows the use of the <xref:System.ServiceModel.Description.MetadataResolver> to download and return metadata as a collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects using an HTTP GET request rather than WS-Transfer.  \\n  \\n [!code-csharp[MetadataResolver#2](~/samples/snippets/csharp/VS_Snippets_CFX/metadataresolver/cs/client.cs#2)]\"\n  syntax:\n    content: public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (Type contract, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode);\n    parameters:\n    - id: contract\n      type: System.Type\n      description: The contract for which to download and resolve metadata.\n    - id: address\n      type: System.Uri\n      description: The metadata address.\n    - id: mode\n      type: System.ServiceModel.Description.MetadataExchangeClientMode\n      description: The mode of retrieval.\n    return:\n      type: System.ServiceModel.Description.ServiceEndpointCollection\n      description: A collection of <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> objects for the specified contract.\n  overload: System.ServiceModel.Description.MetadataResolver.Resolve*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The address or contract is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Description/MetadataResolver.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient)\n  commentId: M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient)\n  id: Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient)\n  parent: System.ServiceModel.Description.MetadataResolver\n  langs:\n  - csharp\n  name: Resolve(IEnumerable<ContractDescription>, Uri, MetadataExchangeClientMode, MetadataExchangeClient)\n  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>, Uri, MetadataExchangeClientMode, MetadataExchangeClient)\n  fullName: MetadataResolver.Resolve(IEnumerable<ContractDescription>, Uri, MetadataExchangeClientMode, MetadataExchangeClient)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Description\n  summary: Resolves a metadata address into the <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> objects for the specified contracts using the specified address, transfer mode, and transfer client.\n  remarks: \"To download metadata but not resolve the information into <xref:System.ServiceModel.Description.ServiceEndpoint> objects, use the <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> directly.  \\n  \\n> [!NOTE]\\n>  An empty collection is returned if no endpoints were imported or if no endpoints matched the contract. If an empty collection is returned, a warning trace is written.\"\n  syntax:\n    content: public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, System.ServiceModel.Description.MetadataExchangeClient client);\n    parameters:\n    - id: contracts\n      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}\n      description: The contracts for which to download and resolve metadata.\n    - id: address\n      type: System.Uri\n      description: The metadata address.\n    - id: mode\n      type: System.ServiceModel.Description.MetadataExchangeClientMode\n      description: The mode of retrieval.\n    - id: client\n      type: System.ServiceModel.Description.MetadataExchangeClient\n      description: The <xref href=\"System.ServiceModel.Description.MetadataExchangeClient\"></xref> used to retrieve the metadata.\n    return:\n      type: System.ServiceModel.Description.ServiceEndpointCollection\n      description: A collection of <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> objects for the specified contract.\n  overload: System.ServiceModel.Description.MetadataResolver.Resolve*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The address, contracts collection, or client is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>contracts</code> is empty, at least one member of <code>contracts</code> is null, or <code>contracts</code> contains more than one contract with the same name and namespace.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Description/MetadataResolver.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Description.MetadataResolver\n  isExternal: false\n  name: BeginResolve(IEnumerable<ContractDescription>, EndpointAddress, AsyncCallback, Object)\n  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>, EndpointAddress, AsyncCallback, Object)\n  fullName: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>, EndpointAddress, AsyncCallback, Object)\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: false\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.ServiceModel.Description.ContractDescription\n  name: ContractDescription\n  nameWithType: ContractDescription\n  fullName: System.ServiceModel.Description.ContractDescription\n- uid: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<ContractDescription>\n  nameWithType: IEnumerable<ContractDescription>\n  fullName: System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ServiceModel.Description.ContractDescription\n    name: ContractDescription\n    nameWithType: ContractDescription\n    fullName: System.ServiceModel.Description.ContractDescription\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ServiceModel.EndpointAddress\n  parent: System.ServiceModel\n  isExternal: false\n  name: EndpointAddress\n  nameWithType: EndpointAddress\n  fullName: System.ServiceModel.EndpointAddress\n- uid: System.AsyncCallback\n  parent: System\n  isExternal: false\n  name: AsyncCallback\n  nameWithType: AsyncCallback\n  fullName: System.AsyncCallback\n- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Description.MetadataResolver\n  isExternal: false\n  name: BeginResolve(Type, EndpointAddress, AsyncCallback, Object)\n  nameWithType: MetadataResolver.BeginResolve(Type, EndpointAddress, AsyncCallback, Object)\n  fullName: MetadataResolver.BeginResolve(Type, EndpointAddress, AsyncCallback, Object)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Description.MetadataResolver\n  isExternal: false\n  name: BeginResolve(IEnumerable<ContractDescription>, EndpointAddress, MetadataExchangeClient, AsyncCallback, Object)\n  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>, EndpointAddress, MetadataExchangeClient, AsyncCallback, Object)\n  fullName: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>, EndpointAddress, MetadataExchangeClient, AsyncCallback, Object)\n- uid: System.ServiceModel.Description.MetadataExchangeClient\n  parent: System.ServiceModel.Description\n  isExternal: false\n  name: MetadataExchangeClient\n  nameWithType: MetadataExchangeClient\n  fullName: System.ServiceModel.Description.MetadataExchangeClient\n- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Description.MetadataResolver\n  isExternal: false\n  name: BeginResolve(IEnumerable<ContractDescription>, Uri, MetadataExchangeClientMode, AsyncCallback, Object)\n  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>, Uri, MetadataExchangeClientMode, AsyncCallback, Object)\n  fullName: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>, Uri, MetadataExchangeClientMode, AsyncCallback, Object)\n- uid: System.Uri\n  parent: System\n  isExternal: false\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri\n- uid: System.ServiceModel.Description.MetadataExchangeClientMode\n  parent: System.ServiceModel.Description\n  isExternal: false\n  name: MetadataExchangeClientMode\n  nameWithType: MetadataExchangeClientMode\n  fullName: System.ServiceModel.Description.MetadataExchangeClientMode\n- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Description.MetadataResolver\n  isExternal: false\n  name: BeginResolve(Type, Uri, MetadataExchangeClientMode, AsyncCallback, Object)\n  nameWithType: MetadataResolver.BeginResolve(Type, Uri, MetadataExchangeClientMode, AsyncCallback, Object)\n  fullName: MetadataResolver.BeginResolve(Type, Uri, MetadataExchangeClientMode, AsyncCallback, Object)\n- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Description.MetadataResolver\n  isExternal: false\n  name: BeginResolve(IEnumerable<ContractDescription>, Uri, MetadataExchangeClientMode, MetadataExchangeClient, AsyncCallback, Object)\n  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>, Uri, MetadataExchangeClientMode, MetadataExchangeClient, AsyncCallback, Object)\n  fullName: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>, Uri, MetadataExchangeClientMode, MetadataExchangeClient, AsyncCallback, Object)\n- uid: System.ServiceModel.Description.MetadataResolver.EndResolve(System.IAsyncResult)\n  parent: System.ServiceModel.Description.MetadataResolver\n  isExternal: false\n  name: EndResolve(IAsyncResult)\n  nameWithType: MetadataResolver.EndResolve(IAsyncResult)\n  fullName: MetadataResolver.EndResolve(IAsyncResult)\n- uid: System.ServiceModel.Description.ServiceEndpointCollection\n  parent: System.ServiceModel.Description\n  isExternal: false\n  name: ServiceEndpointCollection\n  nameWithType: ServiceEndpointCollection\n  fullName: System.ServiceModel.Description.ServiceEndpointCollection\n- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress)\n  parent: System.ServiceModel.Description.MetadataResolver\n  isExternal: false\n  name: Resolve(IEnumerable<ContractDescription>, EndpointAddress)\n  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>, EndpointAddress)\n  fullName: MetadataResolver.Resolve(IEnumerable<ContractDescription>, EndpointAddress)\n- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.ServiceModel.EndpointAddress)\n  parent: System.ServiceModel.Description.MetadataResolver\n  isExternal: false\n  name: Resolve(Type, EndpointAddress)\n  nameWithType: MetadataResolver.Resolve(Type, EndpointAddress)\n  fullName: MetadataResolver.Resolve(Type, EndpointAddress)\n- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient)\n  parent: System.ServiceModel.Description.MetadataResolver\n  isExternal: false\n  name: Resolve(IEnumerable<ContractDescription>, EndpointAddress, MetadataExchangeClient)\n  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>, EndpointAddress, MetadataExchangeClient)\n  fullName: MetadataResolver.Resolve(IEnumerable<ContractDescription>, EndpointAddress, MetadataExchangeClient)\n- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)\n  parent: System.ServiceModel.Description.MetadataResolver\n  isExternal: false\n  name: Resolve(IEnumerable<ContractDescription>, Uri, MetadataExchangeClientMode)\n  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>, Uri, MetadataExchangeClientMode)\n  fullName: MetadataResolver.Resolve(IEnumerable<ContractDescription>, Uri, MetadataExchangeClientMode)\n- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)\n  parent: System.ServiceModel.Description.MetadataResolver\n  isExternal: false\n  name: Resolve(Type, Uri, MetadataExchangeClientMode)\n  nameWithType: MetadataResolver.Resolve(Type, Uri, MetadataExchangeClientMode)\n  fullName: MetadataResolver.Resolve(Type, Uri, MetadataExchangeClientMode)\n- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient)\n  parent: System.ServiceModel.Description.MetadataResolver\n  isExternal: false\n  name: Resolve(IEnumerable<ContractDescription>, Uri, MetadataExchangeClientMode, MetadataExchangeClient)\n  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>, Uri, MetadataExchangeClientMode, MetadataExchangeClient)\n  fullName: MetadataResolver.Resolve(IEnumerable<ContractDescription>, Uri, MetadataExchangeClientMode, MetadataExchangeClient)\n- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve*\n  parent: System.ServiceModel.Description.MetadataResolver\n  isExternal: false\n  name: BeginResolve\n  nameWithType: MetadataResolver.BeginResolve\n  fullName: MetadataResolver.BeginResolve\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Description/MetadataResolver.xml\n- uid: System.ServiceModel.Description.MetadataResolver.Resolve*\n  parent: System.ServiceModel.Description.MetadataResolver\n  isExternal: false\n  name: Resolve\n  nameWithType: MetadataResolver.Resolve\n  fullName: MetadataResolver.Resolve\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Description/MetadataResolver.xml\n- uid: System.ServiceModel.Description.MetadataResolver.EndResolve*\n  parent: System.ServiceModel.Description.MetadataResolver\n  isExternal: false\n  name: EndResolve\n  nameWithType: MetadataResolver.EndResolve\n  fullName: MetadataResolver.EndResolve\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Description/MetadataResolver.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}