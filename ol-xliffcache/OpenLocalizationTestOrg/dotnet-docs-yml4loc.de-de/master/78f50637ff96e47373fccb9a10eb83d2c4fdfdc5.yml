### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Composition.Hosting.ScopingExtensions
  commentId: T:System.ComponentModel.Composition.Hosting.ScopingExtensions
  id: ScopingExtensions
  children:
  - System.ComponentModel.Composition.Hosting.ScopingExtensions.ContainsPartMetadata``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String,``0)
  - System.ComponentModel.Composition.Hosting.ScopingExtensions.ContainsPartMetadataWithKey(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String)
  - System.ComponentModel.Composition.Hosting.ScopingExtensions.Exports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String)
  - System.ComponentModel.Composition.Hosting.ScopingExtensions.Filter(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Func{System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Boolean})
  - System.ComponentModel.Composition.Hosting.ScopingExtensions.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String)
  - System.ComponentModel.Composition.Hosting.ScopingExtensions.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String,System.ComponentModel.Composition.Primitives.ImportCardinality)
  langs:
  - csharp
  name: ScopingExtensions
  nameWithType: ScopingExtensions
  fullName: System.ComponentModel.Composition.Hosting.ScopingExtensions
  type: Class
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: Defines static convenience methods for scoping.
  syntax:
    content: public static class ScopingExtensions
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Hosting/ScopingExtensions.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.ComponentModel.Composition.Hosting.ScopingExtensions.ContainsPartMetadata``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String,``0)
  commentId: M:System.ComponentModel.Composition.Hosting.ScopingExtensions.ContainsPartMetadata``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String,``0)
  id: ContainsPartMetadata``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String,``0)
  parent: System.ComponentModel.Composition.Hosting.ScopingExtensions
  langs:
  - csharp
  name: ContainsPartMetadata<T>(ComposablePartDefinition, String, T)
  nameWithType: ScopingExtensions.ContainsPartMetadata<T>(ComposablePartDefinition, String, T)
  fullName: ScopingExtensions.ContainsPartMetadata<T>(ComposablePartDefinition, String, T)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: Gets a value that indicates whether the specified part contains metadata that has the specified key and value.
  syntax:
    content: public static bool ContainsPartMetadata<T> (this System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, string key, T value);
    parameters:
    - id: part
      type: System.ComponentModel.Composition.Primitives.ComposablePartDefinition
      description: The part to search.
    - id: key
      type: System.String
      description: The metadata key.
    - id: value
      type: T
      description: The metadata value.
    typeParameters:
    - id: T
      description: The type of the metadata value.
    return:
      type: System.Boolean
      description: '`true` if <code>part</code> contains metadata that has the specified key, value type, and value; otherwise, `false`.'
  overload: System.ComponentModel.Composition.Hosting.ScopingExtensions.ContainsPartMetadata``1*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Hosting/ScopingExtensions.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.ComponentModel.Composition.Hosting.ScopingExtensions.ContainsPartMetadataWithKey(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String)
  commentId: M:System.ComponentModel.Composition.Hosting.ScopingExtensions.ContainsPartMetadataWithKey(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String)
  id: ContainsPartMetadataWithKey(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String)
  parent: System.ComponentModel.Composition.Hosting.ScopingExtensions
  langs:
  - csharp
  name: ContainsPartMetadataWithKey(ComposablePartDefinition, String)
  nameWithType: ScopingExtensions.ContainsPartMetadataWithKey(ComposablePartDefinition, String)
  fullName: ScopingExtensions.ContainsPartMetadataWithKey(ComposablePartDefinition, String)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: Gets a value that indicates whether the specified part contains metadata that has the specified key.
  syntax:
    content: public static bool ContainsPartMetadataWithKey (this System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, string key);
    parameters:
    - id: part
      type: System.ComponentModel.Composition.Primitives.ComposablePartDefinition
      description: The part to search.
    - id: key
      type: System.String
      description: The metadata key.
    return:
      type: System.Boolean
      description: '`true` if <code>part</code> contains metadata that has the specified key; otherwise, `false`.'
  overload: System.ComponentModel.Composition.Hosting.ScopingExtensions.ContainsPartMetadataWithKey*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Hosting/ScopingExtensions.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.ComponentModel.Composition.Hosting.ScopingExtensions.Exports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String)
  commentId: M:System.ComponentModel.Composition.Hosting.ScopingExtensions.Exports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String)
  id: Exports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String)
  parent: System.ComponentModel.Composition.Hosting.ScopingExtensions
  langs:
  - csharp
  name: Exports(ComposablePartDefinition, String)
  nameWithType: ScopingExtensions.Exports(ComposablePartDefinition, String)
  fullName: ScopingExtensions.Exports(ComposablePartDefinition, String)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: Gets a value that indicates whether the specified part exports the specified contract.
  syntax:
    content: public static bool Exports (this System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, string contractName);
    parameters:
    - id: part
      type: System.ComponentModel.Composition.Primitives.ComposablePartDefinition
      description: The part to search.
    - id: contractName
      type: System.String
      description: The name of the contract.
    return:
      type: System.Boolean
      description: '`true` if <code>part</code> exports the specified contract; otherwise, `false`.'
  overload: System.ComponentModel.Composition.Hosting.ScopingExtensions.Exports*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Hosting/ScopingExtensions.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.ComponentModel.Composition.Hosting.ScopingExtensions.Filter(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Func{System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Boolean})
  commentId: M:System.ComponentModel.Composition.Hosting.ScopingExtensions.Filter(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Func{System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Boolean})
  id: Filter(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Func{System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Boolean})
  parent: System.ComponentModel.Composition.Hosting.ScopingExtensions
  langs:
  - csharp
  name: Filter(ComposablePartCatalog, Func<ComposablePartDefinition,Boolean>)
  nameWithType: ScopingExtensions.Filter(ComposablePartCatalog, Func<ComposablePartDefinition,Boolean>)
  fullName: ScopingExtensions.Filter(ComposablePartCatalog, Func<ComposablePartDefinition,Boolean>)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: Filters the specified catalog with the specified filter function.
  syntax:
    content: public static System.ComponentModel.Composition.Hosting.FilteredCatalog Filter (this System.ComponentModel.Composition.Primitives.ComposablePartCatalog catalog, Func<System.ComponentModel.Composition.Primitives.ComposablePartDefinition,bool> filter);
    parameters:
    - id: catalog
      type: System.ComponentModel.Composition.Primitives.ComposablePartCatalog
      description: The catalog to filter.
    - id: filter
      type: System.Func{System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Boolean}
      description: The filter function.
    return:
      type: System.ComponentModel.Composition.Hosting.FilteredCatalog
      description: A new catalog filtered by using the specified filter.
  overload: System.ComponentModel.Composition.Hosting.ScopingExtensions.Filter*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Hosting/ScopingExtensions.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.ComponentModel.Composition.Hosting.ScopingExtensions.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String)
  commentId: M:System.ComponentModel.Composition.Hosting.ScopingExtensions.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String)
  id: Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String)
  parent: System.ComponentModel.Composition.Hosting.ScopingExtensions
  langs:
  - csharp
  name: Imports(ComposablePartDefinition, String)
  nameWithType: ScopingExtensions.Imports(ComposablePartDefinition, String)
  fullName: ScopingExtensions.Imports(ComposablePartDefinition, String)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: Determines whether the specified part imports the specified contract.
  syntax:
    content: public static bool Imports (this System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, string contractName);
    parameters:
    - id: part
      type: System.ComponentModel.Composition.Primitives.ComposablePartDefinition
      description: The part to search.
    - id: contractName
      type: System.String
      description: The name of the contract.
    return:
      type: System.Boolean
      description: '`true` if <code>part</code> imports the specified contract; otherwise, `false`.'
  overload: System.ComponentModel.Composition.Hosting.ScopingExtensions.Imports*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Hosting/ScopingExtensions.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.ComponentModel.Composition.Hosting.ScopingExtensions.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String,System.ComponentModel.Composition.Primitives.ImportCardinality)
  commentId: M:System.ComponentModel.Composition.Hosting.ScopingExtensions.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String,System.ComponentModel.Composition.Primitives.ImportCardinality)
  id: Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String,System.ComponentModel.Composition.Primitives.ImportCardinality)
  parent: System.ComponentModel.Composition.Hosting.ScopingExtensions
  langs:
  - csharp
  name: Imports(ComposablePartDefinition, String, ImportCardinality)
  nameWithType: ScopingExtensions.Imports(ComposablePartDefinition, String, ImportCardinality)
  fullName: ScopingExtensions.Imports(ComposablePartDefinition, String, ImportCardinality)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: Determines whether the specified part imports the specified contract with the specified cardinality.
  syntax:
    content: public static bool Imports (this System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, string contractName, System.ComponentModel.Composition.Primitives.ImportCardinality importCardinality);
    parameters:
    - id: part
      type: System.ComponentModel.Composition.Primitives.ComposablePartDefinition
      description: The part to search.
    - id: contractName
      type: System.String
      description: The name of the contract.
    - id: importCardinality
      type: System.ComponentModel.Composition.Primitives.ImportCardinality
      description: The cardinality of the contract.
    return:
      type: System.Boolean
      description: '`true` if <code>part</code> imports a contract that has the specified name and cardinality; otherwise, `false`.'
  overload: System.ComponentModel.Composition.Hosting.ScopingExtensions.Imports*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Hosting/ScopingExtensions.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.Composition.Hosting.ScopingExtensions.ContainsPartMetadata``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String,``0)
  parent: System.ComponentModel.Composition.Hosting.ScopingExtensions
  isExternal: false
  name: ContainsPartMetadata<T>(ComposablePartDefinition, String, T)
  nameWithType: ScopingExtensions.ContainsPartMetadata<T>(ComposablePartDefinition, String, T)
  fullName: ScopingExtensions.ContainsPartMetadata<T>(ComposablePartDefinition, String, T)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Composition.Primitives.ComposablePartDefinition
  parent: System.ComponentModel.Composition.Primitives
  isExternal: false
  name: ComposablePartDefinition
  nameWithType: ComposablePartDefinition
  fullName: System.ComponentModel.Composition.Primitives.ComposablePartDefinition
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.ComponentModel.Composition.Hosting.ScopingExtensions.ContainsPartMetadataWithKey(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String)
  parent: System.ComponentModel.Composition.Hosting.ScopingExtensions
  isExternal: false
  name: ContainsPartMetadataWithKey(ComposablePartDefinition, String)
  nameWithType: ScopingExtensions.ContainsPartMetadataWithKey(ComposablePartDefinition, String)
  fullName: ScopingExtensions.ContainsPartMetadataWithKey(ComposablePartDefinition, String)
- uid: System.ComponentModel.Composition.Hosting.ScopingExtensions.Exports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String)
  parent: System.ComponentModel.Composition.Hosting.ScopingExtensions
  isExternal: false
  name: Exports(ComposablePartDefinition, String)
  nameWithType: ScopingExtensions.Exports(ComposablePartDefinition, String)
  fullName: ScopingExtensions.Exports(ComposablePartDefinition, String)
- uid: System.ComponentModel.Composition.Hosting.ScopingExtensions.Filter(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Func{System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Boolean})
  parent: System.ComponentModel.Composition.Hosting.ScopingExtensions
  isExternal: false
  name: Filter(ComposablePartCatalog, Func<ComposablePartDefinition,Boolean>)
  nameWithType: ScopingExtensions.Filter(ComposablePartCatalog, Func<ComposablePartDefinition,Boolean>)
  fullName: ScopingExtensions.Filter(ComposablePartCatalog, Func<ComposablePartDefinition,Boolean>)
- uid: System.ComponentModel.Composition.Hosting.FilteredCatalog
  parent: System.ComponentModel.Composition.Hosting
  isExternal: false
  name: FilteredCatalog
  nameWithType: FilteredCatalog
  fullName: System.ComponentModel.Composition.Hosting.FilteredCatalog
- uid: System.ComponentModel.Composition.Primitives.ComposablePartCatalog
  parent: System.ComponentModel.Composition.Primitives
  isExternal: false
  name: ComposablePartCatalog
  nameWithType: ComposablePartCatalog
  fullName: System.ComponentModel.Composition.Primitives.ComposablePartCatalog
- uid: System.Func`2
  name: Func<T,TResult>
  nameWithType: Func<T,TResult>
  fullName: System.Func<T,TResult>
- uid: System.Func{System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Boolean}
  parent: System
  isExternal: false
  name: Func<ComposablePartDefinition,Boolean>
  nameWithType: Func<ComposablePartDefinition,Boolean>
  fullName: System.Func<System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Boolean>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.Composition.Primitives.ComposablePartDefinition
    name: ComposablePartDefinition
    nameWithType: ComposablePartDefinition
    fullName: System.ComponentModel.Composition.Primitives.ComposablePartDefinition
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.Hosting.ScopingExtensions.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String)
  parent: System.ComponentModel.Composition.Hosting.ScopingExtensions
  isExternal: false
  name: Imports(ComposablePartDefinition, String)
  nameWithType: ScopingExtensions.Imports(ComposablePartDefinition, String)
  fullName: ScopingExtensions.Imports(ComposablePartDefinition, String)
- uid: System.ComponentModel.Composition.Hosting.ScopingExtensions.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String,System.ComponentModel.Composition.Primitives.ImportCardinality)
  parent: System.ComponentModel.Composition.Hosting.ScopingExtensions
  isExternal: false
  name: Imports(ComposablePartDefinition, String, ImportCardinality)
  nameWithType: ScopingExtensions.Imports(ComposablePartDefinition, String, ImportCardinality)
  fullName: ScopingExtensions.Imports(ComposablePartDefinition, String, ImportCardinality)
- uid: System.ComponentModel.Composition.Primitives.ImportCardinality
  parent: System.ComponentModel.Composition.Primitives
  isExternal: false
  name: ImportCardinality
  nameWithType: ImportCardinality
  fullName: System.ComponentModel.Composition.Primitives.ImportCardinality
- uid: System.ComponentModel.Composition.Hosting.ScopingExtensions.ContainsPartMetadata``1*
  parent: System.ComponentModel.Composition.Hosting.ScopingExtensions
  isExternal: false
  name: ContainsPartMetadata<T>
  nameWithType: ScopingExtensions.ContainsPartMetadata<T>
  fullName: ScopingExtensions.ContainsPartMetadata<T>
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Hosting/ScopingExtensions.xml
- uid: System.ComponentModel.Composition.Hosting.ScopingExtensions.ContainsPartMetadataWithKey*
  parent: System.ComponentModel.Composition.Hosting.ScopingExtensions
  isExternal: false
  name: ContainsPartMetadataWithKey
  nameWithType: ScopingExtensions.ContainsPartMetadataWithKey
  fullName: ScopingExtensions.ContainsPartMetadataWithKey
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Hosting/ScopingExtensions.xml
- uid: System.ComponentModel.Composition.Hosting.ScopingExtensions.Exports*
  parent: System.ComponentModel.Composition.Hosting.ScopingExtensions
  isExternal: false
  name: Exports
  nameWithType: ScopingExtensions.Exports
  fullName: ScopingExtensions.Exports
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Hosting/ScopingExtensions.xml
- uid: System.ComponentModel.Composition.Hosting.ScopingExtensions.Filter*
  parent: System.ComponentModel.Composition.Hosting.ScopingExtensions
  isExternal: false
  name: Filter
  nameWithType: ScopingExtensions.Filter
  fullName: ScopingExtensions.Filter
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Hosting/ScopingExtensions.xml
- uid: System.ComponentModel.Composition.Hosting.ScopingExtensions.Imports*
  parent: System.ComponentModel.Composition.Hosting.ScopingExtensions
  isExternal: false
  name: Imports
  nameWithType: ScopingExtensions.Imports
  fullName: ScopingExtensions.Imports
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Hosting/ScopingExtensions.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
