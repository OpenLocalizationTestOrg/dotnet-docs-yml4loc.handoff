{"nodes":[{"content":"Specifies additional event schema information for an event.","nodes":[{"pos":[0,59],"content":"Specifies additional event schema information for an event.","nodes":[{"content":"Specifies additional event schema information for an event.","pos":[0,59]}]}],"pos":[1048,1108],"yaml":true},{"content":"When you apply this attribute to an ETW event method defined on an <xref:System.Diagnostics.Tracing.EventSource>-derived class, you must call the <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method on the base class, passing the event ID, followed by the same arguments as the defined method is passed. You should follow the pattern shown in the following examples.","nodes":[{"pos":[0,380],"content":"When you apply this attribute to an ETW event method defined on an <xref:System.Diagnostics.Tracing.EventSource>-derived class, you must call the <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method on the base class, passing the event ID, followed by the same arguments as the defined method is passed. You should follow the pattern shown in the following examples.","nodes":[{"content":"When you apply this attribute to an ETW event method defined on an <xref:System.Diagnostics.Tracing.EventSource>-derived class, you must call the <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method on the base class, passing the event ID, followed by the same arguments as the defined method is passed. You should follow the pattern shown in the following examples.","pos":[0,380],"nodes":[{"content":"When you apply this attribute to an ETW event method defined on an <ph id=\"ph1\">&lt;xref:System.Diagnostics.Tracing.EventSource&gt;</ph>-derived class, you must call the <ph id=\"ph2\">&lt;xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A&gt;</ph> method on the base class, passing the event ID, followed by the same arguments as the defined method is passed.","pos":[0,317],"source":"When you apply this attribute to an ETW event method defined on an <xref:System.Diagnostics.Tracing.EventSource>-derived class, you must call the <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method on the base class, passing the event ID, followed by the same arguments as the defined method is passed."},{"content":"You should follow the pattern shown in the following examples.","pos":[318,380]}]}]}],"pos":[1119,1500],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Diagnostics.Tracing.EventAttribute\"></xref> class with the specified event identifier.","nodes":[{"pos":[0,139],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.Tracing.EventAttribute\"&gt;&lt;/xref&gt;</ph> class with the specified event identifier.","source":"Initializes a new instance of the <xref href=\"System.Diagnostics.Tracing.EventAttribute\"></xref> class with the specified event identifier."}],"pos":[8036,8176],"yaml":true},{"content":"The event identifier for the event.","nodes":[{"pos":[0,35],"content":"The event identifier for the event.","nodes":[{"content":"The event identifier for the event.","pos":[0,35]}]}],"pos":[8997,9033],"yaml":true},{"content":"Specifies the behavior of the start and stop events of an activity. An activity is the region of time in an app between the start and the stop.","nodes":[{"pos":[0,143],"content":"Specifies the behavior of the start and stop events of an activity. An activity is the region of time in an app between the start and the stop.","nodes":[{"content":"Specifies the behavior of the start and stop events of an activity. An activity is the region of time in an app between the start and the stop.","pos":[0,143],"nodes":[{"content":"Specifies the behavior of the start and stop events of an activity.","pos":[0,67]},{"content":"An activity is the region of time in an app between the start and the stop.","pos":[68,143]}]}]}],"pos":[10638,10782],"yaml":true},{"content":"Returns <xref href=\"System.Diagnostics.Tracing.EventActivityOptions\"></xref>.","nodes":[{"pos":[0,77],"content":"Returns <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.Tracing.EventActivityOptions\"&gt;&lt;/xref&gt;</ph>.","source":"Returns <xref href=\"System.Diagnostics.Tracing.EventActivityOptions\"></xref>."}],"pos":[10981,11059],"yaml":true},{"content":"Gets or sets an additional event log where the event should be written.","nodes":[{"pos":[0,71],"content":"Gets or sets an additional event log where the event should be written.","nodes":[{"content":"Gets or sets an additional event log where the event should be written.","pos":[0,71]}]}],"pos":[12412,12484],"yaml":true},{"content":"An additional event log where the event should be written.","nodes":[{"pos":[0,58],"content":"An additional event log where the event should be written.","nodes":[{"content":"An additional event log where the event should be written.","pos":[0,58]}]}],"pos":[12659,12718],"yaml":true},{"content":"Gets or sets the identifier for the event.","nodes":[{"pos":[0,42],"content":"Gets or sets the identifier for the event.","nodes":[{"content":"Gets or sets the identifier for the event.","pos":[0,42]}]}],"pos":[14063,14106],"yaml":true},{"content":"<xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> should be greater than 0 or less than 65535 or errors can occur in a tracing operation. If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events. You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.","nodes":[{"pos":[0,470],"content":"<xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> should be greater than 0 or less than 65535 or errors can occur in a tracing operation. If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events. You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.","nodes":[{"content":"<xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> should be greater than 0 or less than 65535 or errors can occur in a tracing operation. If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events. You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.","pos":[0,470],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A&gt;</ph> should be greater than 0 or less than 65535 or errors can occur in a tracing operation.","pos":[0,147],"source":"<xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> should be greater than 0 or less than 65535 or errors can occur in a tracing operation."},{"content":"If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events.","pos":[148,335]},{"content":"You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.","pos":[336,470]}]}]}],"pos":[14117,14588],"yaml":true,"extradata":"MT"},{"content":"The event identifier. This value should be between 0 and 65535.","nodes":[{"pos":[0,63],"content":"The event identifier. This value should be between 0 and 65535.","nodes":[{"content":"The event identifier. This value should be between 0 and 65535.","pos":[0,63],"nodes":[{"content":"The event identifier.","pos":[0,21]},{"content":"This value should be between 0 and 65535.","pos":[22,63]}]}]}],"pos":[14695,14759],"yaml":true},{"content":"Gets or sets the keywords for the event.","nodes":[{"pos":[0,40],"content":"Gets or sets the keywords for the event.","nodes":[{"content":"Gets or sets the keywords for the event.","pos":[0,40]}]}],"pos":[16324,16365],"yaml":true},{"content":"A bitwise combination of the enumeration values.","nodes":[{"pos":[0,48],"content":"A bitwise combination of the enumeration values.","nodes":[{"content":"A bitwise combination of the enumeration values.","pos":[0,48]}]}],"pos":[17633,17682],"yaml":true},{"content":"Gets or sets the level for the event.","nodes":[{"pos":[0,37],"content":"Gets or sets the level for the event.","nodes":[{"content":"Gets or sets the level for the event.","pos":[0,37]}]}],"pos":[19230,19268],"yaml":true},{"content":"One of the enumeration values that specifies the level for the event.","nodes":[{"pos":[0,69],"content":"One of the enumeration values that specifies the level for the event.","nodes":[{"content":"One of the enumeration values that specifies the level for the event.","pos":[0,69]}]}],"pos":[20326,20396],"yaml":true},{"content":"Gets or sets the message for the event.","nodes":[{"pos":[0,39],"content":"Gets or sets the message for the event.","nodes":[{"content":"Gets or sets the message for the event.","pos":[0,39]}]}],"pos":[21953,21993],"yaml":true},{"content":"You can use standard .NET Framework substitution operators (for example, {1}) in the string). They will be replaced with the string representation of the corresponding part of the event payload.  \n  \n```  \n[Event(1, Message = \"Application Falure: {0}\", Level = EventLevel.Error, Keywords = Keywords.Diagnostic)]  \n        public void Failure(string message) { WriteEvent(1, message); }  \n  \n```","nodes":[{"pos":[0,194],"content":"You can use standard .NET Framework substitution operators (for example, {1}) in the string). They will be replaced with the string representation of the corresponding part of the event payload.","nodes":[{"content":"You can use standard .NET Framework substitution operators (for example, {1}) in the string). They will be replaced with the string representation of the corresponding part of the event payload.","pos":[0,194],"nodes":[{"content":"You can use standard .NET Framework substitution operators (for example, {1}) in the string).","pos":[0,93]},{"content":"They will be replaced with the string representation of the corresponding part of the event payload.","pos":[94,194]}]}]}],"pos":[22004,22409],"yaml":true,"extradata":"MT"},{"content":"The message for the event.","nodes":[{"pos":[0,26],"content":"The message for the event.","nodes":[{"content":"The message for the event.","pos":[0,26]}]}],"pos":[23400,23427],"yaml":true},{"content":"Gets or sets the operation code for the event.","nodes":[{"pos":[0,46],"content":"Gets or sets the operation code for the event.","nodes":[{"content":"Gets or sets the operation code for the event.","pos":[0,46]}]}],"pos":[24980,25027],"yaml":true},{"content":"One of the enumeration values that specifies the operation code.","nodes":[{"pos":[0,64],"content":"One of the enumeration values that specifies the operation code.","nodes":[{"content":"One of the enumeration values that specifies the operation code.","pos":[0,64]}]}],"pos":[26092,26157],"yaml":true},{"content":"Gets and sets the <xref href=\"System.Diagnostics.Tracing.EventTags\"></xref> value for this <xref href=\"System.Diagnostics.Tracing.EventAttribute\"></xref> object. An event tag is a user-defined value that is passed through when the event is logged.","nodes":[{"pos":[0,247],"content":"Gets and sets the <xref href=\"System.Diagnostics.Tracing.EventTags\"></xref> value for this <xref href=\"System.Diagnostics.Tracing.EventAttribute\"></xref> object. An event tag is a user-defined value that is passed through when the event is logged.","nodes":[{"content":"Gets and sets the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.Tracing.EventTags\"&gt;&lt;/xref&gt;</ph> value for this <ph id=\"ph2\">&lt;xref href=\"System.Diagnostics.Tracing.EventAttribute\"&gt;&lt;/xref&gt;</ph> object.","pos":[0,161],"source":"Gets and sets the <xref href=\"System.Diagnostics.Tracing.EventTags\"></xref> value for this <xref href=\"System.Diagnostics.Tracing.EventAttribute\"></xref> object."},{"content":"An event tag is a user-defined value that is passed through when the event is logged.","pos":[162,247]}]}],"pos":[27697,27945],"yaml":true},{"content":"Returns the <xref href=\"System.Diagnostics.Tracing.EventTags\"></xref> value.","nodes":[{"pos":[0,76],"content":"Returns the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.Tracing.EventTags\"&gt;&lt;/xref&gt;</ph> value.","source":"Returns the <xref href=\"System.Diagnostics.Tracing.EventTags\"></xref> value."}],"pos":[28111,28188],"yaml":true},{"content":"Gets or sets the task for the event.","nodes":[{"pos":[0,36],"content":"Gets or sets the task for the event.","nodes":[{"content":"Gets or sets the task for the event.","pos":[0,36]}]}],"pos":[29512,29549],"yaml":true},{"content":"The task for the event.","nodes":[{"pos":[0,23],"content":"The task for the event.","nodes":[{"content":"The task for the event.","pos":[0,23]}]}],"pos":[30597,30621],"yaml":true},{"content":"Gets or sets the version of the event.","nodes":[{"pos":[0,38],"content":"Gets or sets the version of the event.","nodes":[{"content":"Gets or sets the version of the event.","pos":[0,38]}]}],"pos":[32177,32216],"yaml":true},{"content":"The version of the event.","nodes":[{"pos":[0,25],"content":"The version of the event.","nodes":[{"content":"The version of the event.","pos":[0,25]}]}],"pos":[32328,32354],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.Tracing.EventAttribute\n  commentId: T:System.Diagnostics.Tracing.EventAttribute\n  id: EventAttribute\n  children:\n  - System.Diagnostics.Tracing.EventAttribute.#ctor(System.Int32)\n  - System.Diagnostics.Tracing.EventAttribute.ActivityOptions\n  - System.Diagnostics.Tracing.EventAttribute.Channel\n  - System.Diagnostics.Tracing.EventAttribute.EventId\n  - System.Diagnostics.Tracing.EventAttribute.Keywords\n  - System.Diagnostics.Tracing.EventAttribute.Level\n  - System.Diagnostics.Tracing.EventAttribute.Message\n  - System.Diagnostics.Tracing.EventAttribute.Opcode\n  - System.Diagnostics.Tracing.EventAttribute.Tags\n  - System.Diagnostics.Tracing.EventAttribute.Task\n  - System.Diagnostics.Tracing.EventAttribute.Version\n  langs:\n  - csharp\n  name: EventAttribute\n  nameWithType: EventAttribute\n  fullName: System.Diagnostics.Tracing.EventAttribute\n  type: Class\n  assemblies:\n  - System.Diagnostics.Tracing\n  - mscorlib\n  - netstandard\n  namespace: System.Diagnostics.Tracing\n  summary: Specifies additional event schema information for an event.\n  remarks: When you apply this attribute to an ETW event method defined on an <xref:System.Diagnostics.Tracing.EventSource>-derived class, you must call the <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method on the base class, passing the event ID, followed by the same arguments as the defined method is passed. You should follow the pattern shown in the following examples.\n  example:\n  - \"The following example shows how to use the <xref:System.Diagnostics.Tracing.EventAttribute> class to define a variety of events. This code example is part of a larger example provided for the <xref:System.Diagnostics.Tracing.EventSource> class.  \\n  \\n [!code-csharp[ETWTrace#5](~/samples/snippets/csharp/VS_Snippets_CLR/etwtrace/cs/program.cs#5)]\\n [!code-vb[ETWTrace#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/etwtrace/vb/program.vb#5)]  \\n  \\n [!code-csharp[ETWTrace#6](~/samples/snippets/csharp/VS_Snippets_CLR/etwtrace/cs/program.cs#6)]\\n [!code-vb[ETWTrace#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/etwtrace/vb/program.vb#6)]  \\n  \\n [!code-csharp[ETWTrace#7](~/samples/snippets/csharp/VS_Snippets_CLR/etwtrace/cs/program.cs#7)]\\n [!code-vb[ETWTrace#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/etwtrace/vb/program.vb#7)]  \\n  \\n [!code-csharp[ETWTrace#8](~/samples/snippets/csharp/VS_Snippets_CLR/etwtrace/cs/program.cs#8)]\\n [!code-vb[ETWTrace#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/etwtrace/vb/program.vb#8)]\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Method)]\n\n      public sealed class EventAttribute : Attribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  implements: []\n  inheritedMembers:\n  - System.Attribute.Equals(System.Object)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetHashCode\n  - System.Attribute.IsDefaultAttribute\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.Match(System.Object)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Attribute.TypeId\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.AttributeUsageAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Tracing/EventAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.Tracing.EventAttribute.#ctor(System.Int32)\n  commentId: M:System.Diagnostics.Tracing.EventAttribute.#ctor(System.Int32)\n  id: '#ctor(System.Int32)'\n  parent: System.Diagnostics.Tracing.EventAttribute\n  langs:\n  - csharp\n  name: EventAttribute(Int32)\n  nameWithType: EventAttribute.EventAttribute(Int32)\n  fullName: EventAttribute.EventAttribute(Int32)\n  type: Constructor\n  assemblies:\n  - System.Diagnostics.Tracing\n  - mscorlib\n  - netstandard\n  namespace: System.Diagnostics.Tracing\n  summary: Initializes a new instance of the <xref href=\"System.Diagnostics.Tracing.EventAttribute\"></xref> class with the specified event identifier.\n  remarks: ''\n  example:\n  - \"The following example shows how to use the <xref:System.Diagnostics.Tracing.EventAttribute.%23ctor%2A> constructor to specify events. This code example is part of a larger example provided for the <xref:System.Diagnostics.Tracing.EventSource> class.  \\n  \\n [!code-csharp[ETWTrace#1](~/samples/snippets/csharp/VS_Snippets_CLR/etwtrace/cs/program.cs#1)]\\n [!code-vb[ETWTrace#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/etwtrace/vb/program.vb#1)]  \\n  \\n [!code-csharp[ETWTrace#2](~/samples/snippets/csharp/VS_Snippets_CLR/etwtrace/cs/program.cs#2)]\\n [!code-vb[ETWTrace#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/etwtrace/vb/program.vb#2)]\"\n  syntax:\n    content: public EventAttribute (int eventId);\n    parameters:\n    - id: eventId\n      type: System.Int32\n      description: The event identifier for the event.\n  overload: System.Diagnostics.Tracing.EventAttribute.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Tracing/EventAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.Tracing.EventAttribute.ActivityOptions\n  commentId: P:System.Diagnostics.Tracing.EventAttribute.ActivityOptions\n  id: ActivityOptions\n  parent: System.Diagnostics.Tracing.EventAttribute\n  langs:\n  - csharp\n  name: ActivityOptions\n  nameWithType: EventAttribute.ActivityOptions\n  fullName: EventAttribute.ActivityOptions\n  type: Property\n  assemblies:\n  - System.Diagnostics.Tracing\n  - mscorlib\n  - netstandard\n  namespace: System.Diagnostics.Tracing\n  summary: Specifies the behavior of the start and stop events of an activity. An activity is the region of time in an app between the start and the stop.\n  syntax:\n    content: public System.Diagnostics.Tracing.EventActivityOptions ActivityOptions { get; set; }\n    return:\n      type: System.Diagnostics.Tracing.EventActivityOptions\n      description: Returns <xref href=\"System.Diagnostics.Tracing.EventActivityOptions\"></xref>.\n  overload: System.Diagnostics.Tracing.EventAttribute.ActivityOptions*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Tracing/EventAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.Tracing.EventAttribute.Channel\n  commentId: P:System.Diagnostics.Tracing.EventAttribute.Channel\n  id: Channel\n  parent: System.Diagnostics.Tracing.EventAttribute\n  langs:\n  - csharp\n  name: Channel\n  nameWithType: EventAttribute.Channel\n  fullName: EventAttribute.Channel\n  type: Property\n  assemblies:\n  - System.Diagnostics.Tracing\n  - mscorlib\n  - netstandard\n  namespace: System.Diagnostics.Tracing\n  summary: Gets or sets an additional event log where the event should be written.\n  syntax:\n    content: public System.Diagnostics.Tracing.EventChannel Channel { get; set; }\n    return:\n      type: System.Diagnostics.Tracing.EventChannel\n      description: An additional event log where the event should be written.\n  overload: System.Diagnostics.Tracing.EventAttribute.Channel*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Tracing/EventAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.Tracing.EventAttribute.EventId\n  commentId: P:System.Diagnostics.Tracing.EventAttribute.EventId\n  id: EventId\n  parent: System.Diagnostics.Tracing.EventAttribute\n  langs:\n  - csharp\n  name: EventId\n  nameWithType: EventAttribute.EventId\n  fullName: EventAttribute.EventId\n  type: Property\n  assemblies:\n  - System.Diagnostics.Tracing\n  - mscorlib\n  - netstandard\n  namespace: System.Diagnostics.Tracing\n  summary: Gets or sets the identifier for the event.\n  remarks: <xref:System.Diagnostics.Tracing.EventAttribute.EventId%2A> should be greater than 0 or less than 65535 or errors can occur in a tracing operation. If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events. You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.\n  syntax:\n    content: public int EventId { get; }\n    return:\n      type: System.Int32\n      description: The event identifier. This value should be between 0 and 65535.\n  overload: System.Diagnostics.Tracing.EventAttribute.EventId*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Tracing/EventAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.Tracing.EventAttribute.Keywords\n  commentId: P:System.Diagnostics.Tracing.EventAttribute.Keywords\n  id: Keywords\n  parent: System.Diagnostics.Tracing.EventAttribute\n  langs:\n  - csharp\n  name: Keywords\n  nameWithType: EventAttribute.Keywords\n  fullName: EventAttribute.Keywords\n  type: Property\n  assemblies:\n  - System.Diagnostics.Tracing\n  - mscorlib\n  - netstandard\n  namespace: System.Diagnostics.Tracing\n  summary: Gets or sets the keywords for the event.\n  remarks: ''\n  example:\n  - \"The following example shows how to use the <xref:System.Diagnostics.Tracing.EventAttribute.Keywords%2A> property to define event keywords. This code example is part of a larger example provided for the <xref:System.Diagnostics.Tracing.EventSource> class.  \\n  \\n [!code-csharp[ETWTrace#3](~/samples/snippets/csharp/VS_Snippets_CLR/etwtrace/cs/program.cs#3)]\\n [!code-vb[ETWTrace#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/etwtrace/vb/program.vb#3)]  \\n  \\n [!code-csharp[ETWTrace#5](~/samples/snippets/csharp/VS_Snippets_CLR/etwtrace/cs/program.cs#5)]\\n [!code-vb[ETWTrace#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/etwtrace/vb/program.vb#5)]  \\n  \\n [!code-csharp[ETWTrace#6](~/samples/snippets/csharp/VS_Snippets_CLR/etwtrace/cs/program.cs#6)]\\n [!code-vb[ETWTrace#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/etwtrace/vb/program.vb#6)]  \\n  \\n [!code-csharp[ETWTrace#7](~/samples/snippets/csharp/VS_Snippets_CLR/etwtrace/cs/program.cs#7)]\\n [!code-vb[ETWTrace#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/etwtrace/vb/program.vb#7)]\"\n  syntax:\n    content: public System.Diagnostics.Tracing.EventKeywords Keywords { get; set; }\n    return:\n      type: System.Diagnostics.Tracing.EventKeywords\n      description: A bitwise combination of the enumeration values.\n  overload: System.Diagnostics.Tracing.EventAttribute.Keywords*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Tracing/EventAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.Tracing.EventAttribute.Level\n  commentId: P:System.Diagnostics.Tracing.EventAttribute.Level\n  id: Level\n  parent: System.Diagnostics.Tracing.EventAttribute\n  langs:\n  - csharp\n  name: Level\n  nameWithType: EventAttribute.Level\n  fullName: EventAttribute.Level\n  type: Property\n  assemblies:\n  - System.Diagnostics.Tracing\n  - mscorlib\n  - netstandard\n  namespace: System.Diagnostics.Tracing\n  summary: Gets or sets the level for the event.\n  remarks: ''\n  example:\n  - \"The following example shows how to use the <xref:System.Diagnostics.Tracing.EventAttribute.Level%2A> property to specify event levels. This code example is part of a larger example provided for the <xref:System.Diagnostics.Tracing.EventSource> class.  \\n  \\n [!code-csharp[ETWTrace#5](~/samples/snippets/csharp/VS_Snippets_CLR/etwtrace/cs/program.cs#5)]\\n [!code-vb[ETWTrace#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/etwtrace/vb/program.vb#5)]  \\n  \\n [!code-csharp[ETWTrace#6](~/samples/snippets/csharp/VS_Snippets_CLR/etwtrace/cs/program.cs#6)]\\n [!code-vb[ETWTrace#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/etwtrace/vb/program.vb#6)]  \\n  \\n [!code-csharp[ETWTrace#11](~/samples/snippets/csharp/VS_Snippets_CLR/etwtrace/cs/program.cs#11)]\\n [!code-vb[ETWTrace#11](~/samples/snippets/visualbasic/VS_Snippets_CLR/etwtrace/vb/program.vb#11)]\"\n  syntax:\n    content: public System.Diagnostics.Tracing.EventLevel Level { get; set; }\n    return:\n      type: System.Diagnostics.Tracing.EventLevel\n      description: One of the enumeration values that specifies the level for the event.\n  overload: System.Diagnostics.Tracing.EventAttribute.Level*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Tracing/EventAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.Tracing.EventAttribute.Message\n  commentId: P:System.Diagnostics.Tracing.EventAttribute.Message\n  id: Message\n  parent: System.Diagnostics.Tracing.EventAttribute\n  langs:\n  - csharp\n  name: Message\n  nameWithType: EventAttribute.Message\n  fullName: EventAttribute.Message\n  type: Property\n  assemblies:\n  - System.Diagnostics.Tracing\n  - mscorlib\n  - netstandard\n  namespace: System.Diagnostics.Tracing\n  summary: Gets or sets the message for the event.\n  remarks: \"You can use standard .NET Framework substitution operators (for example, {1}) in the string). They will be replaced with the string representation of the corresponding part of the event payload.  \\n  \\n```  \\n[Event(1, Message = \\\"Application Falure: {0}\\\", Level = EventLevel.Error, Keywords = Keywords.Diagnostic)]  \\n        public void Failure(string message) { WriteEvent(1, message); }  \\n  \\n```\"\n  example:\n  - \"The following example shows how to use the <xref:System.Diagnostics.Tracing.EventAttribute.Message%2A> property to specify event messages. This code example is part of a larger example provided for the <xref:System.Diagnostics.Tracing.EventSource> class.  \\n  \\n [!code-csharp[ETWTrace#5](~/samples/snippets/csharp/VS_Snippets_CLR/etwtrace/cs/program.cs#5)]\\n [!code-vb[ETWTrace#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/etwtrace/vb/program.vb#5)]  \\n  \\n [!code-csharp[ETWTrace#6](~/samples/snippets/csharp/VS_Snippets_CLR/etwtrace/cs/program.cs#6)]\\n [!code-vb[ETWTrace#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/etwtrace/vb/program.vb#6)]  \\n  \\n [!code-csharp[ETWTrace#7](~/samples/snippets/csharp/VS_Snippets_CLR/etwtrace/cs/program.cs#7)]\\n [!code-vb[ETWTrace#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/etwtrace/vb/program.vb#7)]\"\n  syntax:\n    content: public string Message { get; set; }\n    return:\n      type: System.String\n      description: The message for the event.\n  overload: System.Diagnostics.Tracing.EventAttribute.Message*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Tracing/EventAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.Tracing.EventAttribute.Opcode\n  commentId: P:System.Diagnostics.Tracing.EventAttribute.Opcode\n  id: Opcode\n  parent: System.Diagnostics.Tracing.EventAttribute\n  langs:\n  - csharp\n  name: Opcode\n  nameWithType: EventAttribute.Opcode\n  fullName: EventAttribute.Opcode\n  type: Property\n  assemblies:\n  - System.Diagnostics.Tracing\n  - mscorlib\n  - netstandard\n  namespace: System.Diagnostics.Tracing\n  summary: Gets or sets the operation code for the event.\n  remarks: ''\n  example:\n  - \"The following example shows how to use the <xref:System.Diagnostics.Tracing.EventAttribute.Opcode%2A> property to specify operation codes. This code example is part of a larger example provided for the <xref:System.Diagnostics.Tracing.EventSource> class.  \\n  \\n [!code-csharp[ETWTrace#8](~/samples/snippets/csharp/VS_Snippets_CLR/etwtrace/cs/program.cs#8)]\\n [!code-vb[ETWTrace#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/etwtrace/vb/program.vb#8)]  \\n  \\n [!code-csharp[ETWTrace#9](~/samples/snippets/csharp/VS_Snippets_CLR/etwtrace/cs/program.cs#9)]\\n [!code-vb[ETWTrace#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/etwtrace/vb/program.vb#9)]  \\n  \\n [!code-csharp[ETWTrace#10](~/samples/snippets/csharp/VS_Snippets_CLR/etwtrace/cs/program.cs#10)]\\n [!code-vb[ETWTrace#10](~/samples/snippets/visualbasic/VS_Snippets_CLR/etwtrace/vb/program.vb#10)]\"\n  syntax:\n    content: public System.Diagnostics.Tracing.EventOpcode Opcode { get; set; }\n    return:\n      type: System.Diagnostics.Tracing.EventOpcode\n      description: One of the enumeration values that specifies the operation code.\n  overload: System.Diagnostics.Tracing.EventAttribute.Opcode*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Tracing/EventAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.Tracing.EventAttribute.Tags\n  commentId: P:System.Diagnostics.Tracing.EventAttribute.Tags\n  id: Tags\n  parent: System.Diagnostics.Tracing.EventAttribute\n  langs:\n  - csharp\n  name: Tags\n  nameWithType: EventAttribute.Tags\n  fullName: EventAttribute.Tags\n  type: Property\n  assemblies:\n  - System.Diagnostics.Tracing\n  - mscorlib\n  - netstandard\n  namespace: System.Diagnostics.Tracing\n  summary: Gets and sets the <xref href=\"System.Diagnostics.Tracing.EventTags\"></xref> value for this <xref href=\"System.Diagnostics.Tracing.EventAttribute\"></xref> object. An event tag is a user-defined value that is passed through when the event is logged.\n  syntax:\n    content: public System.Diagnostics.Tracing.EventTags Tags { get; set; }\n    return:\n      type: System.Diagnostics.Tracing.EventTags\n      description: Returns the <xref href=\"System.Diagnostics.Tracing.EventTags\"></xref> value.\n  overload: System.Diagnostics.Tracing.EventAttribute.Tags*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Tracing/EventAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.Tracing.EventAttribute.Task\n  commentId: P:System.Diagnostics.Tracing.EventAttribute.Task\n  id: Task\n  parent: System.Diagnostics.Tracing.EventAttribute\n  langs:\n  - csharp\n  name: Task\n  nameWithType: EventAttribute.Task\n  fullName: EventAttribute.Task\n  type: Property\n  assemblies:\n  - System.Diagnostics.Tracing\n  - mscorlib\n  - netstandard\n  namespace: System.Diagnostics.Tracing\n  summary: Gets or sets the task for the event.\n  remarks: ''\n  example:\n  - \"The following example shows how to use the <xref:System.Diagnostics.Tracing.EventAttribute.Task%2A> property to define event tasks. This code example is part of a larger example provided for the <xref:System.Diagnostics.Tracing.EventSource> class.  \\n  \\n [!code-csharp[ETWTrace#4](~/samples/snippets/csharp/VS_Snippets_CLR/etwtrace/cs/program.cs#4)]\\n [!code-vb[ETWTrace#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/etwtrace/vb/program.vb#4)]  \\n  \\n [!code-csharp[ETWTrace#8](~/samples/snippets/csharp/VS_Snippets_CLR/etwtrace/cs/program.cs#8)]\\n [!code-vb[ETWTrace#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/etwtrace/vb/program.vb#8)]  \\n  \\n [!code-csharp[ETWTrace#9](~/samples/snippets/csharp/VS_Snippets_CLR/etwtrace/cs/program.cs#9)]\\n [!code-vb[ETWTrace#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/etwtrace/vb/program.vb#9)]\"\n  syntax:\n    content: public System.Diagnostics.Tracing.EventTask Task { get; set; }\n    return:\n      type: System.Diagnostics.Tracing.EventTask\n      description: The task for the event.\n  overload: System.Diagnostics.Tracing.EventAttribute.Task*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Tracing/EventAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.Tracing.EventAttribute.Version\n  commentId: P:System.Diagnostics.Tracing.EventAttribute.Version\n  id: Version\n  parent: System.Diagnostics.Tracing.EventAttribute\n  langs:\n  - csharp\n  name: Version\n  nameWithType: EventAttribute.Version\n  fullName: EventAttribute.Version\n  type: Property\n  assemblies:\n  - System.Diagnostics.Tracing\n  - mscorlib\n  - netstandard\n  namespace: System.Diagnostics.Tracing\n  summary: Gets or sets the version of the event.\n  syntax:\n    content: public byte Version { get; set; }\n    return:\n      type: System.Byte\n      description: The version of the event.\n  overload: System.Diagnostics.Tracing.EventAttribute.Version*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Tracing/EventAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Attribute\n  parent: System\n  isExternal: false\n  name: Attribute\n  nameWithType: Attribute\n  fullName: System.Attribute\n- uid: System.Diagnostics.Tracing.EventAttribute.#ctor(System.Int32)\n  parent: System.Diagnostics.Tracing.EventAttribute\n  isExternal: false\n  name: EventAttribute(Int32)\n  nameWithType: EventAttribute.EventAttribute(Int32)\n  fullName: EventAttribute.EventAttribute(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Diagnostics.Tracing.EventAttribute.ActivityOptions\n  parent: System.Diagnostics.Tracing.EventAttribute\n  isExternal: false\n  name: ActivityOptions\n  nameWithType: EventAttribute.ActivityOptions\n  fullName: EventAttribute.ActivityOptions\n- uid: System.Diagnostics.Tracing.EventActivityOptions\n  parent: System.Diagnostics.Tracing\n  isExternal: false\n  name: EventActivityOptions\n  nameWithType: EventActivityOptions\n  fullName: System.Diagnostics.Tracing.EventActivityOptions\n- uid: System.Diagnostics.Tracing.EventAttribute.Channel\n  parent: System.Diagnostics.Tracing.EventAttribute\n  isExternal: false\n  name: Channel\n  nameWithType: EventAttribute.Channel\n  fullName: EventAttribute.Channel\n- uid: System.Diagnostics.Tracing.EventChannel\n  parent: System.Diagnostics.Tracing\n  isExternal: false\n  name: EventChannel\n  nameWithType: EventChannel\n  fullName: System.Diagnostics.Tracing.EventChannel\n- uid: System.Diagnostics.Tracing.EventAttribute.EventId\n  parent: System.Diagnostics.Tracing.EventAttribute\n  isExternal: false\n  name: EventId\n  nameWithType: EventAttribute.EventId\n  fullName: EventAttribute.EventId\n- uid: System.Diagnostics.Tracing.EventAttribute.Keywords\n  parent: System.Diagnostics.Tracing.EventAttribute\n  isExternal: false\n  name: Keywords\n  nameWithType: EventAttribute.Keywords\n  fullName: EventAttribute.Keywords\n- uid: System.Diagnostics.Tracing.EventKeywords\n  parent: System.Diagnostics.Tracing\n  isExternal: false\n  name: EventKeywords\n  nameWithType: EventKeywords\n  fullName: System.Diagnostics.Tracing.EventKeywords\n- uid: System.Diagnostics.Tracing.EventAttribute.Level\n  parent: System.Diagnostics.Tracing.EventAttribute\n  isExternal: false\n  name: Level\n  nameWithType: EventAttribute.Level\n  fullName: EventAttribute.Level\n- uid: System.Diagnostics.Tracing.EventLevel\n  parent: System.Diagnostics.Tracing\n  isExternal: false\n  name: EventLevel\n  nameWithType: EventLevel\n  fullName: System.Diagnostics.Tracing.EventLevel\n- uid: System.Diagnostics.Tracing.EventAttribute.Message\n  parent: System.Diagnostics.Tracing.EventAttribute\n  isExternal: false\n  name: Message\n  nameWithType: EventAttribute.Message\n  fullName: EventAttribute.Message\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.Tracing.EventAttribute.Opcode\n  parent: System.Diagnostics.Tracing.EventAttribute\n  isExternal: false\n  name: Opcode\n  nameWithType: EventAttribute.Opcode\n  fullName: EventAttribute.Opcode\n- uid: System.Diagnostics.Tracing.EventOpcode\n  parent: System.Diagnostics.Tracing\n  isExternal: false\n  name: EventOpcode\n  nameWithType: EventOpcode\n  fullName: System.Diagnostics.Tracing.EventOpcode\n- uid: System.Diagnostics.Tracing.EventAttribute.Tags\n  parent: System.Diagnostics.Tracing.EventAttribute\n  isExternal: false\n  name: Tags\n  nameWithType: EventAttribute.Tags\n  fullName: EventAttribute.Tags\n- uid: System.Diagnostics.Tracing.EventTags\n  parent: System.Diagnostics.Tracing\n  isExternal: false\n  name: EventTags\n  nameWithType: EventTags\n  fullName: System.Diagnostics.Tracing.EventTags\n- uid: System.Diagnostics.Tracing.EventAttribute.Task\n  parent: System.Diagnostics.Tracing.EventAttribute\n  isExternal: false\n  name: Task\n  nameWithType: EventAttribute.Task\n  fullName: EventAttribute.Task\n- uid: System.Diagnostics.Tracing.EventTask\n  parent: System.Diagnostics.Tracing\n  isExternal: false\n  name: EventTask\n  nameWithType: EventTask\n  fullName: System.Diagnostics.Tracing.EventTask\n- uid: System.Diagnostics.Tracing.EventAttribute.Version\n  parent: System.Diagnostics.Tracing.EventAttribute\n  isExternal: false\n  name: Version\n  nameWithType: EventAttribute.Version\n  fullName: EventAttribute.Version\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Diagnostics.Tracing.EventAttribute.#ctor*\n  parent: System.Diagnostics.Tracing.EventAttribute\n  isExternal: false\n  name: EventAttribute\n  nameWithType: EventAttribute.EventAttribute\n  fullName: EventAttribute.EventAttribute\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Tracing/EventAttribute.xml\n- uid: System.Diagnostics.Tracing.EventAttribute.ActivityOptions*\n  parent: System.Diagnostics.Tracing.EventAttribute\n  isExternal: false\n  name: ActivityOptions\n  nameWithType: EventAttribute.ActivityOptions\n  fullName: EventAttribute.ActivityOptions\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Tracing/EventAttribute.xml\n- uid: System.Diagnostics.Tracing.EventAttribute.Channel*\n  parent: System.Diagnostics.Tracing.EventAttribute\n  isExternal: false\n  name: Channel\n  nameWithType: EventAttribute.Channel\n  fullName: EventAttribute.Channel\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Tracing/EventAttribute.xml\n- uid: System.Diagnostics.Tracing.EventAttribute.EventId*\n  parent: System.Diagnostics.Tracing.EventAttribute\n  isExternal: false\n  name: EventId\n  nameWithType: EventAttribute.EventId\n  fullName: EventAttribute.EventId\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Tracing/EventAttribute.xml\n- uid: System.Diagnostics.Tracing.EventAttribute.Keywords*\n  parent: System.Diagnostics.Tracing.EventAttribute\n  isExternal: false\n  name: Keywords\n  nameWithType: EventAttribute.Keywords\n  fullName: EventAttribute.Keywords\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Tracing/EventAttribute.xml\n- uid: System.Diagnostics.Tracing.EventAttribute.Level*\n  parent: System.Diagnostics.Tracing.EventAttribute\n  isExternal: false\n  name: Level\n  nameWithType: EventAttribute.Level\n  fullName: EventAttribute.Level\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Tracing/EventAttribute.xml\n- uid: System.Diagnostics.Tracing.EventAttribute.Message*\n  parent: System.Diagnostics.Tracing.EventAttribute\n  isExternal: false\n  name: Message\n  nameWithType: EventAttribute.Message\n  fullName: EventAttribute.Message\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Tracing/EventAttribute.xml\n- uid: System.Diagnostics.Tracing.EventAttribute.Opcode*\n  parent: System.Diagnostics.Tracing.EventAttribute\n  isExternal: false\n  name: Opcode\n  nameWithType: EventAttribute.Opcode\n  fullName: EventAttribute.Opcode\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Tracing/EventAttribute.xml\n- uid: System.Diagnostics.Tracing.EventAttribute.Tags*\n  parent: System.Diagnostics.Tracing.EventAttribute\n  isExternal: false\n  name: Tags\n  nameWithType: EventAttribute.Tags\n  fullName: EventAttribute.Tags\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Tracing/EventAttribute.xml\n- uid: System.Diagnostics.Tracing.EventAttribute.Task*\n  parent: System.Diagnostics.Tracing.EventAttribute\n  isExternal: false\n  name: Task\n  nameWithType: EventAttribute.Task\n  fullName: EventAttribute.Task\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Tracing/EventAttribute.xml\n- uid: System.Diagnostics.Tracing.EventAttribute.Version*\n  parent: System.Diagnostics.Tracing.EventAttribute\n  isExternal: false\n  name: Version\n  nameWithType: EventAttribute.Version\n  fullName: EventAttribute.Version\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Tracing/EventAttribute.xml\n- uid: System.Attribute.Equals(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Attribute.Equals(Object)\n  fullName: Attribute.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Attribute.GetHashCode\n  parent: System.Attribute\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Attribute.GetHashCode()\n  fullName: Attribute.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type)\n  fullName: Attribute.GetCustomAttribute(Module, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type)\n  fullName: Attribute.GetCustomAttributes(Module, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module)\n  nameWithType: Attribute.GetCustomAttributes(Module)\n  fullName: Attribute.GetCustomAttributes(Module)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo)\n  fullName: Attribute.GetCustomAttributes(MemberInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly)\n  nameWithType: Attribute.GetCustomAttributes(Assembly)\n  fullName: Attribute.GetCustomAttributes(Assembly)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type)\n- uid: System.Attribute.IsDefaultAttribute\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefaultAttribute()\n  nameWithType: Attribute.IsDefaultAttribute()\n  fullName: Attribute.IsDefaultAttribute()\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Module, Type, Boolean)\n  fullName: Attribute.IsDefined(Module, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(MemberInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)\n  fullName: Attribute.IsDefined(Assembly, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type)\n  fullName: Attribute.IsDefined(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type)\n  nameWithType: Attribute.IsDefined(Module, Type)\n  fullName: Attribute.IsDefined(Module, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type)\n  nameWithType: Attribute.IsDefined(Assembly, Type)\n  fullName: Attribute.IsDefined(Assembly, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type)\n  fullName: Attribute.IsDefined(ParameterInfo, Type)\n- uid: System.Attribute.Match(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Match(Object)\n  nameWithType: Attribute.Match(Object)\n  fullName: Attribute.Match(Object)\n- uid: System.Attribute.TypeId\n  parent: System.Attribute\n  isExternal: false\n  name: TypeId\n  nameWithType: Attribute.TypeId\n  fullName: Attribute.TypeId\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfoCount(UInt32)\n  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)\n  fullName: Attribute._Attribute.GetTypeInfoCount(UInt32)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n"}