{"nodes":[{"content":"Provides helper methods for operations that match string patterns.","nodes":[{"pos":[0,66],"content":"Provides helper methods for operations that match string patterns.","nodes":[{"content":"Provides helper methods for operations that match string patterns.","pos":[0,66]}]}],"pos":[755,822],"yaml":true},{"content":"Creates a search pattern string where the specified text can have other text before and following it.","nodes":[{"pos":[0,101],"content":"Creates a search pattern string where the specified text can have other text before and following it.","nodes":[{"content":"Creates a search pattern string where the specified text can have other text before and following it.","pos":[0,101]}]}],"pos":[2427,2529],"yaml":true},{"content":"The string to insert into the search pattern string.","nodes":[{"pos":[0,52],"content":"The string to insert into the search pattern string.","nodes":[{"content":"The string to insert into the search pattern string.","pos":[0,52]}]}],"pos":[2702,2755],"yaml":true},{"content":"The character to use to escape wildcard characters.","nodes":[{"pos":[0,51],"content":"The character to use to escape wildcard characters.","nodes":[{"content":"The character to use to escape wildcard characters.","pos":[0,51]}]}],"pos":[2815,2867],"yaml":true},{"content":"A search pattern string that contains the specified string and the '%' character before and after it.","nodes":[{"pos":[0,101],"content":"A search pattern string that contains the specified string and the '%' character before and after it.","nodes":[{"content":"A search pattern string that contains the specified string and the '%' character before and after it.","pos":[0,101]}]}],"pos":[2924,3026],"yaml":true},{"content":"Creates a search pattern string where the specified text can have other text before it but not following it.","nodes":[{"pos":[0,108],"content":"Creates a search pattern string where the specified text can have other text before it but not following it.","nodes":[{"content":"Creates a search pattern string where the specified text can have other text before it but not following it.","pos":[0,108]}]}],"pos":[4326,4435],"yaml":true},{"content":"The string to insert into the search pattern string.","nodes":[{"pos":[0,52],"content":"The string to insert into the search pattern string.","nodes":[{"content":"The string to insert into the search pattern string.","pos":[0,52]}]}],"pos":[4608,4661],"yaml":true},{"content":"The character to use to escape wildcard characters.","nodes":[{"pos":[0,51],"content":"The character to use to escape wildcard characters.","nodes":[{"content":"The character to use to escape wildcard characters.","pos":[0,51]}]}],"pos":[4721,4773],"yaml":true},{"content":"A search pattern string that contains the '%' character followed by the specified string.","nodes":[{"pos":[0,89],"content":"A search pattern string that contains the '%' character followed by the specified string.","nodes":[{"content":"A search pattern string that contains the '%' character followed by the specified string.","pos":[0,89]}]}],"pos":[4830,4920],"yaml":true},{"content":"Creates a search pattern string where the specified text can have other text after it but not before it.","nodes":[{"pos":[0,104],"content":"Creates a search pattern string where the specified text can have other text after it but not before it.","nodes":[{"content":"Creates a search pattern string where the specified text can have other text after it but not before it.","pos":[0,104]}]}],"pos":[6232,6337],"yaml":true},{"content":"The string to insert into the search pattern string.","nodes":[{"pos":[0,52],"content":"The string to insert into the search pattern string.","nodes":[{"content":"The string to insert into the search pattern string.","pos":[0,52]}]}],"pos":[6512,6565],"yaml":true},{"content":"The character to use to escape wildcard characters.","nodes":[{"pos":[0,51],"content":"The character to use to escape wildcard characters.","nodes":[{"content":"The character to use to escape wildcard characters.","pos":[0,51]}]}],"pos":[6625,6677],"yaml":true},{"content":"A search pattern string that contains the specified string followed by the '%' character.","nodes":[{"pos":[0,89],"content":"A search pattern string that contains the specified string followed by the '%' character.","nodes":[{"content":"A search pattern string that contains the specified string followed by the '%' character.","pos":[0,89]}]}],"pos":[6734,6824],"yaml":true},{"content":"Translates a search pattern for the [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)] `Like` operator to a search pattern for the [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] `LIKE` operator.","nodes":[{"pos":[0,194],"content":"Translates a search pattern for the <ph id=\"ph1\">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> <ph id=\"ph2\">`Like`</ph> operator to a search pattern for the <ph id=\"ph3\">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> <ph id=\"ph4\">`LIKE`</ph> operator.","source":"Translates a search pattern for the [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)] `Like` operator to a search pattern for the [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] `LIKE` operator."}],"pos":[8114,8309],"yaml":true},{"content":"The [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)] `Like` search pattern to translate to a [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] `LIKE` search pattern.","nodes":[{"pos":[0,164],"content":"The <ph id=\"ph1\">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> <ph id=\"ph2\">`Like`</ph> search pattern to translate to a <ph id=\"ph3\">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> <ph id=\"ph4\">`LIKE`</ph> search pattern.","source":"The [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)] `Like` search pattern to translate to a [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] `LIKE` search pattern."}],"pos":[8486,8651],"yaml":true},{"content":"The character to use to escape special SQL characters or the escape character itself.","nodes":[{"pos":[0,85],"content":"The character to use to escape special SQL characters or the escape character itself.","nodes":[{"content":"The character to use to escape special SQL characters or the escape character itself.","pos":[0,85]}]}],"pos":[8711,8797],"yaml":true},{"content":"A search pattern for the [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] `LIKE` operator that corresponds to the specified [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)] `Like` search pattern.","nodes":[{"pos":[0,195],"content":"A search pattern for the <ph id=\"ph1\">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> <ph id=\"ph2\">`LIKE`</ph> operator that corresponds to the specified <ph id=\"ph3\">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> <ph id=\"ph4\">`Like`</ph> search pattern.","source":"A search pattern for the [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] `LIKE` operator that corresponds to the specified [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)] `Like` search pattern."}],"pos":[8854,9050],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Linq.SqlClient.SqlHelpers\n  commentId: T:System.Data.Linq.SqlClient.SqlHelpers\n  id: SqlHelpers\n  children:\n  - System.Data.Linq.SqlClient.SqlHelpers.GetStringContainsPattern(System.String,System.Char)\n  - System.Data.Linq.SqlClient.SqlHelpers.GetStringEndsWithPattern(System.String,System.Char)\n  - System.Data.Linq.SqlClient.SqlHelpers.GetStringStartsWithPattern(System.String,System.Char)\n  - System.Data.Linq.SqlClient.SqlHelpers.TranslateVBLikePattern(System.String,System.Char)\n  langs:\n  - csharp\n  name: SqlHelpers\n  nameWithType: SqlHelpers\n  fullName: System.Data.Linq.SqlClient.SqlHelpers\n  type: Class\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.SqlClient\n  summary: Provides helper methods for operations that match string patterns.\n  syntax:\n    content: public static class SqlHelpers\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.SqlClient/SqlHelpers.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.SqlClient.SqlHelpers.GetStringContainsPattern(System.String,System.Char)\n  commentId: M:System.Data.Linq.SqlClient.SqlHelpers.GetStringContainsPattern(System.String,System.Char)\n  id: GetStringContainsPattern(System.String,System.Char)\n  parent: System.Data.Linq.SqlClient.SqlHelpers\n  langs:\n  - csharp\n  name: GetStringContainsPattern(String, Char)\n  nameWithType: SqlHelpers.GetStringContainsPattern(String, Char)\n  fullName: SqlHelpers.GetStringContainsPattern(String, Char)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.SqlClient\n  summary: Creates a search pattern string where the specified text can have other text before and following it.\n  syntax:\n    content: public static string GetStringContainsPattern (string text, char escape);\n    parameters:\n    - id: text\n      type: System.String\n      description: The string to insert into the search pattern string.\n    - id: escape\n      type: System.Char\n      description: The character to use to escape wildcard characters.\n    return:\n      type: System.String\n      description: A search pattern string that contains the specified string and the '%' character before and after it.\n  overload: System.Data.Linq.SqlClient.SqlHelpers.GetStringContainsPattern*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.SqlClient/SqlHelpers.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.SqlClient.SqlHelpers.GetStringEndsWithPattern(System.String,System.Char)\n  commentId: M:System.Data.Linq.SqlClient.SqlHelpers.GetStringEndsWithPattern(System.String,System.Char)\n  id: GetStringEndsWithPattern(System.String,System.Char)\n  parent: System.Data.Linq.SqlClient.SqlHelpers\n  langs:\n  - csharp\n  name: GetStringEndsWithPattern(String, Char)\n  nameWithType: SqlHelpers.GetStringEndsWithPattern(String, Char)\n  fullName: SqlHelpers.GetStringEndsWithPattern(String, Char)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.SqlClient\n  summary: Creates a search pattern string where the specified text can have other text before it but not following it.\n  syntax:\n    content: public static string GetStringEndsWithPattern (string text, char escape);\n    parameters:\n    - id: text\n      type: System.String\n      description: The string to insert into the search pattern string.\n    - id: escape\n      type: System.Char\n      description: The character to use to escape wildcard characters.\n    return:\n      type: System.String\n      description: A search pattern string that contains the '%' character followed by the specified string.\n  overload: System.Data.Linq.SqlClient.SqlHelpers.GetStringEndsWithPattern*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.SqlClient/SqlHelpers.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.SqlClient.SqlHelpers.GetStringStartsWithPattern(System.String,System.Char)\n  commentId: M:System.Data.Linq.SqlClient.SqlHelpers.GetStringStartsWithPattern(System.String,System.Char)\n  id: GetStringStartsWithPattern(System.String,System.Char)\n  parent: System.Data.Linq.SqlClient.SqlHelpers\n  langs:\n  - csharp\n  name: GetStringStartsWithPattern(String, Char)\n  nameWithType: SqlHelpers.GetStringStartsWithPattern(String, Char)\n  fullName: SqlHelpers.GetStringStartsWithPattern(String, Char)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.SqlClient\n  summary: Creates a search pattern string where the specified text can have other text after it but not before it.\n  syntax:\n    content: public static string GetStringStartsWithPattern (string text, char escape);\n    parameters:\n    - id: text\n      type: System.String\n      description: The string to insert into the search pattern string.\n    - id: escape\n      type: System.Char\n      description: The character to use to escape wildcard characters.\n    return:\n      type: System.String\n      description: A search pattern string that contains the specified string followed by the '%' character.\n  overload: System.Data.Linq.SqlClient.SqlHelpers.GetStringStartsWithPattern*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.SqlClient/SqlHelpers.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.SqlClient.SqlHelpers.TranslateVBLikePattern(System.String,System.Char)\n  commentId: M:System.Data.Linq.SqlClient.SqlHelpers.TranslateVBLikePattern(System.String,System.Char)\n  id: TranslateVBLikePattern(System.String,System.Char)\n  parent: System.Data.Linq.SqlClient.SqlHelpers\n  langs:\n  - csharp\n  name: TranslateVBLikePattern(String, Char)\n  nameWithType: SqlHelpers.TranslateVBLikePattern(String, Char)\n  fullName: SqlHelpers.TranslateVBLikePattern(String, Char)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.SqlClient\n  summary: Translates a search pattern for the [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)] `Like` operator to a search pattern for the [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] `LIKE` operator.\n  syntax:\n    content: public static string TranslateVBLikePattern (string pattern, char escape);\n    parameters:\n    - id: pattern\n      type: System.String\n      description: The [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)] `Like` search pattern to translate to a [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] `LIKE` search pattern.\n    - id: escape\n      type: System.Char\n      description: The character to use to escape special SQL characters or the escape character itself.\n    return:\n      type: System.String\n      description: A search pattern for the [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] `LIKE` operator that corresponds to the specified [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)] `Like` search pattern.\n  overload: System.Data.Linq.SqlClient.SqlHelpers.TranslateVBLikePattern*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.SqlClient/SqlHelpers.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Data.Linq.SqlClient.SqlHelpers.GetStringContainsPattern(System.String,System.Char)\n  parent: System.Data.Linq.SqlClient.SqlHelpers\n  isExternal: false\n  name: GetStringContainsPattern(String, Char)\n  nameWithType: SqlHelpers.GetStringContainsPattern(String, Char)\n  fullName: SqlHelpers.GetStringContainsPattern(String, Char)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Char\n  parent: System\n  isExternal: false\n  name: Char\n  nameWithType: Char\n  fullName: System.Char\n- uid: System.Data.Linq.SqlClient.SqlHelpers.GetStringEndsWithPattern(System.String,System.Char)\n  parent: System.Data.Linq.SqlClient.SqlHelpers\n  isExternal: false\n  name: GetStringEndsWithPattern(String, Char)\n  nameWithType: SqlHelpers.GetStringEndsWithPattern(String, Char)\n  fullName: SqlHelpers.GetStringEndsWithPattern(String, Char)\n- uid: System.Data.Linq.SqlClient.SqlHelpers.GetStringStartsWithPattern(System.String,System.Char)\n  parent: System.Data.Linq.SqlClient.SqlHelpers\n  isExternal: false\n  name: GetStringStartsWithPattern(String, Char)\n  nameWithType: SqlHelpers.GetStringStartsWithPattern(String, Char)\n  fullName: SqlHelpers.GetStringStartsWithPattern(String, Char)\n- uid: System.Data.Linq.SqlClient.SqlHelpers.TranslateVBLikePattern(System.String,System.Char)\n  parent: System.Data.Linq.SqlClient.SqlHelpers\n  isExternal: false\n  name: TranslateVBLikePattern(String, Char)\n  nameWithType: SqlHelpers.TranslateVBLikePattern(String, Char)\n  fullName: SqlHelpers.TranslateVBLikePattern(String, Char)\n- uid: System.Data.Linq.SqlClient.SqlHelpers.GetStringContainsPattern*\n  parent: System.Data.Linq.SqlClient.SqlHelpers\n  isExternal: false\n  name: GetStringContainsPattern\n  nameWithType: SqlHelpers.GetStringContainsPattern\n  fullName: SqlHelpers.GetStringContainsPattern\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.SqlClient/SqlHelpers.xml\n- uid: System.Data.Linq.SqlClient.SqlHelpers.GetStringEndsWithPattern*\n  parent: System.Data.Linq.SqlClient.SqlHelpers\n  isExternal: false\n  name: GetStringEndsWithPattern\n  nameWithType: SqlHelpers.GetStringEndsWithPattern\n  fullName: SqlHelpers.GetStringEndsWithPattern\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.SqlClient/SqlHelpers.xml\n- uid: System.Data.Linq.SqlClient.SqlHelpers.GetStringStartsWithPattern*\n  parent: System.Data.Linq.SqlClient.SqlHelpers\n  isExternal: false\n  name: GetStringStartsWithPattern\n  nameWithType: SqlHelpers.GetStringStartsWithPattern\n  fullName: SqlHelpers.GetStringStartsWithPattern\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.SqlClient/SqlHelpers.xml\n- uid: System.Data.Linq.SqlClient.SqlHelpers.TranslateVBLikePattern*\n  parent: System.Data.Linq.SqlClient.SqlHelpers\n  isExternal: false\n  name: TranslateVBLikePattern\n  nameWithType: SqlHelpers.TranslateVBLikePattern\n  fullName: SqlHelpers.TranslateVBLikePattern\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.SqlClient/SqlHelpers.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}