{"nodes":[{"content":"Indicates the set of security rules the common language runtime should enforce for an assembly.","nodes":[{"pos":[0,95],"content":"Indicates the set of security rules the common language runtime should enforce for an assembly.","nodes":[{"content":"Indicates the set of security rules the common language runtime should enforce for an assembly.","pos":[0,95]}]}],"pos":[638,734],"yaml":true},{"content":"This class indicates which set of security rules the common language runtime should enforce for an assembly. For example, an assembly that is marked with `[SecurityRules(SecurityRuleSet.Level1)]` uses the .NET Framework version 2.0 transparency rules, where public security-critical types and members are treated as security-safe-critical outside the assembly. This requires security-critical types and members to perform a link demand for full trust to enforce security-critical behavior when they are accessed by external callers. Typically, level 1 rules should be used only for compatibility, such as for version 2.0 assemblies. For more information about level 1 behavior, see [Security-Transparent Code, Level 1](~/docs/framework/misc/security-transparent-code-level-1.md). For information about level 2 behavior, see [Security-Transparent Code, Level 2](~/docs/framework/misc/security-transparent-code-level-2.md).","nodes":[{"pos":[0,921],"content":"This class indicates which set of security rules the common language runtime should enforce for an assembly. For example, an assembly that is marked with `[SecurityRules(SecurityRuleSet.Level1)]` uses the .NET Framework version 2.0 transparency rules, where public security-critical types and members are treated as security-safe-critical outside the assembly. This requires security-critical types and members to perform a link demand for full trust to enforce security-critical behavior when they are accessed by external callers. Typically, level 1 rules should be used only for compatibility, such as for version 2.0 assemblies. For more information about level 1 behavior, see [Security-Transparent Code, Level 1](~/docs/framework/misc/security-transparent-code-level-1.md). For information about level 2 behavior, see [Security-Transparent Code, Level 2](~/docs/framework/misc/security-transparent-code-level-2.md).","nodes":[{"content":"This class indicates which set of security rules the common language runtime should enforce for an assembly.","pos":[0,108]},{"content":"For example, an assembly that is marked with <ph id=\"ph1\">`[SecurityRules(SecurityRuleSet.Level1)]`</ph> uses the .NET Framework version 2.0 transparency rules, where public security-critical types and members are treated as security-safe-critical outside the assembly.","pos":[109,360],"source":" For example, an assembly that is marked with `[SecurityRules(SecurityRuleSet.Level1)]` uses the .NET Framework version 2.0 transparency rules, where public security-critical types and members are treated as security-safe-critical outside the assembly."},{"content":"This requires security-critical types and members to perform a link demand for full trust to enforce security-critical behavior when they are accessed by external callers.","pos":[361,532]},{"content":"Typically, level 1 rules should be used only for compatibility, such as for version 2.0 assemblies.","pos":[533,632]},{"content":"For more information about level 1 behavior, see <bpt id=\"p1\">[</bpt>Security-Transparent Code, Level 1<ept id=\"p1\">](~/docs/framework/misc/security-transparent-code-level-1.md)</ept>.","pos":[633,779],"source":" For more information about level 1 behavior, see [Security-Transparent Code, Level 1](~/docs/framework/misc/security-transparent-code-level-1.md)."},{"content":"For information about level 2 behavior, see <bpt id=\"p1\">[</bpt>Security-Transparent Code, Level 2<ept id=\"p1\">](~/docs/framework/misc/security-transparent-code-level-2.md)</ept>.","pos":[780,921],"source":" For information about level 2 behavior, see [Security-Transparent Code, Level 2](~/docs/framework/misc/security-transparent-code-level-2.md)."}]}],"pos":[745,1667],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Security.SecurityRulesAttribute\"></xref> class using the specified rule set value.","nodes":[{"pos":[0,135],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.SecurityRulesAttribute\"&gt;&lt;/xref&gt;</ph> class using the specified rule set value.","source":"Initializes a new instance of the <xref href=\"System.Security.SecurityRulesAttribute\"></xref> class using the specified rule set value."}],"pos":[6956,7092],"yaml":true},{"content":"When you specify the `ruleSet` parameter, use <xref:System.Security.SecurityRuleSet.Level1> for .NET Framework version 2.0 rules or <xref:System.Security.SecurityRuleSet.Level2> for [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] rules. For more information about <xref:System.Security.SecurityRuleSet.Level1> behavior, see [Security-Transparent Code, Level 1](~/docs/framework/misc/security-transparent-code-level-1.md). For information about <xref:System.Security.SecurityRuleSet.Level2> behavior, see [Security-Transparent Code, Level 2](~/docs/framework/misc/security-transparent-code-level-2.md).","nodes":[{"pos":[0,611],"content":"When you specify the `ruleSet` parameter, use <xref:System.Security.SecurityRuleSet.Level1> for .NET Framework version 2.0 rules or <xref:System.Security.SecurityRuleSet.Level2> for [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] rules. For more information about <xref:System.Security.SecurityRuleSet.Level1> behavior, see [Security-Transparent Code, Level 1](~/docs/framework/misc/security-transparent-code-level-1.md). For information about <xref:System.Security.SecurityRuleSet.Level2> behavior, see [Security-Transparent Code, Level 2](~/docs/framework/misc/security-transparent-code-level-2.md).","nodes":[{"content":"When you specify the <ph id=\"ph1\">`ruleSet`</ph> parameter, use <ph id=\"ph2\">&lt;xref:System.Security.SecurityRuleSet.Level1&gt;</ph> for .NET Framework version 2.0 rules or <ph id=\"ph3\">&lt;xref:System.Security.SecurityRuleSet.Level2&gt;</ph> for <ph id=\"ph4\">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> rules.","pos":[0,246],"source":"When you specify the `ruleSet` parameter, use <xref:System.Security.SecurityRuleSet.Level1> for .NET Framework version 2.0 rules or <xref:System.Security.SecurityRuleSet.Level2> for [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] rules."},{"content":"For more information about <ph id=\"ph1\">&lt;xref:System.Security.SecurityRuleSet.Level1&gt;</ph> behavior, see <bpt id=\"p1\">[</bpt>Security-Transparent Code, Level 1<ept id=\"p1\">](~/docs/framework/misc/security-transparent-code-level-1.md)</ept>.","pos":[247,431],"source":" For more information about <xref:System.Security.SecurityRuleSet.Level1> behavior, see [Security-Transparent Code, Level 1](~/docs/framework/misc/security-transparent-code-level-1.md)."},{"content":"For information about <ph id=\"ph1\">&lt;xref:System.Security.SecurityRuleSet.Level2&gt;</ph> behavior, see <bpt id=\"p1\">[</bpt>Security-Transparent Code, Level 2<ept id=\"p1\">](~/docs/framework/misc/security-transparent-code-level-2.md)</ept>.","pos":[432,611],"source":" For information about <xref:System.Security.SecurityRuleSet.Level2> behavior, see [Security-Transparent Code, Level 2](~/docs/framework/misc/security-transparent-code-level-2.md)."}]}],"pos":[7103,7715],"yaml":true,"extradata":"MT"},{"content":"One of the enumeration values that specifies the transparency rules set.","nodes":[{"pos":[0,72],"content":"One of the enumeration values that specifies the transparency rules set.","nodes":[{"content":"One of the enumeration values that specifies the transparency rules set.","pos":[0,72]}]}],"pos":[7908,7981],"yaml":true},{"content":"Gets the rule set to be applied.","nodes":[{"pos":[0,32],"content":"Gets the rule set to be applied.","nodes":[{"content":"Gets the rule set to be applied.","pos":[0,32]}]}],"pos":[9212,9245],"yaml":true},{"content":"One of the enumeration values that specifies the transparency rules to be applied.","nodes":[{"pos":[0,82],"content":"One of the enumeration values that specifies the transparency rules to be applied.","nodes":[{"content":"One of the enumeration values that specifies the transparency rules to be applied.","pos":[0,82]}]}],"pos":[9399,9482],"yaml":true},{"content":"Determines whether fully trusted transparent code should skip Microsoft intermediate language (MSIL) verification.","nodes":[{"pos":[0,114],"content":"Determines whether fully trusted transparent code should skip Microsoft intermediate language (MSIL) verification.","nodes":[{"content":"Determines whether fully trusted transparent code should skip Microsoft intermediate language (MSIL) verification.","pos":[0,114]}]}],"pos":[10835,10950],"yaml":true},{"content":"This property should be used only for optimization, because security guarantees made for transparent code cannot be enforced if the code is unverifiable.  \n  \n If you use this property to skip MSIL verification for an assembly, use the `transparent` option in the  to statically verify that the assembly's transparent code meets type safety requirements.","nodes":[{"pos":[0,153],"content":"This property should be used only for optimization, because security guarantees made for transparent code cannot be enforced if the code is unverifiable.","nodes":[{"content":"This property should be used only for optimization, because security guarantees made for transparent code cannot be enforced if the code is unverifiable.","pos":[0,153]}]},{"pos":[160,354],"content":"If you use this property to skip MSIL verification for an assembly, use the <ph id=\"ph1\">`transparent`</ph> option in the  to statically verify that the assembly's transparent code meets type safety requirements.","source":"If you use this property to skip MSIL verification for an assembly, use the `transparent` option in the  to statically verify that the assembly's transparent code meets type safety requirements."}],"pos":[10961,11320],"yaml":true,"extradata":"MT"},{"content":"`true` if MSIL verification should be skipped; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,90],"content":"`true` if MSIL verification should be skipped; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if MSIL verification should be skipped; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,66],"source":"`true` if MSIL verification should be skipped; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[67,90],"source":" The default is `false`."}]}],"pos":[11455,11548],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.SecurityRulesAttribute\n  commentId: T:System.Security.SecurityRulesAttribute\n  id: SecurityRulesAttribute\n  children:\n  - System.Security.SecurityRulesAttribute.#ctor(System.Security.SecurityRuleSet)\n  - System.Security.SecurityRulesAttribute.RuleSet\n  - System.Security.SecurityRulesAttribute.SkipVerificationInFullTrust\n  langs:\n  - csharp\n  name: SecurityRulesAttribute\n  nameWithType: SecurityRulesAttribute\n  fullName: System.Security.SecurityRulesAttribute\n  type: Class\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Security\n  summary: Indicates the set of security rules the common language runtime should enforce for an assembly.\n  remarks: This class indicates which set of security rules the common language runtime should enforce for an assembly. For example, an assembly that is marked with `[SecurityRules(SecurityRuleSet.Level1)]` uses the .NET Framework version 2.0 transparency rules, where public security-critical types and members are treated as security-safe-critical outside the assembly. This requires security-critical types and members to perform a link demand for full trust to enforce security-critical behavior when they are accessed by external callers. Typically, level 1 rules should be used only for compatibility, such as for version 2.0 assemblies. For more information about level 1 behavior, see [Security-Transparent Code, Level 1](~/docs/framework/misc/security-transparent-code-level-1.md). For information about level 2 behavior, see [Security-Transparent Code, Level 2](~/docs/framework/misc/security-transparent-code-level-2.md).\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Assembly, AllowMultiple=false)]\n\n      public sealed class SecurityRulesAttribute : Attribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  implements: []\n  inheritedMembers:\n  - System.Attribute.Equals(System.Object)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetHashCode\n  - System.Attribute.IsDefaultAttribute\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.Match(System.Object)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Attribute.TypeId\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.AttributeUsageAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityRulesAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.SecurityRulesAttribute.#ctor(System.Security.SecurityRuleSet)\n  commentId: M:System.Security.SecurityRulesAttribute.#ctor(System.Security.SecurityRuleSet)\n  id: '#ctor(System.Security.SecurityRuleSet)'\n  parent: System.Security.SecurityRulesAttribute\n  langs:\n  - csharp\n  name: SecurityRulesAttribute(SecurityRuleSet)\n  nameWithType: SecurityRulesAttribute.SecurityRulesAttribute(SecurityRuleSet)\n  fullName: SecurityRulesAttribute.SecurityRulesAttribute(SecurityRuleSet)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Security\n  summary: Initializes a new instance of the <xref href=\"System.Security.SecurityRulesAttribute\"></xref> class using the specified rule set value.\n  remarks: When you specify the `ruleSet` parameter, use <xref:System.Security.SecurityRuleSet.Level1> for .NET Framework version 2.0 rules or <xref:System.Security.SecurityRuleSet.Level2> for [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] rules. For more information about <xref:System.Security.SecurityRuleSet.Level1> behavior, see [Security-Transparent Code, Level 1](~/docs/framework/misc/security-transparent-code-level-1.md). For information about <xref:System.Security.SecurityRuleSet.Level2> behavior, see [Security-Transparent Code, Level 2](~/docs/framework/misc/security-transparent-code-level-2.md).\n  syntax:\n    content: public SecurityRulesAttribute (System.Security.SecurityRuleSet ruleSet);\n    parameters:\n    - id: ruleSet\n      type: System.Security.SecurityRuleSet\n      description: One of the enumeration values that specifies the transparency rules set.\n  overload: System.Security.SecurityRulesAttribute.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityRulesAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.SecurityRulesAttribute.RuleSet\n  commentId: P:System.Security.SecurityRulesAttribute.RuleSet\n  id: RuleSet\n  parent: System.Security.SecurityRulesAttribute\n  langs:\n  - csharp\n  name: RuleSet\n  nameWithType: SecurityRulesAttribute.RuleSet\n  fullName: SecurityRulesAttribute.RuleSet\n  type: Property\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Security\n  summary: Gets the rule set to be applied.\n  syntax:\n    content: public System.Security.SecurityRuleSet RuleSet { get; }\n    return:\n      type: System.Security.SecurityRuleSet\n      description: One of the enumeration values that specifies the transparency rules to be applied.\n  overload: System.Security.SecurityRulesAttribute.RuleSet*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityRulesAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.SecurityRulesAttribute.SkipVerificationInFullTrust\n  commentId: P:System.Security.SecurityRulesAttribute.SkipVerificationInFullTrust\n  id: SkipVerificationInFullTrust\n  parent: System.Security.SecurityRulesAttribute\n  langs:\n  - csharp\n  name: SkipVerificationInFullTrust\n  nameWithType: SecurityRulesAttribute.SkipVerificationInFullTrust\n  fullName: SecurityRulesAttribute.SkipVerificationInFullTrust\n  type: Property\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Security\n  summary: Determines whether fully trusted transparent code should skip Microsoft intermediate language (MSIL) verification.\n  remarks: \"This property should be used only for optimization, because security guarantees made for transparent code cannot be enforced if the code is unverifiable.  \\n  \\n If you use this property to skip MSIL verification for an assembly, use the `transparent` option in the  to statically verify that the assembly's transparent code meets type safety requirements.\"\n  syntax:\n    content: public bool SkipVerificationInFullTrust { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if MSIL verification should be skipped; otherwise, `false`. The default is `false`.'\n  overload: System.Security.SecurityRulesAttribute.SkipVerificationInFullTrust*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityRulesAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Attribute\n  parent: System\n  isExternal: false\n  name: Attribute\n  nameWithType: Attribute\n  fullName: System.Attribute\n- uid: System.Security.SecurityRulesAttribute.#ctor(System.Security.SecurityRuleSet)\n  parent: System.Security.SecurityRulesAttribute\n  isExternal: false\n  name: SecurityRulesAttribute(SecurityRuleSet)\n  nameWithType: SecurityRulesAttribute.SecurityRulesAttribute(SecurityRuleSet)\n  fullName: SecurityRulesAttribute.SecurityRulesAttribute(SecurityRuleSet)\n- uid: System.Security.SecurityRuleSet\n  parent: System.Security\n  isExternal: false\n  name: SecurityRuleSet\n  nameWithType: SecurityRuleSet\n  fullName: System.Security.SecurityRuleSet\n- uid: System.Security.SecurityRulesAttribute.RuleSet\n  parent: System.Security.SecurityRulesAttribute\n  isExternal: false\n  name: RuleSet\n  nameWithType: SecurityRulesAttribute.RuleSet\n  fullName: SecurityRulesAttribute.RuleSet\n- uid: System.Security.SecurityRulesAttribute.SkipVerificationInFullTrust\n  parent: System.Security.SecurityRulesAttribute\n  isExternal: false\n  name: SkipVerificationInFullTrust\n  nameWithType: SecurityRulesAttribute.SkipVerificationInFullTrust\n  fullName: SecurityRulesAttribute.SkipVerificationInFullTrust\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.SecurityRulesAttribute.#ctor*\n  parent: System.Security.SecurityRulesAttribute\n  isExternal: false\n  name: SecurityRulesAttribute\n  nameWithType: SecurityRulesAttribute.SecurityRulesAttribute\n  fullName: SecurityRulesAttribute.SecurityRulesAttribute\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityRulesAttribute.xml\n- uid: System.Security.SecurityRulesAttribute.RuleSet*\n  parent: System.Security.SecurityRulesAttribute\n  isExternal: false\n  name: RuleSet\n  nameWithType: SecurityRulesAttribute.RuleSet\n  fullName: SecurityRulesAttribute.RuleSet\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityRulesAttribute.xml\n- uid: System.Security.SecurityRulesAttribute.SkipVerificationInFullTrust*\n  parent: System.Security.SecurityRulesAttribute\n  isExternal: false\n  name: SkipVerificationInFullTrust\n  nameWithType: SecurityRulesAttribute.SkipVerificationInFullTrust\n  fullName: SecurityRulesAttribute.SkipVerificationInFullTrust\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/SecurityRulesAttribute.xml\n- uid: System.Attribute.Equals(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Attribute.Equals(Object)\n  fullName: Attribute.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Attribute.GetHashCode\n  parent: System.Attribute\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Attribute.GetHashCode()\n  fullName: Attribute.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type)\n  fullName: Attribute.GetCustomAttribute(Module, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type)\n  fullName: Attribute.GetCustomAttributes(Module, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module)\n  nameWithType: Attribute.GetCustomAttributes(Module)\n  fullName: Attribute.GetCustomAttributes(Module)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo)\n  fullName: Attribute.GetCustomAttributes(MemberInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly)\n  nameWithType: Attribute.GetCustomAttributes(Assembly)\n  fullName: Attribute.GetCustomAttributes(Assembly)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type)\n- uid: System.Attribute.IsDefaultAttribute\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefaultAttribute()\n  nameWithType: Attribute.IsDefaultAttribute()\n  fullName: Attribute.IsDefaultAttribute()\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Module, Type, Boolean)\n  fullName: Attribute.IsDefined(Module, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(MemberInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)\n  fullName: Attribute.IsDefined(Assembly, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type)\n  fullName: Attribute.IsDefined(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type)\n  nameWithType: Attribute.IsDefined(Module, Type)\n  fullName: Attribute.IsDefined(Module, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type)\n  nameWithType: Attribute.IsDefined(Assembly, Type)\n  fullName: Attribute.IsDefined(Assembly, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type)\n  fullName: Attribute.IsDefined(ParameterInfo, Type)\n- uid: System.Attribute.Match(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Match(Object)\n  nameWithType: Attribute.Match(Object)\n  fullName: Attribute.Match(Object)\n- uid: System.Attribute.TypeId\n  parent: System.Attribute\n  isExternal: false\n  name: TypeId\n  nameWithType: Attribute.TypeId\n  fullName: Attribute.TypeId\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfoCount(UInt32)\n  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)\n  fullName: Attribute._Attribute.GetTypeInfoCount(UInt32)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n"}