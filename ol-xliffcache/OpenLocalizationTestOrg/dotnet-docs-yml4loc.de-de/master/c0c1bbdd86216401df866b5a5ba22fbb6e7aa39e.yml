### YamlMime:ManagedReference
items:
- uid: System.AggregateException
  commentId: T:System.AggregateException
  id: AggregateException
  children:
  - System.AggregateException.#ctor
  - System.AggregateException.#ctor(System.Collections.Generic.IEnumerable{System.Exception})
  - System.AggregateException.#ctor(System.Exception[])
  - System.AggregateException.#ctor(System.String)
  - System.AggregateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.AggregateException.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Exception})
  - System.AggregateException.#ctor(System.String,System.Exception)
  - System.AggregateException.#ctor(System.String,System.Exception[])
  - System.AggregateException.Flatten
  - System.AggregateException.GetBaseException
  - System.AggregateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.AggregateException.Handle(System.Func{System.Exception,System.Boolean})
  - System.AggregateException.InnerExceptions
  - System.AggregateException.Message
  - System.AggregateException.ToString
  langs:
  - csharp
  name: AggregateException
  nameWithType: AggregateException
  fullName: System.AggregateException
  type: Class
  assemblies:
  - System.Threading.Tasks
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Represents one or more errors that occur during application execution.
  remarks: '<xref:System.AggregateException> is used to consolidate multiple failures into a single, throwable exception object. It is used extensively in the [Task Parallel Library (TPL)](~/docs/standard/parallel-programming/task-parallel-library-tpl.md) and [Parallel LINQ (PLINQ)](~/docs/standard/parallel-programming/parallel-linq-plinq.md). For additional information, see the [Aggregating Exceptions](http://go.microsoft.com/fwlink/p/?LinkId=259617) entry in the .NET Matters blog. For an example, see [NIB: How to: Handle Exceptions Thrown by Tasks](http://msdn.microsoft.com/en-us/d6c47ec8-9de9-4880-beb3-ff19ae51565d) and [How to: Handle Exceptions in a PLINQ Query](~/docs/standard/parallel-programming/how-to-handle-exceptions-in-a-plinq-query.md).'
  example:
  - "The following example catches the <xref:System.AggregateException> exception and calls the <xref:System.AggregateException.Handle%2A> method to handle each exception it contains. Compiling and running the example with the first `task1` variable should result in an <xref:System.AggregateException> object that contains an <xref:System.UnauthorizedAccessException> exception. Commenting out that line, uncommenting the second `task1` variable, and compiling and running the example produces an <xref:System.AggregateException> object that contains an <xref:System.IndexOutOfRangeException> exception.  \n  \n [!code-csharp[System.AggregateException.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.aggregateexception.class/cs/exception1.cs#1)]\n [!code-vb[System.AggregateException.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.aggregateexception.class/vb/exception1.vb#1)]"
  syntax:
    content: 'public class AggregateException : Exception'
  inheritance:
  - System.Object
  - System.Exception
  implements: []
  inheritedMembers:
  - System.Exception.Data
  - System.Exception.GetType
  - System.Exception.HelpLink
  - System.Exception.HResult
  - System.Exception.InnerException
  - System.Exception.SerializeObjectState
  - System.Exception.Source
  - System.Exception.StackTrace
  - System.Exception.TargetSite
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/AggregateException.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.AggregateException.#ctor
  commentId: M:System.AggregateException.#ctor
  id: '#ctor'
  parent: System.AggregateException
  langs:
  - csharp
  name: AggregateException()
  nameWithType: AggregateException.AggregateException()
  fullName: AggregateException.AggregateException()
  type: Constructor
  assemblies:
  - System.Threading.Tasks
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Initializes a new instance of the <xref href="System.AggregateException"></xref> class with a system-supplied message that describes the error.
  remarks: "This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as \"DefaultMessageDisplayedByParameterlessCtorWriterMustSupply\" This message takes into account the current system culture.  \n  \n The following table shows the initial property values for an instance of <xref:System.InsufficientMemoryException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|`null`.|  \n|<xref:System.Exception.Message%2A>|The localized error message string.|"
  syntax:
    content: public AggregateException ();
    parameters: []
  overload: System.AggregateException.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/AggregateException.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.AggregateException.#ctor(System.Collections.Generic.IEnumerable{System.Exception})
  commentId: M:System.AggregateException.#ctor(System.Collections.Generic.IEnumerable{System.Exception})
  id: '#ctor(System.Collections.Generic.IEnumerable{System.Exception})'
  parent: System.AggregateException
  langs:
  - csharp
  name: AggregateException(IEnumerable<Exception>)
  nameWithType: AggregateException.AggregateException(IEnumerable<Exception>)
  fullName: AggregateException.AggregateException(IEnumerable<Exception>)
  type: Constructor
  assemblies:
  - System.Threading.Tasks
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Initializes a new instance of the <xref href="System.AggregateException"></xref> class with references to the inner exceptions that are the cause of this exception.
  syntax:
    content: public AggregateException (System.Collections.Generic.IEnumerable<Exception> innerExceptions);
    parameters:
    - id: innerExceptions
      type: System.Collections.Generic.IEnumerable{System.Exception}
      description: The exceptions that are the cause of the current exception.
  overload: System.AggregateException.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>innerExceptions</code> argument is null.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: An element of <code>innerExceptions</code> is null.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/AggregateException.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.AggregateException.#ctor(System.Exception[])
  commentId: M:System.AggregateException.#ctor(System.Exception[])
  id: '#ctor(System.Exception[])'
  parent: System.AggregateException
  langs:
  - csharp
  name: AggregateException(Exception[])
  nameWithType: AggregateException.AggregateException(Exception[])
  fullName: AggregateException.AggregateException(Exception[])
  type: Constructor
  assemblies:
  - System.Threading.Tasks
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Initializes a new instance of the <xref href="System.AggregateException"></xref> class with references to the inner exceptions that are the cause of this exception.
  syntax:
    content: public AggregateException (Exception[] innerExceptions);
    parameters:
    - id: innerExceptions
      type: System.Exception[]
      description: The exceptions that are the cause of the current exception.
  overload: System.AggregateException.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>innerExceptions</code> argument is null.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: An element of <code>innerExceptions</code> is null.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/AggregateException.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.AggregateException.#ctor(System.String)
  commentId: M:System.AggregateException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.AggregateException
  langs:
  - csharp
  name: AggregateException(String)
  nameWithType: AggregateException.AggregateException(String)
  fullName: AggregateException.AggregateException(String)
  type: Constructor
  assemblies:
  - System.Threading.Tasks
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Initializes a new instance of the <xref href="System.AggregateException"></xref> class with a specified message that describes the error.
  remarks: "The following table shows the initial property values for an instance of <xref:System.AggregateException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|`null`.|  \n|<xref:System.Exception.Message%2A>|The error message string specified in `message`.|"
  syntax:
    content: public AggregateException (string message);
    parameters:
    - id: message
      type: System.String
      description: The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.
  overload: System.AggregateException.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/AggregateException.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.AggregateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.AggregateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.AggregateException
  langs:
  - csharp
  name: AggregateException(SerializationInfo, StreamingContext)
  nameWithType: AggregateException.AggregateException(SerializationInfo, StreamingContext)
  fullName: AggregateException.AggregateException(SerializationInfo, StreamingContext)
  type: Constructor
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Initializes a new instance of the <xref href="System.AggregateException"></xref> class with serialized data.
  remarks: This constructor is called during deserialization to reconstitute the exception object transmitted over a stream. For more information, see [XML and SOAP Serialization](~/docs/framework/serialization/xml-and-soap-serialization.md).
  syntax:
    content: >-
      [System.Security.SecurityCritical]

      protected AggregateException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: The object that holds the serialized object data.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: The contextual information about the source or destination.
  overload: System.AggregateException.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>info</code> argument is null.
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: The exception could not be deserialized correctly.
  attributes:
  - type: System.Security.SecurityCriticalAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/AggregateException.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.AggregateException.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Exception})
  commentId: M:System.AggregateException.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Exception})
  id: '#ctor(System.String,System.Collections.Generic.IEnumerable{System.Exception})'
  parent: System.AggregateException
  langs:
  - csharp
  name: AggregateException(String, IEnumerable<Exception>)
  nameWithType: AggregateException.AggregateException(String, IEnumerable<Exception>)
  fullName: AggregateException.AggregateException(String, IEnumerable<Exception>)
  type: Constructor
  assemblies:
  - System.Threading.Tasks
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Initializes a new instance of the <xref href="System.AggregateException"></xref> class with a specified error message and references to the inner exceptions that are the cause of this exception.
  syntax:
    content: public AggregateException (string message, System.Collections.Generic.IEnumerable<Exception> innerExceptions);
    parameters:
    - id: message
      type: System.String
      description: The error message that explains the reason for the exception.
    - id: innerExceptions
      type: System.Collections.Generic.IEnumerable{System.Exception}
      description: The exceptions that are the cause of the current exception.
  overload: System.AggregateException.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>innerExceptions</code> argument is null.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: An element of <code>innerExceptions</code> is null.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/AggregateException.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.AggregateException.#ctor(System.String,System.Exception)
  commentId: M:System.AggregateException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.AggregateException
  langs:
  - csharp
  name: AggregateException(String, Exception)
  nameWithType: AggregateException.AggregateException(String, Exception)
  fullName: AggregateException.AggregateException(String, Exception)
  type: Constructor
  assemblies:
  - System.Threading.Tasks
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Initializes a new instance of the <xref href="System.AggregateException"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception.
  remarks: "An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.  \n  \n The following table shows the initial property values for an instance of <xref:System.AggregateException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|`null`.|  \n|<xref:System.Exception.Message%2A>|The error message string specified in `message`.|"
  syntax:
    content: public AggregateException (string message, Exception innerException);
    parameters:
    - id: message
      type: System.String
      description: The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.
    - id: innerException
      type: System.Exception
      description: The exception that is the cause of the current exception. If the <code>innerException</code> parameter is not `null`, the current exception is raised in a `catch` block that handles the inner exception.
  overload: System.AggregateException.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>innerException</code> argument is null.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/AggregateException.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.AggregateException.#ctor(System.String,System.Exception[])
  commentId: M:System.AggregateException.#ctor(System.String,System.Exception[])
  id: '#ctor(System.String,System.Exception[])'
  parent: System.AggregateException
  langs:
  - csharp
  name: AggregateException(String, Exception[])
  nameWithType: AggregateException.AggregateException(String, Exception[])
  fullName: AggregateException.AggregateException(String, Exception[])
  type: Constructor
  assemblies:
  - System.Threading.Tasks
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Initializes a new instance of the <xref href="System.AggregateException"></xref> class with a specified error message and references to the inner exceptions that are the cause of this exception.
  syntax:
    content: public AggregateException (string message, Exception[] innerExceptions);
    parameters:
    - id: message
      type: System.String
      description: The error message that explains the reason for the exception.
    - id: innerExceptions
      type: System.Exception[]
      description: The exceptions that are the cause of the current exception.
  overload: System.AggregateException.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>innerExceptions</code> argument is null.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: An element of <code>innerExceptions</code> is null.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/AggregateException.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.AggregateException.Flatten
  commentId: M:System.AggregateException.Flatten
  id: Flatten
  parent: System.AggregateException
  langs:
  - csharp
  name: Flatten()
  nameWithType: AggregateException.Flatten()
  fullName: AggregateException.Flatten()
  type: Method
  assemblies:
  - System.Threading.Tasks
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Flattens an <xref href="System.AggregateException"></xref> instances into a single, new instance.
  remarks: "If a task has an attached child task that throws an exception, that exception is wrapped in an <xref:System.AggregateException> exception before it is propagated to the parent task, which wraps that exception in its own <xref:System.AggregateException> exception before it propagates it back to the calling thread. In such cases, the <xref:System.AggregateException.InnerExceptions%2A> property of the <xref:System.AggregateException> exception that is caught by the <xref:System.Threading.Tasks.Task.Wait%2A?displayProperty=fullName>, <xref:System.Threading.Tasks.Task%601.Wait%2A?displayProperty=fullName>, <xref:System.Threading.Tasks.Task.WaitAny%2A?displayProperty=fullName> or <xref:System.Threading.Tasks.Task.WaitAll%2A?displayProperty=fullName> method contains one or more <xref:System.AggregateException> instances, not the original exceptions that caused the fault. To avoid having to iterate over nested <xref:System.AggregateException> exceptions, you can use the <xref:System.AggregateException.Flatten%2A> method to remove all the nested <xref:System.AggregateException> exceptions, so that the <xref:System.AggregateException.InnerExceptions%2A> property of the returned <xref:System.AggregateException> object contains the original exceptions.  \n  \n This method recursively flattens all instances of  <xref:System.AggregateException> exceptions that are inner exceptions of the current <xref:System.AggregateException> instance . The inner exceptions returned in the new <xref:System.AggregateException> are the union of all the inner exceptions from exception tree rooted at the current <xref:System.AggregateException> instance."
  example:
  - "In the following example, nested <xref:System.AggregateException> instances are flattened and handled in just one loop.  \n  \n [!code-csharp[TPL_Exceptions#22](~/samples/snippets/csharp/VS_Snippets_Misc/tpl_exceptions/cs/flatten2.cs#22)]\n [!code-vb[TPL_Exceptions#22](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpl_exceptions/vb/flatten2.vb#22)]  \n  \n You can also use the <xref:System.AggregateException.Flatten%2A?displayProperty=fullName> method to rethrow the inner exceptions from multiple <xref:System.AggregateException> instances thrown by multiple tasks in a single <xref:System.AggregateException> instance, as the following example shows.  \n  \n [!code-csharp[TPL_Exceptions#13](~/samples/snippets/csharp/VS_Snippets_Misc/tpl_exceptions/cs/taskexceptions2.cs#13)]\n [!code-vb[TPL_Exceptions#13](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpl_exceptions/vb/taskexceptions2.vb#13)]"
  syntax:
    content: public AggregateException Flatten ();
    parameters: []
    return:
      type: System.AggregateException
      description: A new, flattened <xref href="System.AggregateException"></xref>.
  overload: System.AggregateException.Flatten*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/AggregateException.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.AggregateException.GetBaseException
  commentId: M:System.AggregateException.GetBaseException
  id: GetBaseException
  parent: System.AggregateException
  langs:
  - csharp
  name: GetBaseException()
  nameWithType: AggregateException.GetBaseException()
  fullName: AggregateException.GetBaseException()
  type: Method
  assemblies:
  - System.Threading.Tasks
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Returns the <xref href="System.AggregateException"></xref> that is the root cause of this exception.
  syntax:
    content: public override Exception GetBaseException ();
    parameters: []
    return:
      type: System.Exception
      description: Returns the <xref href="System.AggregateException"></xref> that is the root cause of this exception.
  overload: System.AggregateException.GetBaseException*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/AggregateException.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.AggregateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.AggregateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.AggregateException
  langs:
  - csharp
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: AggregateException.GetObjectData(SerializationInfo, StreamingContext)
  fullName: AggregateException.GetObjectData(SerializationInfo, StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Initializes a new instance of the <xref href="System.AggregateException"></xref> class with serialized data.
  remarks: This constructor is called during deserialization to reconstitute the exception object transmitted over a stream. For more information, see [XML and SOAP Serialization](~/docs/framework/serialization/xml-and-soap-serialization.md).
  syntax:
    content: >-
      [System.Security.SecurityCritical]

      public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: The object that holds the serialized object data.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: The contextual information about the source or destination.
  overload: System.AggregateException.GetObjectData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>info</code> argument is null.
  attributes:
  - type: System.Security.SecurityCriticalAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/AggregateException.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.AggregateException.Handle(System.Func{System.Exception,System.Boolean})
  commentId: M:System.AggregateException.Handle(System.Func{System.Exception,System.Boolean})
  id: Handle(System.Func{System.Exception,System.Boolean})
  parent: System.AggregateException
  langs:
  - csharp
  name: Handle(Func<Exception,Boolean>)
  nameWithType: AggregateException.Handle(Func<Exception,Boolean>)
  fullName: AggregateException.Handle(Func<Exception,Boolean>)
  type: Method
  assemblies:
  - System.Threading.Tasks
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Invokes a handler on each <xref href="System.Exception"></xref> contained by this <xref href="System.AggregateException"></xref>.
  remarks: Each invocation of the `predicate` returns true or false to indicate whether the <xref:System.Exception> was handled. After all invocations, if any exceptions went unhandled, all unhandled exceptions will be put into a new <xref:System.AggregateException> which will be thrown. Otherwise, the <xref:System.AggregateException.Handle%2A> method simply returns. If any invocations of the `predicate` throws an exception, it will halt the processing of any more exceptions and immediately propagate the thrown exception as-is.
  example:
  - "Ordinarily, an exception handler that catches an <xref:System.AggregateException> exception uses a `foreach` loop (in C#) or `For Each` loop (in Visual Basic) to handle each exception in its <xref:System.AggregateException.InnerExceptions%2A> collection. Instead, the following example uses the <xref:System.AggregateException.Handle%2A> method to handle each exception, and only re-throws exceptions that are not `CustomException` instances.  \n  \n [!code-csharp[TPL_Exceptions#16](~/samples/snippets/csharp/VS_Snippets_Misc/tpl_exceptions/cs/handlemethod2.cs#16)]\n [!code-vb[TPL_Exceptions#16](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpl_exceptions/vb/handlemethod2.vb#16)]  \n  \n The following is a more complete example that uses the <xref:System.AggregateException.Handle%2A> method to provide special handling for an <xref:System.UnauthorizedAccessException> when enumerating files.  \n  \n [!code-csharp[TPL_Exceptions#12](~/samples/snippets/csharp/VS_Snippets_Misc/tpl_exceptions/cs/taskexceptions.cs#12)]\n [!code-vb[TPL_Exceptions#12](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpl_exceptions/vb/taskexceptions.vb#12)]"
  syntax:
    content: public void Handle (Func<Exception,bool> predicate);
    parameters:
    - id: predicate
      type: System.Func{System.Exception,System.Boolean}
      description: The predicate to execute for each exception. The predicate accepts as an argument the <xref href="System.Exception"></xref> to be processed and returns a Boolean to indicate whether the exception was handled.
  overload: System.AggregateException.Handle*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>predicate</code> argument is null.
  - type: System.AggregateException
    commentId: T:System.AggregateException
    description: An exception contained by this <xref href="System.AggregateException"></xref> was not handled.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/AggregateException.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.AggregateException.InnerExceptions
  commentId: P:System.AggregateException.InnerExceptions
  id: InnerExceptions
  parent: System.AggregateException
  langs:
  - csharp
  name: InnerExceptions
  nameWithType: AggregateException.InnerExceptions
  fullName: AggregateException.InnerExceptions
  type: Property
  assemblies:
  - System.Threading.Tasks
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Gets a read-only collection of the <xref href="System.Exception"></xref> instances that caused the current exception.
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<Exception> InnerExceptions { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Exception}
      description: Returns a read-only collection of the <xref href="System.Exception"></xref> instances that caused the current exception.
  overload: System.AggregateException.InnerExceptions*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/AggregateException.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.AggregateException.Message
  commentId: P:System.AggregateException.Message
  id: Message
  parent: System.AggregateException
  langs:
  - csharp
  name: Message
  nameWithType: AggregateException.Message
  fullName: AggregateException.Message
  type: Property
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public override string Message { get; }
    return:
      type: System.String
      description: ''
  overload: System.AggregateException.Message*
  exceptions: []
  version:
  - netcore-2.0
  monikers:
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/AggregateException.xml
- uid: System.AggregateException.ToString
  commentId: M:System.AggregateException.ToString
  id: ToString
  parent: System.AggregateException
  langs:
  - csharp
  name: ToString()
  nameWithType: AggregateException.ToString()
  fullName: AggregateException.ToString()
  type: Method
  assemblies:
  - System.Threading.Tasks
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Creates and returns a string representation of the current <xref href="System.AggregateException"></xref>.
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: A string representation of the current exception.
  overload: System.AggregateException.ToString*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/AggregateException.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
references:
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.Runtime.Serialization.SerializationException
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationException
  nameWithType: SerializationException
  fullName: System.Runtime.Serialization.SerializationException
- uid: System.AggregateException
  parent: System
  isExternal: false
  name: AggregateException
  nameWithType: AggregateException
  fullName: System.AggregateException
- uid: System.AggregateException.#ctor
  parent: System.AggregateException
  isExternal: false
  name: AggregateException()
  nameWithType: AggregateException.AggregateException()
  fullName: AggregateException.AggregateException()
- uid: System.AggregateException.#ctor(System.Collections.Generic.IEnumerable{System.Exception})
  parent: System.AggregateException
  isExternal: false
  name: AggregateException(IEnumerable<Exception>)
  nameWithType: AggregateException.AggregateException(IEnumerable<Exception>)
  fullName: AggregateException.AggregateException(IEnumerable<Exception>)
- uid: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
- uid: System.Collections.Generic.IEnumerable{System.Exception}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<Exception>
  nameWithType: IEnumerable<Exception>
  fullName: System.Collections.Generic.IEnumerable<System.Exception>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.AggregateException.#ctor(System.Exception[])
  parent: System.AggregateException
  isExternal: false
  name: AggregateException(Exception[])
  nameWithType: AggregateException.AggregateException(Exception[])
  fullName: AggregateException.AggregateException(Exception[])
- uid: System.Exception[]
  parent: System
  isExternal: false
  name: Exception[]
  nameWithType: Exception[]
  fullName: System.Exception[]
  spec.csharp:
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.AggregateException.#ctor(System.String)
  parent: System.AggregateException
  isExternal: false
  name: AggregateException(String)
  nameWithType: AggregateException.AggregateException(String)
  fullName: AggregateException.AggregateException(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.AggregateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.AggregateException
  isExternal: false
  name: AggregateException(SerializationInfo, StreamingContext)
  nameWithType: AggregateException.AggregateException(SerializationInfo, StreamingContext)
  fullName: AggregateException.AggregateException(SerializationInfo, StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: false
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.AggregateException.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Exception})
  parent: System.AggregateException
  isExternal: false
  name: AggregateException(String, IEnumerable<Exception>)
  nameWithType: AggregateException.AggregateException(String, IEnumerable<Exception>)
  fullName: AggregateException.AggregateException(String, IEnumerable<Exception>)
- uid: System.AggregateException.#ctor(System.String,System.Exception)
  parent: System.AggregateException
  isExternal: false
  name: AggregateException(String, Exception)
  nameWithType: AggregateException.AggregateException(String, Exception)
  fullName: AggregateException.AggregateException(String, Exception)
- uid: System.AggregateException.#ctor(System.String,System.Exception[])
  parent: System.AggregateException
  isExternal: false
  name: AggregateException(String, Exception[])
  nameWithType: AggregateException.AggregateException(String, Exception[])
  fullName: AggregateException.AggregateException(String, Exception[])
- uid: System.AggregateException.Flatten
  parent: System.AggregateException
  isExternal: false
  name: Flatten()
  nameWithType: AggregateException.Flatten()
  fullName: AggregateException.Flatten()
- uid: System.AggregateException.GetBaseException
  parent: System.AggregateException
  isExternal: false
  name: GetBaseException()
  nameWithType: AggregateException.GetBaseException()
  fullName: AggregateException.GetBaseException()
- uid: System.AggregateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.AggregateException
  isExternal: false
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: AggregateException.GetObjectData(SerializationInfo, StreamingContext)
  fullName: AggregateException.GetObjectData(SerializationInfo, StreamingContext)
- uid: System.AggregateException.Handle(System.Func{System.Exception,System.Boolean})
  parent: System.AggregateException
  isExternal: false
  name: Handle(Func<Exception,Boolean>)
  nameWithType: AggregateException.Handle(Func<Exception,Boolean>)
  fullName: AggregateException.Handle(Func<Exception,Boolean>)
- uid: System.Func`2
  name: Func<T,TResult>
  nameWithType: Func<T,TResult>
  fullName: System.Func<T,TResult>
- uid: System.Boolean
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Func{System.Exception,System.Boolean}
  parent: System
  isExternal: false
  name: Func<Exception,Boolean>
  nameWithType: Func<Exception,Boolean>
  fullName: System.Func<System.Exception,System.Boolean>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.AggregateException.InnerExceptions
  parent: System.AggregateException
  isExternal: false
  name: InnerExceptions
  nameWithType: AggregateException.InnerExceptions
  fullName: AggregateException.InnerExceptions
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  name: ReadOnlyCollection<T>
  nameWithType: ReadOnlyCollection<T>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Exception}
  parent: System.Collections.ObjectModel
  isExternal: false
  name: ReadOnlyCollection<Exception>
  nameWithType: ReadOnlyCollection<Exception>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Exception>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.AggregateException.Message
  parent: System.AggregateException
  isExternal: false
  name: Message
  nameWithType: AggregateException.Message
  fullName: AggregateException.Message
- uid: System.AggregateException.ToString
  parent: System.AggregateException
  isExternal: false
  name: ToString()
  nameWithType: AggregateException.ToString()
  fullName: AggregateException.ToString()
- uid: System.AggregateException.#ctor*
  parent: System.AggregateException
  isExternal: false
  name: AggregateException
  nameWithType: AggregateException.AggregateException
  fullName: AggregateException.AggregateException
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/AggregateException.xml
- uid: System.AggregateException.Flatten*
  parent: System.AggregateException
  isExternal: false
  name: Flatten
  nameWithType: AggregateException.Flatten
  fullName: AggregateException.Flatten
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/AggregateException.xml
- uid: System.AggregateException.GetBaseException*
  parent: System.AggregateException
  isExternal: false
  name: GetBaseException
  nameWithType: AggregateException.GetBaseException
  fullName: AggregateException.GetBaseException
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/AggregateException.xml
- uid: System.AggregateException.GetObjectData*
  parent: System.AggregateException
  isExternal: false
  name: GetObjectData
  nameWithType: AggregateException.GetObjectData
  fullName: AggregateException.GetObjectData
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/AggregateException.xml
- uid: System.AggregateException.Handle*
  parent: System.AggregateException
  isExternal: false
  name: Handle
  nameWithType: AggregateException.Handle
  fullName: AggregateException.Handle
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/AggregateException.xml
- uid: System.AggregateException.InnerExceptions*
  parent: System.AggregateException
  isExternal: false
  name: InnerExceptions
  nameWithType: AggregateException.InnerExceptions
  fullName: AggregateException.InnerExceptions
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/AggregateException.xml
- uid: System.AggregateException.Message*
  parent: System.AggregateException
  isExternal: false
  name: Message
  nameWithType: AggregateException.Message
  fullName: AggregateException.Message
  monikers:
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/AggregateException.xml
- uid: System.AggregateException.ToString*
  parent: System.AggregateException
  isExternal: false
  name: ToString
  nameWithType: AggregateException.ToString
  fullName: AggregateException.ToString
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/AggregateException.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Exception.GetType
  parent: System.Exception
  isExternal: false
  name: GetType()
  nameWithType: Exception.GetType()
  fullName: Exception.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Exception.Data
  parent: System.Exception
  isExternal: false
  name: Data
  nameWithType: Exception.Data
  fullName: Exception.Data
- uid: System.Exception.HelpLink
  parent: System.Exception
  isExternal: false
  name: HelpLink
  nameWithType: Exception.HelpLink
  fullName: Exception.HelpLink
- uid: System.Exception.HResult
  parent: System.Exception
  isExternal: false
  name: HResult
  nameWithType: Exception.HResult
  fullName: Exception.HResult
- uid: System.Exception.InnerException
  parent: System.Exception
  isExternal: false
  name: InnerException
  nameWithType: Exception.InnerException
  fullName: Exception.InnerException
- uid: System.Exception.SerializeObjectState
  parent: System.Exception
  isExternal: false
  name: SerializeObjectState
  nameWithType: Exception.SerializeObjectState
  fullName: Exception.SerializeObjectState
- uid: System.Exception.Source
  parent: System.Exception
  isExternal: false
  name: Source
  nameWithType: Exception.Source
  fullName: Exception.Source
- uid: System.Exception.StackTrace
  parent: System.Exception
  isExternal: false
  name: StackTrace
  nameWithType: Exception.StackTrace
  fullName: Exception.StackTrace
- uid: System.Exception.TargetSite
  parent: System.Exception
  isExternal: false
  name: TargetSite
  nameWithType: Exception.TargetSite
  fullName: Exception.TargetSite
