{"nodes":[{"content":"Provides a method that a host application can use to clear the tracking profile cache.","nodes":[{"pos":[0,86],"content":"Provides a method that a host application can use to clear the tracking profile cache.","nodes":[{"content":"Provides a method that a host application can use to clear the tracking profile cache.","pos":[0,86]}]}],"pos":[534,621],"yaml":true},{"content":"> [!NOTE]\n>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  \n  \n When the workflow runtime engine has one or more tracking services registered with it, the runtime tracking infrastructure must determine whether tracking profiles exist for any workflow that is loaded into memory. The runtime tracking infrastructure maintains a cache of tracking profiles which it checks before it requests a <xref:System.Workflow.Runtime.Tracking.TrackingProfile> for the workflow from each tracking service. The <xref:System.Workflow.Runtime.Tracking.TrackingProfileCache> class provides a static method, <xref:System.Workflow.Runtime.Tracking.TrackingProfileCache.Clear%2A>, which a host application can use to clear the tracking profile cache. This will force the runtime tracking infrastructure to load tracking profiles from its registered tracking services for any workflow instances that are loaded into memory after the cache is cleared.  \n  \n> [!NOTE]\n>  <xref:System.Workflow.Runtime.Tracking.TrackingProfile> caching is not supported for markup only workflows.","nodes":[{"pos":[2,78],"content":"[!NOTE]\n [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]","leadings":["","> "],"nodes":[]},{"pos":[85,949],"content":"When the workflow runtime engine has one or more tracking services registered with it, the runtime tracking infrastructure must determine whether tracking profiles exist for any workflow that is loaded into memory. The runtime tracking infrastructure maintains a cache of tracking profiles which it checks before it requests a <xref:System.Workflow.Runtime.Tracking.TrackingProfile> for the workflow from each tracking service. The <xref:System.Workflow.Runtime.Tracking.TrackingProfileCache> class provides a static method, <xref:System.Workflow.Runtime.Tracking.TrackingProfileCache.Clear%2A>, which a host application can use to clear the tracking profile cache. This will force the runtime tracking infrastructure to load tracking profiles from its registered tracking services for any workflow instances that are loaded into memory after the cache is cleared.","nodes":[{"content":"When the workflow runtime engine has one or more tracking services registered with it, the runtime tracking infrastructure must determine whether tracking profiles exist for any workflow that is loaded into memory. The runtime tracking infrastructure maintains a cache of tracking profiles which it checks before it requests a <xref:System.Workflow.Runtime.Tracking.TrackingProfile> for the workflow from each tracking service. The <xref:System.Workflow.Runtime.Tracking.TrackingProfileCache> class provides a static method, <xref:System.Workflow.Runtime.Tracking.TrackingProfileCache.Clear%2A>, which a host application can use to clear the tracking profile cache. This will force the runtime tracking infrastructure to load tracking profiles from its registered tracking services for any workflow instances that are loaded into memory after the cache is cleared.","pos":[0,864],"nodes":[{"content":"When the workflow runtime engine has one or more tracking services registered with it, the runtime tracking infrastructure must determine whether tracking profiles exist for any workflow that is loaded into memory.","pos":[0,214]},{"content":"The runtime tracking infrastructure maintains a cache of tracking profiles which it checks before it requests a <ph id=\"ph1\">&lt;xref:System.Workflow.Runtime.Tracking.TrackingProfile&gt;</ph> for the workflow from each tracking service.","pos":[215,427],"source":" The runtime tracking infrastructure maintains a cache of tracking profiles which it checks before it requests a <xref:System.Workflow.Runtime.Tracking.TrackingProfile> for the workflow from each tracking service."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Workflow.Runtime.Tracking.TrackingProfileCache&gt;</ph> class provides a static method, <ph id=\"ph2\">&lt;xref:System.Workflow.Runtime.Tracking.TrackingProfileCache.Clear%2A&gt;</ph>, which a host application can use to clear the tracking profile cache.","pos":[428,665],"source":" The <xref:System.Workflow.Runtime.Tracking.TrackingProfileCache> class provides a static method, <xref:System.Workflow.Runtime.Tracking.TrackingProfileCache.Clear%2A>, which a host application can use to clear the tracking profile cache."},{"content":"This will force the runtime tracking infrastructure to load tracking profiles from its registered tracking services for any workflow instances that are loaded into memory after the cache is cleared.","pos":[666,864]}]}]},{"pos":[957,1075],"content":"[!NOTE]\n <xref:System.Workflow.Runtime.Tracking.TrackingProfile> caching is not supported for markup only workflows.","leadings":["","> "],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Workflow.Runtime.Tracking.TrackingProfile&gt;</ph> caching is not supported for markup only workflows.","pos":[9,116],"source":" <xref:System.Workflow.Runtime.Tracking.TrackingProfile> caching is not supported for markup only workflows."}]}],"pos":[632,1716],"yaml":true,"extradata":"MT"},{"content":"Clears the tracking profile cache maintained by the runtime tracking infrastructure of all tracking profiles.","nodes":[{"pos":[0,109],"content":"Clears the tracking profile cache maintained by the runtime tracking infrastructure of all tracking profiles.","nodes":[{"content":"Clears the tracking profile cache maintained by the runtime tracking infrastructure of all tracking profiles.","pos":[0,109]}]}],"pos":[3280,3390],"yaml":true},{"content":"After the cache is cleared, the runtime tracking infrastructure will load tracking profiles directly from its registered tracking services for any workflow instances loaded into memory. Any workflow instance that is in memory and is running will not need to have its tracking profiles reloaded unless the workflow is unloaded and then reloaded into memory.","nodes":[{"pos":[0,356],"content":"After the cache is cleared, the runtime tracking infrastructure will load tracking profiles directly from its registered tracking services for any workflow instances loaded into memory. Any workflow instance that is in memory and is running will not need to have its tracking profiles reloaded unless the workflow is unloaded and then reloaded into memory.","nodes":[{"content":"After the cache is cleared, the runtime tracking infrastructure will load tracking profiles directly from its registered tracking services for any workflow instances loaded into memory. Any workflow instance that is in memory and is running will not need to have its tracking profiles reloaded unless the workflow is unloaded and then reloaded into memory.","pos":[0,356],"nodes":[{"content":"After the cache is cleared, the runtime tracking infrastructure will load tracking profiles directly from its registered tracking services for any workflow instances loaded into memory.","pos":[0,185]},{"content":"Any workflow instance that is in memory and is running will not need to have its tracking profiles reloaded unless the workflow is unloaded and then reloaded into memory.","pos":[186,356]}]}]}],"pos":[3401,3758],"yaml":true,"extradata":"MT"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Workflow.Runtime.Tracking.TrackingProfileCache\n  commentId: T:System.Workflow.Runtime.Tracking.TrackingProfileCache\n  id: TrackingProfileCache\n  children:\n  - System.Workflow.Runtime.Tracking.TrackingProfileCache.Clear\n  langs:\n  - csharp\n  name: TrackingProfileCache\n  nameWithType: TrackingProfileCache\n  fullName: System.Workflow.Runtime.Tracking.TrackingProfileCache\n  type: Class\n  assemblies:\n  - System.Workflow.Runtime\n  namespace: System.Workflow.Runtime.Tracking\n  summary: Provides a method that a host application can use to clear the tracking profile cache.\n  remarks: \"> [!NOTE]\\n>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  \\n  \\n When the workflow runtime engine has one or more tracking services registered with it, the runtime tracking infrastructure must determine whether tracking profiles exist for any workflow that is loaded into memory. The runtime tracking infrastructure maintains a cache of tracking profiles which it checks before it requests a <xref:System.Workflow.Runtime.Tracking.TrackingProfile> for the workflow from each tracking service. The <xref:System.Workflow.Runtime.Tracking.TrackingProfileCache> class provides a static method, <xref:System.Workflow.Runtime.Tracking.TrackingProfileCache.Clear%2A>, which a host application can use to clear the tracking profile cache. This will force the runtime tracking infrastructure to load tracking profiles from its registered tracking services for any workflow instances that are loaded into memory after the cache is cleared.  \\n  \\n> [!NOTE]\\n>  <xref:System.Workflow.Runtime.Tracking.TrackingProfile> caching is not supported for markup only workflows.\"\n  syntax:\n    content: >-\n      [System.Obsolete(\"The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*\")]\n\n      public static class TrackingProfileCache\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Runtime.Tracking/TrackingProfileCache.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Runtime.Tracking.TrackingProfileCache.Clear\n  commentId: M:System.Workflow.Runtime.Tracking.TrackingProfileCache.Clear\n  id: Clear\n  parent: System.Workflow.Runtime.Tracking.TrackingProfileCache\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: TrackingProfileCache.Clear()\n  fullName: TrackingProfileCache.Clear()\n  type: Method\n  assemblies:\n  - System.Workflow.Runtime\n  namespace: System.Workflow.Runtime.Tracking\n  summary: Clears the tracking profile cache maintained by the runtime tracking infrastructure of all tracking profiles.\n  remarks: After the cache is cleared, the runtime tracking infrastructure will load tracking profiles directly from its registered tracking services for any workflow instances loaded into memory. Any workflow instance that is in memory and is running will not need to have its tracking profiles reloaded unless the workflow is unloaded and then reloaded into memory.\n  syntax:\n    content: public static void Clear ();\n    parameters: []\n  overload: System.Workflow.Runtime.Tracking.TrackingProfileCache.Clear*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Runtime.Tracking/TrackingProfileCache.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Workflow.Runtime.Tracking.TrackingProfileCache.Clear\n  parent: System.Workflow.Runtime.Tracking.TrackingProfileCache\n  isExternal: false\n  name: Clear()\n  nameWithType: TrackingProfileCache.Clear()\n  fullName: TrackingProfileCache.Clear()\n- uid: System.Workflow.Runtime.Tracking.TrackingProfileCache.Clear*\n  parent: System.Workflow.Runtime.Tracking.TrackingProfileCache\n  isExternal: false\n  name: Clear\n  nameWithType: TrackingProfileCache.Clear\n  fullName: TrackingProfileCache.Clear\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Runtime.Tracking/TrackingProfileCache.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}