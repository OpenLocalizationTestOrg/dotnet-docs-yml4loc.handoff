### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider
  commentId: T:System.ServiceModel.Persistence.LockingPersistenceProvider
  id: LockingPersistenceProvider
  children:
  - System.ServiceModel.Persistence.LockingPersistenceProvider.#ctor(System.Guid)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.AsyncCallback,System.Object)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUnlock(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan,System.Boolean)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.EndUnlock(System.IAsyncResult)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.Load(System.TimeSpan)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.Load(System.TimeSpan,System.Boolean)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.Object@)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.Unlock(System.TimeSpan)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan,System.Boolean)
  langs:
  - csharp
  name: LockingPersistenceProvider
  nameWithType: LockingPersistenceProvider
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider
  type: Class
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: The abstract base class from which all durable service persistence providers that implement locking are derived.
  remarks: In addition to persistence, the <xref:System.ServiceModel.Persistence.LockingPersistenceProvider> class implements locking of service state data records. Methods that interact with persisted data (such as the `Load` method) have an optional parameter (`lockInstance`) that defines whether locks on the data in question are released or maintained.
  syntax:
    content: >-
      [System.Obsolete("The WF3 types are deprecated.  Instead, please use the new WF4 types from System.Activities.*")]

      public abstract class LockingPersistenceProvider : System.ServiceModel.Persistence.PersistenceProvider
  inheritance:
  - System.Object
  - System.ServiceModel.Channels.CommunicationObject
  - System.ServiceModel.Persistence.PersistenceProvider
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  - System.ServiceModel.Channels.CommunicationObject.Abort
  - System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.CommunicationObject.Close
  - System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)
  - System.ServiceModel.Channels.CommunicationObject.Closed
  - System.ServiceModel.Channels.CommunicationObject.Closing
  - System.ServiceModel.Channels.CommunicationObject.DefaultCloseTimeout
  - System.ServiceModel.Channels.CommunicationObject.DefaultOpenTimeout
  - System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)
  - System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)
  - System.ServiceModel.Channels.CommunicationObject.Fault
  - System.ServiceModel.Channels.CommunicationObject.Faulted
  - System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType
  - System.ServiceModel.Channels.CommunicationObject.IsDisposed
  - System.ServiceModel.Channels.CommunicationObject.OnAbort
  - System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)
  - System.ServiceModel.Channels.CommunicationObject.OnClosed
  - System.ServiceModel.Channels.CommunicationObject.OnClosing
  - System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)
  - System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)
  - System.ServiceModel.Channels.CommunicationObject.OnFaulted
  - System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)
  - System.ServiceModel.Channels.CommunicationObject.OnOpened
  - System.ServiceModel.Channels.CommunicationObject.OnOpening
  - System.ServiceModel.Channels.CommunicationObject.Open
  - System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)
  - System.ServiceModel.Channels.CommunicationObject.Opened
  - System.ServiceModel.Channels.CommunicationObject.Opening
  - System.ServiceModel.Channels.CommunicationObject.State
  - System.ServiceModel.Channels.CommunicationObject.ThisLock
  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed
  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable
  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen
  - System.ServiceModel.Persistence.PersistenceProvider.BeginDelete(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Persistence.PersistenceProvider.Delete(System.Object,System.TimeSpan)
  - System.ServiceModel.Persistence.PersistenceProvider.EndCreate(System.IAsyncResult)
  - System.ServiceModel.Persistence.PersistenceProvider.EndDelete(System.IAsyncResult)
  - System.ServiceModel.Persistence.PersistenceProvider.EndLoad(System.IAsyncResult)
  - System.ServiceModel.Persistence.PersistenceProvider.EndLoadIfChanged(System.IAsyncResult,System.Object@)
  - System.ServiceModel.Persistence.PersistenceProvider.EndUpdate(System.IAsyncResult)
  - System.ServiceModel.Persistence.PersistenceProvider.Id
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/LockingPersistenceProvider.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.#ctor(System.Guid)
  commentId: M:System.ServiceModel.Persistence.LockingPersistenceProvider.#ctor(System.Guid)
  id: '#ctor(System.Guid)'
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: LockingPersistenceProvider(Guid)
  nameWithType: LockingPersistenceProvider.LockingPersistenceProvider(Guid)
  fullName: LockingPersistenceProvider.LockingPersistenceProvider(Guid)
  type: Constructor
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: When implemented in a derived class, creates a new instance of the <xref href="System.ServiceModel.Persistence.LockingPersistenceProvider"></xref> class, configured with the specified identity value.
  syntax:
    content: protected LockingPersistenceProvider (Guid id);
    parameters:
    - id: id
      type: System.Guid
      description: The unique identifier to be associated with this persistence provider instance.
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/LockingPersistenceProvider.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: BeginCreate(Object, TimeSpan, AsyncCallback, Object)
  nameWithType: LockingPersistenceProvider.BeginCreate(Object, TimeSpan, AsyncCallback, Object)
  fullName: LockingPersistenceProvider.BeginCreate(Object, TimeSpan, AsyncCallback, Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: Begins an asynchronous operation to create instance state information in the persistence store using the parameters. This method does not unlock the instance after saving the state information.
  remarks: This method calls into the <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate%2A> method, which takes an additional parameter to determine whether the instance is unlocked. This method passes `false` as a value for this parameter to the calling method.
  syntax:
    content: public override IAsyncResult BeginCreate (object instance, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: instance
      type: System.Object
      description: The instance whose state information is saved into the persistence store.
    - id: timeout
      type: System.TimeSpan
      description: The interval in which the operation must be completed without timing out.
    - id: callback
      type: System.AsyncCallback
      description: The delegate that receives the notification when the operation completes.
    - id: state
      type: System.Object
      description: The state information associated with the asynchronous operation.
    return:
      type: System.IAsyncResult
      description: The status of an asynchronous operation.
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/LockingPersistenceProvider.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)
  id: BeginCreate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: BeginCreate(Object, TimeSpan, Boolean, AsyncCallback, Object)
  nameWithType: LockingPersistenceProvider.BeginCreate(Object, TimeSpan, Boolean, AsyncCallback, Object)
  fullName: LockingPersistenceProvider.BeginCreate(Object, TimeSpan, Boolean, AsyncCallback, Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: Begins an asynchronous operation to create instance state information in the persistence store using the parameters. This method unlocks the instance after saving the instance state if the value of the <code>unlockInstance</code> parameter is `true`.
  syntax:
    content: public abstract IAsyncResult BeginCreate (object instance, TimeSpan timeout, bool unlockInstance, AsyncCallback callback, object state);
    parameters:
    - id: instance
      type: System.Object
      description: The instance whose state information is saved into the persistence store.
    - id: timeout
      type: System.TimeSpan
      description: The interval in which the operation must be completed without timing out.
    - id: unlockInstance
      type: System.Boolean
      description: '`true` if the instance must be unlocked in the persistence store; otherwise `false`.'
    - id: callback
      type: System.AsyncCallback
      description: The delegate that receives the notification when the operation completes.
    - id: state
      type: System.Object
      description: The state information associated with the asynchronous operation.
    return:
      type: System.IAsyncResult
      description: The status of an asynchronous operation.
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/LockingPersistenceProvider.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: BeginLoad(TimeSpan, AsyncCallback, Object)
  nameWithType: LockingPersistenceProvider.BeginLoad(TimeSpan, AsyncCallback, Object)
  fullName: LockingPersistenceProvider.BeginLoad(TimeSpan, AsyncCallback, Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: Begins an asynchronous operation to load an instance based on state information in the persistence store using the parameters. This method does not lock the instance.
  remarks: This method calls into the <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad%2A>, which takes an additional parameter that specifies whether the instance must be locked in the persistence store. This method passes `false` as a value for this parameter to the calling method.
  syntax:
    content: public override IAsyncResult BeginLoad (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: The interval in which the operation must be completed without timing out.
    - id: callback
      type: System.AsyncCallback
      description: The delegate that receives the notification when the operation completes.
    - id: state
      type: System.Object
      description: The state information associated with the asynchronous operation.
    return:
      type: System.IAsyncResult
      description: The status of an asynchronous operation.
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/LockingPersistenceProvider.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)
  id: BeginLoad(System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: BeginLoad(TimeSpan, Boolean, AsyncCallback, Object)
  nameWithType: LockingPersistenceProvider.BeginLoad(TimeSpan, Boolean, AsyncCallback, Object)
  fullName: LockingPersistenceProvider.BeginLoad(TimeSpan, Boolean, AsyncCallback, Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: Begins an asynchronous operation to load an instance based on state information in the persistence store using the parameters. This method locks the instance after loading the instance state if the value of the <code>lockInstance</code> parameter is `true`.
  syntax:
    content: public abstract IAsyncResult BeginLoad (TimeSpan timeout, bool lockInstance, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: An interval in which the operation must be completed before timing out.
    - id: lockInstance
      type: System.Boolean
      description: '`true` if the instance must be locked; otherwise `false`.'
    - id: callback
      type: System.AsyncCallback
      description: The delegate that receives the notification when the operation completes.
    - id: state
      type: System.Object
      description: The state information associated with the asynchronous operation.
    return:
      type: System.IAsyncResult
      description: The status of an asynchronous operation.
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/LockingPersistenceProvider.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)
  id: BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: BeginLoadIfChanged(TimeSpan, Object, AsyncCallback, Object)
  nameWithType: LockingPersistenceProvider.BeginLoadIfChanged(TimeSpan, Object, AsyncCallback, Object)
  fullName: LockingPersistenceProvider.BeginLoadIfChanged(TimeSpan, Object, AsyncCallback, Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: When implemented in a derived class, represents the beginning of the LoadIfChanged phase. The LoadIfChanged phase occurs when state data is loaded into the persistence provider from the persistence store and the state data in the persistence store has been changed. This method call does not lock the instance in the persistence store.
  syntax:
    content: public override IAsyncResult BeginLoadIfChanged (TimeSpan timeout, object instanceToken, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: The time period after which the persistence provider aborts this operation.
    - id: instanceToken
      type: System.Object
      description: The token returned by a previous `Create` or `Update` method that represents the current state held by the caller.
    - id: callback
      type: System.AsyncCallback
      description: The method to be called when the operation is completed.
    - id: state
      type: System.Object
      description: A user-provided object that distinguishes this particular asynchronous operation from other operations.
    return:
      type: System.IAsyncResult
      description: The status of an asynchronous operation.
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/LockingPersistenceProvider.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.AsyncCallback,System.Object)
  id: BeginLoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: BeginLoadIfChanged(TimeSpan, Object, Boolean, AsyncCallback, Object)
  nameWithType: LockingPersistenceProvider.BeginLoadIfChanged(TimeSpan, Object, Boolean, AsyncCallback, Object)
  fullName: LockingPersistenceProvider.BeginLoadIfChanged(TimeSpan, Object, Boolean, AsyncCallback, Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: When implemented in a derived class, represents the beginning of the LoadIfChanged phase. The LoadIfChanged phase occurs when state data is loaded into the persistence provider from the persistence store and the state data in the persistence store has been changed. This method call lets you specify whether you want to lock the instance in the persistence store.
  syntax:
    content: public virtual IAsyncResult BeginLoadIfChanged (TimeSpan timeout, object instanceToken, bool lockInstance, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: The time period after which the persistence provider aborts this operation.
    - id: instanceToken
      type: System.Object
      description: The token returned by a previous `Create` or `Update` method that represents the current state held by the caller.
    - id: lockInstance
      type: System.Boolean
      description: '`true` if the instance is locked in the persistence store; otherwise `false`.'
    - id: callback
      type: System.AsyncCallback
      description: The method to be called when the operation is completed.
    - id: state
      type: System.Object
      description: A user-provided object that distinguishes this particular asynchronous operation from other operations.
    return:
      type: System.IAsyncResult
      description: The status of an asynchronous operation.
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/LockingPersistenceProvider.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUnlock(System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUnlock(System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginUnlock(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: BeginUnlock(TimeSpan, AsyncCallback, Object)
  nameWithType: LockingPersistenceProvider.BeginUnlock(TimeSpan, AsyncCallback, Object)
  fullName: LockingPersistenceProvider.BeginUnlock(TimeSpan, AsyncCallback, Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: Begins an asynchronous operation to unlock an instance in the persistence store.
  syntax:
    content: public abstract IAsyncResult BeginUnlock (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: An interval in which the operation must be completed before timing out.
    - id: callback
      type: System.AsyncCallback
      description: The delegate that receives the notification when the operation completes.
    - id: state
      type: System.Object
      description: The state information associated with the asynchronous operation.
    return:
      type: System.IAsyncResult
      description: The status of an asynchronous operation.
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUnlock*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/LockingPersistenceProvider.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)
  id: BeginUpdate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: BeginUpdate(Object, TimeSpan, Boolean, AsyncCallback, Object)
  nameWithType: LockingPersistenceProvider.BeginUpdate(Object, TimeSpan, Boolean, AsyncCallback, Object)
  fullName: LockingPersistenceProvider.BeginUpdate(Object, TimeSpan, Boolean, AsyncCallback, Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: Begins an asynchronous operation to update instance state information in the persistence store using the parameters passed. This operation locks the instance in the persistence store if the value of the <code>unlockInstance</code> parameter is `true`.
  syntax:
    content: public abstract IAsyncResult BeginUpdate (object instance, TimeSpan timeout, bool unlockInstance, AsyncCallback callback, object state);
    parameters:
    - id: instance
      type: System.Object
      description: The instance whose state information is being updated in the persistence store.
    - id: timeout
      type: System.TimeSpan
      description: The interval in which the operation must complete without timing out.
    - id: unlockInstance
      type: System.Boolean
      description: '`true` if the instance must be locked after the instance state is updated in the persistence store; otherwise `false`.'
    - id: callback
      type: System.AsyncCallback
      description: The delegate that receives the notification when the operation completes.
    - id: state
      type: System.Object
      description: The state information about the asynchronous operation.
    return:
      type: System.IAsyncResult
      description: The status of an asynchronous operation.
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/LockingPersistenceProvider.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: BeginUpdate(Object, TimeSpan, AsyncCallback, Object)
  nameWithType: LockingPersistenceProvider.BeginUpdate(Object, TimeSpan, AsyncCallback, Object)
  fullName: LockingPersistenceProvider.BeginUpdate(Object, TimeSpan, AsyncCallback, Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: Begins an asynchronous operation to update instance state information in the persistence store using the parameters passed. This operation does not unlock the instance in the instance store.
  remarks: This method calls into the <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate%2A> method and passes a `false` value for the `unlockInstance` parameter.
  syntax:
    content: public override IAsyncResult BeginUpdate (object instance, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: instance
      type: System.Object
      description: The instance whose state information is being updated in the persistence store.
    - id: timeout
      type: System.TimeSpan
      description: The interval in which the operation must complete without timing out.
    - id: callback
      type: System.AsyncCallback
      description: The delegate that receives the notification when the operation is completed.
    - id: state
      type: System.Object
      description: The state information about the asynchronous operation.
    return:
      type: System.IAsyncResult
      description: The status of an asynchronous operation.
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/LockingPersistenceProvider.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan)
  commentId: M:System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan)
  id: Create(System.Object,System.TimeSpan)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: Create(Object, TimeSpan)
  nameWithType: LockingPersistenceProvider.Create(Object, TimeSpan)
  fullName: LockingPersistenceProvider.Create(Object, TimeSpan)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: Creates instance state information in the persistence store using parameters passed into the method. This method does not unlock the instance in the persistence store after saving the instance state.
  syntax:
    content: public override object Create (object instance, TimeSpan timeout);
    parameters:
    - id: instance
      type: System.Object
      description: The instance object whose state information must be saved into the persistence store.
    - id: timeout
      type: System.TimeSpan
      description: The interval in which the operation must complete before timing out.
    return:
      type: System.Object
      description: The state information.
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.Create*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/LockingPersistenceProvider.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan,System.Boolean)
  commentId: M:System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan,System.Boolean)
  id: Create(System.Object,System.TimeSpan,System.Boolean)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: Create(Object, TimeSpan, Boolean)
  nameWithType: LockingPersistenceProvider.Create(Object, TimeSpan, Boolean)
  fullName: LockingPersistenceProvider.Create(Object, TimeSpan, Boolean)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: This method creates instance state information in the persistence store using parameters passed into the method. The method unlocks the instance in the instance store if the value of the <code>unlockInstance</code> parameter is `true`.
  syntax:
    content: public abstract object Create (object instance, TimeSpan timeout, bool unlockInstance);
    parameters:
    - id: instance
      type: System.Object
      description: The instance object whose state information is saved into the persistence store.
    - id: timeout
      type: System.TimeSpan
      description: The interval within which the operation must complete before timing out.
    - id: unlockInstance
      type: System.Boolean
      description: '`true` if the instance must be unlocked in the persistence store; otherwise `false`.'
    return:
      type: System.Object
      description: The state information.
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.Create*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/LockingPersistenceProvider.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.EndUnlock(System.IAsyncResult)
  commentId: M:System.ServiceModel.Persistence.LockingPersistenceProvider.EndUnlock(System.IAsyncResult)
  id: EndUnlock(System.IAsyncResult)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: EndUnlock(IAsyncResult)
  nameWithType: LockingPersistenceProvider.EndUnlock(IAsyncResult)
  fullName: LockingPersistenceProvider.EndUnlock(IAsyncResult)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: Ends the asynchronous operation to unlock an instance in the persistence store.
  syntax:
    content: public abstract void EndUnlock (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: The result returned by the unlock operation.
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.EndUnlock*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/LockingPersistenceProvider.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Load(System.TimeSpan)
  commentId: M:System.ServiceModel.Persistence.LockingPersistenceProvider.Load(System.TimeSpan)
  id: Load(System.TimeSpan)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: Load(TimeSpan)
  nameWithType: LockingPersistenceProvider.Load(TimeSpan)
  fullName: LockingPersistenceProvider.Load(TimeSpan)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: Loads service state information from the persistence store without locking the instance.
  remarks: This method invokes the <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Load%2A> method with `lockInstance` parameter set to `false`.
  syntax:
    content: public override object Load (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: The time period after which the persistence provider aborts this attempt.
    return:
      type: System.Object
      description: The service state information.
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.Load*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/LockingPersistenceProvider.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Load(System.TimeSpan,System.Boolean)
  commentId: M:System.ServiceModel.Persistence.LockingPersistenceProvider.Load(System.TimeSpan,System.Boolean)
  id: Load(System.TimeSpan,System.Boolean)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: Load(TimeSpan, Boolean)
  nameWithType: LockingPersistenceProvider.Load(TimeSpan, Boolean)
  fullName: LockingPersistenceProvider.Load(TimeSpan, Boolean)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: Loads state information from the persistence store after locking the instance.
  syntax:
    content: public abstract object Load (TimeSpan timeout, bool lockInstance);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: The period after which the persistence provider aborts this operation.
    - id: lockInstance
      type: System.Boolean
      description: '`true` if the instance should be locked; otherwise `false`.'
    return:
      type: System.Object
      description: The state information.
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.Load*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/LockingPersistenceProvider.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)
  commentId: M:System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)
  id: LoadIfChanged(System.TimeSpan,System.Object,System.Object@)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: LoadIfChanged(TimeSpan, Object, Object)
  nameWithType: LockingPersistenceProvider.LoadIfChanged(TimeSpan, Object, Object)
  fullName: LockingPersistenceProvider.LoadIfChanged(TimeSpan, Object, Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: Loads the instance state information from the persistence store if the state information has been changed since the last time the information was loaded by the caller. This method does not lock the instance in the persistence store.
  syntax:
    content: public override bool LoadIfChanged (TimeSpan timeout, object instanceToken, out object instance);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: The time period after which the persistence provider aborts this operation.
    - id: instanceToken
      type: System.Object
      description: The token returned by the previous `Create` or `Update` method calls, which represents the current state held by the caller.
    - id: instance
      type: System.Object
      description: The actual instance state information.
    return:
      type: System.Boolean
      description: '`true` if the instance should be locked in the persistence store at the end of this operation; otherwise `false`.'
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/LockingPersistenceProvider.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.Object@)
  commentId: M:System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.Object@)
  id: LoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.Object@)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: LoadIfChanged(TimeSpan, Object, Boolean, Object)
  nameWithType: LockingPersistenceProvider.LoadIfChanged(TimeSpan, Object, Boolean, Object)
  fullName: LockingPersistenceProvider.LoadIfChanged(TimeSpan, Object, Boolean, Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: Loads the instance state information from the persistence store if the state information has been changed since the last time the information was loaded by the caller. This method also lets the caller specify whether to lock the instance in the persistence store.
  syntax:
    content: public virtual bool LoadIfChanged (TimeSpan timeout, object instanceToken, bool lockInstance, out object instance);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: The time period after which the persistence provider aborts this operation.
    - id: instanceToken
      type: System.Object
      description: The token returned by the previous Create or Update method calls, which represents the current state held by the caller.
    - id: lockInstance
      type: System.Boolean
      description: '`true` if the instance should be locked in the persistence store at the end of this operation; otherwise `false`.'
    - id: instance
      type: System.Object
      description: The instance state information.
    return:
      type: System.Boolean
      description: '`true` if the instance should be locked in the persistence store at the end of this operation; otherwise `false`.'
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/LockingPersistenceProvider.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Unlock(System.TimeSpan)
  commentId: M:System.ServiceModel.Persistence.LockingPersistenceProvider.Unlock(System.TimeSpan)
  id: Unlock(System.TimeSpan)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: Unlock(TimeSpan)
  nameWithType: LockingPersistenceProvider.Unlock(TimeSpan)
  fullName: LockingPersistenceProvider.Unlock(TimeSpan)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: Unlocks the instance whose ID is specified when constructing the <xref href="System.ServiceModel.Persistence.LockingPersistenceProvider"></xref> object in the persistence store.
  syntax:
    content: public abstract void Unlock (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: The time period after which the persistence provider aborts the operation.
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.Unlock*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/LockingPersistenceProvider.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan)
  commentId: M:System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan)
  id: Update(System.Object,System.TimeSpan)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: Update(Object, TimeSpan)
  nameWithType: LockingPersistenceProvider.Update(Object, TimeSpan)
  fullName: LockingPersistenceProvider.Update(Object, TimeSpan)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: When implemented in a derived class, updates the instance state information in the persistence store. This method does not unlock the instance after updating the instance state information in the persistence store.
  syntax:
    content: public override object Update (object instance, TimeSpan timeout);
    parameters:
    - id: instance
      type: System.Object
      description: The instance state information.
    - id: timeout
      type: System.TimeSpan
      description: The time period after which the persistence provider aborts the operation.
    return:
      type: System.Object
      description: The instance state information.
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.Update*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/LockingPersistenceProvider.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan,System.Boolean)
  commentId: M:System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan,System.Boolean)
  id: Update(System.Object,System.TimeSpan,System.Boolean)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: Update(Object, TimeSpan, Boolean)
  nameWithType: LockingPersistenceProvider.Update(Object, TimeSpan, Boolean)
  fullName: LockingPersistenceProvider.Update(Object, TimeSpan, Boolean)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: When implemented in a derived class, updates the instance state information in the persistence store. This method does not unlock the instance after updating the instance state information in the persistence store.
  syntax:
    content: public abstract object Update (object instance, TimeSpan timeout, bool unlockInstance);
    parameters:
    - id: instance
      type: System.Object
      description: The instance state information.
    - id: timeout
      type: System.TimeSpan
      description: The time period after which the persistence provider aborts the operation.
    - id: unlockInstance
      type: System.Boolean
      description: '`true` if the instance is unlocked after the instance state information is updated; otherwise `false`.'
    return:
      type: System.Object
      description: The instance state information.
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.Update*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/LockingPersistenceProvider.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
references:
- uid: System.ServiceModel.Persistence.PersistenceProvider
  parent: System.ServiceModel.Persistence
  isExternal: false
  name: PersistenceProvider
  nameWithType: PersistenceProvider
  fullName: System.ServiceModel.Persistence.PersistenceProvider
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.#ctor(System.Guid)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: LockingPersistenceProvider(Guid)
  nameWithType: LockingPersistenceProvider.LockingPersistenceProvider(Guid)
  fullName: LockingPersistenceProvider.LockingPersistenceProvider(Guid)
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: BeginCreate(Object, TimeSpan, AsyncCallback, Object)
  nameWithType: LockingPersistenceProvider.BeginCreate(Object, TimeSpan, AsyncCallback, Object)
  fullName: LockingPersistenceProvider.BeginCreate(Object, TimeSpan, AsyncCallback, Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: false
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.AsyncCallback
  parent: System
  isExternal: false
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: BeginCreate(Object, TimeSpan, Boolean, AsyncCallback, Object)
  nameWithType: LockingPersistenceProvider.BeginCreate(Object, TimeSpan, Boolean, AsyncCallback, Object)
  fullName: LockingPersistenceProvider.BeginCreate(Object, TimeSpan, Boolean, AsyncCallback, Object)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: BeginLoad(TimeSpan, AsyncCallback, Object)
  nameWithType: LockingPersistenceProvider.BeginLoad(TimeSpan, AsyncCallback, Object)
  fullName: LockingPersistenceProvider.BeginLoad(TimeSpan, AsyncCallback, Object)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: BeginLoad(TimeSpan, Boolean, AsyncCallback, Object)
  nameWithType: LockingPersistenceProvider.BeginLoad(TimeSpan, Boolean, AsyncCallback, Object)
  fullName: LockingPersistenceProvider.BeginLoad(TimeSpan, Boolean, AsyncCallback, Object)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: BeginLoadIfChanged(TimeSpan, Object, AsyncCallback, Object)
  nameWithType: LockingPersistenceProvider.BeginLoadIfChanged(TimeSpan, Object, AsyncCallback, Object)
  fullName: LockingPersistenceProvider.BeginLoadIfChanged(TimeSpan, Object, AsyncCallback, Object)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: BeginLoadIfChanged(TimeSpan, Object, Boolean, AsyncCallback, Object)
  nameWithType: LockingPersistenceProvider.BeginLoadIfChanged(TimeSpan, Object, Boolean, AsyncCallback, Object)
  fullName: LockingPersistenceProvider.BeginLoadIfChanged(TimeSpan, Object, Boolean, AsyncCallback, Object)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUnlock(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: BeginUnlock(TimeSpan, AsyncCallback, Object)
  nameWithType: LockingPersistenceProvider.BeginUnlock(TimeSpan, AsyncCallback, Object)
  fullName: LockingPersistenceProvider.BeginUnlock(TimeSpan, AsyncCallback, Object)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: BeginUpdate(Object, TimeSpan, Boolean, AsyncCallback, Object)
  nameWithType: LockingPersistenceProvider.BeginUpdate(Object, TimeSpan, Boolean, AsyncCallback, Object)
  fullName: LockingPersistenceProvider.BeginUpdate(Object, TimeSpan, Boolean, AsyncCallback, Object)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: BeginUpdate(Object, TimeSpan, AsyncCallback, Object)
  nameWithType: LockingPersistenceProvider.BeginUpdate(Object, TimeSpan, AsyncCallback, Object)
  fullName: LockingPersistenceProvider.BeginUpdate(Object, TimeSpan, AsyncCallback, Object)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: Create(Object, TimeSpan)
  nameWithType: LockingPersistenceProvider.Create(Object, TimeSpan)
  fullName: LockingPersistenceProvider.Create(Object, TimeSpan)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan,System.Boolean)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: Create(Object, TimeSpan, Boolean)
  nameWithType: LockingPersistenceProvider.Create(Object, TimeSpan, Boolean)
  fullName: LockingPersistenceProvider.Create(Object, TimeSpan, Boolean)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.EndUnlock(System.IAsyncResult)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: EndUnlock(IAsyncResult)
  nameWithType: LockingPersistenceProvider.EndUnlock(IAsyncResult)
  fullName: LockingPersistenceProvider.EndUnlock(IAsyncResult)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Load(System.TimeSpan)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: Load(TimeSpan)
  nameWithType: LockingPersistenceProvider.Load(TimeSpan)
  fullName: LockingPersistenceProvider.Load(TimeSpan)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Load(System.TimeSpan,System.Boolean)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: Load(TimeSpan, Boolean)
  nameWithType: LockingPersistenceProvider.Load(TimeSpan, Boolean)
  fullName: LockingPersistenceProvider.Load(TimeSpan, Boolean)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: LoadIfChanged(TimeSpan, Object, Object)
  nameWithType: LockingPersistenceProvider.LoadIfChanged(TimeSpan, Object, Object)
  fullName: LockingPersistenceProvider.LoadIfChanged(TimeSpan, Object, Object)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.Object@)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: LoadIfChanged(TimeSpan, Object, Boolean, Object)
  nameWithType: LockingPersistenceProvider.LoadIfChanged(TimeSpan, Object, Boolean, Object)
  fullName: LockingPersistenceProvider.LoadIfChanged(TimeSpan, Object, Boolean, Object)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Unlock(System.TimeSpan)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: Unlock(TimeSpan)
  nameWithType: LockingPersistenceProvider.Unlock(TimeSpan)
  fullName: LockingPersistenceProvider.Unlock(TimeSpan)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: Update(Object, TimeSpan)
  nameWithType: LockingPersistenceProvider.Update(Object, TimeSpan)
  fullName: LockingPersistenceProvider.Update(Object, TimeSpan)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan,System.Boolean)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: Update(Object, TimeSpan, Boolean)
  nameWithType: LockingPersistenceProvider.Update(Object, TimeSpan, Boolean)
  fullName: LockingPersistenceProvider.Update(Object, TimeSpan, Boolean)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.#ctor*
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: LockingPersistenceProvider
  nameWithType: LockingPersistenceProvider.LockingPersistenceProvider
  fullName: LockingPersistenceProvider.LockingPersistenceProvider
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/LockingPersistenceProvider.xml
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate*
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: BeginCreate
  nameWithType: LockingPersistenceProvider.BeginCreate
  fullName: LockingPersistenceProvider.BeginCreate
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/LockingPersistenceProvider.xml
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad*
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: BeginLoad
  nameWithType: LockingPersistenceProvider.BeginLoad
  fullName: LockingPersistenceProvider.BeginLoad
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/LockingPersistenceProvider.xml
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged*
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: BeginLoadIfChanged
  nameWithType: LockingPersistenceProvider.BeginLoadIfChanged
  fullName: LockingPersistenceProvider.BeginLoadIfChanged
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/LockingPersistenceProvider.xml
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUnlock*
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: BeginUnlock
  nameWithType: LockingPersistenceProvider.BeginUnlock
  fullName: LockingPersistenceProvider.BeginUnlock
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/LockingPersistenceProvider.xml
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate*
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: BeginUpdate
  nameWithType: LockingPersistenceProvider.BeginUpdate
  fullName: LockingPersistenceProvider.BeginUpdate
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/LockingPersistenceProvider.xml
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Create*
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: Create
  nameWithType: LockingPersistenceProvider.Create
  fullName: LockingPersistenceProvider.Create
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/LockingPersistenceProvider.xml
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.EndUnlock*
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: EndUnlock
  nameWithType: LockingPersistenceProvider.EndUnlock
  fullName: LockingPersistenceProvider.EndUnlock
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/LockingPersistenceProvider.xml
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Load*
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: Load
  nameWithType: LockingPersistenceProvider.Load
  fullName: LockingPersistenceProvider.Load
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/LockingPersistenceProvider.xml
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged*
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: LoadIfChanged
  nameWithType: LockingPersistenceProvider.LoadIfChanged
  fullName: LockingPersistenceProvider.LoadIfChanged
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/LockingPersistenceProvider.xml
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Unlock*
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: Unlock
  nameWithType: LockingPersistenceProvider.Unlock
  fullName: LockingPersistenceProvider.Unlock
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/LockingPersistenceProvider.xml
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Update*
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: Update
  nameWithType: LockingPersistenceProvider.Update
  fullName: LockingPersistenceProvider.Update
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/LockingPersistenceProvider.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.ServiceModel.Channels.CommunicationObject.Abort
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Abort()
  nameWithType: CommunicationObject.Abort()
  fullName: CommunicationObject.Abort()
- uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: BeginClose(AsyncCallback, Object)
  nameWithType: CommunicationObject.BeginClose(AsyncCallback, Object)
  fullName: CommunicationObject.BeginClose(AsyncCallback, Object)
- uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: BeginClose(TimeSpan, AsyncCallback, Object)
  nameWithType: CommunicationObject.BeginClose(TimeSpan, AsyncCallback, Object)
  fullName: CommunicationObject.BeginClose(TimeSpan, AsyncCallback, Object)
- uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: BeginOpen(AsyncCallback, Object)
  nameWithType: CommunicationObject.BeginOpen(AsyncCallback, Object)
  fullName: CommunicationObject.BeginOpen(AsyncCallback, Object)
- uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: BeginOpen(TimeSpan, AsyncCallback, Object)
  nameWithType: CommunicationObject.BeginOpen(TimeSpan, AsyncCallback, Object)
  fullName: CommunicationObject.BeginOpen(TimeSpan, AsyncCallback, Object)
- uid: System.ServiceModel.Channels.CommunicationObject.Close
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Close()
  nameWithType: CommunicationObject.Close()
  fullName: CommunicationObject.Close()
- uid: System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Close(TimeSpan)
  nameWithType: CommunicationObject.Close(TimeSpan)
  fullName: CommunicationObject.Close(TimeSpan)
- uid: System.ServiceModel.Channels.CommunicationObject.Closed
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Closed
  nameWithType: CommunicationObject.Closed
  fullName: CommunicationObject.Closed
- uid: System.ServiceModel.Channels.CommunicationObject.Closing
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Closing
  nameWithType: CommunicationObject.Closing
  fullName: CommunicationObject.Closing
- uid: System.ServiceModel.Channels.CommunicationObject.DefaultCloseTimeout
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: DefaultCloseTimeout
  nameWithType: CommunicationObject.DefaultCloseTimeout
  fullName: CommunicationObject.DefaultCloseTimeout
- uid: System.ServiceModel.Channels.CommunicationObject.DefaultOpenTimeout
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: DefaultOpenTimeout
  nameWithType: CommunicationObject.DefaultOpenTimeout
  fullName: CommunicationObject.DefaultOpenTimeout
- uid: System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: EndClose(IAsyncResult)
  nameWithType: CommunicationObject.EndClose(IAsyncResult)
  fullName: CommunicationObject.EndClose(IAsyncResult)
- uid: System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: EndOpen(IAsyncResult)
  nameWithType: CommunicationObject.EndOpen(IAsyncResult)
  fullName: CommunicationObject.EndOpen(IAsyncResult)
- uid: System.ServiceModel.Channels.CommunicationObject.Fault
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Fault()
  nameWithType: CommunicationObject.Fault()
  fullName: CommunicationObject.Fault()
- uid: System.ServiceModel.Channels.CommunicationObject.Faulted
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Faulted
  nameWithType: CommunicationObject.Faulted
  fullName: CommunicationObject.Faulted
- uid: System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: GetCommunicationObjectType()
  nameWithType: CommunicationObject.GetCommunicationObjectType()
  fullName: CommunicationObject.GetCommunicationObjectType()
- uid: System.ServiceModel.Channels.CommunicationObject.IsDisposed
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: IsDisposed
  nameWithType: CommunicationObject.IsDisposed
  fullName: CommunicationObject.IsDisposed
- uid: System.ServiceModel.Channels.CommunicationObject.OnAbort
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: OnAbort()
  nameWithType: CommunicationObject.OnAbort()
  fullName: CommunicationObject.OnAbort()
- uid: System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: OnBeginClose(TimeSpan, AsyncCallback, Object)
  nameWithType: CommunicationObject.OnBeginClose(TimeSpan, AsyncCallback, Object)
  fullName: CommunicationObject.OnBeginClose(TimeSpan, AsyncCallback, Object)
- uid: System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: OnBeginOpen(TimeSpan, AsyncCallback, Object)
  nameWithType: CommunicationObject.OnBeginOpen(TimeSpan, AsyncCallback, Object)
  fullName: CommunicationObject.OnBeginOpen(TimeSpan, AsyncCallback, Object)
- uid: System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: OnClose(TimeSpan)
  nameWithType: CommunicationObject.OnClose(TimeSpan)
  fullName: CommunicationObject.OnClose(TimeSpan)
- uid: System.ServiceModel.Channels.CommunicationObject.OnClosed
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: OnClosed()
  nameWithType: CommunicationObject.OnClosed()
  fullName: CommunicationObject.OnClosed()
- uid: System.ServiceModel.Channels.CommunicationObject.OnClosing
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: OnClosing()
  nameWithType: CommunicationObject.OnClosing()
  fullName: CommunicationObject.OnClosing()
- uid: System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: OnEndClose(IAsyncResult)
  nameWithType: CommunicationObject.OnEndClose(IAsyncResult)
  fullName: CommunicationObject.OnEndClose(IAsyncResult)
- uid: System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: OnEndOpen(IAsyncResult)
  nameWithType: CommunicationObject.OnEndOpen(IAsyncResult)
  fullName: CommunicationObject.OnEndOpen(IAsyncResult)
- uid: System.ServiceModel.Channels.CommunicationObject.OnFaulted
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: OnFaulted()
  nameWithType: CommunicationObject.OnFaulted()
  fullName: CommunicationObject.OnFaulted()
- uid: System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: OnOpen(TimeSpan)
  nameWithType: CommunicationObject.OnOpen(TimeSpan)
  fullName: CommunicationObject.OnOpen(TimeSpan)
- uid: System.ServiceModel.Channels.CommunicationObject.OnOpened
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: OnOpened()
  nameWithType: CommunicationObject.OnOpened()
  fullName: CommunicationObject.OnOpened()
- uid: System.ServiceModel.Channels.CommunicationObject.OnOpening
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: OnOpening()
  nameWithType: CommunicationObject.OnOpening()
  fullName: CommunicationObject.OnOpening()
- uid: System.ServiceModel.Channels.CommunicationObject.Open
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Open()
  nameWithType: CommunicationObject.Open()
  fullName: CommunicationObject.Open()
- uid: System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Open(TimeSpan)
  nameWithType: CommunicationObject.Open(TimeSpan)
  fullName: CommunicationObject.Open(TimeSpan)
- uid: System.ServiceModel.Channels.CommunicationObject.Opened
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Opened
  nameWithType: CommunicationObject.Opened
  fullName: CommunicationObject.Opened
- uid: System.ServiceModel.Channels.CommunicationObject.Opening
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Opening
  nameWithType: CommunicationObject.Opening
  fullName: CommunicationObject.Opening
- uid: System.ServiceModel.Channels.CommunicationObject.State
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: State
  nameWithType: CommunicationObject.State
  fullName: CommunicationObject.State
- uid: System.ServiceModel.Channels.CommunicationObject.ThisLock
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: ThisLock
  nameWithType: CommunicationObject.ThisLock
  fullName: CommunicationObject.ThisLock
- uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: ThrowIfDisposed()
  nameWithType: CommunicationObject.ThrowIfDisposed()
  fullName: CommunicationObject.ThrowIfDisposed()
- uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: ThrowIfDisposedOrImmutable()
  nameWithType: CommunicationObject.ThrowIfDisposedOrImmutable()
  fullName: CommunicationObject.ThrowIfDisposedOrImmutable()
- uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: ThrowIfDisposedOrNotOpen()
  nameWithType: CommunicationObject.ThrowIfDisposedOrNotOpen()
  fullName: CommunicationObject.ThrowIfDisposedOrNotOpen()
- uid: System.ServiceModel.Persistence.PersistenceProvider.BeginDelete(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: BeginDelete(Object, TimeSpan, AsyncCallback, Object)
  nameWithType: PersistenceProvider.BeginDelete(Object, TimeSpan, AsyncCallback, Object)
  fullName: PersistenceProvider.BeginDelete(Object, TimeSpan, AsyncCallback, Object)
- uid: System.ServiceModel.Persistence.PersistenceProvider.Delete(System.Object,System.TimeSpan)
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: Delete(Object, TimeSpan)
  nameWithType: PersistenceProvider.Delete(Object, TimeSpan)
  fullName: PersistenceProvider.Delete(Object, TimeSpan)
- uid: System.ServiceModel.Persistence.PersistenceProvider.EndCreate(System.IAsyncResult)
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: EndCreate(IAsyncResult)
  nameWithType: PersistenceProvider.EndCreate(IAsyncResult)
  fullName: PersistenceProvider.EndCreate(IAsyncResult)
- uid: System.ServiceModel.Persistence.PersistenceProvider.EndDelete(System.IAsyncResult)
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: EndDelete(IAsyncResult)
  nameWithType: PersistenceProvider.EndDelete(IAsyncResult)
  fullName: PersistenceProvider.EndDelete(IAsyncResult)
- uid: System.ServiceModel.Persistence.PersistenceProvider.EndLoad(System.IAsyncResult)
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: EndLoad(IAsyncResult)
  nameWithType: PersistenceProvider.EndLoad(IAsyncResult)
  fullName: PersistenceProvider.EndLoad(IAsyncResult)
- uid: System.ServiceModel.Persistence.PersistenceProvider.EndLoadIfChanged(System.IAsyncResult,System.Object@)
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: EndLoadIfChanged(IAsyncResult, Object)
  nameWithType: PersistenceProvider.EndLoadIfChanged(IAsyncResult, Object)
  fullName: PersistenceProvider.EndLoadIfChanged(IAsyncResult, Object)
- uid: System.ServiceModel.Persistence.PersistenceProvider.EndUpdate(System.IAsyncResult)
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: EndUpdate(IAsyncResult)
  nameWithType: PersistenceProvider.EndUpdate(IAsyncResult)
  fullName: PersistenceProvider.EndUpdate(IAsyncResult)
- uid: System.ServiceModel.Persistence.PersistenceProvider.Id
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: Id
  nameWithType: PersistenceProvider.Id
  fullName: PersistenceProvider.Id
