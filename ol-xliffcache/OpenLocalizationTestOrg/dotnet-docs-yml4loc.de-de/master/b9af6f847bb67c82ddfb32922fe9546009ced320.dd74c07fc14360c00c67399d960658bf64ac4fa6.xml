{"nodes":[{"content":"Accesses the managed version of the <xref href=\"System.Security.Cryptography.Rijndael\"></xref> algorithm. This class cannot be inherited.","nodes":[{"pos":[0,137],"content":"Accesses the managed version of the <xref href=\"System.Security.Cryptography.Rijndael\"></xref> algorithm. This class cannot be inherited.","nodes":[{"content":"Accesses the managed version of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Rijndael\"&gt;&lt;/xref&gt;</ph> algorithm.","pos":[0,105],"source":"Accesses the managed version of the <xref href=\"System.Security.Cryptography.Rijndael\"></xref> algorithm."},{"content":"This class cannot be inherited.","pos":[106,137]}]}],"pos":[1431,1569],"yaml":true},{"content":"This algorithm supports key lengths of 128, 192, or 256 bits; defaulting to 256 bits. This algorithm supports block sizes of 128, 192, or 256 bits; defaulting to 128 bits (<xref:System.Security.Cryptography.Aes>-compatible).  \n  \n The <xref:System.Security.Cryptography.Rijndael> algorithm is the predecessor of <xref:System.Security.Cryptography.Aes>. You should use the <xref:System.Security.Cryptography.Aes> class instead of <xref:System.Security.Cryptography.RijndaelManaged>. For more information, see the entry [The Differences Between Rijndael and AES](http://go.microsoft.com/fwlink/?LinkId=200932) in the .NET Security blog.","nodes":[{"pos":[0,224],"content":"This algorithm supports key lengths of 128, 192, or 256 bits; defaulting to 256 bits. This algorithm supports block sizes of 128, 192, or 256 bits; defaulting to 128 bits (<xref:System.Security.Cryptography.Aes>-compatible).","nodes":[{"content":"This algorithm supports key lengths of 128, 192, or 256 bits; defaulting to 256 bits. This algorithm supports block sizes of 128, 192, or 256 bits; defaulting to 128 bits (<xref:System.Security.Cryptography.Aes>-compatible).","pos":[0,224],"nodes":[{"content":"This algorithm supports key lengths of 128, 192, or 256 bits; defaulting to 256 bits.","pos":[0,85]},{"content":"This algorithm supports block sizes of 128, 192, or 256 bits; defaulting to 128 bits (<ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Aes&gt;</ph>-compatible).","pos":[86,224],"source":" This algorithm supports block sizes of 128, 192, or 256 bits; defaulting to 128 bits (<xref:System.Security.Cryptography.Aes>-compatible)."}]}]},{"pos":[231,634],"content":"The <xref:System.Security.Cryptography.Rijndael> algorithm is the predecessor of <xref:System.Security.Cryptography.Aes>. You should use the <xref:System.Security.Cryptography.Aes> class instead of <xref:System.Security.Cryptography.RijndaelManaged>. For more information, see the entry [The Differences Between Rijndael and AES](http://go.microsoft.com/fwlink/?LinkId=200932) in the .NET Security blog.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Rijndael&gt;</ph> algorithm is the predecessor of <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.Aes&gt;</ph>.","pos":[0,121],"source":"The <xref:System.Security.Cryptography.Rijndael> algorithm is the predecessor of <xref:System.Security.Cryptography.Aes>."},{"content":"You should use the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Aes&gt;</ph> class instead of <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.RijndaelManaged&gt;</ph>.","pos":[122,250],"source":" You should use the <xref:System.Security.Cryptography.Aes> class instead of <xref:System.Security.Cryptography.RijndaelManaged>."},{"content":"For more information, see the entry <bpt id=\"p1\">[</bpt>The Differences Between Rijndael and AES<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=200932)</ept> in the .NET Security blog.","pos":[251,403],"source":" For more information, see the entry [The Differences Between Rijndael and AES](http://go.microsoft.com/fwlink/?LinkId=200932) in the .NET Security blog."}]}],"pos":[1580,2219],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.RijndaelManaged\"></xref> class.","nodes":[{"pos":[0,106],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.RijndaelManaged\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.RijndaelManaged\"></xref> class."}],"pos":[5674,5781],"yaml":true},{"content":"This class is not compliant with the FIPS algorithm.","nodes":[{"pos":[0,52],"content":"This class is not compliant with the FIPS algorithm.","nodes":[{"content":"This class is not compliant with the FIPS algorithm.","pos":[0,52]}]}],"pos":[6527,6580],"yaml":true},{"content":"Creates a symmetric <xref href=\"System.Security.Cryptography.Rijndael\"></xref> decryptor object with the specified <xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Key\"></xref> and initialization vector (<xref href=\"System.Security.Cryptography.SymmetricAlgorithm.IV\"></xref>).","nodes":[{"pos":[0,288],"content":"Creates a symmetric <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Rijndael\"&gt;&lt;/xref&gt;</ph> decryptor object with the specified <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Key\"&gt;&lt;/xref&gt;</ph> and initialization vector (<ph id=\"ph3\">&lt;xref href=\"System.Security.Cryptography.SymmetricAlgorithm.IV\"&gt;&lt;/xref&gt;</ph>).","source":"Creates a symmetric <xref href=\"System.Security.Cryptography.Rijndael\"></xref> decryptor object with the specified <xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Key\"></xref> and initialization vector (<xref href=\"System.Security.Cryptography.SymmetricAlgorithm.IV\"></xref>)."}],"pos":[9833,10122],"yaml":true},{"content":"This method decrypts an encrypted message created using the <xref:System.Security.Cryptography.RijndaelManaged.CreateEncryptor%2A> overload with the same signature.  \n  \n The `rgbkey` size must be 128, 192, or 256 bits.","nodes":[{"pos":[0,164],"content":"This method decrypts an encrypted message created using the <xref:System.Security.Cryptography.RijndaelManaged.CreateEncryptor%2A> overload with the same signature.","nodes":[{"content":"This method decrypts an encrypted message created using the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.RijndaelManaged.CreateEncryptor%2A&gt;</ph> overload with the same signature.","pos":[0,164],"source":"This method decrypts an encrypted message created using the <xref:System.Security.Cryptography.RijndaelManaged.CreateEncryptor%2A> overload with the same signature."}]},{"pos":[171,219],"content":"The <ph id=\"ph1\">`rgbkey`</ph> size must be 128, 192, or 256 bits.","source":"The `rgbkey` size must be 128, 192, or 256 bits."}],"pos":[10133,10357],"yaml":true,"extradata":"MT"},{"content":"The secret key to be used for the symmetric algorithm. The key size must be 128, 192, or 256 bits.","nodes":[{"pos":[0,98],"content":"The secret key to be used for the symmetric algorithm. The key size must be 128, 192, or 256 bits.","nodes":[{"content":"The secret key to be used for the symmetric algorithm. The key size must be 128, 192, or 256 bits.","pos":[0,98],"nodes":[{"content":"The secret key to be used for the symmetric algorithm.","pos":[0,54]},{"content":"The key size must be 128, 192, or 256 bits.","pos":[55,98]}]}]}],"pos":[11161,11260],"yaml":true},{"content":"The IV to be used for the symmetric algorithm.","nodes":[{"pos":[0,46],"content":"The IV to be used for the symmetric algorithm.","nodes":[{"content":"The IV to be used for the symmetric algorithm.","pos":[0,46]}]}],"pos":[11321,11368],"yaml":true},{"content":"A symmetric <xref href=\"System.Security.Cryptography.Rijndael\"></xref> decryptor object.","nodes":[{"pos":[0,88],"content":"A symmetric <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Rijndael\"&gt;&lt;/xref&gt;</ph> decryptor object.","source":"A symmetric <xref href=\"System.Security.Cryptography.Rijndael\"></xref> decryptor object."}],"pos":[11457,11546],"yaml":true},{"content":"The <code>rgbKey</code> parameter is `null`.  \n  \n -or-  \n  \n The <code>rgbIV</code> parameter is `null`.","nodes":[{"pos":[0,44],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rgbKey</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>rgbKey</code> parameter is `null`."},{"pos":[51,55],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[62,105],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rgbIV</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>rgbIV</code> parameter is `null`."}],"pos":[11736,11848],"yaml":true},{"content":"The value of the <xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Mode\"></xref> property is not <xref href=\"System.Security.Cryptography.CipherMode.ECB\"></xref>, <xref href=\"System.Security.Cryptography.CipherMode.CBC\"></xref>, or <xref href=\"System.Security.Cryptography.CipherMode.CFB\"></xref>.","nodes":[{"pos":[0,307],"content":"The value of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Mode\"&gt;&lt;/xref&gt;</ph> property is not <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.CipherMode.ECB\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph3\">&lt;xref href=\"System.Security.Cryptography.CipherMode.CBC\"&gt;&lt;/xref&gt;</ph>, or <ph id=\"ph4\">&lt;xref href=\"System.Security.Cryptography.CipherMode.CFB\"&gt;&lt;/xref&gt;</ph>.","source":"The value of the <xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Mode\"></xref> property is not <xref href=\"System.Security.Cryptography.CipherMode.ECB\"></xref>, <xref href=\"System.Security.Cryptography.CipherMode.CBC\"></xref>, or <xref href=\"System.Security.Cryptography.CipherMode.CFB\"></xref>."}],"pos":[11996,12304],"yaml":true},{"content":"Creates a symmetric <xref href=\"System.Security.Cryptography.Rijndael\"></xref> encryptor object with the specified <xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Key\"></xref> and initialization vector (<xref href=\"System.Security.Cryptography.SymmetricAlgorithm.IV\"></xref>).","nodes":[{"pos":[0,288],"content":"Creates a symmetric <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Rijndael\"&gt;&lt;/xref&gt;</ph> encryptor object with the specified <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Key\"&gt;&lt;/xref&gt;</ph> and initialization vector (<ph id=\"ph3\">&lt;xref href=\"System.Security.Cryptography.SymmetricAlgorithm.IV\"&gt;&lt;/xref&gt;</ph>).","source":"Creates a symmetric <xref href=\"System.Security.Cryptography.Rijndael\"></xref> encryptor object with the specified <xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Key\"></xref> and initialization vector (<xref href=\"System.Security.Cryptography.SymmetricAlgorithm.IV\"></xref>)."}],"pos":[14738,15027],"yaml":true},{"content":"Use the <xref:System.Security.Cryptography.RijndaelManaged.CreateDecryptor%2A> overload with the same signature to decrypt the result of this method.  \n  \n The `rgbkey` size must be 128, 192, or 256 bits.","nodes":[{"pos":[0,149],"content":"Use the <xref:System.Security.Cryptography.RijndaelManaged.CreateDecryptor%2A> overload with the same signature to decrypt the result of this method.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.RijndaelManaged.CreateDecryptor%2A&gt;</ph> overload with the same signature to decrypt the result of this method.","pos":[0,149],"source":"Use the <xref:System.Security.Cryptography.RijndaelManaged.CreateDecryptor%2A> overload with the same signature to decrypt the result of this method."}]},{"pos":[156,204],"content":"The <ph id=\"ph1\">`rgbkey`</ph> size must be 128, 192, or 256 bits.","source":"The `rgbkey` size must be 128, 192, or 256 bits."}],"pos":[15038,15247],"yaml":true,"extradata":"MT"},{"content":"The secret key to be used for the symmetric algorithm. The key size must be 128, 192, or 256 bits.","nodes":[{"pos":[0,98],"content":"The secret key to be used for the symmetric algorithm. The key size must be 128, 192, or 256 bits.","nodes":[{"content":"The secret key to be used for the symmetric algorithm. The key size must be 128, 192, or 256 bits.","pos":[0,98],"nodes":[{"content":"The secret key to be used for the symmetric algorithm.","pos":[0,54]},{"content":"The key size must be 128, 192, or 256 bits.","pos":[55,98]}]}]}],"pos":[15957,16056],"yaml":true},{"content":"The IV to be used for the symmetric algorithm.","nodes":[{"pos":[0,46],"content":"The IV to be used for the symmetric algorithm.","nodes":[{"content":"The IV to be used for the symmetric algorithm.","pos":[0,46]}]}],"pos":[16117,16164],"yaml":true},{"content":"A symmetric <xref href=\"System.Security.Cryptography.Rijndael\"></xref> encryptor object.","nodes":[{"pos":[0,88],"content":"A symmetric <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Rijndael\"&gt;&lt;/xref&gt;</ph> encryptor object.","source":"A symmetric <xref href=\"System.Security.Cryptography.Rijndael\"></xref> encryptor object."}],"pos":[16253,16342],"yaml":true},{"content":"The <code>rgbKey</code> parameter is `null`.  \n  \n -or-  \n  \n The <code>rgbIV</code> parameter is `null`.","nodes":[{"pos":[0,44],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rgbKey</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>rgbKey</code> parameter is `null`."},{"pos":[51,55],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[62,105],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rgbIV</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>rgbIV</code> parameter is `null`."}],"pos":[16532,16644],"yaml":true},{"content":"The value of the <xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Mode\"></xref> property is not <xref href=\"System.Security.Cryptography.CipherMode.ECB\"></xref>, <xref href=\"System.Security.Cryptography.CipherMode.CBC\"></xref>, or <xref href=\"System.Security.Cryptography.CipherMode.CFB\"></xref>.","nodes":[{"pos":[0,307],"content":"The value of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Mode\"&gt;&lt;/xref&gt;</ph> property is not <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.CipherMode.ECB\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph3\">&lt;xref href=\"System.Security.Cryptography.CipherMode.CBC\"&gt;&lt;/xref&gt;</ph>, or <ph id=\"ph4\">&lt;xref href=\"System.Security.Cryptography.CipherMode.CFB\"&gt;&lt;/xref&gt;</ph>.","source":"The value of the <xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Mode\"></xref> property is not <xref href=\"System.Security.Cryptography.CipherMode.ECB\"></xref>, <xref href=\"System.Security.Cryptography.CipherMode.CBC\"></xref>, or <xref href=\"System.Security.Cryptography.CipherMode.CFB\"></xref>."}],"pos":[16792,17100],"yaml":true},{"content":"Generates a random initialization vector (<xref href=\"System.Security.Cryptography.SymmetricAlgorithm.IV\"></xref>) to be used for the algorithm.","nodes":[{"pos":[0,144],"content":"Generates a random initialization vector (<ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.SymmetricAlgorithm.IV\"&gt;&lt;/xref&gt;</ph>) to be used for the algorithm.","source":"Generates a random initialization vector (<xref href=\"System.Security.Cryptography.SymmetricAlgorithm.IV\"></xref>) to be used for the algorithm."}],"pos":[19236,19381],"yaml":true},{"content":"Use this method to generate a random IV when none is specified.","nodes":[{"pos":[0,63],"content":"Use this method to generate a random IV when none is specified.","nodes":[{"content":"Use this method to generate a random IV when none is specified.","pos":[0,63]}]}],"pos":[19392,19456],"yaml":true,"extradata":"MT"},{"content":"Generates a random <xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Key\"></xref> to be used for the algorithm.","nodes":[{"pos":[0,121],"content":"Generates a random <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Key\"&gt;&lt;/xref&gt;</ph> to be used for the algorithm.","source":"Generates a random <xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Key\"></xref> to be used for the algorithm."}],"pos":[21253,21375],"yaml":true},{"content":"Use this method to generate a random key when none is specified.","nodes":[{"pos":[0,64],"content":"Use this method to generate a random key when none is specified.","nodes":[{"content":"Use this method to generate a random key when none is specified.","pos":[0,64]}]}],"pos":[21386,21451],"yaml":true,"extradata":"MT"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.RijndaelManaged\n  commentId: T:System.Security.Cryptography.RijndaelManaged\n  id: RijndaelManaged\n  children:\n  - System.Security.Cryptography.RijndaelManaged.#ctor\n  - System.Security.Cryptography.RijndaelManaged.BlockSize\n  - System.Security.Cryptography.RijndaelManaged.CreateDecryptor\n  - System.Security.Cryptography.RijndaelManaged.CreateDecryptor(System.Byte[],System.Byte[])\n  - System.Security.Cryptography.RijndaelManaged.CreateEncryptor\n  - System.Security.Cryptography.RijndaelManaged.CreateEncryptor(System.Byte[],System.Byte[])\n  - System.Security.Cryptography.RijndaelManaged.Dispose(System.Boolean)\n  - System.Security.Cryptography.RijndaelManaged.GenerateIV\n  - System.Security.Cryptography.RijndaelManaged.GenerateKey\n  - System.Security.Cryptography.RijndaelManaged.IV\n  - System.Security.Cryptography.RijndaelManaged.Key\n  - System.Security.Cryptography.RijndaelManaged.KeySize\n  - System.Security.Cryptography.RijndaelManaged.LegalKeySizes\n  - System.Security.Cryptography.RijndaelManaged.Mode\n  - System.Security.Cryptography.RijndaelManaged.Padding\n  langs:\n  - csharp\n  name: RijndaelManaged\n  nameWithType: RijndaelManaged\n  fullName: System.Security.Cryptography.RijndaelManaged\n  type: Class\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: Accesses the managed version of the <xref href=\"System.Security.Cryptography.Rijndael\"></xref> algorithm. This class cannot be inherited.\n  remarks: \"This algorithm supports key lengths of 128, 192, or 256 bits; defaulting to 256 bits. This algorithm supports block sizes of 128, 192, or 256 bits; defaulting to 128 bits (<xref:System.Security.Cryptography.Aes>-compatible).  \\n  \\n The <xref:System.Security.Cryptography.Rijndael> algorithm is the predecessor of <xref:System.Security.Cryptography.Aes>. You should use the <xref:System.Security.Cryptography.Aes> class instead of <xref:System.Security.Cryptography.RijndaelManaged>. For more information, see the entry [The Differences Between Rijndael and AES](http://go.microsoft.com/fwlink/?LinkId=200932) in the .NET Security blog.\"\n  example:\n  - \"The following example demonstrates how to encrypt and decrypt sample data using the `RijndaelManaged` class.  \\n  \\n [!code-cpp[RijndaelManaged Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/RijndaelManaged Example/CPP/class1.cpp#1)]\\n [!code-csharp[RijndaelManaged Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/RijndaelManaged Example/CS/class1.cs#1)]\\n [!code-vb[RijndaelManaged Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/RijndaelManaged Example/VB/class1.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class RijndaelManaged : System.Security.Cryptography.Rijndael\n  inheritance:\n  - System.Object\n  - System.Security.Cryptography.SymmetricAlgorithm\n  - System.Security.Cryptography.Rijndael\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.Cryptography.Rijndael.Create\n  - System.Security.Cryptography.Rijndael.Create(System.String)\n  - System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.Clear\n  - System.Security.Cryptography.SymmetricAlgorithm.Dispose\n  - System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize\n  - System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.IVValue\n  - System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.KeyValue\n  - System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes\n  - System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizesValue\n  - System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizesValue\n  - System.Security.Cryptography.SymmetricAlgorithm.ModeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.PaddingValue\n  - System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize(System.Int32)\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManaged.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RijndaelManaged.#ctor\n  commentId: M:System.Security.Cryptography.RijndaelManaged.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.RijndaelManaged\n  langs:\n  - csharp\n  name: RijndaelManaged()\n  nameWithType: RijndaelManaged.RijndaelManaged()\n  fullName: RijndaelManaged.RijndaelManaged()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.RijndaelManaged\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following example creates a new instance of the `RijndaelManaged` class.  \\n  \\n [!code-cpp[RijndaelManaged Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/RijndaelManaged Example/CPP/class1.cpp#1)]\\n [!code-csharp[RijndaelManaged Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/RijndaelManaged Example/CS/class1.cs#1)]\\n [!code-vb[RijndaelManaged Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/RijndaelManaged Example/VB/class1.vb#1)]\"\n  syntax:\n    content: public RijndaelManaged ();\n    parameters: []\n  overload: System.Security.Cryptography.RijndaelManaged.#ctor*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: This class is not compliant with the FIPS algorithm.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManaged.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RijndaelManaged.BlockSize\n  commentId: P:System.Security.Cryptography.RijndaelManaged.BlockSize\n  id: BlockSize\n  parent: System.Security.Cryptography.RijndaelManaged\n  langs:\n  - csharp\n  name: BlockSize\n  nameWithType: RijndaelManaged.BlockSize\n  fullName: RijndaelManaged.BlockSize\n  type: Property\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override int BlockSize { get; set; }\n    return:\n      type: System.Int32\n      description: ''\n  overload: System.Security.Cryptography.RijndaelManaged.BlockSize*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManaged.xml\n- uid: System.Security.Cryptography.RijndaelManaged.CreateDecryptor\n  commentId: M:System.Security.Cryptography.RijndaelManaged.CreateDecryptor\n  id: CreateDecryptor\n  parent: System.Security.Cryptography.RijndaelManaged\n  langs:\n  - csharp\n  name: CreateDecryptor()\n  nameWithType: RijndaelManaged.CreateDecryptor()\n  fullName: RijndaelManaged.CreateDecryptor()\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override System.Security.Cryptography.ICryptoTransform CreateDecryptor ();\n    parameters: []\n    return:\n      type: System.Security.Cryptography.ICryptoTransform\n      description: ''\n  overload: System.Security.Cryptography.RijndaelManaged.CreateDecryptor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManaged.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RijndaelManaged.CreateDecryptor(System.Byte[],System.Byte[])\n  commentId: M:System.Security.Cryptography.RijndaelManaged.CreateDecryptor(System.Byte[],System.Byte[])\n  id: CreateDecryptor(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.RijndaelManaged\n  langs:\n  - csharp\n  name: CreateDecryptor(Byte[], Byte[])\n  nameWithType: RijndaelManaged.CreateDecryptor(Byte[], Byte[])\n  fullName: RijndaelManaged.CreateDecryptor(Byte[], Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: Creates a symmetric <xref href=\"System.Security.Cryptography.Rijndael\"></xref> decryptor object with the specified <xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Key\"></xref> and initialization vector (<xref href=\"System.Security.Cryptography.SymmetricAlgorithm.IV\"></xref>).\n  remarks: \"This method decrypts an encrypted message created using the <xref:System.Security.Cryptography.RijndaelManaged.CreateEncryptor%2A> overload with the same signature.  \\n  \\n The `rgbkey` size must be 128, 192, or 256 bits.\"\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Security.Cryptography.RijndaelManaged.CreateDecryptor%2A> method to decrypt messages encoded with the same signature parameter.  \\n  \\n [!code-cpp[RijndaelManaged Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/RijndaelManaged Example/CPP/class1.cpp#1)]\\n [!code-csharp[RijndaelManaged Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/RijndaelManaged Example/CS/class1.cs#1)]\\n [!code-vb[RijndaelManaged Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/RijndaelManaged Example/VB/class1.vb#1)]\"\n  syntax:\n    content: public override System.Security.Cryptography.ICryptoTransform CreateDecryptor (byte[] rgbKey, byte[] rgbIV);\n    parameters:\n    - id: rgbKey\n      type: System.Byte[]\n      description: The secret key to be used for the symmetric algorithm. The key size must be 128, 192, or 256 bits.\n    - id: rgbIV\n      type: System.Byte[]\n      description: The IV to be used for the symmetric algorithm.\n    return:\n      type: System.Security.Cryptography.ICryptoTransform\n      description: A symmetric <xref href=\"System.Security.Cryptography.Rijndael\"></xref> decryptor object.\n  overload: System.Security.Cryptography.RijndaelManaged.CreateDecryptor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"The <code>rgbKey</code> parameter is `null`.  \\n  \\n -or-  \\n  \\n The <code>rgbIV</code> parameter is `null`.\"\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: The value of the <xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Mode\"></xref> property is not <xref href=\"System.Security.Cryptography.CipherMode.ECB\"></xref>, <xref href=\"System.Security.Cryptography.CipherMode.CBC\"></xref>, or <xref href=\"System.Security.Cryptography.CipherMode.CFB\"></xref>.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManaged.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RijndaelManaged.CreateEncryptor\n  commentId: M:System.Security.Cryptography.RijndaelManaged.CreateEncryptor\n  id: CreateEncryptor\n  parent: System.Security.Cryptography.RijndaelManaged\n  langs:\n  - csharp\n  name: CreateEncryptor()\n  nameWithType: RijndaelManaged.CreateEncryptor()\n  fullName: RijndaelManaged.CreateEncryptor()\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override System.Security.Cryptography.ICryptoTransform CreateEncryptor ();\n    parameters: []\n    return:\n      type: System.Security.Cryptography.ICryptoTransform\n      description: ''\n  overload: System.Security.Cryptography.RijndaelManaged.CreateEncryptor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManaged.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RijndaelManaged.CreateEncryptor(System.Byte[],System.Byte[])\n  commentId: M:System.Security.Cryptography.RijndaelManaged.CreateEncryptor(System.Byte[],System.Byte[])\n  id: CreateEncryptor(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.RijndaelManaged\n  langs:\n  - csharp\n  name: CreateEncryptor(Byte[], Byte[])\n  nameWithType: RijndaelManaged.CreateEncryptor(Byte[], Byte[])\n  fullName: RijndaelManaged.CreateEncryptor(Byte[], Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: Creates a symmetric <xref href=\"System.Security.Cryptography.Rijndael\"></xref> encryptor object with the specified <xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Key\"></xref> and initialization vector (<xref href=\"System.Security.Cryptography.SymmetricAlgorithm.IV\"></xref>).\n  remarks: \"Use the <xref:System.Security.Cryptography.RijndaelManaged.CreateDecryptor%2A> overload with the same signature to decrypt the result of this method.  \\n  \\n The `rgbkey` size must be 128, 192, or 256 bits.\"\n  example:\n  - \"The following code examples demonstrates how to encrypt a message using the `CreateEncryptor` method.  \\n  \\n [!code-cpp[RijndaelManaged Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/RijndaelManaged Example/CPP/class1.cpp#1)]\\n [!code-csharp[RijndaelManaged Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/RijndaelManaged Example/CS/class1.cs#1)]\\n [!code-vb[RijndaelManaged Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/RijndaelManaged Example/VB/class1.vb#1)]\"\n  syntax:\n    content: public override System.Security.Cryptography.ICryptoTransform CreateEncryptor (byte[] rgbKey, byte[] rgbIV);\n    parameters:\n    - id: rgbKey\n      type: System.Byte[]\n      description: The secret key to be used for the symmetric algorithm. The key size must be 128, 192, or 256 bits.\n    - id: rgbIV\n      type: System.Byte[]\n      description: The IV to be used for the symmetric algorithm.\n    return:\n      type: System.Security.Cryptography.ICryptoTransform\n      description: A symmetric <xref href=\"System.Security.Cryptography.Rijndael\"></xref> encryptor object.\n  overload: System.Security.Cryptography.RijndaelManaged.CreateEncryptor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"The <code>rgbKey</code> parameter is `null`.  \\n  \\n -or-  \\n  \\n The <code>rgbIV</code> parameter is `null`.\"\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: The value of the <xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Mode\"></xref> property is not <xref href=\"System.Security.Cryptography.CipherMode.ECB\"></xref>, <xref href=\"System.Security.Cryptography.CipherMode.CBC\"></xref>, or <xref href=\"System.Security.Cryptography.CipherMode.CFB\"></xref>.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManaged.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RijndaelManaged.Dispose(System.Boolean)\n  commentId: M:System.Security.Cryptography.RijndaelManaged.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Security.Cryptography.RijndaelManaged\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: RijndaelManaged.Dispose(Boolean)\n  fullName: RijndaelManaged.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: ''\n  overload: System.Security.Cryptography.RijndaelManaged.Dispose*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManaged.xml\n- uid: System.Security.Cryptography.RijndaelManaged.GenerateIV\n  commentId: M:System.Security.Cryptography.RijndaelManaged.GenerateIV\n  id: GenerateIV\n  parent: System.Security.Cryptography.RijndaelManaged\n  langs:\n  - csharp\n  name: GenerateIV()\n  nameWithType: RijndaelManaged.GenerateIV()\n  fullName: RijndaelManaged.GenerateIV()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: Generates a random initialization vector (<xref href=\"System.Security.Cryptography.SymmetricAlgorithm.IV\"></xref>) to be used for the algorithm.\n  remarks: Use this method to generate a random IV when none is specified.\n  example:\n  - >-\n    [!code-cpp[RijndaelManaged Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/RijndaelManaged Example/CPP/class1.cpp#1)]\n     [!code-csharp[RijndaelManaged Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/RijndaelManaged Example/CS/class1.cs#1)]\n     [!code-vb[RijndaelManaged Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/RijndaelManaged Example/VB/class1.vb#1)]\n  syntax:\n    content: public override void GenerateIV ();\n    parameters: []\n  overload: System.Security.Cryptography.RijndaelManaged.GenerateIV*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManaged.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RijndaelManaged.GenerateKey\n  commentId: M:System.Security.Cryptography.RijndaelManaged.GenerateKey\n  id: GenerateKey\n  parent: System.Security.Cryptography.RijndaelManaged\n  langs:\n  - csharp\n  name: GenerateKey()\n  nameWithType: RijndaelManaged.GenerateKey()\n  fullName: RijndaelManaged.GenerateKey()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: Generates a random <xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Key\"></xref> to be used for the algorithm.\n  remarks: Use this method to generate a random key when none is specified.\n  example:\n  - >-\n    [!code-cpp[RijndaelManaged Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/RijndaelManaged Example/CPP/class1.cpp#1)]\n     [!code-csharp[RijndaelManaged Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/RijndaelManaged Example/CS/class1.cs#1)]\n     [!code-vb[RijndaelManaged Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/RijndaelManaged Example/VB/class1.vb#1)]\n  syntax:\n    content: public override void GenerateKey ();\n    parameters: []\n  overload: System.Security.Cryptography.RijndaelManaged.GenerateKey*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManaged.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RijndaelManaged.IV\n  commentId: P:System.Security.Cryptography.RijndaelManaged.IV\n  id: IV\n  parent: System.Security.Cryptography.RijndaelManaged\n  langs:\n  - csharp\n  name: IV\n  nameWithType: RijndaelManaged.IV\n  fullName: RijndaelManaged.IV\n  type: Property\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override byte[] IV { get; set; }\n    return:\n      type: System.Byte[]\n      description: ''\n  overload: System.Security.Cryptography.RijndaelManaged.IV*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManaged.xml\n- uid: System.Security.Cryptography.RijndaelManaged.Key\n  commentId: P:System.Security.Cryptography.RijndaelManaged.Key\n  id: Key\n  parent: System.Security.Cryptography.RijndaelManaged\n  langs:\n  - csharp\n  name: Key\n  nameWithType: RijndaelManaged.Key\n  fullName: RijndaelManaged.Key\n  type: Property\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override byte[] Key { get; set; }\n    return:\n      type: System.Byte[]\n      description: ''\n  overload: System.Security.Cryptography.RijndaelManaged.Key*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManaged.xml\n- uid: System.Security.Cryptography.RijndaelManaged.KeySize\n  commentId: P:System.Security.Cryptography.RijndaelManaged.KeySize\n  id: KeySize\n  parent: System.Security.Cryptography.RijndaelManaged\n  langs:\n  - csharp\n  name: KeySize\n  nameWithType: RijndaelManaged.KeySize\n  fullName: RijndaelManaged.KeySize\n  type: Property\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override int KeySize { get; set; }\n    return:\n      type: System.Int32\n      description: ''\n  overload: System.Security.Cryptography.RijndaelManaged.KeySize*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManaged.xml\n- uid: System.Security.Cryptography.RijndaelManaged.LegalKeySizes\n  commentId: P:System.Security.Cryptography.RijndaelManaged.LegalKeySizes\n  id: LegalKeySizes\n  parent: System.Security.Cryptography.RijndaelManaged\n  langs:\n  - csharp\n  name: LegalKeySizes\n  nameWithType: RijndaelManaged.LegalKeySizes\n  fullName: RijndaelManaged.LegalKeySizes\n  type: Property\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override System.Security.Cryptography.KeySizes[] LegalKeySizes { get; }\n    return:\n      type: System.Security.Cryptography.KeySizes[]\n      description: ''\n  overload: System.Security.Cryptography.RijndaelManaged.LegalKeySizes*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManaged.xml\n- uid: System.Security.Cryptography.RijndaelManaged.Mode\n  commentId: P:System.Security.Cryptography.RijndaelManaged.Mode\n  id: Mode\n  parent: System.Security.Cryptography.RijndaelManaged\n  langs:\n  - csharp\n  name: Mode\n  nameWithType: RijndaelManaged.Mode\n  fullName: RijndaelManaged.Mode\n  type: Property\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override System.Security.Cryptography.CipherMode Mode { get; set; }\n    return:\n      type: System.Security.Cryptography.CipherMode\n      description: ''\n  overload: System.Security.Cryptography.RijndaelManaged.Mode*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManaged.xml\n- uid: System.Security.Cryptography.RijndaelManaged.Padding\n  commentId: P:System.Security.Cryptography.RijndaelManaged.Padding\n  id: Padding\n  parent: System.Security.Cryptography.RijndaelManaged\n  langs:\n  - csharp\n  name: Padding\n  nameWithType: RijndaelManaged.Padding\n  fullName: RijndaelManaged.Padding\n  type: Property\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override System.Security.Cryptography.PaddingMode Padding { get; set; }\n    return:\n      type: System.Security.Cryptography.PaddingMode\n      description: ''\n  overload: System.Security.Cryptography.RijndaelManaged.Padding*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManaged.xml\nreferences:\n- uid: System.Security.Cryptography.Rijndael\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: Rijndael\n  nameWithType: Rijndael\n  fullName: System.Security.Cryptography.Rijndael\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Security.Cryptography.CryptographicException\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CryptographicException\n  nameWithType: CryptographicException\n  fullName: System.Security.Cryptography.CryptographicException\n- uid: System.Security.Cryptography.RijndaelManaged.#ctor\n  parent: System.Security.Cryptography.RijndaelManaged\n  isExternal: false\n  name: RijndaelManaged()\n  nameWithType: RijndaelManaged.RijndaelManaged()\n  fullName: RijndaelManaged.RijndaelManaged()\n- uid: System.Security.Cryptography.RijndaelManaged.BlockSize\n  parent: System.Security.Cryptography.RijndaelManaged\n  isExternal: false\n  name: BlockSize\n  nameWithType: RijndaelManaged.BlockSize\n  fullName: RijndaelManaged.BlockSize\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.RijndaelManaged.CreateDecryptor\n  parent: System.Security.Cryptography.RijndaelManaged\n  isExternal: false\n  name: CreateDecryptor()\n  nameWithType: RijndaelManaged.CreateDecryptor()\n  fullName: RijndaelManaged.CreateDecryptor()\n- uid: System.Security.Cryptography.ICryptoTransform\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ICryptoTransform\n  nameWithType: ICryptoTransform\n  fullName: System.Security.Cryptography.ICryptoTransform\n- uid: System.Security.Cryptography.RijndaelManaged.CreateDecryptor(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.RijndaelManaged\n  isExternal: false\n  name: CreateDecryptor(Byte[], Byte[])\n  nameWithType: RijndaelManaged.CreateDecryptor(Byte[], Byte[])\n  fullName: RijndaelManaged.CreateDecryptor(Byte[], Byte[])\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Security.Cryptography.RijndaelManaged.CreateEncryptor\n  parent: System.Security.Cryptography.RijndaelManaged\n  isExternal: false\n  name: CreateEncryptor()\n  nameWithType: RijndaelManaged.CreateEncryptor()\n  fullName: RijndaelManaged.CreateEncryptor()\n- uid: System.Security.Cryptography.RijndaelManaged.CreateEncryptor(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.RijndaelManaged\n  isExternal: false\n  name: CreateEncryptor(Byte[], Byte[])\n  nameWithType: RijndaelManaged.CreateEncryptor(Byte[], Byte[])\n  fullName: RijndaelManaged.CreateEncryptor(Byte[], Byte[])\n- uid: System.Security.Cryptography.RijndaelManaged.Dispose(System.Boolean)\n  parent: System.Security.Cryptography.RijndaelManaged\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: RijndaelManaged.Dispose(Boolean)\n  fullName: RijndaelManaged.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.RijndaelManaged.GenerateIV\n  parent: System.Security.Cryptography.RijndaelManaged\n  isExternal: false\n  name: GenerateIV()\n  nameWithType: RijndaelManaged.GenerateIV()\n  fullName: RijndaelManaged.GenerateIV()\n- uid: System.Security.Cryptography.RijndaelManaged.GenerateKey\n  parent: System.Security.Cryptography.RijndaelManaged\n  isExternal: false\n  name: GenerateKey()\n  nameWithType: RijndaelManaged.GenerateKey()\n  fullName: RijndaelManaged.GenerateKey()\n- uid: System.Security.Cryptography.RijndaelManaged.IV\n  parent: System.Security.Cryptography.RijndaelManaged\n  isExternal: false\n  name: IV\n  nameWithType: RijndaelManaged.IV\n  fullName: RijndaelManaged.IV\n- uid: System.Security.Cryptography.RijndaelManaged.Key\n  parent: System.Security.Cryptography.RijndaelManaged\n  isExternal: false\n  name: Key\n  nameWithType: RijndaelManaged.Key\n  fullName: RijndaelManaged.Key\n- uid: System.Security.Cryptography.RijndaelManaged.KeySize\n  parent: System.Security.Cryptography.RijndaelManaged\n  isExternal: false\n  name: KeySize\n  nameWithType: RijndaelManaged.KeySize\n  fullName: RijndaelManaged.KeySize\n- uid: System.Security.Cryptography.RijndaelManaged.LegalKeySizes\n  parent: System.Security.Cryptography.RijndaelManaged\n  isExternal: false\n  name: LegalKeySizes\n  nameWithType: RijndaelManaged.LegalKeySizes\n  fullName: RijndaelManaged.LegalKeySizes\n- uid: System.Security.Cryptography.KeySizes\n  name: KeySizes\n  nameWithType: KeySizes\n  fullName: System.Security.Cryptography.KeySizes\n- uid: System.Security.Cryptography.KeySizes[]\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: KeySizes[]\n  nameWithType: KeySizes[]\n  fullName: System.Security.Cryptography.KeySizes[]\n  spec.csharp:\n  - uid: System.Security.Cryptography.KeySizes\n    name: KeySizes\n    nameWithType: KeySizes\n    fullName: System.Security.Cryptography.KeySizes\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Security.Cryptography.RijndaelManaged.Mode\n  parent: System.Security.Cryptography.RijndaelManaged\n  isExternal: false\n  name: Mode\n  nameWithType: RijndaelManaged.Mode\n  fullName: RijndaelManaged.Mode\n- uid: System.Security.Cryptography.CipherMode\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CipherMode\n  nameWithType: CipherMode\n  fullName: System.Security.Cryptography.CipherMode\n- uid: System.Security.Cryptography.RijndaelManaged.Padding\n  parent: System.Security.Cryptography.RijndaelManaged\n  isExternal: false\n  name: Padding\n  nameWithType: RijndaelManaged.Padding\n  fullName: RijndaelManaged.Padding\n- uid: System.Security.Cryptography.PaddingMode\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: PaddingMode\n  nameWithType: PaddingMode\n  fullName: System.Security.Cryptography.PaddingMode\n- uid: System.Security.Cryptography.RijndaelManaged.#ctor*\n  parent: System.Security.Cryptography.RijndaelManaged\n  isExternal: false\n  name: RijndaelManaged\n  nameWithType: RijndaelManaged.RijndaelManaged\n  fullName: RijndaelManaged.RijndaelManaged\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManaged.xml\n- uid: System.Security.Cryptography.RijndaelManaged.BlockSize*\n  parent: System.Security.Cryptography.RijndaelManaged\n  isExternal: false\n  name: BlockSize\n  nameWithType: RijndaelManaged.BlockSize\n  fullName: RijndaelManaged.BlockSize\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManaged.xml\n- uid: System.Security.Cryptography.RijndaelManaged.CreateDecryptor*\n  parent: System.Security.Cryptography.RijndaelManaged\n  isExternal: false\n  name: CreateDecryptor\n  nameWithType: RijndaelManaged.CreateDecryptor\n  fullName: RijndaelManaged.CreateDecryptor\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManaged.xml\n- uid: System.Security.Cryptography.RijndaelManaged.CreateEncryptor*\n  parent: System.Security.Cryptography.RijndaelManaged\n  isExternal: false\n  name: CreateEncryptor\n  nameWithType: RijndaelManaged.CreateEncryptor\n  fullName: RijndaelManaged.CreateEncryptor\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManaged.xml\n- uid: System.Security.Cryptography.RijndaelManaged.Dispose*\n  parent: System.Security.Cryptography.RijndaelManaged\n  isExternal: false\n  name: Dispose\n  nameWithType: RijndaelManaged.Dispose\n  fullName: RijndaelManaged.Dispose\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManaged.xml\n- uid: System.Security.Cryptography.RijndaelManaged.GenerateIV*\n  parent: System.Security.Cryptography.RijndaelManaged\n  isExternal: false\n  name: GenerateIV\n  nameWithType: RijndaelManaged.GenerateIV\n  fullName: RijndaelManaged.GenerateIV\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManaged.xml\n- uid: System.Security.Cryptography.RijndaelManaged.GenerateKey*\n  parent: System.Security.Cryptography.RijndaelManaged\n  isExternal: false\n  name: GenerateKey\n  nameWithType: RijndaelManaged.GenerateKey\n  fullName: RijndaelManaged.GenerateKey\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManaged.xml\n- uid: System.Security.Cryptography.RijndaelManaged.IV*\n  parent: System.Security.Cryptography.RijndaelManaged\n  isExternal: false\n  name: IV\n  nameWithType: RijndaelManaged.IV\n  fullName: RijndaelManaged.IV\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManaged.xml\n- uid: System.Security.Cryptography.RijndaelManaged.Key*\n  parent: System.Security.Cryptography.RijndaelManaged\n  isExternal: false\n  name: Key\n  nameWithType: RijndaelManaged.Key\n  fullName: RijndaelManaged.Key\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManaged.xml\n- uid: System.Security.Cryptography.RijndaelManaged.KeySize*\n  parent: System.Security.Cryptography.RijndaelManaged\n  isExternal: false\n  name: KeySize\n  nameWithType: RijndaelManaged.KeySize\n  fullName: RijndaelManaged.KeySize\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManaged.xml\n- uid: System.Security.Cryptography.RijndaelManaged.LegalKeySizes*\n  parent: System.Security.Cryptography.RijndaelManaged\n  isExternal: false\n  name: LegalKeySizes\n  nameWithType: RijndaelManaged.LegalKeySizes\n  fullName: RijndaelManaged.LegalKeySizes\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManaged.xml\n- uid: System.Security.Cryptography.RijndaelManaged.Mode*\n  parent: System.Security.Cryptography.RijndaelManaged\n  isExternal: false\n  name: Mode\n  nameWithType: RijndaelManaged.Mode\n  fullName: RijndaelManaged.Mode\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManaged.xml\n- uid: System.Security.Cryptography.RijndaelManaged.Padding*\n  parent: System.Security.Cryptography.RijndaelManaged\n  isExternal: false\n  name: Padding\n  nameWithType: RijndaelManaged.Padding\n  fullName: RijndaelManaged.Padding\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RijndaelManaged.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: BlockSizeValue\n  nameWithType: SymmetricAlgorithm.BlockSizeValue\n  fullName: SymmetricAlgorithm.BlockSizeValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.Clear\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: Clear()\n  nameWithType: SymmetricAlgorithm.Clear()\n  fullName: SymmetricAlgorithm.Clear()\n- uid: System.Security.Cryptography.Rijndael.Create\n  parent: System.Security.Cryptography.Rijndael\n  isExternal: false\n  name: Create()\n  nameWithType: Rijndael.Create()\n  fullName: Rijndael.Create()\n- uid: System.Security.Cryptography.Rijndael.Create(System.String)\n  parent: System.Security.Cryptography.Rijndael\n  isExternal: false\n  name: Create(String)\n  nameWithType: Rijndael.Create(String)\n  fullName: Rijndael.Create(String)\n- uid: System.Security.Cryptography.SymmetricAlgorithm.Dispose\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: Dispose()\n  nameWithType: SymmetricAlgorithm.Dispose()\n  fullName: SymmetricAlgorithm.Dispose()\n- uid: System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: FeedbackSize\n  nameWithType: SymmetricAlgorithm.FeedbackSize\n  fullName: SymmetricAlgorithm.FeedbackSize\n- uid: System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: FeedbackSizeValue\n  nameWithType: SymmetricAlgorithm.FeedbackSizeValue\n  fullName: SymmetricAlgorithm.FeedbackSizeValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.IVValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: IVValue\n  nameWithType: SymmetricAlgorithm.IVValue\n  fullName: SymmetricAlgorithm.IVValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: KeySizeValue\n  nameWithType: SymmetricAlgorithm.KeySizeValue\n  fullName: SymmetricAlgorithm.KeySizeValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.KeyValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: KeyValue\n  nameWithType: SymmetricAlgorithm.KeyValue\n  fullName: SymmetricAlgorithm.KeyValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: LegalBlockSizes\n  nameWithType: SymmetricAlgorithm.LegalBlockSizes\n  fullName: SymmetricAlgorithm.LegalBlockSizes\n- uid: System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizesValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: LegalBlockSizesValue\n  nameWithType: SymmetricAlgorithm.LegalBlockSizesValue\n  fullName: SymmetricAlgorithm.LegalBlockSizesValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizesValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: LegalKeySizesValue\n  nameWithType: SymmetricAlgorithm.LegalKeySizesValue\n  fullName: SymmetricAlgorithm.LegalKeySizesValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.ModeValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: ModeValue\n  nameWithType: SymmetricAlgorithm.ModeValue\n  fullName: SymmetricAlgorithm.ModeValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.PaddingValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: PaddingValue\n  nameWithType: SymmetricAlgorithm.PaddingValue\n  fullName: SymmetricAlgorithm.PaddingValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize(System.Int32)\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: ValidKeySize(Int32)\n  nameWithType: SymmetricAlgorithm.ValidKeySize(Int32)\n  fullName: SymmetricAlgorithm.ValidKeySize(Int32)\n"}