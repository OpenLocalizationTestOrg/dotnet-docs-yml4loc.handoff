{"nodes":[{"content":"Provides type conversion to convert a string name into an object reference to the object with that name, or to return the name of an object from the object graph.","nodes":[{"pos":[0,162],"content":"Provides type conversion to convert a string name into an object reference to the object with that name, or to return the name of an object from the object graph.","nodes":[{"content":"Provides type conversion to convert a string name into an object reference to the object with that name, or to return the name of an object from the object graph.","pos":[0,162]}]}],"pos":[1041,1204],"yaml":true},{"content":"This class provides a type converter wrapper around two services.  \n  \n The <xref:System.Windows.Markup.NameReferenceConverter.ConvertFrom%2A> implementation uses <xref:System.Xaml.IXamlNameResolver> service from context to perform the resolution of an object by name in XAML. This is part of the relevant XAML reader and XAML writer implementations in .NET Framework XAML Services. Proper function of this converter requires that the <xref:System.Xaml.IXamlNameResolver> service is available from service context.  \n  \n The <xref:System.Windows.Markup.NameReferenceConverter.ConvertTo%2A> implementation uses <xref:System.Xaml.IXamlNameProvider> service from context to perform the resolution of a reference name for an object during save/serialization. This is part of the relevant reader and writer implementations and their context. Proper function of this converter requires that there be an underlying <xref:System.Xaml.IXamlNameProvider> service available.  \n  \n This type converter implementation is atypical for the <xref:System.ComponentModel.TypeConverter> base type because it is not scoped to a discrete conversion type. It can potentially convert any object to and from a referencing name so long as that object could have a name assigned to it in XAML, and the supporting context has the necessary services to return results.  \n  \n As part of general services support, the System.Xaml base implementation of <xref:System.Xaml.XamlObjectWriter> and <xref:System.Xaml.XamlXmlWriter> provide <xref:System.Xaml.IXamlNameProvider> and <xref:System.Xaml.IXamlNameResolver> services for use by <xref:System.Windows.Markup.NameReferenceConverter>. The name basis for these services uses either `x:Name` or a <xref:System.Windows.Markup.RuntimeNamePropertyAttribute> attributed alias property.","nodes":[{"pos":[0,65],"content":"This class provides a type converter wrapper around two services.","nodes":[{"content":"This class provides a type converter wrapper around two services.","pos":[0,65]}]},{"pos":[72,514],"content":"The <xref:System.Windows.Markup.NameReferenceConverter.ConvertFrom%2A> implementation uses <xref:System.Xaml.IXamlNameResolver> service from context to perform the resolution of an object by name in XAML. This is part of the relevant XAML reader and XAML writer implementations in .NET Framework XAML Services. Proper function of this converter requires that the <xref:System.Xaml.IXamlNameResolver> service is available from service context.","nodes":[{"content":"The <xref:System.Windows.Markup.NameReferenceConverter.ConvertFrom%2A> implementation uses <xref:System.Xaml.IXamlNameResolver> service from context to perform the resolution of an object by name in XAML. This is part of the relevant XAML reader and XAML writer implementations in .NET Framework XAML Services. Proper function of this converter requires that the <xref:System.Xaml.IXamlNameResolver> service is available from service context.","pos":[0,442],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Markup.NameReferenceConverter.ConvertFrom%2A&gt;</ph> implementation uses <ph id=\"ph2\">&lt;xref:System.Xaml.IXamlNameResolver&gt;</ph> service from context to perform the resolution of an object by name in XAML.","pos":[0,204],"source":"The <xref:System.Windows.Markup.NameReferenceConverter.ConvertFrom%2A> implementation uses <xref:System.Xaml.IXamlNameResolver> service from context to perform the resolution of an object by name in XAML."},{"content":"This is part of the relevant XAML reader and XAML writer implementations in .NET Framework XAML Services.","pos":[205,310]},{"content":"Proper function of this converter requires that the <ph id=\"ph1\">&lt;xref:System.Xaml.IXamlNameResolver&gt;</ph> service is available from service context.","pos":[311,442],"source":" Proper function of this converter requires that the <xref:System.Xaml.IXamlNameResolver> service is available from service context."}]}]},{"pos":[521,963],"content":"The <xref:System.Windows.Markup.NameReferenceConverter.ConvertTo%2A> implementation uses <xref:System.Xaml.IXamlNameProvider> service from context to perform the resolution of a reference name for an object during save/serialization. This is part of the relevant reader and writer implementations and their context. Proper function of this converter requires that there be an underlying <xref:System.Xaml.IXamlNameProvider> service available.","nodes":[{"content":"The <xref:System.Windows.Markup.NameReferenceConverter.ConvertTo%2A> implementation uses <xref:System.Xaml.IXamlNameProvider> service from context to perform the resolution of a reference name for an object during save/serialization. This is part of the relevant reader and writer implementations and their context. Proper function of this converter requires that there be an underlying <xref:System.Xaml.IXamlNameProvider> service available.","pos":[0,442],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Markup.NameReferenceConverter.ConvertTo%2A&gt;</ph> implementation uses <ph id=\"ph2\">&lt;xref:System.Xaml.IXamlNameProvider&gt;</ph> service from context to perform the resolution of a reference name for an object during save/serialization.","pos":[0,233],"source":"The <xref:System.Windows.Markup.NameReferenceConverter.ConvertTo%2A> implementation uses <xref:System.Xaml.IXamlNameProvider> service from context to perform the resolution of a reference name for an object during save/serialization."},{"content":"This is part of the relevant reader and writer implementations and their context.","pos":[234,315]},{"content":"Proper function of this converter requires that there be an underlying <ph id=\"ph1\">&lt;xref:System.Xaml.IXamlNameProvider&gt;</ph> service available.","pos":[316,442],"source":" Proper function of this converter requires that there be an underlying <xref:System.Xaml.IXamlNameProvider> service available."}]}]},{"pos":[970,1340],"content":"This type converter implementation is atypical for the <xref:System.ComponentModel.TypeConverter> base type because it is not scoped to a discrete conversion type. It can potentially convert any object to and from a referencing name so long as that object could have a name assigned to it in XAML, and the supporting context has the necessary services to return results.","nodes":[{"content":"This type converter implementation is atypical for the <xref:System.ComponentModel.TypeConverter> base type because it is not scoped to a discrete conversion type. It can potentially convert any object to and from a referencing name so long as that object could have a name assigned to it in XAML, and the supporting context has the necessary services to return results.","pos":[0,370],"nodes":[{"content":"This type converter implementation is atypical for the <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> base type because it is not scoped to a discrete conversion type.","pos":[0,163],"source":"This type converter implementation is atypical for the <xref:System.ComponentModel.TypeConverter> base type because it is not scoped to a discrete conversion type."},{"content":"It can potentially convert any object to and from a referencing name so long as that object could have a name assigned to it in XAML, and the supporting context has the necessary services to return results.","pos":[164,370]}]}]},{"pos":[1347,1799],"content":"As part of general services support, the System.Xaml base implementation of <xref:System.Xaml.XamlObjectWriter> and <xref:System.Xaml.XamlXmlWriter> provide <xref:System.Xaml.IXamlNameProvider> and <xref:System.Xaml.IXamlNameResolver> services for use by <xref:System.Windows.Markup.NameReferenceConverter>. The name basis for these services uses either `x:Name` or a <xref:System.Windows.Markup.RuntimeNamePropertyAttribute> attributed alias property.","nodes":[{"content":"As part of general services support, the System.Xaml base implementation of <ph id=\"ph1\">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> provide <ph id=\"ph3\">&lt;xref:System.Xaml.IXamlNameProvider&gt;</ph> and <ph id=\"ph4\">&lt;xref:System.Xaml.IXamlNameResolver&gt;</ph> services for use by <ph id=\"ph5\">&lt;xref:System.Windows.Markup.NameReferenceConverter&gt;</ph>.","pos":[0,307],"source":"As part of general services support, the System.Xaml base implementation of <xref:System.Xaml.XamlObjectWriter> and <xref:System.Xaml.XamlXmlWriter> provide <xref:System.Xaml.IXamlNameProvider> and <xref:System.Xaml.IXamlNameResolver> services for use by <xref:System.Windows.Markup.NameReferenceConverter>."},{"content":"The name basis for these services uses either <ph id=\"ph1\">`x:Name`</ph> or a <ph id=\"ph2\">&lt;xref:System.Windows.Markup.RuntimeNamePropertyAttribute&gt;</ph> attributed alias property.","pos":[308,452],"source":" The name basis for these services uses either `x:Name` or a <xref:System.Windows.Markup.RuntimeNamePropertyAttribute> attributed alias property."}]}],"pos":[1215,3025],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Markup.NameReferenceConverter\"></xref> class.","nodes":[{"pos":[0,106],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Markup.NameReferenceConverter\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Windows.Markup.NameReferenceConverter\"></xref> class."}],"pos":[7715,7822],"yaml":true},{"content":"Returns whether this converter can convert an object of one type to another object.","nodes":[{"pos":[0,83],"content":"Returns whether this converter can convert an object of one type to another object.","nodes":[{"content":"Returns whether this converter can convert an object of one type to another object.","pos":[0,83]}]}],"pos":[9199,9283],"yaml":true},{"content":"This implementation can only process a `sourceType` of <xref:System.String>. Other types return `false`.","nodes":[{"pos":[0,104],"content":"This implementation can only process a `sourceType` of <xref:System.String>. Other types return `false`.","nodes":[{"content":"This implementation can only process a <ph id=\"ph1\">`sourceType`</ph> of <ph id=\"ph2\">&lt;xref:System.String&gt;</ph>.","pos":[0,76],"source":"This implementation can only process a `sourceType` of <xref:System.String>."},{"content":"Other types return <ph id=\"ph1\">`false`</ph>.","pos":[77,104],"source":" Other types return `false`."}]}],"pos":[9294,9399],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.","nodes":[{"pos":[0,100],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;&lt;/xref&gt;</ph> that provides a format context.","source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."}],"pos":[9641,9742],"yaml":true},{"content":"A <xref href=\"System.Type\"></xref> that represents the type you want to convert from.","nodes":[{"pos":[0,85],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that represents the type you want to convert from.","source":"A <xref href=\"System.Type\"></xref> that represents the type you want to convert from."}],"pos":[9806,9892],"yaml":true},{"content":"`true` if this converter can perform the conversion; otherwise, `false`.","nodes":[{"pos":[0,72],"content":"<ph id=\"ph1\">`true`</ph> if this converter can perform the conversion; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if this converter can perform the conversion; otherwise, `false`."}],"pos":[9950,10025],"yaml":true},{"content":"Returns a value that indicates whether the converter can convert an object to the specified destination type.","nodes":[{"pos":[0,109],"content":"Returns a value that indicates whether the converter can convert an object to the specified destination type.","nodes":[{"content":"Returns a value that indicates whether the converter can convert an object to the specified destination type.","pos":[0,109]}]}],"pos":[11323,11433],"yaml":true},{"content":"A `destinationType` that references the <xref:System.String> type returns `true`; all other `destinationType` values return `false`.  \n  \n This method returns false if `context` is `null`, or if <xref:System.Xaml.IXamlNameProvider> cannot be obtained as a service from `context`.","nodes":[{"pos":[0,132],"content":"A <ph id=\"ph1\">`destinationType`</ph> that references the <ph id=\"ph2\">&lt;xref:System.String&gt;</ph> type returns <ph id=\"ph3\">`true`</ph>; all other <ph id=\"ph4\">`destinationType`</ph> values return <ph id=\"ph5\">`false`</ph>.","source":"A `destinationType` that references the <xref:System.String> type returns `true`; all other `destinationType` values return `false`."},{"pos":[139,279],"content":"This method returns false if <ph id=\"ph1\">`context`</ph> is <ph id=\"ph2\">`null`</ph>, or if <ph id=\"ph3\">&lt;xref:System.Xaml.IXamlNameProvider&gt;</ph> cannot be obtained as a service from <ph id=\"ph4\">`context`</ph>.","source":"This method returns false if `context` is `null`, or if <xref:System.Xaml.IXamlNameProvider> cannot be obtained as a service from `context`."}],"pos":[11444,11728],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.","nodes":[{"pos":[0,100],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;&lt;/xref&gt;</ph> that provides a format context.","source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."}],"pos":[11973,12074],"yaml":true},{"content":"The type to convert to.","nodes":[{"pos":[0,23],"content":"The type to convert to.","nodes":[{"content":"The type to convert to.","pos":[0,23]}]}],"pos":[12143,12167],"yaml":true},{"content":"`true` if the converter can perform the conversion; otherwise, `false`.","nodes":[{"pos":[0,71],"content":"<ph id=\"ph1\">`true`</ph> if the converter can perform the conversion; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the converter can perform the conversion; otherwise, `false`."}],"pos":[12225,12299],"yaml":true},{"content":"Converts the provided object to another object, using the specified context and culture information.","nodes":[{"pos":[0,100],"content":"Converts the provided object to another object, using the specified context and culture information.","nodes":[{"content":"Converts the provided object to another object, using the specified context and culture information.","pos":[0,100]}]}],"pos":[13739,13840],"yaml":true},{"content":"Only a <xref:System.String> input provides a conversion result.","nodes":[{"pos":[0,63],"content":"Only a <xref:System.String> input provides a conversion result.","nodes":[{"content":"Only a <ph id=\"ph1\">&lt;xref:System.String&gt;</ph> input provides a conversion result.","pos":[0,63],"source":"Only a <xref:System.String> input provides a conversion result."}]}],"pos":[13851,13915],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.","nodes":[{"pos":[0,100],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;&lt;/xref&gt;</ph> that provides a format context.","source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."}],"pos":[14195,14296],"yaml":true},{"content":"The <xref href=\"System.Globalization.CultureInfo\"></xref> to use as the current culture.","nodes":[{"pos":[0,88],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Globalization.CultureInfo\"&gt;&lt;/xref&gt;</ph> to use as the current culture.","source":"The <xref href=\"System.Globalization.CultureInfo\"></xref> to use as the current culture."}],"pos":[14378,14467],"yaml":true},{"content":"The reference name string to convert.","nodes":[{"pos":[0,37],"content":"The reference name string to convert.","nodes":[{"content":"The reference name string to convert.","pos":[0,37]}]}],"pos":[14528,14566],"yaml":true},{"content":"The returned object, which is potentially any object that is type-mapped in the relevant backing assemblies and capable of being declared in XAML with a XAML name reference.","nodes":[{"pos":[0,173],"content":"The returned object, which is potentially any object that is type-mapped in the relevant backing assemblies and capable of being declared in XAML with a XAML name reference.","nodes":[{"content":"The returned object, which is potentially any object that is type-mapped in the relevant backing assemblies and capable of being declared in XAML with a XAML name reference.","pos":[0,173]}]}],"pos":[14623,14797],"yaml":true},{"content":"<code>value</code> is a null string or empty string.  \n  \n -or-  \n  \n <xref href=\"System.Xaml.IXamlNameResolver\"></xref> service is missing or invalid.","nodes":[{"pos":[0,52],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is a null string or empty string.","source":"<code>value</code> is a null string or empty string."},{"pos":[59,63],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[70,151],"content":"<ph id=\"ph1\">&lt;xref href=\"System.Xaml.IXamlNameResolver\"&gt;&lt;/xref&gt;</ph> service is missing or invalid.","source":"<xref href=\"System.Xaml.IXamlNameResolver\"></xref> service is missing or invalid."}],"pos":[14991,15151],"yaml":true},{"content":"<code>context</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;context&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>context</code> is `null`."}],"pos":[15253,15285],"yaml":true},{"content":"Converts an object to the specified type. This is intended to return XAML reference names for objects in an object graph.","nodes":[{"pos":[0,121],"content":"Converts an object to the specified type. This is intended to return XAML reference names for objects in an object graph.","nodes":[{"content":"Converts an object to the specified type. This is intended to return XAML reference names for objects in an object graph.","pos":[0,121],"nodes":[{"content":"Converts an object to the specified type.","pos":[0,41]},{"content":"This is intended to return XAML reference names for objects in an object graph.","pos":[42,121]}]}]}],"pos":[16679,16801],"yaml":true},{"content":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.","nodes":[{"pos":[0,100],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ITypeDescriptorContext\"&gt;&lt;/xref&gt;</ph> that provides a format context.","source":"An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context."}],"pos":[17101,17202],"yaml":true},{"content":"The <xref href=\"System.Globalization.CultureInfo\"></xref> to use as the current culture.","nodes":[{"pos":[0,88],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Globalization.CultureInfo\"&gt;&lt;/xref&gt;</ph> to use as the current culture.","source":"The <xref href=\"System.Globalization.CultureInfo\"></xref> to use as the current culture."}],"pos":[17284,17373],"yaml":true},{"content":"The object to retrieve the reference name for.","nodes":[{"pos":[0,46],"content":"The object to retrieve the reference name for.","nodes":[{"content":"The object to retrieve the reference name for.","pos":[0,46]}]}],"pos":[17434,17481],"yaml":true},{"content":"The type to return. You should always reference the <xref href=\"System.String\"></xref> type.","nodes":[{"pos":[0,92],"content":"The type to return. You should always reference the <xref href=\"System.String\"></xref> type.","nodes":[{"content":"The type to return.","pos":[0,19]},{"content":"You should always reference the <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> type.","pos":[20,92],"source":" You should always reference the <xref href=\"System.String\"></xref> type."}]}],"pos":[17550,17643],"yaml":true},{"content":"The reference name of the input <code>value</code> object.","nodes":[{"pos":[0,58],"content":"The reference name of the input <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> object.","source":"The reference name of the input <code>value</code> object."}],"pos":[17700,17759],"yaml":true},{"content":"<xref href=\"System.Xaml.IXamlNameProvider\"></xref> service is missing or invalid.","nodes":[{"pos":[0,81],"content":"<ph id=\"ph1\">&lt;xref href=\"System.Xaml.IXamlNameProvider\"&gt;&lt;/xref&gt;</ph> service is missing or invalid.","source":"<xref href=\"System.Xaml.IXamlNameProvider\"></xref> service is missing or invalid."}],"pos":[17951,18033],"yaml":true},{"content":"<code>context</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;context&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>context</code> is `null`."}],"pos":[18135,18167],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Markup.NameReferenceConverter\n  commentId: T:System.Windows.Markup.NameReferenceConverter\n  id: NameReferenceConverter\n  children:\n  - System.Windows.Markup.NameReferenceConverter.#ctor\n  - System.Windows.Markup.NameReferenceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.Windows.Markup.NameReferenceConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.Windows.Markup.NameReferenceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.Windows.Markup.NameReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  langs:\n  - csharp\n  name: NameReferenceConverter\n  nameWithType: NameReferenceConverter\n  fullName: System.Windows.Markup.NameReferenceConverter\n  type: Class\n  assemblies:\n  - System.Xaml\n  namespace: System.Windows.Markup\n  summary: Provides type conversion to convert a string name into an object reference to the object with that name, or to return the name of an object from the object graph.\n  remarks: \"This class provides a type converter wrapper around two services.  \\n  \\n The <xref:System.Windows.Markup.NameReferenceConverter.ConvertFrom%2A> implementation uses <xref:System.Xaml.IXamlNameResolver> service from context to perform the resolution of an object by name in XAML. This is part of the relevant XAML reader and XAML writer implementations in .NET Framework XAML Services. Proper function of this converter requires that the <xref:System.Xaml.IXamlNameResolver> service is available from service context.  \\n  \\n The <xref:System.Windows.Markup.NameReferenceConverter.ConvertTo%2A> implementation uses <xref:System.Xaml.IXamlNameProvider> service from context to perform the resolution of a reference name for an object during save/serialization. This is part of the relevant reader and writer implementations and their context. Proper function of this converter requires that there be an underlying <xref:System.Xaml.IXamlNameProvider> service available.  \\n  \\n This type converter implementation is atypical for the <xref:System.ComponentModel.TypeConverter> base type because it is not scoped to a discrete conversion type. It can potentially convert any object to and from a referencing name so long as that object could have a name assigned to it in XAML, and the supporting context has the necessary services to return results.  \\n  \\n As part of general services support, the System.Xaml base implementation of <xref:System.Xaml.XamlObjectWriter> and <xref:System.Xaml.XamlXmlWriter> provide <xref:System.Xaml.IXamlNameProvider> and <xref:System.Xaml.IXamlNameResolver> services for use by <xref:System.Windows.Markup.NameReferenceConverter>. The name basis for these services uses either `x:Name` or a <xref:System.Windows.Markup.RuntimeNamePropertyAttribute> attributed alias property.\"\n  syntax:\n    content: 'public class NameReferenceConverter : System.ComponentModel.TypeConverter'\n  inheritance:\n  - System.Object\n  - System.ComponentModel.TypeConverter\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  - System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValues\n  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.IsValid(System.Object)\n  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/NameReferenceConverter.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Windows.Markup.NameReferenceConverter.#ctor\n  commentId: M:System.Windows.Markup.NameReferenceConverter.#ctor\n  id: '#ctor'\n  parent: System.Windows.Markup.NameReferenceConverter\n  langs:\n  - csharp\n  name: NameReferenceConverter()\n  nameWithType: NameReferenceConverter.NameReferenceConverter()\n  fullName: NameReferenceConverter.NameReferenceConverter()\n  type: Constructor\n  assemblies:\n  - System.Xaml\n  namespace: System.Windows.Markup\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Markup.NameReferenceConverter\"></xref> class.\n  syntax:\n    content: public NameReferenceConverter ();\n    parameters: []\n  overload: System.Windows.Markup.NameReferenceConverter.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/NameReferenceConverter.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Windows.Markup.NameReferenceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  commentId: M:System.Windows.Markup.NameReferenceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Windows.Markup.NameReferenceConverter\n  langs:\n  - csharp\n  name: CanConvertFrom(ITypeDescriptorContext, Type)\n  nameWithType: NameReferenceConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n  fullName: NameReferenceConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Windows.Markup\n  summary: Returns whether this converter can convert an object of one type to another object.\n  remarks: This implementation can only process a `sourceType` of <xref:System.String>. Other types return `false`.\n  syntax:\n    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    - id: sourceType\n      type: System.Type\n      description: A <xref href=\"System.Type\"></xref> that represents the type you want to convert from.\n    return:\n      type: System.Boolean\n      description: '`true` if this converter can perform the conversion; otherwise, `false`.'\n  overload: System.Windows.Markup.NameReferenceConverter.CanConvertFrom*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/NameReferenceConverter.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Windows.Markup.NameReferenceConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  commentId: M:System.Windows.Markup.NameReferenceConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Windows.Markup.NameReferenceConverter\n  langs:\n  - csharp\n  name: CanConvertTo(ITypeDescriptorContext, Type)\n  nameWithType: NameReferenceConverter.CanConvertTo(ITypeDescriptorContext, Type)\n  fullName: NameReferenceConverter.CanConvertTo(ITypeDescriptorContext, Type)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Windows.Markup\n  summary: Returns a value that indicates whether the converter can convert an object to the specified destination type.\n  remarks: \"A `destinationType` that references the <xref:System.String> type returns `true`; all other `destinationType` values return `false`.  \\n  \\n This method returns false if `context` is `null`, or if <xref:System.Xaml.IXamlNameProvider> cannot be obtained as a service from `context`.\"\n  syntax:\n    content: public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    - id: destinationType\n      type: System.Type\n      description: The type to convert to.\n    return:\n      type: System.Boolean\n      description: '`true` if the converter can perform the conversion; otherwise, `false`.'\n  overload: System.Windows.Markup.NameReferenceConverter.CanConvertTo*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/NameReferenceConverter.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Windows.Markup.NameReferenceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  commentId: M:System.Windows.Markup.NameReferenceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.Windows.Markup.NameReferenceConverter\n  langs:\n  - csharp\n  name: ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  nameWithType: NameReferenceConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: NameReferenceConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Windows.Markup\n  summary: Converts the provided object to another object, using the specified context and culture information.\n  remarks: Only a <xref:System.String> input provides a conversion result.\n  syntax:\n    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: The <xref href=\"System.Globalization.CultureInfo\"></xref> to use as the current culture.\n    - id: value\n      type: System.Object\n      description: The reference name string to convert.\n    return:\n      type: System.Object\n      description: The returned object, which is potentially any object that is type-mapped in the relevant backing assemblies and capable of being declared in XAML with a XAML name reference.\n  overload: System.Windows.Markup.NameReferenceConverter.ConvertFrom*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"<code>value</code> is a null string or empty string.  \\n  \\n -or-  \\n  \\n <xref href=\\\"System.Xaml.IXamlNameResolver\\\"></xref> service is missing or invalid.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>context</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/NameReferenceConverter.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Windows.Markup.NameReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  commentId: M:System.Windows.Markup.NameReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.Windows.Markup.NameReferenceConverter\n  langs:\n  - csharp\n  name: ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  nameWithType: NameReferenceConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  fullName: NameReferenceConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Windows.Markup\n  summary: Converts an object to the specified type. This is intended to return XAML reference names for objects in an object graph.\n  syntax:\n    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An <xref href=\"System.ComponentModel.ITypeDescriptorContext\"></xref> that provides a format context.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: The <xref href=\"System.Globalization.CultureInfo\"></xref> to use as the current culture.\n    - id: value\n      type: System.Object\n      description: The object to retrieve the reference name for.\n    - id: destinationType\n      type: System.Type\n      description: The type to return. You should always reference the <xref href=\"System.String\"></xref> type.\n    return:\n      type: System.Object\n      description: The reference name of the input <code>value</code> object.\n  overload: System.Windows.Markup.NameReferenceConverter.ConvertTo*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <xref href=\"System.Xaml.IXamlNameProvider\"></xref> service is missing or invalid.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>context</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/NameReferenceConverter.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\nreferences:\n- uid: System.ComponentModel.TypeConverter\n  parent: System.ComponentModel\n  isExternal: false\n  name: TypeConverter\n  nameWithType: TypeConverter\n  fullName: System.ComponentModel.TypeConverter\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Windows.Markup.NameReferenceConverter.#ctor\n  parent: System.Windows.Markup.NameReferenceConverter\n  isExternal: false\n  name: NameReferenceConverter()\n  nameWithType: NameReferenceConverter.NameReferenceConverter()\n  fullName: NameReferenceConverter.NameReferenceConverter()\n- uid: System.Windows.Markup.NameReferenceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Windows.Markup.NameReferenceConverter\n  isExternal: false\n  name: CanConvertFrom(ITypeDescriptorContext, Type)\n  nameWithType: NameReferenceConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n  fullName: NameReferenceConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.ITypeDescriptorContext\n  parent: System.ComponentModel\n  isExternal: false\n  name: ITypeDescriptorContext\n  nameWithType: ITypeDescriptorContext\n  fullName: System.ComponentModel.ITypeDescriptorContext\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Windows.Markup.NameReferenceConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Windows.Markup.NameReferenceConverter\n  isExternal: false\n  name: CanConvertTo(ITypeDescriptorContext, Type)\n  nameWithType: NameReferenceConverter.CanConvertTo(ITypeDescriptorContext, Type)\n  fullName: NameReferenceConverter.CanConvertTo(ITypeDescriptorContext, Type)\n- uid: System.Windows.Markup.NameReferenceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.Windows.Markup.NameReferenceConverter\n  isExternal: false\n  name: ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  nameWithType: NameReferenceConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: NameReferenceConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Windows.Markup.NameReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.Windows.Markup.NameReferenceConverter\n  isExternal: false\n  name: ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  nameWithType: NameReferenceConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  fullName: NameReferenceConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n- uid: System.Windows.Markup.NameReferenceConverter.#ctor*\n  parent: System.Windows.Markup.NameReferenceConverter\n  isExternal: false\n  name: NameReferenceConverter\n  nameWithType: NameReferenceConverter.NameReferenceConverter\n  fullName: NameReferenceConverter.NameReferenceConverter\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/NameReferenceConverter.xml\n- uid: System.Windows.Markup.NameReferenceConverter.CanConvertFrom*\n  parent: System.Windows.Markup.NameReferenceConverter\n  isExternal: false\n  name: CanConvertFrom\n  nameWithType: NameReferenceConverter.CanConvertFrom\n  fullName: NameReferenceConverter.CanConvertFrom\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/NameReferenceConverter.xml\n- uid: System.Windows.Markup.NameReferenceConverter.CanConvertTo*\n  parent: System.Windows.Markup.NameReferenceConverter\n  isExternal: false\n  name: CanConvertTo\n  nameWithType: NameReferenceConverter.CanConvertTo\n  fullName: NameReferenceConverter.CanConvertTo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/NameReferenceConverter.xml\n- uid: System.Windows.Markup.NameReferenceConverter.ConvertFrom*\n  parent: System.Windows.Markup.NameReferenceConverter\n  isExternal: false\n  name: ConvertFrom\n  nameWithType: NameReferenceConverter.ConvertFrom\n  fullName: NameReferenceConverter.ConvertFrom\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/NameReferenceConverter.xml\n- uid: System.Windows.Markup.NameReferenceConverter.ConvertTo*\n  parent: System.Windows.Markup.NameReferenceConverter\n  isExternal: false\n  name: ConvertTo\n  nameWithType: NameReferenceConverter.ConvertTo\n  fullName: NameReferenceConverter.ConvertTo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/NameReferenceConverter.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CanConvertFrom(Type)\n  nameWithType: TypeConverter.CanConvertFrom(Type)\n  fullName: TypeConverter.CanConvertFrom(Type)\n- uid: System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CanConvertTo(Type)\n  nameWithType: TypeConverter.CanConvertTo(Type)\n  fullName: TypeConverter.CanConvertTo(Type)\n- uid: System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFrom(Object)\n  nameWithType: TypeConverter.ConvertFrom(Object)\n  fullName: TypeConverter.ConvertFrom(Object)\n- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromInvariantString(String)\n  nameWithType: TypeConverter.ConvertFromInvariantString(String)\n  fullName: TypeConverter.ConvertFromInvariantString(String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromInvariantString(ITypeDescriptorContext, String)\n  nameWithType: TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext, String)\n  fullName: TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext, String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n  fullName: TypeConverter.ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromString(String)\n  nameWithType: TypeConverter.ConvertFromString(String)\n  fullName: TypeConverter.ConvertFromString(String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromString(ITypeDescriptorContext, String)\n  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext, String)\n  fullName: TypeConverter.ConvertFromString(ITypeDescriptorContext, String)\n- uid: System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertTo(Object, Type)\n  nameWithType: TypeConverter.ConvertTo(Object, Type)\n  fullName: TypeConverter.ConvertTo(Object, Type)\n- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToInvariantString(Object)\n  nameWithType: TypeConverter.ConvertToInvariantString(Object)\n  fullName: TypeConverter.ConvertToInvariantString(Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToInvariantString(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.ConvertToInvariantString(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.ConvertToInvariantString(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: TypeConverter.ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToString(Object)\n  nameWithType: TypeConverter.ConvertToString(Object)\n  fullName: TypeConverter.ConvertToString(Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToString(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.ConvertToString(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CreateInstance(ITypeDescriptorContext, IDictionary)\n  nameWithType: TypeConverter.CreateInstance(ITypeDescriptorContext, IDictionary)\n  fullName: TypeConverter.CreateInstance(ITypeDescriptorContext, IDictionary)\n- uid: System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CreateInstance(IDictionary)\n  nameWithType: TypeConverter.CreateInstance(IDictionary)\n  fullName: TypeConverter.CreateInstance(IDictionary)\n- uid: System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetConvertFromException(Object)\n  nameWithType: TypeConverter.GetConvertFromException(Object)\n  fullName: TypeConverter.GetConvertFromException(Object)\n- uid: System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetConvertToException(Object, Type)\n  nameWithType: TypeConverter.GetConvertToException(Object, Type)\n  fullName: TypeConverter.GetConvertToException(Object, Type)\n- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetCreateInstanceSupported()\n  nameWithType: TypeConverter.GetCreateInstanceSupported()\n  fullName: TypeConverter.GetCreateInstanceSupported()\n- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetCreateInstanceSupported(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext)\n  fullName: TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetProperties(Object)\n  nameWithType: TypeConverter.GetProperties(Object)\n  fullName: TypeConverter.GetProperties(Object)\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetProperties(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.GetProperties(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.GetProperties(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetProperties(ITypeDescriptorContext, Object, Attribute[])\n  nameWithType: TypeConverter.GetProperties(ITypeDescriptorContext, Object, Attribute[])\n  fullName: TypeConverter.GetProperties(ITypeDescriptorContext, Object, Attribute[])\n- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetPropertiesSupported(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetPropertiesSupported(ITypeDescriptorContext)\n  fullName: TypeConverter.GetPropertiesSupported(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetPropertiesSupported()\n  nameWithType: TypeConverter.GetPropertiesSupported()\n  fullName: TypeConverter.GetPropertiesSupported()\n- uid: System.ComponentModel.TypeConverter.GetStandardValues\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValues()\n  nameWithType: TypeConverter.GetStandardValues()\n  fullName: TypeConverter.GetStandardValues()\n- uid: System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValues(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetStandardValues(ITypeDescriptorContext)\n  fullName: TypeConverter.GetStandardValues(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesExclusive()\n  nameWithType: TypeConverter.GetStandardValuesExclusive()\n  fullName: TypeConverter.GetStandardValuesExclusive()\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesExclusive(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n  fullName: TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesSupported()\n  nameWithType: TypeConverter.GetStandardValuesSupported()\n  fullName: TypeConverter.GetStandardValuesSupported()\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesSupported(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n  fullName: TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: IsValid(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.IsValid(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.IsValid(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.IsValid(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: IsValid(Object)\n  nameWithType: TypeConverter.IsValid(Object)\n  fullName: TypeConverter.IsValid(Object)\n- uid: System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: SortProperties(PropertyDescriptorCollection, String[])\n  nameWithType: TypeConverter.SortProperties(PropertyDescriptorCollection, String[])\n  fullName: TypeConverter.SortProperties(PropertyDescriptorCollection, String[])\n"}