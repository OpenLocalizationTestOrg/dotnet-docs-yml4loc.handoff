{"nodes":[{"content":"Represents an `abstract` class that provides properties for objects that do not have properties.","nodes":[{"pos":[0,96],"content":"Represents an <ph id=\"ph1\">`abstract`</ph> class that provides properties for objects that do not have properties.","source":"Represents an `abstract` class that provides properties for objects that do not have properties."}],"pos":[1331,1428],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.TypeConverter.SimplePropertyDescriptor\"></xref> class.","nodes":[{"pos":[0,122],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.TypeConverter.SimplePropertyDescriptor\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.TypeConverter.SimplePropertyDescriptor\"></xref> class."}],"pos":[6236,6359],"yaml":true},{"content":"A <xref href=\"System.Type\"></xref> that represents the type of component to which this property descriptor binds.","nodes":[{"pos":[0,113],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that represents the type of component to which this property descriptor binds.","source":"A <xref href=\"System.Type\"></xref> that represents the type of component to which this property descriptor binds."}],"pos":[6554,6668],"yaml":true},{"content":"The name of the property.","nodes":[{"pos":[0,25],"content":"The name of the property.","nodes":[{"content":"The name of the property.","pos":[0,25]}]}],"pos":[6728,6754],"yaml":true},{"content":"A <xref href=\"System.Type\"></xref> that represents the data type for this property.","nodes":[{"pos":[0,83],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that represents the data type for this property.","source":"A <xref href=\"System.Type\"></xref> that represents the data type for this property."}],"pos":[6820,6904],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.TypeConverter.SimplePropertyDescriptor\"></xref> class.","nodes":[{"pos":[0,122],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.TypeConverter.SimplePropertyDescriptor\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.TypeConverter.SimplePropertyDescriptor\"></xref> class."}],"pos":[8733,8856],"yaml":true},{"content":"A <xref href=\"System.Type\"></xref> that represents the type of component to which this property descriptor binds.","nodes":[{"pos":[0,113],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that represents the type of component to which this property descriptor binds.","source":"A <xref href=\"System.Type\"></xref> that represents the type of component to which this property descriptor binds."}],"pos":[9075,9189],"yaml":true},{"content":"The name of the property.","nodes":[{"pos":[0,25],"content":"The name of the property.","nodes":[{"content":"The name of the property.","pos":[0,25]}]}],"pos":[9249,9275],"yaml":true},{"content":"A <xref href=\"System.Type\"></xref> that represents the data type for this property.","nodes":[{"pos":[0,83],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that represents the data type for this property.","source":"A <xref href=\"System.Type\"></xref> that represents the data type for this property."}],"pos":[9341,9425],"yaml":true},{"content":"An <xref href=\"System.Attribute\"></xref> array with the attributes to associate with the property.","nodes":[{"pos":[0,98],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Attribute\"&gt;&lt;/xref&gt;</ph> array with the attributes to associate with the property.","source":"An <xref href=\"System.Attribute\"></xref> array with the attributes to associate with the property."}],"pos":[9496,9595],"yaml":true},{"content":"Returns whether resetting the component changes the value of the component.","nodes":[{"pos":[0,75],"content":"Returns whether resetting the component changes the value of the component.","nodes":[{"content":"Returns whether resetting the component changes the value of the component.","pos":[0,75]}]}],"pos":[11162,11238],"yaml":true},{"content":"This method looks for a <xref:System.ComponentModel.DefaultValueAttribute>. If it finds one, it compares the value of the attribute with the current value of the property. It returns `true` when the default value does not match the current value of the property. If this method cannot find a <xref:System.ComponentModel.DefaultValueAttribute>, it looks for a `ShouldSerializeMyProperty` method. If it finds a `ShouldSerializeMyProperty` method, it returns what `ShouldSerializeMyProperty` returns. If this method cannot find a `ShouldSerializeMyProperty` method, it looks for a `ResetMyProperty` method. If it finds a `ResetMyProperty` method, it returns `true`. If this method cannot find a <xref:System.ComponentModel.DefaultValueAttribute>, a `ShouldSerializeMyProperty` method, or a `ResetMyProperty` method, then it returns `false`.","nodes":[{"pos":[0,837],"content":"This method looks for a <xref:System.ComponentModel.DefaultValueAttribute>. If it finds one, it compares the value of the attribute with the current value of the property. It returns `true` when the default value does not match the current value of the property. If this method cannot find a <xref:System.ComponentModel.DefaultValueAttribute>, it looks for a `ShouldSerializeMyProperty` method. If it finds a `ShouldSerializeMyProperty` method, it returns what `ShouldSerializeMyProperty` returns. If this method cannot find a `ShouldSerializeMyProperty` method, it looks for a `ResetMyProperty` method. If it finds a `ResetMyProperty` method, it returns `true`. If this method cannot find a <xref:System.ComponentModel.DefaultValueAttribute>, a `ShouldSerializeMyProperty` method, or a `ResetMyProperty` method, then it returns `false`.","nodes":[{"content":"This method looks for a <ph id=\"ph1\">&lt;xref:System.ComponentModel.DefaultValueAttribute&gt;</ph>.","pos":[0,75],"source":"This method looks for a <xref:System.ComponentModel.DefaultValueAttribute>."},{"content":"If it finds one, it compares the value of the attribute with the current value of the property.","pos":[76,171]},{"content":"It returns <ph id=\"ph1\">`true`</ph> when the default value does not match the current value of the property.","pos":[172,262],"source":" It returns `true` when the default value does not match the current value of the property."},{"content":"If this method cannot find a <ph id=\"ph1\">&lt;xref:System.ComponentModel.DefaultValueAttribute&gt;</ph>, it looks for a <ph id=\"ph2\">`ShouldSerializeMyProperty`</ph> method.","pos":[263,394],"source":" If this method cannot find a <xref:System.ComponentModel.DefaultValueAttribute>, it looks for a `ShouldSerializeMyProperty` method."},{"content":"If it finds a <ph id=\"ph1\">`ShouldSerializeMyProperty`</ph> method, it returns what <ph id=\"ph2\">`ShouldSerializeMyProperty`</ph> returns.","pos":[395,497],"source":" If it finds a `ShouldSerializeMyProperty` method, it returns what `ShouldSerializeMyProperty` returns."},{"content":"If this method cannot find a <ph id=\"ph1\">`ShouldSerializeMyProperty`</ph> method, it looks for a <ph id=\"ph2\">`ResetMyProperty`</ph> method.","pos":[498,603],"source":" If this method cannot find a `ShouldSerializeMyProperty` method, it looks for a `ResetMyProperty` method."},{"content":"If it finds a <ph id=\"ph1\">`ResetMyProperty`</ph> method, it returns <ph id=\"ph2\">`true`</ph>.","pos":[604,662],"source":" If it finds a `ResetMyProperty` method, it returns `true`."},{"content":"If this method cannot find a <ph id=\"ph1\">&lt;xref:System.ComponentModel.DefaultValueAttribute&gt;</ph>, a <ph id=\"ph2\">`ShouldSerializeMyProperty`</ph> method, or a <ph id=\"ph3\">`ResetMyProperty`</ph> method, then it returns <ph id=\"ph4\">`false`</ph>.","pos":[663,837],"source":" If this method cannot find a <xref:System.ComponentModel.DefaultValueAttribute>, a `ShouldSerializeMyProperty` method, or a `ResetMyProperty` method, then it returns `false`."}]}],"pos":[11249,12087],"yaml":true,"extradata":"MT"},{"content":"The component to test for reset capability.","nodes":[{"pos":[0,43],"content":"The component to test for reset capability.","nodes":[{"content":"The component to test for reset capability.","pos":[0,43]}]}],"pos":[12246,12290],"yaml":true},{"content":"`true` if resetting the component changes the value of the component; otherwise, `false`.","nodes":[{"pos":[0,89],"content":"<ph id=\"ph1\">`true`</ph> if resetting the component changes the value of the component; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if resetting the component changes the value of the component; otherwise, `false`."}],"pos":[12348,12440],"yaml":true},{"content":"Gets the type of component to which this property description binds.","nodes":[{"pos":[0,68],"content":"Gets the type of component to which this property description binds.","nodes":[{"content":"Gets the type of component to which this property description binds.","pos":[0,68]}]}],"pos":[13948,14017],"yaml":true},{"content":"A <xref href=\"System.Type\"></xref> that represents the type of component to which this property binds.","nodes":[{"pos":[0,102],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that represents the type of component to which this property binds.","source":"A <xref href=\"System.Type\"></xref> that represents the type of component to which this property binds."}],"pos":[14139,14242],"yaml":true},{"content":"Gets a value indicating whether this property is read-only.","nodes":[{"pos":[0,59],"content":"Gets a value indicating whether this property is read-only.","nodes":[{"content":"Gets a value indicating whether this property is read-only.","pos":[0,59]}]}],"pos":[15732,15792],"yaml":true},{"content":"`true` if the property is read-only; `false` if the property is read/write.","nodes":[{"pos":[0,75],"content":"<ph id=\"ph1\">`true`</ph> if the property is read-only; <ph id=\"ph2\">`false`</ph> if the property is read/write.","source":"`true` if the property is read-only; `false` if the property is read/write."}],"pos":[15914,15992],"yaml":true},{"content":"Gets the type of the property.","nodes":[{"pos":[0,30],"content":"Gets the type of the property.","nodes":[{"content":"Gets the type of the property.","pos":[0,30]}]}],"pos":[17491,17522],"yaml":true},{"content":"A <xref href=\"System.Type\"></xref> that represents the type of the property.","nodes":[{"pos":[0,76],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that represents the type of the property.","source":"A <xref href=\"System.Type\"></xref> that represents the type of the property."}],"pos":[17643,17720],"yaml":true},{"content":"Resets the value for this property of the component.","nodes":[{"pos":[0,52],"content":"Resets the value for this property of the component.","nodes":[{"content":"Resets the value for this property of the component.","pos":[0,52]}]}],"pos":[19276,19329],"yaml":true},{"content":"This method looks for a <xref:System.ComponentModel.DefaultValueAttribute>. If it finds one, it sets the value of the property to the value specified in the attribute. If this method cannot find a <xref:System.ComponentModel.DefaultValueAttribute>, it looks for a `ResetMyProperty` method. If it finds a `ResetMyProperty` method, it invokes it. If this method cannot find a <xref:System.ComponentModel.DefaultValueAttribute> or a `ResetMyProperty` method, then it does not perform an operation.","nodes":[{"pos":[0,494],"content":"This method looks for a <xref:System.ComponentModel.DefaultValueAttribute>. If it finds one, it sets the value of the property to the value specified in the attribute. If this method cannot find a <xref:System.ComponentModel.DefaultValueAttribute>, it looks for a `ResetMyProperty` method. If it finds a `ResetMyProperty` method, it invokes it. If this method cannot find a <xref:System.ComponentModel.DefaultValueAttribute> or a `ResetMyProperty` method, then it does not perform an operation.","nodes":[{"content":"This method looks for a <ph id=\"ph1\">&lt;xref:System.ComponentModel.DefaultValueAttribute&gt;</ph>.","pos":[0,75],"source":"This method looks for a <xref:System.ComponentModel.DefaultValueAttribute>."},{"content":"If it finds one, it sets the value of the property to the value specified in the attribute.","pos":[76,167]},{"content":"If this method cannot find a <ph id=\"ph1\">&lt;xref:System.ComponentModel.DefaultValueAttribute&gt;</ph>, it looks for a <ph id=\"ph2\">`ResetMyProperty`</ph> method.","pos":[168,289],"source":" If this method cannot find a <xref:System.ComponentModel.DefaultValueAttribute>, it looks for a `ResetMyProperty` method."},{"content":"If it finds a <ph id=\"ph1\">`ResetMyProperty`</ph> method, it invokes it.","pos":[290,344],"source":" If it finds a `ResetMyProperty` method, it invokes it."},{"content":"If this method cannot find a <ph id=\"ph1\">&lt;xref:System.ComponentModel.DefaultValueAttribute&gt;</ph> or a <ph id=\"ph2\">`ResetMyProperty`</ph> method, then it does not perform an operation.","pos":[345,494],"source":" If this method cannot find a <xref:System.ComponentModel.DefaultValueAttribute> or a `ResetMyProperty` method, then it does not perform an operation."}]}],"pos":[19340,19835],"yaml":true,"extradata":"MT"},{"content":"The component with the property value to be reset.","nodes":[{"pos":[0,50],"content":"The component with the property value to be reset.","nodes":[{"content":"The component with the property value to be reset.","pos":[0,50]}]}],"pos":[19991,20042],"yaml":true},{"content":"Returns whether the value of this property can persist.","nodes":[{"pos":[0,55],"content":"Returns whether the value of this property can persist.","nodes":[{"content":"Returns whether the value of this property can persist.","pos":[0,55]}]}],"pos":[21656,21712],"yaml":true},{"content":"As implemented in this class, this method returns `false`.","nodes":[{"pos":[0,58],"content":"As implemented in this class, this method returns <ph id=\"ph1\">`false`</ph>.","source":"As implemented in this class, this method returns `false`."}],"pos":[21723,21782],"yaml":true,"extradata":"MT"},{"content":"The component with the property that is to be examined for persistence.","nodes":[{"pos":[0,71],"content":"The component with the property that is to be examined for persistence.","nodes":[{"content":"The component with the property that is to be examined for persistence.","pos":[0,71]}]}],"pos":[21948,22020],"yaml":true},{"content":"`true` if the value of the property can persist; otherwise, `false`.","nodes":[{"pos":[0,68],"content":"<ph id=\"ph1\">`true`</ph> if the value of the property can persist; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the value of the property can persist; otherwise, `false`."}],"pos":[22078,22149],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.TypeConverter.SimplePropertyDescriptor\n  commentId: T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor\n  id: TypeConverter.SimplePropertyDescriptor\n  children:\n  - System.ComponentModel.TypeConverter.SimplePropertyDescriptor.#ctor(System.Type,System.String,System.Type)\n  - System.ComponentModel.TypeConverter.SimplePropertyDescriptor.#ctor(System.Type,System.String,System.Type,System.Attribute[])\n  - System.ComponentModel.TypeConverter.SimplePropertyDescriptor.CanResetValue(System.Object)\n  - System.ComponentModel.TypeConverter.SimplePropertyDescriptor.ComponentType\n  - System.ComponentModel.TypeConverter.SimplePropertyDescriptor.IsReadOnly\n  - System.ComponentModel.TypeConverter.SimplePropertyDescriptor.PropertyType\n  - System.ComponentModel.TypeConverter.SimplePropertyDescriptor.ResetValue(System.Object)\n  - System.ComponentModel.TypeConverter.SimplePropertyDescriptor.ShouldSerializeValue(System.Object)\n  langs:\n  - csharp\n  name: TypeConverter.SimplePropertyDescriptor\n  nameWithType: TypeConverter.SimplePropertyDescriptor\n  fullName: System.ComponentModel.TypeConverter.SimplePropertyDescriptor\n  type: Class\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Represents an `abstract` class that provides properties for objects that do not have properties.\n  remarks: ''\n  example:\n  - For an example on this class, see the example in <xref:System.ComponentModel.PropertyDescriptor>.\n  syntax:\n    content: 'protected abstract class TypeConverter.SimplePropertyDescriptor : System.ComponentModel.PropertyDescriptor'\n  inheritance:\n  - System.Object\n  - System.ComponentModel.MemberDescriptor\n  - System.ComponentModel.PropertyDescriptor\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.MemberDescriptor.AttributeArray\n  - System.ComponentModel.MemberDescriptor.Attributes\n  - System.ComponentModel.MemberDescriptor.Category\n  - System.ComponentModel.MemberDescriptor.CreateAttributeCollection\n  - System.ComponentModel.MemberDescriptor.Description\n  - System.ComponentModel.MemberDescriptor.DesignTimeOnly\n  - System.ComponentModel.MemberDescriptor.DisplayName\n  - System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type)\n  - System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type,System.Boolean)\n  - System.ComponentModel.MemberDescriptor.GetInvokee(System.Type,System.Object)\n  - System.ComponentModel.MemberDescriptor.GetSite(System.Object)\n  - System.ComponentModel.MemberDescriptor.IsBrowsable\n  - System.ComponentModel.MemberDescriptor.Name\n  - System.ComponentModel.MemberDescriptor.NameHashCode\n  - System.ComponentModel.PropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)\n  - System.ComponentModel.PropertyDescriptor.Converter\n  - System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)\n  - System.ComponentModel.PropertyDescriptor.Equals(System.Object)\n  - System.ComponentModel.PropertyDescriptor.FillAttributes(System.Collections.IList)\n  - System.ComponentModel.PropertyDescriptor.GetChildProperties\n  - System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])\n  - System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)\n  - System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])\n  - System.ComponentModel.PropertyDescriptor.GetEditor(System.Type)\n  - System.ComponentModel.PropertyDescriptor.GetHashCode\n  - System.ComponentModel.PropertyDescriptor.GetInvocationTarget(System.Type,System.Object)\n  - System.ComponentModel.PropertyDescriptor.GetTypeFromName(System.String)\n  - System.ComponentModel.PropertyDescriptor.GetValue(System.Object)\n  - System.ComponentModel.PropertyDescriptor.GetValueChangedHandler(System.Object)\n  - System.ComponentModel.PropertyDescriptor.IsLocalizable\n  - System.ComponentModel.PropertyDescriptor.OnValueChanged(System.Object,System.EventArgs)\n  - System.ComponentModel.PropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)\n  - System.ComponentModel.PropertyDescriptor.SerializationVisibility\n  - System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)\n  - System.ComponentModel.PropertyDescriptor.SupportsChangeEvents\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter+SimplePropertyDescriptor.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.TypeConverter.SimplePropertyDescriptor.#ctor(System.Type,System.String,System.Type)\n  commentId: M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.#ctor(System.Type,System.String,System.Type)\n  id: '#ctor(System.Type,System.String,System.Type)'\n  parent: System.ComponentModel.TypeConverter.SimplePropertyDescriptor\n  langs:\n  - csharp\n  name: TypeConverter.SimplePropertyDescriptor(Type, String, Type)\n  nameWithType: TypeConverter.SimplePropertyDescriptor.TypeConverter.SimplePropertyDescriptor(Type, String, Type)\n  fullName: TypeConverter.SimplePropertyDescriptor.TypeConverter.SimplePropertyDescriptor(Type, String, Type)\n  type: Constructor\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.TypeConverter.SimplePropertyDescriptor\"></xref> class.\n  syntax:\n    content: protected SimplePropertyDescriptor (Type componentType, string name, Type propertyType);\n    parameters:\n    - id: componentType\n      type: System.Type\n      description: A <xref href=\"System.Type\"></xref> that represents the type of component to which this property descriptor binds.\n    - id: name\n      type: System.String\n      description: The name of the property.\n    - id: propertyType\n      type: System.Type\n      description: A <xref href=\"System.Type\"></xref> that represents the data type for this property.\n  overload: System.ComponentModel.TypeConverter.SimplePropertyDescriptor.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter+SimplePropertyDescriptor.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.TypeConverter.SimplePropertyDescriptor.#ctor(System.Type,System.String,System.Type,System.Attribute[])\n  commentId: M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.#ctor(System.Type,System.String,System.Type,System.Attribute[])\n  id: '#ctor(System.Type,System.String,System.Type,System.Attribute[])'\n  parent: System.ComponentModel.TypeConverter.SimplePropertyDescriptor\n  langs:\n  - csharp\n  name: TypeConverter.SimplePropertyDescriptor(Type, String, Type, Attribute[])\n  nameWithType: TypeConverter.SimplePropertyDescriptor.TypeConverter.SimplePropertyDescriptor(Type, String, Type, Attribute[])\n  fullName: TypeConverter.SimplePropertyDescriptor.TypeConverter.SimplePropertyDescriptor(Type, String, Type, Attribute[])\n  type: Constructor\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.TypeConverter.SimplePropertyDescriptor\"></xref> class.\n  syntax:\n    content: protected SimplePropertyDescriptor (Type componentType, string name, Type propertyType, Attribute[] attributes);\n    parameters:\n    - id: componentType\n      type: System.Type\n      description: A <xref href=\"System.Type\"></xref> that represents the type of component to which this property descriptor binds.\n    - id: name\n      type: System.String\n      description: The name of the property.\n    - id: propertyType\n      type: System.Type\n      description: A <xref href=\"System.Type\"></xref> that represents the data type for this property.\n    - id: attributes\n      type: System.Attribute[]\n      description: An <xref href=\"System.Attribute\"></xref> array with the attributes to associate with the property.\n  overload: System.ComponentModel.TypeConverter.SimplePropertyDescriptor.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter+SimplePropertyDescriptor.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.TypeConverter.SimplePropertyDescriptor.CanResetValue(System.Object)\n  commentId: M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.CanResetValue(System.Object)\n  id: CanResetValue(System.Object)\n  parent: System.ComponentModel.TypeConverter.SimplePropertyDescriptor\n  langs:\n  - csharp\n  name: CanResetValue(Object)\n  nameWithType: TypeConverter.SimplePropertyDescriptor.CanResetValue(Object)\n  fullName: TypeConverter.SimplePropertyDescriptor.CanResetValue(Object)\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Returns whether resetting the component changes the value of the component.\n  remarks: This method looks for a <xref:System.ComponentModel.DefaultValueAttribute>. If it finds one, it compares the value of the attribute with the current value of the property. It returns `true` when the default value does not match the current value of the property. If this method cannot find a <xref:System.ComponentModel.DefaultValueAttribute>, it looks for a `ShouldSerializeMyProperty` method. If it finds a `ShouldSerializeMyProperty` method, it returns what `ShouldSerializeMyProperty` returns. If this method cannot find a `ShouldSerializeMyProperty` method, it looks for a `ResetMyProperty` method. If it finds a `ResetMyProperty` method, it returns `true`. If this method cannot find a <xref:System.ComponentModel.DefaultValueAttribute>, a `ShouldSerializeMyProperty` method, or a `ResetMyProperty` method, then it returns `false`.\n  syntax:\n    content: public override bool CanResetValue (object component);\n    parameters:\n    - id: component\n      type: System.Object\n      description: The component to test for reset capability.\n    return:\n      type: System.Boolean\n      description: '`true` if resetting the component changes the value of the component; otherwise, `false`.'\n  overload: System.ComponentModel.TypeConverter.SimplePropertyDescriptor.CanResetValue*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter+SimplePropertyDescriptor.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.TypeConverter.SimplePropertyDescriptor.ComponentType\n  commentId: P:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.ComponentType\n  id: ComponentType\n  parent: System.ComponentModel.TypeConverter.SimplePropertyDescriptor\n  langs:\n  - csharp\n  name: ComponentType\n  nameWithType: TypeConverter.SimplePropertyDescriptor.ComponentType\n  fullName: TypeConverter.SimplePropertyDescriptor.ComponentType\n  type: Property\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Gets the type of component to which this property description binds.\n  syntax:\n    content: public override Type ComponentType { get; }\n    return:\n      type: System.Type\n      description: A <xref href=\"System.Type\"></xref> that represents the type of component to which this property binds.\n  overload: System.ComponentModel.TypeConverter.SimplePropertyDescriptor.ComponentType*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter+SimplePropertyDescriptor.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.TypeConverter.SimplePropertyDescriptor.IsReadOnly\n  commentId: P:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.IsReadOnly\n  id: IsReadOnly\n  parent: System.ComponentModel.TypeConverter.SimplePropertyDescriptor\n  langs:\n  - csharp\n  name: IsReadOnly\n  nameWithType: TypeConverter.SimplePropertyDescriptor.IsReadOnly\n  fullName: TypeConverter.SimplePropertyDescriptor.IsReadOnly\n  type: Property\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Gets a value indicating whether this property is read-only.\n  syntax:\n    content: public override bool IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the property is read-only; `false` if the property is read/write.'\n  overload: System.ComponentModel.TypeConverter.SimplePropertyDescriptor.IsReadOnly*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter+SimplePropertyDescriptor.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.TypeConverter.SimplePropertyDescriptor.PropertyType\n  commentId: P:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.PropertyType\n  id: PropertyType\n  parent: System.ComponentModel.TypeConverter.SimplePropertyDescriptor\n  langs:\n  - csharp\n  name: PropertyType\n  nameWithType: TypeConverter.SimplePropertyDescriptor.PropertyType\n  fullName: TypeConverter.SimplePropertyDescriptor.PropertyType\n  type: Property\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Gets the type of the property.\n  syntax:\n    content: public override Type PropertyType { get; }\n    return:\n      type: System.Type\n      description: A <xref href=\"System.Type\"></xref> that represents the type of the property.\n  overload: System.ComponentModel.TypeConverter.SimplePropertyDescriptor.PropertyType*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter+SimplePropertyDescriptor.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.TypeConverter.SimplePropertyDescriptor.ResetValue(System.Object)\n  commentId: M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.ResetValue(System.Object)\n  id: ResetValue(System.Object)\n  parent: System.ComponentModel.TypeConverter.SimplePropertyDescriptor\n  langs:\n  - csharp\n  name: ResetValue(Object)\n  nameWithType: TypeConverter.SimplePropertyDescriptor.ResetValue(Object)\n  fullName: TypeConverter.SimplePropertyDescriptor.ResetValue(Object)\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Resets the value for this property of the component.\n  remarks: This method looks for a <xref:System.ComponentModel.DefaultValueAttribute>. If it finds one, it sets the value of the property to the value specified in the attribute. If this method cannot find a <xref:System.ComponentModel.DefaultValueAttribute>, it looks for a `ResetMyProperty` method. If it finds a `ResetMyProperty` method, it invokes it. If this method cannot find a <xref:System.ComponentModel.DefaultValueAttribute> or a `ResetMyProperty` method, then it does not perform an operation.\n  syntax:\n    content: public override void ResetValue (object component);\n    parameters:\n    - id: component\n      type: System.Object\n      description: The component with the property value to be reset.\n  overload: System.ComponentModel.TypeConverter.SimplePropertyDescriptor.ResetValue*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter+SimplePropertyDescriptor.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.TypeConverter.SimplePropertyDescriptor.ShouldSerializeValue(System.Object)\n  commentId: M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.ShouldSerializeValue(System.Object)\n  id: ShouldSerializeValue(System.Object)\n  parent: System.ComponentModel.TypeConverter.SimplePropertyDescriptor\n  langs:\n  - csharp\n  name: ShouldSerializeValue(Object)\n  nameWithType: TypeConverter.SimplePropertyDescriptor.ShouldSerializeValue(Object)\n  fullName: TypeConverter.SimplePropertyDescriptor.ShouldSerializeValue(Object)\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Returns whether the value of this property can persist.\n  remarks: As implemented in this class, this method returns `false`.\n  syntax:\n    content: public override bool ShouldSerializeValue (object component);\n    parameters:\n    - id: component\n      type: System.Object\n      description: The component with the property that is to be examined for persistence.\n    return:\n      type: System.Boolean\n      description: '`true` if the value of the property can persist; otherwise, `false`.'\n  overload: System.ComponentModel.TypeConverter.SimplePropertyDescriptor.ShouldSerializeValue*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter+SimplePropertyDescriptor.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.ComponentModel.PropertyDescriptor\n  parent: System.ComponentModel\n  isExternal: false\n  name: PropertyDescriptor\n  nameWithType: PropertyDescriptor\n  fullName: System.ComponentModel.PropertyDescriptor\n- uid: System.ComponentModel.TypeConverter.SimplePropertyDescriptor.#ctor(System.Type,System.String,System.Type)\n  parent: System.ComponentModel.TypeConverter.SimplePropertyDescriptor\n  isExternal: false\n  name: TypeConverter.SimplePropertyDescriptor(Type, String, Type)\n  nameWithType: TypeConverter.SimplePropertyDescriptor.TypeConverter.SimplePropertyDescriptor(Type, String, Type)\n  fullName: TypeConverter.SimplePropertyDescriptor.TypeConverter.SimplePropertyDescriptor(Type, String, Type)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ComponentModel.TypeConverter.SimplePropertyDescriptor.#ctor(System.Type,System.String,System.Type,System.Attribute[])\n  parent: System.ComponentModel.TypeConverter.SimplePropertyDescriptor\n  isExternal: false\n  name: TypeConverter.SimplePropertyDescriptor(Type, String, Type, Attribute[])\n  nameWithType: TypeConverter.SimplePropertyDescriptor.TypeConverter.SimplePropertyDescriptor(Type, String, Type, Attribute[])\n  fullName: TypeConverter.SimplePropertyDescriptor.TypeConverter.SimplePropertyDescriptor(Type, String, Type, Attribute[])\n- uid: System.Attribute\n  name: Attribute\n  nameWithType: Attribute\n  fullName: System.Attribute\n- uid: System.Attribute[]\n  parent: System\n  isExternal: false\n  name: Attribute[]\n  nameWithType: Attribute[]\n  fullName: System.Attribute[]\n  spec.csharp:\n  - uid: System.Attribute\n    name: Attribute\n    nameWithType: Attribute\n    fullName: System.Attribute\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.ComponentModel.TypeConverter.SimplePropertyDescriptor.CanResetValue(System.Object)\n  parent: System.ComponentModel.TypeConverter.SimplePropertyDescriptor\n  isExternal: false\n  name: CanResetValue(Object)\n  nameWithType: TypeConverter.SimplePropertyDescriptor.CanResetValue(Object)\n  fullName: TypeConverter.SimplePropertyDescriptor.CanResetValue(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ComponentModel.TypeConverter.SimplePropertyDescriptor.ComponentType\n  parent: System.ComponentModel.TypeConverter.SimplePropertyDescriptor\n  isExternal: false\n  name: ComponentType\n  nameWithType: TypeConverter.SimplePropertyDescriptor.ComponentType\n  fullName: TypeConverter.SimplePropertyDescriptor.ComponentType\n- uid: System.ComponentModel.TypeConverter.SimplePropertyDescriptor.IsReadOnly\n  parent: System.ComponentModel.TypeConverter.SimplePropertyDescriptor\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: TypeConverter.SimplePropertyDescriptor.IsReadOnly\n  fullName: TypeConverter.SimplePropertyDescriptor.IsReadOnly\n- uid: System.ComponentModel.TypeConverter.SimplePropertyDescriptor.PropertyType\n  parent: System.ComponentModel.TypeConverter.SimplePropertyDescriptor\n  isExternal: false\n  name: PropertyType\n  nameWithType: TypeConverter.SimplePropertyDescriptor.PropertyType\n  fullName: TypeConverter.SimplePropertyDescriptor.PropertyType\n- uid: System.ComponentModel.TypeConverter.SimplePropertyDescriptor.ResetValue(System.Object)\n  parent: System.ComponentModel.TypeConverter.SimplePropertyDescriptor\n  isExternal: false\n  name: ResetValue(Object)\n  nameWithType: TypeConverter.SimplePropertyDescriptor.ResetValue(Object)\n  fullName: TypeConverter.SimplePropertyDescriptor.ResetValue(Object)\n- uid: System.ComponentModel.TypeConverter.SimplePropertyDescriptor.ShouldSerializeValue(System.Object)\n  parent: System.ComponentModel.TypeConverter.SimplePropertyDescriptor\n  isExternal: false\n  name: ShouldSerializeValue(Object)\n  nameWithType: TypeConverter.SimplePropertyDescriptor.ShouldSerializeValue(Object)\n  fullName: TypeConverter.SimplePropertyDescriptor.ShouldSerializeValue(Object)\n- uid: System.ComponentModel.TypeConverter.SimplePropertyDescriptor.#ctor*\n  parent: System.ComponentModel.TypeConverter.SimplePropertyDescriptor\n  isExternal: false\n  name: TypeConverter.SimplePropertyDescriptor\n  nameWithType: TypeConverter.SimplePropertyDescriptor.TypeConverter.SimplePropertyDescriptor\n  fullName: TypeConverter.SimplePropertyDescriptor.TypeConverter.SimplePropertyDescriptor\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter+SimplePropertyDescriptor.xml\n- uid: System.ComponentModel.TypeConverter.SimplePropertyDescriptor.CanResetValue*\n  parent: System.ComponentModel.TypeConverter.SimplePropertyDescriptor\n  isExternal: false\n  name: CanResetValue\n  nameWithType: TypeConverter.SimplePropertyDescriptor.CanResetValue\n  fullName: TypeConverter.SimplePropertyDescriptor.CanResetValue\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter+SimplePropertyDescriptor.xml\n- uid: System.ComponentModel.TypeConverter.SimplePropertyDescriptor.ComponentType*\n  parent: System.ComponentModel.TypeConverter.SimplePropertyDescriptor\n  isExternal: false\n  name: ComponentType\n  nameWithType: TypeConverter.SimplePropertyDescriptor.ComponentType\n  fullName: TypeConverter.SimplePropertyDescriptor.ComponentType\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter+SimplePropertyDescriptor.xml\n- uid: System.ComponentModel.TypeConverter.SimplePropertyDescriptor.IsReadOnly*\n  parent: System.ComponentModel.TypeConverter.SimplePropertyDescriptor\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: TypeConverter.SimplePropertyDescriptor.IsReadOnly\n  fullName: TypeConverter.SimplePropertyDescriptor.IsReadOnly\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter+SimplePropertyDescriptor.xml\n- uid: System.ComponentModel.TypeConverter.SimplePropertyDescriptor.PropertyType*\n  parent: System.ComponentModel.TypeConverter.SimplePropertyDescriptor\n  isExternal: false\n  name: PropertyType\n  nameWithType: TypeConverter.SimplePropertyDescriptor.PropertyType\n  fullName: TypeConverter.SimplePropertyDescriptor.PropertyType\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter+SimplePropertyDescriptor.xml\n- uid: System.ComponentModel.TypeConverter.SimplePropertyDescriptor.ResetValue*\n  parent: System.ComponentModel.TypeConverter.SimplePropertyDescriptor\n  isExternal: false\n  name: ResetValue\n  nameWithType: TypeConverter.SimplePropertyDescriptor.ResetValue\n  fullName: TypeConverter.SimplePropertyDescriptor.ResetValue\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter+SimplePropertyDescriptor.xml\n- uid: System.ComponentModel.TypeConverter.SimplePropertyDescriptor.ShouldSerializeValue*\n  parent: System.ComponentModel.TypeConverter.SimplePropertyDescriptor\n  isExternal: false\n  name: ShouldSerializeValue\n  nameWithType: TypeConverter.SimplePropertyDescriptor.ShouldSerializeValue\n  fullName: TypeConverter.SimplePropertyDescriptor.ShouldSerializeValue\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/TypeConverter+SimplePropertyDescriptor.xml\n- uid: System.ComponentModel.PropertyDescriptor.Equals(System.Object)\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: PropertyDescriptor.Equals(Object)\n  fullName: PropertyDescriptor.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.ComponentModel.PropertyDescriptor.GetHashCode\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: PropertyDescriptor.GetHashCode()\n  fullName: PropertyDescriptor.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.ComponentModel.MemberDescriptor.AttributeArray\n  parent: System.ComponentModel.MemberDescriptor\n  isExternal: false\n  name: AttributeArray\n  nameWithType: MemberDescriptor.AttributeArray\n  fullName: MemberDescriptor.AttributeArray\n- uid: System.ComponentModel.MemberDescriptor.Attributes\n  parent: System.ComponentModel.MemberDescriptor\n  isExternal: false\n  name: Attributes\n  nameWithType: MemberDescriptor.Attributes\n  fullName: MemberDescriptor.Attributes\n- uid: System.ComponentModel.MemberDescriptor.Category\n  parent: System.ComponentModel.MemberDescriptor\n  isExternal: false\n  name: Category\n  nameWithType: MemberDescriptor.Category\n  fullName: MemberDescriptor.Category\n- uid: System.ComponentModel.MemberDescriptor.CreateAttributeCollection\n  parent: System.ComponentModel.MemberDescriptor\n  isExternal: false\n  name: CreateAttributeCollection()\n  nameWithType: MemberDescriptor.CreateAttributeCollection()\n  fullName: MemberDescriptor.CreateAttributeCollection()\n- uid: System.ComponentModel.MemberDescriptor.Description\n  parent: System.ComponentModel.MemberDescriptor\n  isExternal: false\n  name: Description\n  nameWithType: MemberDescriptor.Description\n  fullName: MemberDescriptor.Description\n- uid: System.ComponentModel.MemberDescriptor.DesignTimeOnly\n  parent: System.ComponentModel.MemberDescriptor\n  isExternal: false\n  name: DesignTimeOnly\n  nameWithType: MemberDescriptor.DesignTimeOnly\n  fullName: MemberDescriptor.DesignTimeOnly\n- uid: System.ComponentModel.MemberDescriptor.DisplayName\n  parent: System.ComponentModel.MemberDescriptor\n  isExternal: false\n  name: DisplayName\n  nameWithType: MemberDescriptor.DisplayName\n  fullName: MemberDescriptor.DisplayName\n- uid: System.ComponentModel.PropertyDescriptor.FillAttributes(System.Collections.IList)\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: FillAttributes(IList)\n  nameWithType: PropertyDescriptor.FillAttributes(IList)\n  fullName: PropertyDescriptor.FillAttributes(IList)\n- uid: System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type)\n  parent: System.ComponentModel.MemberDescriptor\n  isExternal: false\n  name: FindMethod(Type, String, Type[], Type)\n  nameWithType: MemberDescriptor.FindMethod(Type, String, Type[], Type)\n  fullName: MemberDescriptor.FindMethod(Type, String, Type[], Type)\n- uid: System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type,System.Boolean)\n  parent: System.ComponentModel.MemberDescriptor\n  isExternal: false\n  name: FindMethod(Type, String, Type[], Type, Boolean)\n  nameWithType: MemberDescriptor.FindMethod(Type, String, Type[], Type, Boolean)\n  fullName: MemberDescriptor.FindMethod(Type, String, Type[], Type, Boolean)\n- uid: System.ComponentModel.PropertyDescriptor.GetInvocationTarget(System.Type,System.Object)\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: GetInvocationTarget(Type, Object)\n  nameWithType: PropertyDescriptor.GetInvocationTarget(Type, Object)\n  fullName: PropertyDescriptor.GetInvocationTarget(Type, Object)\n- uid: System.ComponentModel.MemberDescriptor.GetInvokee(System.Type,System.Object)\n  parent: System.ComponentModel.MemberDescriptor\n  isExternal: false\n  name: GetInvokee(Type, Object)\n  nameWithType: MemberDescriptor.GetInvokee(Type, Object)\n  fullName: MemberDescriptor.GetInvokee(Type, Object)\n- uid: System.ComponentModel.MemberDescriptor.GetSite(System.Object)\n  parent: System.ComponentModel.MemberDescriptor\n  isExternal: false\n  name: GetSite(Object)\n  nameWithType: MemberDescriptor.GetSite(Object)\n  fullName: MemberDescriptor.GetSite(Object)\n- uid: System.ComponentModel.MemberDescriptor.IsBrowsable\n  parent: System.ComponentModel.MemberDescriptor\n  isExternal: false\n  name: IsBrowsable\n  nameWithType: MemberDescriptor.IsBrowsable\n  fullName: MemberDescriptor.IsBrowsable\n- uid: System.ComponentModel.MemberDescriptor.Name\n  parent: System.ComponentModel.MemberDescriptor\n  isExternal: false\n  name: Name\n  nameWithType: MemberDescriptor.Name\n  fullName: MemberDescriptor.Name\n- uid: System.ComponentModel.MemberDescriptor.NameHashCode\n  parent: System.ComponentModel.MemberDescriptor\n  isExternal: false\n  name: NameHashCode\n  nameWithType: MemberDescriptor.NameHashCode\n  fullName: MemberDescriptor.NameHashCode\n- uid: System.ComponentModel.PropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: AddValueChanged(Object, EventHandler)\n  nameWithType: PropertyDescriptor.AddValueChanged(Object, EventHandler)\n  fullName: PropertyDescriptor.AddValueChanged(Object, EventHandler)\n- uid: System.ComponentModel.PropertyDescriptor.Converter\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: Converter\n  nameWithType: PropertyDescriptor.Converter\n  fullName: PropertyDescriptor.Converter\n- uid: System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: CreateInstance(Type)\n  nameWithType: PropertyDescriptor.CreateInstance(Type)\n  fullName: PropertyDescriptor.CreateInstance(Type)\n- uid: System.ComponentModel.PropertyDescriptor.GetChildProperties\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: GetChildProperties()\n  nameWithType: PropertyDescriptor.GetChildProperties()\n  fullName: PropertyDescriptor.GetChildProperties()\n- uid: System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: GetChildProperties(Attribute[])\n  nameWithType: PropertyDescriptor.GetChildProperties(Attribute[])\n  fullName: PropertyDescriptor.GetChildProperties(Attribute[])\n- uid: System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: GetChildProperties(Object)\n  nameWithType: PropertyDescriptor.GetChildProperties(Object)\n  fullName: PropertyDescriptor.GetChildProperties(Object)\n- uid: System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: GetChildProperties(Object, Attribute[])\n  nameWithType: PropertyDescriptor.GetChildProperties(Object, Attribute[])\n  fullName: PropertyDescriptor.GetChildProperties(Object, Attribute[])\n- uid: System.ComponentModel.PropertyDescriptor.GetEditor(System.Type)\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: GetEditor(Type)\n  nameWithType: PropertyDescriptor.GetEditor(Type)\n  fullName: PropertyDescriptor.GetEditor(Type)\n- uid: System.ComponentModel.PropertyDescriptor.GetTypeFromName(System.String)\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: GetTypeFromName(String)\n  nameWithType: PropertyDescriptor.GetTypeFromName(String)\n  fullName: PropertyDescriptor.GetTypeFromName(String)\n- uid: System.ComponentModel.PropertyDescriptor.GetValue(System.Object)\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: GetValue(Object)\n  nameWithType: PropertyDescriptor.GetValue(Object)\n  fullName: PropertyDescriptor.GetValue(Object)\n- uid: System.ComponentModel.PropertyDescriptor.GetValueChangedHandler(System.Object)\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: GetValueChangedHandler(Object)\n  nameWithType: PropertyDescriptor.GetValueChangedHandler(Object)\n  fullName: PropertyDescriptor.GetValueChangedHandler(Object)\n- uid: System.ComponentModel.PropertyDescriptor.IsLocalizable\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: IsLocalizable\n  nameWithType: PropertyDescriptor.IsLocalizable\n  fullName: PropertyDescriptor.IsLocalizable\n- uid: System.ComponentModel.PropertyDescriptor.OnValueChanged(System.Object,System.EventArgs)\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: OnValueChanged(Object, EventArgs)\n  nameWithType: PropertyDescriptor.OnValueChanged(Object, EventArgs)\n  fullName: PropertyDescriptor.OnValueChanged(Object, EventArgs)\n- uid: System.ComponentModel.PropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: RemoveValueChanged(Object, EventHandler)\n  nameWithType: PropertyDescriptor.RemoveValueChanged(Object, EventHandler)\n  fullName: PropertyDescriptor.RemoveValueChanged(Object, EventHandler)\n- uid: System.ComponentModel.PropertyDescriptor.SerializationVisibility\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: SerializationVisibility\n  nameWithType: PropertyDescriptor.SerializationVisibility\n  fullName: PropertyDescriptor.SerializationVisibility\n- uid: System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: SetValue(Object, Object)\n  nameWithType: PropertyDescriptor.SetValue(Object, Object)\n  fullName: PropertyDescriptor.SetValue(Object, Object)\n- uid: System.ComponentModel.PropertyDescriptor.SupportsChangeEvents\n  parent: System.ComponentModel.PropertyDescriptor\n  isExternal: false\n  name: SupportsChangeEvents\n  nameWithType: PropertyDescriptor.SupportsChangeEvents\n  fullName: PropertyDescriptor.SupportsChangeEvents\n"}