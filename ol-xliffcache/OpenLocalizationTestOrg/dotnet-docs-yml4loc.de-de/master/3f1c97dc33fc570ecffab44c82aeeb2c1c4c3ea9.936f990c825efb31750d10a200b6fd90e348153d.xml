{"nodes":[{"content":"Converts <xref href=\"System.Drawing.Font\"></xref> objects from one data type to another.","nodes":[{"pos":[0,88],"content":"Converts <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Font\"&gt;&lt;/xref&gt;</ph> objects from one data type to another.","source":"Converts <xref href=\"System.Drawing.Font\"></xref> objects from one data type to another."}],"pos":[1383,1472],"yaml":true},{"content":"A type converter is used to convert values between data types. A type converter also supports property configuration at design time by providing text-to-value conversion or a list of values that users can select from. Access the <xref:System.Drawing.FontConverter> class through the <xref:System.ComponentModel.TypeDescriptor> class by calling the <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> method.","nodes":[{"pos":[0,415],"content":"A type converter is used to convert values between data types. A type converter also supports property configuration at design time by providing text-to-value conversion or a list of values that users can select from. Access the <xref:System.Drawing.FontConverter> class through the <xref:System.ComponentModel.TypeDescriptor> class by calling the <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> method.","nodes":[{"content":"A type converter is used to convert values between data types. A type converter also supports property configuration at design time by providing text-to-value conversion or a list of values that users can select from. Access the <xref:System.Drawing.FontConverter> class through the <xref:System.ComponentModel.TypeDescriptor> class by calling the <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> method.","pos":[0,415],"nodes":[{"content":"A type converter is used to convert values between data types.","pos":[0,62]},{"content":"A type converter also supports property configuration at design time by providing text-to-value conversion or a list of values that users can select from.","pos":[63,217]},{"content":"Access the <ph id=\"ph1\">&lt;xref:System.Drawing.FontConverter&gt;</ph> class through the <ph id=\"ph2\">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> class by calling the <ph id=\"ph3\">&lt;xref:System.ComponentModel.TypeDescriptor.GetConverter%2A&gt;</ph> method.","pos":[218,415],"source":" Access the <xref:System.Drawing.FontConverter> class through the <xref:System.ComponentModel.TypeDescriptor> class by calling the <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> method."}]}]}],"pos":[1483,1899],"yaml":true,"extradata":"MT"},{"content":"Initializes a new <xref href=\"System.Drawing.FontConverter\"></xref> object.","nodes":[{"pos":[0,75],"content":"Initializes a new <ph id=\"ph1\">&lt;xref href=\"System.Drawing.FontConverter\"&gt;&lt;/xref&gt;</ph> object.","source":"Initializes a new <xref href=\"System.Drawing.FontConverter\"></xref> object."}],"pos":[6861,6937],"yaml":true},{"content":"You should access a <xref:System.Drawing.FontConverter> object through the <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A?displayProperty=fullName> method.","nodes":[{"pos":[0,167],"content":"You should access a <xref:System.Drawing.FontConverter> object through the <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A?displayProperty=fullName> method.","nodes":[{"content":"You should access a <ph id=\"ph1\">&lt;xref:System.Drawing.FontConverter&gt;</ph> object through the <ph id=\"ph2\">&lt;xref:System.ComponentModel.TypeDescriptor.GetConverter%2A?displayProperty=fullName&gt;</ph> method.","pos":[0,167],"source":"You should access a <xref:System.Drawing.FontConverter> object through the <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A?displayProperty=fullName> method."}]}],"pos":[6948,7116],"yaml":true,"extradata":"MT"},{"content":"Determines whether this converter can convert an object in the specified source type to the native type of the converter.","nodes":[{"pos":[0,121],"content":"Determines whether this converter can convert an object in the specified source type to the native type of the converter.","nodes":[{"content":"Determines whether this converter can convert an object in the specified source type to the native type of the converter.","pos":[0,121]}]}],"pos":[8426,8548],"yaml":true},{"content":"A formatter context. This object can be used to get additional information about the environment this converter is being called from. This may be `null`, so you should always check. Also, properties on the context object may also return `null`.","nodes":[{"pos":[0,244],"content":"A formatter context. This object can be used to get additional information about the environment this converter is being called from. This may be `null`, so you should always check. Also, properties on the context object may also return `null`.","nodes":[{"content":"A formatter context.","pos":[0,20]},{"content":"This object can be used to get additional information about the environment this converter is being called from.","pos":[21,133]},{"content":"This may be <ph id=\"ph1\">`null`</ph>, so you should always check.","pos":[134,181],"source":" This may be `null`, so you should always check."},{"content":"Also, properties on the context object may also return <ph id=\"ph1\">`null`</ph>.","pos":[182,244],"source":" Also, properties on the context object may also return `null`."}]}],"pos":[8790,9035],"yaml":true},{"content":"The type you want to convert from.","nodes":[{"pos":[0,34],"content":"The type you want to convert from.","nodes":[{"content":"The type you want to convert from.","pos":[0,34]}]}],"pos":[9099,9134],"yaml":true},{"content":"This method returns `true` if this object can perform the conversion.","nodes":[{"pos":[0,69],"content":"This method returns <ph id=\"ph1\">`true`</ph> if this object can perform the conversion.","source":"This method returns `true` if this object can perform the conversion."}],"pos":[9192,9262],"yaml":true},{"content":"Gets a value indicating whether this converter can convert an object to the given destination type using the context.","nodes":[{"pos":[0,117],"content":"Gets a value indicating whether this converter can convert an object to the given destination type using the context.","nodes":[{"content":"Gets a value indicating whether this converter can convert an object to the given destination type using the context.","pos":[0,117]}]}],"pos":[10502,10620],"yaml":true},{"content":"The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`.","nodes":[{"pos":[0,224],"content":"The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`.","nodes":[{"content":"The <ph id=\"ph1\">`context`</ph> parameter can be used to extract additional information about the environment this converter is being invoked from.","pos":[0,129],"source":"The `context` parameter can be used to extract additional information about the environment this converter is being invoked from."},{"content":"This can be <ph id=\"ph1\">`null`</ph>, so always check.","pos":[130,166],"source":" This can be `null`, so always check."},{"content":"Also, properties on the context object can return <ph id=\"ph1\">`null`</ph>.","pos":[167,224],"source":" Also, properties on the context object can return `null`."}]}],"pos":[10631,10856],"yaml":true,"extradata":"MT"},{"content":"An `ITypeDescriptorContext` object that provides a format context.","nodes":[{"pos":[0,66],"content":"An <ph id=\"ph1\">`ITypeDescriptorContext`</ph> object that provides a format context.","source":"An `ITypeDescriptorContext` object that provides a format context."}],"pos":[11101,11168],"yaml":true},{"content":"A <xref href=\"System.Type\"></xref> object that represents the type you want to convert to.","nodes":[{"pos":[0,90],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> object that represents the type you want to convert to.","source":"A <xref href=\"System.Type\"></xref> object that represents the type you want to convert to."}],"pos":[11237,11328],"yaml":true},{"content":"This method returns `true` if this converter can perform the conversion; otherwise, `false`.","nodes":[{"pos":[0,92],"content":"This method returns <ph id=\"ph1\">`true`</ph> if this converter can perform the conversion; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"This method returns `true` if this converter can perform the conversion; otherwise, `false`."}],"pos":[11386,11479],"yaml":true},{"content":"Converts the specified object to the native type of the converter.","nodes":[{"pos":[0,66],"content":"Converts the specified object to the native type of the converter.","nodes":[{"content":"Converts the specified object to the native type of the converter.","pos":[0,66]}]}],"pos":[12861,12928],"yaml":true},{"content":"A formatter context. This object can be used to get additional information about the environment this converter is being called from. This may be `null`, so you should always check. Also, properties on the context object may also return `null`.","nodes":[{"pos":[0,244],"content":"A formatter context. This object can be used to get additional information about the environment this converter is being called from. This may be `null`, so you should always check. Also, properties on the context object may also return `null`.","nodes":[{"content":"A formatter context.","pos":[0,20]},{"content":"This object can be used to get additional information about the environment this converter is being called from.","pos":[21,133]},{"content":"This may be <ph id=\"ph1\">`null`</ph>, so you should always check.","pos":[134,181],"source":" This may be `null`, so you should always check."},{"content":"Also, properties on the context object may also return <ph id=\"ph1\">`null`</ph>.","pos":[182,244],"source":" Also, properties on the context object may also return `null`."}]}],"pos":[13208,13453],"yaml":true},{"content":"A `CultureInfo` object that specifies the culture used to represent the font.","nodes":[{"pos":[0,77],"content":"A <ph id=\"ph1\">`CultureInfo`</ph> object that specifies the culture used to represent the font.","source":"A `CultureInfo` object that specifies the culture used to represent the font."}],"pos":[13535,13613],"yaml":true},{"content":"The object to convert.","nodes":[{"pos":[0,22],"content":"The object to convert.","nodes":[{"content":"The object to convert.","pos":[0,22]}]}],"pos":[13674,13697],"yaml":true},{"content":"The converted object.","nodes":[{"pos":[0,21],"content":"The converted object.","nodes":[{"content":"The converted object.","pos":[0,21]}]}],"pos":[13754,13776],"yaml":true},{"content":"The conversion could not be performed.","nodes":[{"pos":[0,38],"content":"The conversion could not be performed.","nodes":[{"content":"The conversion could not be performed.","pos":[0,38]}]}],"pos":[13946,13985],"yaml":true},{"content":"Converts the specified object to another type.","nodes":[{"pos":[0,46],"content":"Converts the specified object to another type.","nodes":[{"content":"Converts the specified object to another type.","pos":[0,46]}]}],"pos":[15337,15384],"yaml":true},{"content":"The most common type conversion is to and from a string type. The default implementation calls the <xref:System.Object.ToString%2A> method of the object if the object is valid and if the destination type is string.","nodes":[{"pos":[0,214],"content":"The most common type conversion is to and from a string type. The default implementation calls the <xref:System.Object.ToString%2A> method of the object if the object is valid and if the destination type is string.","nodes":[{"content":"The most common type conversion is to and from a string type. The default implementation calls the <xref:System.Object.ToString%2A> method of the object if the object is valid and if the destination type is string.","pos":[0,214],"nodes":[{"content":"The most common type conversion is to and from a string type.","pos":[0,61]},{"content":"The default implementation calls the <ph id=\"ph1\">&lt;xref:System.Object.ToString%2A&gt;</ph> method of the object if the object is valid and if the destination type is string.","pos":[62,214],"source":" The default implementation calls the <xref:System.Object.ToString%2A> method of the object if the object is valid and if the destination type is string."}]}]}],"pos":[15395,15610],"yaml":true,"extradata":"MT"},{"content":"A formatter context. This object can be used to get additional information about the environment this converter is being called from. This may be `null`, so you should always check. Also, properties on the context object may also return `null`.","nodes":[{"pos":[0,244],"content":"A formatter context. This object can be used to get additional information about the environment this converter is being called from. This may be `null`, so you should always check. Also, properties on the context object may also return `null`.","nodes":[{"content":"A formatter context.","pos":[0,20]},{"content":"This object can be used to get additional information about the environment this converter is being called from.","pos":[21,133]},{"content":"This may be <ph id=\"ph1\">`null`</ph>, so you should always check.","pos":[134,181],"source":" This may be `null`, so you should always check."},{"content":"Also, properties on the context object may also return <ph id=\"ph1\">`null`</ph>.","pos":[182,244],"source":" Also, properties on the context object may also return `null`."}]}],"pos":[15910,16155],"yaml":true},{"content":"A <xref href=\"System.Globalization.CultureInfo\"></xref> object that specifies the culture used to represent the object.","nodes":[{"pos":[0,119],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Globalization.CultureInfo\"&gt;&lt;/xref&gt;</ph> object that specifies the culture used to represent the object.","source":"A <xref href=\"System.Globalization.CultureInfo\"></xref> object that specifies the culture used to represent the object."}],"pos":[16237,16357],"yaml":true},{"content":"The object to convert.","nodes":[{"pos":[0,22],"content":"The object to convert.","nodes":[{"content":"The object to convert.","pos":[0,22]}]}],"pos":[16418,16441],"yaml":true},{"content":"The data type to convert the object to.","nodes":[{"pos":[0,39],"content":"The data type to convert the object to.","nodes":[{"content":"The data type to convert the object to.","pos":[0,39]}]}],"pos":[16510,16550],"yaml":true},{"content":"The converted object.","nodes":[{"pos":[0,21],"content":"The converted object.","nodes":[{"content":"The converted object.","pos":[0,21]}]}],"pos":[16607,16629],"yaml":true},{"content":"The conversion was not successful.","nodes":[{"pos":[0,34],"content":"The conversion was not successful.","nodes":[{"content":"The conversion was not successful.","pos":[0,34]}]}],"pos":[16797,16832],"yaml":true},{"content":"Creates an object of this type by using a specified set of property values for the object.","nodes":[{"pos":[0,90],"content":"Creates an object of this type by using a specified set of property values for the object.","nodes":[{"content":"Creates an object of this type by using a specified set of property values for the object.","pos":[0,90]}]}],"pos":[18088,18179],"yaml":true},{"content":"A type descriptor through which additional context can be provided.","nodes":[{"pos":[0,67],"content":"A type descriptor through which additional context can be provided.","nodes":[{"content":"A type descriptor through which additional context can be provided.","pos":[0,67]}]}],"pos":[18453,18521],"yaml":true},{"content":"A dictionary of new property values. The dictionary contains a series of name-value pairs, one for each property returned from the <xref href=\"System.Drawing.FontConverter.GetProperties*\"></xref> method.","nodes":[{"pos":[0,203],"content":"A dictionary of new property values. The dictionary contains a series of name-value pairs, one for each property returned from the <xref href=\"System.Drawing.FontConverter.GetProperties*\"></xref> method.","nodes":[{"content":"A dictionary of new property values.","pos":[0,36]},{"content":"The dictionary contains a series of name-value pairs, one for each property returned from the <ph id=\"ph1\">&lt;xref href=\"System.Drawing.FontConverter.GetProperties*\"&gt;&lt;/xref&gt;</ph> method.","pos":[37,203],"source":" The dictionary contains a series of name-value pairs, one for each property returned from the <xref href=\"System.Drawing.FontConverter.GetProperties*\"></xref> method."}]}],"pos":[18608,18812],"yaml":true},{"content":"The newly created object, or `null` if the object could not be created. The default implementation returns `null`.  \n  \n <xref href=\"System.Drawing.FontConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\"></xref> useful for creating non-changeable objects that have changeable properties.","nodes":[{"pos":[0,114],"content":"The newly created object, or `null` if the object could not be created. The default implementation returns `null`.","nodes":[{"content":"The newly created object, or <ph id=\"ph1\">`null`</ph> if the object could not be created.","pos":[0,71],"source":"The newly created object, or `null` if the object could not be created."},{"content":"The default implementation returns <ph id=\"ph1\">`null`</ph>.","pos":[72,114],"source":" The default implementation returns `null`."}]},{"pos":[121,338],"content":"<ph id=\"ph1\">&lt;xref href=\"System.Drawing.FontConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\"&gt;&lt;/xref&gt;</ph> useful for creating non-changeable objects that have changeable properties.","source":"<xref href=\"System.Drawing.FontConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\"></xref> useful for creating non-changeable objects that have changeable properties."}],"pos":[18869,19214],"yaml":true},{"content":"Allows the <xref href=\"System.Drawing.FontConverter\"></xref> to attempt to free resources and perform other cleanup operations before the <xref href=\"System.Drawing.FontConverter\"></xref> is reclaimed by garbage collection.","nodes":[{"pos":[0,223],"content":"Allows the <ph id=\"ph1\">&lt;xref href=\"System.Drawing.FontConverter\"&gt;&lt;/xref&gt;</ph> to attempt to free resources and perform other cleanup operations before the <ph id=\"ph2\">&lt;xref href=\"System.Drawing.FontConverter\"&gt;&lt;/xref&gt;</ph> is reclaimed by garbage collection.","source":"Allows the <xref href=\"System.Drawing.FontConverter\"></xref> to attempt to free resources and perform other cleanup operations before the <xref href=\"System.Drawing.FontConverter\"></xref> is reclaimed by garbage collection."}],"pos":[20172,20396],"yaml":true},{"content":"Determines whether changing a value on this object should require a call to the <xref href=\"System.Drawing.FontConverter.CreateInstance*\"></xref> method to create a new value.","nodes":[{"pos":[0,175],"content":"Determines whether changing a value on this object should require a call to the <ph id=\"ph1\">&lt;xref href=\"System.Drawing.FontConverter.CreateInstance*\"&gt;&lt;/xref&gt;</ph> method to create a new value.","source":"Determines whether changing a value on this object should require a call to the <xref href=\"System.Drawing.FontConverter.CreateInstance*\"></xref> method to create a new value."}],"pos":[21721,21897],"yaml":true},{"content":"A type descriptor through which additional context can be provided.","nodes":[{"pos":[0,67],"content":"A type descriptor through which additional context can be provided.","nodes":[{"content":"A type descriptor through which additional context can be provided.","pos":[0,67]}]}],"pos":[22134,22202],"yaml":true},{"content":"This method returns `true` if the `CreateInstance` object should be called when a change is made to one or more properties of this object; otherwise, `false`.","nodes":[{"pos":[0,158],"content":"This method returns <ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">`CreateInstance`</ph> object should be called when a change is made to one or more properties of this object; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"This method returns `true` if the `CreateInstance` object should be called when a change is made to one or more properties of this object; otherwise, `false`."}],"pos":[22260,22419],"yaml":true},{"content":"Retrieves the set of properties for this type. By default, a type does not have any properties to return.","nodes":[{"pos":[0,105],"content":"Retrieves the set of properties for this type. By default, a type does not have any properties to return.","nodes":[{"content":"Retrieves the set of properties for this type. By default, a type does not have any properties to return.","pos":[0,105],"nodes":[{"content":"Retrieves the set of properties for this type.","pos":[0,46]},{"content":"By default, a type does not have any properties to return.","pos":[47,105]}]}]}],"pos":[23785,23891],"yaml":true},{"content":"A type descriptor through which additional context can be provided.","nodes":[{"pos":[0,67],"content":"A type descriptor through which additional context can be provided.","nodes":[{"content":"A type descriptor through which additional context can be provided.","pos":[0,67]}]}],"pos":[24199,24267],"yaml":true},{"content":"The value of the object to get the properties for.","nodes":[{"pos":[0,50],"content":"The value of the object to get the properties for.","nodes":[{"content":"The value of the object to get the properties for.","pos":[0,50]}]}],"pos":[24328,24379],"yaml":true},{"content":"An array of <xref href=\"System.Attribute\"></xref> objects that describe the properties.","nodes":[{"pos":[0,87],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Attribute\"&gt;&lt;/xref&gt;</ph> objects that describe the properties.","source":"An array of <xref href=\"System.Attribute\"></xref> objects that describe the properties."}],"pos":[24450,24538],"yaml":true},{"content":"The set of properties that should be exposed for this data type. If no properties should be exposed, this may return `null`. The default implementation always returns `null`.  \n  \n An easy implementation of this method can call the <xref href=\"System.ComponentModel.TypeConverter.GetProperties*\"></xref> method for the correct data type.","nodes":[{"pos":[0,174],"content":"The set of properties that should be exposed for this data type. If no properties should be exposed, this may return `null`. The default implementation always returns `null`.","nodes":[{"content":"The set of properties that should be exposed for this data type.","pos":[0,64]},{"content":"If no properties should be exposed, this may return <ph id=\"ph1\">`null`</ph>.","pos":[65,124],"source":" If no properties should be exposed, this may return `null`."},{"content":"The default implementation always returns <ph id=\"ph1\">`null`</ph>.","pos":[125,174],"source":" The default implementation always returns `null`."}]},{"pos":[181,337],"content":"An easy implementation of this method can call the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.TypeConverter.GetProperties*\"&gt;&lt;/xref&gt;</ph> method for the correct data type.","source":"An easy implementation of this method can call the <xref href=\"System.ComponentModel.TypeConverter.GetProperties*\"></xref> method for the correct data type."}],"pos":[24632,24976],"yaml":true},{"content":"Determines whether this object supports properties. The default is `false`.","nodes":[{"pos":[0,75],"content":"Determines whether this object supports properties. The default is `false`.","nodes":[{"content":"Determines whether this object supports properties.","pos":[0,51]},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[52,75],"source":" The default is `false`."}]}],"pos":[26221,26297],"yaml":true},{"content":"A type descriptor through which additional context can be provided.","nodes":[{"pos":[0,67],"content":"A type descriptor through which additional context can be provided.","nodes":[{"content":"A type descriptor through which additional context can be provided.","pos":[0,67]}]}],"pos":[26530,26598],"yaml":true},{"content":"This method returns `true` if the <xref href=\"System.Drawing.FontConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\"></xref> method should be called to find the properties of this object; otherwise, `false`.","nodes":[{"pos":[0,235],"content":"This method returns <ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Drawing.FontConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\"&gt;&lt;/xref&gt;</ph> method should be called to find the properties of this object; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"This method returns `true` if the <xref href=\"System.Drawing.FontConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\"></xref> method should be called to find the properties of this object; otherwise, `false`."}],"pos":[26656,26892],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Drawing.FontConverter\n  commentId: T:System.Drawing.FontConverter\n  id: FontConverter\n  children:\n  - System.Drawing.FontConverter.#ctor\n  - System.Drawing.FontConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.Drawing.FontConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.Drawing.FontConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.Drawing.FontConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  - System.Drawing.FontConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  - System.Drawing.FontConverter.Finalize\n  - System.Drawing.FontConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.Drawing.FontConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  - System.Drawing.FontConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  langs:\n  - csharp\n  name: FontConverter\n  nameWithType: FontConverter\n  fullName: System.Drawing.FontConverter\n  type: Class\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Converts <xref href=\"System.Drawing.Font\"></xref> objects from one data type to another.\n  remarks: A type converter is used to convert values between data types. A type converter also supports property configuration at design time by providing text-to-value conversion or a list of values that users can select from. Access the <xref:System.Drawing.FontConverter> class through the <xref:System.ComponentModel.TypeDescriptor> class by calling the <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> method.\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Drawing.FontConverter> to convert a <xref:System.Drawing.Font> to and from a string. This example is designed to be used with Windows Forms. Paste this code into a form and call the `ShowFontStringConversion` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing e as <xref:System.Windows.Forms.PaintEventArgs>.  \\n  \\n [!code-cpp[System.Drawing.Converters#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Converters/CPP/form1.cpp#3)]\\n [!code-csharp[System.Drawing.Converters#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Converters/CS/form1.cs#3)]\\n [!code-vb[System.Drawing.Converters#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Converters/VB/form1.vb#3)]\"\n  syntax:\n    content: 'public class FontConverter : System.ComponentModel.TypeConverter'\n  inheritance:\n  - System.Object\n  - System.ComponentModel.TypeConverter\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported\n  - System.ComponentModel.TypeConverter.GetStandardValues\n  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.IsValid(System.Object)\n  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/FontConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.FontConverter.#ctor\n  commentId: M:System.Drawing.FontConverter.#ctor\n  id: '#ctor'\n  parent: System.Drawing.FontConverter\n  langs:\n  - csharp\n  name: FontConverter()\n  nameWithType: FontConverter.FontConverter()\n  fullName: FontConverter.FontConverter()\n  type: Constructor\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Initializes a new <xref href=\"System.Drawing.FontConverter\"></xref> object.\n  remarks: You should access a <xref:System.Drawing.FontConverter> object through the <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A?displayProperty=fullName> method.\n  syntax:\n    content: public FontConverter ();\n    parameters: []\n  overload: System.Drawing.FontConverter.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/FontConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.FontConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  commentId: M:System.Drawing.FontConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Drawing.FontConverter\n  langs:\n  - csharp\n  name: CanConvertFrom(ITypeDescriptorContext, Type)\n  nameWithType: FontConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n  fullName: FontConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Determines whether this converter can convert an object in the specified source type to the native type of the converter.\n  syntax:\n    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: A formatter context. This object can be used to get additional information about the environment this converter is being called from. This may be `null`, so you should always check. Also, properties on the context object may also return `null`.\n    - id: sourceType\n      type: System.Type\n      description: The type you want to convert from.\n    return:\n      type: System.Boolean\n      description: This method returns `true` if this object can perform the conversion.\n  overload: System.Drawing.FontConverter.CanConvertFrom*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/FontConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.FontConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  commentId: M:System.Drawing.FontConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Drawing.FontConverter\n  langs:\n  - csharp\n  name: CanConvertTo(ITypeDescriptorContext, Type)\n  nameWithType: FontConverter.CanConvertTo(ITypeDescriptorContext, Type)\n  fullName: FontConverter.CanConvertTo(ITypeDescriptorContext, Type)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Gets a value indicating whether this converter can convert an object to the given destination type using the context.\n  remarks: The `context` parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `null`, so always check. Also, properties on the context object can return `null`.\n  syntax:\n    content: public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: An `ITypeDescriptorContext` object that provides a format context.\n    - id: destinationType\n      type: System.Type\n      description: A <xref href=\"System.Type\"></xref> object that represents the type you want to convert to.\n    return:\n      type: System.Boolean\n      description: This method returns `true` if this converter can perform the conversion; otherwise, `false`.\n  overload: System.Drawing.FontConverter.CanConvertTo*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/FontConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.FontConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  commentId: M:System.Drawing.FontConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.Drawing.FontConverter\n  langs:\n  - csharp\n  name: ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  nameWithType: FontConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: FontConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Converts the specified object to the native type of the converter.\n  syntax:\n    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: A formatter context. This object can be used to get additional information about the environment this converter is being called from. This may be `null`, so you should always check. Also, properties on the context object may also return `null`.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: A `CultureInfo` object that specifies the culture used to represent the font.\n    - id: value\n      type: System.Object\n      description: The object to convert.\n    return:\n      type: System.Object\n      description: The converted object.\n  overload: System.Drawing.FontConverter.ConvertFrom*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The conversion could not be performed.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/FontConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.FontConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  commentId: M:System.Drawing.FontConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.Drawing.FontConverter\n  langs:\n  - csharp\n  name: ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  nameWithType: FontConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  fullName: FontConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Converts the specified object to another type.\n  remarks: The most common type conversion is to and from a string type. The default implementation calls the <xref:System.Object.ToString%2A> method of the object if the object is valid and if the destination type is string.\n  syntax:\n    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: A formatter context. This object can be used to get additional information about the environment this converter is being called from. This may be `null`, so you should always check. Also, properties on the context object may also return `null`.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: A <xref href=\"System.Globalization.CultureInfo\"></xref> object that specifies the culture used to represent the object.\n    - id: value\n      type: System.Object\n      description: The object to convert.\n    - id: destinationType\n      type: System.Type\n      description: The data type to convert the object to.\n    return:\n      type: System.Object\n      description: The converted object.\n  overload: System.Drawing.FontConverter.ConvertTo*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The conversion was not successful.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/FontConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.FontConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  commentId: M:System.Drawing.FontConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  id: CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  parent: System.Drawing.FontConverter\n  langs:\n  - csharp\n  name: CreateInstance(ITypeDescriptorContext, IDictionary)\n  nameWithType: FontConverter.CreateInstance(ITypeDescriptorContext, IDictionary)\n  fullName: FontConverter.CreateInstance(ITypeDescriptorContext, IDictionary)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Creates an object of this type by using a specified set of property values for the object.\n  syntax:\n    content: public override object CreateInstance (System.ComponentModel.ITypeDescriptorContext context, System.Collections.IDictionary propertyValues);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: A type descriptor through which additional context can be provided.\n    - id: propertyValues\n      type: System.Collections.IDictionary\n      description: A dictionary of new property values. The dictionary contains a series of name-value pairs, one for each property returned from the <xref href=\"System.Drawing.FontConverter.GetProperties*\"></xref> method.\n    return:\n      type: System.Object\n      description: \"The newly created object, or `null` if the object could not be created. The default implementation returns `null`.  \\n  \\n <xref href=\\\"System.Drawing.FontConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\\\"></xref> useful for creating non-changeable objects that have changeable properties.\"\n  overload: System.Drawing.FontConverter.CreateInstance*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/FontConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.FontConverter.Finalize\n  commentId: M:System.Drawing.FontConverter.Finalize\n  id: Finalize\n  parent: System.Drawing.FontConverter\n  langs:\n  - csharp\n  name: Finalize()\n  nameWithType: FontConverter.Finalize()\n  fullName: FontConverter.Finalize()\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Allows the <xref href=\"System.Drawing.FontConverter\"></xref> to attempt to free resources and perform other cleanup operations before the <xref href=\"System.Drawing.FontConverter\"></xref> is reclaimed by garbage collection.\n  syntax:\n    content: ~FontConverter ();\n    parameters: []\n  overload: System.Drawing.FontConverter.Finalize*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/FontConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.FontConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  commentId: M:System.Drawing.FontConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  id: GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.Drawing.FontConverter\n  langs:\n  - csharp\n  name: GetCreateInstanceSupported(ITypeDescriptorContext)\n  nameWithType: FontConverter.GetCreateInstanceSupported(ITypeDescriptorContext)\n  fullName: FontConverter.GetCreateInstanceSupported(ITypeDescriptorContext)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Determines whether changing a value on this object should require a call to the <xref href=\"System.Drawing.FontConverter.CreateInstance*\"></xref> method to create a new value.\n  syntax:\n    content: public override bool GetCreateInstanceSupported (System.ComponentModel.ITypeDescriptorContext context);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: A type descriptor through which additional context can be provided.\n    return:\n      type: System.Boolean\n      description: This method returns `true` if the `CreateInstance` object should be called when a change is made to one or more properties of this object; otherwise, `false`.\n  overload: System.Drawing.FontConverter.GetCreateInstanceSupported*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/FontConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.FontConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  commentId: M:System.Drawing.FontConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  id: GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  parent: System.Drawing.FontConverter\n  langs:\n  - csharp\n  name: GetProperties(ITypeDescriptorContext, Object, Attribute[])\n  nameWithType: FontConverter.GetProperties(ITypeDescriptorContext, Object, Attribute[])\n  fullName: FontConverter.GetProperties(ITypeDescriptorContext, Object, Attribute[])\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Retrieves the set of properties for this type. By default, a type does not have any properties to return.\n  syntax:\n    content: public override System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value, Attribute[] attributes);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: A type descriptor through which additional context can be provided.\n    - id: value\n      type: System.Object\n      description: The value of the object to get the properties for.\n    - id: attributes\n      type: System.Attribute[]\n      description: An array of <xref href=\"System.Attribute\"></xref> objects that describe the properties.\n    return:\n      type: System.ComponentModel.PropertyDescriptorCollection\n      description: \"The set of properties that should be exposed for this data type. If no properties should be exposed, this may return `null`. The default implementation always returns `null`.  \\n  \\n An easy implementation of this method can call the <xref href=\\\"System.ComponentModel.TypeConverter.GetProperties*\\\"></xref> method for the correct data type.\"\n  overload: System.Drawing.FontConverter.GetProperties*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/FontConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.FontConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  commentId: M:System.Drawing.FontConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  id: GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.Drawing.FontConverter\n  langs:\n  - csharp\n  name: GetPropertiesSupported(ITypeDescriptorContext)\n  nameWithType: FontConverter.GetPropertiesSupported(ITypeDescriptorContext)\n  fullName: FontConverter.GetPropertiesSupported(ITypeDescriptorContext)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Determines whether this object supports properties. The default is `false`.\n  syntax:\n    content: public override bool GetPropertiesSupported (System.ComponentModel.ITypeDescriptorContext context);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: A type descriptor through which additional context can be provided.\n    return:\n      type: System.Boolean\n      description: This method returns `true` if the <xref href=\"System.Drawing.FontConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\"></xref> method should be called to find the properties of this object; otherwise, `false`.\n  overload: System.Drawing.FontConverter.GetPropertiesSupported*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/FontConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.ComponentModel.TypeConverter\n  parent: System.ComponentModel\n  isExternal: false\n  name: TypeConverter\n  nameWithType: TypeConverter\n  fullName: System.ComponentModel.TypeConverter\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  nameWithType: NotSupportedException\n  fullName: System.NotSupportedException\n- uid: System.Drawing.FontConverter.#ctor\n  parent: System.Drawing.FontConverter\n  isExternal: false\n  name: FontConverter()\n  nameWithType: FontConverter.FontConverter()\n  fullName: FontConverter.FontConverter()\n- uid: System.Drawing.FontConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Drawing.FontConverter\n  isExternal: false\n  name: CanConvertFrom(ITypeDescriptorContext, Type)\n  nameWithType: FontConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n  fullName: FontConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.ITypeDescriptorContext\n  parent: System.ComponentModel\n  isExternal: false\n  name: ITypeDescriptorContext\n  nameWithType: ITypeDescriptorContext\n  fullName: System.ComponentModel.ITypeDescriptorContext\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Drawing.FontConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Drawing.FontConverter\n  isExternal: false\n  name: CanConvertTo(ITypeDescriptorContext, Type)\n  nameWithType: FontConverter.CanConvertTo(ITypeDescriptorContext, Type)\n  fullName: FontConverter.CanConvertTo(ITypeDescriptorContext, Type)\n- uid: System.Drawing.FontConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.Drawing.FontConverter\n  isExternal: false\n  name: ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  nameWithType: FontConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: FontConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Drawing.FontConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.Drawing.FontConverter\n  isExternal: false\n  name: ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  nameWithType: FontConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  fullName: FontConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n- uid: System.Drawing.FontConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  parent: System.Drawing.FontConverter\n  isExternal: false\n  name: CreateInstance(ITypeDescriptorContext, IDictionary)\n  nameWithType: FontConverter.CreateInstance(ITypeDescriptorContext, IDictionary)\n  fullName: FontConverter.CreateInstance(ITypeDescriptorContext, IDictionary)\n- uid: System.Collections.IDictionary\n  parent: System.Collections\n  isExternal: false\n  name: IDictionary\n  nameWithType: IDictionary\n  fullName: System.Collections.IDictionary\n- uid: System.Drawing.FontConverter.Finalize\n  parent: System.Drawing.FontConverter\n  isExternal: false\n  name: Finalize()\n  nameWithType: FontConverter.Finalize()\n  fullName: FontConverter.Finalize()\n- uid: System.Drawing.FontConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.Drawing.FontConverter\n  isExternal: false\n  name: GetCreateInstanceSupported(ITypeDescriptorContext)\n  nameWithType: FontConverter.GetCreateInstanceSupported(ITypeDescriptorContext)\n  fullName: FontConverter.GetCreateInstanceSupported(ITypeDescriptorContext)\n- uid: System.Drawing.FontConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  parent: System.Drawing.FontConverter\n  isExternal: false\n  name: GetProperties(ITypeDescriptorContext, Object, Attribute[])\n  nameWithType: FontConverter.GetProperties(ITypeDescriptorContext, Object, Attribute[])\n  fullName: FontConverter.GetProperties(ITypeDescriptorContext, Object, Attribute[])\n- uid: System.ComponentModel.PropertyDescriptorCollection\n  parent: System.ComponentModel\n  isExternal: false\n  name: PropertyDescriptorCollection\n  nameWithType: PropertyDescriptorCollection\n  fullName: System.ComponentModel.PropertyDescriptorCollection\n- uid: System.Attribute\n  name: Attribute\n  nameWithType: Attribute\n  fullName: System.Attribute\n- uid: System.Attribute[]\n  parent: System\n  isExternal: false\n  name: Attribute[]\n  nameWithType: Attribute[]\n  fullName: System.Attribute[]\n  spec.csharp:\n  - uid: System.Attribute\n    name: Attribute\n    nameWithType: Attribute\n    fullName: System.Attribute\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Drawing.FontConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.Drawing.FontConverter\n  isExternal: false\n  name: GetPropertiesSupported(ITypeDescriptorContext)\n  nameWithType: FontConverter.GetPropertiesSupported(ITypeDescriptorContext)\n  fullName: FontConverter.GetPropertiesSupported(ITypeDescriptorContext)\n- uid: System.Drawing.FontConverter.#ctor*\n  parent: System.Drawing.FontConverter\n  isExternal: false\n  name: FontConverter\n  nameWithType: FontConverter.FontConverter\n  fullName: FontConverter.FontConverter\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/FontConverter.xml\n- uid: System.Drawing.FontConverter.CanConvertFrom*\n  parent: System.Drawing.FontConverter\n  isExternal: false\n  name: CanConvertFrom\n  nameWithType: FontConverter.CanConvertFrom\n  fullName: FontConverter.CanConvertFrom\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/FontConverter.xml\n- uid: System.Drawing.FontConverter.CanConvertTo*\n  parent: System.Drawing.FontConverter\n  isExternal: false\n  name: CanConvertTo\n  nameWithType: FontConverter.CanConvertTo\n  fullName: FontConverter.CanConvertTo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/FontConverter.xml\n- uid: System.Drawing.FontConverter.ConvertFrom*\n  parent: System.Drawing.FontConverter\n  isExternal: false\n  name: ConvertFrom\n  nameWithType: FontConverter.ConvertFrom\n  fullName: FontConverter.ConvertFrom\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/FontConverter.xml\n- uid: System.Drawing.FontConverter.ConvertTo*\n  parent: System.Drawing.FontConverter\n  isExternal: false\n  name: ConvertTo\n  nameWithType: FontConverter.ConvertTo\n  fullName: FontConverter.ConvertTo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/FontConverter.xml\n- uid: System.Drawing.FontConverter.CreateInstance*\n  parent: System.Drawing.FontConverter\n  isExternal: false\n  name: CreateInstance\n  nameWithType: FontConverter.CreateInstance\n  fullName: FontConverter.CreateInstance\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/FontConverter.xml\n- uid: System.Drawing.FontConverter.Finalize*\n  parent: System.Drawing.FontConverter\n  isExternal: false\n  name: Finalize\n  nameWithType: FontConverter.Finalize\n  fullName: FontConverter.Finalize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/FontConverter.xml\n- uid: System.Drawing.FontConverter.GetCreateInstanceSupported*\n  parent: System.Drawing.FontConverter\n  isExternal: false\n  name: GetCreateInstanceSupported\n  nameWithType: FontConverter.GetCreateInstanceSupported\n  fullName: FontConverter.GetCreateInstanceSupported\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/FontConverter.xml\n- uid: System.Drawing.FontConverter.GetProperties*\n  parent: System.Drawing.FontConverter\n  isExternal: false\n  name: GetProperties\n  nameWithType: FontConverter.GetProperties\n  fullName: FontConverter.GetProperties\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/FontConverter.xml\n- uid: System.Drawing.FontConverter.GetPropertiesSupported*\n  parent: System.Drawing.FontConverter\n  isExternal: false\n  name: GetPropertiesSupported\n  nameWithType: FontConverter.GetPropertiesSupported\n  fullName: FontConverter.GetPropertiesSupported\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/FontConverter.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CanConvertFrom(Type)\n  nameWithType: TypeConverter.CanConvertFrom(Type)\n  fullName: TypeConverter.CanConvertFrom(Type)\n- uid: System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CanConvertTo(Type)\n  nameWithType: TypeConverter.CanConvertTo(Type)\n  fullName: TypeConverter.CanConvertTo(Type)\n- uid: System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFrom(Object)\n  nameWithType: TypeConverter.ConvertFrom(Object)\n  fullName: TypeConverter.ConvertFrom(Object)\n- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromInvariantString(String)\n  nameWithType: TypeConverter.ConvertFromInvariantString(String)\n  fullName: TypeConverter.ConvertFromInvariantString(String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromInvariantString(ITypeDescriptorContext, String)\n  nameWithType: TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext, String)\n  fullName: TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext, String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n  fullName: TypeConverter.ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromString(String)\n  nameWithType: TypeConverter.ConvertFromString(String)\n  fullName: TypeConverter.ConvertFromString(String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromString(ITypeDescriptorContext, String)\n  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext, String)\n  fullName: TypeConverter.ConvertFromString(ITypeDescriptorContext, String)\n- uid: System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertTo(Object, Type)\n  nameWithType: TypeConverter.ConvertTo(Object, Type)\n  fullName: TypeConverter.ConvertTo(Object, Type)\n- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToInvariantString(Object)\n  nameWithType: TypeConverter.ConvertToInvariantString(Object)\n  fullName: TypeConverter.ConvertToInvariantString(Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToInvariantString(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.ConvertToInvariantString(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.ConvertToInvariantString(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: TypeConverter.ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToString(Object)\n  nameWithType: TypeConverter.ConvertToString(Object)\n  fullName: TypeConverter.ConvertToString(Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToString(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.ConvertToString(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CreateInstance(IDictionary)\n  nameWithType: TypeConverter.CreateInstance(IDictionary)\n  fullName: TypeConverter.CreateInstance(IDictionary)\n- uid: System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetConvertFromException(Object)\n  nameWithType: TypeConverter.GetConvertFromException(Object)\n  fullName: TypeConverter.GetConvertFromException(Object)\n- uid: System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetConvertToException(Object, Type)\n  nameWithType: TypeConverter.GetConvertToException(Object, Type)\n  fullName: TypeConverter.GetConvertToException(Object, Type)\n- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetCreateInstanceSupported()\n  nameWithType: TypeConverter.GetCreateInstanceSupported()\n  fullName: TypeConverter.GetCreateInstanceSupported()\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetProperties(Object)\n  nameWithType: TypeConverter.GetProperties(Object)\n  fullName: TypeConverter.GetProperties(Object)\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetProperties(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.GetProperties(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.GetProperties(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetPropertiesSupported()\n  nameWithType: TypeConverter.GetPropertiesSupported()\n  fullName: TypeConverter.GetPropertiesSupported()\n- uid: System.ComponentModel.TypeConverter.GetStandardValues\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValues()\n  nameWithType: TypeConverter.GetStandardValues()\n  fullName: TypeConverter.GetStandardValues()\n- uid: System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValues(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetStandardValues(ITypeDescriptorContext)\n  fullName: TypeConverter.GetStandardValues(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesExclusive()\n  nameWithType: TypeConverter.GetStandardValuesExclusive()\n  fullName: TypeConverter.GetStandardValuesExclusive()\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesExclusive(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n  fullName: TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesSupported()\n  nameWithType: TypeConverter.GetStandardValuesSupported()\n  fullName: TypeConverter.GetStandardValuesSupported()\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesSupported(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n  fullName: TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: IsValid(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.IsValid(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.IsValid(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.IsValid(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: IsValid(Object)\n  nameWithType: TypeConverter.IsValid(Object)\n  fullName: TypeConverter.IsValid(Object)\n- uid: System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: SortProperties(PropertyDescriptorCollection, String[])\n  nameWithType: TypeConverter.SortProperties(PropertyDescriptorCollection, String[])\n  fullName: TypeConverter.SortProperties(PropertyDescriptorCollection, String[])\n"}