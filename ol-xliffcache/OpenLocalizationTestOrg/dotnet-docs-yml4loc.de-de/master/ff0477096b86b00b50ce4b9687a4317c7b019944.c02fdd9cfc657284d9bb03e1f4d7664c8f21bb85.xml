{"nodes":[{"content":"The exception that is thrown when trying to access a drive or share that is not available.","nodes":[{"pos":[0,90],"content":"The exception that is thrown when trying to access a drive or share that is not available.","nodes":[{"content":"The exception that is thrown when trying to access a drive or share that is not available.","pos":[0,90]}]}],"pos":[739,830],"yaml":true},{"content":"The <xref:System.IO.DriveNotFoundException> class uses the HRESULT COR_E_DIRECTORYNOTFOUND. This exception can be thrown when a Win32 ERROR_PATH_NOT_FOUND HRESULT error is encountered.","nodes":[{"pos":[0,184],"content":"The <xref:System.IO.DriveNotFoundException> class uses the HRESULT COR_E_DIRECTORYNOTFOUND. This exception can be thrown when a Win32 ERROR_PATH_NOT_FOUND HRESULT error is encountered.","nodes":[{"content":"The <xref:System.IO.DriveNotFoundException> class uses the HRESULT COR_E_DIRECTORYNOTFOUND. This exception can be thrown when a Win32 ERROR_PATH_NOT_FOUND HRESULT error is encountered.","pos":[0,184],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.DriveNotFoundException&gt;</ph> class uses the HRESULT COR_E_DIRECTORYNOTFOUND.","pos":[0,91],"source":"The <xref:System.IO.DriveNotFoundException> class uses the HRESULT COR_E_DIRECTORYNOTFOUND."},{"content":"This exception can be thrown when a Win32 ERROR_PATH_NOT_FOUND HRESULT error is encountered.","pos":[92,184]}]}]}],"pos":[841,1026],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.IO.DriveNotFoundException\"></xref> class with its message string set to a system-supplied message and its HRESULT set to COR_E_DIRECTORYNOTFOUND.","nodes":[{"pos":[0,198],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.DriveNotFoundException\"&gt;&lt;/xref&gt;</ph> class with its message string set to a system-supplied message and its HRESULT set to COR_E_DIRECTORYNOTFOUND.","source":"Initializes a new instance of the <xref href=\"System.IO.DriveNotFoundException\"></xref> class with its message string set to a system-supplied message and its HRESULT set to COR_E_DIRECTORYNOTFOUND."}],"pos":[3354,3553],"yaml":true},{"content":"This constructor initializes the <xref:System.Exception.Message%2A?displayProperty=fullName> property of the new instance to a system-supplied message that describes the error, such as \"Could not find the specified directory.\" This message is localized based on the current system culture.  \n  \n The <xref:System.Exception.InnerException%2A?displayProperty=fullName> property of the new instance is initialized to `null`.","nodes":[{"pos":[0,289],"content":"This constructor initializes the <xref:System.Exception.Message%2A?displayProperty=fullName> property of the new instance to a system-supplied message that describes the error, such as \"Could not find the specified directory.\" This message is localized based on the current system culture.","nodes":[{"content":"This constructor initializes the <xref:System.Exception.Message%2A?displayProperty=fullName> property of the new instance to a system-supplied message that describes the error, such as \"Could not find the specified directory.\" This message is localized based on the current system culture.","pos":[0,289],"nodes":[{"content":"This constructor initializes the <ph id=\"ph1\">&lt;xref:System.Exception.Message%2A?displayProperty=fullName&gt;</ph> property of the new instance to a system-supplied message that describes the error, such as \"Could not find the specified directory.\"","pos":[0,226],"source":"This constructor initializes the <xref:System.Exception.Message%2A?displayProperty=fullName> property of the new instance to a system-supplied message that describes the error, such as \"Could not find the specified directory.\""},{"content":"This message is localized based on the current system culture.","pos":[227,289]}]}]},{"pos":[296,421],"content":"The <ph id=\"ph1\">&lt;xref:System.Exception.InnerException%2A?displayProperty=fullName&gt;</ph> property of the new instance is initialized to <ph id=\"ph2\">`null`</ph>.","source":"The <xref:System.Exception.InnerException%2A?displayProperty=fullName> property of the new instance is initialized to `null`."}],"pos":[3564,3992],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.IO.DriveNotFoundException\"></xref> class with the specified message string and the HRESULT set to COR_E_DIRECTORYNOTFOUND.","nodes":[{"pos":[0,175],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.DriveNotFoundException\"&gt;&lt;/xref&gt;</ph> class with the specified message string and the HRESULT set to COR_E_DIRECTORYNOTFOUND.","source":"Initializes a new instance of the <xref href=\"System.IO.DriveNotFoundException\"></xref> class with the specified message string and the HRESULT set to COR_E_DIRECTORYNOTFOUND."}],"pos":[5456,5632],"yaml":true},{"content":"This constructor initializes the <xref:System.Exception.Message%2A?displayProperty=fullName> property of the new instance using the `message` parameter.  \n  \n The <xref:System.Exception.InnerException%2A?displayProperty=fullName> property of the new instance is initialized to `null`.","nodes":[{"pos":[0,152],"content":"This constructor initializes the <ph id=\"ph1\">&lt;xref:System.Exception.Message%2A?displayProperty=fullName&gt;</ph> property of the new instance using the <ph id=\"ph2\">`message`</ph> parameter.","source":"This constructor initializes the <xref:System.Exception.Message%2A?displayProperty=fullName> property of the new instance using the `message` parameter."},{"pos":[159,284],"content":"The <ph id=\"ph1\">&lt;xref:System.Exception.InnerException%2A?displayProperty=fullName&gt;</ph> property of the new instance is initialized to <ph id=\"ph2\">`null`</ph>.","source":"The <xref:System.Exception.InnerException%2A?displayProperty=fullName> property of the new instance is initialized to `null`."}],"pos":[5643,5932],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> object that describes the error. The caller of this constructor is required to ensure that this string has been localized for the current system culture.","nodes":[{"pos":[0,190],"content":"A <xref href=\"System.String\"></xref> object that describes the error. The caller of this constructor is required to ensure that this string has been localized for the current system culture.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> object that describes the error.","pos":[0,69],"source":"A <xref href=\"System.String\"></xref> object that describes the error."},{"content":"The caller of this constructor is required to ensure that this string has been localized for the current system culture.","pos":[70,190]}]}],"pos":[6082,6273],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IO.DriveNotFoundException\"></xref> class with the specified serialization and context information.","nodes":[{"pos":[0,151],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.DriveNotFoundException\"&gt;&lt;/xref&gt;</ph> class with the specified serialization and context information.","source":"Initializes a new instance of the <xref href=\"System.IO.DriveNotFoundException\"></xref> class with the specified serialization and context information."}],"pos":[7985,8137],"yaml":true},{"content":"A <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object that contains the serialized object data about the exception being thrown.","nodes":[{"pos":[0,151],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;&lt;/xref&gt;</ph> object that contains the serialized object data about the exception being thrown.","source":"A <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object that contains the serialized object data about the exception being thrown."}],"pos":[8412,8564],"yaml":true},{"content":"A <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref> object that contains contextual information about the source or destination of the exception being thrown.","nodes":[{"pos":[0,175],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.StreamingContext\"&gt;&lt;/xref&gt;</ph> object that contains contextual information about the source or destination of the exception being thrown.","source":"A <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref> object that contains contextual information about the source or destination of the exception being thrown."}],"pos":[8659,8835],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IO.DriveNotFoundException\"></xref> class with the specified error message and a reference to the inner exception that is the cause of this exception.","nodes":[{"pos":[0,202],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.DriveNotFoundException\"&gt;&lt;/xref&gt;</ph> class with the specified error message and a reference to the inner exception that is the cause of this exception.","source":"Initializes a new instance of the <xref href=\"System.IO.DriveNotFoundException\"></xref> class with the specified error message and a reference to the inner exception that is the cause of this exception."}],"pos":[10243,10446],"yaml":true},{"content":"An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.  \n  \n The following table shows the initial property values for an instance of <xref:System.IO.DirectoryNotFoundException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|The inner exception reference.|  \n|<xref:System.Exception.Message%2A>|The error message string.|","nodes":[{"pos":[0,427],"content":"An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.","nodes":[{"content":"An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <ph id=\"ph1\">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.","pos":[0,182],"source":"An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or <ph id=\"ph2\">`null`</ph> if the <ph id=\"ph3\">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.","pos":[183,427],"source":" The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor."}]},{"pos":[434,551],"content":"The following table shows the initial property values for an instance of <xref:System.IO.DirectoryNotFoundException>.","nodes":[{"content":"The following table shows the initial property values for an instance of <ph id=\"ph1\">&lt;xref:System.IO.DirectoryNotFoundException&gt;</ph>.","pos":[0,117],"source":"The following table shows the initial property values for an instance of <xref:System.IO.DirectoryNotFoundException>."}]},{"pos":[558,566],"content":"Property","nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[567,572],"content":"Value","nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[608,649],"content":"<xref:System.Exception.InnerException%2A>","nodes":[]},{"pos":[650,680],"content":"The inner exception reference.","nodes":[{"content":"The inner exception reference.","pos":[0,30]}]},{"pos":[685,719],"content":"<xref:System.Exception.Message%2A>","nodes":[]},{"pos":[720,745],"content":"The error message string.","nodes":[{"content":"The error message string.","pos":[0,25]}]}],"pos":[10457,11213],"yaml":true,"extradata":"MT"},{"content":"The error message that explains the reason for the exception.","nodes":[{"pos":[0,61],"content":"The error message that explains the reason for the exception.","nodes":[{"content":"The error message that explains the reason for the exception.","pos":[0,61]}]}],"pos":[11389,11451],"yaml":true},{"content":"The exception that is the cause of the current exception. If the <code>innerException</code> parameter is not `null`, the current exception is raised in a `catch` block that handles the inner exception.","nodes":[{"pos":[0,202],"content":"The exception that is the cause of the current exception. If the <code>innerException</code> parameter is not `null`, the current exception is raised in a `catch` block that handles the inner exception.","nodes":[{"content":"The exception that is the cause of the current exception.","pos":[0,57]},{"content":"If the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">innerException</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not <ph id=\"ph2\">`null`</ph>, the current exception is raised in a <ph id=\"ph3\">`catch`</ph> block that handles the inner exception.","pos":[58,202],"source":" If the <code>innerException</code> parameter is not `null`, the current exception is raised in a `catch` block that handles the inner exception."}]}],"pos":[11524,11727],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IO.DriveNotFoundException\n  commentId: T:System.IO.DriveNotFoundException\n  id: DriveNotFoundException\n  children:\n  - System.IO.DriveNotFoundException.#ctor\n  - System.IO.DriveNotFoundException.#ctor(System.String)\n  - System.IO.DriveNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.IO.DriveNotFoundException.#ctor(System.String,System.Exception)\n  langs:\n  - csharp\n  name: DriveNotFoundException\n  nameWithType: DriveNotFoundException\n  fullName: System.IO.DriveNotFoundException\n  type: Class\n  assemblies:\n  - System.IO.FileSystem.DriveInfo\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: The exception that is thrown when trying to access a drive or share that is not available.\n  remarks: The <xref:System.IO.DriveNotFoundException> class uses the HRESULT COR_E_DIRECTORYNOTFOUND. This exception can be thrown when a Win32 ERROR_PATH_NOT_FOUND HRESULT error is encountered.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class DriveNotFoundException : System.IO.IOException\n  inheritance:\n  - System.Object\n  - System.Exception\n  - System.IO.IOException\n  implements: []\n  inheritedMembers:\n  - System.Exception.Data\n  - System.Exception.GetBaseException\n  - System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Exception.GetType\n  - System.Exception.HelpLink\n  - System.Exception.HResult\n  - System.Exception.InnerException\n  - System.Exception.Message\n  - System.Exception.SerializeObjectState\n  - System.Exception.Source\n  - System.Exception.StackTrace\n  - System.Exception.TargetSite\n  - System.Exception.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/DriveNotFoundException.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.DriveNotFoundException.#ctor\n  commentId: M:System.IO.DriveNotFoundException.#ctor\n  id: '#ctor'\n  parent: System.IO.DriveNotFoundException\n  langs:\n  - csharp\n  name: DriveNotFoundException()\n  nameWithType: DriveNotFoundException.DriveNotFoundException()\n  fullName: DriveNotFoundException.DriveNotFoundException()\n  type: Constructor\n  assemblies:\n  - System.IO.FileSystem.DriveInfo\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Initializes a new instance of the <xref href=\"System.IO.DriveNotFoundException\"></xref> class with its message string set to a system-supplied message and its HRESULT set to COR_E_DIRECTORYNOTFOUND.\n  remarks: \"This constructor initializes the <xref:System.Exception.Message%2A?displayProperty=fullName> property of the new instance to a system-supplied message that describes the error, such as \\\"Could not find the specified directory.\\\" This message is localized based on the current system culture.  \\n  \\n The <xref:System.Exception.InnerException%2A?displayProperty=fullName> property of the new instance is initialized to `null`.\"\n  syntax:\n    content: public DriveNotFoundException ();\n    parameters: []\n  overload: System.IO.DriveNotFoundException.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/DriveNotFoundException.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.DriveNotFoundException.#ctor(System.String)\n  commentId: M:System.IO.DriveNotFoundException.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.IO.DriveNotFoundException\n  langs:\n  - csharp\n  name: DriveNotFoundException(String)\n  nameWithType: DriveNotFoundException.DriveNotFoundException(String)\n  fullName: DriveNotFoundException.DriveNotFoundException(String)\n  type: Constructor\n  assemblies:\n  - System.IO.FileSystem.DriveInfo\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Initializes a new instance of the <xref href=\"System.IO.DriveNotFoundException\"></xref> class with the specified message string and the HRESULT set to COR_E_DIRECTORYNOTFOUND.\n  remarks: \"This constructor initializes the <xref:System.Exception.Message%2A?displayProperty=fullName> property of the new instance using the `message` parameter.  \\n  \\n The <xref:System.Exception.InnerException%2A?displayProperty=fullName> property of the new instance is initialized to `null`.\"\n  syntax:\n    content: public DriveNotFoundException (string message);\n    parameters:\n    - id: message\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> object that describes the error. The caller of this constructor is required to ensure that this string has been localized for the current system culture.\n  overload: System.IO.DriveNotFoundException.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/DriveNotFoundException.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.DriveNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  commentId: M:System.IO.DriveNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'\n  parent: System.IO.DriveNotFoundException\n  langs:\n  - csharp\n  name: DriveNotFoundException(SerializationInfo, StreamingContext)\n  nameWithType: DriveNotFoundException.DriveNotFoundException(SerializationInfo, StreamingContext)\n  fullName: DriveNotFoundException.DriveNotFoundException(SerializationInfo, StreamingContext)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.IO.FileSystem.DriveInfo\n  namespace: System.IO\n  summary: Initializes a new instance of the <xref href=\"System.IO.DriveNotFoundException\"></xref> class with the specified serialization and context information.\n  syntax:\n    content: protected DriveNotFoundException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: A <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object that contains the serialized object data about the exception being thrown.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: A <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref> object that contains contextual information about the source or destination of the exception being thrown.\n  overload: System.IO.DriveNotFoundException.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/DriveNotFoundException.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.DriveNotFoundException.#ctor(System.String,System.Exception)\n  commentId: M:System.IO.DriveNotFoundException.#ctor(System.String,System.Exception)\n  id: '#ctor(System.String,System.Exception)'\n  parent: System.IO.DriveNotFoundException\n  langs:\n  - csharp\n  name: DriveNotFoundException(String, Exception)\n  nameWithType: DriveNotFoundException.DriveNotFoundException(String, Exception)\n  fullName: DriveNotFoundException.DriveNotFoundException(String, Exception)\n  type: Constructor\n  assemblies:\n  - System.IO.FileSystem.DriveInfo\n  - mscorlib\n  - netstandard\n  namespace: System.IO\n  summary: Initializes a new instance of the <xref href=\"System.IO.DriveNotFoundException\"></xref> class with the specified error message and a reference to the inner exception that is the cause of this exception.\n  remarks: \"An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.  \\n  \\n The following table shows the initial property values for an instance of <xref:System.IO.DirectoryNotFoundException>.  \\n  \\n|Property|Value|  \\n|--------------|-----------|  \\n|<xref:System.Exception.InnerException%2A>|The inner exception reference.|  \\n|<xref:System.Exception.Message%2A>|The error message string.|\"\n  syntax:\n    content: public DriveNotFoundException (string message, Exception innerException);\n    parameters:\n    - id: message\n      type: System.String\n      description: The error message that explains the reason for the exception.\n    - id: innerException\n      type: System.Exception\n      description: The exception that is the cause of the current exception. If the <code>innerException</code> parameter is not `null`, the current exception is raised in a `catch` block that handles the inner exception.\n  overload: System.IO.DriveNotFoundException.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/DriveNotFoundException.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.IO.IOException\n  parent: System.IO\n  isExternal: false\n  name: IOException\n  nameWithType: IOException\n  fullName: System.IO.IOException\n- uid: System.IO.DriveNotFoundException.#ctor\n  parent: System.IO.DriveNotFoundException\n  isExternal: false\n  name: DriveNotFoundException()\n  nameWithType: DriveNotFoundException.DriveNotFoundException()\n  fullName: DriveNotFoundException.DriveNotFoundException()\n- uid: System.IO.DriveNotFoundException.#ctor(System.String)\n  parent: System.IO.DriveNotFoundException\n  isExternal: false\n  name: DriveNotFoundException(String)\n  nameWithType: DriveNotFoundException.DriveNotFoundException(String)\n  fullName: DriveNotFoundException.DriveNotFoundException(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IO.DriveNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.IO.DriveNotFoundException\n  isExternal: false\n  name: DriveNotFoundException(SerializationInfo, StreamingContext)\n  nameWithType: DriveNotFoundException.DriveNotFoundException(SerializationInfo, StreamingContext)\n  fullName: DriveNotFoundException.DriveNotFoundException(SerializationInfo, StreamingContext)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.IO.DriveNotFoundException.#ctor(System.String,System.Exception)\n  parent: System.IO.DriveNotFoundException\n  isExternal: false\n  name: DriveNotFoundException(String, Exception)\n  nameWithType: DriveNotFoundException.DriveNotFoundException(String, Exception)\n  fullName: DriveNotFoundException.DriveNotFoundException(String, Exception)\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.IO.DriveNotFoundException.#ctor*\n  parent: System.IO.DriveNotFoundException\n  isExternal: false\n  name: DriveNotFoundException\n  nameWithType: DriveNotFoundException.DriveNotFoundException\n  fullName: DriveNotFoundException.DriveNotFoundException\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/DriveNotFoundException.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Exception.GetType\n  parent: System.Exception\n  isExternal: false\n  name: GetType()\n  nameWithType: Exception.GetType()\n  fullName: Exception.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Exception.ToString\n  parent: System.Exception\n  isExternal: false\n  name: ToString()\n  nameWithType: Exception.ToString()\n  fullName: Exception.ToString()\n- uid: System.Exception.Data\n  parent: System.Exception\n  isExternal: false\n  name: Data\n  nameWithType: Exception.Data\n  fullName: Exception.Data\n- uid: System.Exception.GetBaseException\n  parent: System.Exception\n  isExternal: false\n  name: GetBaseException()\n  nameWithType: Exception.GetBaseException()\n  fullName: Exception.GetBaseException()\n- uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Exception\n  isExternal: false\n  name: GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: Exception.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: Exception.GetObjectData(SerializationInfo, StreamingContext)\n- uid: System.Exception.HelpLink\n  parent: System.Exception\n  isExternal: false\n  name: HelpLink\n  nameWithType: Exception.HelpLink\n  fullName: Exception.HelpLink\n- uid: System.Exception.HResult\n  parent: System.Exception\n  isExternal: false\n  name: HResult\n  nameWithType: Exception.HResult\n  fullName: Exception.HResult\n- uid: System.Exception.InnerException\n  parent: System.Exception\n  isExternal: false\n  name: InnerException\n  nameWithType: Exception.InnerException\n  fullName: Exception.InnerException\n- uid: System.Exception.Message\n  parent: System.Exception\n  isExternal: false\n  name: Message\n  nameWithType: Exception.Message\n  fullName: Exception.Message\n- uid: System.Exception.SerializeObjectState\n  parent: System.Exception\n  isExternal: false\n  name: SerializeObjectState\n  nameWithType: Exception.SerializeObjectState\n  fullName: Exception.SerializeObjectState\n- uid: System.Exception.Source\n  parent: System.Exception\n  isExternal: false\n  name: Source\n  nameWithType: Exception.Source\n  fullName: Exception.Source\n- uid: System.Exception.StackTrace\n  parent: System.Exception\n  isExternal: false\n  name: StackTrace\n  nameWithType: Exception.StackTrace\n  fullName: Exception.StackTrace\n- uid: System.Exception.TargetSite\n  parent: System.Exception\n  isExternal: false\n  name: TargetSite\n  nameWithType: Exception.TargetSite\n  fullName: Exception.TargetSite\n"}