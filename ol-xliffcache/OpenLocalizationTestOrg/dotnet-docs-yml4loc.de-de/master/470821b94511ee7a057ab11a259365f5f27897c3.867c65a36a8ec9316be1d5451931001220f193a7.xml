{"nodes":[{"content":"Represents the display surface of your application.","nodes":[{"pos":[0,51],"content":"Represents the display surface of your application.","nodes":[{"content":"Represents the display surface of your application.","pos":[0,51]}]}],"pos":[679,731],"yaml":true},{"content":"<xref:System.Windows.Media.CompositionTarget> is a class that represents the display surface on which your application is being drawn. The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] animation engine provides many features for creating frame-based animation. However, there are application scenarios in which you need control over rendering on a per frame basis. The <xref:System.Windows.Media.CompositionTarget> object provides the ability to create custom animations based on a per-frame callback.  \n  \n> [!NOTE]\n>  For a complete code sample using <xref:System.Windows.Media.CompositionTarget>, see [Using the CompositionTarget Sample](http://go.microsoft.com/fwlink/?LinkID=160045).","nodes":[{"pos":[0,527],"content":"<xref:System.Windows.Media.CompositionTarget> is a class that represents the display surface on which your application is being drawn. The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] animation engine provides many features for creating frame-based animation. However, there are application scenarios in which you need control over rendering on a per frame basis. The <xref:System.Windows.Media.CompositionTarget> object provides the ability to create custom animations based on a per-frame callback.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Media.CompositionTarget&gt;</ph> is a class that represents the display surface on which your application is being drawn.","pos":[0,134],"source":"<xref:System.Windows.Media.CompositionTarget> is a class that represents the display surface on which your application is being drawn."},{"content":"The <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> animation engine provides many features for creating frame-based animation.","pos":[135,286],"source":" The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] animation engine provides many features for creating frame-based animation."},{"content":"However, there are application scenarios in which you need control over rendering on a per frame basis.","pos":[287,390]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Media.CompositionTarget&gt;</ph> object provides the ability to create custom animations based on a per-frame callback.","pos":[391,527],"source":" The <xref:System.Windows.Media.CompositionTarget> object provides the ability to create custom animations based on a per-frame callback."}]},{"pos":[535,714],"content":"[!NOTE]\n For a complete code sample using <xref:System.Windows.Media.CompositionTarget>, see [Using the CompositionTarget Sample](http://go.microsoft.com/fwlink/?LinkID=160045).","leadings":["","> "],"nodes":[{"content":"For a complete code sample using <ph id=\"ph1\">&lt;xref:System.Windows.Media.CompositionTarget&gt;</ph>, see <bpt id=\"p1\">[</bpt>Using the CompositionTarget Sample<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkID=160045)</ept>.","pos":[9,177],"source":" For a complete code sample using <xref:System.Windows.Media.CompositionTarget>, see [Using the CompositionTarget Sample](http://go.microsoft.com/fwlink/?LinkID=160045)."}]}],"pos":[742,1462],"yaml":true,"extradata":"MT"},{"content":"Disposes <xref href=\"System.Windows.Media.CompositionTarget\"></xref>.","nodes":[{"pos":[0,69],"content":"Disposes <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.CompositionTarget\"&gt;&lt;/xref&gt;</ph>.","source":"Disposes <xref href=\"System.Windows.Media.CompositionTarget\"></xref>."}],"pos":[3191,3261],"yaml":true},{"content":"Occurs just before the objects in the composition tree are rendered.","nodes":[{"pos":[0,68],"content":"Occurs just before the objects in the composition tree are rendered.","nodes":[{"content":"Occurs just before the objects in the composition tree are rendered.","pos":[0,68]}]}],"pos":[4346,4415],"yaml":true},{"content":"The <xref:System.Windows.Media.CompositionTarget.Rendering> event is routed to the specified event handler after animation and layout have been applied to the composition tree.","nodes":[{"pos":[0,176],"content":"The <xref:System.Windows.Media.CompositionTarget.Rendering> event is routed to the specified event handler after animation and layout have been applied to the composition tree.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Media.CompositionTarget.Rendering&gt;</ph> event is routed to the specified event handler after animation and layout have been applied to the composition tree.","pos":[0,176],"source":"The <xref:System.Windows.Media.CompositionTarget.Rendering> event is routed to the specified event handler after animation and layout have been applied to the composition tree."}]}],"pos":[4426,4603],"yaml":true,"extradata":"MT"},{"content":"Gets or sets the root visual of the <xref href=\"System.Windows.Media.CompositionTarget\"></xref>.","nodes":[{"pos":[0,96],"content":"Gets or sets the root visual of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.CompositionTarget\"&gt;&lt;/xref&gt;</ph>.","source":"Gets or sets the root visual of the <xref href=\"System.Windows.Media.CompositionTarget\"></xref>."}],"pos":[7097,7194],"yaml":true},{"content":"The root visual of the <xref href=\"System.Windows.Media.CompositionTarget\"></xref>.","nodes":[{"pos":[0,83],"content":"The root visual of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.CompositionTarget\"&gt;&lt;/xref&gt;</ph>.","source":"The root visual of the <xref href=\"System.Windows.Media.CompositionTarget\"></xref>."}],"pos":[7459,7543],"yaml":true},{"content":"Gets a matrix that can be used to transform coordinates from the rendering destination device to this target.","nodes":[{"pos":[0,109],"content":"Gets a matrix that can be used to transform coordinates from the rendering destination device to this target.","nodes":[{"content":"Gets a matrix that can be used to transform coordinates from the rendering destination device to this target.","pos":[0,109]}]}],"pos":[8712,8822],"yaml":true},{"content":"The transformation matrix.","nodes":[{"pos":[0,26],"content":"The transformation matrix.","nodes":[{"content":"The transformation matrix.","pos":[0,26]}]}],"pos":[8989,9016],"yaml":true},{"content":"Gets a matrix that can be used to transform coordinates from this target to the rendering destination device.","nodes":[{"pos":[0,109],"content":"Gets a matrix that can be used to transform coordinates from this target to the rendering destination device.","nodes":[{"content":"Gets a matrix that can be used to transform coordinates from this target to the rendering destination device.","pos":[0,109]}]}],"pos":[10090,10200],"yaml":true},{"content":"The transformation matrix.","nodes":[{"pos":[0,26],"content":"The transformation matrix.","nodes":[{"content":"The transformation matrix.","pos":[0,26]}]}],"pos":[10365,10392],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Media.CompositionTarget\n  commentId: T:System.Windows.Media.CompositionTarget\n  id: CompositionTarget\n  children:\n  - System.Windows.Media.CompositionTarget.Dispose\n  - System.Windows.Media.CompositionTarget.Rendering\n  - System.Windows.Media.CompositionTarget.RootVisual\n  - System.Windows.Media.CompositionTarget.TransformFromDevice\n  - System.Windows.Media.CompositionTarget.TransformToDevice\n  langs:\n  - csharp\n  name: CompositionTarget\n  nameWithType: CompositionTarget\n  fullName: System.Windows.Media.CompositionTarget\n  type: Class\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Represents the display surface of your application.\n  remarks: \"<xref:System.Windows.Media.CompositionTarget> is a class that represents the display surface on which your application is being drawn. The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] animation engine provides many features for creating frame-based animation. However, there are application scenarios in which you need control over rendering on a per frame basis. The <xref:System.Windows.Media.CompositionTarget> object provides the ability to create custom animations based on a per-frame callback.  \\n  \\n> [!NOTE]\\n>  For a complete code sample using <xref:System.Windows.Media.CompositionTarget>, see [Using the CompositionTarget Sample](http://go.microsoft.com/fwlink/?LinkID=160045).\"\n  syntax:\n    content: 'public abstract class CompositionTarget : System.Windows.Threading.DispatcherObject, IDisposable'\n  inheritance:\n  - System.Object\n  - System.Windows.Threading.DispatcherObject\n  derivedClasses:\n  - System.Windows.Interop.HwndTarget\n  - System.Windows.Media.VisualTarget\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Windows.Threading.DispatcherObject.CheckAccess\n  - System.Windows.Threading.DispatcherObject.Dispatcher\n  - System.Windows.Threading.DispatcherObject.VerifyAccess\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/CompositionTarget.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.CompositionTarget.Dispose\n  commentId: M:System.Windows.Media.CompositionTarget.Dispose\n  id: Dispose\n  parent: System.Windows.Media.CompositionTarget\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: CompositionTarget.Dispose()\n  fullName: CompositionTarget.Dispose()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Disposes <xref href=\"System.Windows.Media.CompositionTarget\"></xref>.\n  syntax:\n    content: public virtual void Dispose ();\n    parameters: []\n  overload: System.Windows.Media.CompositionTarget.Dispose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/CompositionTarget.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.CompositionTarget.Rendering\n  commentId: E:System.Windows.Media.CompositionTarget.Rendering\n  id: Rendering\n  parent: System.Windows.Media.CompositionTarget\n  langs:\n  - csharp\n  name: Rendering\n  nameWithType: CompositionTarget.Rendering\n  fullName: CompositionTarget.Rendering\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Occurs just before the objects in the composition tree are rendered.\n  remarks: The <xref:System.Windows.Media.CompositionTarget.Rendering> event is routed to the specified event handler after animation and layout have been applied to the composition tree.\n  example:\n  - \"The <xref:System.Windows.Media.CompositionTarget.Rendering> event is raised during the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] rendering process. The following example shows how you register an <xref:System.EventHandler> delegate to the static <xref:System.Windows.Media.CompositionTarget.Rendering> method on <xref:System.Windows.Media.CompositionTarget>.  \\n  \\n [!code-csharp[CompositionTargetSample#CompositionTarget1](~/samples/snippets/csharp/VS_Snippets_Wpf/CompositionTargetSample/CSharp/Window1.xaml.cs#compositiontarget1)]\\n [!code-vb[CompositionTargetSample#CompositionTarget1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CompositionTargetSample/visualbasic/window1.xaml.vb#compositiontarget1)]  \\n  \\n You can use your rendering event handler to create custom drawing content. This event handler gets called once per frame. Each time that [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] marshals the persisted rendering data in the visual tree across to the composition tree, your event handler is called. In addition, if changes to the visual tree force updates to the composition tree, your event handler is also called. Note that your event handler is called after layout has been computed. However, you can modify layout in your event handler, which means that layout will be computed once more before rendering.\"\n  syntax:\n    content: public static event EventHandler Rendering;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/CompositionTarget.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.CompositionTarget.RootVisual\n  commentId: P:System.Windows.Media.CompositionTarget.RootVisual\n  id: RootVisual\n  parent: System.Windows.Media.CompositionTarget\n  langs:\n  - csharp\n  name: RootVisual\n  nameWithType: CompositionTarget.RootVisual\n  fullName: CompositionTarget.RootVisual\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Gets or sets the root visual of the <xref href=\"System.Windows.Media.CompositionTarget\"></xref>.\n  syntax:\n    content: >-\n      [get: System.Security.SecurityCritical]\n\n      [set: System.Security.SecurityCritical]\n\n      public virtual System.Windows.Media.Visual RootVisual { get; set; }\n    return:\n      type: System.Windows.Media.Visual\n      description: The root visual of the <xref href=\"System.Windows.Media.CompositionTarget\"></xref>.\n  overload: System.Windows.Media.CompositionTarget.RootVisual*\n  exceptions: []\n  attributes:\n  - type: 'get: System.Security.SecurityCritical'\n  - type: 'set: System.Security.SecurityCritical'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/CompositionTarget.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Media.CompositionTarget.TransformFromDevice\n  commentId: P:System.Windows.Media.CompositionTarget.TransformFromDevice\n  id: TransformFromDevice\n  parent: System.Windows.Media.CompositionTarget\n  langs:\n  - csharp\n  name: TransformFromDevice\n  nameWithType: CompositionTarget.TransformFromDevice\n  fullName: CompositionTarget.TransformFromDevice\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Gets a matrix that can be used to transform coordinates from the rendering destination device to this target.\n  syntax:\n    content: public abstract System.Windows.Media.Matrix TransformFromDevice { get; }\n    return:\n      type: System.Windows.Media.Matrix\n      description: The transformation matrix.\n  overload: System.Windows.Media.CompositionTarget.TransformFromDevice*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/CompositionTarget.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.CompositionTarget.TransformToDevice\n  commentId: P:System.Windows.Media.CompositionTarget.TransformToDevice\n  id: TransformToDevice\n  parent: System.Windows.Media.CompositionTarget\n  langs:\n  - csharp\n  name: TransformToDevice\n  nameWithType: CompositionTarget.TransformToDevice\n  fullName: CompositionTarget.TransformToDevice\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Gets a matrix that can be used to transform coordinates from this target to the rendering destination device.\n  syntax:\n    content: public abstract System.Windows.Media.Matrix TransformToDevice { get; }\n    return:\n      type: System.Windows.Media.Matrix\n      description: The transformation matrix.\n  overload: System.Windows.Media.CompositionTarget.TransformToDevice*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/CompositionTarget.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Windows.Threading.DispatcherObject\n  parent: System.Windows.Threading\n  isExternal: false\n  name: DispatcherObject\n  nameWithType: DispatcherObject\n  fullName: System.Windows.Threading.DispatcherObject\n- uid: System.Windows.Media.CompositionTarget.Dispose\n  parent: System.Windows.Media.CompositionTarget\n  isExternal: false\n  name: Dispose()\n  nameWithType: CompositionTarget.Dispose()\n  fullName: CompositionTarget.Dispose()\n- uid: System.Windows.Media.CompositionTarget.Rendering\n  parent: System.Windows.Media.CompositionTarget\n  isExternal: false\n  name: Rendering\n  nameWithType: CompositionTarget.Rendering\n  fullName: CompositionTarget.Rendering\n- uid: System.EventHandler\n  parent: System\n  isExternal: false\n  name: EventHandler\n  nameWithType: EventHandler\n  fullName: System.EventHandler\n- uid: System.Windows.Media.CompositionTarget.RootVisual\n  parent: System.Windows.Media.CompositionTarget\n  isExternal: false\n  name: RootVisual\n  nameWithType: CompositionTarget.RootVisual\n  fullName: CompositionTarget.RootVisual\n- uid: System.Windows.Media.Visual\n  parent: System.Windows.Media\n  isExternal: false\n  name: Visual\n  nameWithType: Visual\n  fullName: System.Windows.Media.Visual\n- uid: System.Windows.Media.CompositionTarget.TransformFromDevice\n  parent: System.Windows.Media.CompositionTarget\n  isExternal: false\n  name: TransformFromDevice\n  nameWithType: CompositionTarget.TransformFromDevice\n  fullName: CompositionTarget.TransformFromDevice\n- uid: System.Windows.Media.Matrix\n  parent: System.Windows.Media\n  isExternal: false\n  name: Matrix\n  nameWithType: Matrix\n  fullName: System.Windows.Media.Matrix\n- uid: System.Windows.Media.CompositionTarget.TransformToDevice\n  parent: System.Windows.Media.CompositionTarget\n  isExternal: false\n  name: TransformToDevice\n  nameWithType: CompositionTarget.TransformToDevice\n  fullName: CompositionTarget.TransformToDevice\n- uid: System.Windows.Media.CompositionTarget.Dispose*\n  parent: System.Windows.Media.CompositionTarget\n  isExternal: false\n  name: Dispose\n  nameWithType: CompositionTarget.Dispose\n  fullName: CompositionTarget.Dispose\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/CompositionTarget.xml\n- uid: System.Windows.Media.CompositionTarget.RootVisual*\n  parent: System.Windows.Media.CompositionTarget\n  isExternal: false\n  name: RootVisual\n  nameWithType: CompositionTarget.RootVisual\n  fullName: CompositionTarget.RootVisual\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/CompositionTarget.xml\n- uid: System.Windows.Media.CompositionTarget.TransformFromDevice*\n  parent: System.Windows.Media.CompositionTarget\n  isExternal: false\n  name: TransformFromDevice\n  nameWithType: CompositionTarget.TransformFromDevice\n  fullName: CompositionTarget.TransformFromDevice\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/CompositionTarget.xml\n- uid: System.Windows.Media.CompositionTarget.TransformToDevice*\n  parent: System.Windows.Media.CompositionTarget\n  isExternal: false\n  name: TransformToDevice\n  nameWithType: CompositionTarget.TransformToDevice\n  fullName: CompositionTarget.TransformToDevice\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/CompositionTarget.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Windows.Threading.DispatcherObject.CheckAccess\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: CheckAccess()\n  nameWithType: DispatcherObject.CheckAccess()\n  fullName: DispatcherObject.CheckAccess()\n- uid: System.Windows.Threading.DispatcherObject.Dispatcher\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: Dispatcher\n  nameWithType: DispatcherObject.Dispatcher\n  fullName: DispatcherObject.Dispatcher\n- uid: System.Windows.Threading.DispatcherObject.VerifyAccess\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: VerifyAccess()\n  nameWithType: DispatcherObject.VerifyAccess()\n  fullName: DispatcherObject.VerifyAccess()\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  nameWithType: IDisposable\n  fullName: System.IDisposable\n"}