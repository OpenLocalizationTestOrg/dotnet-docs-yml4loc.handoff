{"nodes":[{"content":"Implements the basic functionality required by text controls.","nodes":[{"pos":[0,61],"content":"Implements the basic functionality required by text controls.","nodes":[{"content":"Implements the basic functionality required by text controls.","pos":[0,61]}]}],"pos":[4936,4998],"yaml":true},{"content":"This class implements the core features of text manipulation controls, such as <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.RichTextBox>. These include text selection, **Clipboard** functionality, multiline text control support, and many events.","nodes":[{"pos":[0,267],"content":"This class implements the core features of text manipulation controls, such as <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.RichTextBox>. These include text selection, **Clipboard** functionality, multiline text control support, and many events.","nodes":[{"content":"This class implements the core features of text manipulation controls, such as <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph>.","pos":[0,159],"source":"This class implements the core features of text manipulation controls, such as <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.RichTextBox>."},{"content":"These include text selection, <bpt id=\"p1\">**</bpt>Clipboard<ept id=\"p1\">**</ept> functionality, multiline text control support, and many events.","pos":[160,267],"source":" These include text selection, **Clipboard** functionality, multiline text control support, and many events."}]}],"pos":[5009,5277],"yaml":true,"extradata":"MT"},{"content":"Gets or sets a value indicating whether pressing the TAB key in a multiline text box control types a TAB character in the control instead of moving the focus to the next control in the tab order.","nodes":[{"pos":[0,195],"content":"Gets or sets a value indicating whether pressing the TAB key in a multiline text box control types a TAB character in the control instead of moving the focus to the next control in the tab order.","nodes":[{"content":"Gets or sets a value indicating whether pressing the TAB key in a multiline text box control types a TAB character in the control instead of moving the focus to the next control in the tab order.","pos":[0,195]}]}],"pos":[29915,30111],"yaml":true},{"content":"The <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property must also be `true` to get a TAB character in the control.  \n  \n If the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A> property is set to `true`, the user must press CTRL+TAB to move the focus to the next control in the tab order.","nodes":[{"pos":[0,124],"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextBoxBase.Multiline%2A&gt;</ph> property must also be <ph id=\"ph2\">`true`</ph> to get a TAB character in the control.","source":"The <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property must also be `true` to get a TAB character in the control."},{"pos":[131,303],"content":"If the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A&gt;</ph> property is set to <ph id=\"ph2\">`true`</ph>, the user must press CTRL+TAB to move the focus to the next control in the tab order.","source":"If the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A> property is set to `true`, the user must press CTRL+TAB to move the focus to the next control in the tab order."}],"pos":[30122,30430],"yaml":true,"extradata":"MT"},{"content":"`true` if users can enter tabs in a multiline text box using the TAB key; `false` if pressing the TAB key moves the focus. The default is `false`.","nodes":[{"pos":[0,146],"content":"`true` if users can enter tabs in a multiline text box using the TAB key; `false` if pressing the TAB key moves the focus. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if users can enter tabs in a multiline text box using the TAB key; <ph id=\"ph2\">`false`</ph> if pressing the TAB key moves the focus.","pos":[0,122],"source":"`true` if users can enter tabs in a multiline text box using the TAB key; `false` if pressing the TAB key moves the focus."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[123,146],"source":" The default is `false`."}]}],"pos":[31508,31657],"yaml":true},{"content":"Occurs when the value of the <xref href=\"System.Windows.Forms.TextBoxBase.AcceptsTab\"></xref> property has changed.","nodes":[{"pos":[0,115],"content":"Occurs when the value of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.TextBoxBase.AcceptsTab\"&gt;&lt;/xref&gt;</ph> property has changed.","source":"Occurs when the value of the <xref href=\"System.Windows.Forms.TextBoxBase.AcceptsTab\"></xref> property has changed."}],"pos":[32703,32819],"yaml":true},{"content":"For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","nodes":[{"pos":[0,142],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","source":"For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}],"pos":[32830,32975],"yaml":true,"extradata":"MT"},{"content":"Appends text to the current text of a text box.","nodes":[{"pos":[0,47],"content":"Appends text to the current text of a text box.","nodes":[{"content":"Appends text to the current text of a text box.","pos":[0,47]}]}],"pos":[35443,35491],"yaml":true},{"content":"You can use this method to add text to the existing text in the control instead of using the concatenation operator (+) to concatenate text to the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property.","nodes":[{"pos":[0,204],"content":"You can use this method to add text to the existing text in the control instead of using the concatenation operator (+) to concatenate text to the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property.","nodes":[{"content":"You can use this method to add text to the existing text in the control instead of using the concatenation operator (+) to concatenate text to the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextBoxBase.Text%2A&gt;</ph> property.","pos":[0,204],"source":"You can use this method to add text to the existing text in the control instead of using the concatenation operator (+) to concatenate text to the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property."}]}],"pos":[35502,35707],"yaml":true,"extradata":"MT"},{"content":"The text to append to the current contents of the text box.","nodes":[{"pos":[0,59],"content":"The text to append to the current contents of the text box.","nodes":[{"content":"The text to append to the current contents of the text box.","pos":[0,59]}]}],"pos":[36740,36800],"yaml":true},{"content":"Gets or sets a value indicating whether the height of the control automatically adjusts when the font assigned to the control is changed.","nodes":[{"pos":[0,137],"content":"Gets or sets a value indicating whether the height of the control automatically adjusts when the font assigned to the control is changed.","nodes":[{"content":"Gets or sets a value indicating whether the height of the control automatically adjusts when the font assigned to the control is changed.","pos":[0,137]}]}],"pos":[37756,37894],"yaml":true},{"content":"When you set the <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> property to `true` for a <xref:System.Windows.Forms.TextBox>, when the <xref:System.Windows.Forms.Control.Font%2A> changes, the <xref:System.Windows.Forms.TextBox> expands or contracts the <xref:System.Windows.Forms.Control.Height%2A> to accommodate the larger or smaller text. The <xref:System.Windows.Forms.Control.Width%2A> of the <xref:System.Windows.Forms.TextBox> does not change.  \n  \n If you want to change the size of the control as the user enters text, you can use a <xref:System.Windows.Forms.RichTextBox> control and use its <xref:System.Windows.Forms.RichTextBox.ContentsResized> event to change its size.","nodes":[{"pos":[0,455],"content":"When you set the <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> property to `true` for a <xref:System.Windows.Forms.TextBox>, when the <xref:System.Windows.Forms.Control.Font%2A> changes, the <xref:System.Windows.Forms.TextBox> expands or contracts the <xref:System.Windows.Forms.Control.Height%2A> to accommodate the larger or smaller text. The <xref:System.Windows.Forms.Control.Width%2A> of the <xref:System.Windows.Forms.TextBox> does not change.","nodes":[{"content":"When you set the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextBoxBase.AutoSize%2A&gt;</ph> property to <ph id=\"ph2\">`true`</ph> for a <ph id=\"ph3\">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, when the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.Font%2A&gt;</ph> changes, the <ph id=\"ph5\">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> expands or contracts the <ph id=\"ph6\">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> to accommodate the larger or smaller text.","pos":[0,346],"source":"When you set the <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> property to `true` for a <xref:System.Windows.Forms.TextBox>, when the <xref:System.Windows.Forms.Control.Font%2A> changes, the <xref:System.Windows.Forms.TextBox> expands or contracts the <xref:System.Windows.Forms.Control.Height%2A> to accommodate the larger or smaller text."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph> of the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> does not change.","pos":[347,455],"source":" The <xref:System.Windows.Forms.Control.Width%2A> of the <xref:System.Windows.Forms.TextBox> does not change."}]},{"pos":[462,688],"content":"If you want to change the size of the control as the user enters text, you can use a <xref:System.Windows.Forms.RichTextBox> control and use its <xref:System.Windows.Forms.RichTextBox.ContentsResized> event to change its size.","nodes":[{"content":"If you want to change the size of the control as the user enters text, you can use a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> control and use its <ph id=\"ph2\">&lt;xref:System.Windows.Forms.RichTextBox.ContentsResized&gt;</ph> event to change its size.","pos":[0,226],"source":"If you want to change the size of the control as the user enters text, you can use a <xref:System.Windows.Forms.RichTextBox> control and use its <xref:System.Windows.Forms.RichTextBox.ContentsResized> event to change its size."}]}],"pos":[37905,38598],"yaml":true,"extradata":"MT"},{"content":"`true` if the height of the control automatically adjusts when the font is changed; otherwise, `false`. The default is `true`.","nodes":[{"pos":[0,126],"content":"`true` if the height of the control automatically adjusts when the font is changed; otherwise, `false`. The default is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the height of the control automatically adjusts when the font is changed; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,103],"source":"`true` if the height of the control automatically adjusts when the font is changed; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`true`</ph>.","pos":[104,126],"source":" The default is `true`."}]}],"pos":[39670,39799],"yaml":true},{"content":"This event is not relevant for this class.","nodes":[{"pos":[0,42],"content":"This event is not relevant for this class.","nodes":[{"content":"This event is not relevant for this class.","pos":[0,42]}]}],"pos":[40879,40922],"yaml":true},{"content":"This event is not relevant for this class.","nodes":[{"pos":[0,42],"content":"This event is not relevant for this class.","nodes":[{"content":"This event is not relevant for this class.","pos":[0,42]}]}],"pos":[40933,40976],"yaml":true,"extradata":"MT"},{"content":"Gets or sets the background color of the control.","nodes":[{"pos":[0,49],"content":"Gets or sets the background color of the control.","nodes":[{"content":"Gets or sets the background color of the control.","pos":[0,49]}]}],"pos":[42135,42185],"yaml":true},{"content":"You can use the <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> property to change the background color of the text control to blend into the color scheme of your forms.  \n  \n To change the color of the text within the control, use the <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> property. When setting the <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> property of your text control, ensure that the color you choose does not cause the text of the control to disappear. For example, if the <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> and <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> properties are both set to `Color.Black`, the text within your textbox control will not be visible.  \n  \n This property might be over ridden if the <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> property of the <xref:System.Windows.Forms.TextBoxBase> is set to `true`.","nodes":[{"pos":[0,174],"content":"You can use the <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> property to change the background color of the text control to blend into the color scheme of your forms.","nodes":[{"content":"You can use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextBoxBase.BackColor%2A&gt;</ph> property to change the background color of the text control to blend into the color scheme of your forms.","pos":[0,174],"source":"You can use the <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> property to change the background color of the text control to blend into the color scheme of your forms."}]},{"pos":[181,720],"content":"To change the color of the text within the control, use the <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> property. When setting the <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> property of your text control, ensure that the color you choose does not cause the text of the control to disappear. For example, if the <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> and <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> properties are both set to `Color.Black`, the text within your textbox control will not be visible.","nodes":[{"content":"To change the color of the text within the control, use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextBoxBase.ForeColor%2A&gt;</ph> property.","pos":[0,122],"source":"To change the color of the text within the control, use the <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> property."},{"content":"When setting the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextBoxBase.BackColor%2A&gt;</ph> property of your text control, ensure that the color you choose does not cause the text of the control to disappear.","pos":[123,309],"source":" When setting the <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> property of your text control, ensure that the color you choose does not cause the text of the control to disappear."},{"content":"For example, if the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextBoxBase.BackColor%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.TextBoxBase.ForeColor%2A&gt;</ph> properties are both set to <ph id=\"ph3\">`Color.Black`</ph>, the text within your textbox control will not be visible.","pos":[310,539],"source":" For example, if the <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> and <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> properties are both set to `Color.Black`, the text within your textbox control will not be visible."}]},{"pos":[727,894],"content":"This property might be over ridden if the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A&gt;</ph> property of the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph> is set to <ph id=\"ph3\">`true`</ph>.","source":"This property might be over ridden if the <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> property of the <xref:System.Windows.Forms.TextBoxBase> is set to `true`."}],"pos":[42196,43097],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Drawing.Color\"></xref> that represents the background of the control.","nodes":[{"pos":[0,90],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Color\"&gt;&lt;/xref&gt;</ph> that represents the background of the control.","source":"A <xref href=\"System.Drawing.Color\"></xref> that represents the background of the control."}],"pos":[43245,43336],"yaml":true},{"content":"This property is not relevant for this class.","nodes":[{"pos":[0,45],"content":"This property is not relevant for this class.","nodes":[{"content":"This property is not relevant for this class.","pos":[0,45]}]}],"pos":[44372,44418],"yaml":true},{"content":"This property is not relevant for this class.","nodes":[{"pos":[0,45],"content":"This property is not relevant for this class.","nodes":[{"content":"This property is not relevant for this class.","pos":[0,45]}]}],"pos":[44429,44475],"yaml":true,"extradata":"MT"},{"content":"The background image for the object.","nodes":[{"pos":[0,36],"content":"The background image for the object.","nodes":[{"content":"The background image for the object.","pos":[0,36]}]}],"pos":[44686,44723],"yaml":true},{"content":"Occurs when the value of the <xref href=\"System.Windows.Forms.TextBoxBase.BackgroundImage\"></xref> property changes. This event is not relevant for this class.","nodes":[{"pos":[0,159],"content":"Occurs when the value of the <xref href=\"System.Windows.Forms.TextBoxBase.BackgroundImage\"></xref> property changes. This event is not relevant for this class.","nodes":[{"content":"Occurs when the value of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.TextBoxBase.BackgroundImage\"&gt;&lt;/xref&gt;</ph> property changes.","pos":[0,116],"source":"Occurs when the value of the <xref href=\"System.Windows.Forms.TextBoxBase.BackgroundImage\"></xref> property changes."},{"content":"This event is not relevant for this class.","pos":[117,159]}]}],"pos":[45852,46012],"yaml":true},{"content":"This event is not relevant for this class.","nodes":[{"pos":[0,42],"content":"This event is not relevant for this class.","nodes":[{"content":"This event is not relevant for this class.","pos":[0,42]}]}],"pos":[46023,46066],"yaml":true,"extradata":"MT"},{"content":"This property is not relevant for this class.","nodes":[{"pos":[0,45],"content":"This property is not relevant for this class.","nodes":[{"content":"This property is not relevant for this class.","pos":[0,45]}]}],"pos":[47326,47372],"yaml":true},{"content":"This property is not relevant for this class.","nodes":[{"pos":[0,45],"content":"This property is not relevant for this class.","nodes":[{"content":"This property is not relevant for this class.","pos":[0,45]}]}],"pos":[47383,47429],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Windows.Forms.ImageLayout\"></xref> values.","nodes":[{"pos":[0,72],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.ImageLayout\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Windows.Forms.ImageLayout\"></xref> values."}],"pos":[47670,47743],"yaml":true},{"content":"Occurs when the value of the <xref href=\"System.Windows.Forms.TextBoxBase.BackgroundImageLayout\"></xref> property changes. This event is not relevant for this class.","nodes":[{"pos":[0,165],"content":"Occurs when the value of the <xref href=\"System.Windows.Forms.TextBoxBase.BackgroundImageLayout\"></xref> property changes. This event is not relevant for this class.","nodes":[{"content":"Occurs when the value of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.TextBoxBase.BackgroundImageLayout\"&gt;&lt;/xref&gt;</ph> property changes.","pos":[0,122],"source":"Occurs when the value of the <xref href=\"System.Windows.Forms.TextBoxBase.BackgroundImageLayout\"></xref> property changes."},{"content":"This event is not relevant for this class.","pos":[123,165]}]}],"pos":[48914,49080],"yaml":true},{"content":"This event is not relevant for this class.","nodes":[{"pos":[0,42],"content":"This event is not relevant for this class.","nodes":[{"content":"This event is not relevant for this class.","pos":[0,42]}]}],"pos":[49091,49134],"yaml":true,"extradata":"MT"},{"content":"Gets or sets the border type of the text box control.","nodes":[{"pos":[0,53],"content":"Gets or sets the border type of the text box control.","nodes":[{"content":"Gets or sets the border type of the text box control.","pos":[0,53]}]}],"pos":[50340,50394],"yaml":true},{"content":"You can use the <xref:System.Windows.Forms.TextBoxBase.BorderStyle%2A> property to create borderless and flat style controls, in addition to the default three-dimensional control.  \n  \n> [!NOTE]\n>  The derived class, <xref:System.Windows.Forms.RichTextBox>, does not support the `BorderStyle.FixedSingle` style. This style will cause the <xref:System.Windows.Forms.BorderStyle> to use the `BorderStyle.Fixed3D` style instead.","nodes":[{"pos":[0,179],"content":"You can use the <xref:System.Windows.Forms.TextBoxBase.BorderStyle%2A> property to create borderless and flat style controls, in addition to the default three-dimensional control.","nodes":[{"content":"You can use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextBoxBase.BorderStyle%2A&gt;</ph> property to create borderless and flat style controls, in addition to the default three-dimensional control.","pos":[0,179],"source":"You can use the <xref:System.Windows.Forms.TextBoxBase.BorderStyle%2A> property to create borderless and flat style controls, in addition to the default three-dimensional control."}]},{"pos":[187,425],"content":"[!NOTE]\n The derived class, <xref:System.Windows.Forms.RichTextBox>, does not support the `BorderStyle.FixedSingle` style. This style will cause the <xref:System.Windows.Forms.BorderStyle> to use the `BorderStyle.Fixed3D` style instead.","leadings":["","> "],"nodes":[{"content":" The derived class, <xref:System.Windows.Forms.RichTextBox>, does not support the `BorderStyle.FixedSingle` style. This style will cause the <xref:System.Windows.Forms.BorderStyle> to use the `BorderStyle.Fixed3D` style instead.","pos":[8,236],"nodes":[{"content":"The derived class, <ph id=\"ph1\">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph>, does not support the <ph id=\"ph2\">`BorderStyle.FixedSingle`</ph> style.","pos":[1,114],"source":" The derived class, <xref:System.Windows.Forms.RichTextBox>, does not support the `BorderStyle.FixedSingle` style."},{"content":"This style will cause the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.BorderStyle&gt;</ph> to use the <ph id=\"ph2\">`BorderStyle.Fixed3D`</ph> style instead.","pos":[115,228],"source":" This style will cause the <xref:System.Windows.Forms.BorderStyle> to use the `BorderStyle.Fixed3D` style instead."}]}]}],"pos":[50405,50836],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Windows.Forms.BorderStyle\"></xref> that represents the border type of the text box control. The default is `Fixed3D`.","nodes":[{"pos":[0,138],"content":"A <xref href=\"System.Windows.Forms.BorderStyle\"></xref> that represents the border type of the text box control. The default is `Fixed3D`.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.BorderStyle\"&gt;&lt;/xref&gt;</ph> that represents the border type of the text box control.","pos":[0,112],"source":"A <xref href=\"System.Windows.Forms.BorderStyle\"></xref> that represents the border type of the text box control."},{"content":"The default is <ph id=\"ph1\">`Fixed3D`</ph>.","pos":[113,138],"source":" The default is `Fixed3D`."}]}],"pos":[51941,52080],"yaml":true},{"content":"A value that is not within the range of valid values for the enumeration was assigned to the property.","nodes":[{"pos":[0,102],"content":"A value that is not within the range of valid values for the enumeration was assigned to the property.","nodes":[{"content":"A value that is not within the range of valid values for the enumeration was assigned to the property.","pos":[0,102]}]}],"pos":[52298,52401],"yaml":true},{"content":"Occurs when the value of the <xref href=\"System.Windows.Forms.TextBoxBase.BorderStyle\"></xref> property has changed.","nodes":[{"pos":[0,116],"content":"Occurs when the value of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.TextBoxBase.BorderStyle\"&gt;&lt;/xref&gt;</ph> property has changed.","source":"Occurs when the value of the <xref href=\"System.Windows.Forms.TextBoxBase.BorderStyle\"></xref> property has changed."}],"pos":[53357,53474],"yaml":true},{"content":"For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","nodes":[{"pos":[0,142],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","source":"For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}],"pos":[53485,53630],"yaml":true,"extradata":"MT"},{"content":"Gets a value indicating whether the <xref href=\"System.Windows.Forms.Control.ImeMode\"></xref> property can be set to an active value, to enable IME support.","nodes":[{"pos":[0,156],"content":"Gets a value indicating whether the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.ImeMode\"&gt;&lt;/xref&gt;</ph> property can be set to an active value, to enable IME support.","source":"Gets a value indicating whether the <xref href=\"System.Windows.Forms.Control.ImeMode\"></xref> property can be set to an active value, to enable IME support."}],"pos":[56046,56203],"yaml":true},{"content":"`false` if the <xref href=\"System.Windows.Forms.TextBoxBase.ReadOnly\"></xref> property is `true` or if this <xref href=\"System.Windows.Forms.TextBoxBase\"></xref> class is set to use a password mask character; otherwise, `true`.","nodes":[{"pos":[0,227],"content":"<ph id=\"ph1\">`false`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Forms.TextBoxBase.ReadOnly\"&gt;&lt;/xref&gt;</ph> property is <ph id=\"ph3\">`true`</ph> or if this <ph id=\"ph4\">&lt;xref href=\"System.Windows.Forms.TextBoxBase\"&gt;&lt;/xref&gt;</ph> class is set to use a password mask character; otherwise, <ph id=\"ph5\">`true`</ph>.","source":"`false` if the <xref href=\"System.Windows.Forms.TextBoxBase.ReadOnly\"></xref> property is `true` or if this <xref href=\"System.Windows.Forms.TextBoxBase\"></xref> class is set to use a password mask character; otherwise, `true`."}],"pos":[56330,56560],"yaml":true},{"content":"Gets a value indicating whether the user can undo the previous operation in a text box control.","nodes":[{"pos":[0,95],"content":"Gets a value indicating whether the user can undo the previous operation in a text box control.","nodes":[{"content":"Gets a value indicating whether the user can undo the previous operation in a text box control.","pos":[0,95]}]}],"pos":[57512,57608],"yaml":true},{"content":"If this method returns `true`, you can call the <xref:System.Windows.Forms.TextBoxBase.Undo%2A> method to undo the last operation in a text box. You can use this method in the <xref:System.Windows.Forms.MenuItem.Popup> event of a <xref:System.Windows.Forms.MenuItem>, or in code that manages the state of buttons on a <xref:System.Windows.Forms.ToolBar> to enable or disable the ability to undo the previous operation in a text box control.","nodes":[{"pos":[0,440],"content":"If this method returns `true`, you can call the <xref:System.Windows.Forms.TextBoxBase.Undo%2A> method to undo the last operation in a text box. You can use this method in the <xref:System.Windows.Forms.MenuItem.Popup> event of a <xref:System.Windows.Forms.MenuItem>, or in code that manages the state of buttons on a <xref:System.Windows.Forms.ToolBar> to enable or disable the ability to undo the previous operation in a text box control.","nodes":[{"content":"If this method returns <ph id=\"ph1\">`true`</ph>, you can call the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.TextBoxBase.Undo%2A&gt;</ph> method to undo the last operation in a text box.","pos":[0,144],"source":"If this method returns `true`, you can call the <xref:System.Windows.Forms.TextBoxBase.Undo%2A> method to undo the last operation in a text box."},{"content":"You can use this method in the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.MenuItem.Popup&gt;</ph> event of a <ph id=\"ph2\">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>, or in code that manages the state of buttons on a <ph id=\"ph3\">&lt;xref:System.Windows.Forms.ToolBar&gt;</ph> to enable or disable the ability to undo the previous operation in a text box control.","pos":[145,440],"source":" You can use this method in the <xref:System.Windows.Forms.MenuItem.Popup> event of a <xref:System.Windows.Forms.MenuItem>, or in code that manages the state of buttons on a <xref:System.Windows.Forms.ToolBar> to enable or disable the ability to undo the previous operation in a text box control."}]}],"pos":[57619,58060],"yaml":true,"extradata":"MT"},{"content":"`true` if the user can undo the previous operation performed in a text box control; otherwise, `false`.","nodes":[{"pos":[0,103],"content":"<ph id=\"ph1\">`true`</ph> if the user can undo the previous operation performed in a text box control; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the user can undo the previous operation performed in a text box control; otherwise, `false`."}],"pos":[59077,59183],"yaml":true},{"content":"Clears all text from the text box control.","nodes":[{"pos":[0,42],"content":"Clears all text from the text box control.","nodes":[{"content":"Clears all text from the text box control.","pos":[0,42]}]}],"pos":[60209,60252],"yaml":true},{"content":"You can use this method to clear the contents of the control instead of assigning the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property an empty string.","nodes":[{"pos":[0,159],"content":"You can use this method to clear the contents of the control instead of assigning the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property an empty string.","nodes":[{"content":"You can use this method to clear the contents of the control instead of assigning the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextBoxBase.Text%2A&gt;</ph> property an empty string.","pos":[0,159],"source":"You can use this method to clear the contents of the control instead of assigning the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property an empty string."}]}],"pos":[60263,60423],"yaml":true,"extradata":"MT"},{"content":"Clears information about the most recent operation from the undo buffer of the text box.","nodes":[{"pos":[0,88],"content":"Clears information about the most recent operation from the undo buffer of the text box.","nodes":[{"content":"Clears information about the most recent operation from the undo buffer of the text box.","pos":[0,88]}]}],"pos":[62762,62851],"yaml":true},{"content":"You can use this method to prevent an undo operation from repeating, based on the state of your application.","nodes":[{"pos":[0,108],"content":"You can use this method to prevent an undo operation from repeating, based on the state of your application.","nodes":[{"content":"You can use this method to prevent an undo operation from repeating, based on the state of your application.","pos":[0,108]}]}],"pos":[62862,62971],"yaml":true,"extradata":"MT"},{"content":"Occurs when the text box is clicked.","nodes":[{"pos":[0,36],"content":"Occurs when the text box is clicked.","nodes":[{"content":"Occurs when the text box is clicked.","pos":[0,36]}]}],"pos":[64871,64908],"yaml":true},{"content":"For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","nodes":[{"pos":[0,142],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","source":"For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}],"pos":[64919,65064],"yaml":true,"extradata":"MT"},{"content":"Copies the current selection in the text box to the **Clipboard**.","nodes":[{"pos":[0,66],"content":"Copies the current selection in the text box to the <bpt id=\"p1\">**</bpt>Clipboard<ept id=\"p1\">**</ept>.","source":"Copies the current selection in the text box to the **Clipboard**."}],"pos":[67101,67168],"yaml":true},{"content":"You can use this method, instead of using the <xref:System.Windows.Forms.Clipboard> class, to copy text in the text box and place it in the **Clipboard**.","nodes":[{"pos":[0,154],"content":"You can use this method, instead of using the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Clipboard&gt;</ph> class, to copy text in the text box and place it in the <bpt id=\"p1\">**</bpt>Clipboard<ept id=\"p1\">**</ept>.","source":"You can use this method, instead of using the <xref:System.Windows.Forms.Clipboard> class, to copy text in the text box and place it in the **Clipboard**."}],"pos":[67179,67334],"yaml":true,"extradata":"MT"},{"content":"Creates a handle for the control.","nodes":[{"pos":[0,33],"content":"Creates a handle for the control.","nodes":[{"content":"Creates a handle for the control.","pos":[0,33]}]}],"pos":[69295,69329],"yaml":true},{"content":"Gets the required creation parameters when the control handle is created.","nodes":[{"pos":[0,73],"content":"Gets the required creation parameters when the control handle is created.","nodes":[{"content":"Gets the required creation parameters when the control handle is created.","pos":[0,73]}]}],"pos":[70416,70490],"yaml":true},{"content":"A <xref href=\"System.Windows.Forms.CreateParams\"></xref> that contains the required creation parameters when the handle to the control is created.","nodes":[{"pos":[0,146],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.CreateParams\"&gt;&lt;/xref&gt;</ph> that contains the required creation parameters when the handle to the control is created.","source":"A <xref href=\"System.Windows.Forms.CreateParams\"></xref> that contains the required creation parameters when the handle to the control is created."}],"pos":[70665,70812],"yaml":true},{"content":"Moves the current selection in the text box to the **Clipboard**.","nodes":[{"pos":[0,65],"content":"Moves the current selection in the text box to the <bpt id=\"p1\">**</bpt>Clipboard<ept id=\"p1\">**</ept>.","source":"Moves the current selection in the text box to the **Clipboard**."}],"pos":[71766,71832],"yaml":true},{"content":"This method will only cut text from the text box if text is selected in the control. You can use this method, instead of using the <xref:System.Windows.Forms.Clipboard> class, to copy text in the text box and move it to the **Clipboard**.","nodes":[{"pos":[0,238],"content":"This method will only cut text from the text box if text is selected in the control. You can use this method, instead of using the <xref:System.Windows.Forms.Clipboard> class, to copy text in the text box and move it to the **Clipboard**.","nodes":[{"content":"This method will only cut text from the text box if text is selected in the control.","pos":[0,84]},{"content":"You can use this method, instead of using the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Clipboard&gt;</ph> class, to copy text in the text box and move it to the <bpt id=\"p1\">**</bpt>Clipboard<ept id=\"p1\">**</ept>.","pos":[85,238],"source":" You can use this method, instead of using the <xref:System.Windows.Forms.Clipboard> class, to copy text in the text box and move it to the **Clipboard**."}]}],"pos":[71843,72082],"yaml":true,"extradata":"MT"},{"content":"Gets or sets the default cursor for the control.","nodes":[{"pos":[0,48],"content":"Gets or sets the default cursor for the control.","nodes":[{"content":"Gets or sets the default cursor for the control.","pos":[0,48]}]}],"pos":[74043,74092],"yaml":true},{"content":"Override <xref:System.Windows.Forms.TextBoxBase.DefaultCursor%2A> to configure a default cursor for your control. This is more efficient than setting the cursor in the control's constructor, and gives automatic support for certain cursor-related designer functions.","nodes":[{"pos":[0,265],"content":"Override <xref:System.Windows.Forms.TextBoxBase.DefaultCursor%2A> to configure a default cursor for your control. This is more efficient than setting the cursor in the control's constructor, and gives automatic support for certain cursor-related designer functions.","nodes":[{"content":"Override <xref:System.Windows.Forms.TextBoxBase.DefaultCursor%2A> to configure a default cursor for your control. This is more efficient than setting the cursor in the control's constructor, and gives automatic support for certain cursor-related designer functions.","pos":[0,265],"nodes":[{"content":"Override <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextBoxBase.DefaultCursor%2A&gt;</ph> to configure a default cursor for your control.","pos":[0,113],"source":"Override <xref:System.Windows.Forms.TextBoxBase.DefaultCursor%2A> to configure a default cursor for your control."},{"content":"This is more efficient than setting the cursor in the control's constructor, and gives automatic support for certain cursor-related designer functions.","pos":[114,265]}]}]}],"pos":[74103,74369],"yaml":true,"extradata":"MT"},{"content":"An object of type <xref href=\"System.Windows.Forms.Cursor\"></xref> representing the current default cursor.","nodes":[{"pos":[0,107],"content":"An object of type <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Cursor\"&gt;&lt;/xref&gt;</ph> representing the current default cursor.","source":"An object of type <xref href=\"System.Windows.Forms.Cursor\"></xref> representing the current default cursor."}],"pos":[74533,74641],"yaml":true},{"content":"Gets the default size of the control.","nodes":[{"pos":[0,37],"content":"Gets the default size of the control.","nodes":[{"content":"Gets the default size of the control.","pos":[0,37]}]}],"pos":[75640,75678],"yaml":true},{"content":"The default <xref href=\"System.Drawing.Size\"></xref> of the control.","nodes":[{"pos":[0,68],"content":"The default <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Size\"&gt;&lt;/xref&gt;</ph> of the control.","source":"The default <xref href=\"System.Drawing.Size\"></xref> of the control."}],"pos":[75824,75893],"yaml":true},{"content":"Specifies that the value of the <xref href=\"System.Windows.Forms.TextBoxBase.SelectionLength\"></xref> property is zero so that no characters are selected in the control.","nodes":[{"pos":[0,169],"content":"Specifies that the value of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.TextBoxBase.SelectionLength\"&gt;&lt;/xref&gt;</ph> property is zero so that no characters are selected in the control.","source":"Specifies that the value of the <xref href=\"System.Windows.Forms.TextBoxBase.SelectionLength\"></xref> property is zero so that no characters are selected in the control."}],"pos":[76894,77064],"yaml":true},{"content":"Gets or sets a value indicating whether control drawing is done in a buffer before the control is displayed. This property is not relevant for this class.","nodes":[{"pos":[0,154],"content":"Gets or sets a value indicating whether control drawing is done in a buffer before the control is displayed. This property is not relevant for this class.","nodes":[{"content":"Gets or sets a value indicating whether control drawing is done in a buffer before the control is displayed. This property is not relevant for this class.","pos":[0,154],"nodes":[{"content":"Gets or sets a value indicating whether control drawing is done in a buffer before the control is displayed.","pos":[0,108]},{"content":"This property is not relevant for this class.","pos":[109,154]}]}]}],"pos":[78149,78304],"yaml":true},{"content":"This property is not relevant for this class.","nodes":[{"pos":[0,45],"content":"This property is not relevant for this class.","nodes":[{"content":"This property is not relevant for this class.","pos":[0,45]}]}],"pos":[78315,78361],"yaml":true,"extradata":"MT"},{"content":"`true` to implement double buffering on the control; otherwise, `false`.","nodes":[{"pos":[0,72],"content":"<ph id=\"ph1\">`true`</ph> to implement double buffering on the control; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to implement double buffering on the control; otherwise, `false`."}],"pos":[78495,78570],"yaml":true},{"content":"Gets or sets the foreground color of the control.","nodes":[{"pos":[0,49],"content":"Gets or sets the foreground color of the control.","nodes":[{"content":"Gets or sets the foreground color of the control.","pos":[0,49]}]}],"pos":[79575,79625],"yaml":true},{"content":"You can use the <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> property to change the color of the text within the control to match the text of other controls on your form. You can also use this property to highlight a specific text box that contains an invalid value.  \n  \n To change the background color of the control, use the <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> property. When setting the <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> property of your text control, ensure that the color you choose does not cause the text of the control to disappear. For example, if the <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> and <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> properties are both set to `Color.Black`, the text within your textbox control will not be visible.  \n  \n This property might be over ridden if the <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> property of the <xref:System.Windows.Forms.TextBoxBase> is set to `true`.","nodes":[{"pos":[0,274],"content":"You can use the <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> property to change the color of the text within the control to match the text of other controls on your form. You can also use this property to highlight a specific text box that contains an invalid value.","nodes":[{"content":"You can use the <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> property to change the color of the text within the control to match the text of other controls on your form. You can also use this property to highlight a specific text box that contains an invalid value.","pos":[0,274],"nodes":[{"content":"You can use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextBoxBase.ForeColor%2A&gt;</ph> property to change the color of the text within the control to match the text of other controls on your form.","pos":[0,178],"source":"You can use the <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> property to change the color of the text within the control to match the text of other controls on your form."},{"content":"You can also use this property to highlight a specific text box that contains an invalid value.","pos":[179,274]}]}]},{"pos":[281,815],"content":"To change the background color of the control, use the <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> property. When setting the <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> property of your text control, ensure that the color you choose does not cause the text of the control to disappear. For example, if the <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> and <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> properties are both set to `Color.Black`, the text within your textbox control will not be visible.","nodes":[{"content":"To change the background color of the control, use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextBoxBase.BackColor%2A&gt;</ph> property.","pos":[0,117],"source":"To change the background color of the control, use the <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> property."},{"content":"When setting the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextBoxBase.ForeColor%2A&gt;</ph> property of your text control, ensure that the color you choose does not cause the text of the control to disappear.","pos":[118,304],"source":" When setting the <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> property of your text control, ensure that the color you choose does not cause the text of the control to disappear."},{"content":"For example, if the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextBoxBase.ForeColor%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.TextBoxBase.BackColor%2A&gt;</ph> properties are both set to <ph id=\"ph3\">`Color.Black`</ph>, the text within your textbox control will not be visible.","pos":[305,534],"source":" For example, if the <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> and <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> properties are both set to `Color.Black`, the text within your textbox control will not be visible."}]},{"pos":[822,989],"content":"This property might be over ridden if the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A&gt;</ph> property of the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph> is set to <ph id=\"ph3\">`true`</ph>.","source":"This property might be over ridden if the <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> property of the <xref:System.Windows.Forms.TextBoxBase> is set to `true`."}],"pos":[79636,80632],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Drawing.Color\"></xref> that represents the control's foreground color.","nodes":[{"pos":[0,91],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Color\"&gt;&lt;/xref&gt;</ph> that represents the control's foreground color.","source":"A <xref href=\"System.Drawing.Color\"></xref> that represents the control's foreground color."}],"pos":[80780,80872],"yaml":true},{"content":"Retrieves the character that is closest to the specified location within the control.","nodes":[{"pos":[0,85],"content":"Retrieves the character that is closest to the specified location within the control.","nodes":[{"content":"Retrieves the character that is closest to the specified location within the control.","pos":[0,85]}]}],"pos":[82017,82103],"yaml":true},{"content":"If the location specified in the `pt` parameter is outside the client area of the control, the first character of the string closest to the point specified in `pt` is returned. You can use this method to determine which characters are located near a specific point within the control. You can then use this value to perform operations on the text at that location.  \n  \n> [!NOTE]\n>  If the specified location in the `pt` parameter is located on the right side of the client area of the control, the last character of the string closest to the point specified in `pt` is returned.","nodes":[{"pos":[0,364],"content":"If the location specified in the `pt` parameter is outside the client area of the control, the first character of the string closest to the point specified in `pt` is returned. You can use this method to determine which characters are located near a specific point within the control. You can then use this value to perform operations on the text at that location.","nodes":[{"content":"If the location specified in the <ph id=\"ph1\">`pt`</ph> parameter is outside the client area of the control, the first character of the string closest to the point specified in <ph id=\"ph2\">`pt`</ph> is returned.","pos":[0,176],"source":"If the location specified in the `pt` parameter is outside the client area of the control, the first character of the string closest to the point specified in `pt` is returned."},{"content":"You can use this method to determine which characters are located near a specific point within the control.","pos":[177,284]},{"content":"You can then use this value to perform operations on the text at that location.","pos":[285,364]}]},{"pos":[372,579],"content":"[!NOTE]\n If the specified location in the `pt` parameter is located on the right side of the client area of the control, the last character of the string closest to the point specified in `pt` is returned.","leadings":["","> "],"nodes":[{"content":"If the specified location in the <ph id=\"ph1\">`pt`</ph> parameter is located on the right side of the client area of the control, the last character of the string closest to the point specified in <ph id=\"ph2\">`pt`</ph> is returned.","pos":[9,205],"source":" If the specified location in the `pt` parameter is located on the right side of the client area of the control, the last character of the string closest to the point specified in `pt` is returned."}]}],"pos":[82114,82699],"yaml":true,"extradata":"MT"},{"content":"The location from which to seek the nearest character.","nodes":[{"pos":[0,54],"content":"The location from which to seek the nearest character.","nodes":[{"content":"The location from which to seek the nearest character.","pos":[0,54]}]}],"pos":[82870,82925],"yaml":true},{"content":"The character at the specified location.","nodes":[{"pos":[0,40],"content":"The character at the specified location.","nodes":[{"content":"The character at the specified location.","pos":[0,40]}]}],"pos":[82980,83021],"yaml":true},{"content":"Retrieves the index of the character nearest to the specified location.","nodes":[{"pos":[0,71],"content":"Retrieves the index of the character nearest to the specified location.","nodes":[{"content":"Retrieves the index of the character nearest to the specified location.","pos":[0,71]}]}],"pos":[84189,84261],"yaml":true},{"content":"This method returns the character index that is closest to the position specified in the `pt` parameter. The character index is a zero-based index of text in the control, including spaces. You can use this method to determine where in the text the user has the mouse over by passing the mouse coordinates to this method. This can be useful if you want to perform tasks when the user rests the mouse pointer over a word in the text of the control.  \n  \n> [!IMPORTANT]\n>  If the specified location is not within the client rectangle of the control, or is beyond the last character in the control, the return value is the index of the last character.","nodes":[{"pos":[0,446],"content":"This method returns the character index that is closest to the position specified in the `pt` parameter. The character index is a zero-based index of text in the control, including spaces. You can use this method to determine where in the text the user has the mouse over by passing the mouse coordinates to this method. This can be useful if you want to perform tasks when the user rests the mouse pointer over a word in the text of the control.","nodes":[{"content":"This method returns the character index that is closest to the position specified in the <ph id=\"ph1\">`pt`</ph> parameter.","pos":[0,104],"source":"This method returns the character index that is closest to the position specified in the `pt` parameter."},{"content":"The character index is a zero-based index of text in the control, including spaces.","pos":[105,188]},{"content":"You can use this method to determine where in the text the user has the mouse over by passing the mouse coordinates to this method.","pos":[189,320]},{"content":"This can be useful if you want to perform tasks when the user rests the mouse pointer over a word in the text of the control.","pos":[321,446]}]},{"pos":[454,647],"content":"[!IMPORTANT]\n If the specified location is not within the client rectangle of the control, or is beyond the last character in the control, the return value is the index of the last character.","leadings":["","> "],"nodes":[{"content":"If the specified location is not within the client rectangle of the control, or is beyond the last character in the control, the return value is the index of the last character.","pos":[14,191]}]}],"pos":[84272,84925],"yaml":true,"extradata":"MT"},{"content":"The location to search.","nodes":[{"pos":[0,23],"content":"The location to search.","nodes":[{"content":"The location to search.","pos":[0,23]}]}],"pos":[85100,85124],"yaml":true},{"content":"The zero-based character index at the specified location.","nodes":[{"pos":[0,57],"content":"The zero-based character index at the specified location.","nodes":[{"content":"The zero-based character index at the specified location.","pos":[0,57]}]}],"pos":[85180,85238],"yaml":true},{"content":"Retrieves the index of the first character of a given line.","nodes":[{"pos":[0,59],"content":"Retrieves the index of the first character of a given line.","nodes":[{"content":"Retrieves the index of the first character of a given line.","pos":[0,59]}]}],"pos":[86393,86453],"yaml":true},{"content":"Line numbering in the text box starts at zero. If the `lineNumber` parameter is greater than the last line in the text box, <xref:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine%2A> returns -1.  \n  \n <xref:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine%2A> returns the first character index of a physical line. The physical line is the displayed line, not the assigned line. The number of displayed lines can be greater than the number of assigned lines due to word wrap. For example, if you assign two long lines to a <xref:System.Windows.Forms.RichTextBox> control and set <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> to `true`, the two long assigned lines result in four physical (or displayed lines).","nodes":[{"pos":[0,204],"content":"Line numbering in the text box starts at zero. If the `lineNumber` parameter is greater than the last line in the text box, <xref:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine%2A> returns -1.","nodes":[{"content":"Line numbering in the text box starts at zero.","pos":[0,46]},{"content":"If the <ph id=\"ph1\">`lineNumber`</ph> parameter is greater than the last line in the text box, <ph id=\"ph2\">&lt;xref:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine%2A&gt;</ph> returns -1.","pos":[47,204],"source":" If the `lineNumber` parameter is greater than the last line in the text box, <xref:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine%2A> returns -1."}]},{"pos":[211,791],"content":"<xref:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine%2A> returns the first character index of a physical line. The physical line is the displayed line, not the assigned line. The number of displayed lines can be greater than the number of assigned lines due to word wrap. For example, if you assign two long lines to a <xref:System.Windows.Forms.RichTextBox> control and set <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> to `true`, the two long assigned lines result in four physical (or displayed lines).","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine%2A&gt;</ph> returns the first character index of a physical line.","pos":[0,122],"source":"<xref:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine%2A> returns the first character index of a physical line."},{"content":"The physical line is the displayed line, not the assigned line.","pos":[123,186]},{"content":"The number of displayed lines can be greater than the number of assigned lines due to word wrap.","pos":[187,283]},{"content":"For example, if you assign two long lines to a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> control and set <ph id=\"ph2\">&lt;xref:System.Windows.Forms.TextBoxBase.Multiline%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Windows.Forms.TextBoxBase.WordWrap%2A&gt;</ph> to <ph id=\"ph4\">`true`</ph>, the two long assigned lines result in four physical (or displayed lines).","pos":[284,580],"source":" For example, if you assign two long lines to a <xref:System.Windows.Forms.RichTextBox> control and set <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> to `true`, the two long assigned lines result in four physical (or displayed lines)."}]}],"pos":[86464,87260],"yaml":true,"extradata":"MT"},{"content":"The line for which to get the index of its first character.","nodes":[{"pos":[0,59],"content":"The line for which to get the index of its first character.","nodes":[{"content":"The line for which to get the index of its first character.","pos":[0,59]}]}],"pos":[87419,87479],"yaml":true},{"content":"The zero-based index of the first character in the specified line.","nodes":[{"pos":[0,66],"content":"The zero-based index of the first character in the specified line.","nodes":[{"content":"The zero-based index of the first character in the specified line.","pos":[0,66]}]}],"pos":[87535,87602],"yaml":true},{"content":"The value of the <code>lineNumber</code> parameter is less than zero.","nodes":[{"pos":[0,69],"content":"The value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">lineNumber</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is less than zero.","source":"The value of the <code>lineNumber</code> parameter is less than zero."}],"pos":[87802,87872],"yaml":true},{"content":"Retrieves the index of the first character of the current line.","nodes":[{"pos":[0,63],"content":"Retrieves the index of the first character of the current line.","nodes":[{"content":"Retrieves the index of the first character of the current line.","pos":[0,63]}]}],"pos":[88890,88954],"yaml":true},{"content":"The zero-based character index in the current line.","nodes":[{"pos":[0,51],"content":"The zero-based character index in the current line.","nodes":[{"content":"The zero-based character index in the current line.","pos":[0,51]}]}],"pos":[89098,89150],"yaml":true},{"content":"Retrieves the line number from the specified character position within the text of the control.","nodes":[{"pos":[0,95],"content":"Retrieves the line number from the specified character position within the text of the control.","nodes":[{"content":"Retrieves the line number from the specified character position within the text of the control.","pos":[0,95]}]}],"pos":[90281,90377],"yaml":true},{"content":"This method enables you to determine the line number based on the character index specified in the `index` parameter of the method. The first line of text in the control returns the value zero. The <xref:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex%2A> method returns the physical line number where the indexed character is located within the control. For example, if a portion of the first logical line of text in the control wraps to the next line, the <xref:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex%2A> method returns 1 if the character at the specified character index has wrapped to the second physical line. If <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> is set to `false`, no portion of the line wraps to the next, and the method returns 0 for the specified character index. You can use this method to determine which line a specific character index is located within. For example, after calling the <xref:System.Windows.Forms.RichTextBox.Find%2A> method to search for text, you can obtain the character index to where the search results are found. You can call this method with the character index returned by the <xref:System.Windows.Forms.RichTextBox.Find%2A> method to determine which line the word was found.  \n  \n> [!NOTE]\n>  If the character index specified in the `index` parameter is beyond the available number of lines contained within the control, the last line number is returned.","nodes":[{"pos":[0,1250],"content":"This method enables you to determine the line number based on the character index specified in the `index` parameter of the method. The first line of text in the control returns the value zero. The <xref:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex%2A> method returns the physical line number where the indexed character is located within the control. For example, if a portion of the first logical line of text in the control wraps to the next line, the <xref:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex%2A> method returns 1 if the character at the specified character index has wrapped to the second physical line. If <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> is set to `false`, no portion of the line wraps to the next, and the method returns 0 for the specified character index. You can use this method to determine which line a specific character index is located within. For example, after calling the <xref:System.Windows.Forms.RichTextBox.Find%2A> method to search for text, you can obtain the character index to where the search results are found. You can call this method with the character index returned by the <xref:System.Windows.Forms.RichTextBox.Find%2A> method to determine which line the word was found.","nodes":[{"content":"This method enables you to determine the line number based on the character index specified in the <ph id=\"ph1\">`index`</ph> parameter of the method.","pos":[0,131],"source":"This method enables you to determine the line number based on the character index specified in the `index` parameter of the method."},{"content":"The first line of text in the control returns the value zero.","pos":[132,193]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex%2A&gt;</ph> method returns the physical line number where the indexed character is located within the control.","pos":[194,360],"source":" The <xref:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex%2A> method returns the physical line number where the indexed character is located within the control."},{"content":"For example, if a portion of the first logical line of text in the control wraps to the next line, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex%2A&gt;</ph> method returns 1 if the character at the specified character index has wrapped to the second physical line.","pos":[361,635],"source":" For example, if a portion of the first logical line of text in the control wraps to the next line, the <xref:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex%2A> method returns 1 if the character at the specified character index has wrapped to the second physical line."},{"content":"If <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextBoxBase.WordWrap%2A&gt;</ph> is set to <ph id=\"ph2\">`false`</ph>, no portion of the line wraps to the next, and the method returns 0 for the specified character index.","pos":[636,811],"source":" If <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> is set to `false`, no portion of the line wraps to the next, and the method returns 0 for the specified character index."},{"content":"You can use this method to determine which line a specific character index is located within.","pos":[812,905]},{"content":"For example, after calling the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.RichTextBox.Find%2A&gt;</ph> method to search for text, you can obtain the character index to where the search results are found.","pos":[906,1085],"source":" For example, after calling the <xref:System.Windows.Forms.RichTextBox.Find%2A> method to search for text, you can obtain the character index to where the search results are found."},{"content":"You can call this method with the character index returned by the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.RichTextBox.Find%2A&gt;</ph> method to determine which line the word was found.","pos":[1086,1250],"source":" You can call this method with the character index returned by the <xref:System.Windows.Forms.RichTextBox.Find%2A> method to determine which line the word was found."}]},{"pos":[1258,1430],"content":"[!NOTE]\n If the character index specified in the `index` parameter is beyond the available number of lines contained within the control, the last line number is returned.","leadings":["","> "],"nodes":[{"content":"If the character index specified in the <ph id=\"ph1\">`index`</ph> parameter is beyond the available number of lines contained within the control, the last line number is returned.","pos":[9,170],"source":" If the character index specified in the `index` parameter is beyond the available number of lines contained within the control, the last line number is returned."}]}],"pos":[90388,91824],"yaml":true,"extradata":"MT"},{"content":"The character index position to search.","nodes":[{"pos":[0,39],"content":"The character index position to search.","nodes":[{"content":"The character index position to search.","pos":[0,39]}]}],"pos":[91976,92016],"yaml":true},{"content":"The zero-based line number in which the character index is located.","nodes":[{"pos":[0,67],"content":"The zero-based line number in which the character index is located.","nodes":[{"content":"The zero-based line number in which the character index is located.","pos":[0,67]}]}],"pos":[92072,92140],"yaml":true},{"content":"Retrieves the location within the control at the specified character index.","nodes":[{"pos":[0,75],"content":"Retrieves the location within the control at the specified character index.","nodes":[{"content":"Retrieves the location within the control at the specified character index.","pos":[0,75]}]}],"pos":[93285,93361],"yaml":true},{"content":"This method enables you to determine where in the control a specific character index is located. You can use this method for such tasks as displaying shortcut menu items or help information for a word in the control. For example, if you wanted to display a menu of options to the user when the user right clicks on a word in the control, you can use this method to determine the position of the word to properly display a <xref:System.Windows.Forms.ContextMenu> control.","nodes":[{"pos":[0,470],"content":"This method enables you to determine where in the control a specific character index is located. You can use this method for such tasks as displaying shortcut menu items or help information for a word in the control. For example, if you wanted to display a menu of options to the user when the user right clicks on a word in the control, you can use this method to determine the position of the word to properly display a <xref:System.Windows.Forms.ContextMenu> control.","nodes":[{"content":"This method enables you to determine where in the control a specific character index is located. You can use this method for such tasks as displaying shortcut menu items or help information for a word in the control. For example, if you wanted to display a menu of options to the user when the user right clicks on a word in the control, you can use this method to determine the position of the word to properly display a <xref:System.Windows.Forms.ContextMenu> control.","pos":[0,470],"nodes":[{"content":"This method enables you to determine where in the control a specific character index is located.","pos":[0,96]},{"content":"You can use this method for such tasks as displaying shortcut menu items or help information for a word in the control.","pos":[97,216]},{"content":"For example, if you wanted to display a menu of options to the user when the user right clicks on a word in the control, you can use this method to determine the position of the word to properly display a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> control.","pos":[217,470],"source":" For example, if you wanted to display a menu of options to the user when the user right clicks on a word in the control, you can use this method to determine the position of the word to properly display a <xref:System.Windows.Forms.ContextMenu> control."}]}]}],"pos":[93372,93843],"yaml":true,"extradata":"MT"},{"content":"The index of the character for which to retrieve the location.","nodes":[{"pos":[0,62],"content":"The index of the character for which to retrieve the location.","nodes":[{"content":"The index of the character for which to retrieve the location.","pos":[0,62]}]}],"pos":[94016,94079],"yaml":true},{"content":"The location of the specified character within the client rectangle of the control.","nodes":[{"pos":[0,83],"content":"The location of the specified character within the client rectangle of the control.","nodes":[{"content":"The location of the specified character within the client rectangle of the control.","pos":[0,83]}]}],"pos":[94143,94227],"yaml":true},{"content":"Gets or sets a value indicating whether the selected text in the text box control remains highlighted when the control loses focus.","nodes":[{"pos":[0,131],"content":"Gets or sets a value indicating whether the selected text in the text box control remains highlighted when the control loses focus.","nodes":[{"content":"Gets or sets a value indicating whether the selected text in the text box control remains highlighted when the control loses focus.","pos":[0,131]}]}],"pos":[95249,95381],"yaml":true},{"content":"You can use this property to keep text highlighted in a text box control while another form or a dialog box has focus, such as a spelling checker dialog box.","nodes":[{"pos":[0,157],"content":"You can use this property to keep text highlighted in a text box control while another form or a dialog box has focus, such as a spelling checker dialog box.","nodes":[{"content":"You can use this property to keep text highlighted in a text box control while another form or a dialog box has focus, such as a spelling checker dialog box.","pos":[0,157]}]}],"pos":[95392,95550],"yaml":true,"extradata":"MT"},{"content":"`true` if the selected text does not appear highlighted when the text box control loses focus; `false`, if the selected text remains highlighted when the text box control loses focus. The default is `true`.","nodes":[{"pos":[0,206],"content":"`true` if the selected text does not appear highlighted when the text box control loses focus; `false`, if the selected text remains highlighted when the text box control loses focus. The default is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the selected text does not appear highlighted when the text box control loses focus; <ph id=\"ph2\">`false`</ph>, if the selected text remains highlighted when the text box control loses focus.","pos":[0,183],"source":"`true` if the selected text does not appear highlighted when the text box control loses focus; `false`, if the selected text remains highlighted when the text box control loses focus."},{"content":"The default is <ph id=\"ph1\">`true`</ph>.","pos":[184,206],"source":" The default is `true`."}]}],"pos":[96447,96656],"yaml":true},{"content":"Occurs when the value of the <xref href=\"System.Windows.Forms.TextBoxBase.HideSelection\"></xref> property has changed.","nodes":[{"pos":[0,118],"content":"Occurs when the value of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.TextBoxBase.HideSelection\"&gt;&lt;/xref&gt;</ph> property has changed.","source":"Occurs when the value of the <xref href=\"System.Windows.Forms.TextBoxBase.HideSelection\"></xref> property has changed."}],"pos":[97723,97842],"yaml":true},{"content":"For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","nodes":[{"pos":[0,142],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","source":"For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}],"pos":[97853,97998],"yaml":true,"extradata":"MT"},{"content":"Gets or sets the Input Method Editor (IME) mode of a control.","nodes":[{"pos":[0,61],"content":"Gets or sets the Input Method Editor (IME) mode of a control.","nodes":[{"content":"Gets or sets the Input Method Editor (IME) mode of a control.","pos":[0,61]}]}],"pos":[100414,100476],"yaml":true},{"content":"The IME mode of the control.","nodes":[{"pos":[0,28],"content":"The IME mode of the control.","nodes":[{"content":"The IME mode of the control.","pos":[0,28]}]}],"pos":[100645,100674],"yaml":true},{"content":"Determines whether the specified key is an input key or a special key that requires preprocessing.","nodes":[{"pos":[0,98],"content":"Determines whether the specified key is an input key or a special key that requires preprocessing.","nodes":[{"content":"Determines whether the specified key is an input key or a special key that requires preprocessing.","pos":[0,98]}]}],"pos":[101762,101861],"yaml":true},{"content":"The <xref:System.Windows.Forms.TextBoxBase.IsInputKey%2A> method returns `true` when the `keyData` parameter includes the <xref:System.Windows.Forms.Keys.Tab> value and the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A> property is `true`. <xref:System.Windows.Forms.TextBoxBase.IsInputKey%2A> returns `false` if `keyData` contains both <xref:System.Windows.Forms.Keys.Tab> and <xref:System.Windows.Forms.Keys.Control>.","nodes":[{"pos":[0,426],"content":"The <xref:System.Windows.Forms.TextBoxBase.IsInputKey%2A> method returns `true` when the `keyData` parameter includes the <xref:System.Windows.Forms.Keys.Tab> value and the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A> property is `true`. <xref:System.Windows.Forms.TextBoxBase.IsInputKey%2A> returns `false` if `keyData` contains both <xref:System.Windows.Forms.Keys.Tab> and <xref:System.Windows.Forms.Keys.Control>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextBoxBase.IsInputKey%2A&gt;</ph> method returns <ph id=\"ph2\">`true`</ph> when the <ph id=\"ph3\">`keyData`</ph> parameter includes the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Keys.Tab&gt;</ph> value and the <ph id=\"ph5\">&lt;xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A&gt;</ph> property is <ph id=\"ph6\">`true`</ph>.","pos":[0,246],"source":"The <xref:System.Windows.Forms.TextBoxBase.IsInputKey%2A> method returns `true` when the `keyData` parameter includes the <xref:System.Windows.Forms.Keys.Tab> value and the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A> property is `true`."},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextBoxBase.IsInputKey%2A&gt;</ph> returns <ph id=\"ph2\">`false`</ph> if <ph id=\"ph3\">`keyData`</ph> contains both <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Keys.Tab&gt;</ph> and <ph id=\"ph5\">&lt;xref:System.Windows.Forms.Keys.Control&gt;</ph>.","pos":[247,426],"source":" <xref:System.Windows.Forms.TextBoxBase.IsInputKey%2A> returns `false` if `keyData` contains both <xref:System.Windows.Forms.Keys.Tab> and <xref:System.Windows.Forms.Keys.Control>."}]}],"pos":[101872,102299],"yaml":true,"extradata":"MT"},{"content":"One of the Keys value.","nodes":[{"pos":[0,22],"content":"One of the Keys value.","nodes":[{"content":"One of the Keys value.","pos":[0,22]}]}],"pos":[102485,102508],"yaml":true},{"content":"`true` if the specified key is an input key; otherwise, `false`.","nodes":[{"pos":[0,64],"content":"<ph id=\"ph1\">`true`</ph> if the specified key is an input key; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the specified key is an input key; otherwise, `false`."}],"pos":[102566,102633],"yaml":true},{"content":"Gets or sets the lines of text in a text box control.","nodes":[{"pos":[0,53],"content":"Gets or sets the lines of text in a text box control.","nodes":[{"content":"Gets or sets the lines of text in a text box control.","pos":[0,53]}]}],"pos":[103593,103647],"yaml":true},{"content":"Each element in the array becomes a line of text in the text box control. If the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property of the text box control is set to `true` and a newline character appears in the text, the text following the newline character is added to a new element in the array and displayed on a separate line.  \n  \n> [!NOTE]\n>  By default, the collection of lines is a read-only copy of the lines in the <xref:System.Windows.Forms.TextBox>. To get a writable collection of lines, use code similar to the following: `textBox1.Lines = new string[] { \"abcd\" };`","nodes":[{"pos":[0,342],"content":"Each element in the array becomes a line of text in the text box control. If the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property of the text box control is set to `true` and a newline character appears in the text, the text following the newline character is added to a new element in the array and displayed on a separate line.","nodes":[{"content":"Each element in the array becomes a line of text in the text box control.","pos":[0,73]},{"content":"If the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextBoxBase.Multiline%2A&gt;</ph> property of the text box control is set to <ph id=\"ph2\">`true`</ph> and a newline character appears in the text, the text following the newline character is added to a new element in the array and displayed on a separate line.","pos":[74,342],"source":" If the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property of the text box control is set to `true` and a newline character appears in the text, the text following the newline character is added to a new element in the array and displayed on a separate line."}]},{"pos":[350,591],"content":"[!NOTE]\n By default, the collection of lines is a read-only copy of the lines in the <xref:System.Windows.Forms.TextBox>. To get a writable collection of lines, use code similar to the following: `textBox1.Lines = new string[] { \"abcd\" };`","leadings":["","> "],"nodes":[{"content":" By default, the collection of lines is a read-only copy of the lines in the <xref:System.Windows.Forms.TextBox>. To get a writable collection of lines, use code similar to the following: `textBox1.Lines = new string[] { \"abcd\" };`","pos":[8,239],"nodes":[{"content":"By default, the collection of lines is a read-only copy of the lines in the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.","pos":[1,113],"source":" By default, the collection of lines is a read-only copy of the lines in the <xref:System.Windows.Forms.TextBox>."},{"content":"To get a writable collection of lines, use code similar to the following: <ph id=\"ph1\">`textBox1.Lines = new string[] { \"abcd\" };`</ph>","pos":[114,231],"source":" To get a writable collection of lines, use code similar to the following: `textBox1.Lines = new string[] { \"abcd\" };`"}]}]}],"pos":[103658,104257],"yaml":true,"extradata":"MT"},{"content":"An array of strings that contains the text in a text box control.","nodes":[{"pos":[0,65],"content":"An array of strings that contains the text in a text box control.","nodes":[{"content":"An array of strings that contains the text in a text box control.","pos":[0,65]}]}],"pos":[105262,105328],"yaml":true},{"content":"Gets or sets the maximum number of characters the user can type or paste into the text box control.","nodes":[{"pos":[0,99],"content":"Gets or sets the maximum number of characters the user can type or paste into the text box control.","nodes":[{"content":"Gets or sets the maximum number of characters the user can type or paste into the text box control.","pos":[0,99]}]}],"pos":[106324,106424],"yaml":true},{"content":"You can use this property to restrict the length of text entered in the control for values such as postal codes and telephone numbers, or to restrict the length of text entered when the data is to be entered in a database. You can limit the text entered into the control to the maximum length of the corresponding field in the database.  \n  \n> [!NOTE]\n>  In code, you can set the value of the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property to a value that has a length greater than the value specified by the <xref:System.Windows.Forms.TextBoxBase.MaxLength%2A> property. This property only affects text entered into the control at run time.","nodes":[{"pos":[0,336],"content":"You can use this property to restrict the length of text entered in the control for values such as postal codes and telephone numbers, or to restrict the length of text entered when the data is to be entered in a database. You can limit the text entered into the control to the maximum length of the corresponding field in the database.","nodes":[{"content":"You can use this property to restrict the length of text entered in the control for values such as postal codes and telephone numbers, or to restrict the length of text entered when the data is to be entered in a database. You can limit the text entered into the control to the maximum length of the corresponding field in the database.","pos":[0,336],"nodes":[{"content":"You can use this property to restrict the length of text entered in the control for values such as postal codes and telephone numbers, or to restrict the length of text entered when the data is to be entered in a database.","pos":[0,222]},{"content":"You can limit the text entered into the control to the maximum length of the corresponding field in the database.","pos":[223,336]}]}]},{"pos":[344,651],"content":"[!NOTE]\n In code, you can set the value of the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property to a value that has a length greater than the value specified by the <xref:System.Windows.Forms.TextBoxBase.MaxLength%2A> property. This property only affects text entered into the control at run time.","leadings":["","> "],"nodes":[{"content":" In code, you can set the value of the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property to a value that has a length greater than the value specified by the <xref:System.Windows.Forms.TextBoxBase.MaxLength%2A> property. This property only affects text entered into the control at run time.","pos":[8,305],"nodes":[{"content":"In code, you can set the value of the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextBoxBase.Text%2A&gt;</ph> property to a value that has a length greater than the value specified by the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.TextBoxBase.MaxLength%2A&gt;</ph> property.","pos":[1,227],"source":" In code, you can set the value of the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property to a value that has a length greater than the value specified by the <xref:System.Windows.Forms.TextBoxBase.MaxLength%2A> property."},{"content":"This property only affects text entered into the control at run time.","pos":[228,297]}]}]}],"pos":[106435,107092],"yaml":true,"extradata":"MT"},{"content":"The number of characters that can be entered into the control. The default is 32767.","nodes":[{"pos":[0,84],"content":"The number of characters that can be entered into the control. The default is 32767.","nodes":[{"content":"The number of characters that can be entered into the control. The default is 32767.","pos":[0,84],"nodes":[{"content":"The number of characters that can be entered into the control.","pos":[0,62]},{"content":"The default is 32767.","pos":[63,84]}]}]}],"pos":[108268,108353],"yaml":true},{"content":"The value assigned to the property is less than 0.","nodes":[{"pos":[0,50],"content":"The value assigned to the property is less than 0.","nodes":[{"content":"The value assigned to the property is less than 0.","pos":[0,50]}]}],"pos":[108537,108588],"yaml":true},{"content":"Gets or sets a value that indicates that the text box control has been modified by the user since the control was created or its contents were last set.","nodes":[{"pos":[0,152],"content":"Gets or sets a value that indicates that the text box control has been modified by the user since the control was created or its contents were last set.","nodes":[{"content":"Gets or sets a value that indicates that the text box control has been modified by the user since the control was created or its contents were last set.","pos":[0,152]}]}],"pos":[109509,109662],"yaml":true},{"content":"You can use this property to determine if the user has modified the contents of the text box control. You can also set this property in code to indicate that changes were made to the text box control by the application. This property can be used by validation and data-saving methods to determine if changes were made in a text box control so the changed contents can be validated or saved.  \n  \n If you change the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property programmatically, the <xref:System.Windows.Forms.TextBoxBase.Modified%2A> property reverts to `false`. This does not raise the <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> event.","nodes":[{"pos":[0,390],"content":"You can use this property to determine if the user has modified the contents of the text box control. You can also set this property in code to indicate that changes were made to the text box control by the application. This property can be used by validation and data-saving methods to determine if changes were made in a text box control so the changed contents can be validated or saved.","nodes":[{"content":"You can use this property to determine if the user has modified the contents of the text box control. You can also set this property in code to indicate that changes were made to the text box control by the application. This property can be used by validation and data-saving methods to determine if changes were made in a text box control so the changed contents can be validated or saved.","pos":[0,390],"nodes":[{"content":"You can use this property to determine if the user has modified the contents of the text box control.","pos":[0,101]},{"content":"You can also set this property in code to indicate that changes were made to the text box control by the application.","pos":[102,219]},{"content":"This property can be used by validation and data-saving methods to determine if changes were made in a text box control so the changed contents can be validated or saved.","pos":[220,390]}]}]},{"pos":[397,661],"content":"If you change the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property programmatically, the <xref:System.Windows.Forms.TextBoxBase.Modified%2A> property reverts to `false`. This does not raise the <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> event.","nodes":[{"content":"If you change the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextBoxBase.Text%2A&gt;</ph> property programmatically, the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.TextBoxBase.Modified%2A&gt;</ph> property reverts to <ph id=\"ph3\">`false`</ph>.","pos":[0,177],"source":"If you change the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property programmatically, the <xref:System.Windows.Forms.TextBoxBase.Modified%2A> property reverts to `false`."},{"content":"This does not raise the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextBoxBase.ModifiedChanged&gt;</ph> event.","pos":[178,264],"source":" This does not raise the <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> event."}]}],"pos":[109673,110339],"yaml":true,"extradata":"MT"},{"content":"`true` if the control's contents have been modified; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,96],"content":"`true` if the control's contents have been modified; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the control's contents have been modified; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,72],"source":"`true` if the control's contents have been modified; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[73,96],"source":" The default is `false`."}]}],"pos":[111883,111982],"yaml":true},{"content":"Occurs when the value of the <xref href=\"System.Windows.Forms.TextBoxBase.Modified\"></xref> property has changed.","nodes":[{"pos":[0,113],"content":"Occurs when the value of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.TextBoxBase.Modified\"&gt;&lt;/xref&gt;</ph> property has changed.","source":"Occurs when the value of the <xref href=\"System.Windows.Forms.TextBoxBase.Modified\"></xref> property has changed."}],"pos":[113062,113176],"yaml":true},{"content":"If you change the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property programmatically, the <xref:System.Windows.Forms.TextBoxBase.Modified%2A> property reverts to `false`. This does not raise the <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> event.  \n  \n For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","nodes":[{"pos":[0,264],"content":"If you change the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property programmatically, the <xref:System.Windows.Forms.TextBoxBase.Modified%2A> property reverts to `false`. This does not raise the <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> event.","nodes":[{"content":"If you change the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextBoxBase.Text%2A&gt;</ph> property programmatically, the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.TextBoxBase.Modified%2A&gt;</ph> property reverts to <ph id=\"ph3\">`false`</ph>.","pos":[0,177],"source":"If you change the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property programmatically, the <xref:System.Windows.Forms.TextBoxBase.Modified%2A> property reverts to `false`."},{"content":"This does not raise the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextBoxBase.ModifiedChanged&gt;</ph> event.","pos":[178,264],"source":" This does not raise the <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> event."}]},{"pos":[271,413],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","source":"For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}],"pos":[113187,113605],"yaml":true,"extradata":"MT"},{"content":"Occurs when the control is clicked by the mouse.","nodes":[{"pos":[0,48],"content":"Occurs when the control is clicked by the mouse.","nodes":[{"content":"Occurs when the control is clicked by the mouse.","pos":[0,48]}]}],"pos":[115975,116024],"yaml":true},{"content":"The <xref:System.Windows.Forms.RichTextBox> control does not raise a <xref:System.Windows.Forms.TextBoxBase.Click> event for right clicks. The <xref:System.Windows.Forms.TextBoxBase.MouseClick> event provides the functional equivalent.  \n  \n For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","nodes":[{"pos":[0,235],"content":"The <xref:System.Windows.Forms.RichTextBox> control does not raise a <xref:System.Windows.Forms.TextBoxBase.Click> event for right clicks. The <xref:System.Windows.Forms.TextBoxBase.MouseClick> event provides the functional equivalent.","nodes":[{"content":"The <xref:System.Windows.Forms.RichTextBox> control does not raise a <xref:System.Windows.Forms.TextBoxBase.Click> event for right clicks. The <xref:System.Windows.Forms.TextBoxBase.MouseClick> event provides the functional equivalent.","pos":[0,235],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> control does not raise a <ph id=\"ph2\">&lt;xref:System.Windows.Forms.TextBoxBase.Click&gt;</ph> event for right clicks.","pos":[0,138],"source":"The <xref:System.Windows.Forms.RichTextBox> control does not raise a <xref:System.Windows.Forms.TextBoxBase.Click> event for right clicks."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextBoxBase.MouseClick&gt;</ph> event provides the functional equivalent.","pos":[139,235],"source":" The <xref:System.Windows.Forms.TextBoxBase.MouseClick> event provides the functional equivalent."}]}]},{"pos":[242,384],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","source":"For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}],"pos":[116035,116424],"yaml":true,"extradata":"MT"},{"content":"Gets or sets a value indicating whether this is a multiline text box control.","nodes":[{"pos":[0,77],"content":"Gets or sets a value indicating whether this is a multiline text box control.","nodes":[{"content":"Gets or sets a value indicating whether this is a multiline text box control.","pos":[0,77]}]}],"pos":[118964,119042],"yaml":true},{"content":"A multiline text box allows you to display more than one line of text in the control. If the <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> property is set to `true`, text entered into the multiline text box is wrapped to the next line in the control. If the <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> property is set to `false`, text entered into the multiline text box control will be displayed on the same line until a newline character is entered.  \n  \n The following can be used as newline characters:  \n  \n-   <xref:System.Environment.NewLine%2A?displayProperty=fullName>  \n  \n-   ControlChars.CrLf  \n  \n-   vbCrLf (Visual Basic only)  \n  \n You can add scroll bars to a text box using the <xref:System.Windows.Forms.TextBox.ScrollBars%2A> property to display horizontal and/or vertical scroll bars. This allows the user to scroll through the text that extends beyond the dimensions of the control.  \n  \n> [!NOTE]\n>  Because the default value of the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property is `false`, the default size of a <xref:System.Windows.Forms.TextBox> will be in accordance with the font size even if you resize the <xref:System.Windows.Forms.TextBox>. To get a consistent size for your <xref:System.Windows.Forms.TextBox>, set its <xref:System.Windows.Forms.TextBox.Multiline%2A> property to `true`.  \n  \n> [!NOTE]\n>  On Japanese operating systems, if the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property is set to `true`, setting the <xref:System.Windows.Forms.TextBox.PasswordChar%2A> property will display the text of the password, thus compromising system security. Therefore, on Japanese operating systems, set the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property to `false` if you set the <xref:System.Windows.Forms.TextBox.PasswordChar%2A> property.  \n  \n> [!NOTE]\n>  This property is set to `false` by default for all derived classes, with the exception of the <xref:System.Windows.Forms.RichTextBox> control.  \n  \n For a <xref:System.Windows.Forms.RichTextBox> control, the <xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=fullName> property affects whether or not the control will automatically resize, as follows:  \n  \n-   If <xref:System.Windows.Forms.RichTextBox.AutoSize%2A?displayProperty=fullName> is set to `true` and <xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=fullName> is set to `true`, <xref:System.Windows.Forms.RichTextBox> will not automatically resize.  \n  \n-   If <xref:System.Windows.Forms.RichTextBox.AutoSize%2A?displayProperty=fullName> is set to `true` and <xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=fullName> is set to `false`, <xref:System.Windows.Forms.RichTextBox> will automatically resize.","nodes":[{"pos":[0,465],"content":"A multiline text box allows you to display more than one line of text in the control. If the <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> property is set to `true`, text entered into the multiline text box is wrapped to the next line in the control. If the <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> property is set to `false`, text entered into the multiline text box control will be displayed on the same line until a newline character is entered.","nodes":[{"content":"A multiline text box allows you to display more than one line of text in the control.","pos":[0,85]},{"content":"If the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextBoxBase.WordWrap%2A&gt;</ph> property is set to <ph id=\"ph2\">`true`</ph>, text entered into the multiline text box is wrapped to the next line in the control.","pos":[86,256],"source":" If the <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> property is set to `true`, text entered into the multiline text box is wrapped to the next line in the control."},{"content":"If the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextBoxBase.WordWrap%2A&gt;</ph> property is set to <ph id=\"ph2\">`false`</ph>, text entered into the multiline text box control will be displayed on the same line until a newline character is entered.","pos":[257,465],"source":" If the <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> property is set to `false`, text entered into the multiline text box control will be displayed on the same line until a newline character is entered."}]},{"pos":[472,520],"content":"The following can be used as newline characters:","nodes":[{"content":"The following can be used as newline characters:","pos":[0,48]}]},{"pos":[530,591],"content":"<xref:System.Environment.NewLine%2A?displayProperty=fullName>","nodes":[]},{"pos":[601,618],"content":"ControlChars.CrLf","nodes":[{"content":"ControlChars.CrLf","pos":[0,17]}]},{"pos":[628,654],"content":"vbCrLf (Visual Basic only)","nodes":[{"content":"vbCrLf (Visual Basic only)","pos":[0,26]}]},{"pos":[661,917],"content":"You can add scroll bars to a text box using the <xref:System.Windows.Forms.TextBox.ScrollBars%2A> property to display horizontal and/or vertical scroll bars. This allows the user to scroll through the text that extends beyond the dimensions of the control.","nodes":[{"content":"You can add scroll bars to a text box using the <xref:System.Windows.Forms.TextBox.ScrollBars%2A> property to display horizontal and/or vertical scroll bars. This allows the user to scroll through the text that extends beyond the dimensions of the control.","pos":[0,256],"nodes":[{"content":"You can add scroll bars to a text box using the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextBox.ScrollBars%2A&gt;</ph> property to display horizontal and/or vertical scroll bars.","pos":[0,157],"source":"You can add scroll bars to a text box using the <xref:System.Windows.Forms.TextBox.ScrollBars%2A> property to display horizontal and/or vertical scroll bars."},{"content":"This allows the user to scroll through the text that extends beyond the dimensions of the control.","pos":[158,256]}]}]},{"pos":[925,1349],"content":"[!NOTE]\n Because the default value of the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property is `false`, the default size of a <xref:System.Windows.Forms.TextBox> will be in accordance with the font size even if you resize the <xref:System.Windows.Forms.TextBox>. To get a consistent size for your <xref:System.Windows.Forms.TextBox>, set its <xref:System.Windows.Forms.TextBox.Multiline%2A> property to `true`.","leadings":["","> "],"nodes":[{"content":" Because the default value of the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property is `false`, the default size of a <xref:System.Windows.Forms.TextBox> will be in accordance with the font size even if you resize the <xref:System.Windows.Forms.TextBox>. To get a consistent size for your <xref:System.Windows.Forms.TextBox>, set its <xref:System.Windows.Forms.TextBox.Multiline%2A> property to `true`.","pos":[8,422],"nodes":[{"content":"Because the default value of the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextBoxBase.Multiline%2A&gt;</ph> property is <ph id=\"ph2\">`false`</ph>, the default size of a <ph id=\"ph3\">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> will be in accordance with the font size even if you resize the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.","pos":[1,266],"source":" Because the default value of the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property is `false`, the default size of a <xref:System.Windows.Forms.TextBox> will be in accordance with the font size even if you resize the <xref:System.Windows.Forms.TextBox>."},{"content":"To get a consistent size for your <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, set its <ph id=\"ph2\">&lt;xref:System.Windows.Forms.TextBox.Multiline%2A&gt;</ph> property to <ph id=\"ph3\">`true`</ph>.","pos":[267,414],"source":" To get a consistent size for your <xref:System.Windows.Forms.TextBox>, set its <xref:System.Windows.Forms.TextBox.Multiline%2A> property to `true`."}]}]},{"pos":[1357,1832],"content":"[!NOTE]\n On Japanese operating systems, if the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property is set to `true`, setting the <xref:System.Windows.Forms.TextBox.PasswordChar%2A> property will display the text of the password, thus compromising system security. Therefore, on Japanese operating systems, set the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property to `false` if you set the <xref:System.Windows.Forms.TextBox.PasswordChar%2A> property.","leadings":["","> "],"nodes":[{"content":" On Japanese operating systems, if the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property is set to `true`, setting the <xref:System.Windows.Forms.TextBox.PasswordChar%2A> property will display the text of the password, thus compromising system security. Therefore, on Japanese operating systems, set the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property to `false` if you set the <xref:System.Windows.Forms.TextBox.PasswordChar%2A> property.","pos":[8,473],"nodes":[{"content":"On Japanese operating systems, if the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextBoxBase.Multiline%2A&gt;</ph> property is set to <ph id=\"ph2\">`true`</ph>, setting the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.TextBox.PasswordChar%2A&gt;</ph> property will display the text of the password, thus compromising system security.","pos":[1,265],"source":" On Japanese operating systems, if the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property is set to `true`, setting the <xref:System.Windows.Forms.TextBox.PasswordChar%2A> property will display the text of the password, thus compromising system security."},{"content":"Therefore, on Japanese operating systems, set the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextBoxBase.Multiline%2A&gt;</ph> property to <ph id=\"ph2\">`false`</ph> if you set the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.TextBox.PasswordChar%2A&gt;</ph> property.","pos":[266,465],"source":" Therefore, on Japanese operating systems, set the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property to `false` if you set the <xref:System.Windows.Forms.TextBox.PasswordChar%2A> property."}]}]},{"pos":[1840,1993],"content":"[!NOTE]\n This property is set to `false` by default for all derived classes, with the exception of the <xref:System.Windows.Forms.RichTextBox> control.","leadings":["","> "],"nodes":[{"content":"This property is set to <ph id=\"ph1\">`false`</ph> by default for all derived classes, with the exception of the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> control.","pos":[9,151],"source":" This property is set to `false` by default for all derived classes, with the exception of the <xref:System.Windows.Forms.RichTextBox> control."}]},{"pos":[2000,2219],"content":"For a <xref:System.Windows.Forms.RichTextBox> control, the <xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=fullName> property affects whether or not the control will automatically resize, as follows:","nodes":[{"content":"For a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> control, the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=fullName&gt;</ph> property affects whether or not the control will automatically resize, as follows:","pos":[0,219],"source":"For a <xref:System.Windows.Forms.RichTextBox> control, the <xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=fullName> property affects whether or not the control will automatically resize, as follows:"}]},{"pos":[2229,2496],"content":"If <ph id=\"ph1\">&lt;xref:System.Windows.Forms.RichTextBox.AutoSize%2A?displayProperty=fullName&gt;</ph> is set to <ph id=\"ph2\">`true`</ph> and <ph id=\"ph3\">&lt;xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=fullName&gt;</ph> is set to <ph id=\"ph4\">`true`</ph>, <ph id=\"ph5\">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> will not automatically resize.","source":"If <xref:System.Windows.Forms.RichTextBox.AutoSize%2A?displayProperty=fullName> is set to `true` and <xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=fullName> is set to `true`, <xref:System.Windows.Forms.RichTextBox> will not automatically resize."},{"pos":[2506,2770],"content":"If <ph id=\"ph1\">&lt;xref:System.Windows.Forms.RichTextBox.AutoSize%2A?displayProperty=fullName&gt;</ph> is set to <ph id=\"ph2\">`true`</ph> and <ph id=\"ph3\">&lt;xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=fullName&gt;</ph> is set to <ph id=\"ph4\">`false`</ph>, <ph id=\"ph5\">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> will automatically resize.","source":"If <xref:System.Windows.Forms.RichTextBox.AutoSize%2A?displayProperty=fullName> is set to `true` and <xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=fullName> is set to `false`, <xref:System.Windows.Forms.RichTextBox> will automatically resize."}],"pos":[119053,121851],"yaml":true,"extradata":"MT"},{"content":"`true` if the control is a multiline text box control; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,98],"content":"`true` if the control is a multiline text box control; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the control is a multiline text box control; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,74],"source":"`true` if the control is a multiline text box control; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[75,98],"source":" The default is `false`."}]}],"pos":[122936,123037],"yaml":true},{"content":"Occurs when the value of the <xref href=\"System.Windows.Forms.TextBoxBase.Multiline\"></xref> property has changed.","nodes":[{"pos":[0,114],"content":"Occurs when the value of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.TextBoxBase.Multiline\"&gt;&lt;/xref&gt;</ph> property has changed.","source":"Occurs when the value of the <xref href=\"System.Windows.Forms.TextBoxBase.Multiline\"></xref> property has changed."}],"pos":[124054,124169],"yaml":true},{"content":"For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","nodes":[{"pos":[0,142],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","source":"For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}],"pos":[124180,124325],"yaml":true,"extradata":"MT"},{"content":"Raises the <xref href=\"System.Windows.Forms.TextBoxBase.AcceptsTabChanged\"></xref> event.","nodes":[{"pos":[0,89],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.TextBoxBase.AcceptsTabChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.TextBoxBase.AcceptsTabChanged\"></xref> event."}],"pos":[126840,126930],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \n  \n The <xref:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,183],"content":"Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>NIB: Raising an Event<ept id=\"p1\">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.","pos":[63,183],"source":" For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)."}]},{"pos":[190,416],"content":"The <xref:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,226],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,151],"source":"The <xref:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[152,226]}]}]}],"pos":[126941,127362],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[127519,127590],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.TextBoxBase.BorderStyleChanged\"></xref> event.","nodes":[{"pos":[0,90],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.TextBoxBase.BorderStyleChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.TextBoxBase.BorderStyleChanged\"></xref> event."}],"pos":[128734,128825],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \n  \n The <xref:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,183],"content":"Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>NIB: Raising an Event<ept id=\"p1\">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.","pos":[63,183],"source":" For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)."}]},{"pos":[190,417],"content":"The <xref:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,227],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,152],"source":"The <xref:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[153,227]}]}]}],"pos":[128836,129258],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[129416,129487],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.FontChanged\"></xref> event.","nodes":[{"pos":[0,79],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.FontChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.FontChanged\"></xref> event."}],"pos":[130590,130670],"yaml":true},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[130822,130893],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.HandleCreated\"></xref> event.","nodes":[{"pos":[0,81],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.HandleCreated\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.HandleCreated\"></xref> event."}],"pos":[132001,132083],"yaml":true},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[132237,132308],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.HandleDestroyed\"></xref> event.","nodes":[{"pos":[0,83],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.HandleDestroyed\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.HandleDestroyed\"></xref> event."}],"pos":[133430,133514],"yaml":true},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[133670,133741],"yaml":true},{"content":"Raise the <xref href=\"System.Windows.Forms.TextBoxBase.HideSelectionChanged\"></xref> event.","nodes":[{"pos":[0,91],"content":"Raise the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.TextBoxBase.HideSelectionChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"Raise the <xref href=\"System.Windows.Forms.TextBoxBase.HideSelectionChanged\"></xref> event."}],"pos":[134895,134987],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \n  \n The <xref:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,183],"content":"Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>NIB: Raising an Event<ept id=\"p1\">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.","pos":[63,183],"source":" For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)."}]},{"pos":[190,419],"content":"The <xref:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,229],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,154],"source":"The <xref:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[155,229]}]}]}],"pos":[134998,135422],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[135582,135653],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.TextBoxBase.ModifiedChanged\"></xref> event.","nodes":[{"pos":[0,87],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.TextBoxBase.ModifiedChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.TextBoxBase.ModifiedChanged\"></xref> event."}],"pos":[136760,136848],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \n  \n The <xref:System.Windows.Forms.TextBoxBase.OnModifiedChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,183],"content":"Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>NIB: Raising an Event<ept id=\"p1\">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.","pos":[63,183],"source":" For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)."}]},{"pos":[190,414],"content":"The <xref:System.Windows.Forms.TextBoxBase.OnModifiedChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.TextBoxBase.OnModifiedChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,224],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextBoxBase.OnModifiedChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,149],"source":"The <xref:System.Windows.Forms.TextBoxBase.OnModifiedChanged%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[150,224]}]}]}],"pos":[136859,137278],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[137433,137504],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.MouseUp\"></xref> event.","nodes":[{"pos":[0,75],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.MouseUp\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.MouseUp\"></xref> event."}],"pos":[138652,138728],"yaml":true},{"content":"The event data.","nodes":[{"pos":[0,15],"content":"The event data.","nodes":[{"content":"The event data.","pos":[0,15]}]}],"pos":[138931,138947],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.TextBoxBase.MultilineChanged\"></xref> event.","nodes":[{"pos":[0,88],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.TextBoxBase.MultilineChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.TextBoxBase.MultilineChanged\"></xref> event."}],"pos":[140069,140158],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \n  \n The <xref:System.Windows.Forms.TextBoxBase.OnMultilineChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,183],"content":"Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>NIB: Raising an Event<ept id=\"p1\">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.","pos":[63,183],"source":" For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)."}]},{"pos":[190,415],"content":"The <xref:System.Windows.Forms.TextBoxBase.OnMultilineChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.TextBoxBase.OnMultilineChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,225],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextBoxBase.OnMultilineChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,150],"source":"The <xref:System.Windows.Forms.TextBoxBase.OnMultilineChanged%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[151,225]}]}]}],"pos":[140169,140589],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[140745,140816],"yaml":true},{"content":"This method is not relevant for this class.","nodes":[{"pos":[0,43],"content":"This method is not relevant for this class.","nodes":[{"content":"This method is not relevant for this class.","pos":[0,43]}]}],"pos":[141935,141979],"yaml":true},{"content":"This method is not relevant for this class.","nodes":[{"pos":[0,43],"content":"This method is not relevant for this class.","nodes":[{"content":"This method is not relevant for this class.","pos":[0,43]}]}],"pos":[141990,142034],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[142189,142260],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.TextBoxBase.ReadOnlyChanged\"></xref> event.","nodes":[{"pos":[0,87],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.TextBoxBase.ReadOnlyChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.TextBoxBase.ReadOnlyChanged\"></xref> event."}],"pos":[143383,143471],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \n  \n The <xref:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,183],"content":"Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>NIB: Raising an Event<ept id=\"p1\">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.","pos":[63,183],"source":" For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)."}]},{"pos":[190,414],"content":"The <xref:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,224],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,149],"source":"The <xref:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[150,224]}]}]}],"pos":[143482,143901],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[144056,144127],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.TextChanged\"></xref> event.","nodes":[{"pos":[0,79],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.TextChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.TextChanged\"></xref> event."}],"pos":[145227,145307],"yaml":true},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[145459,145530],"yaml":true},{"content":"This property is not relevant for this class.","nodes":[{"pos":[0,45],"content":"This property is not relevant for this class.","nodes":[{"content":"This property is not relevant for this class.","pos":[0,45]}]}],"pos":[146505,146551],"yaml":true},{"content":"This property is not relevant for this class.","nodes":[{"pos":[0,45],"content":"This property is not relevant for this class.","nodes":[{"content":"This property is not relevant for this class.","pos":[0,45]}]}],"pos":[146562,146608],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Windows.Forms.Padding\"></xref> value.","nodes":[{"pos":[0,58],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Padding\"&gt;&lt;/xref&gt;</ph> value.","source":"A <xref href=\"System.Windows.Forms.Padding\"></xref> value."}],"pos":[146818,146877],"yaml":true},{"content":"This event is not relevant for this class.","nodes":[{"pos":[0,42],"content":"This event is not relevant for this class.","nodes":[{"content":"This event is not relevant for this class.","pos":[0,42]}]}],"pos":[147928,147971],"yaml":true},{"content":"This event is not relevant for this class.","nodes":[{"pos":[0,42],"content":"This event is not relevant for this class.","nodes":[{"content":"This event is not relevant for this class.","pos":[0,42]}]}],"pos":[147982,148025],"yaml":true,"extradata":"MT"},{"content":"Occurs when the control is redrawn. This event is not relevant for this class.","nodes":[{"pos":[0,78],"content":"Occurs when the control is redrawn. This event is not relevant for this class.","nodes":[{"content":"Occurs when the control is redrawn. This event is not relevant for this class.","pos":[0,78],"nodes":[{"content":"Occurs when the control is redrawn.","pos":[0,35]},{"content":"This event is not relevant for this class.","pos":[36,78]}]}]}],"pos":[149178,149257],"yaml":true},{"content":"This event is not relevant for this class.","nodes":[{"pos":[0,42],"content":"This event is not relevant for this class.","nodes":[{"content":"This event is not relevant for this class.","pos":[0,42]}]}],"pos":[149268,149311],"yaml":true,"extradata":"MT"},{"content":"Replaces the current selection in the text box with the contents of the **Clipboard**.","nodes":[{"pos":[0,86],"content":"Replaces the current selection in the text box with the contents of the <bpt id=\"p1\">**</bpt>Clipboard<ept id=\"p1\">**</ept>.","source":"Replaces the current selection in the text box with the contents of the **Clipboard**."}],"pos":[150485,150572],"yaml":true},{"content":"The <xref:System.Windows.Forms.TextBoxBase.Paste%2A> method will only paste text into the control if text is currently stored in the **Clipboard**.","nodes":[{"pos":[0,147],"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextBoxBase.Paste%2A&gt;</ph> method will only paste text into the control if text is currently stored in the <bpt id=\"p1\">**</bpt>Clipboard<ept id=\"p1\">**</ept>.","source":"The <xref:System.Windows.Forms.TextBoxBase.Paste%2A> method will only paste text into the control if text is currently stored in the **Clipboard**."}],"pos":[150583,150731],"yaml":true,"extradata":"MT"},{"content":"Gets the preferred height for a text box.","nodes":[{"pos":[0,41],"content":"Gets the preferred height for a text box.","nodes":[{"content":"Gets the preferred height for a text box.","pos":[0,41]}]}],"pos":[152708,152750],"yaml":true},{"content":"The size returned by this property is based on the font height and border style of the text box. You can use this property to determine the appropriate size of the text box to ensure that text is properly displayed in the control. The value returned by this property is in pixels.  \n  \n The value of <xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A> represents the minimum height the text box must have in order to display a single line of text without clipping the text on the top or bottom. This value is the same whether the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property is set to `true` or `false`.","nodes":[{"pos":[0,280],"content":"The size returned by this property is based on the font height and border style of the text box. You can use this property to determine the appropriate size of the text box to ensure that text is properly displayed in the control. The value returned by this property is in pixels.","nodes":[{"content":"The size returned by this property is based on the font height and border style of the text box. You can use this property to determine the appropriate size of the text box to ensure that text is properly displayed in the control. The value returned by this property is in pixels.","pos":[0,280],"nodes":[{"content":"The size returned by this property is based on the font height and border style of the text box.","pos":[0,96]},{"content":"You can use this property to determine the appropriate size of the text box to ensure that text is properly displayed in the control.","pos":[97,230]},{"content":"The value returned by this property is in pixels.","pos":[231,280]}]}]},{"pos":[287,627],"content":"The value of <xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A> represents the minimum height the text box must have in order to display a single line of text without clipping the text on the top or bottom. This value is the same whether the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property is set to `true` or `false`.","nodes":[{"content":"The value of <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A&gt;</ph> represents the minimum height the text box must have in order to display a single line of text without clipping the text on the top or bottom.","pos":[0,214],"source":"The value of <xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A> represents the minimum height the text box must have in order to display a single line of text without clipping the text on the top or bottom."},{"content":"This value is the same whether the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextBoxBase.Multiline%2A&gt;</ph> property is set to <ph id=\"ph2\">`true`</ph> or <ph id=\"ph3\">`false`</ph>.","pos":[215,340],"source":" This value is the same whether the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property is set to `true` or `false`."}]}],"pos":[152761,153393],"yaml":true,"extradata":"MT"},{"content":"The preferred height of a text box.","nodes":[{"pos":[0,35],"content":"The preferred height of a text box.","nodes":[{"content":"The preferred height of a text box.","pos":[0,35]}]}],"pos":[153565,153601],"yaml":true},{"content":"Processes a command key.","nodes":[{"pos":[0,24],"content":"Processes a command key.","nodes":[{"content":"Processes a command key.","pos":[0,24]}]}],"pos":[154893,154918],"yaml":true},{"content":"A <xref href=\"System.Windows.Forms.Message\"></xref>, passed by reference that represents the window message to process.","nodes":[{"pos":[0,119],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Message\"&gt;&lt;/xref&gt;</ph>, passed by reference that represents the window message to process.","source":"A <xref href=\"System.Windows.Forms.Message\"></xref>, passed by reference that represents the window message to process."}],"pos":[155144,155264],"yaml":true},{"content":"One of the <xref href=\"System.Windows.Forms.Keys\"></xref> values that represents the shortcut key to process.","nodes":[{"pos":[0,109],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Keys\"&gt;&lt;/xref&gt;</ph> values that represents the shortcut key to process.","source":"One of the <xref href=\"System.Windows.Forms.Keys\"></xref> values that represents the shortcut key to process."}],"pos":[155339,155449],"yaml":true},{"content":"`true` if the command key was processed by the control; otherwise, `false`.","nodes":[{"pos":[0,75],"content":"<ph id=\"ph1\">`true`</ph> if the command key was processed by the control; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the command key was processed by the control; otherwise, `false`."}],"pos":[155507,155585],"yaml":true},{"content":"Processes a dialog key.","nodes":[{"pos":[0,23],"content":"Processes a dialog key.","nodes":[{"content":"Processes a dialog key.","pos":[0,23]}]}],"pos":[156711,156735],"yaml":true},{"content":"One of the <xref href=\"System.Windows.Forms.Keys\"></xref> values that represents the key to process.","nodes":[{"pos":[0,100],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Keys\"&gt;&lt;/xref&gt;</ph> values that represents the key to process.","source":"One of the <xref href=\"System.Windows.Forms.Keys\"></xref> values that represents the key to process."}],"pos":[156927,157028],"yaml":true},{"content":"`true` if the key was processed by the control; otherwise, `false`.","nodes":[{"pos":[0,67],"content":"<ph id=\"ph1\">`true`</ph> if the key was processed by the control; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the key was processed by the control; otherwise, `false`."}],"pos":[157086,157156],"yaml":true},{"content":"Gets or sets a value indicating whether text in the text box is read-only.","nodes":[{"pos":[0,74],"content":"Gets or sets a value indicating whether text in the text box is read-only.","nodes":[{"content":"Gets or sets a value indicating whether text in the text box is read-only.","pos":[0,74]}]}],"pos":[158140,158215],"yaml":true},{"content":"When this property is set to `true`, the contents of the control cannot be changed by the user at runtime. With this property set to `true`, you can still set the value of the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property in code. You can use this feature instead of disabling the control with the <xref:System.Windows.Forms.Control.Enabled%2A> property to allow the contents to be copied and ToolTips to be shown.","nodes":[{"pos":[0,425],"content":"When this property is set to `true`, the contents of the control cannot be changed by the user at runtime. With this property set to `true`, you can still set the value of the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property in code. You can use this feature instead of disabling the control with the <xref:System.Windows.Forms.Control.Enabled%2A> property to allow the contents to be copied and ToolTips to be shown.","nodes":[{"content":"When this property is set to <ph id=\"ph1\">`true`</ph>, the contents of the control cannot be changed by the user at runtime.","pos":[0,106],"source":"When this property is set to `true`, the contents of the control cannot be changed by the user at runtime."},{"content":"With this property set to <ph id=\"ph1\">`true`</ph>, you can still set the value of the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.TextBoxBase.Text%2A&gt;</ph> property in code.","pos":[107,241],"source":" With this property set to `true`, you can still set the value of the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property in code."},{"content":"You can use this feature instead of disabling the control with the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> property to allow the contents to be copied and ToolTips to be shown.","pos":[242,425],"source":" You can use this feature instead of disabling the control with the <xref:System.Windows.Forms.Control.Enabled%2A> property to allow the contents to be copied and ToolTips to be shown."}]}],"pos":[158226,158652],"yaml":true,"extradata":"MT"},{"content":"`true` if the text box is read-only; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,80],"content":"`true` if the text box is read-only; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the text box is read-only; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,56],"source":"`true` if the text box is read-only; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[57,80],"source":" The default is `false`."}]}],"pos":[158768,158851],"yaml":true},{"content":"Occurs when the value of the <xref href=\"System.Windows.Forms.TextBoxBase.ReadOnly\"></xref> property has changed.","nodes":[{"pos":[0,113],"content":"Occurs when the value of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.TextBoxBase.ReadOnly\"&gt;&lt;/xref&gt;</ph> property has changed.","source":"Occurs when the value of the <xref href=\"System.Windows.Forms.TextBoxBase.ReadOnly\"></xref> property has changed."}],"pos":[159883,159997],"yaml":true},{"content":"For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","nodes":[{"pos":[0,142],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","source":"For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}],"pos":[160008,160153],"yaml":true,"extradata":"MT"},{"content":"Scrolls the contents of the control to the current caret position.","nodes":[{"pos":[0,66],"content":"Scrolls the contents of the control to the current caret position.","nodes":[{"content":"Scrolls the contents of the control to the current caret position.","pos":[0,66]}]}],"pos":[162570,162637],"yaml":true},{"content":"This method enables you to scroll the contents of the control until the caret is within the visible region of the control. If the caret is positioned below the visible region of the control, the <xref:System.Windows.Forms.TextBoxBase.ScrollToCaret%2A> method will scroll the contents of the control until the caret is visible at the bottom of the control. If the caret is positioned above the visible region of the control, this method scrolls the contents of the control until the caret is visible at the top of the control. You can use this method in a multiline text box to ensure that the current text entry point is within the visible region of the control.  \n  \n> [!NOTE]\n>  This method has no effect if the control does not have focus or if the caret is already positioned in the visible region of the control.","nodes":[{"pos":[0,662],"content":"This method enables you to scroll the contents of the control until the caret is within the visible region of the control. If the caret is positioned below the visible region of the control, the <xref:System.Windows.Forms.TextBoxBase.ScrollToCaret%2A> method will scroll the contents of the control until the caret is visible at the bottom of the control. If the caret is positioned above the visible region of the control, this method scrolls the contents of the control until the caret is visible at the top of the control. You can use this method in a multiline text box to ensure that the current text entry point is within the visible region of the control.","nodes":[{"content":"This method enables you to scroll the contents of the control until the caret is within the visible region of the control. If the caret is positioned below the visible region of the control, the <xref:System.Windows.Forms.TextBoxBase.ScrollToCaret%2A> method will scroll the contents of the control until the caret is visible at the bottom of the control. If the caret is positioned above the visible region of the control, this method scrolls the contents of the control until the caret is visible at the top of the control. You can use this method in a multiline text box to ensure that the current text entry point is within the visible region of the control.","pos":[0,662],"nodes":[{"content":"This method enables you to scroll the contents of the control until the caret is within the visible region of the control.","pos":[0,122]},{"content":"If the caret is positioned below the visible region of the control, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextBoxBase.ScrollToCaret%2A&gt;</ph> method will scroll the contents of the control until the caret is visible at the bottom of the control.","pos":[123,355],"source":" If the caret is positioned below the visible region of the control, the <xref:System.Windows.Forms.TextBoxBase.ScrollToCaret%2A> method will scroll the contents of the control until the caret is visible at the bottom of the control."},{"content":"If the caret is positioned above the visible region of the control, this method scrolls the contents of the control until the caret is visible at the top of the control.","pos":[356,525]},{"content":"You can use this method in a multiline text box to ensure that the current text entry point is within the visible region of the control.","pos":[526,662]}]}]},{"pos":[670,817],"content":"[!NOTE]\n This method has no effect if the control does not have focus or if the caret is already positioned in the visible region of the control.","leadings":["","> "],"nodes":[{"content":"This method has no effect if the control does not have focus or if the caret is already positioned in the visible region of the control.","pos":[9,145]}]}],"pos":[162648,163471],"yaml":true,"extradata":"MT"},{"content":"Selects a range of text in the text box.","nodes":[{"pos":[0,40],"content":"Selects a range of text in the text box.","nodes":[{"content":"Selects a range of text in the text box.","pos":[0,40]}]}],"pos":[165778,165819],"yaml":true},{"content":"If you want to set the start position to the first character in the control's text, set the `start` parameter to 0. You can use this method to select a substring of text, such as when searching through the text of the control and replacing information.  \n  \n> [!NOTE]\n>  You can programmatically move the caret within the text box by setting the `start` parameter to the position within the text box where you want the caret to move to and set the `length` parameter to a value of zero (0). The text box must have focus in order for the caret to be moved.  \n  \n> [!NOTE]\n>  If this method is called without any parameters, an alternative method is used. This alternative method inherits from the <xref:System.Windows.Forms.Control> class. When called, it sets the input focus to the control and selects the contents of the control. For more information, see the <xref:System.Windows.Forms.Control.Select%2A?displayProperty=fullName> method.","nodes":[{"pos":[0,252],"content":"If you want to set the start position to the first character in the control's text, set the `start` parameter to 0. You can use this method to select a substring of text, such as when searching through the text of the control and replacing information.","nodes":[{"content":"If you want to set the start position to the first character in the control's text, set the <ph id=\"ph1\">`start`</ph> parameter to 0.","pos":[0,115],"source":"If you want to set the start position to the first character in the control's text, set the `start` parameter to 0."},{"content":"You can use this method to select a substring of text, such as when searching through the text of the control and replacing information.","pos":[116,252]}]},{"pos":[260,555],"content":"[!NOTE]\n You can programmatically move the caret within the text box by setting the `start` parameter to the position within the text box where you want the caret to move to and set the `length` parameter to a value of zero (0). The text box must have focus in order for the caret to be moved.","leadings":["","> "],"nodes":[{"content":" You can programmatically move the caret within the text box by setting the `start` parameter to the position within the text box where you want the caret to move to and set the `length` parameter to a value of zero (0). The text box must have focus in order for the caret to be moved.","pos":[8,293],"nodes":[{"content":"You can programmatically move the caret within the text box by setting the <ph id=\"ph1\">`start`</ph> parameter to the position within the text box where you want the caret to move to and set the <ph id=\"ph2\">`length`</ph> parameter to a value of zero (0).","pos":[1,220],"source":" You can programmatically move the caret within the text box by setting the `start` parameter to the position within the text box where you want the caret to move to and set the `length` parameter to a value of zero (0)."},{"content":"The text box must have focus in order for the caret to be moved.","pos":[221,285]}]}]},{"pos":[563,940],"content":"[!NOTE]\n If this method is called without any parameters, an alternative method is used. This alternative method inherits from the <xref:System.Windows.Forms.Control> class. When called, it sets the input focus to the control and selects the contents of the control. For more information, see the <xref:System.Windows.Forms.Control.Select%2A?displayProperty=fullName> method.","leadings":["","> "],"nodes":[{"content":" If this method is called without any parameters, an alternative method is used. This alternative method inherits from the <xref:System.Windows.Forms.Control> class. When called, it sets the input focus to the control and selects the contents of the control. For more information, see the <xref:System.Windows.Forms.Control.Select%2A?displayProperty=fullName> method.","pos":[8,375],"nodes":[{"content":"If this method is called without any parameters, an alternative method is used.","pos":[1,80]},{"content":"This alternative method inherits from the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control&gt;</ph> class.","pos":[81,165],"source":" This alternative method inherits from the <xref:System.Windows.Forms.Control> class."},{"content":"When called, it sets the input focus to the control and selects the contents of the control.","pos":[166,258]},{"content":"For more information, see the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Select%2A?displayProperty=fullName&gt;</ph> method.","pos":[259,367],"source":" For more information, see the <xref:System.Windows.Forms.Control.Select%2A?displayProperty=fullName> method."}]}]}],"pos":[165830,166779],"yaml":true,"extradata":"MT"},{"content":"The position of the first character in the current text selection within the text box.","nodes":[{"pos":[0,86],"content":"The position of the first character in the current text selection within the text box.","nodes":[{"content":"The position of the first character in the current text selection within the text box.","pos":[0,86]}]}],"pos":[167917,168004],"yaml":true},{"content":"The number of characters to select.","nodes":[{"pos":[0,35],"content":"The number of characters to select.","nodes":[{"content":"The number of characters to select.","pos":[0,35]}]}],"pos":[168065,168101],"yaml":true},{"content":"The value of the <code>start</code> parameter is less than zero.","nodes":[{"pos":[0,64],"content":"The value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">start</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is less than zero.","source":"The value of the <code>start</code> parameter is less than zero."}],"pos":[168282,168347],"yaml":true},{"content":"Selects all text in the text box.","nodes":[{"pos":[0,33],"content":"Selects all text in the text box.","nodes":[{"content":"Selects all text in the text box.","pos":[0,33]}]}],"pos":[169261,169295],"yaml":true},{"content":"This method enables you to select all text within the control. You can use this method in conjunction with the <xref:System.Windows.Forms.TextBoxBase.Cut%2A> method, which requires text to be selected in the control, to cut the entire contents of the control and paste them into the **Clipboard**.","nodes":[{"pos":[0,297],"content":"This method enables you to select all text within the control. You can use this method in conjunction with the <xref:System.Windows.Forms.TextBoxBase.Cut%2A> method, which requires text to be selected in the control, to cut the entire contents of the control and paste them into the **Clipboard**.","nodes":[{"content":"This method enables you to select all text within the control.","pos":[0,62]},{"content":"You can use this method in conjunction with the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextBoxBase.Cut%2A&gt;</ph> method, which requires text to be selected in the control, to cut the entire contents of the control and paste them into the <bpt id=\"p1\">**</bpt>Clipboard<ept id=\"p1\">**</ept>.","pos":[63,297],"source":" You can use this method in conjunction with the <xref:System.Windows.Forms.TextBoxBase.Cut%2A> method, which requires text to be selected in the control, to cut the entire contents of the control and paste them into the **Clipboard**."}]}],"pos":[169306,169604],"yaml":true,"extradata":"MT"},{"content":"Gets or sets a value indicating the currently selected text in the control.","nodes":[{"pos":[0,75],"content":"Gets or sets a value indicating the currently selected text in the control.","nodes":[{"content":"Gets or sets a value indicating the currently selected text in the control.","pos":[0,75]}]}],"pos":[171580,171656],"yaml":true},{"content":"You can assign text to this property to change the text currently selected in the text box. If no text is currently selected in the text box, this property returns a zero-length string.","nodes":[{"pos":[0,185],"content":"You can assign text to this property to change the text currently selected in the text box. If no text is currently selected in the text box, this property returns a zero-length string.","nodes":[{"content":"You can assign text to this property to change the text currently selected in the text box. If no text is currently selected in the text box, this property returns a zero-length string.","pos":[0,185],"nodes":[{"content":"You can assign text to this property to change the text currently selected in the text box.","pos":[0,91]},{"content":"If no text is currently selected in the text box, this property returns a zero-length string.","pos":[92,185]}]}]}],"pos":[171667,171853],"yaml":true,"extradata":"MT"},{"content":"A string that represents the currently selected text in the text box.","nodes":[{"pos":[0,69],"content":"A string that represents the currently selected text in the text box.","nodes":[{"content":"A string that represents the currently selected text in the text box.","pos":[0,69]}]}],"pos":[172919,172989],"yaml":true},{"content":"Gets or sets the number of characters selected in the text box.","nodes":[{"pos":[0,63],"content":"Gets or sets the number of characters selected in the text box.","nodes":[{"content":"Gets or sets the number of characters selected in the text box.","pos":[0,63]}]}],"pos":[174076,174140],"yaml":true},{"content":"You can use this property to determine if any characters are currently selected in the text box control before performing operations on the selected text. When the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property is set to a value that is larger than the number of characters within the text of the control, the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property is set to the entire length of text within the control minus the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property (if any value is specified for the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property).  \n  \n> [!NOTE]\n>  You can programmatically move the caret within the text box by setting the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> to the position within the text box where you want the caret to move to and set the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property to a value of zero (0). The text box must have focus in order for the caret to be moved.","nodes":[{"pos":[0,673],"content":"You can use this property to determine if any characters are currently selected in the text box control before performing operations on the selected text. When the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property is set to a value that is larger than the number of characters within the text of the control, the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property is set to the entire length of text within the control minus the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property (if any value is specified for the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property).","nodes":[{"content":"You can use this property to determine if any characters are currently selected in the text box control before performing operations on the selected text. When the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property is set to a value that is larger than the number of characters within the text of the control, the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property is set to the entire length of text within the control minus the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property (if any value is specified for the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property).","pos":[0,673],"nodes":[{"content":"You can use this property to determine if any characters are currently selected in the text box control before performing operations on the selected text.","pos":[0,154]},{"content":"When the value of the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A&gt;</ph> property is set to a value that is larger than the number of characters within the text of the control, the value of the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A&gt;</ph> property is set to the entire length of text within the control minus the value of the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A&gt;</ph> property (if any value is specified for the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A&gt;</ph> property).","pos":[155,673],"source":" When the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property is set to a value that is larger than the number of characters within the text of the control, the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property is set to the entire length of text within the control minus the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property (if any value is specified for the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property)."}]}]},{"pos":[681,1065],"content":"[!NOTE]\n You can programmatically move the caret within the text box by setting the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> to the position within the text box where you want the caret to move to and set the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property to a value of zero (0). The text box must have focus in order for the caret to be moved.","leadings":["","> "],"nodes":[{"content":" You can programmatically move the caret within the text box by setting the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> to the position within the text box where you want the caret to move to and set the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property to a value of zero (0). The text box must have focus in order for the caret to be moved.","pos":[8,382],"nodes":[{"content":"You can programmatically move the caret within the text box by setting the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A&gt;</ph> to the position within the text box where you want the caret to move to and set the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A&gt;</ph> property to a value of zero (0).","pos":[1,309],"source":" You can programmatically move the caret within the text box by setting the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> to the position within the text box where you want the caret to move to and set the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property to a value of zero (0)."},{"content":"The text box must have focus in order for the caret to be moved.","pos":[310,374]}]}]}],"pos":[174151,175222],"yaml":true,"extradata":"MT"},{"content":"The number of characters selected in the text box.","nodes":[{"pos":[0,50],"content":"The number of characters selected in the text box.","nodes":[{"content":"The number of characters selected in the text box.","pos":[0,50]}]}],"pos":[176305,176356],"yaml":true},{"content":"The assigned value is less than zero.","nodes":[{"pos":[0,37],"content":"The assigned value is less than zero.","nodes":[{"content":"The assigned value is less than zero.","pos":[0,37]}]}],"pos":[176546,176584],"yaml":true},{"content":"Gets or sets the starting point of text selected in the text box.","nodes":[{"pos":[0,65],"content":"Gets or sets the starting point of text selected in the text box.","nodes":[{"content":"Gets or sets the starting point of text selected in the text box.","pos":[0,65]}]}],"pos":[177589,177655],"yaml":true},{"content":"If no text is selected in the control, this property indicates the insertion point, or caret, for new text. If you set this property to a location beyond the length of the text in the control, the selection start position will be placed after the last character. When text is selected in the text box control, changing this property might decrease the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property. If the remaining text in the control after the position indicated by the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property is less than the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property, the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property is automatically decreased. The value of the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property never causes an increase in the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property.  \n  \n You can programmatically move the selection within the text box by setting the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> and the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> properties.  \n  \n You can programmatically move the caret within the text box by setting the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> to the position within the text box where you want the caret to move to and set the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property to a value of zero (0).  \n  \n The <xref:System.Windows.Forms.TextBox> must have focus in order for the selection or the caret to be moved. You can set the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property of a <xref:System.Windows.Forms.TextBox> that is <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> by giving it the <xref:System.Windows.Forms.Control.Focus%2A> first.","nodes":[{"pos":[0,970],"content":"If no text is selected in the control, this property indicates the insertion point, or caret, for new text. If you set this property to a location beyond the length of the text in the control, the selection start position will be placed after the last character. When text is selected in the text box control, changing this property might decrease the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property. If the remaining text in the control after the position indicated by the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property is less than the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property, the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property is automatically decreased. The value of the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property never causes an increase in the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property.","nodes":[{"content":"If no text is selected in the control, this property indicates the insertion point, or caret, for new text. If you set this property to a location beyond the length of the text in the control, the selection start position will be placed after the last character. When text is selected in the text box control, changing this property might decrease the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property. If the remaining text in the control after the position indicated by the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property is less than the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property, the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property is automatically decreased. The value of the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property never causes an increase in the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property.","pos":[0,970],"nodes":[{"content":"If no text is selected in the control, this property indicates the insertion point, or caret, for new text.","pos":[0,107]},{"content":"If you set this property to a location beyond the length of the text in the control, the selection start position will be placed after the last character.","pos":[108,262]},{"content":"When text is selected in the text box control, changing this property might decrease the value of the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A&gt;</ph> property.","pos":[263,433],"source":" When text is selected in the text box control, changing this property might decrease the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property."},{"content":"If the remaining text in the control after the position indicated by the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A&gt;</ph> property is less than the value of the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A&gt;</ph> property, the value of the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A&gt;</ph> property is automatically decreased.","pos":[434,785],"source":" If the remaining text in the control after the position indicated by the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property is less than the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property, the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property is automatically decreased."},{"content":"The value of the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A&gt;</ph> property never causes an increase in the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A&gt;</ph> property.","pos":[786,970],"source":" The value of the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property never causes an increase in the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property."}]}]},{"pos":[977,1192],"content":"You can programmatically move the selection within the text box by setting the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> and the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> properties.","nodes":[{"content":"You can programmatically move the selection within the text box by setting the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A&gt;</ph> and the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A&gt;</ph> properties.","pos":[0,215],"source":"You can programmatically move the selection within the text box by setting the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> and the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> properties."}]},{"pos":[1199,1507],"content":"You can programmatically move the caret within the text box by setting the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> to the position within the text box where you want the caret to move to and set the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property to a value of zero (0).","nodes":[{"content":"You can programmatically move the caret within the text box by setting the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A&gt;</ph> to the position within the text box where you want the caret to move to and set the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A&gt;</ph> property to a value of zero (0).","pos":[0,308],"source":"You can programmatically move the caret within the text box by setting the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> to the position within the text box where you want the caret to move to and set the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property to a value of zero (0)."}]},{"pos":[1514,1875],"content":"The <xref:System.Windows.Forms.TextBox> must have focus in order for the selection or the caret to be moved. You can set the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property of a <xref:System.Windows.Forms.TextBox> that is <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> by giving it the <xref:System.Windows.Forms.Control.Focus%2A> first.","nodes":[{"content":"The <xref:System.Windows.Forms.TextBox> must have focus in order for the selection or the caret to be moved. You can set the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property of a <xref:System.Windows.Forms.TextBox> that is <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> by giving it the <xref:System.Windows.Forms.Control.Focus%2A> first.","pos":[0,361],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> must have focus in order for the selection or the caret to be moved.","pos":[0,108],"source":"The <xref:System.Windows.Forms.TextBox> must have focus in order for the selection or the caret to be moved."},{"content":"You can set the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A&gt;</ph> property of a <ph id=\"ph2\">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> that is <ph id=\"ph3\">&lt;xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A&gt;</ph> by giving it the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph> first.","pos":[109,361],"source":" You can set the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property of a <xref:System.Windows.Forms.TextBox> that is <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> by giving it the <xref:System.Windows.Forms.Control.Focus%2A> first."}]}]}],"pos":[177666,179550],"yaml":true,"extradata":"MT"},{"content":"The starting position of text selected in the text box.","nodes":[{"pos":[0,55],"content":"The starting position of text selected in the text box.","nodes":[{"content":"The starting position of text selected in the text box.","pos":[0,55]}]}],"pos":[181235,181291],"yaml":true},{"content":"The assigned value is less than zero.","nodes":[{"pos":[0,37],"content":"The assigned value is less than zero.","nodes":[{"content":"The assigned value is less than zero.","pos":[0,37]}]}],"pos":[181480,181518],"yaml":true},{"content":"Sets the specified bounds of the <xref href=\"System.Windows.Forms.TextBoxBase\"></xref> control.","nodes":[{"pos":[0,95],"content":"Sets the specified bounds of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.TextBoxBase\"&gt;&lt;/xref&gt;</ph> control.","source":"Sets the specified bounds of the <xref href=\"System.Windows.Forms.TextBoxBase\"></xref> control."}],"pos":[182920,183016],"yaml":true},{"content":"The <xref:System.Windows.Forms.TextBoxBase> control uses the <xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A> property to set the bounds if the <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> property is `true` and the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property is `false`.  \n  \n Typically, the parameters that correspond to the bounds not included in the `specified` parameter are passed in with their current values. For example, the <xref:System.Windows.Forms.Control.Height%2A>, <xref:System.Windows.Forms.Control.Width%2A>, or the <xref:System.Drawing.Point.X%2A> or <xref:System.Drawing.Point.Y%2A> properties of the <xref:System.Windows.Forms.Control.Location%2A> property can be passed in with a reference to the current instance of the control. However all values passed in are honored and applied to the control.  \n  \n The `specified` parameter represents the elements of the controls <xref:System.Windows.Forms.Control.Bounds%2A> changed by your application. For example, if you change the <xref:System.Windows.Forms.Control.Size%2A> of the control, the `specified` parameter value is the `Size` value of <xref:System.Windows.Forms.BoundsSpecified>. However, if the <xref:System.Windows.Forms.Control.Size%2A> is adjusted in response to the <xref:System.Windows.Forms.Control.Dock%2A> property being set, the `specified` parameter value is the `None` value of <xref:System.Windows.Forms.BoundsSpecified>.","nodes":[{"pos":[0,306],"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph> control uses the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A&gt;</ph> property to set the bounds if the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.TextBoxBase.AutoSize%2A&gt;</ph> property is <ph id=\"ph4\">`true`</ph> and the <ph id=\"ph5\">&lt;xref:System.Windows.Forms.TextBoxBase.Multiline%2A&gt;</ph> property is <ph id=\"ph6\">`false`</ph>.","source":"The <xref:System.Windows.Forms.TextBoxBase> control uses the <xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A> property to set the bounds if the <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> property is `true` and the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property is `false`."},{"pos":[313,855],"content":"Typically, the parameters that correspond to the bounds not included in the `specified` parameter are passed in with their current values. For example, the <xref:System.Windows.Forms.Control.Height%2A>, <xref:System.Windows.Forms.Control.Width%2A>, or the <xref:System.Drawing.Point.X%2A> or <xref:System.Drawing.Point.Y%2A> properties of the <xref:System.Windows.Forms.Control.Location%2A> property can be passed in with a reference to the current instance of the control. However all values passed in are honored and applied to the control.","nodes":[{"content":"Typically, the parameters that correspond to the bounds not included in the <ph id=\"ph1\">`specified`</ph> parameter are passed in with their current values.","pos":[0,138],"source":"Typically, the parameters that correspond to the bounds not included in the `specified` parameter are passed in with their current values."},{"content":"For example, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph>, or the <ph id=\"ph3\">&lt;xref:System.Drawing.Point.X%2A&gt;</ph> or <ph id=\"ph4\">&lt;xref:System.Drawing.Point.Y%2A&gt;</ph> properties of the <ph id=\"ph5\">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> property can be passed in with a reference to the current instance of the control.","pos":[139,473],"source":" For example, the <xref:System.Windows.Forms.Control.Height%2A>, <xref:System.Windows.Forms.Control.Width%2A>, or the <xref:System.Drawing.Point.X%2A> or <xref:System.Drawing.Point.Y%2A> properties of the <xref:System.Windows.Forms.Control.Location%2A> property can be passed in with a reference to the current instance of the control."},{"content":"However all values passed in are honored and applied to the control.","pos":[474,542]}]},{"pos":[862,1448],"content":"The `specified` parameter represents the elements of the controls <xref:System.Windows.Forms.Control.Bounds%2A> changed by your application. For example, if you change the <xref:System.Windows.Forms.Control.Size%2A> of the control, the `specified` parameter value is the `Size` value of <xref:System.Windows.Forms.BoundsSpecified>. However, if the <xref:System.Windows.Forms.Control.Size%2A> is adjusted in response to the <xref:System.Windows.Forms.Control.Dock%2A> property being set, the `specified` parameter value is the `None` value of <xref:System.Windows.Forms.BoundsSpecified>.","nodes":[{"content":"The <ph id=\"ph1\">`specified`</ph> parameter represents the elements of the controls <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Bounds%2A&gt;</ph> changed by your application.","pos":[0,140],"source":"The `specified` parameter represents the elements of the controls <xref:System.Windows.Forms.Control.Bounds%2A> changed by your application."},{"content":"For example, if you change the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> of the control, the <ph id=\"ph2\">`specified`</ph> parameter value is the <ph id=\"ph3\">`Size`</ph> value of <ph id=\"ph4\">&lt;xref:System.Windows.Forms.BoundsSpecified&gt;</ph>.","pos":[141,331],"source":" For example, if you change the <xref:System.Windows.Forms.Control.Size%2A> of the control, the `specified` parameter value is the `Size` value of <xref:System.Windows.Forms.BoundsSpecified>."},{"content":"However, if the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> is adjusted in response to the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph> property being set, the <ph id=\"ph3\">`specified`</ph> parameter value is the <ph id=\"ph4\">`None`</ph> value of <ph id=\"ph5\">&lt;xref:System.Windows.Forms.BoundsSpecified&gt;</ph>.","pos":[332,586],"source":" However, if the <xref:System.Windows.Forms.Control.Size%2A> is adjusted in response to the <xref:System.Windows.Forms.Control.Dock%2A> property being set, the `specified` parameter value is the `None` value of <xref:System.Windows.Forms.BoundsSpecified>."}]}],"pos":[183027,184482],"yaml":true,"extradata":"MT"},{"content":"The new <xref href=\"System.Windows.Forms.Control.Left\"></xref> property value of the control.","nodes":[{"pos":[0,93],"content":"The new <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.Left\"&gt;&lt;/xref&gt;</ph> property value of the control.","source":"The new <xref href=\"System.Windows.Forms.Control.Left\"></xref> property value of the control."}],"pos":[184702,184796],"yaml":true},{"content":"The new <xref href=\"System.Windows.Forms.Control.Top\"></xref> property value of the control.","nodes":[{"pos":[0,92],"content":"The new <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.Top\"&gt;&lt;/xref&gt;</ph> property value of the control.","source":"The new <xref href=\"System.Windows.Forms.Control.Top\"></xref> property value of the control."}],"pos":[184852,184945],"yaml":true},{"content":"The new <xref href=\"System.Windows.Forms.Control.Width\"></xref> property value of the control.","nodes":[{"pos":[0,94],"content":"The new <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.Width\"&gt;&lt;/xref&gt;</ph> property value of the control.","source":"The new <xref href=\"System.Windows.Forms.Control.Width\"></xref> property value of the control."}],"pos":[185005,185100],"yaml":true},{"content":"Not used.","nodes":[{"pos":[0,9],"content":"Not used.","nodes":[{"content":"Not used.","pos":[0,9]}]}],"pos":[185161,185171],"yaml":true},{"content":"A bitwise combination of the <xref href=\"System.Windows.Forms.BoundsSpecified\"></xref> values.","nodes":[{"pos":[0,94],"content":"A bitwise combination of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.BoundsSpecified\"&gt;&lt;/xref&gt;</ph> values.","source":"A bitwise combination of the <xref href=\"System.Windows.Forms.BoundsSpecified\"></xref> values."}],"pos":[185259,185354],"yaml":true},{"content":"Gets or sets a value indicating whether the defined shortcuts are enabled.","nodes":[{"pos":[0,74],"content":"Gets or sets a value indicating whether the defined shortcuts are enabled.","nodes":[{"content":"Gets or sets a value indicating whether the defined shortcuts are enabled.","pos":[0,74]}]}],"pos":[186383,186458],"yaml":true},{"content":"Use the <xref:System.Windows.Forms.TextBoxBase.ShortcutsEnabled%2A> property to enable or disable the following shortcut key combinations and the control’s shortcut menu:  \n  \n-   CTRL+Z  \n  \n-   CTRL+E  \n  \n-   CTRL+C  \n  \n-   CTRL+Y  \n  \n-   CTRL+X  \n  \n-   CTRL+BACKSPACE  \n  \n-   CTRL+V  \n  \n-   CTRL+DELETE  \n  \n-   CTRL+A  \n  \n-   SHIFT+DELETE  \n  \n-   CTRL+L  \n  \n-   SHIFT+INSERT  \n  \n-   CTRL+R  \n  \n You can override this property to specify other shortcut keys.","nodes":[{"pos":[0,170],"content":"Use the <xref:System.Windows.Forms.TextBoxBase.ShortcutsEnabled%2A> property to enable or disable the following shortcut key combinations and the control’s shortcut menu:","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextBoxBase.ShortcutsEnabled%2A&gt;</ph> property to enable or disable the following shortcut key combinations and the control’s shortcut menu:","pos":[0,170],"source":"Use the <xref:System.Windows.Forms.TextBoxBase.ShortcutsEnabled%2A> property to enable or disable the following shortcut key combinations and the control’s shortcut menu:"}]},{"pos":[180,186],"content":"CTRL+Z","nodes":[{"content":"CTRL+Z","pos":[0,6]}]},{"pos":[196,202],"content":"CTRL+E","nodes":[{"content":"CTRL+E","pos":[0,6]}]},{"pos":[212,218],"content":"CTRL+C","nodes":[{"content":"CTRL+C","pos":[0,6]}]},{"pos":[228,234],"content":"CTRL+Y","nodes":[{"content":"CTRL+Y","pos":[0,6]}]},{"pos":[244,250],"content":"CTRL+X","nodes":[{"content":"CTRL+X","pos":[0,6]}]},{"pos":[260,274],"content":"CTRL+BACKSPACE","nodes":[{"content":"CTRL+BACKSPACE","pos":[0,14]}]},{"pos":[284,290],"content":"CTRL+V","nodes":[{"content":"CTRL+V","pos":[0,6]}]},{"pos":[300,311],"content":"CTRL+DELETE","nodes":[{"content":"CTRL+DELETE","pos":[0,11]}]},{"pos":[321,327],"content":"CTRL+A","nodes":[{"content":"CTRL+A","pos":[0,6]}]},{"pos":[337,349],"content":"SHIFT+DELETE","nodes":[{"content":"SHIFT+DELETE","pos":[0,12]}]},{"pos":[359,365],"content":"CTRL+L","nodes":[{"content":"CTRL+L","pos":[0,6]}]},{"pos":[375,387],"content":"SHIFT+INSERT","nodes":[{"content":"SHIFT+INSERT","pos":[0,12]}]},{"pos":[397,403],"content":"CTRL+R","nodes":[{"content":"CTRL+R","pos":[0,6]}]},{"pos":[410,472],"content":"You can override this property to specify other shortcut keys.","nodes":[{"content":"You can override this property to specify other shortcut keys.","pos":[0,62]}]}],"pos":[186469,186972],"yaml":true,"extradata":"MT"},{"content":"`true` to enable the shortcuts; otherwise, `false`.","nodes":[{"pos":[0,51],"content":"<ph id=\"ph1\">`true`</ph> to enable the shortcuts; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to enable the shortcuts; otherwise, `false`."}],"pos":[187104,187158],"yaml":true},{"content":"Gets or sets the current text in the text box.","nodes":[{"pos":[0,46],"content":"Gets or sets the current text in the text box.","nodes":[{"content":"Gets or sets the current text in the text box.","pos":[0,46]}]}],"pos":[188135,188182],"yaml":true},{"content":"To display multiple lines of text in a text box, set the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property to `true`. To read or set the text of a multiline text box, use the <xref:System.Windows.Forms.TextBoxBase.Lines%2A> property. The amount of text that can be entered in the <xref:System.Windows.Forms.RichTextBox> control is limited only by available system memory.","nodes":[{"pos":[0,383],"content":"To display multiple lines of text in a text box, set the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property to `true`. To read or set the text of a multiline text box, use the <xref:System.Windows.Forms.TextBoxBase.Lines%2A> property. The amount of text that can be entered in the <xref:System.Windows.Forms.RichTextBox> control is limited only by available system memory.","nodes":[{"content":"To display multiple lines of text in a text box, set the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextBoxBase.Multiline%2A&gt;</ph> property to <ph id=\"ph2\">`true`</ph>.","pos":[0,129],"source":"To display multiple lines of text in a text box, set the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property to `true`."},{"content":"To read or set the text of a multiline text box, use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextBoxBase.Lines%2A&gt;</ph> property.","pos":[130,245],"source":" To read or set the text of a multiline text box, use the <xref:System.Windows.Forms.TextBoxBase.Lines%2A> property."},{"content":"The amount of text that can be entered in the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> control is limited only by available system memory.","pos":[246,383],"source":" The amount of text that can be entered in the <xref:System.Windows.Forms.RichTextBox> control is limited only by available system memory."}]}],"pos":[188193,188577],"yaml":true,"extradata":"MT"},{"content":"The text displayed in the control.","nodes":[{"pos":[0,34],"content":"The text displayed in the control.","nodes":[{"content":"The text displayed in the control.","pos":[0,34]}]}],"pos":[189659,189694],"yaml":true},{"content":"Gets the length of text in the control.","nodes":[{"pos":[0,39],"content":"Gets the length of text in the control.","nodes":[{"content":"Gets the length of text in the control.","pos":[0,39]}]}],"pos":[190695,190735],"yaml":true},{"content":"You can use this property to determine the number of characters in a string for tasks such as searching for specific strings of text within the text of the control, where knowledge of the total number of characters is needed.","nodes":[{"pos":[0,225],"content":"You can use this property to determine the number of characters in a string for tasks such as searching for specific strings of text within the text of the control, where knowledge of the total number of characters is needed.","nodes":[{"content":"You can use this property to determine the number of characters in a string for tasks such as searching for specific strings of text within the text of the control, where knowledge of the total number of characters is needed.","pos":[0,225]}]}],"pos":[190746,190972],"yaml":true,"extradata":"MT"},{"content":"The number of characters contained in the text of the control.","nodes":[{"pos":[0,62],"content":"The number of characters contained in the text of the control.","nodes":[{"content":"The number of characters contained in the text of the control.","pos":[0,62]}]}],"pos":[192043,192106],"yaml":true},{"content":"Returns a string that represents the <xref href=\"System.Windows.Forms.TextBoxBase\"></xref> control.","nodes":[{"pos":[0,99],"content":"Returns a string that represents the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.TextBoxBase\"&gt;&lt;/xref&gt;</ph> control.","source":"Returns a string that represents the <xref href=\"System.Windows.Forms.TextBoxBase\"></xref> control."}],"pos":[193153,193253],"yaml":true},{"content":"A string that represents the current <xref href=\"System.Windows.Forms.TextBoxBase\"></xref>. The string includes the type and the <xref href=\"System.Windows.Forms.TextBoxBase\"></xref> property of the control.","nodes":[{"pos":[0,207],"content":"A string that represents the current <xref href=\"System.Windows.Forms.TextBoxBase\"></xref>. The string includes the type and the <xref href=\"System.Windows.Forms.TextBoxBase\"></xref> property of the control.","nodes":[{"content":"A string that represents the current <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.TextBoxBase\"&gt;&lt;/xref&gt;</ph>.","pos":[0,91],"source":"A string that represents the current <xref href=\"System.Windows.Forms.TextBoxBase\"></xref>."},{"content":"The string includes the type and the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.TextBoxBase\"&gt;&lt;/xref&gt;</ph> property of the control.","pos":[92,207],"source":" The string includes the type and the <xref href=\"System.Windows.Forms.TextBoxBase\"></xref> property of the control."}]}],"pos":[193388,193596],"yaml":true},{"content":"Undoes the last edit operation in the text box.","nodes":[{"pos":[0,47],"content":"Undoes the last edit operation in the text box.","nodes":[{"content":"Undoes the last edit operation in the text box.","pos":[0,47]}]}],"pos":[194552,194600],"yaml":true},{"content":"This method will undo the last **Clipboard** or text change operation performed in the text box control if the <xref:System.Windows.Forms.TextBoxBase.CanUndo%2A> property returns `true`.  \n  \n> [!NOTE]\n>  The <xref:System.Windows.Forms.TextBoxBase.Undo%2A> method does not work with the <xref:System.Windows.Forms.Control.KeyPress> or <xref:System.Windows.Forms.Control.TextChanged> events.","nodes":[{"pos":[0,186],"content":"This method will undo the last <bpt id=\"p1\">**</bpt>Clipboard<ept id=\"p1\">**</ept> or text change operation performed in the text box control if the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextBoxBase.CanUndo%2A&gt;</ph> property returns <ph id=\"ph2\">`true`</ph>.","source":"This method will undo the last **Clipboard** or text change operation performed in the text box control if the <xref:System.Windows.Forms.TextBoxBase.CanUndo%2A> property returns `true`."},{"pos":[194,390],"content":"[!NOTE]\n The <xref:System.Windows.Forms.TextBoxBase.Undo%2A> method does not work with the <xref:System.Windows.Forms.Control.KeyPress> or <xref:System.Windows.Forms.Control.TextChanged> events.","leadings":["","> "],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextBoxBase.Undo%2A&gt;</ph> method does not work with the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph> or <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.TextChanged&gt;</ph> events.","pos":[9,194],"source":" The <xref:System.Windows.Forms.TextBoxBase.Undo%2A> method does not work with the <xref:System.Windows.Forms.Control.KeyPress> or <xref:System.Windows.Forms.Control.TextChanged> events."}]}],"pos":[194611,195007],"yaml":true,"extradata":"MT"},{"content":"Processes Windows messages.","nodes":[{"pos":[0,27],"content":"Processes Windows messages.","nodes":[{"content":"Processes Windows messages.","pos":[0,27]}]}],"pos":[197052,197080],"yaml":true},{"content":"The Windows <xref href=\"System.Windows.Forms.Message\"></xref> to process.","nodes":[{"pos":[0,73],"content":"The Windows <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Message\"&gt;&lt;/xref&gt;</ph> to process.","source":"The Windows <xref href=\"System.Windows.Forms.Message\"></xref> to process."}],"pos":[197261,197335],"yaml":true},{"content":"Indicates whether a multiline text box control automatically wraps words to the beginning of the next line when necessary.","nodes":[{"pos":[0,122],"content":"Indicates whether a multiline text box control automatically wraps words to the beginning of the next line when necessary.","nodes":[{"content":"Indicates whether a multiline text box control automatically wraps words to the beginning of the next line when necessary.","pos":[0,122]}]}],"pos":[198310,198433],"yaml":true},{"content":"If this property is set to `true`, horizontal scroll bars are not displayed regardless of the <xref:System.Windows.Forms.TextBox.ScrollBars%2A> property setting.  \n  \n> [!NOTE]\n>  In the derived class, <xref:System.Windows.Forms.TextBox>, text within the control will always wrap regardless of the property setting of this property unless the <xref:System.Windows.Forms.TextBox.TextAlign%2A> property is set to `HorizontalAlignment.Left`.","nodes":[{"pos":[0,161],"content":"If this property is set to <ph id=\"ph1\">`true`</ph>, horizontal scroll bars are not displayed regardless of the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.TextBox.ScrollBars%2A&gt;</ph> property setting.","source":"If this property is set to `true`, horizontal scroll bars are not displayed regardless of the <xref:System.Windows.Forms.TextBox.ScrollBars%2A> property setting."},{"pos":[169,438],"content":"[!NOTE]\n In the derived class, <xref:System.Windows.Forms.TextBox>, text within the control will always wrap regardless of the property setting of this property unless the <xref:System.Windows.Forms.TextBox.TextAlign%2A> property is set to `HorizontalAlignment.Left`.","leadings":["","> "],"nodes":[{"content":"In the derived class, <ph id=\"ph1\">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, text within the control will always wrap regardless of the property setting of this property unless the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.TextBox.TextAlign%2A&gt;</ph> property is set to <ph id=\"ph3\">`HorizontalAlignment.Left`</ph>.","pos":[9,267],"source":" In the derived class, <xref:System.Windows.Forms.TextBox>, text within the control will always wrap regardless of the property setting of this property unless the <xref:System.Windows.Forms.TextBox.TextAlign%2A> property is set to `HorizontalAlignment.Left`."}]}],"pos":[198444,198888],"yaml":true,"extradata":"MT"},{"content":"`true` if the multiline text box control wraps words; `false` if the text box control automatically scrolls horizontally when the user types past the right edge of the control. The default is `true`.","nodes":[{"pos":[0,199],"content":"`true` if the multiline text box control wraps words; `false` if the text box control automatically scrolls horizontally when the user types past the right edge of the control. The default is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the multiline text box control wraps words; <ph id=\"ph2\">`false`</ph> if the text box control automatically scrolls horizontally when the user types past the right edge of the control.","pos":[0,176],"source":"`true` if the multiline text box control wraps words; `false` if the text box control automatically scrolls horizontally when the user types past the right edge of the control."},{"content":"The default is <ph id=\"ph1\">`true`</ph>.","pos":[177,199],"source":" The default is `true`."}]}],"pos":[199964,200166],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Forms.TextBoxBase\n  commentId: T:System.Windows.Forms.TextBoxBase\n  id: TextBoxBase\n  children:\n  - System.Windows.Forms.TextBoxBase.AcceptsTab\n  - System.Windows.Forms.TextBoxBase.AcceptsTabChanged\n  - System.Windows.Forms.TextBoxBase.AppendText(System.String)\n  - System.Windows.Forms.TextBoxBase.AutoSize\n  - System.Windows.Forms.TextBoxBase.AutoSizeChanged\n  - System.Windows.Forms.TextBoxBase.BackColor\n  - System.Windows.Forms.TextBoxBase.BackgroundImage\n  - System.Windows.Forms.TextBoxBase.BackgroundImageChanged\n  - System.Windows.Forms.TextBoxBase.BackgroundImageLayout\n  - System.Windows.Forms.TextBoxBase.BackgroundImageLayoutChanged\n  - System.Windows.Forms.TextBoxBase.BorderStyle\n  - System.Windows.Forms.TextBoxBase.BorderStyleChanged\n  - System.Windows.Forms.TextBoxBase.CanEnableIme\n  - System.Windows.Forms.TextBoxBase.CanUndo\n  - System.Windows.Forms.TextBoxBase.Clear\n  - System.Windows.Forms.TextBoxBase.ClearUndo\n  - System.Windows.Forms.TextBoxBase.Click\n  - System.Windows.Forms.TextBoxBase.Copy\n  - System.Windows.Forms.TextBoxBase.CreateHandle\n  - System.Windows.Forms.TextBoxBase.CreateParams\n  - System.Windows.Forms.TextBoxBase.Cut\n  - System.Windows.Forms.TextBoxBase.DefaultCursor\n  - System.Windows.Forms.TextBoxBase.DefaultSize\n  - System.Windows.Forms.TextBoxBase.DeselectAll\n  - System.Windows.Forms.TextBoxBase.DoubleBuffered\n  - System.Windows.Forms.TextBoxBase.ForeColor\n  - System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)\n  - System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)\n  - System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)\n  - System.Windows.Forms.TextBoxBase.GetFirstCharIndexOfCurrentLine\n  - System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)\n  - System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(System.Int32)\n  - System.Windows.Forms.TextBoxBase.HideSelection\n  - System.Windows.Forms.TextBoxBase.HideSelectionChanged\n  - System.Windows.Forms.TextBoxBase.ImeModeBase\n  - System.Windows.Forms.TextBoxBase.IsInputKey(System.Windows.Forms.Keys)\n  - System.Windows.Forms.TextBoxBase.Lines\n  - System.Windows.Forms.TextBoxBase.MaxLength\n  - System.Windows.Forms.TextBoxBase.Modified\n  - System.Windows.Forms.TextBoxBase.ModifiedChanged\n  - System.Windows.Forms.TextBoxBase.MouseClick\n  - System.Windows.Forms.TextBoxBase.Multiline\n  - System.Windows.Forms.TextBoxBase.MultilineChanged\n  - System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)\n  - System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)\n  - System.Windows.Forms.TextBoxBase.OnFontChanged(System.EventArgs)\n  - System.Windows.Forms.TextBoxBase.OnHandleCreated(System.EventArgs)\n  - System.Windows.Forms.TextBoxBase.OnHandleDestroyed(System.EventArgs)\n  - System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)\n  - System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)\n  - System.Windows.Forms.TextBoxBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)\n  - System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)\n  - System.Windows.Forms.TextBoxBase.OnPaddingChanged(System.EventArgs)\n  - System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)\n  - System.Windows.Forms.TextBoxBase.OnTextChanged(System.EventArgs)\n  - System.Windows.Forms.TextBoxBase.Padding\n  - System.Windows.Forms.TextBoxBase.PaddingChanged\n  - System.Windows.Forms.TextBoxBase.Paint\n  - System.Windows.Forms.TextBoxBase.Paste\n  - System.Windows.Forms.TextBoxBase.PreferredHeight\n  - System.Windows.Forms.TextBoxBase.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)\n  - System.Windows.Forms.TextBoxBase.ProcessDialogKey(System.Windows.Forms.Keys)\n  - System.Windows.Forms.TextBoxBase.ReadOnly\n  - System.Windows.Forms.TextBoxBase.ReadOnlyChanged\n  - System.Windows.Forms.TextBoxBase.ScrollToCaret\n  - System.Windows.Forms.TextBoxBase.Select(System.Int32,System.Int32)\n  - System.Windows.Forms.TextBoxBase.SelectAll\n  - System.Windows.Forms.TextBoxBase.SelectedText\n  - System.Windows.Forms.TextBoxBase.SelectionLength\n  - System.Windows.Forms.TextBoxBase.SelectionStart\n  - System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)\n  - System.Windows.Forms.TextBoxBase.ShortcutsEnabled\n  - System.Windows.Forms.TextBoxBase.Text\n  - System.Windows.Forms.TextBoxBase.TextLength\n  - System.Windows.Forms.TextBoxBase.ToString\n  - System.Windows.Forms.TextBoxBase.Undo\n  - System.Windows.Forms.TextBoxBase.WndProc(System.Windows.Forms.Message@)\n  - System.Windows.Forms.TextBoxBase.WordWrap\n  langs:\n  - csharp\n  name: TextBoxBase\n  nameWithType: TextBoxBase\n  fullName: System.Windows.Forms.TextBoxBase\n  type: Class\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Implements the basic functionality required by text controls.\n  remarks: This class implements the core features of text manipulation controls, such as <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.RichTextBox>. These include text selection, **Clipboard** functionality, multiline text control support, and many events.\n  example:\n  - \"The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars. This example also uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> properties to make the multiline text box control useful for creating text documents.  \\n  \\n [!code-cpp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CS/source.cs#1)]\\n [!code-vb[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/VB/source.vb#1)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.DefaultBindingProperty(\"Text\")]\n\n      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public abstract class TextBoxBase : System.Windows.Forms.Control\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  - System.ComponentModel.Component\n  - System.Windows.Forms.Control\n  derivedClasses:\n  - System.Windows.Forms.MaskedTextBox\n  - System.Windows.Forms.RichTextBox\n  - System.Windows.Forms.TextBox\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.Component.Container\n  - System.ComponentModel.Component.DesignMode\n  - System.ComponentModel.Component.Dispose\n  - System.ComponentModel.Component.Disposed\n  - System.ComponentModel.Component.Events\n  - System.ComponentModel.Component.GetService(System.Type)\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)\n  - System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32,System.Int32)\n  - System.Windows.Forms.Control.AccessibilityObject\n  - System.Windows.Forms.Control.AccessibleDefaultActionDescription\n  - System.Windows.Forms.Control.AccessibleDescription\n  - System.Windows.Forms.Control.AccessibleName\n  - System.Windows.Forms.Control.AccessibleRole\n  - System.Windows.Forms.Control.AllowDrop\n  - System.Windows.Forms.Control.Anchor\n  - System.Windows.Forms.Control.AutoScrollOffset\n  - System.Windows.Forms.Control.BackColorChanged\n  - System.Windows.Forms.Control.BeginInvoke(System.Delegate)\n  - System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])\n  - System.Windows.Forms.Control.BindingContext\n  - System.Windows.Forms.Control.BindingContextChanged\n  - System.Windows.Forms.Control.Bottom\n  - System.Windows.Forms.Control.Bounds\n  - System.Windows.Forms.Control.BringToFront\n  - System.Windows.Forms.Control.CanFocus\n  - System.Windows.Forms.Control.CanRaiseEvents\n  - System.Windows.Forms.Control.CanSelect\n  - System.Windows.Forms.Control.Capture\n  - System.Windows.Forms.Control.CausesValidation\n  - System.Windows.Forms.Control.CausesValidationChanged\n  - System.Windows.Forms.Control.ChangeUICues\n  - System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls\n  - System.Windows.Forms.Control.ClientRectangle\n  - System.Windows.Forms.Control.ClientSize\n  - System.Windows.Forms.Control.ClientSizeChanged\n  - System.Windows.Forms.Control.CompanyName\n  - System.Windows.Forms.Control.Contains(System.Windows.Forms.Control)\n  - System.Windows.Forms.Control.ContainsFocus\n  - System.Windows.Forms.Control.ContextMenu\n  - System.Windows.Forms.Control.ContextMenuChanged\n  - System.Windows.Forms.Control.ContextMenuStrip\n  - System.Windows.Forms.Control.ContextMenuStripChanged\n  - System.Windows.Forms.Control.ControlAdded\n  - System.Windows.Forms.Control.ControlRemoved\n  - System.Windows.Forms.Control.Controls\n  - System.Windows.Forms.Control.CreateAccessibilityInstance\n  - System.Windows.Forms.Control.CreateControl\n  - System.Windows.Forms.Control.CreateControlsInstance\n  - System.Windows.Forms.Control.Created\n  - System.Windows.Forms.Control.CreateGraphics\n  - System.Windows.Forms.Control.Cursor\n  - System.Windows.Forms.Control.CursorChanged\n  - System.Windows.Forms.Control.DataBindings\n  - System.Windows.Forms.Control.DefaultBackColor\n  - System.Windows.Forms.Control.DefaultFont\n  - System.Windows.Forms.Control.DefaultForeColor\n  - System.Windows.Forms.Control.DefaultImeMode\n  - System.Windows.Forms.Control.DefaultMargin\n  - System.Windows.Forms.Control.DefaultMaximumSize\n  - System.Windows.Forms.Control.DefaultMinimumSize\n  - System.Windows.Forms.Control.DefaultPadding\n  - System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)\n  - System.Windows.Forms.Control.DestroyHandle\n  - System.Windows.Forms.Control.DeviceDpi\n  - System.Windows.Forms.Control.DisplayRectangle\n  - System.Windows.Forms.Control.Dispose(System.Boolean)\n  - System.Windows.Forms.Control.Disposing\n  - System.Windows.Forms.Control.Dock\n  - System.Windows.Forms.Control.DockChanged\n  - System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)\n  - System.Windows.Forms.Control.DoubleClick\n  - System.Windows.Forms.Control.DpiChangedAfterParent\n  - System.Windows.Forms.Control.DpiChangedBeforeParent\n  - System.Windows.Forms.Control.DragDrop\n  - System.Windows.Forms.Control.DragEnter\n  - System.Windows.Forms.Control.DragLeave\n  - System.Windows.Forms.Control.DragOver\n  - System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)\n  - System.Windows.Forms.Control.Enabled\n  - System.Windows.Forms.Control.EnabledChanged\n  - System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)\n  - System.Windows.Forms.Control.Enter\n  - System.Windows.Forms.Control.FindForm\n  - System.Windows.Forms.Control.Focus\n  - System.Windows.Forms.Control.Focused\n  - System.Windows.Forms.Control.Font\n  - System.Windows.Forms.Control.FontChanged\n  - System.Windows.Forms.Control.FontHeight\n  - System.Windows.Forms.Control.ForeColorChanged\n  - System.Windows.Forms.Control.FromChildHandle(System.IntPtr)\n  - System.Windows.Forms.Control.FromHandle(System.IntPtr)\n  - System.Windows.Forms.Control.GetAccessibilityObjectById(System.Int32)\n  - System.Windows.Forms.Control.GetAutoSizeMode\n  - System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point)\n  - System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point,System.Windows.Forms.GetChildAtPointSkip)\n  - System.Windows.Forms.Control.GetContainerControl\n  - System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)\n  - System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)\n  - System.Windows.Forms.Control.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)\n  - System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)\n  - System.Windows.Forms.Control.GetTopLevel\n  - System.Windows.Forms.Control.GiveFeedback\n  - System.Windows.Forms.Control.GotFocus\n  - System.Windows.Forms.Control.Handle\n  - System.Windows.Forms.Control.HandleCreated\n  - System.Windows.Forms.Control.HandleDestroyed\n  - System.Windows.Forms.Control.HasChildren\n  - System.Windows.Forms.Control.Height\n  - System.Windows.Forms.Control.HelpRequested\n  - System.Windows.Forms.Control.Hide\n  - System.Windows.Forms.Control.ImeMode\n  - System.Windows.Forms.Control.ImeModeChanged\n  - System.Windows.Forms.Control.InitLayout\n  - System.Windows.Forms.Control.Invalidate\n  - System.Windows.Forms.Control.Invalidate(System.Boolean)\n  - System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle)\n  - System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle,System.Boolean)\n  - System.Windows.Forms.Control.Invalidate(System.Drawing.Region)\n  - System.Windows.Forms.Control.Invalidate(System.Drawing.Region,System.Boolean)\n  - System.Windows.Forms.Control.Invalidated\n  - System.Windows.Forms.Control.Invoke(System.Delegate)\n  - System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])\n  - System.Windows.Forms.Control.InvokeGotFocus(System.Windows.Forms.Control,System.EventArgs)\n  - System.Windows.Forms.Control.InvokeLostFocus(System.Windows.Forms.Control,System.EventArgs)\n  - System.Windows.Forms.Control.InvokeOnClick(System.Windows.Forms.Control,System.EventArgs)\n  - System.Windows.Forms.Control.InvokePaint(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)\n  - System.Windows.Forms.Control.InvokePaintBackground(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)\n  - System.Windows.Forms.Control.InvokeRequired\n  - System.Windows.Forms.Control.IsAccessible\n  - System.Windows.Forms.Control.IsDisposed\n  - System.Windows.Forms.Control.IsHandleCreated\n  - System.Windows.Forms.Control.IsInputChar(System.Char)\n  - System.Windows.Forms.Control.IsKeyLocked(System.Windows.Forms.Keys)\n  - System.Windows.Forms.Control.IsMirrored\n  - System.Windows.Forms.Control.IsMnemonic(System.Char,System.String)\n  - System.Windows.Forms.Control.KeyDown\n  - System.Windows.Forms.Control.KeyPress\n  - System.Windows.Forms.Control.KeyUp\n  - System.Windows.Forms.Control.Layout\n  - System.Windows.Forms.Control.LayoutEngine\n  - System.Windows.Forms.Control.Leave\n  - System.Windows.Forms.Control.Left\n  - System.Windows.Forms.Control.Location\n  - System.Windows.Forms.Control.LocationChanged\n  - System.Windows.Forms.Control.LogicalToDeviceUnits(System.Int32)\n  - System.Windows.Forms.Control.LostFocus\n  - System.Windows.Forms.Control.Margin\n  - System.Windows.Forms.Control.MarginChanged\n  - System.Windows.Forms.Control.MaximumSize\n  - System.Windows.Forms.Control.MinimumSize\n  - System.Windows.Forms.Control.ModifierKeys\n  - System.Windows.Forms.Control.MouseButtons\n  - System.Windows.Forms.Control.MouseCaptureChanged\n  - System.Windows.Forms.Control.MouseDoubleClick\n  - System.Windows.Forms.Control.MouseDown\n  - System.Windows.Forms.Control.MouseEnter\n  - System.Windows.Forms.Control.MouseHover\n  - System.Windows.Forms.Control.MouseLeave\n  - System.Windows.Forms.Control.MouseMove\n  - System.Windows.Forms.Control.MousePosition\n  - System.Windows.Forms.Control.MouseUp\n  - System.Windows.Forms.Control.MouseWheel\n  - System.Windows.Forms.Control.Move\n  - System.Windows.Forms.Control.Name\n  - System.Windows.Forms.Control.NotifyInvalidate(System.Drawing.Rectangle)\n  - System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)\n  - System.Windows.Forms.Control.OnClick(System.EventArgs)\n  - System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)\n  - System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)\n  - System.Windows.Forms.Control.OnCreateControl\n  - System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnDockChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)\n  - System.Windows.Forms.Control.OnDpiChangedAfterParent(System.EventArgs)\n  - System.Windows.Forms.Control.OnDpiChangedBeforeParent(System.EventArgs)\n  - System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)\n  - System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)\n  - System.Windows.Forms.Control.OnDragLeave(System.EventArgs)\n  - System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)\n  - System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnEnter(System.EventArgs)\n  - System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)\n  - System.Windows.Forms.Control.OnGotFocus(System.EventArgs)\n  - System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)\n  - System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)\n  - System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)\n  - System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)\n  - System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)\n  - System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)\n  - System.Windows.Forms.Control.OnLeave(System.EventArgs)\n  - System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnLostFocus(System.EventArgs)\n  - System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)\n  - System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)\n  - System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)\n  - System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)\n  - System.Windows.Forms.Control.OnMouseHover(System.EventArgs)\n  - System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)\n  - System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)\n  - System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)\n  - System.Windows.Forms.Control.OnMove(System.EventArgs)\n  - System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)\n  - System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)\n  - System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)\n  - System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnParentChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)\n  - System.Windows.Forms.Control.OnPrint(System.Windows.Forms.PaintEventArgs)\n  - System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)\n  - System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnResize(System.EventArgs)\n  - System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnValidated(System.EventArgs)\n  - System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)\n  - System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)\n  - System.Windows.Forms.Control.Parent\n  - System.Windows.Forms.Control.ParentChanged\n  - System.Windows.Forms.Control.PerformLayout\n  - System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)\n  - System.Windows.Forms.Control.PointToClient(System.Drawing.Point)\n  - System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)\n  - System.Windows.Forms.Control.PreferredSize\n  - System.Windows.Forms.Control.PreProcessControlMessage(System.Windows.Forms.Message@)\n  - System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)\n  - System.Windows.Forms.Control.PreviewKeyDown\n  - System.Windows.Forms.Control.ProcessDialogChar(System.Char)\n  - System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)\n  - System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)\n  - System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)\n  - System.Windows.Forms.Control.ProcessMnemonic(System.Char)\n  - System.Windows.Forms.Control.ProductName\n  - System.Windows.Forms.Control.ProductVersion\n  - System.Windows.Forms.Control.PropagatingImeMode\n  - System.Windows.Forms.Control.QueryAccessibilityHelp\n  - System.Windows.Forms.Control.QueryContinueDrag\n  - System.Windows.Forms.Control.RaiseDragEvent(System.Object,System.Windows.Forms.DragEventArgs)\n  - System.Windows.Forms.Control.RaiseKeyEvent(System.Object,System.Windows.Forms.KeyEventArgs)\n  - System.Windows.Forms.Control.RaiseMouseEvent(System.Object,System.Windows.Forms.MouseEventArgs)\n  - System.Windows.Forms.Control.RaisePaintEvent(System.Object,System.Windows.Forms.PaintEventArgs)\n  - System.Windows.Forms.Control.RecreateHandle\n  - System.Windows.Forms.Control.RecreatingHandle\n  - System.Windows.Forms.Control.RectangleToClient(System.Drawing.Rectangle)\n  - System.Windows.Forms.Control.RectangleToScreen(System.Drawing.Rectangle)\n  - System.Windows.Forms.Control.ReflectMessage(System.IntPtr,System.Windows.Forms.Message@)\n  - System.Windows.Forms.Control.Refresh\n  - System.Windows.Forms.Control.Region\n  - System.Windows.Forms.Control.RegionChanged\n  - System.Windows.Forms.Control.RenderRightToLeft\n  - System.Windows.Forms.Control.RescaleConstantsForDpi(System.Int32,System.Int32)\n  - System.Windows.Forms.Control.ResetBackColor\n  - System.Windows.Forms.Control.ResetBindings\n  - System.Windows.Forms.Control.ResetCursor\n  - System.Windows.Forms.Control.ResetFont\n  - System.Windows.Forms.Control.ResetForeColor\n  - System.Windows.Forms.Control.ResetImeMode\n  - System.Windows.Forms.Control.ResetMouseEventArgs\n  - System.Windows.Forms.Control.ResetRightToLeft\n  - System.Windows.Forms.Control.ResetText\n  - System.Windows.Forms.Control.Resize\n  - System.Windows.Forms.Control.ResizeRedraw\n  - System.Windows.Forms.Control.ResumeLayout\n  - System.Windows.Forms.Control.ResumeLayout(System.Boolean)\n  - System.Windows.Forms.Control.Right\n  - System.Windows.Forms.Control.RightToLeft\n  - System.Windows.Forms.Control.RightToLeftChanged\n  - System.Windows.Forms.Control.RtlTranslateAlignment(System.Drawing.ContentAlignment)\n  - System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)\n  - System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.LeftRightAlignment)\n  - System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)\n  - System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)\n  - System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)\n  - System.Windows.Forms.Control.Scale(System.Drawing.SizeF)\n  - System.Windows.Forms.Control.Scale(System.Single)\n  - System.Windows.Forms.Control.Scale(System.Single,System.Single)\n  - System.Windows.Forms.Control.ScaleBitmapLogicalToDevice(System.Drawing.Bitmap@)\n  - System.Windows.Forms.Control.ScaleChildren\n  - System.Windows.Forms.Control.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)\n  - System.Windows.Forms.Control.ScaleCore(System.Single,System.Single)\n  - System.Windows.Forms.Control.Select\n  - System.Windows.Forms.Control.Select(System.Boolean,System.Boolean)\n  - System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)\n  - System.Windows.Forms.Control.SendToBack\n  - System.Windows.Forms.Control.SetAutoSizeMode(System.Windows.Forms.AutoSizeMode)\n  - System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)\n  - System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)\n  - System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)\n  - System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)\n  - System.Windows.Forms.Control.SetTopLevel(System.Boolean)\n  - System.Windows.Forms.Control.SetVisibleCore(System.Boolean)\n  - System.Windows.Forms.Control.Show\n  - System.Windows.Forms.Control.ShowFocusCues\n  - System.Windows.Forms.Control.ShowKeyboardCues\n  - System.Windows.Forms.Control.Site\n  - System.Windows.Forms.Control.Size\n  - System.Windows.Forms.Control.SizeChanged\n  - System.Windows.Forms.Control.SizeFromClientSize(System.Drawing.Size)\n  - System.Windows.Forms.Control.StyleChanged\n  - System.Windows.Forms.Control.SuspendLayout\n  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragDrop(System.Windows.Forms.DragEventArgs)\n  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragEnter(System.Windows.Forms.DragEventArgs)\n  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragLeave(System.EventArgs)\n  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragOver(System.Windows.Forms.DragEventArgs)\n  - System.Windows.Forms.Control.SystemColorsChanged\n  - System.Windows.Forms.Control.TabIndex\n  - System.Windows.Forms.Control.TabIndexChanged\n  - System.Windows.Forms.Control.TabStop\n  - System.Windows.Forms.Control.TabStopChanged\n  - System.Windows.Forms.Control.Tag\n  - System.Windows.Forms.Control.TextChanged\n  - System.Windows.Forms.Control.Top\n  - System.Windows.Forms.Control.TopLevelControl\n  - System.Windows.Forms.Control.Update\n  - System.Windows.Forms.Control.UpdateBounds\n  - System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32)\n  - System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  - System.Windows.Forms.Control.UpdateStyles\n  - System.Windows.Forms.Control.UpdateZOrder\n  - System.Windows.Forms.Control.UseWaitCursor\n  - System.Windows.Forms.Control.Validated\n  - System.Windows.Forms.Control.Validating\n  - System.Windows.Forms.Control.Visible\n  - System.Windows.Forms.Control.VisibleChanged\n  - System.Windows.Forms.Control.Width\n  - System.Windows.Forms.Control.WindowTarget\n  attributes:\n  - type: System.ComponentModel.DefaultBindingPropertyAttribute\n  - type: System.Runtime.InteropServices.ClassInterfaceAttribute\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.TextBoxBase.AcceptsTab\n  commentId: P:System.Windows.Forms.TextBoxBase.AcceptsTab\n  id: AcceptsTab\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: AcceptsTab\n  nameWithType: TextBoxBase.AcceptsTab\n  fullName: TextBoxBase.AcceptsTab\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether pressing the TAB key in a multiline text box control types a TAB character in the control instead of moving the focus to the next control in the tab order.\n  remarks: \"The <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property must also be `true` to get a TAB character in the control.  \\n  \\n If the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A> property is set to `true`, the user must press CTRL+TAB to move the focus to the next control in the tab order.\"\n  example:\n  - \"The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars. This example also uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> properties to make the multiline text box control useful for creating text documents.  \\n  \\n [!code-cpp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CS/source.cs#1)]\\n [!code-vb[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/VB/source.vb#1)]\"\n  syntax:\n    content: public bool AcceptsTab { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if users can enter tabs in a multiline text box using the TAB key; `false` if pressing the TAB key moves the focus. The default is `false`.'\n  overload: System.Windows.Forms.TextBoxBase.AcceptsTab*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.TextBoxBase.AcceptsTabChanged\n  commentId: E:System.Windows.Forms.TextBoxBase.AcceptsTabChanged\n  id: AcceptsTabChanged\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: AcceptsTabChanged\n  nameWithType: TextBoxBase.AcceptsTabChanged\n  fullName: TextBoxBase.AcceptsTabChanged\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the value of the <xref href=\"System.Windows.Forms.TextBoxBase.AcceptsTab\"></xref> property has changed.\n  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBoxBase.AcceptsTabChanged> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>. Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBoxBase.AcceptsTabChanged> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#241](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#241)]\\n [!code-vb[System.Windows.Forms.EventExamples#241](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#241)]\"\n  syntax:\n    content: public event EventHandler AcceptsTabChanged;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.TextBoxBase.AppendText(System.String)\n  commentId: M:System.Windows.Forms.TextBoxBase.AppendText(System.String)\n  id: AppendText(System.String)\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: AppendText(String)\n  nameWithType: TextBoxBase.AppendText(String)\n  fullName: TextBoxBase.AppendText(String)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Appends text to the current text of a text box.\n  remarks: You can use this method to add text to the existing text in the control instead of using the concatenation operator (+) to concatenate text to the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property.\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Windows.Forms.TextBoxBase.AppendText%2A> method and the <xref:System.Windows.Forms.TextBoxBase.TextLength%2A> property to copy text from one <xref:System.Windows.Forms.TextBox> to another. This example requires that two <xref:System.Windows.Forms.TextBox> controls named, `textBox1` and `textBox2`, have been added to a form and that `textBox1` has text assigned to its <xref:System.Windows.Forms.Control.Text%2A> property.  \\n  \\n [!code-cpp[TextBoxBase.AppendText#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TextBoxBase.AppendText/CPP/form1.cpp#1)]\\n [!code-csharp[TextBoxBase.AppendText#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TextBoxBase.AppendText/CS/form1.cs#1)]\\n [!code-vb[TextBoxBase.AppendText#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TextBoxBase.AppendText/VB/form1.vb#1)]\"\n  syntax:\n    content: public void AppendText (string text);\n    parameters:\n    - id: text\n      type: System.String\n      description: The text to append to the current contents of the text box.\n  overload: System.Windows.Forms.TextBoxBase.AppendText*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.TextBoxBase.AutoSize\n  commentId: P:System.Windows.Forms.TextBoxBase.AutoSize\n  id: AutoSize\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: AutoSize\n  nameWithType: TextBoxBase.AutoSize\n  fullName: TextBoxBase.AutoSize\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether the height of the control automatically adjusts when the font assigned to the control is changed.\n  remarks: \"When you set the <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> property to `true` for a <xref:System.Windows.Forms.TextBox>, when the <xref:System.Windows.Forms.Control.Font%2A> changes, the <xref:System.Windows.Forms.TextBox> expands or contracts the <xref:System.Windows.Forms.Control.Height%2A> to accommodate the larger or smaller text. The <xref:System.Windows.Forms.Control.Width%2A> of the <xref:System.Windows.Forms.TextBox> does not change.  \\n  \\n If you want to change the size of the control as the user enters text, you can use a <xref:System.Windows.Forms.RichTextBox> control and use its <xref:System.Windows.Forms.RichTextBox.ContentsResized> event to change its size.\"\n  example:\n  - \"This example assumes that you have a form with two text boxes, two buttons, and click events for each of the buttons. The example demonstrates the <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> property by setting it to `true` for one text box and `false` for the other. When you click one button the text boxes are filled with a smaller text, and when you click the other button the text boxes are filled with larger text. The text box that has <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> set to `true` expands in height to accommodate the larger text. The width does not change.  \\n  \\n [!code-csharp[SystemWindowsFormsAutoSize#1](~/samples/snippets/csharp/VS_Snippets_Winforms/SystemWindowsFormsAutoSize/CS/Form1.cs#1)]\\n [!code-vb[SystemWindowsFormsAutoSize#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SystemWindowsFormsAutoSize/VB/Form1.vb#1)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public override bool AutoSize { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the height of the control automatically adjusts when the font is changed; otherwise, `false`. The default is `true`.'\n  overload: System.Windows.Forms.TextBoxBase.AutoSize*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.TextBoxBase.AutoSizeChanged\n  commentId: E:System.Windows.Forms.TextBoxBase.AutoSizeChanged\n  id: AutoSizeChanged\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: AutoSizeChanged\n  nameWithType: TextBoxBase.AutoSizeChanged\n  fullName: TextBoxBase.AutoSizeChanged\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: This event is not relevant for this class.\n  remarks: This event is not relevant for this class.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public event EventHandler AutoSizeChanged;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.TextBoxBase.BackColor\n  commentId: P:System.Windows.Forms.TextBoxBase.BackColor\n  id: BackColor\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: BackColor\n  nameWithType: TextBoxBase.BackColor\n  fullName: TextBoxBase.BackColor\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the background color of the control.\n  remarks: \"You can use the <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> property to change the background color of the text control to blend into the color scheme of your forms.  \\n  \\n To change the color of the text within the control, use the <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> property. When setting the <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> property of your text control, ensure that the color you choose does not cause the text of the control to disappear. For example, if the <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> and <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> properties are both set to `Color.Black`, the text within your textbox control will not be visible.  \\n  \\n This property might be over ridden if the <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> property of the <xref:System.Windows.Forms.TextBoxBase> is set to `true`.\"\n  syntax:\n    content: public override System.Drawing.Color BackColor { get; set; }\n    return:\n      type: System.Drawing.Color\n      description: A <xref href=\"System.Drawing.Color\"></xref> that represents the background of the control.\n  overload: System.Windows.Forms.TextBoxBase.BackColor*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.TextBoxBase.BackgroundImage\n  commentId: P:System.Windows.Forms.TextBoxBase.BackgroundImage\n  id: BackgroundImage\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: BackgroundImage\n  nameWithType: TextBoxBase.BackgroundImage\n  fullName: TextBoxBase.BackgroundImage\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: This property is not relevant for this class.\n  remarks: This property is not relevant for this class.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public override System.Drawing.Image BackgroundImage { get; set; }\n    return:\n      type: System.Drawing.Image\n      description: The background image for the object.\n  overload: System.Windows.Forms.TextBoxBase.BackgroundImage*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.TextBoxBase.BackgroundImageChanged\n  commentId: E:System.Windows.Forms.TextBoxBase.BackgroundImageChanged\n  id: BackgroundImageChanged\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: BackgroundImageChanged\n  nameWithType: TextBoxBase.BackgroundImageChanged\n  fullName: TextBoxBase.BackgroundImageChanged\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the value of the <xref href=\"System.Windows.Forms.TextBoxBase.BackgroundImage\"></xref> property changes. This event is not relevant for this class.\n  remarks: This event is not relevant for this class.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public event EventHandler BackgroundImageChanged;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.TextBoxBase.BackgroundImageLayout\n  commentId: P:System.Windows.Forms.TextBoxBase.BackgroundImageLayout\n  id: BackgroundImageLayout\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: BackgroundImageLayout\n  nameWithType: TextBoxBase.BackgroundImageLayout\n  fullName: TextBoxBase.BackgroundImageLayout\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: This property is not relevant for this class.\n  remarks: This property is not relevant for this class.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public override System.Windows.Forms.ImageLayout BackgroundImageLayout { get; set; }\n    return:\n      type: System.Windows.Forms.ImageLayout\n      description: One of the <xref href=\"System.Windows.Forms.ImageLayout\"></xref> values.\n  overload: System.Windows.Forms.TextBoxBase.BackgroundImageLayout*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.TextBoxBase.BackgroundImageLayoutChanged\n  commentId: E:System.Windows.Forms.TextBoxBase.BackgroundImageLayoutChanged\n  id: BackgroundImageLayoutChanged\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: BackgroundImageLayoutChanged\n  nameWithType: TextBoxBase.BackgroundImageLayoutChanged\n  fullName: TextBoxBase.BackgroundImageLayoutChanged\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the value of the <xref href=\"System.Windows.Forms.TextBoxBase.BackgroundImageLayout\"></xref> property changes. This event is not relevant for this class.\n  remarks: This event is not relevant for this class.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public event EventHandler BackgroundImageLayoutChanged;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.TextBoxBase.BorderStyle\n  commentId: P:System.Windows.Forms.TextBoxBase.BorderStyle\n  id: BorderStyle\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: BorderStyle\n  nameWithType: TextBoxBase.BorderStyle\n  fullName: TextBoxBase.BorderStyle\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the border type of the text box control.\n  remarks: \"You can use the <xref:System.Windows.Forms.TextBoxBase.BorderStyle%2A> property to create borderless and flat style controls, in addition to the default three-dimensional control.  \\n  \\n> [!NOTE]\\n>  The derived class, <xref:System.Windows.Forms.RichTextBox>, does not support the `BorderStyle.FixedSingle` style. This style will cause the <xref:System.Windows.Forms.BorderStyle> to use the `BorderStyle.Fixed3D` style instead.\"\n  example:\n  - \"The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a text box that can properly display text using 20-point Arial with a single border. This example uses the <xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A> property to determine the appropriate height of the control after the font and <xref:System.Windows.Forms.TextBoxBase.BorderStyle%2A> have been assigned to the control.  \\n  \\n [!code-cpp[Classic TextBoxBase.BorderStyle Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.BorderStyle Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic TextBoxBase.BorderStyle Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.BorderStyle Example/CS/source.cs#1)]\\n [!code-vb[Classic TextBoxBase.BorderStyle Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.BorderStyle Example/VB/source.vb#1)]\"\n  syntax:\n    content: public System.Windows.Forms.BorderStyle BorderStyle { get; set; }\n    return:\n      type: System.Windows.Forms.BorderStyle\n      description: A <xref href=\"System.Windows.Forms.BorderStyle\"></xref> that represents the border type of the text box control. The default is `Fixed3D`.\n  overload: System.Windows.Forms.TextBoxBase.BorderStyle*\n  exceptions:\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: A value that is not within the range of valid values for the enumeration was assigned to the property.\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.TextBoxBase.BorderStyleChanged\n  commentId: E:System.Windows.Forms.TextBoxBase.BorderStyleChanged\n  id: BorderStyleChanged\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: BorderStyleChanged\n  nameWithType: TextBoxBase.BorderStyleChanged\n  fullName: TextBoxBase.BorderStyleChanged\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the value of the <xref href=\"System.Windows.Forms.TextBoxBase.BorderStyle\"></xref> property has changed.\n  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBoxBase.BorderStyleChanged> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>. Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBoxBase.BorderStyleChanged> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#242](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#242)]\\n [!code-vb[System.Windows.Forms.EventExamples#242](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#242)]\"\n  syntax:\n    content: public event EventHandler BorderStyleChanged;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.TextBoxBase.CanEnableIme\n  commentId: P:System.Windows.Forms.TextBoxBase.CanEnableIme\n  id: CanEnableIme\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: CanEnableIme\n  nameWithType: TextBoxBase.CanEnableIme\n  fullName: TextBoxBase.CanEnableIme\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets a value indicating whether the <xref href=\"System.Windows.Forms.Control.ImeMode\"></xref> property can be set to an active value, to enable IME support.\n  syntax:\n    content: protected override bool CanEnableIme { get; }\n    return:\n      type: System.Boolean\n      description: '`false` if the <xref href=\"System.Windows.Forms.TextBoxBase.ReadOnly\"></xref> property is `true` or if this <xref href=\"System.Windows.Forms.TextBoxBase\"></xref> class is set to use a password mask character; otherwise, `true`.'\n  overload: System.Windows.Forms.TextBoxBase.CanEnableIme*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.TextBoxBase.CanUndo\n  commentId: P:System.Windows.Forms.TextBoxBase.CanUndo\n  id: CanUndo\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: CanUndo\n  nameWithType: TextBoxBase.CanUndo\n  fullName: TextBoxBase.CanUndo\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets a value indicating whether the user can undo the previous operation in a text box control.\n  remarks: If this method returns `true`, you can call the <xref:System.Windows.Forms.TextBoxBase.Undo%2A> method to undo the last operation in a text box. You can use this method in the <xref:System.Windows.Forms.MenuItem.Popup> event of a <xref:System.Windows.Forms.MenuItem>, or in code that manages the state of buttons on a <xref:System.Windows.Forms.ToolBar> to enable or disable the ability to undo the previous operation in a text box control.\n  example:\n  - \"The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class. It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations. This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.  \\n  \\n [!code-cpp[Classic TextBoxBase.CanUndo Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.CanUndo Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic TextBoxBase.CanUndo Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.CanUndo Example/CS/source.cs#1)]\\n [!code-vb[Classic TextBoxBase.CanUndo Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.CanUndo Example/VB/source.vb#1)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public bool CanUndo { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the user can undo the previous operation performed in a text box control; otherwise, `false`.'\n  overload: System.Windows.Forms.TextBoxBase.CanUndo*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.TextBoxBase.Clear\n  commentId: M:System.Windows.Forms.TextBoxBase.Clear\n  id: Clear\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: TextBoxBase.Clear()\n  fullName: TextBoxBase.Clear()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Clears all text from the text box control.\n  remarks: You can use this method to clear the contents of the control instead of assigning the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property an empty string.\n  example:\n  - \"The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create an event handler for the <xref:System.Windows.Forms.Control.TextChanged> event. The code within the event handler restricts data to numbers. After text has been entered in the control, the code determines if the text entered is a number. If the text is not a number, the code clears the text from the control and a <xref:System.Windows.Forms.MessageBox> is displayed to alert the user that only numbers are accepted. The example requires that a `Boolean` variable named `flag` and a <xref:System.Windows.Forms.TextBox> control called `textBox1` are defined outside of this method. This example demonstrates how to use a flag variable to avoid a cascading event in the <xref:System.Windows.Forms.Control.TextChanged> event.  \\n  \\n [!code-cpp[Classic TextBoxBase.Clear Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.Clear Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic TextBoxBase.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.Clear Example/CS/source.cs#1)]\\n [!code-vb[Classic TextBoxBase.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.Clear Example/VB/source.vb#1)]\"\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  overload: System.Windows.Forms.TextBoxBase.Clear*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.TextBoxBase.ClearUndo\n  commentId: M:System.Windows.Forms.TextBoxBase.ClearUndo\n  id: ClearUndo\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: ClearUndo()\n  nameWithType: TextBoxBase.ClearUndo()\n  fullName: TextBoxBase.ClearUndo()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Clears information about the most recent operation from the undo buffer of the text box.\n  remarks: You can use this method to prevent an undo operation from repeating, based on the state of your application.\n  example:\n  - \"The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class. It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations. This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.  \\n  \\n [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CS/source.cs#1)]\\n [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/VB/source.vb#1)]\"\n  syntax:\n    content: public void ClearUndo ();\n    parameters: []\n  overload: System.Windows.Forms.TextBoxBase.ClearUndo*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.TextBoxBase.Click\n  commentId: E:System.Windows.Forms.TextBoxBase.Click\n  id: Click\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: Click\n  nameWithType: TextBoxBase.Click\n  fullName: TextBoxBase.Click\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the text box is clicked.\n  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'\n  example:\n  - \"The following code example demonstrates how to handle the <xref:System.Windows.Forms.TextBoxBase.Click> event. To run the example, paste the following code in a form containing a <xref:System.Windows.Forms.TextBox> control called TextBox1. This example requires that the event-handling method has been associated with the <xref:System.Windows.Forms.TextBoxBase.Click> event.  \\n  \\n [!code-cpp[System.Windows.Forms.TextBoxBaseScrolling#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/CPP/form1.cpp#2)]\\n [!code-csharp[System.Windows.Forms.TextBoxBaseScrolling#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/CS/form1.cs#2)]\\n [!code-vb[System.Windows.Forms.TextBoxBaseScrolling#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/VB/form1.vb#2)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(true)]\n\n      public event EventHandler Click;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.TextBoxBase.Copy\n  commentId: M:System.Windows.Forms.TextBoxBase.Copy\n  id: Copy\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: Copy()\n  nameWithType: TextBoxBase.Copy()\n  fullName: TextBoxBase.Copy()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Copies the current selection in the text box to the **Clipboard**.\n  remarks: You can use this method, instead of using the <xref:System.Windows.Forms.Clipboard> class, to copy text in the text box and place it in the **Clipboard**.\n  example:\n  - \"The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class. It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations. This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.  \\n  \\n [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CS/source.cs#1)]\\n [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/VB/source.vb#1)]\"\n  syntax:\n    content: public void Copy ();\n    parameters: []\n  overload: System.Windows.Forms.TextBoxBase.Copy*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.TextBoxBase.CreateHandle\n  commentId: M:System.Windows.Forms.TextBoxBase.CreateHandle\n  id: CreateHandle\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: CreateHandle()\n  nameWithType: TextBoxBase.CreateHandle()\n  fullName: TextBoxBase.CreateHandle()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Creates a handle for the control.\n  syntax:\n    content: protected override void CreateHandle ();\n    parameters: []\n  overload: System.Windows.Forms.TextBoxBase.CreateHandle*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.TextBoxBase.CreateParams\n  commentId: P:System.Windows.Forms.TextBoxBase.CreateParams\n  id: CreateParams\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: CreateParams\n  nameWithType: TextBoxBase.CreateParams\n  fullName: TextBoxBase.CreateParams\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the required creation parameters when the control handle is created.\n  syntax:\n    content: protected override System.Windows.Forms.CreateParams CreateParams { get; }\n    return:\n      type: System.Windows.Forms.CreateParams\n      description: A <xref href=\"System.Windows.Forms.CreateParams\"></xref> that contains the required creation parameters when the handle to the control is created.\n  overload: System.Windows.Forms.TextBoxBase.CreateParams*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.TextBoxBase.Cut\n  commentId: M:System.Windows.Forms.TextBoxBase.Cut\n  id: Cut\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: Cut()\n  nameWithType: TextBoxBase.Cut()\n  fullName: TextBoxBase.Cut()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Moves the current selection in the text box to the **Clipboard**.\n  remarks: This method will only cut text from the text box if text is selected in the control. You can use this method, instead of using the <xref:System.Windows.Forms.Clipboard> class, to copy text in the text box and move it to the **Clipboard**.\n  example:\n  - \"The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class. It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations. This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.  \\n  \\n [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CS/source.cs#1)]\\n [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/VB/source.vb#1)]\"\n  syntax:\n    content: public void Cut ();\n    parameters: []\n  overload: System.Windows.Forms.TextBoxBase.Cut*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.TextBoxBase.DefaultCursor\n  commentId: P:System.Windows.Forms.TextBoxBase.DefaultCursor\n  id: DefaultCursor\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: DefaultCursor\n  nameWithType: TextBoxBase.DefaultCursor\n  fullName: TextBoxBase.DefaultCursor\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the default cursor for the control.\n  remarks: Override <xref:System.Windows.Forms.TextBoxBase.DefaultCursor%2A> to configure a default cursor for your control. This is more efficient than setting the cursor in the control's constructor, and gives automatic support for certain cursor-related designer functions.\n  syntax:\n    content: protected override System.Windows.Forms.Cursor DefaultCursor { get; }\n    return:\n      type: System.Windows.Forms.Cursor\n      description: An object of type <xref href=\"System.Windows.Forms.Cursor\"></xref> representing the current default cursor.\n  overload: System.Windows.Forms.TextBoxBase.DefaultCursor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.TextBoxBase.DefaultSize\n  commentId: P:System.Windows.Forms.TextBoxBase.DefaultSize\n  id: DefaultSize\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: DefaultSize\n  nameWithType: TextBoxBase.DefaultSize\n  fullName: TextBoxBase.DefaultSize\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the default size of the control.\n  syntax:\n    content: protected override System.Drawing.Size DefaultSize { get; }\n    return:\n      type: System.Drawing.Size\n      description: The default <xref href=\"System.Drawing.Size\"></xref> of the control.\n  overload: System.Windows.Forms.TextBoxBase.DefaultSize*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.TextBoxBase.DeselectAll\n  commentId: M:System.Windows.Forms.TextBoxBase.DeselectAll\n  id: DeselectAll\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: DeselectAll()\n  nameWithType: TextBoxBase.DeselectAll()\n  fullName: TextBoxBase.DeselectAll()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Specifies that the value of the <xref href=\"System.Windows.Forms.TextBoxBase.SelectionLength\"></xref> property is zero so that no characters are selected in the control.\n  syntax:\n    content: public void DeselectAll ();\n    parameters: []\n  overload: System.Windows.Forms.TextBoxBase.DeselectAll*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.TextBoxBase.DoubleBuffered\n  commentId: P:System.Windows.Forms.TextBoxBase.DoubleBuffered\n  id: DoubleBuffered\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: DoubleBuffered\n  nameWithType: TextBoxBase.DoubleBuffered\n  fullName: TextBoxBase.DoubleBuffered\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether control drawing is done in a buffer before the control is displayed. This property is not relevant for this class.\n  remarks: This property is not relevant for this class.\n  syntax:\n    content: protected override bool DoubleBuffered { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` to implement double buffering on the control; otherwise, `false`.'\n  overload: System.Windows.Forms.TextBoxBase.DoubleBuffered*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.TextBoxBase.ForeColor\n  commentId: P:System.Windows.Forms.TextBoxBase.ForeColor\n  id: ForeColor\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: ForeColor\n  nameWithType: TextBoxBase.ForeColor\n  fullName: TextBoxBase.ForeColor\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the foreground color of the control.\n  remarks: \"You can use the <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> property to change the color of the text within the control to match the text of other controls on your form. You can also use this property to highlight a specific text box that contains an invalid value.  \\n  \\n To change the background color of the control, use the <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> property. When setting the <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> property of your text control, ensure that the color you choose does not cause the text of the control to disappear. For example, if the <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> and <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> properties are both set to `Color.Black`, the text within your textbox control will not be visible.  \\n  \\n This property might be over ridden if the <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> property of the <xref:System.Windows.Forms.TextBoxBase> is set to `true`.\"\n  syntax:\n    content: public override System.Drawing.Color ForeColor { get; set; }\n    return:\n      type: System.Drawing.Color\n      description: A <xref href=\"System.Drawing.Color\"></xref> that represents the control's foreground color.\n  overload: System.Windows.Forms.TextBoxBase.ForeColor*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)\n  commentId: M:System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)\n  id: GetCharFromPosition(System.Drawing.Point)\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: GetCharFromPosition(Point)\n  nameWithType: TextBoxBase.GetCharFromPosition(Point)\n  fullName: TextBoxBase.GetCharFromPosition(Point)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Retrieves the character that is closest to the specified location within the control.\n  remarks: \"If the location specified in the `pt` parameter is outside the client area of the control, the first character of the string closest to the point specified in `pt` is returned. You can use this method to determine which characters are located near a specific point within the control. You can then use this value to perform operations on the text at that location.  \\n  \\n> [!NOTE]\\n>  If the specified location in the `pt` parameter is located on the right side of the client area of the control, the last character of the string closest to the point specified in `pt` is returned.\"\n  syntax:\n    content: public virtual char GetCharFromPosition (System.Drawing.Point pt);\n    parameters:\n    - id: pt\n      type: System.Drawing.Point\n      description: The location from which to seek the nearest character.\n    return:\n      type: System.Char\n      description: The character at the specified location.\n  overload: System.Windows.Forms.TextBoxBase.GetCharFromPosition*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)\n  commentId: M:System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)\n  id: GetCharIndexFromPosition(System.Drawing.Point)\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: GetCharIndexFromPosition(Point)\n  nameWithType: TextBoxBase.GetCharIndexFromPosition(Point)\n  fullName: TextBoxBase.GetCharIndexFromPosition(Point)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Retrieves the index of the character nearest to the specified location.\n  remarks: \"This method returns the character index that is closest to the position specified in the `pt` parameter. The character index is a zero-based index of text in the control, including spaces. You can use this method to determine where in the text the user has the mouse over by passing the mouse coordinates to this method. This can be useful if you want to perform tasks when the user rests the mouse pointer over a word in the text of the control.  \\n  \\n> [!IMPORTANT]\\n>  If the specified location is not within the client rectangle of the control, or is beyond the last character in the control, the return value is the index of the last character.\"\n  syntax:\n    content: public virtual int GetCharIndexFromPosition (System.Drawing.Point pt);\n    parameters:\n    - id: pt\n      type: System.Drawing.Point\n      description: The location to search.\n    return:\n      type: System.Int32\n      description: The zero-based character index at the specified location.\n  overload: System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)\n  commentId: M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)\n  id: GetFirstCharIndexFromLine(System.Int32)\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: GetFirstCharIndexFromLine(Int32)\n  nameWithType: TextBoxBase.GetFirstCharIndexFromLine(Int32)\n  fullName: TextBoxBase.GetFirstCharIndexFromLine(Int32)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Retrieves the index of the first character of a given line.\n  remarks: \"Line numbering in the text box starts at zero. If the `lineNumber` parameter is greater than the last line in the text box, <xref:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine%2A> returns -1.  \\n  \\n <xref:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine%2A> returns the first character index of a physical line. The physical line is the displayed line, not the assigned line. The number of displayed lines can be greater than the number of assigned lines due to word wrap. For example, if you assign two long lines to a <xref:System.Windows.Forms.RichTextBox> control and set <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> to `true`, the two long assigned lines result in four physical (or displayed lines).\"\n  syntax:\n    content: public int GetFirstCharIndexFromLine (int lineNumber);\n    parameters:\n    - id: lineNumber\n      type: System.Int32\n      description: The line for which to get the index of its first character.\n    return:\n      type: System.Int32\n      description: The zero-based index of the first character in the specified line.\n  overload: System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The value of the <code>lineNumber</code> parameter is less than zero.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.TextBoxBase.GetFirstCharIndexOfCurrentLine\n  commentId: M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexOfCurrentLine\n  id: GetFirstCharIndexOfCurrentLine\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: GetFirstCharIndexOfCurrentLine()\n  nameWithType: TextBoxBase.GetFirstCharIndexOfCurrentLine()\n  fullName: TextBoxBase.GetFirstCharIndexOfCurrentLine()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Retrieves the index of the first character of the current line.\n  syntax:\n    content: public int GetFirstCharIndexOfCurrentLine ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The zero-based character index in the current line.\n  overload: System.Windows.Forms.TextBoxBase.GetFirstCharIndexOfCurrentLine*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)\n  commentId: M:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)\n  id: GetLineFromCharIndex(System.Int32)\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: GetLineFromCharIndex(Int32)\n  nameWithType: TextBoxBase.GetLineFromCharIndex(Int32)\n  fullName: TextBoxBase.GetLineFromCharIndex(Int32)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Retrieves the line number from the specified character position within the text of the control.\n  remarks: \"This method enables you to determine the line number based on the character index specified in the `index` parameter of the method. The first line of text in the control returns the value zero. The <xref:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex%2A> method returns the physical line number where the indexed character is located within the control. For example, if a portion of the first logical line of text in the control wraps to the next line, the <xref:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex%2A> method returns 1 if the character at the specified character index has wrapped to the second physical line. If <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> is set to `false`, no portion of the line wraps to the next, and the method returns 0 for the specified character index. You can use this method to determine which line a specific character index is located within. For example, after calling the <xref:System.Windows.Forms.RichTextBox.Find%2A> method to search for text, you can obtain the character index to where the search results are found. You can call this method with the character index returned by the <xref:System.Windows.Forms.RichTextBox.Find%2A> method to determine which line the word was found.  \\n  \\n> [!NOTE]\\n>  If the character index specified in the `index` parameter is beyond the available number of lines contained within the control, the last line number is returned.\"\n  syntax:\n    content: public virtual int GetLineFromCharIndex (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The character index position to search.\n    return:\n      type: System.Int32\n      description: The zero-based line number in which the character index is located.\n  overload: System.Windows.Forms.TextBoxBase.GetLineFromCharIndex*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(System.Int32)\n  commentId: M:System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(System.Int32)\n  id: GetPositionFromCharIndex(System.Int32)\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: GetPositionFromCharIndex(Int32)\n  nameWithType: TextBoxBase.GetPositionFromCharIndex(Int32)\n  fullName: TextBoxBase.GetPositionFromCharIndex(Int32)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Retrieves the location within the control at the specified character index.\n  remarks: This method enables you to determine where in the control a specific character index is located. You can use this method for such tasks as displaying shortcut menu items or help information for a word in the control. For example, if you wanted to display a menu of options to the user when the user right clicks on a word in the control, you can use this method to determine the position of the word to properly display a <xref:System.Windows.Forms.ContextMenu> control.\n  syntax:\n    content: public virtual System.Drawing.Point GetPositionFromCharIndex (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The index of the character for which to retrieve the location.\n    return:\n      type: System.Drawing.Point\n      description: The location of the specified character within the client rectangle of the control.\n  overload: System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.TextBoxBase.HideSelection\n  commentId: P:System.Windows.Forms.TextBoxBase.HideSelection\n  id: HideSelection\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: HideSelection\n  nameWithType: TextBoxBase.HideSelection\n  fullName: TextBoxBase.HideSelection\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether the selected text in the text box control remains highlighted when the control loses focus.\n  remarks: You can use this property to keep text highlighted in a text box control while another form or a dialog box has focus, such as a spelling checker dialog box.\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Windows.Forms.TextBoxBase.HideSelection%2A> property. To run the example, paste the following code in a form. Call the `InitializeTextBox` method in the form's constructor or `Load` method.  \\n  \\n [!code-cpp[System.Windows.Forms.TextBoxBaseScrolling#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/CPP/form1.cpp#3)]\\n [!code-csharp[System.Windows.Forms.TextBoxBaseScrolling#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/CS/form1.cs#3)]\\n [!code-vb[System.Windows.Forms.TextBoxBaseScrolling#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/VB/form1.vb#3)]\"\n  syntax:\n    content: public bool HideSelection { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the selected text does not appear highlighted when the text box control loses focus; `false`, if the selected text remains highlighted when the text box control loses focus. The default is `true`.'\n  overload: System.Windows.Forms.TextBoxBase.HideSelection*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.TextBoxBase.HideSelectionChanged\n  commentId: E:System.Windows.Forms.TextBoxBase.HideSelectionChanged\n  id: HideSelectionChanged\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: HideSelectionChanged\n  nameWithType: TextBoxBase.HideSelectionChanged\n  fullName: TextBoxBase.HideSelectionChanged\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the value of the <xref href=\"System.Windows.Forms.TextBoxBase.HideSelection\"></xref> property has changed.\n  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBoxBase.HideSelectionChanged> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>. Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBoxBase.HideSelectionChanged> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#245](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#245)]\\n [!code-vb[System.Windows.Forms.EventExamples#245](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#245)]\"\n  syntax:\n    content: public event EventHandler HideSelectionChanged;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.TextBoxBase.ImeModeBase\n  commentId: P:System.Windows.Forms.TextBoxBase.ImeModeBase\n  id: ImeModeBase\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: ImeModeBase\n  nameWithType: TextBoxBase.ImeModeBase\n  fullName: TextBoxBase.ImeModeBase\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the Input Method Editor (IME) mode of a control.\n  syntax:\n    content: protected override System.Windows.Forms.ImeMode ImeModeBase { get; set; }\n    return:\n      type: System.Windows.Forms.ImeMode\n      description: The IME mode of the control.\n  overload: System.Windows.Forms.TextBoxBase.ImeModeBase*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.TextBoxBase.IsInputKey(System.Windows.Forms.Keys)\n  commentId: M:System.Windows.Forms.TextBoxBase.IsInputKey(System.Windows.Forms.Keys)\n  id: IsInputKey(System.Windows.Forms.Keys)\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: IsInputKey(Keys)\n  nameWithType: TextBoxBase.IsInputKey(Keys)\n  fullName: TextBoxBase.IsInputKey(Keys)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Determines whether the specified key is an input key or a special key that requires preprocessing.\n  remarks: The <xref:System.Windows.Forms.TextBoxBase.IsInputKey%2A> method returns `true` when the `keyData` parameter includes the <xref:System.Windows.Forms.Keys.Tab> value and the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A> property is `true`. <xref:System.Windows.Forms.TextBoxBase.IsInputKey%2A> returns `false` if `keyData` contains both <xref:System.Windows.Forms.Keys.Tab> and <xref:System.Windows.Forms.Keys.Control>.\n  syntax:\n    content: protected override bool IsInputKey (System.Windows.Forms.Keys keyData);\n    parameters:\n    - id: keyData\n      type: System.Windows.Forms.Keys\n      description: One of the Keys value.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified key is an input key; otherwise, `false`.'\n  overload: System.Windows.Forms.TextBoxBase.IsInputKey*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.TextBoxBase.Lines\n  commentId: P:System.Windows.Forms.TextBoxBase.Lines\n  id: Lines\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: Lines\n  nameWithType: TextBoxBase.Lines\n  fullName: TextBoxBase.Lines\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the lines of text in a text box control.\n  remarks: \"Each element in the array becomes a line of text in the text box control. If the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property of the text box control is set to `true` and a newline character appears in the text, the text following the newline character is added to a new element in the array and displayed on a separate line.  \\n  \\n> [!NOTE]\\n>  By default, the collection of lines is a read-only copy of the lines in the <xref:System.Windows.Forms.TextBox>. To get a writable collection of lines, use code similar to the following: `textBox1.Lines = new string[] { \\\"abcd\\\" };`\"\n  example:\n  - \"The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to extract all strings of text from a multiline text box control and displays them using the <xref:System.Diagnostics.Debug.WriteLine%2A?displayProperty=fullName> method. This example requires that a <xref:System.Windows.Forms.TextBox> control has been created, named `textBox1`, and that it has been filled with lines of text.  \\n  \\n [!code-cpp[Classic TextBoxBase.Lines Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.Lines Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic TextBoxBase.Lines Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.Lines Example/CS/source.cs#1)]\\n [!code-vb[Classic TextBoxBase.Lines Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.Lines Example/VB/source.vb#1)]\"\n  syntax:\n    content: public string[] Lines { get; set; }\n    return:\n      type: System.String[]\n      description: An array of strings that contains the text in a text box control.\n  overload: System.Windows.Forms.TextBoxBase.Lines*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.TextBoxBase.MaxLength\n  commentId: P:System.Windows.Forms.TextBoxBase.MaxLength\n  id: MaxLength\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: MaxLength\n  nameWithType: TextBoxBase.MaxLength\n  fullName: TextBoxBase.MaxLength\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the maximum number of characters the user can type or paste into the text box control.\n  remarks: \"You can use this property to restrict the length of text entered in the control for values such as postal codes and telephone numbers, or to restrict the length of text entered when the data is to be entered in a database. You can limit the text entered into the control to the maximum length of the corresponding field in the database.  \\n  \\n> [!NOTE]\\n>  In code, you can set the value of the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property to a value that has a length greater than the value specified by the <xref:System.Windows.Forms.TextBoxBase.MaxLength%2A> property. This property only affects text entered into the control at run time.\"\n  example:\n  - \"The following code example uses the derived class, <xref:System.Windows.Forms.TextBox>, to create a text box that is used to accept a password. This example uses the <xref:System.Windows.Forms.TextBox.CharacterCasing%2A> property to change all characters typed to uppercase and the <xref:System.Windows.Forms.TextBoxBase.MaxLength%2A> property to restrict the password length to eight characters. This example also uses the <xref:System.Windows.Forms.TextBox.TextAlign%2A> property to center the password in the <xref:System.Windows.Forms.TextBox> control.  \\n  \\n [!code-cpp[Classic TextBoxBase.MaxLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.MaxLength Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic TextBoxBase.MaxLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.MaxLength Example/CS/source.cs#1)]\\n [!code-vb[Classic TextBoxBase.MaxLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.MaxLength Example/VB/source.vb#1)]\"\n  syntax:\n    content: public virtual int MaxLength { get; set; }\n    return:\n      type: System.Int32\n      description: The number of characters that can be entered into the control. The default is 32767.\n  overload: System.Windows.Forms.TextBoxBase.MaxLength*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The value assigned to the property is less than 0.\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.TextBoxBase.Modified\n  commentId: P:System.Windows.Forms.TextBoxBase.Modified\n  id: Modified\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: Modified\n  nameWithType: TextBoxBase.Modified\n  fullName: TextBoxBase.Modified\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value that indicates that the text box control has been modified by the user since the control was created or its contents were last set.\n  remarks: \"You can use this property to determine if the user has modified the contents of the text box control. You can also set this property in code to indicate that changes were made to the text box control by the application. This property can be used by validation and data-saving methods to determine if changes were made in a text box control so the changed contents can be validated or saved.  \\n  \\n If you change the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property programmatically, the <xref:System.Windows.Forms.TextBoxBase.Modified%2A> property reverts to `false`. This does not raise the <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> event.\"\n  example:\n  - \"The following code example uses the <xref:System.Windows.Forms.Control.TextChanged> event for a <xref:System.Windows.Forms.TextBox>, a derived class, to determine if the contents of the <xref:System.Windows.Forms.TextBox> control have changed since the control was filled with data. The example uses a string to store the original contents of the control and compares it against the contents of the <xref:System.Windows.Forms.TextBox> to determine if the contents have changed. If the contents have changed, the <xref:System.Windows.Forms.TextBoxBase.Modified%2A> property is set to `true`. Otherwise, it is reset to `false`. This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created and that a `String` variable named `originalText` has been created to store the original text for the <xref:System.Windows.Forms.TextBox> control.  \\n  \\n [!code-cpp[Classic TextBoxBase.Modified Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.Modified Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic TextBoxBase.Modified Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.Modified Example/CS/source.cs#1)]\\n [!code-vb[Classic TextBoxBase.Modified Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.Modified Example/VB/source.vb#1)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public bool Modified { get; set; }\n    return:\n      type: System.Boolean\n      description: \"`true` if the control's contents have been modified; otherwise, `false`. The default is `false`.\"\n  overload: System.Windows.Forms.TextBoxBase.Modified*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.TextBoxBase.ModifiedChanged\n  commentId: E:System.Windows.Forms.TextBoxBase.ModifiedChanged\n  id: ModifiedChanged\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: ModifiedChanged\n  nameWithType: TextBoxBase.ModifiedChanged\n  fullName: TextBoxBase.ModifiedChanged\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the value of the <xref href=\"System.Windows.Forms.TextBoxBase.Modified\"></xref> property has changed.\n  remarks: \"If you change the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property programmatically, the <xref:System.Windows.Forms.TextBoxBase.Modified%2A> property reverts to `false`. This does not raise the <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> event.  \\n  \\n For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).\"\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>. Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#246](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#246)]\\n [!code-vb[System.Windows.Forms.EventExamples#246](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#246)]\"\n  syntax:\n    content: public event EventHandler ModifiedChanged;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.TextBoxBase.MouseClick\n  commentId: E:System.Windows.Forms.TextBoxBase.MouseClick\n  id: MouseClick\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: MouseClick\n  nameWithType: TextBoxBase.MouseClick\n  fullName: TextBoxBase.MouseClick\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the control is clicked by the mouse.\n  remarks: \"The <xref:System.Windows.Forms.RichTextBox> control does not raise a <xref:System.Windows.Forms.TextBoxBase.Click> event for right clicks. The <xref:System.Windows.Forms.TextBoxBase.MouseClick> event provides the functional equivalent.  \\n  \\n For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).\"\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBoxBase.MouseClick> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>. Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBoxBase.MouseClick> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#244](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#244)]\\n [!code-vb[System.Windows.Forms.EventExamples#244](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#244)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(true)]\n\n      public event System.Windows.Forms.MouseEventHandler MouseClick;\n    return:\n      type: System.Windows.Forms.MouseEventHandler\n      description: ''\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.TextBoxBase.Multiline\n  commentId: P:System.Windows.Forms.TextBoxBase.Multiline\n  id: Multiline\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: Multiline\n  nameWithType: TextBoxBase.Multiline\n  fullName: TextBoxBase.Multiline\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether this is a multiline text box control.\n  remarks: \"A multiline text box allows you to display more than one line of text in the control. If the <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> property is set to `true`, text entered into the multiline text box is wrapped to the next line in the control. If the <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> property is set to `false`, text entered into the multiline text box control will be displayed on the same line until a newline character is entered.  \\n  \\n The following can be used as newline characters:  \\n  \\n-   <xref:System.Environment.NewLine%2A?displayProperty=fullName>  \\n  \\n-   ControlChars.CrLf  \\n  \\n-   vbCrLf (Visual Basic only)  \\n  \\n You can add scroll bars to a text box using the <xref:System.Windows.Forms.TextBox.ScrollBars%2A> property to display horizontal and/or vertical scroll bars. This allows the user to scroll through the text that extends beyond the dimensions of the control.  \\n  \\n> [!NOTE]\\n>  Because the default value of the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property is `false`, the default size of a <xref:System.Windows.Forms.TextBox> will be in accordance with the font size even if you resize the <xref:System.Windows.Forms.TextBox>. To get a consistent size for your <xref:System.Windows.Forms.TextBox>, set its <xref:System.Windows.Forms.TextBox.Multiline%2A> property to `true`.  \\n  \\n> [!NOTE]\\n>  On Japanese operating systems, if the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property is set to `true`, setting the <xref:System.Windows.Forms.TextBox.PasswordChar%2A> property will display the text of the password, thus compromising system security. Therefore, on Japanese operating systems, set the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property to `false` if you set the <xref:System.Windows.Forms.TextBox.PasswordChar%2A> property.  \\n  \\n> [!NOTE]\\n>  This property is set to `false` by default for all derived classes, with the exception of the <xref:System.Windows.Forms.RichTextBox> control.  \\n  \\n For a <xref:System.Windows.Forms.RichTextBox> control, the <xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=fullName> property affects whether or not the control will automatically resize, as follows:  \\n  \\n-   If <xref:System.Windows.Forms.RichTextBox.AutoSize%2A?displayProperty=fullName> is set to `true` and <xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=fullName> is set to `true`, <xref:System.Windows.Forms.RichTextBox> will not automatically resize.  \\n  \\n-   If <xref:System.Windows.Forms.RichTextBox.AutoSize%2A?displayProperty=fullName> is set to `true` and <xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=fullName> is set to `false`, <xref:System.Windows.Forms.RichTextBox> will automatically resize.\"\n  example:\n  - \"The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars. This example also uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> properties to make the multiline text box control useful for creating text documents.  \\n  \\n [!code-cpp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CS/source.cs#1)]\\n [!code-vb[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/VB/source.vb#1)]\"\n  syntax:\n    content: public virtual bool Multiline { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the control is a multiline text box control; otherwise, `false`. The default is `false`.'\n  overload: System.Windows.Forms.TextBoxBase.Multiline*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.TextBoxBase.MultilineChanged\n  commentId: E:System.Windows.Forms.TextBoxBase.MultilineChanged\n  id: MultilineChanged\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: MultilineChanged\n  nameWithType: TextBoxBase.MultilineChanged\n  fullName: TextBoxBase.MultilineChanged\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the value of the <xref href=\"System.Windows.Forms.TextBoxBase.Multiline\"></xref> property has changed.\n  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBoxBase.MultilineChanged> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>. Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBoxBase.MultilineChanged> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#247](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#247)]\\n [!code-vb[System.Windows.Forms.EventExamples#247](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#247)]\"\n  syntax:\n    content: public event EventHandler MultilineChanged;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)\n  commentId: M:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)\n  id: OnAcceptsTabChanged(System.EventArgs)\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: OnAcceptsTabChanged(EventArgs)\n  nameWithType: TextBoxBase.OnAcceptsTabChanged(EventArgs)\n  fullName: TextBoxBase.OnAcceptsTabChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.TextBoxBase.AcceptsTabChanged\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \\n  \\n The <xref:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnAcceptsTabChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)\n  commentId: M:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)\n  id: OnBorderStyleChanged(System.EventArgs)\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: OnBorderStyleChanged(EventArgs)\n  nameWithType: TextBoxBase.OnBorderStyleChanged(EventArgs)\n  fullName: TextBoxBase.OnBorderStyleChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.TextBoxBase.BorderStyleChanged\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \\n  \\n The <xref:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnBorderStyleChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.TextBoxBase.OnBorderStyleChanged*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.TextBoxBase.OnFontChanged(System.EventArgs)\n  commentId: M:System.Windows.Forms.TextBoxBase.OnFontChanged(System.EventArgs)\n  id: OnFontChanged(System.EventArgs)\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: OnFontChanged(EventArgs)\n  nameWithType: TextBoxBase.OnFontChanged(EventArgs)\n  fullName: TextBoxBase.OnFontChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.FontChanged\"></xref> event.\n  syntax:\n    content: protected override void OnFontChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.TextBoxBase.OnFontChanged*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.TextBoxBase.OnHandleCreated(System.EventArgs)\n  commentId: M:System.Windows.Forms.TextBoxBase.OnHandleCreated(System.EventArgs)\n  id: OnHandleCreated(System.EventArgs)\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: OnHandleCreated(EventArgs)\n  nameWithType: TextBoxBase.OnHandleCreated(EventArgs)\n  fullName: TextBoxBase.OnHandleCreated(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.HandleCreated\"></xref> event.\n  syntax:\n    content: protected override void OnHandleCreated (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.TextBoxBase.OnHandleCreated*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.TextBoxBase.OnHandleDestroyed(System.EventArgs)\n  commentId: M:System.Windows.Forms.TextBoxBase.OnHandleDestroyed(System.EventArgs)\n  id: OnHandleDestroyed(System.EventArgs)\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: OnHandleDestroyed(EventArgs)\n  nameWithType: TextBoxBase.OnHandleDestroyed(EventArgs)\n  fullName: TextBoxBase.OnHandleDestroyed(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.HandleDestroyed\"></xref> event.\n  syntax:\n    content: protected override void OnHandleDestroyed (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.TextBoxBase.OnHandleDestroyed*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)\n  commentId: M:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)\n  id: OnHideSelectionChanged(System.EventArgs)\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: OnHideSelectionChanged(EventArgs)\n  nameWithType: TextBoxBase.OnHideSelectionChanged(EventArgs)\n  fullName: TextBoxBase.OnHideSelectionChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raise the <xref href=\"System.Windows.Forms.TextBoxBase.HideSelectionChanged\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \\n  \\n The <xref:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnHideSelectionChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.TextBoxBase.OnHideSelectionChanged*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)\n  commentId: M:System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)\n  id: OnModifiedChanged(System.EventArgs)\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: OnModifiedChanged(EventArgs)\n  nameWithType: TextBoxBase.OnModifiedChanged(EventArgs)\n  fullName: TextBoxBase.OnModifiedChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.TextBoxBase.ModifiedChanged\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \\n  \\n The <xref:System.Windows.Forms.TextBoxBase.OnModifiedChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnModifiedChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.TextBoxBase.OnModifiedChanged*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.TextBoxBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)\n  commentId: M:System.Windows.Forms.TextBoxBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)\n  id: OnMouseUp(System.Windows.Forms.MouseEventArgs)\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: OnMouseUp(MouseEventArgs)\n  nameWithType: TextBoxBase.OnMouseUp(MouseEventArgs)\n  fullName: TextBoxBase.OnMouseUp(MouseEventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.MouseUp\"></xref> event.\n  syntax:\n    content: protected override void OnMouseUp (System.Windows.Forms.MouseEventArgs mevent);\n    parameters:\n    - id: mevent\n      type: System.Windows.Forms.MouseEventArgs\n      description: The event data.\n  overload: System.Windows.Forms.TextBoxBase.OnMouseUp*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)\n  commentId: M:System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)\n  id: OnMultilineChanged(System.EventArgs)\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: OnMultilineChanged(EventArgs)\n  nameWithType: TextBoxBase.OnMultilineChanged(EventArgs)\n  fullName: TextBoxBase.OnMultilineChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.TextBoxBase.MultilineChanged\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \\n  \\n The <xref:System.Windows.Forms.TextBoxBase.OnMultilineChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnMultilineChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.TextBoxBase.OnMultilineChanged*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.TextBoxBase.OnPaddingChanged(System.EventArgs)\n  commentId: M:System.Windows.Forms.TextBoxBase.OnPaddingChanged(System.EventArgs)\n  id: OnPaddingChanged(System.EventArgs)\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: OnPaddingChanged(EventArgs)\n  nameWithType: TextBoxBase.OnPaddingChanged(EventArgs)\n  fullName: TextBoxBase.OnPaddingChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: This method is not relevant for this class.\n  remarks: This method is not relevant for this class.\n  syntax:\n    content: protected override void OnPaddingChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.TextBoxBase.OnPaddingChanged*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)\n  commentId: M:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)\n  id: OnReadOnlyChanged(System.EventArgs)\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: OnReadOnlyChanged(EventArgs)\n  nameWithType: TextBoxBase.OnReadOnlyChanged(EventArgs)\n  fullName: TextBoxBase.OnReadOnlyChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.TextBoxBase.ReadOnlyChanged\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \\n  \\n The <xref:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnReadOnlyChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.TextBoxBase.OnReadOnlyChanged*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.TextBoxBase.OnTextChanged(System.EventArgs)\n  commentId: M:System.Windows.Forms.TextBoxBase.OnTextChanged(System.EventArgs)\n  id: OnTextChanged(System.EventArgs)\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: OnTextChanged(EventArgs)\n  nameWithType: TextBoxBase.OnTextChanged(EventArgs)\n  fullName: TextBoxBase.OnTextChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.TextChanged\"></xref> event.\n  syntax:\n    content: protected override void OnTextChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.TextBoxBase.OnTextChanged*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.TextBoxBase.Padding\n  commentId: P:System.Windows.Forms.TextBoxBase.Padding\n  id: Padding\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: Padding\n  nameWithType: TextBoxBase.Padding\n  fullName: TextBoxBase.Padding\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: This property is not relevant for this class.\n  remarks: This property is not relevant for this class.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public System.Windows.Forms.Padding Padding { get; set; }\n    return:\n      type: System.Windows.Forms.Padding\n      description: A <xref href=\"System.Windows.Forms.Padding\"></xref> value.\n  overload: System.Windows.Forms.TextBoxBase.Padding*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.TextBoxBase.PaddingChanged\n  commentId: E:System.Windows.Forms.TextBoxBase.PaddingChanged\n  id: PaddingChanged\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: PaddingChanged\n  nameWithType: TextBoxBase.PaddingChanged\n  fullName: TextBoxBase.PaddingChanged\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: This event is not relevant for this class.\n  remarks: This event is not relevant for this class.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public event EventHandler PaddingChanged;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.TextBoxBase.Paint\n  commentId: E:System.Windows.Forms.TextBoxBase.Paint\n  id: Paint\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: Paint\n  nameWithType: TextBoxBase.Paint\n  fullName: TextBoxBase.Paint\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the control is redrawn. This event is not relevant for this class.\n  remarks: This event is not relevant for this class.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public event System.Windows.Forms.PaintEventHandler Paint;\n    return:\n      type: System.Windows.Forms.PaintEventHandler\n      description: ''\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.TextBoxBase.Paste\n  commentId: M:System.Windows.Forms.TextBoxBase.Paste\n  id: Paste\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: Paste()\n  nameWithType: TextBoxBase.Paste()\n  fullName: TextBoxBase.Paste()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Replaces the current selection in the text box with the contents of the **Clipboard**.\n  remarks: The <xref:System.Windows.Forms.TextBoxBase.Paste%2A> method will only paste text into the control if text is currently stored in the **Clipboard**.\n  example:\n  - \"The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class. It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations. This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.  \\n  \\n [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CS/source.cs#1)]\\n [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/VB/source.vb#1)]\"\n  syntax:\n    content: public void Paste ();\n    parameters: []\n  overload: System.Windows.Forms.TextBoxBase.Paste*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.TextBoxBase.PreferredHeight\n  commentId: P:System.Windows.Forms.TextBoxBase.PreferredHeight\n  id: PreferredHeight\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: PreferredHeight\n  nameWithType: TextBoxBase.PreferredHeight\n  fullName: TextBoxBase.PreferredHeight\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the preferred height for a text box.\n  remarks: \"The size returned by this property is based on the font height and border style of the text box. You can use this property to determine the appropriate size of the text box to ensure that text is properly displayed in the control. The value returned by this property is in pixels.  \\n  \\n The value of <xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A> represents the minimum height the text box must have in order to display a single line of text without clipping the text on the top or bottom. This value is the same whether the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property is set to `true` or `false`.\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public int PreferredHeight { get; }\n    return:\n      type: System.Int32\n      description: The preferred height of a text box.\n  overload: System.Windows.Forms.TextBoxBase.PreferredHeight*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.TextBoxBase.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)\n  commentId: M:System.Windows.Forms.TextBoxBase.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)\n  id: ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: ProcessCmdKey(Message, Keys)\n  nameWithType: TextBoxBase.ProcessCmdKey(Message, Keys)\n  fullName: TextBoxBase.ProcessCmdKey(Message, Keys)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Processes a command key.\n  syntax:\n    content: protected override bool ProcessCmdKey (ref System.Windows.Forms.Message msg, System.Windows.Forms.Keys keyData);\n    parameters:\n    - id: msg\n      type: System.Windows.Forms.Message\n      description: A <xref href=\"System.Windows.Forms.Message\"></xref>, passed by reference that represents the window message to process.\n    - id: keyData\n      type: System.Windows.Forms.Keys\n      description: One of the <xref href=\"System.Windows.Forms.Keys\"></xref> values that represents the shortcut key to process.\n    return:\n      type: System.Boolean\n      description: '`true` if the command key was processed by the control; otherwise, `false`.'\n  overload: System.Windows.Forms.TextBoxBase.ProcessCmdKey*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.TextBoxBase.ProcessDialogKey(System.Windows.Forms.Keys)\n  commentId: M:System.Windows.Forms.TextBoxBase.ProcessDialogKey(System.Windows.Forms.Keys)\n  id: ProcessDialogKey(System.Windows.Forms.Keys)\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: ProcessDialogKey(Keys)\n  nameWithType: TextBoxBase.ProcessDialogKey(Keys)\n  fullName: TextBoxBase.ProcessDialogKey(Keys)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Processes a dialog key.\n  syntax:\n    content: protected override bool ProcessDialogKey (System.Windows.Forms.Keys keyData);\n    parameters:\n    - id: keyData\n      type: System.Windows.Forms.Keys\n      description: One of the <xref href=\"System.Windows.Forms.Keys\"></xref> values that represents the key to process.\n    return:\n      type: System.Boolean\n      description: '`true` if the key was processed by the control; otherwise, `false`.'\n  overload: System.Windows.Forms.TextBoxBase.ProcessDialogKey*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.TextBoxBase.ReadOnly\n  commentId: P:System.Windows.Forms.TextBoxBase.ReadOnly\n  id: ReadOnly\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: ReadOnly\n  nameWithType: TextBoxBase.ReadOnly\n  fullName: TextBoxBase.ReadOnly\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether text in the text box is read-only.\n  remarks: When this property is set to `true`, the contents of the control cannot be changed by the user at runtime. With this property set to `true`, you can still set the value of the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property in code. You can use this feature instead of disabling the control with the <xref:System.Windows.Forms.Control.Enabled%2A> property to allow the contents to be copied and ToolTips to be shown.\n  syntax:\n    content: public bool ReadOnly { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the text box is read-only; otherwise, `false`. The default is `false`.'\n  overload: System.Windows.Forms.TextBoxBase.ReadOnly*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.TextBoxBase.ReadOnlyChanged\n  commentId: E:System.Windows.Forms.TextBoxBase.ReadOnlyChanged\n  id: ReadOnlyChanged\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: ReadOnlyChanged\n  nameWithType: TextBoxBase.ReadOnlyChanged\n  fullName: TextBoxBase.ReadOnlyChanged\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the value of the <xref href=\"System.Windows.Forms.TextBoxBase.ReadOnly\"></xref> property has changed.\n  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBoxBase.ReadOnlyChanged> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>. Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBoxBase.ReadOnlyChanged> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#248](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#248)]\\n [!code-vb[System.Windows.Forms.EventExamples#248](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#248)]\"\n  syntax:\n    content: public event EventHandler ReadOnlyChanged;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.TextBoxBase.ScrollToCaret\n  commentId: M:System.Windows.Forms.TextBoxBase.ScrollToCaret\n  id: ScrollToCaret\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: ScrollToCaret()\n  nameWithType: TextBoxBase.ScrollToCaret()\n  fullName: TextBoxBase.ScrollToCaret()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Scrolls the contents of the control to the current caret position.\n  remarks: \"This method enables you to scroll the contents of the control until the caret is within the visible region of the control. If the caret is positioned below the visible region of the control, the <xref:System.Windows.Forms.TextBoxBase.ScrollToCaret%2A> method will scroll the contents of the control until the caret is visible at the bottom of the control. If the caret is positioned above the visible region of the control, this method scrolls the contents of the control until the caret is visible at the top of the control. You can use this method in a multiline text box to ensure that the current text entry point is within the visible region of the control.  \\n  \\n> [!NOTE]\\n>  This method has no effect if the control does not have focus or if the caret is already positioned in the visible region of the control.\"\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Windows.Forms.Keys> enumeration and the <xref:System.Windows.Forms.TextBoxBase.ScrollToCaret%2A> method to ensure that the text insertion point, represented by the caret, is always visible on the screen after the ENTER key has been pressed. To run the example, paste the following code in a form containing a <xref:System.Windows.Forms.TextBox> control called `TextBox1` and a <xref:System.Windows.Forms.RichTextBox> control called `RichTextBox1`. This example requires that the event-handling method has been associated with the <xref:System.Windows.Forms.Control.KeyDown> event.  \\n  \\n [!code-cpp[System.Windows.Forms.TextBoxBaseScrolling#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/CPP/form1.cpp#1)]\\n [!code-csharp[System.Windows.Forms.TextBoxBaseScrolling#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/CS/form1.cs#1)]\\n [!code-vb[System.Windows.Forms.TextBoxBaseScrolling#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/VB/form1.vb#1)]\"\n  syntax:\n    content: public void ScrollToCaret ();\n    parameters: []\n  overload: System.Windows.Forms.TextBoxBase.ScrollToCaret*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.TextBoxBase.Select(System.Int32,System.Int32)\n  commentId: M:System.Windows.Forms.TextBoxBase.Select(System.Int32,System.Int32)\n  id: Select(System.Int32,System.Int32)\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: Select(Int32, Int32)\n  nameWithType: TextBoxBase.Select(Int32, Int32)\n  fullName: TextBoxBase.Select(Int32, Int32)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Selects a range of text in the text box.\n  remarks: \"If you want to set the start position to the first character in the control's text, set the `start` parameter to 0. You can use this method to select a substring of text, such as when searching through the text of the control and replacing information.  \\n  \\n> [!NOTE]\\n>  You can programmatically move the caret within the text box by setting the `start` parameter to the position within the text box where you want the caret to move to and set the `length` parameter to a value of zero (0). The text box must have focus in order for the caret to be moved.  \\n  \\n> [!NOTE]\\n>  If this method is called without any parameters, an alternative method is used. This alternative method inherits from the <xref:System.Windows.Forms.Control> class. When called, it sets the input focus to the control and selects the contents of the control. For more information, see the <xref:System.Windows.Forms.Control.Select%2A?displayProperty=fullName> method.\"\n  example:\n  - \"The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to search the contents of the control for the instance of the word \\\"fox\\\". If found, the code selects the word in the control using the <xref:System.Windows.Forms.TextBoxBase.Select%2A> method. This example requires that a <xref:System.Windows.Forms.TextBox> named `textBox1` has been created and its <xref:System.Windows.Forms.TextBoxBase.Text%2A> property contains the sentence \\\"The quick brown fox jumps over the lazy dog.\\\"  \\n  \\n [!code-cpp[Classic TextBoxBase.Select Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.Select Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic TextBoxBase.Select Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.Select Example/CS/source.cs#1)]\\n [!code-vb[Classic TextBoxBase.Select Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.Select Example/VB/source.vb#1)]\"\n  syntax:\n    content: public void Select (int start, int length);\n    parameters:\n    - id: start\n      type: System.Int32\n      description: The position of the first character in the current text selection within the text box.\n    - id: length\n      type: System.Int32\n      description: The number of characters to select.\n  overload: System.Windows.Forms.TextBoxBase.Select*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The value of the <code>start</code> parameter is less than zero.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.TextBoxBase.SelectAll\n  commentId: M:System.Windows.Forms.TextBoxBase.SelectAll\n  id: SelectAll\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: SelectAll()\n  nameWithType: TextBoxBase.SelectAll()\n  fullName: TextBoxBase.SelectAll()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Selects all text in the text box.\n  remarks: This method enables you to select all text within the control. You can use this method in conjunction with the <xref:System.Windows.Forms.TextBoxBase.Cut%2A> method, which requires text to be selected in the control, to cut the entire contents of the control and paste them into the **Clipboard**.\n  example:\n  - \"The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to determine if any text is selected in the control. If no text is selected, a call is made to the <xref:System.Windows.Forms.TextBoxBase.SelectAll%2A> method before copying the contents of the control to the **Clipboard**. This example requires that a <xref:System.Windows.Forms.TextBox> has been created named `textBox1`.  \\n  \\n [!code-cpp[Classic TextBoxBase.SelectAll Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectAll Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic TextBoxBase.SelectAll Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectAll Example/CS/source.cs#1)]\\n [!code-vb[Classic TextBoxBase.SelectAll Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectAll Example/VB/source.vb#1)]\"\n  syntax:\n    content: public void SelectAll ();\n    parameters: []\n  overload: System.Windows.Forms.TextBoxBase.SelectAll*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.TextBoxBase.SelectedText\n  commentId: P:System.Windows.Forms.TextBoxBase.SelectedText\n  id: SelectedText\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: SelectedText\n  nameWithType: TextBoxBase.SelectedText\n  fullName: TextBoxBase.SelectedText\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating the currently selected text in the control.\n  remarks: You can assign text to this property to change the text currently selected in the text box. If no text is currently selected in the text box, this property returns a zero-length string.\n  example:\n  - \"The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class. It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations. This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.  \\n  \\n [!code-cpp[Classic TextBoxBase.SelectedText Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectedText Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic TextBoxBase.SelectedText Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectedText Example/CS/source.cs#1)]\\n [!code-vb[Classic TextBoxBase.SelectedText Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectedText Example/VB/source.vb#1)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public virtual string SelectedText { get; set; }\n    return:\n      type: System.String\n      description: A string that represents the currently selected text in the text box.\n  overload: System.Windows.Forms.TextBoxBase.SelectedText*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.TextBoxBase.SelectionLength\n  commentId: P:System.Windows.Forms.TextBoxBase.SelectionLength\n  id: SelectionLength\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: SelectionLength\n  nameWithType: TextBoxBase.SelectionLength\n  fullName: TextBoxBase.SelectionLength\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the number of characters selected in the text box.\n  remarks: \"You can use this property to determine if any characters are currently selected in the text box control before performing operations on the selected text. When the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property is set to a value that is larger than the number of characters within the text of the control, the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property is set to the entire length of text within the control minus the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property (if any value is specified for the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property).  \\n  \\n> [!NOTE]\\n>  You can programmatically move the caret within the text box by setting the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> to the position within the text box where you want the caret to move to and set the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property to a value of zero (0). The text box must have focus in order for the caret to be moved.\"\n  example:\n  - \"The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class. It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations. This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.  \\n  \\n [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CS/source.cs#1)]\\n [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/VB/source.vb#1)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public virtual int SelectionLength { get; set; }\n    return:\n      type: System.Int32\n      description: The number of characters selected in the text box.\n  overload: System.Windows.Forms.TextBoxBase.SelectionLength*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The assigned value is less than zero.\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.TextBoxBase.SelectionStart\n  commentId: P:System.Windows.Forms.TextBoxBase.SelectionStart\n  id: SelectionStart\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: SelectionStart\n  nameWithType: TextBoxBase.SelectionStart\n  fullName: TextBoxBase.SelectionStart\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the starting point of text selected in the text box.\n  remarks: \"If no text is selected in the control, this property indicates the insertion point, or caret, for new text. If you set this property to a location beyond the length of the text in the control, the selection start position will be placed after the last character. When text is selected in the text box control, changing this property might decrease the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property. If the remaining text in the control after the position indicated by the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property is less than the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property, the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property is automatically decreased. The value of the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property never causes an increase in the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property.  \\n  \\n You can programmatically move the selection within the text box by setting the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> and the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> properties.  \\n  \\n You can programmatically move the caret within the text box by setting the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> to the position within the text box where you want the caret to move to and set the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property to a value of zero (0).  \\n  \\n The <xref:System.Windows.Forms.TextBox> must have focus in order for the selection or the caret to be moved. You can set the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property of a <xref:System.Windows.Forms.TextBox> that is <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> by giving it the <xref:System.Windows.Forms.Control.Focus%2A> first.\"\n  example:\n  - \"**Example 1**  \\n  \\n The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class. It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations. This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.  \\n  \\n [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CS/source.cs#1)]\\n [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/VB/source.vb#1)]  \\n  \\n **Example 2**  \\n  \\n The following example sets the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property of a <xref:System.Windows.Forms.TextBox> that is <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> by giving it the <xref:System.Windows.Forms.Control.Focus%2A> first.  \\n  \\n [!code-csharp[SystemWindowsFormsTextBoxBase#1](~/samples/snippets/csharp/VS_Snippets_Winforms/SystemWindowsFormsTextBoxBase/CS/Form1.cs#1)]\\n [!code-vb[SystemWindowsFormsTextBoxBase#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SystemWindowsFormsTextBoxBase/VB/Form1.vb#1)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public int SelectionStart { get; set; }\n    return:\n      type: System.Int32\n      description: The starting position of text selected in the text box.\n  overload: System.Windows.Forms.TextBoxBase.SelectionStart*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The assigned value is less than zero.\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)\n  commentId: M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)\n  id: SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: SetBoundsCore(Int32, Int32, Int32, Int32, BoundsSpecified)\n  nameWithType: TextBoxBase.SetBoundsCore(Int32, Int32, Int32, Int32, BoundsSpecified)\n  fullName: TextBoxBase.SetBoundsCore(Int32, Int32, Int32, Int32, BoundsSpecified)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Sets the specified bounds of the <xref href=\"System.Windows.Forms.TextBoxBase\"></xref> control.\n  remarks: \"The <xref:System.Windows.Forms.TextBoxBase> control uses the <xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A> property to set the bounds if the <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> property is `true` and the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property is `false`.  \\n  \\n Typically, the parameters that correspond to the bounds not included in the `specified` parameter are passed in with their current values. For example, the <xref:System.Windows.Forms.Control.Height%2A>, <xref:System.Windows.Forms.Control.Width%2A>, or the <xref:System.Drawing.Point.X%2A> or <xref:System.Drawing.Point.Y%2A> properties of the <xref:System.Windows.Forms.Control.Location%2A> property can be passed in with a reference to the current instance of the control. However all values passed in are honored and applied to the control.  \\n  \\n The `specified` parameter represents the elements of the controls <xref:System.Windows.Forms.Control.Bounds%2A> changed by your application. For example, if you change the <xref:System.Windows.Forms.Control.Size%2A> of the control, the `specified` parameter value is the `Size` value of <xref:System.Windows.Forms.BoundsSpecified>. However, if the <xref:System.Windows.Forms.Control.Size%2A> is adjusted in response to the <xref:System.Windows.Forms.Control.Dock%2A> property being set, the `specified` parameter value is the `None` value of <xref:System.Windows.Forms.BoundsSpecified>.\"\n  syntax:\n    content: protected override void SetBoundsCore (int x, int y, int width, int height, System.Windows.Forms.BoundsSpecified specified);\n    parameters:\n    - id: x\n      type: System.Int32\n      description: The new <xref href=\"System.Windows.Forms.Control.Left\"></xref> property value of the control.\n    - id: y\n      type: System.Int32\n      description: The new <xref href=\"System.Windows.Forms.Control.Top\"></xref> property value of the control.\n    - id: width\n      type: System.Int32\n      description: The new <xref href=\"System.Windows.Forms.Control.Width\"></xref> property value of the control.\n    - id: height\n      type: System.Int32\n      description: Not used.\n    - id: specified\n      type: System.Windows.Forms.BoundsSpecified\n      description: A bitwise combination of the <xref href=\"System.Windows.Forms.BoundsSpecified\"></xref> values.\n  overload: System.Windows.Forms.TextBoxBase.SetBoundsCore*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.TextBoxBase.ShortcutsEnabled\n  commentId: P:System.Windows.Forms.TextBoxBase.ShortcutsEnabled\n  id: ShortcutsEnabled\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: ShortcutsEnabled\n  nameWithType: TextBoxBase.ShortcutsEnabled\n  fullName: TextBoxBase.ShortcutsEnabled\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether the defined shortcuts are enabled.\n  remarks: \"Use the <xref:System.Windows.Forms.TextBoxBase.ShortcutsEnabled%2A> property to enable or disable the following shortcut key combinations and the control’s shortcut menu:  \\n  \\n-   CTRL+Z  \\n  \\n-   CTRL+E  \\n  \\n-   CTRL+C  \\n  \\n-   CTRL+Y  \\n  \\n-   CTRL+X  \\n  \\n-   CTRL+BACKSPACE  \\n  \\n-   CTRL+V  \\n  \\n-   CTRL+DELETE  \\n  \\n-   CTRL+A  \\n  \\n-   SHIFT+DELETE  \\n  \\n-   CTRL+L  \\n  \\n-   SHIFT+INSERT  \\n  \\n-   CTRL+R  \\n  \\n You can override this property to specify other shortcut keys.\"\n  syntax:\n    content: public virtual bool ShortcutsEnabled { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` to enable the shortcuts; otherwise, `false`.'\n  overload: System.Windows.Forms.TextBoxBase.ShortcutsEnabled*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.TextBoxBase.Text\n  commentId: P:System.Windows.Forms.TextBoxBase.Text\n  id: Text\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: Text\n  nameWithType: TextBoxBase.Text\n  fullName: TextBoxBase.Text\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the current text in the text box.\n  remarks: To display multiple lines of text in a text box, set the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property to `true`. To read or set the text of a multiline text box, use the <xref:System.Windows.Forms.TextBoxBase.Lines%2A> property. The amount of text that can be entered in the <xref:System.Windows.Forms.RichTextBox> control is limited only by available system memory.\n  example:\n  - \"The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars. This example also uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> properties to make the multiline text box control useful for creating text documents.  \\n  \\n [!code-cpp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CS/source.cs#1)]\\n [!code-vb[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/VB/source.vb#1)]\"\n  syntax:\n    content: public override string Text { get; set; }\n    return:\n      type: System.String\n      description: The text displayed in the control.\n  overload: System.Windows.Forms.TextBoxBase.Text*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.TextBoxBase.TextLength\n  commentId: P:System.Windows.Forms.TextBoxBase.TextLength\n  id: TextLength\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: TextLength\n  nameWithType: TextBoxBase.TextLength\n  fullName: TextBoxBase.TextLength\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the length of text in the control.\n  remarks: You can use this property to determine the number of characters in a string for tasks such as searching for specific strings of text within the text of the control, where knowledge of the total number of characters is needed.\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Windows.Forms.TextBoxBase.AppendText%2A> method and the <xref:System.Windows.Forms.TextBoxBase.TextLength%2A> property to copy text from one <xref:System.Windows.Forms.TextBox> to another. This example requires that two <xref:System.Windows.Forms.TextBox> controls named, `textBox1` and `textBox2`, have been added to a form and that `textBox1` has text assigned to its <xref:System.Windows.Forms.Control.Text%2A> property.  \\n  \\n [!code-cpp[TextBoxBase.AppendText#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TextBoxBase.AppendText/CPP/form1.cpp#1)]\\n [!code-csharp[TextBoxBase.AppendText#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TextBoxBase.AppendText/CS/form1.cs#1)]\\n [!code-vb[TextBoxBase.AppendText#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TextBoxBase.AppendText/VB/form1.vb#1)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public virtual int TextLength { get; }\n    return:\n      type: System.Int32\n      description: The number of characters contained in the text of the control.\n  overload: System.Windows.Forms.TextBoxBase.TextLength*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.TextBoxBase.ToString\n  commentId: M:System.Windows.Forms.TextBoxBase.ToString\n  id: ToString\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: TextBoxBase.ToString()\n  fullName: TextBoxBase.ToString()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Returns a string that represents the <xref href=\"System.Windows.Forms.TextBoxBase\"></xref> control.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string that represents the current <xref href=\"System.Windows.Forms.TextBoxBase\"></xref>. The string includes the type and the <xref href=\"System.Windows.Forms.TextBoxBase\"></xref> property of the control.\n  overload: System.Windows.Forms.TextBoxBase.ToString*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.TextBoxBase.Undo\n  commentId: M:System.Windows.Forms.TextBoxBase.Undo\n  id: Undo\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: Undo()\n  nameWithType: TextBoxBase.Undo()\n  fullName: TextBoxBase.Undo()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Undoes the last edit operation in the text box.\n  remarks: \"This method will undo the last **Clipboard** or text change operation performed in the text box control if the <xref:System.Windows.Forms.TextBoxBase.CanUndo%2A> property returns `true`.  \\n  \\n> [!NOTE]\\n>  The <xref:System.Windows.Forms.TextBoxBase.Undo%2A> method does not work with the <xref:System.Windows.Forms.Control.KeyPress> or <xref:System.Windows.Forms.Control.TextChanged> events.\"\n  example:\n  - \"The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class. It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations. This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.  \\n  \\n [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CS/source.cs#1)]\\n [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/VB/source.vb#1)]\"\n  syntax:\n    content: public void Undo ();\n    parameters: []\n  overload: System.Windows.Forms.TextBoxBase.Undo*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.TextBoxBase.WndProc(System.Windows.Forms.Message@)\n  commentId: M:System.Windows.Forms.TextBoxBase.WndProc(System.Windows.Forms.Message@)\n  id: WndProc(System.Windows.Forms.Message@)\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: WndProc(Message)\n  nameWithType: TextBoxBase.WndProc(Message)\n  fullName: TextBoxBase.WndProc(Message)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Processes Windows messages.\n  syntax:\n    content: protected override void WndProc (ref System.Windows.Forms.Message m);\n    parameters:\n    - id: m\n      type: System.Windows.Forms.Message\n      description: The Windows <xref href=\"System.Windows.Forms.Message\"></xref> to process.\n  overload: System.Windows.Forms.TextBoxBase.WndProc*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.TextBoxBase.WordWrap\n  commentId: P:System.Windows.Forms.TextBoxBase.WordWrap\n  id: WordWrap\n  parent: System.Windows.Forms.TextBoxBase\n  langs:\n  - csharp\n  name: WordWrap\n  nameWithType: TextBoxBase.WordWrap\n  fullName: TextBoxBase.WordWrap\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Indicates whether a multiline text box control automatically wraps words to the beginning of the next line when necessary.\n  remarks: \"If this property is set to `true`, horizontal scroll bars are not displayed regardless of the <xref:System.Windows.Forms.TextBox.ScrollBars%2A> property setting.  \\n  \\n> [!NOTE]\\n>  In the derived class, <xref:System.Windows.Forms.TextBox>, text within the control will always wrap regardless of the property setting of this property unless the <xref:System.Windows.Forms.TextBox.TextAlign%2A> property is set to `HorizontalAlignment.Left`.\"\n  example:\n  - \"The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars. This example also uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> properties to make the multiline text box control useful for creating text documents.  \\n  \\n [!code-cpp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CS/source.cs#1)]\\n [!code-vb[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/VB/source.vb#1)]\"\n  syntax:\n    content: public bool WordWrap { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the multiline text box control wraps words; `false` if the text box control automatically scrolls horizontally when the user types past the right edge of the control. The default is `true`.'\n  overload: System.Windows.Forms.TextBoxBase.WordWrap*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\nreferences:\n- uid: System.Windows.Forms.Control\n  parent: System.Windows.Forms\n  isExternal: false\n  name: Control\n  nameWithType: Control\n  fullName: System.Windows.Forms.Control\n- uid: System.ComponentModel.InvalidEnumArgumentException\n  parent: System.ComponentModel\n  isExternal: false\n  name: InvalidEnumArgumentException\n  nameWithType: InvalidEnumArgumentException\n  fullName: System.ComponentModel.InvalidEnumArgumentException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.Windows.Forms.TextBoxBase.AcceptsTab\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: AcceptsTab\n  nameWithType: TextBoxBase.AcceptsTab\n  fullName: TextBoxBase.AcceptsTab\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Forms.TextBoxBase.AcceptsTabChanged\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: AcceptsTabChanged\n  nameWithType: TextBoxBase.AcceptsTabChanged\n  fullName: TextBoxBase.AcceptsTabChanged\n- uid: System.EventHandler\n  parent: System\n  isExternal: false\n  name: EventHandler\n  nameWithType: EventHandler\n  fullName: System.EventHandler\n- uid: System.Windows.Forms.TextBoxBase.AppendText(System.String)\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: AppendText(String)\n  nameWithType: TextBoxBase.AppendText(String)\n  fullName: TextBoxBase.AppendText(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Forms.TextBoxBase.AutoSize\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: AutoSize\n  nameWithType: TextBoxBase.AutoSize\n  fullName: TextBoxBase.AutoSize\n- uid: System.Windows.Forms.TextBoxBase.AutoSizeChanged\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: AutoSizeChanged\n  nameWithType: TextBoxBase.AutoSizeChanged\n  fullName: TextBoxBase.AutoSizeChanged\n- uid: System.Windows.Forms.TextBoxBase.BackColor\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: BackColor\n  nameWithType: TextBoxBase.BackColor\n  fullName: TextBoxBase.BackColor\n- uid: System.Drawing.Color\n  parent: System.Drawing\n  isExternal: false\n  name: Color\n  nameWithType: Color\n  fullName: System.Drawing.Color\n- uid: System.Windows.Forms.TextBoxBase.BackgroundImage\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: BackgroundImage\n  nameWithType: TextBoxBase.BackgroundImage\n  fullName: TextBoxBase.BackgroundImage\n- uid: System.Drawing.Image\n  parent: System.Drawing\n  isExternal: false\n  name: Image\n  nameWithType: Image\n  fullName: System.Drawing.Image\n- uid: System.Windows.Forms.TextBoxBase.BackgroundImageChanged\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: BackgroundImageChanged\n  nameWithType: TextBoxBase.BackgroundImageChanged\n  fullName: TextBoxBase.BackgroundImageChanged\n- uid: System.Windows.Forms.TextBoxBase.BackgroundImageLayout\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: BackgroundImageLayout\n  nameWithType: TextBoxBase.BackgroundImageLayout\n  fullName: TextBoxBase.BackgroundImageLayout\n- uid: System.Windows.Forms.ImageLayout\n  parent: System.Windows.Forms\n  isExternal: false\n  name: ImageLayout\n  nameWithType: ImageLayout\n  fullName: System.Windows.Forms.ImageLayout\n- uid: System.Windows.Forms.TextBoxBase.BackgroundImageLayoutChanged\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: BackgroundImageLayoutChanged\n  nameWithType: TextBoxBase.BackgroundImageLayoutChanged\n  fullName: TextBoxBase.BackgroundImageLayoutChanged\n- uid: System.Windows.Forms.TextBoxBase.BorderStyle\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: BorderStyle\n  nameWithType: TextBoxBase.BorderStyle\n  fullName: TextBoxBase.BorderStyle\n- uid: System.Windows.Forms.BorderStyle\n  parent: System.Windows.Forms\n  isExternal: false\n  name: BorderStyle\n  nameWithType: BorderStyle\n  fullName: System.Windows.Forms.BorderStyle\n- uid: System.Windows.Forms.TextBoxBase.BorderStyleChanged\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: BorderStyleChanged\n  nameWithType: TextBoxBase.BorderStyleChanged\n  fullName: TextBoxBase.BorderStyleChanged\n- uid: System.Windows.Forms.TextBoxBase.CanEnableIme\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: CanEnableIme\n  nameWithType: TextBoxBase.CanEnableIme\n  fullName: TextBoxBase.CanEnableIme\n- uid: System.Windows.Forms.TextBoxBase.CanUndo\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: CanUndo\n  nameWithType: TextBoxBase.CanUndo\n  fullName: TextBoxBase.CanUndo\n- uid: System.Windows.Forms.TextBoxBase.Clear\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: Clear()\n  nameWithType: TextBoxBase.Clear()\n  fullName: TextBoxBase.Clear()\n- uid: System.Windows.Forms.TextBoxBase.ClearUndo\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: ClearUndo()\n  nameWithType: TextBoxBase.ClearUndo()\n  fullName: TextBoxBase.ClearUndo()\n- uid: System.Windows.Forms.TextBoxBase.Click\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: Click\n  nameWithType: TextBoxBase.Click\n  fullName: TextBoxBase.Click\n- uid: System.Windows.Forms.TextBoxBase.Copy\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: Copy()\n  nameWithType: TextBoxBase.Copy()\n  fullName: TextBoxBase.Copy()\n- uid: System.Windows.Forms.TextBoxBase.CreateHandle\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: CreateHandle()\n  nameWithType: TextBoxBase.CreateHandle()\n  fullName: TextBoxBase.CreateHandle()\n- uid: System.Windows.Forms.TextBoxBase.CreateParams\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: CreateParams\n  nameWithType: TextBoxBase.CreateParams\n  fullName: TextBoxBase.CreateParams\n- uid: System.Windows.Forms.CreateParams\n  parent: System.Windows.Forms\n  isExternal: false\n  name: CreateParams\n  nameWithType: CreateParams\n  fullName: System.Windows.Forms.CreateParams\n- uid: System.Windows.Forms.TextBoxBase.Cut\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: Cut()\n  nameWithType: TextBoxBase.Cut()\n  fullName: TextBoxBase.Cut()\n- uid: System.Windows.Forms.TextBoxBase.DefaultCursor\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: DefaultCursor\n  nameWithType: TextBoxBase.DefaultCursor\n  fullName: TextBoxBase.DefaultCursor\n- uid: System.Windows.Forms.Cursor\n  parent: System.Windows.Forms\n  isExternal: false\n  name: Cursor\n  nameWithType: Cursor\n  fullName: System.Windows.Forms.Cursor\n- uid: System.Windows.Forms.TextBoxBase.DefaultSize\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: DefaultSize\n  nameWithType: TextBoxBase.DefaultSize\n  fullName: TextBoxBase.DefaultSize\n- uid: System.Drawing.Size\n  parent: System.Drawing\n  isExternal: false\n  name: Size\n  nameWithType: Size\n  fullName: System.Drawing.Size\n- uid: System.Windows.Forms.TextBoxBase.DeselectAll\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: DeselectAll()\n  nameWithType: TextBoxBase.DeselectAll()\n  fullName: TextBoxBase.DeselectAll()\n- uid: System.Windows.Forms.TextBoxBase.DoubleBuffered\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: DoubleBuffered\n  nameWithType: TextBoxBase.DoubleBuffered\n  fullName: TextBoxBase.DoubleBuffered\n- uid: System.Windows.Forms.TextBoxBase.ForeColor\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: ForeColor\n  nameWithType: TextBoxBase.ForeColor\n  fullName: TextBoxBase.ForeColor\n- uid: System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: GetCharFromPosition(Point)\n  nameWithType: TextBoxBase.GetCharFromPosition(Point)\n  fullName: TextBoxBase.GetCharFromPosition(Point)\n- uid: System.Char\n  parent: System\n  isExternal: false\n  name: Char\n  nameWithType: Char\n  fullName: System.Char\n- uid: System.Drawing.Point\n  parent: System.Drawing\n  isExternal: false\n  name: Point\n  nameWithType: Point\n  fullName: System.Drawing.Point\n- uid: System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: GetCharIndexFromPosition(Point)\n  nameWithType: TextBoxBase.GetCharIndexFromPosition(Point)\n  fullName: TextBoxBase.GetCharIndexFromPosition(Point)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: GetFirstCharIndexFromLine(Int32)\n  nameWithType: TextBoxBase.GetFirstCharIndexFromLine(Int32)\n  fullName: TextBoxBase.GetFirstCharIndexFromLine(Int32)\n- uid: System.Windows.Forms.TextBoxBase.GetFirstCharIndexOfCurrentLine\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: GetFirstCharIndexOfCurrentLine()\n  nameWithType: TextBoxBase.GetFirstCharIndexOfCurrentLine()\n  fullName: TextBoxBase.GetFirstCharIndexOfCurrentLine()\n- uid: System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: GetLineFromCharIndex(Int32)\n  nameWithType: TextBoxBase.GetLineFromCharIndex(Int32)\n  fullName: TextBoxBase.GetLineFromCharIndex(Int32)\n- uid: System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(System.Int32)\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: GetPositionFromCharIndex(Int32)\n  nameWithType: TextBoxBase.GetPositionFromCharIndex(Int32)\n  fullName: TextBoxBase.GetPositionFromCharIndex(Int32)\n- uid: System.Windows.Forms.TextBoxBase.HideSelection\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: HideSelection\n  nameWithType: TextBoxBase.HideSelection\n  fullName: TextBoxBase.HideSelection\n- uid: System.Windows.Forms.TextBoxBase.HideSelectionChanged\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: HideSelectionChanged\n  nameWithType: TextBoxBase.HideSelectionChanged\n  fullName: TextBoxBase.HideSelectionChanged\n- uid: System.Windows.Forms.TextBoxBase.ImeModeBase\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: ImeModeBase\n  nameWithType: TextBoxBase.ImeModeBase\n  fullName: TextBoxBase.ImeModeBase\n- uid: System.Windows.Forms.ImeMode\n  parent: System.Windows.Forms\n  isExternal: false\n  name: ImeMode\n  nameWithType: ImeMode\n  fullName: System.Windows.Forms.ImeMode\n- uid: System.Windows.Forms.TextBoxBase.IsInputKey(System.Windows.Forms.Keys)\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: IsInputKey(Keys)\n  nameWithType: TextBoxBase.IsInputKey(Keys)\n  fullName: TextBoxBase.IsInputKey(Keys)\n- uid: System.Windows.Forms.Keys\n  parent: System.Windows.Forms\n  isExternal: false\n  name: Keys\n  nameWithType: Keys\n  fullName: System.Windows.Forms.Keys\n- uid: System.Windows.Forms.TextBoxBase.Lines\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: Lines\n  nameWithType: TextBoxBase.Lines\n  fullName: TextBoxBase.Lines\n- uid: System.String[]\n  parent: System\n  isExternal: false\n  name: String[]\n  nameWithType: String[]\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Windows.Forms.TextBoxBase.MaxLength\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: MaxLength\n  nameWithType: TextBoxBase.MaxLength\n  fullName: TextBoxBase.MaxLength\n- uid: System.Windows.Forms.TextBoxBase.Modified\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: Modified\n  nameWithType: TextBoxBase.Modified\n  fullName: TextBoxBase.Modified\n- uid: System.Windows.Forms.TextBoxBase.ModifiedChanged\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: ModifiedChanged\n  nameWithType: TextBoxBase.ModifiedChanged\n  fullName: TextBoxBase.ModifiedChanged\n- uid: System.Windows.Forms.TextBoxBase.MouseClick\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: MouseClick\n  nameWithType: TextBoxBase.MouseClick\n  fullName: TextBoxBase.MouseClick\n- uid: System.Windows.Forms.MouseEventHandler\n  parent: System.Windows.Forms\n  isExternal: false\n  name: MouseEventHandler\n  nameWithType: MouseEventHandler\n  fullName: System.Windows.Forms.MouseEventHandler\n- uid: System.Windows.Forms.TextBoxBase.Multiline\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: Multiline\n  nameWithType: TextBoxBase.Multiline\n  fullName: TextBoxBase.Multiline\n- uid: System.Windows.Forms.TextBoxBase.MultilineChanged\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: MultilineChanged\n  nameWithType: TextBoxBase.MultilineChanged\n  fullName: TextBoxBase.MultilineChanged\n- uid: System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: OnAcceptsTabChanged(EventArgs)\n  nameWithType: TextBoxBase.OnAcceptsTabChanged(EventArgs)\n  fullName: TextBoxBase.OnAcceptsTabChanged(EventArgs)\n- uid: System.EventArgs\n  parent: System\n  isExternal: false\n  name: EventArgs\n  nameWithType: EventArgs\n  fullName: System.EventArgs\n- uid: System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: OnBorderStyleChanged(EventArgs)\n  nameWithType: TextBoxBase.OnBorderStyleChanged(EventArgs)\n  fullName: TextBoxBase.OnBorderStyleChanged(EventArgs)\n- uid: System.Windows.Forms.TextBoxBase.OnFontChanged(System.EventArgs)\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: OnFontChanged(EventArgs)\n  nameWithType: TextBoxBase.OnFontChanged(EventArgs)\n  fullName: TextBoxBase.OnFontChanged(EventArgs)\n- uid: System.Windows.Forms.TextBoxBase.OnHandleCreated(System.EventArgs)\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: OnHandleCreated(EventArgs)\n  nameWithType: TextBoxBase.OnHandleCreated(EventArgs)\n  fullName: TextBoxBase.OnHandleCreated(EventArgs)\n- uid: System.Windows.Forms.TextBoxBase.OnHandleDestroyed(System.EventArgs)\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: OnHandleDestroyed(EventArgs)\n  nameWithType: TextBoxBase.OnHandleDestroyed(EventArgs)\n  fullName: TextBoxBase.OnHandleDestroyed(EventArgs)\n- uid: System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: OnHideSelectionChanged(EventArgs)\n  nameWithType: TextBoxBase.OnHideSelectionChanged(EventArgs)\n  fullName: TextBoxBase.OnHideSelectionChanged(EventArgs)\n- uid: System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: OnModifiedChanged(EventArgs)\n  nameWithType: TextBoxBase.OnModifiedChanged(EventArgs)\n  fullName: TextBoxBase.OnModifiedChanged(EventArgs)\n- uid: System.Windows.Forms.TextBoxBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: OnMouseUp(MouseEventArgs)\n  nameWithType: TextBoxBase.OnMouseUp(MouseEventArgs)\n  fullName: TextBoxBase.OnMouseUp(MouseEventArgs)\n- uid: System.Windows.Forms.MouseEventArgs\n  parent: System.Windows.Forms\n  isExternal: false\n  name: MouseEventArgs\n  nameWithType: MouseEventArgs\n  fullName: System.Windows.Forms.MouseEventArgs\n- uid: System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: OnMultilineChanged(EventArgs)\n  nameWithType: TextBoxBase.OnMultilineChanged(EventArgs)\n  fullName: TextBoxBase.OnMultilineChanged(EventArgs)\n- uid: System.Windows.Forms.TextBoxBase.OnPaddingChanged(System.EventArgs)\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: OnPaddingChanged(EventArgs)\n  nameWithType: TextBoxBase.OnPaddingChanged(EventArgs)\n  fullName: TextBoxBase.OnPaddingChanged(EventArgs)\n- uid: System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: OnReadOnlyChanged(EventArgs)\n  nameWithType: TextBoxBase.OnReadOnlyChanged(EventArgs)\n  fullName: TextBoxBase.OnReadOnlyChanged(EventArgs)\n- uid: System.Windows.Forms.TextBoxBase.OnTextChanged(System.EventArgs)\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: OnTextChanged(EventArgs)\n  nameWithType: TextBoxBase.OnTextChanged(EventArgs)\n  fullName: TextBoxBase.OnTextChanged(EventArgs)\n- uid: System.Windows.Forms.TextBoxBase.Padding\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: Padding\n  nameWithType: TextBoxBase.Padding\n  fullName: TextBoxBase.Padding\n- uid: System.Windows.Forms.Padding\n  parent: System.Windows.Forms\n  isExternal: false\n  name: Padding\n  nameWithType: Padding\n  fullName: System.Windows.Forms.Padding\n- uid: System.Windows.Forms.TextBoxBase.PaddingChanged\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: PaddingChanged\n  nameWithType: TextBoxBase.PaddingChanged\n  fullName: TextBoxBase.PaddingChanged\n- uid: System.Windows.Forms.TextBoxBase.Paint\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: Paint\n  nameWithType: TextBoxBase.Paint\n  fullName: TextBoxBase.Paint\n- uid: System.Windows.Forms.PaintEventHandler\n  parent: System.Windows.Forms\n  isExternal: false\n  name: PaintEventHandler\n  nameWithType: PaintEventHandler\n  fullName: System.Windows.Forms.PaintEventHandler\n- uid: System.Windows.Forms.TextBoxBase.Paste\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: Paste()\n  nameWithType: TextBoxBase.Paste()\n  fullName: TextBoxBase.Paste()\n- uid: System.Windows.Forms.TextBoxBase.PreferredHeight\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: PreferredHeight\n  nameWithType: TextBoxBase.PreferredHeight\n  fullName: TextBoxBase.PreferredHeight\n- uid: System.Windows.Forms.TextBoxBase.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: ProcessCmdKey(Message, Keys)\n  nameWithType: TextBoxBase.ProcessCmdKey(Message, Keys)\n  fullName: TextBoxBase.ProcessCmdKey(Message, Keys)\n- uid: System.Windows.Forms.Message\n  parent: System.Windows.Forms\n  isExternal: false\n  name: Message\n  nameWithType: Message\n  fullName: System.Windows.Forms.Message\n- uid: System.Windows.Forms.TextBoxBase.ProcessDialogKey(System.Windows.Forms.Keys)\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: ProcessDialogKey(Keys)\n  nameWithType: TextBoxBase.ProcessDialogKey(Keys)\n  fullName: TextBoxBase.ProcessDialogKey(Keys)\n- uid: System.Windows.Forms.TextBoxBase.ReadOnly\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: ReadOnly\n  nameWithType: TextBoxBase.ReadOnly\n  fullName: TextBoxBase.ReadOnly\n- uid: System.Windows.Forms.TextBoxBase.ReadOnlyChanged\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: ReadOnlyChanged\n  nameWithType: TextBoxBase.ReadOnlyChanged\n  fullName: TextBoxBase.ReadOnlyChanged\n- uid: System.Windows.Forms.TextBoxBase.ScrollToCaret\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: ScrollToCaret()\n  nameWithType: TextBoxBase.ScrollToCaret()\n  fullName: TextBoxBase.ScrollToCaret()\n- uid: System.Windows.Forms.TextBoxBase.Select(System.Int32,System.Int32)\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: Select(Int32, Int32)\n  nameWithType: TextBoxBase.Select(Int32, Int32)\n  fullName: TextBoxBase.Select(Int32, Int32)\n- uid: System.Windows.Forms.TextBoxBase.SelectAll\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: SelectAll()\n  nameWithType: TextBoxBase.SelectAll()\n  fullName: TextBoxBase.SelectAll()\n- uid: System.Windows.Forms.TextBoxBase.SelectedText\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: SelectedText\n  nameWithType: TextBoxBase.SelectedText\n  fullName: TextBoxBase.SelectedText\n- uid: System.Windows.Forms.TextBoxBase.SelectionLength\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: SelectionLength\n  nameWithType: TextBoxBase.SelectionLength\n  fullName: TextBoxBase.SelectionLength\n- uid: System.Windows.Forms.TextBoxBase.SelectionStart\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: SelectionStart\n  nameWithType: TextBoxBase.SelectionStart\n  fullName: TextBoxBase.SelectionStart\n- uid: System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: SetBoundsCore(Int32, Int32, Int32, Int32, BoundsSpecified)\n  nameWithType: TextBoxBase.SetBoundsCore(Int32, Int32, Int32, Int32, BoundsSpecified)\n  fullName: TextBoxBase.SetBoundsCore(Int32, Int32, Int32, Int32, BoundsSpecified)\n- uid: System.Windows.Forms.BoundsSpecified\n  parent: System.Windows.Forms\n  isExternal: false\n  name: BoundsSpecified\n  nameWithType: BoundsSpecified\n  fullName: System.Windows.Forms.BoundsSpecified\n- uid: System.Windows.Forms.TextBoxBase.ShortcutsEnabled\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: ShortcutsEnabled\n  nameWithType: TextBoxBase.ShortcutsEnabled\n  fullName: TextBoxBase.ShortcutsEnabled\n- uid: System.Windows.Forms.TextBoxBase.Text\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: Text\n  nameWithType: TextBoxBase.Text\n  fullName: TextBoxBase.Text\n- uid: System.Windows.Forms.TextBoxBase.TextLength\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: TextLength\n  nameWithType: TextBoxBase.TextLength\n  fullName: TextBoxBase.TextLength\n- uid: System.Windows.Forms.TextBoxBase.ToString\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: ToString()\n  nameWithType: TextBoxBase.ToString()\n  fullName: TextBoxBase.ToString()\n- uid: System.Windows.Forms.TextBoxBase.Undo\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: Undo()\n  nameWithType: TextBoxBase.Undo()\n  fullName: TextBoxBase.Undo()\n- uid: System.Windows.Forms.TextBoxBase.WndProc(System.Windows.Forms.Message@)\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: WndProc(Message)\n  nameWithType: TextBoxBase.WndProc(Message)\n  fullName: TextBoxBase.WndProc(Message)\n- uid: System.Windows.Forms.TextBoxBase.WordWrap\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: WordWrap\n  nameWithType: TextBoxBase.WordWrap\n  fullName: TextBoxBase.WordWrap\n- uid: System.Windows.Forms.TextBoxBase.AcceptsTab*\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: AcceptsTab\n  nameWithType: TextBoxBase.AcceptsTab\n  fullName: TextBoxBase.AcceptsTab\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n- uid: System.Windows.Forms.TextBoxBase.AppendText*\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: AppendText\n  nameWithType: TextBoxBase.AppendText\n  fullName: TextBoxBase.AppendText\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n- uid: System.Windows.Forms.TextBoxBase.AutoSize*\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: AutoSize\n  nameWithType: TextBoxBase.AutoSize\n  fullName: TextBoxBase.AutoSize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n- uid: System.Windows.Forms.TextBoxBase.BackColor*\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: BackColor\n  nameWithType: TextBoxBase.BackColor\n  fullName: TextBoxBase.BackColor\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n- uid: System.Windows.Forms.TextBoxBase.BackgroundImage*\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: BackgroundImage\n  nameWithType: TextBoxBase.BackgroundImage\n  fullName: TextBoxBase.BackgroundImage\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n- uid: System.Windows.Forms.TextBoxBase.BackgroundImageLayout*\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: BackgroundImageLayout\n  nameWithType: TextBoxBase.BackgroundImageLayout\n  fullName: TextBoxBase.BackgroundImageLayout\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n- uid: System.Windows.Forms.TextBoxBase.BorderStyle*\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: BorderStyle\n  nameWithType: TextBoxBase.BorderStyle\n  fullName: TextBoxBase.BorderStyle\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n- uid: System.Windows.Forms.TextBoxBase.CanEnableIme*\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: CanEnableIme\n  nameWithType: TextBoxBase.CanEnableIme\n  fullName: TextBoxBase.CanEnableIme\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n- uid: System.Windows.Forms.TextBoxBase.CanUndo*\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: CanUndo\n  nameWithType: TextBoxBase.CanUndo\n  fullName: TextBoxBase.CanUndo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n- uid: System.Windows.Forms.TextBoxBase.Clear*\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: Clear\n  nameWithType: TextBoxBase.Clear\n  fullName: TextBoxBase.Clear\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n- uid: System.Windows.Forms.TextBoxBase.ClearUndo*\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: ClearUndo\n  nameWithType: TextBoxBase.ClearUndo\n  fullName: TextBoxBase.ClearUndo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n- uid: System.Windows.Forms.TextBoxBase.Copy*\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: Copy\n  nameWithType: TextBoxBase.Copy\n  fullName: TextBoxBase.Copy\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n- uid: System.Windows.Forms.TextBoxBase.CreateHandle*\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: CreateHandle\n  nameWithType: TextBoxBase.CreateHandle\n  fullName: TextBoxBase.CreateHandle\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n- uid: System.Windows.Forms.TextBoxBase.CreateParams*\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: CreateParams\n  nameWithType: TextBoxBase.CreateParams\n  fullName: TextBoxBase.CreateParams\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n- uid: System.Windows.Forms.TextBoxBase.Cut*\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: Cut\n  nameWithType: TextBoxBase.Cut\n  fullName: TextBoxBase.Cut\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n- uid: System.Windows.Forms.TextBoxBase.DefaultCursor*\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: DefaultCursor\n  nameWithType: TextBoxBase.DefaultCursor\n  fullName: TextBoxBase.DefaultCursor\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n- uid: System.Windows.Forms.TextBoxBase.DefaultSize*\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: DefaultSize\n  nameWithType: TextBoxBase.DefaultSize\n  fullName: TextBoxBase.DefaultSize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n- uid: System.Windows.Forms.TextBoxBase.DeselectAll*\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: DeselectAll\n  nameWithType: TextBoxBase.DeselectAll\n  fullName: TextBoxBase.DeselectAll\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n- uid: System.Windows.Forms.TextBoxBase.DoubleBuffered*\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: DoubleBuffered\n  nameWithType: TextBoxBase.DoubleBuffered\n  fullName: TextBoxBase.DoubleBuffered\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n- uid: System.Windows.Forms.TextBoxBase.ForeColor*\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: ForeColor\n  nameWithType: TextBoxBase.ForeColor\n  fullName: TextBoxBase.ForeColor\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n- uid: System.Windows.Forms.TextBoxBase.GetCharFromPosition*\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: GetCharFromPosition\n  nameWithType: TextBoxBase.GetCharFromPosition\n  fullName: TextBoxBase.GetCharFromPosition\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n- uid: System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition*\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: GetCharIndexFromPosition\n  nameWithType: TextBoxBase.GetCharIndexFromPosition\n  fullName: TextBoxBase.GetCharIndexFromPosition\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n- uid: System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine*\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: GetFirstCharIndexFromLine\n  nameWithType: TextBoxBase.GetFirstCharIndexFromLine\n  fullName: TextBoxBase.GetFirstCharIndexFromLine\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n- uid: System.Windows.Forms.TextBoxBase.GetFirstCharIndexOfCurrentLine*\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: GetFirstCharIndexOfCurrentLine\n  nameWithType: TextBoxBase.GetFirstCharIndexOfCurrentLine\n  fullName: TextBoxBase.GetFirstCharIndexOfCurrentLine\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n- uid: System.Windows.Forms.TextBoxBase.GetLineFromCharIndex*\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: GetLineFromCharIndex\n  nameWithType: TextBoxBase.GetLineFromCharIndex\n  fullName: TextBoxBase.GetLineFromCharIndex\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n- uid: System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex*\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: GetPositionFromCharIndex\n  nameWithType: TextBoxBase.GetPositionFromCharIndex\n  fullName: TextBoxBase.GetPositionFromCharIndex\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n- uid: System.Windows.Forms.TextBoxBase.HideSelection*\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: HideSelection\n  nameWithType: TextBoxBase.HideSelection\n  fullName: TextBoxBase.HideSelection\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n- uid: System.Windows.Forms.TextBoxBase.ImeModeBase*\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: ImeModeBase\n  nameWithType: TextBoxBase.ImeModeBase\n  fullName: TextBoxBase.ImeModeBase\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n- uid: System.Windows.Forms.TextBoxBase.IsInputKey*\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: IsInputKey\n  nameWithType: TextBoxBase.IsInputKey\n  fullName: TextBoxBase.IsInputKey\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n- uid: System.Windows.Forms.TextBoxBase.Lines*\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: Lines\n  nameWithType: TextBoxBase.Lines\n  fullName: TextBoxBase.Lines\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n- uid: System.Windows.Forms.TextBoxBase.MaxLength*\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: MaxLength\n  nameWithType: TextBoxBase.MaxLength\n  fullName: TextBoxBase.MaxLength\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n- uid: System.Windows.Forms.TextBoxBase.Modified*\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: Modified\n  nameWithType: TextBoxBase.Modified\n  fullName: TextBoxBase.Modified\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n- uid: System.Windows.Forms.TextBoxBase.Multiline*\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: Multiline\n  nameWithType: TextBoxBase.Multiline\n  fullName: TextBoxBase.Multiline\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n- uid: System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged*\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: OnAcceptsTabChanged\n  nameWithType: TextBoxBase.OnAcceptsTabChanged\n  fullName: TextBoxBase.OnAcceptsTabChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n- uid: System.Windows.Forms.TextBoxBase.OnBorderStyleChanged*\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: OnBorderStyleChanged\n  nameWithType: TextBoxBase.OnBorderStyleChanged\n  fullName: TextBoxBase.OnBorderStyleChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n- uid: System.Windows.Forms.TextBoxBase.OnFontChanged*\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: OnFontChanged\n  nameWithType: TextBoxBase.OnFontChanged\n  fullName: TextBoxBase.OnFontChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n- uid: System.Windows.Forms.TextBoxBase.OnHandleCreated*\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: OnHandleCreated\n  nameWithType: TextBoxBase.OnHandleCreated\n  fullName: TextBoxBase.OnHandleCreated\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n- uid: System.Windows.Forms.TextBoxBase.OnHandleDestroyed*\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: OnHandleDestroyed\n  nameWithType: TextBoxBase.OnHandleDestroyed\n  fullName: TextBoxBase.OnHandleDestroyed\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n- uid: System.Windows.Forms.TextBoxBase.OnHideSelectionChanged*\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: OnHideSelectionChanged\n  nameWithType: TextBoxBase.OnHideSelectionChanged\n  fullName: TextBoxBase.OnHideSelectionChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n- uid: System.Windows.Forms.TextBoxBase.OnModifiedChanged*\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: OnModifiedChanged\n  nameWithType: TextBoxBase.OnModifiedChanged\n  fullName: TextBoxBase.OnModifiedChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n- uid: System.Windows.Forms.TextBoxBase.OnMouseUp*\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: OnMouseUp\n  nameWithType: TextBoxBase.OnMouseUp\n  fullName: TextBoxBase.OnMouseUp\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n- uid: System.Windows.Forms.TextBoxBase.OnMultilineChanged*\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: OnMultilineChanged\n  nameWithType: TextBoxBase.OnMultilineChanged\n  fullName: TextBoxBase.OnMultilineChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n- uid: System.Windows.Forms.TextBoxBase.OnPaddingChanged*\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: OnPaddingChanged\n  nameWithType: TextBoxBase.OnPaddingChanged\n  fullName: TextBoxBase.OnPaddingChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n- uid: System.Windows.Forms.TextBoxBase.OnReadOnlyChanged*\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: OnReadOnlyChanged\n  nameWithType: TextBoxBase.OnReadOnlyChanged\n  fullName: TextBoxBase.OnReadOnlyChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n- uid: System.Windows.Forms.TextBoxBase.OnTextChanged*\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: OnTextChanged\n  nameWithType: TextBoxBase.OnTextChanged\n  fullName: TextBoxBase.OnTextChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n- uid: System.Windows.Forms.TextBoxBase.Padding*\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: Padding\n  nameWithType: TextBoxBase.Padding\n  fullName: TextBoxBase.Padding\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n- uid: System.Windows.Forms.TextBoxBase.Paste*\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: Paste\n  nameWithType: TextBoxBase.Paste\n  fullName: TextBoxBase.Paste\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n- uid: System.Windows.Forms.TextBoxBase.PreferredHeight*\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: PreferredHeight\n  nameWithType: TextBoxBase.PreferredHeight\n  fullName: TextBoxBase.PreferredHeight\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n- uid: System.Windows.Forms.TextBoxBase.ProcessCmdKey*\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: ProcessCmdKey\n  nameWithType: TextBoxBase.ProcessCmdKey\n  fullName: TextBoxBase.ProcessCmdKey\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n- uid: System.Windows.Forms.TextBoxBase.ProcessDialogKey*\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: ProcessDialogKey\n  nameWithType: TextBoxBase.ProcessDialogKey\n  fullName: TextBoxBase.ProcessDialogKey\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n- uid: System.Windows.Forms.TextBoxBase.ReadOnly*\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: ReadOnly\n  nameWithType: TextBoxBase.ReadOnly\n  fullName: TextBoxBase.ReadOnly\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n- uid: System.Windows.Forms.TextBoxBase.ScrollToCaret*\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: ScrollToCaret\n  nameWithType: TextBoxBase.ScrollToCaret\n  fullName: TextBoxBase.ScrollToCaret\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n- uid: System.Windows.Forms.TextBoxBase.Select*\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: Select\n  nameWithType: TextBoxBase.Select\n  fullName: TextBoxBase.Select\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n- uid: System.Windows.Forms.TextBoxBase.SelectAll*\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: SelectAll\n  nameWithType: TextBoxBase.SelectAll\n  fullName: TextBoxBase.SelectAll\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n- uid: System.Windows.Forms.TextBoxBase.SelectedText*\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: SelectedText\n  nameWithType: TextBoxBase.SelectedText\n  fullName: TextBoxBase.SelectedText\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n- uid: System.Windows.Forms.TextBoxBase.SelectionLength*\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: SelectionLength\n  nameWithType: TextBoxBase.SelectionLength\n  fullName: TextBoxBase.SelectionLength\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n- uid: System.Windows.Forms.TextBoxBase.SelectionStart*\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: SelectionStart\n  nameWithType: TextBoxBase.SelectionStart\n  fullName: TextBoxBase.SelectionStart\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n- uid: System.Windows.Forms.TextBoxBase.SetBoundsCore*\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: SetBoundsCore\n  nameWithType: TextBoxBase.SetBoundsCore\n  fullName: TextBoxBase.SetBoundsCore\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n- uid: System.Windows.Forms.TextBoxBase.ShortcutsEnabled*\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: ShortcutsEnabled\n  nameWithType: TextBoxBase.ShortcutsEnabled\n  fullName: TextBoxBase.ShortcutsEnabled\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n- uid: System.Windows.Forms.TextBoxBase.Text*\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: Text\n  nameWithType: TextBoxBase.Text\n  fullName: TextBoxBase.Text\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n- uid: System.Windows.Forms.TextBoxBase.TextLength*\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: TextLength\n  nameWithType: TextBoxBase.TextLength\n  fullName: TextBoxBase.TextLength\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n- uid: System.Windows.Forms.TextBoxBase.ToString*\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: ToString\n  nameWithType: TextBoxBase.ToString\n  fullName: TextBoxBase.ToString\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n- uid: System.Windows.Forms.TextBoxBase.Undo*\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: Undo\n  nameWithType: TextBoxBase.Undo\n  fullName: TextBoxBase.Undo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n- uid: System.Windows.Forms.TextBoxBase.WndProc*\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: WndProc\n  nameWithType: TextBoxBase.WndProc\n  fullName: TextBoxBase.WndProc\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n- uid: System.Windows.Forms.TextBoxBase.WordWrap*\n  parent: System.Windows.Forms.TextBoxBase\n  isExternal: false\n  name: WordWrap\n  nameWithType: TextBoxBase.WordWrap\n  fullName: TextBoxBase.WordWrap\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/TextBoxBase.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.MarshalByRefObject.CreateObjRef(System.Type)\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: CreateObjRef(Type)\n  nameWithType: MarshalByRefObject.CreateObjRef(Type)\n  fullName: MarshalByRefObject.CreateObjRef(Type)\n- uid: System.MarshalByRefObject.GetLifetimeService\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: GetLifetimeService()\n  nameWithType: MarshalByRefObject.GetLifetimeService()\n  fullName: MarshalByRefObject.GetLifetimeService()\n- uid: System.MarshalByRefObject.InitializeLifetimeService\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: InitializeLifetimeService()\n  nameWithType: MarshalByRefObject.InitializeLifetimeService()\n  fullName: MarshalByRefObject.InitializeLifetimeService()\n- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: MemberwiseClone(Boolean)\n  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)\n  fullName: MarshalByRefObject.MemberwiseClone(Boolean)\n- uid: System.Windows.Forms.Control.CanRaiseEvents\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: CanRaiseEvents\n  nameWithType: Control.CanRaiseEvents\n  fullName: Control.CanRaiseEvents\n- uid: System.ComponentModel.Component.Container\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Container\n  nameWithType: Component.Container\n  fullName: Component.Container\n- uid: System.ComponentModel.Component.DesignMode\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: DesignMode\n  nameWithType: Component.DesignMode\n  fullName: Component.DesignMode\n- uid: System.ComponentModel.Component.Dispose\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Dispose()\n  nameWithType: Component.Dispose()\n  fullName: Component.Dispose()\n- uid: System.Windows.Forms.Control.Dispose(System.Boolean)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: Control.Dispose(Boolean)\n  fullName: Control.Dispose(Boolean)\n- uid: System.ComponentModel.Component.Disposed\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Disposed\n  nameWithType: Component.Disposed\n  fullName: Component.Disposed\n- uid: System.ComponentModel.Component.Events\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Events\n  nameWithType: Component.Events\n  fullName: Component.Events\n- uid: System.ComponentModel.Component.GetService(System.Type)\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: GetService(Type)\n  nameWithType: Component.GetService(Type)\n  fullName: Component.GetService(Type)\n- uid: System.Windows.Forms.Control.Site\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Site\n  nameWithType: Control.Site\n  fullName: Control.Site\n- uid: System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: AccessibilityNotifyClients(AccessibleEvents, Int32)\n  nameWithType: Control.AccessibilityNotifyClients(AccessibleEvents, Int32)\n  fullName: Control.AccessibilityNotifyClients(AccessibleEvents, Int32)\n- uid: System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32,System.Int32)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: AccessibilityNotifyClients(AccessibleEvents, Int32, Int32)\n  nameWithType: Control.AccessibilityNotifyClients(AccessibleEvents, Int32, Int32)\n  fullName: Control.AccessibilityNotifyClients(AccessibleEvents, Int32, Int32)\n- uid: System.Windows.Forms.Control.AccessibilityObject\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: AccessibilityObject\n  nameWithType: Control.AccessibilityObject\n  fullName: Control.AccessibilityObject\n- uid: System.Windows.Forms.Control.AccessibleDefaultActionDescription\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: AccessibleDefaultActionDescription\n  nameWithType: Control.AccessibleDefaultActionDescription\n  fullName: Control.AccessibleDefaultActionDescription\n- uid: System.Windows.Forms.Control.AccessibleDescription\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: AccessibleDescription\n  nameWithType: Control.AccessibleDescription\n  fullName: Control.AccessibleDescription\n- uid: System.Windows.Forms.Control.AccessibleName\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: AccessibleName\n  nameWithType: Control.AccessibleName\n  fullName: Control.AccessibleName\n- uid: System.Windows.Forms.Control.AccessibleRole\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: AccessibleRole\n  nameWithType: Control.AccessibleRole\n  fullName: Control.AccessibleRole\n- uid: System.Windows.Forms.Control.AllowDrop\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: AllowDrop\n  nameWithType: Control.AllowDrop\n  fullName: Control.AllowDrop\n- uid: System.Windows.Forms.Control.Anchor\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Anchor\n  nameWithType: Control.Anchor\n  fullName: Control.Anchor\n- uid: System.Windows.Forms.Control.AutoScrollOffset\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: AutoScrollOffset\n  nameWithType: Control.AutoScrollOffset\n  fullName: Control.AutoScrollOffset\n- uid: System.Windows.Forms.Control.BackColorChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: BackColorChanged\n  nameWithType: Control.BackColorChanged\n  fullName: Control.BackColorChanged\n- uid: System.Windows.Forms.Control.BeginInvoke(System.Delegate)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: BeginInvoke(Delegate)\n  nameWithType: Control.BeginInvoke(Delegate)\n  fullName: Control.BeginInvoke(Delegate)\n- uid: System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: BeginInvoke(Delegate, Object[])\n  nameWithType: Control.BeginInvoke(Delegate, Object[])\n  fullName: Control.BeginInvoke(Delegate, Object[])\n- uid: System.Windows.Forms.Control.BindingContext\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: BindingContext\n  nameWithType: Control.BindingContext\n  fullName: Control.BindingContext\n- uid: System.Windows.Forms.Control.BindingContextChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: BindingContextChanged\n  nameWithType: Control.BindingContextChanged\n  fullName: Control.BindingContextChanged\n- uid: System.Windows.Forms.Control.Bottom\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Bottom\n  nameWithType: Control.Bottom\n  fullName: Control.Bottom\n- uid: System.Windows.Forms.Control.Bounds\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Bounds\n  nameWithType: Control.Bounds\n  fullName: Control.Bounds\n- uid: System.Windows.Forms.Control.BringToFront\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: BringToFront()\n  nameWithType: Control.BringToFront()\n  fullName: Control.BringToFront()\n- uid: System.Windows.Forms.Control.CanFocus\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: CanFocus\n  nameWithType: Control.CanFocus\n  fullName: Control.CanFocus\n- uid: System.Windows.Forms.Control.CanSelect\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: CanSelect\n  nameWithType: Control.CanSelect\n  fullName: Control.CanSelect\n- uid: System.Windows.Forms.Control.Capture\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Capture\n  nameWithType: Control.Capture\n  fullName: Control.Capture\n- uid: System.Windows.Forms.Control.CausesValidation\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: CausesValidation\n  nameWithType: Control.CausesValidation\n  fullName: Control.CausesValidation\n- uid: System.Windows.Forms.Control.CausesValidationChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: CausesValidationChanged\n  nameWithType: Control.CausesValidationChanged\n  fullName: Control.CausesValidationChanged\n- uid: System.Windows.Forms.Control.ChangeUICues\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ChangeUICues\n  nameWithType: Control.ChangeUICues\n  fullName: Control.ChangeUICues\n- uid: System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: CheckForIllegalCrossThreadCalls\n  nameWithType: Control.CheckForIllegalCrossThreadCalls\n  fullName: Control.CheckForIllegalCrossThreadCalls\n- uid: System.Windows.Forms.Control.ClientRectangle\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ClientRectangle\n  nameWithType: Control.ClientRectangle\n  fullName: Control.ClientRectangle\n- uid: System.Windows.Forms.Control.ClientSize\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ClientSize\n  nameWithType: Control.ClientSize\n  fullName: Control.ClientSize\n- uid: System.Windows.Forms.Control.ClientSizeChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ClientSizeChanged\n  nameWithType: Control.ClientSizeChanged\n  fullName: Control.ClientSizeChanged\n- uid: System.Windows.Forms.Control.CompanyName\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: CompanyName\n  nameWithType: Control.CompanyName\n  fullName: Control.CompanyName\n- uid: System.Windows.Forms.Control.Contains(System.Windows.Forms.Control)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Contains(Control)\n  nameWithType: Control.Contains(Control)\n  fullName: Control.Contains(Control)\n- uid: System.Windows.Forms.Control.ContainsFocus\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ContainsFocus\n  nameWithType: Control.ContainsFocus\n  fullName: Control.ContainsFocus\n- uid: System.Windows.Forms.Control.ContextMenu\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ContextMenu\n  nameWithType: Control.ContextMenu\n  fullName: Control.ContextMenu\n- uid: System.Windows.Forms.Control.ContextMenuChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ContextMenuChanged\n  nameWithType: Control.ContextMenuChanged\n  fullName: Control.ContextMenuChanged\n- uid: System.Windows.Forms.Control.ContextMenuStrip\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ContextMenuStrip\n  nameWithType: Control.ContextMenuStrip\n  fullName: Control.ContextMenuStrip\n- uid: System.Windows.Forms.Control.ContextMenuStripChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ContextMenuStripChanged\n  nameWithType: Control.ContextMenuStripChanged\n  fullName: Control.ContextMenuStripChanged\n- uid: System.Windows.Forms.Control.ControlAdded\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ControlAdded\n  nameWithType: Control.ControlAdded\n  fullName: Control.ControlAdded\n- uid: System.Windows.Forms.Control.ControlRemoved\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ControlRemoved\n  nameWithType: Control.ControlRemoved\n  fullName: Control.ControlRemoved\n- uid: System.Windows.Forms.Control.Controls\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Controls\n  nameWithType: Control.Controls\n  fullName: Control.Controls\n- uid: System.Windows.Forms.Control.CreateAccessibilityInstance\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: CreateAccessibilityInstance()\n  nameWithType: Control.CreateAccessibilityInstance()\n  fullName: Control.CreateAccessibilityInstance()\n- uid: System.Windows.Forms.Control.CreateControl\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: CreateControl()\n  nameWithType: Control.CreateControl()\n  fullName: Control.CreateControl()\n- uid: System.Windows.Forms.Control.CreateControlsInstance\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: CreateControlsInstance()\n  nameWithType: Control.CreateControlsInstance()\n  fullName: Control.CreateControlsInstance()\n- uid: System.Windows.Forms.Control.Created\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Created\n  nameWithType: Control.Created\n  fullName: Control.Created\n- uid: System.Windows.Forms.Control.CreateGraphics\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: CreateGraphics()\n  nameWithType: Control.CreateGraphics()\n  fullName: Control.CreateGraphics()\n- uid: System.Windows.Forms.Control.Cursor\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Cursor\n  nameWithType: Control.Cursor\n  fullName: Control.Cursor\n- uid: System.Windows.Forms.Control.CursorChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: CursorChanged\n  nameWithType: Control.CursorChanged\n  fullName: Control.CursorChanged\n- uid: System.Windows.Forms.Control.DataBindings\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DataBindings\n  nameWithType: Control.DataBindings\n  fullName: Control.DataBindings\n- uid: System.Windows.Forms.Control.DefaultBackColor\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DefaultBackColor\n  nameWithType: Control.DefaultBackColor\n  fullName: Control.DefaultBackColor\n- uid: System.Windows.Forms.Control.DefaultFont\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DefaultFont\n  nameWithType: Control.DefaultFont\n  fullName: Control.DefaultFont\n- uid: System.Windows.Forms.Control.DefaultForeColor\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DefaultForeColor\n  nameWithType: Control.DefaultForeColor\n  fullName: Control.DefaultForeColor\n- uid: System.Windows.Forms.Control.DefaultImeMode\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DefaultImeMode\n  nameWithType: Control.DefaultImeMode\n  fullName: Control.DefaultImeMode\n- uid: System.Windows.Forms.Control.DefaultMargin\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DefaultMargin\n  nameWithType: Control.DefaultMargin\n  fullName: Control.DefaultMargin\n- uid: System.Windows.Forms.Control.DefaultMaximumSize\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DefaultMaximumSize\n  nameWithType: Control.DefaultMaximumSize\n  fullName: Control.DefaultMaximumSize\n- uid: System.Windows.Forms.Control.DefaultMinimumSize\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DefaultMinimumSize\n  nameWithType: Control.DefaultMinimumSize\n  fullName: Control.DefaultMinimumSize\n- uid: System.Windows.Forms.Control.DefaultPadding\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DefaultPadding\n  nameWithType: Control.DefaultPadding\n  fullName: Control.DefaultPadding\n- uid: System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DefWndProc(Message)\n  nameWithType: Control.DefWndProc(Message)\n  fullName: Control.DefWndProc(Message)\n- uid: System.Windows.Forms.Control.DestroyHandle\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DestroyHandle()\n  nameWithType: Control.DestroyHandle()\n  fullName: Control.DestroyHandle()\n- uid: System.Windows.Forms.Control.DeviceDpi\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DeviceDpi\n  nameWithType: Control.DeviceDpi\n  fullName: Control.DeviceDpi\n- uid: System.Windows.Forms.Control.DisplayRectangle\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DisplayRectangle\n  nameWithType: Control.DisplayRectangle\n  fullName: Control.DisplayRectangle\n- uid: System.Windows.Forms.Control.Disposing\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Disposing\n  nameWithType: Control.Disposing\n  fullName: Control.Disposing\n- uid: System.Windows.Forms.Control.Dock\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Dock\n  nameWithType: Control.Dock\n  fullName: Control.Dock\n- uid: System.Windows.Forms.Control.DockChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DockChanged\n  nameWithType: Control.DockChanged\n  fullName: Control.DockChanged\n- uid: System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DoDragDrop(Object, DragDropEffects)\n  nameWithType: Control.DoDragDrop(Object, DragDropEffects)\n  fullName: Control.DoDragDrop(Object, DragDropEffects)\n- uid: System.Windows.Forms.Control.DoubleClick\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DoubleClick\n  nameWithType: Control.DoubleClick\n  fullName: Control.DoubleClick\n- uid: System.Windows.Forms.Control.DpiChangedAfterParent\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DpiChangedAfterParent\n  nameWithType: Control.DpiChangedAfterParent\n  fullName: Control.DpiChangedAfterParent\n- uid: System.Windows.Forms.Control.DpiChangedBeforeParent\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DpiChangedBeforeParent\n  nameWithType: Control.DpiChangedBeforeParent\n  fullName: Control.DpiChangedBeforeParent\n- uid: System.Windows.Forms.Control.DragDrop\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DragDrop\n  nameWithType: Control.DragDrop\n  fullName: Control.DragDrop\n- uid: System.Windows.Forms.Control.DragEnter\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DragEnter\n  nameWithType: Control.DragEnter\n  fullName: Control.DragEnter\n- uid: System.Windows.Forms.Control.DragLeave\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DragLeave\n  nameWithType: Control.DragLeave\n  fullName: Control.DragLeave\n- uid: System.Windows.Forms.Control.DragOver\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DragOver\n  nameWithType: Control.DragOver\n  fullName: Control.DragOver\n- uid: System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DrawToBitmap(Bitmap, Rectangle)\n  nameWithType: Control.DrawToBitmap(Bitmap, Rectangle)\n  fullName: Control.DrawToBitmap(Bitmap, Rectangle)\n- uid: System.Windows.Forms.Control.Enabled\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Enabled\n  nameWithType: Control.Enabled\n  fullName: Control.Enabled\n- uid: System.Windows.Forms.Control.EnabledChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: EnabledChanged\n  nameWithType: Control.EnabledChanged\n  fullName: Control.EnabledChanged\n- uid: System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: EndInvoke(IAsyncResult)\n  nameWithType: Control.EndInvoke(IAsyncResult)\n  fullName: Control.EndInvoke(IAsyncResult)\n- uid: System.Windows.Forms.Control.Enter\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Enter\n  nameWithType: Control.Enter\n  fullName: Control.Enter\n- uid: System.Windows.Forms.Control.FindForm\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: FindForm()\n  nameWithType: Control.FindForm()\n  fullName: Control.FindForm()\n- uid: System.Windows.Forms.Control.Focus\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Focus()\n  nameWithType: Control.Focus()\n  fullName: Control.Focus()\n- uid: System.Windows.Forms.Control.Focused\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Focused\n  nameWithType: Control.Focused\n  fullName: Control.Focused\n- uid: System.Windows.Forms.Control.Font\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Font\n  nameWithType: Control.Font\n  fullName: Control.Font\n- uid: System.Windows.Forms.Control.FontChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: FontChanged\n  nameWithType: Control.FontChanged\n  fullName: Control.FontChanged\n- uid: System.Windows.Forms.Control.FontHeight\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: FontHeight\n  nameWithType: Control.FontHeight\n  fullName: Control.FontHeight\n- uid: System.Windows.Forms.Control.ForeColorChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ForeColorChanged\n  nameWithType: Control.ForeColorChanged\n  fullName: Control.ForeColorChanged\n- uid: System.Windows.Forms.Control.FromChildHandle(System.IntPtr)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: FromChildHandle(IntPtr)\n  nameWithType: Control.FromChildHandle(IntPtr)\n  fullName: Control.FromChildHandle(IntPtr)\n- uid: System.Windows.Forms.Control.FromHandle(System.IntPtr)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: FromHandle(IntPtr)\n  nameWithType: Control.FromHandle(IntPtr)\n  fullName: Control.FromHandle(IntPtr)\n- uid: System.Windows.Forms.Control.GetAccessibilityObjectById(System.Int32)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: GetAccessibilityObjectById(Int32)\n  nameWithType: Control.GetAccessibilityObjectById(Int32)\n  fullName: Control.GetAccessibilityObjectById(Int32)\n- uid: System.Windows.Forms.Control.GetAutoSizeMode\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: GetAutoSizeMode()\n  nameWithType: Control.GetAutoSizeMode()\n  fullName: Control.GetAutoSizeMode()\n- uid: System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: GetChildAtPoint(Point)\n  nameWithType: Control.GetChildAtPoint(Point)\n  fullName: Control.GetChildAtPoint(Point)\n- uid: System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point,System.Windows.Forms.GetChildAtPointSkip)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: GetChildAtPoint(Point, GetChildAtPointSkip)\n  nameWithType: Control.GetChildAtPoint(Point, GetChildAtPointSkip)\n  fullName: Control.GetChildAtPoint(Point, GetChildAtPointSkip)\n- uid: System.Windows.Forms.Control.GetContainerControl\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: GetContainerControl()\n  nameWithType: Control.GetContainerControl()\n  fullName: Control.GetContainerControl()\n- uid: System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: GetNextControl(Control, Boolean)\n  nameWithType: Control.GetNextControl(Control, Boolean)\n  fullName: Control.GetNextControl(Control, Boolean)\n- uid: System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: GetPreferredSize(Size)\n  nameWithType: Control.GetPreferredSize(Size)\n  fullName: Control.GetPreferredSize(Size)\n- uid: System.Windows.Forms.Control.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: GetScaledBounds(Rectangle, SizeF, BoundsSpecified)\n  nameWithType: Control.GetScaledBounds(Rectangle, SizeF, BoundsSpecified)\n  fullName: Control.GetScaledBounds(Rectangle, SizeF, BoundsSpecified)\n- uid: System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: GetStyle(ControlStyles)\n  nameWithType: Control.GetStyle(ControlStyles)\n  fullName: Control.GetStyle(ControlStyles)\n- uid: System.Windows.Forms.Control.GetTopLevel\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: GetTopLevel()\n  nameWithType: Control.GetTopLevel()\n  fullName: Control.GetTopLevel()\n- uid: System.Windows.Forms.Control.GiveFeedback\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: GiveFeedback\n  nameWithType: Control.GiveFeedback\n  fullName: Control.GiveFeedback\n- uid: System.Windows.Forms.Control.GotFocus\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: GotFocus\n  nameWithType: Control.GotFocus\n  fullName: Control.GotFocus\n- uid: System.Windows.Forms.Control.Handle\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Handle\n  nameWithType: Control.Handle\n  fullName: Control.Handle\n- uid: System.Windows.Forms.Control.HandleCreated\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: HandleCreated\n  nameWithType: Control.HandleCreated\n  fullName: Control.HandleCreated\n- uid: System.Windows.Forms.Control.HandleDestroyed\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: HandleDestroyed\n  nameWithType: Control.HandleDestroyed\n  fullName: Control.HandleDestroyed\n- uid: System.Windows.Forms.Control.HasChildren\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: HasChildren\n  nameWithType: Control.HasChildren\n  fullName: Control.HasChildren\n- uid: System.Windows.Forms.Control.Height\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Height\n  nameWithType: Control.Height\n  fullName: Control.Height\n- uid: System.Windows.Forms.Control.HelpRequested\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: HelpRequested\n  nameWithType: Control.HelpRequested\n  fullName: Control.HelpRequested\n- uid: System.Windows.Forms.Control.Hide\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Hide()\n  nameWithType: Control.Hide()\n  fullName: Control.Hide()\n- uid: System.Windows.Forms.Control.ImeMode\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ImeMode\n  nameWithType: Control.ImeMode\n  fullName: Control.ImeMode\n- uid: System.Windows.Forms.Control.ImeModeChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ImeModeChanged\n  nameWithType: Control.ImeModeChanged\n  fullName: Control.ImeModeChanged\n- uid: System.Windows.Forms.Control.InitLayout\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: InitLayout()\n  nameWithType: Control.InitLayout()\n  fullName: Control.InitLayout()\n- uid: System.Windows.Forms.Control.Invalidate(System.Drawing.Region,System.Boolean)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Invalidate(Region, Boolean)\n  nameWithType: Control.Invalidate(Region, Boolean)\n  fullName: Control.Invalidate(Region, Boolean)\n- uid: System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle,System.Boolean)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Invalidate(Rectangle, Boolean)\n  nameWithType: Control.Invalidate(Rectangle, Boolean)\n  fullName: Control.Invalidate(Rectangle, Boolean)\n- uid: System.Windows.Forms.Control.Invalidate(System.Drawing.Region)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Invalidate(Region)\n  nameWithType: Control.Invalidate(Region)\n  fullName: Control.Invalidate(Region)\n- uid: System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Invalidate(Rectangle)\n  nameWithType: Control.Invalidate(Rectangle)\n  fullName: Control.Invalidate(Rectangle)\n- uid: System.Windows.Forms.Control.Invalidate(System.Boolean)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Invalidate(Boolean)\n  nameWithType: Control.Invalidate(Boolean)\n  fullName: Control.Invalidate(Boolean)\n- uid: System.Windows.Forms.Control.Invalidate\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Invalidate()\n  nameWithType: Control.Invalidate()\n  fullName: Control.Invalidate()\n- uid: System.Windows.Forms.Control.Invalidated\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Invalidated\n  nameWithType: Control.Invalidated\n  fullName: Control.Invalidated\n- uid: System.Windows.Forms.Control.Invoke(System.Delegate)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Invoke(Delegate)\n  nameWithType: Control.Invoke(Delegate)\n  fullName: Control.Invoke(Delegate)\n- uid: System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Invoke(Delegate, Object[])\n  nameWithType: Control.Invoke(Delegate, Object[])\n  fullName: Control.Invoke(Delegate, Object[])\n- uid: System.Windows.Forms.Control.InvokeGotFocus(System.Windows.Forms.Control,System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: InvokeGotFocus(Control, EventArgs)\n  nameWithType: Control.InvokeGotFocus(Control, EventArgs)\n  fullName: Control.InvokeGotFocus(Control, EventArgs)\n- uid: System.Windows.Forms.Control.InvokeLostFocus(System.Windows.Forms.Control,System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: InvokeLostFocus(Control, EventArgs)\n  nameWithType: Control.InvokeLostFocus(Control, EventArgs)\n  fullName: Control.InvokeLostFocus(Control, EventArgs)\n- uid: System.Windows.Forms.Control.InvokeOnClick(System.Windows.Forms.Control,System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: InvokeOnClick(Control, EventArgs)\n  nameWithType: Control.InvokeOnClick(Control, EventArgs)\n  fullName: Control.InvokeOnClick(Control, EventArgs)\n- uid: System.Windows.Forms.Control.InvokePaint(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: InvokePaint(Control, PaintEventArgs)\n  nameWithType: Control.InvokePaint(Control, PaintEventArgs)\n  fullName: Control.InvokePaint(Control, PaintEventArgs)\n- uid: System.Windows.Forms.Control.InvokePaintBackground(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: InvokePaintBackground(Control, PaintEventArgs)\n  nameWithType: Control.InvokePaintBackground(Control, PaintEventArgs)\n  fullName: Control.InvokePaintBackground(Control, PaintEventArgs)\n- uid: System.Windows.Forms.Control.InvokeRequired\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: InvokeRequired\n  nameWithType: Control.InvokeRequired\n  fullName: Control.InvokeRequired\n- uid: System.Windows.Forms.Control.IsAccessible\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: IsAccessible\n  nameWithType: Control.IsAccessible\n  fullName: Control.IsAccessible\n- uid: System.Windows.Forms.Control.IsDisposed\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: IsDisposed\n  nameWithType: Control.IsDisposed\n  fullName: Control.IsDisposed\n- uid: System.Windows.Forms.Control.IsHandleCreated\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: IsHandleCreated\n  nameWithType: Control.IsHandleCreated\n  fullName: Control.IsHandleCreated\n- uid: System.Windows.Forms.Control.IsInputChar(System.Char)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: IsInputChar(Char)\n  nameWithType: Control.IsInputChar(Char)\n  fullName: Control.IsInputChar(Char)\n- uid: System.Windows.Forms.Control.IsKeyLocked(System.Windows.Forms.Keys)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: IsKeyLocked(Keys)\n  nameWithType: Control.IsKeyLocked(Keys)\n  fullName: Control.IsKeyLocked(Keys)\n- uid: System.Windows.Forms.Control.IsMirrored\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: IsMirrored\n  nameWithType: Control.IsMirrored\n  fullName: Control.IsMirrored\n- uid: System.Windows.Forms.Control.IsMnemonic(System.Char,System.String)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: IsMnemonic(Char, String)\n  nameWithType: Control.IsMnemonic(Char, String)\n  fullName: Control.IsMnemonic(Char, String)\n- uid: System.Windows.Forms.Control.KeyDown\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: KeyDown\n  nameWithType: Control.KeyDown\n  fullName: Control.KeyDown\n- uid: System.Windows.Forms.Control.KeyPress\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: KeyPress\n  nameWithType: Control.KeyPress\n  fullName: Control.KeyPress\n- uid: System.Windows.Forms.Control.KeyUp\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: KeyUp\n  nameWithType: Control.KeyUp\n  fullName: Control.KeyUp\n- uid: System.Windows.Forms.Control.Layout\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Layout\n  nameWithType: Control.Layout\n  fullName: Control.Layout\n- uid: System.Windows.Forms.Control.LayoutEngine\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: LayoutEngine\n  nameWithType: Control.LayoutEngine\n  fullName: Control.LayoutEngine\n- uid: System.Windows.Forms.Control.Leave\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Leave\n  nameWithType: Control.Leave\n  fullName: Control.Leave\n- uid: System.Windows.Forms.Control.Left\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Left\n  nameWithType: Control.Left\n  fullName: Control.Left\n- uid: System.Windows.Forms.Control.Location\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Location\n  nameWithType: Control.Location\n  fullName: Control.Location\n- uid: System.Windows.Forms.Control.LocationChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: LocationChanged\n  nameWithType: Control.LocationChanged\n  fullName: Control.LocationChanged\n- uid: System.Windows.Forms.Control.LogicalToDeviceUnits(System.Int32)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: LogicalToDeviceUnits(Int32)\n  nameWithType: Control.LogicalToDeviceUnits(Int32)\n  fullName: Control.LogicalToDeviceUnits(Int32)\n- uid: System.Windows.Forms.Control.LostFocus\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: LostFocus\n  nameWithType: Control.LostFocus\n  fullName: Control.LostFocus\n- uid: System.Windows.Forms.Control.Margin\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Margin\n  nameWithType: Control.Margin\n  fullName: Control.Margin\n- uid: System.Windows.Forms.Control.MarginChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: MarginChanged\n  nameWithType: Control.MarginChanged\n  fullName: Control.MarginChanged\n- uid: System.Windows.Forms.Control.MaximumSize\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: MaximumSize\n  nameWithType: Control.MaximumSize\n  fullName: Control.MaximumSize\n- uid: System.Windows.Forms.Control.MinimumSize\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: MinimumSize\n  nameWithType: Control.MinimumSize\n  fullName: Control.MinimumSize\n- uid: System.Windows.Forms.Control.ModifierKeys\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ModifierKeys\n  nameWithType: Control.ModifierKeys\n  fullName: Control.ModifierKeys\n- uid: System.Windows.Forms.Control.MouseButtons\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: MouseButtons\n  nameWithType: Control.MouseButtons\n  fullName: Control.MouseButtons\n- uid: System.Windows.Forms.Control.MouseCaptureChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: MouseCaptureChanged\n  nameWithType: Control.MouseCaptureChanged\n  fullName: Control.MouseCaptureChanged\n- uid: System.Windows.Forms.Control.MouseDoubleClick\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: MouseDoubleClick\n  nameWithType: Control.MouseDoubleClick\n  fullName: Control.MouseDoubleClick\n- uid: System.Windows.Forms.Control.MouseDown\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: MouseDown\n  nameWithType: Control.MouseDown\n  fullName: Control.MouseDown\n- uid: System.Windows.Forms.Control.MouseEnter\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: MouseEnter\n  nameWithType: Control.MouseEnter\n  fullName: Control.MouseEnter\n- uid: System.Windows.Forms.Control.MouseHover\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: MouseHover\n  nameWithType: Control.MouseHover\n  fullName: Control.MouseHover\n- uid: System.Windows.Forms.Control.MouseLeave\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: MouseLeave\n  nameWithType: Control.MouseLeave\n  fullName: Control.MouseLeave\n- uid: System.Windows.Forms.Control.MouseMove\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: MouseMove\n  nameWithType: Control.MouseMove\n  fullName: Control.MouseMove\n- uid: System.Windows.Forms.Control.MousePosition\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: MousePosition\n  nameWithType: Control.MousePosition\n  fullName: Control.MousePosition\n- uid: System.Windows.Forms.Control.MouseUp\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: MouseUp\n  nameWithType: Control.MouseUp\n  fullName: Control.MouseUp\n- uid: System.Windows.Forms.Control.MouseWheel\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: MouseWheel\n  nameWithType: Control.MouseWheel\n  fullName: Control.MouseWheel\n- uid: System.Windows.Forms.Control.Move\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Move\n  nameWithType: Control.Move\n  fullName: Control.Move\n- uid: System.Windows.Forms.Control.Name\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Name\n  nameWithType: Control.Name\n  fullName: Control.Name\n- uid: System.Windows.Forms.Control.NotifyInvalidate(System.Drawing.Rectangle)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: NotifyInvalidate(Rectangle)\n  nameWithType: Control.NotifyInvalidate(Rectangle)\n  fullName: Control.NotifyInvalidate(Rectangle)\n- uid: System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnAutoSizeChanged(EventArgs)\n  nameWithType: Control.OnAutoSizeChanged(EventArgs)\n  fullName: Control.OnAutoSizeChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnBackColorChanged(EventArgs)\n  nameWithType: Control.OnBackColorChanged(EventArgs)\n  fullName: Control.OnBackColorChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnBackgroundImageChanged(EventArgs)\n  nameWithType: Control.OnBackgroundImageChanged(EventArgs)\n  fullName: Control.OnBackgroundImageChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnBackgroundImageLayoutChanged(EventArgs)\n  nameWithType: Control.OnBackgroundImageLayoutChanged(EventArgs)\n  fullName: Control.OnBackgroundImageLayoutChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnBindingContextChanged(EventArgs)\n  nameWithType: Control.OnBindingContextChanged(EventArgs)\n  fullName: Control.OnBindingContextChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnCausesValidationChanged(EventArgs)\n  nameWithType: Control.OnCausesValidationChanged(EventArgs)\n  fullName: Control.OnCausesValidationChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnChangeUICues(UICuesEventArgs)\n  nameWithType: Control.OnChangeUICues(UICuesEventArgs)\n  fullName: Control.OnChangeUICues(UICuesEventArgs)\n- uid: System.Windows.Forms.Control.OnClick(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnClick(EventArgs)\n  nameWithType: Control.OnClick(EventArgs)\n  fullName: Control.OnClick(EventArgs)\n- uid: System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnClientSizeChanged(EventArgs)\n  nameWithType: Control.OnClientSizeChanged(EventArgs)\n  fullName: Control.OnClientSizeChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnContextMenuChanged(EventArgs)\n  nameWithType: Control.OnContextMenuChanged(EventArgs)\n  fullName: Control.OnContextMenuChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnContextMenuStripChanged(EventArgs)\n  nameWithType: Control.OnContextMenuStripChanged(EventArgs)\n  fullName: Control.OnContextMenuStripChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnControlAdded(ControlEventArgs)\n  nameWithType: Control.OnControlAdded(ControlEventArgs)\n  fullName: Control.OnControlAdded(ControlEventArgs)\n- uid: System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnControlRemoved(ControlEventArgs)\n  nameWithType: Control.OnControlRemoved(ControlEventArgs)\n  fullName: Control.OnControlRemoved(ControlEventArgs)\n- uid: System.Windows.Forms.Control.OnCreateControl\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnCreateControl()\n  nameWithType: Control.OnCreateControl()\n  fullName: Control.OnCreateControl()\n- uid: System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnCursorChanged(EventArgs)\n  nameWithType: Control.OnCursorChanged(EventArgs)\n  fullName: Control.OnCursorChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnDockChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnDockChanged(EventArgs)\n  nameWithType: Control.OnDockChanged(EventArgs)\n  fullName: Control.OnDockChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnDoubleClick(EventArgs)\n  nameWithType: Control.OnDoubleClick(EventArgs)\n  fullName: Control.OnDoubleClick(EventArgs)\n- uid: System.Windows.Forms.Control.OnDpiChangedAfterParent(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnDpiChangedAfterParent(EventArgs)\n  nameWithType: Control.OnDpiChangedAfterParent(EventArgs)\n  fullName: Control.OnDpiChangedAfterParent(EventArgs)\n- uid: System.Windows.Forms.Control.OnDpiChangedBeforeParent(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnDpiChangedBeforeParent(EventArgs)\n  nameWithType: Control.OnDpiChangedBeforeParent(EventArgs)\n  fullName: Control.OnDpiChangedBeforeParent(EventArgs)\n- uid: System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnDragDrop(DragEventArgs)\n  nameWithType: Control.OnDragDrop(DragEventArgs)\n  fullName: Control.OnDragDrop(DragEventArgs)\n- uid: System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnDragEnter(DragEventArgs)\n  nameWithType: Control.OnDragEnter(DragEventArgs)\n  fullName: Control.OnDragEnter(DragEventArgs)\n- uid: System.Windows.Forms.Control.OnDragLeave(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnDragLeave(EventArgs)\n  nameWithType: Control.OnDragLeave(EventArgs)\n  fullName: Control.OnDragLeave(EventArgs)\n- uid: System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnDragOver(DragEventArgs)\n  nameWithType: Control.OnDragOver(DragEventArgs)\n  fullName: Control.OnDragOver(DragEventArgs)\n- uid: System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnEnabledChanged(EventArgs)\n  nameWithType: Control.OnEnabledChanged(EventArgs)\n  fullName: Control.OnEnabledChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnEnter(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnEnter(EventArgs)\n  nameWithType: Control.OnEnter(EventArgs)\n  fullName: Control.OnEnter(EventArgs)\n- uid: System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnForeColorChanged(EventArgs)\n  nameWithType: Control.OnForeColorChanged(EventArgs)\n  fullName: Control.OnForeColorChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnGiveFeedback(GiveFeedbackEventArgs)\n  nameWithType: Control.OnGiveFeedback(GiveFeedbackEventArgs)\n  fullName: Control.OnGiveFeedback(GiveFeedbackEventArgs)\n- uid: System.Windows.Forms.Control.OnGotFocus(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnGotFocus(EventArgs)\n  nameWithType: Control.OnGotFocus(EventArgs)\n  fullName: Control.OnGotFocus(EventArgs)\n- uid: System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnHelpRequested(HelpEventArgs)\n  nameWithType: Control.OnHelpRequested(HelpEventArgs)\n  fullName: Control.OnHelpRequested(HelpEventArgs)\n- uid: System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnImeModeChanged(EventArgs)\n  nameWithType: Control.OnImeModeChanged(EventArgs)\n  fullName: Control.OnImeModeChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnInvalidated(InvalidateEventArgs)\n  nameWithType: Control.OnInvalidated(InvalidateEventArgs)\n  fullName: Control.OnInvalidated(InvalidateEventArgs)\n- uid: System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnKeyDown(KeyEventArgs)\n  nameWithType: Control.OnKeyDown(KeyEventArgs)\n  fullName: Control.OnKeyDown(KeyEventArgs)\n- uid: System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnKeyPress(KeyPressEventArgs)\n  nameWithType: Control.OnKeyPress(KeyPressEventArgs)\n  fullName: Control.OnKeyPress(KeyPressEventArgs)\n- uid: System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnKeyUp(KeyEventArgs)\n  nameWithType: Control.OnKeyUp(KeyEventArgs)\n  fullName: Control.OnKeyUp(KeyEventArgs)\n- uid: System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnLayout(LayoutEventArgs)\n  nameWithType: Control.OnLayout(LayoutEventArgs)\n  fullName: Control.OnLayout(LayoutEventArgs)\n- uid: System.Windows.Forms.Control.OnLeave(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnLeave(EventArgs)\n  nameWithType: Control.OnLeave(EventArgs)\n  fullName: Control.OnLeave(EventArgs)\n- uid: System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnLocationChanged(EventArgs)\n  nameWithType: Control.OnLocationChanged(EventArgs)\n  fullName: Control.OnLocationChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnLostFocus(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnLostFocus(EventArgs)\n  nameWithType: Control.OnLostFocus(EventArgs)\n  fullName: Control.OnLostFocus(EventArgs)\n- uid: System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnMarginChanged(EventArgs)\n  nameWithType: Control.OnMarginChanged(EventArgs)\n  fullName: Control.OnMarginChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnMouseCaptureChanged(EventArgs)\n  nameWithType: Control.OnMouseCaptureChanged(EventArgs)\n  fullName: Control.OnMouseCaptureChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnMouseClick(MouseEventArgs)\n  nameWithType: Control.OnMouseClick(MouseEventArgs)\n  fullName: Control.OnMouseClick(MouseEventArgs)\n- uid: System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnMouseDoubleClick(MouseEventArgs)\n  nameWithType: Control.OnMouseDoubleClick(MouseEventArgs)\n  fullName: Control.OnMouseDoubleClick(MouseEventArgs)\n- uid: System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnMouseDown(MouseEventArgs)\n  nameWithType: Control.OnMouseDown(MouseEventArgs)\n  fullName: Control.OnMouseDown(MouseEventArgs)\n- uid: System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnMouseEnter(EventArgs)\n  nameWithType: Control.OnMouseEnter(EventArgs)\n  fullName: Control.OnMouseEnter(EventArgs)\n- uid: System.Windows.Forms.Control.OnMouseHover(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnMouseHover(EventArgs)\n  nameWithType: Control.OnMouseHover(EventArgs)\n  fullName: Control.OnMouseHover(EventArgs)\n- uid: System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnMouseLeave(EventArgs)\n  nameWithType: Control.OnMouseLeave(EventArgs)\n  fullName: Control.OnMouseLeave(EventArgs)\n- uid: System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnMouseMove(MouseEventArgs)\n  nameWithType: Control.OnMouseMove(MouseEventArgs)\n  fullName: Control.OnMouseMove(MouseEventArgs)\n- uid: System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnMouseWheel(MouseEventArgs)\n  nameWithType: Control.OnMouseWheel(MouseEventArgs)\n  fullName: Control.OnMouseWheel(MouseEventArgs)\n- uid: System.Windows.Forms.Control.OnMove(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnMove(EventArgs)\n  nameWithType: Control.OnMove(EventArgs)\n  fullName: Control.OnMove(EventArgs)\n- uid: System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnNotifyMessage(Message)\n  nameWithType: Control.OnNotifyMessage(Message)\n  fullName: Control.OnNotifyMessage(Message)\n- uid: System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnPaint(PaintEventArgs)\n  nameWithType: Control.OnPaint(PaintEventArgs)\n  fullName: Control.OnPaint(PaintEventArgs)\n- uid: System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnPaintBackground(PaintEventArgs)\n  nameWithType: Control.OnPaintBackground(PaintEventArgs)\n  fullName: Control.OnPaintBackground(PaintEventArgs)\n- uid: System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnParentBackColorChanged(EventArgs)\n  nameWithType: Control.OnParentBackColorChanged(EventArgs)\n  fullName: Control.OnParentBackColorChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnParentBackgroundImageChanged(EventArgs)\n  nameWithType: Control.OnParentBackgroundImageChanged(EventArgs)\n  fullName: Control.OnParentBackgroundImageChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnParentBindingContextChanged(EventArgs)\n  nameWithType: Control.OnParentBindingContextChanged(EventArgs)\n  fullName: Control.OnParentBindingContextChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnParentChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnParentChanged(EventArgs)\n  nameWithType: Control.OnParentChanged(EventArgs)\n  fullName: Control.OnParentChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnParentCursorChanged(EventArgs)\n  nameWithType: Control.OnParentCursorChanged(EventArgs)\n  fullName: Control.OnParentCursorChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnParentEnabledChanged(EventArgs)\n  nameWithType: Control.OnParentEnabledChanged(EventArgs)\n  fullName: Control.OnParentEnabledChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnParentFontChanged(EventArgs)\n  nameWithType: Control.OnParentFontChanged(EventArgs)\n  fullName: Control.OnParentFontChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnParentForeColorChanged(EventArgs)\n  nameWithType: Control.OnParentForeColorChanged(EventArgs)\n  fullName: Control.OnParentForeColorChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnParentRightToLeftChanged(EventArgs)\n  nameWithType: Control.OnParentRightToLeftChanged(EventArgs)\n  fullName: Control.OnParentRightToLeftChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnParentVisibleChanged(EventArgs)\n  nameWithType: Control.OnParentVisibleChanged(EventArgs)\n  fullName: Control.OnParentVisibleChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnPreviewKeyDown(PreviewKeyDownEventArgs)\n  nameWithType: Control.OnPreviewKeyDown(PreviewKeyDownEventArgs)\n  fullName: Control.OnPreviewKeyDown(PreviewKeyDownEventArgs)\n- uid: System.Windows.Forms.Control.OnPrint(System.Windows.Forms.PaintEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnPrint(PaintEventArgs)\n  nameWithType: Control.OnPrint(PaintEventArgs)\n  fullName: Control.OnPrint(PaintEventArgs)\n- uid: System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnQueryContinueDrag(QueryContinueDragEventArgs)\n  nameWithType: Control.OnQueryContinueDrag(QueryContinueDragEventArgs)\n  fullName: Control.OnQueryContinueDrag(QueryContinueDragEventArgs)\n- uid: System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnRegionChanged(EventArgs)\n  nameWithType: Control.OnRegionChanged(EventArgs)\n  fullName: Control.OnRegionChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnResize(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnResize(EventArgs)\n  nameWithType: Control.OnResize(EventArgs)\n  fullName: Control.OnResize(EventArgs)\n- uid: System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnRightToLeftChanged(EventArgs)\n  nameWithType: Control.OnRightToLeftChanged(EventArgs)\n  fullName: Control.OnRightToLeftChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnSizeChanged(EventArgs)\n  nameWithType: Control.OnSizeChanged(EventArgs)\n  fullName: Control.OnSizeChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnStyleChanged(EventArgs)\n  nameWithType: Control.OnStyleChanged(EventArgs)\n  fullName: Control.OnStyleChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnSystemColorsChanged(EventArgs)\n  nameWithType: Control.OnSystemColorsChanged(EventArgs)\n  fullName: Control.OnSystemColorsChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnTabIndexChanged(EventArgs)\n  nameWithType: Control.OnTabIndexChanged(EventArgs)\n  fullName: Control.OnTabIndexChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnTabStopChanged(EventArgs)\n  nameWithType: Control.OnTabStopChanged(EventArgs)\n  fullName: Control.OnTabStopChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnValidated(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnValidated(EventArgs)\n  nameWithType: Control.OnValidated(EventArgs)\n  fullName: Control.OnValidated(EventArgs)\n- uid: System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnValidating(CancelEventArgs)\n  nameWithType: Control.OnValidating(CancelEventArgs)\n  fullName: Control.OnValidating(CancelEventArgs)\n- uid: System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnVisibleChanged(EventArgs)\n  nameWithType: Control.OnVisibleChanged(EventArgs)\n  fullName: Control.OnVisibleChanged(EventArgs)\n- uid: System.Windows.Forms.Control.Parent\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Parent\n  nameWithType: Control.Parent\n  fullName: Control.Parent\n- uid: System.Windows.Forms.Control.ParentChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ParentChanged\n  nameWithType: Control.ParentChanged\n  fullName: Control.ParentChanged\n- uid: System.Windows.Forms.Control.PerformLayout\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: PerformLayout()\n  nameWithType: Control.PerformLayout()\n  fullName: Control.PerformLayout()\n- uid: System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: PerformLayout(Control, String)\n  nameWithType: Control.PerformLayout(Control, String)\n  fullName: Control.PerformLayout(Control, String)\n- uid: System.Windows.Forms.Control.PointToClient(System.Drawing.Point)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: PointToClient(Point)\n  nameWithType: Control.PointToClient(Point)\n  fullName: Control.PointToClient(Point)\n- uid: System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: PointToScreen(Point)\n  nameWithType: Control.PointToScreen(Point)\n  fullName: Control.PointToScreen(Point)\n- uid: System.Windows.Forms.Control.PreferredSize\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: PreferredSize\n  nameWithType: Control.PreferredSize\n  fullName: Control.PreferredSize\n- uid: System.Windows.Forms.Control.PreProcessControlMessage(System.Windows.Forms.Message@)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: PreProcessControlMessage(Message)\n  nameWithType: Control.PreProcessControlMessage(Message)\n  fullName: Control.PreProcessControlMessage(Message)\n- uid: System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: PreProcessMessage(Message)\n  nameWithType: Control.PreProcessMessage(Message)\n  fullName: Control.PreProcessMessage(Message)\n- uid: System.Windows.Forms.Control.PreviewKeyDown\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: PreviewKeyDown\n  nameWithType: Control.PreviewKeyDown\n  fullName: Control.PreviewKeyDown\n- uid: System.Windows.Forms.Control.ProcessDialogChar(System.Char)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ProcessDialogChar(Char)\n  nameWithType: Control.ProcessDialogChar(Char)\n  fullName: Control.ProcessDialogChar(Char)\n- uid: System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ProcessKeyEventArgs(Message)\n  nameWithType: Control.ProcessKeyEventArgs(Message)\n  fullName: Control.ProcessKeyEventArgs(Message)\n- uid: System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ProcessKeyMessage(Message)\n  nameWithType: Control.ProcessKeyMessage(Message)\n  fullName: Control.ProcessKeyMessage(Message)\n- uid: System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ProcessKeyPreview(Message)\n  nameWithType: Control.ProcessKeyPreview(Message)\n  fullName: Control.ProcessKeyPreview(Message)\n- uid: System.Windows.Forms.Control.ProcessMnemonic(System.Char)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ProcessMnemonic(Char)\n  nameWithType: Control.ProcessMnemonic(Char)\n  fullName: Control.ProcessMnemonic(Char)\n- uid: System.Windows.Forms.Control.ProductName\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ProductName\n  nameWithType: Control.ProductName\n  fullName: Control.ProductName\n- uid: System.Windows.Forms.Control.ProductVersion\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ProductVersion\n  nameWithType: Control.ProductVersion\n  fullName: Control.ProductVersion\n- uid: System.Windows.Forms.Control.PropagatingImeMode\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: PropagatingImeMode\n  nameWithType: Control.PropagatingImeMode\n  fullName: Control.PropagatingImeMode\n- uid: System.Windows.Forms.Control.QueryAccessibilityHelp\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: QueryAccessibilityHelp\n  nameWithType: Control.QueryAccessibilityHelp\n  fullName: Control.QueryAccessibilityHelp\n- uid: System.Windows.Forms.Control.QueryContinueDrag\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: QueryContinueDrag\n  nameWithType: Control.QueryContinueDrag\n  fullName: Control.QueryContinueDrag\n- uid: System.Windows.Forms.Control.RaiseDragEvent(System.Object,System.Windows.Forms.DragEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RaiseDragEvent(Object, DragEventArgs)\n  nameWithType: Control.RaiseDragEvent(Object, DragEventArgs)\n  fullName: Control.RaiseDragEvent(Object, DragEventArgs)\n- uid: System.Windows.Forms.Control.RaiseKeyEvent(System.Object,System.Windows.Forms.KeyEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RaiseKeyEvent(Object, KeyEventArgs)\n  nameWithType: Control.RaiseKeyEvent(Object, KeyEventArgs)\n  fullName: Control.RaiseKeyEvent(Object, KeyEventArgs)\n- uid: System.Windows.Forms.Control.RaiseMouseEvent(System.Object,System.Windows.Forms.MouseEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RaiseMouseEvent(Object, MouseEventArgs)\n  nameWithType: Control.RaiseMouseEvent(Object, MouseEventArgs)\n  fullName: Control.RaiseMouseEvent(Object, MouseEventArgs)\n- uid: System.Windows.Forms.Control.RaisePaintEvent(System.Object,System.Windows.Forms.PaintEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RaisePaintEvent(Object, PaintEventArgs)\n  nameWithType: Control.RaisePaintEvent(Object, PaintEventArgs)\n  fullName: Control.RaisePaintEvent(Object, PaintEventArgs)\n- uid: System.Windows.Forms.Control.RecreateHandle\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RecreateHandle()\n  nameWithType: Control.RecreateHandle()\n  fullName: Control.RecreateHandle()\n- uid: System.Windows.Forms.Control.RecreatingHandle\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RecreatingHandle\n  nameWithType: Control.RecreatingHandle\n  fullName: Control.RecreatingHandle\n- uid: System.Windows.Forms.Control.RectangleToClient(System.Drawing.Rectangle)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RectangleToClient(Rectangle)\n  nameWithType: Control.RectangleToClient(Rectangle)\n  fullName: Control.RectangleToClient(Rectangle)\n- uid: System.Windows.Forms.Control.RectangleToScreen(System.Drawing.Rectangle)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RectangleToScreen(Rectangle)\n  nameWithType: Control.RectangleToScreen(Rectangle)\n  fullName: Control.RectangleToScreen(Rectangle)\n- uid: System.Windows.Forms.Control.ReflectMessage(System.IntPtr,System.Windows.Forms.Message@)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ReflectMessage(IntPtr, Message)\n  nameWithType: Control.ReflectMessage(IntPtr, Message)\n  fullName: Control.ReflectMessage(IntPtr, Message)\n- uid: System.Windows.Forms.Control.Refresh\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Refresh()\n  nameWithType: Control.Refresh()\n  fullName: Control.Refresh()\n- uid: System.Windows.Forms.Control.Region\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Region\n  nameWithType: Control.Region\n  fullName: Control.Region\n- uid: System.Windows.Forms.Control.RegionChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RegionChanged\n  nameWithType: Control.RegionChanged\n  fullName: Control.RegionChanged\n- uid: System.Windows.Forms.Control.RenderRightToLeft\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RenderRightToLeft\n  nameWithType: Control.RenderRightToLeft\n  fullName: Control.RenderRightToLeft\n- uid: System.Windows.Forms.Control.RescaleConstantsForDpi(System.Int32,System.Int32)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RescaleConstantsForDpi(Int32, Int32)\n  nameWithType: Control.RescaleConstantsForDpi(Int32, Int32)\n  fullName: Control.RescaleConstantsForDpi(Int32, Int32)\n- uid: System.Windows.Forms.Control.ResetBackColor\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ResetBackColor()\n  nameWithType: Control.ResetBackColor()\n  fullName: Control.ResetBackColor()\n- uid: System.Windows.Forms.Control.ResetBindings\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ResetBindings()\n  nameWithType: Control.ResetBindings()\n  fullName: Control.ResetBindings()\n- uid: System.Windows.Forms.Control.ResetCursor\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ResetCursor()\n  nameWithType: Control.ResetCursor()\n  fullName: Control.ResetCursor()\n- uid: System.Windows.Forms.Control.ResetFont\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ResetFont()\n  nameWithType: Control.ResetFont()\n  fullName: Control.ResetFont()\n- uid: System.Windows.Forms.Control.ResetForeColor\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ResetForeColor()\n  nameWithType: Control.ResetForeColor()\n  fullName: Control.ResetForeColor()\n- uid: System.Windows.Forms.Control.ResetImeMode\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ResetImeMode()\n  nameWithType: Control.ResetImeMode()\n  fullName: Control.ResetImeMode()\n- uid: System.Windows.Forms.Control.ResetMouseEventArgs\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ResetMouseEventArgs()\n  nameWithType: Control.ResetMouseEventArgs()\n  fullName: Control.ResetMouseEventArgs()\n- uid: System.Windows.Forms.Control.ResetRightToLeft\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ResetRightToLeft()\n  nameWithType: Control.ResetRightToLeft()\n  fullName: Control.ResetRightToLeft()\n- uid: System.Windows.Forms.Control.ResetText\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ResetText()\n  nameWithType: Control.ResetText()\n  fullName: Control.ResetText()\n- uid: System.Windows.Forms.Control.Resize\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Resize\n  nameWithType: Control.Resize\n  fullName: Control.Resize\n- uid: System.Windows.Forms.Control.ResizeRedraw\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ResizeRedraw\n  nameWithType: Control.ResizeRedraw\n  fullName: Control.ResizeRedraw\n- uid: System.Windows.Forms.Control.ResumeLayout\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ResumeLayout()\n  nameWithType: Control.ResumeLayout()\n  fullName: Control.ResumeLayout()\n- uid: System.Windows.Forms.Control.ResumeLayout(System.Boolean)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ResumeLayout(Boolean)\n  nameWithType: Control.ResumeLayout(Boolean)\n  fullName: Control.ResumeLayout(Boolean)\n- uid: System.Windows.Forms.Control.Right\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Right\n  nameWithType: Control.Right\n  fullName: Control.Right\n- uid: System.Windows.Forms.Control.RightToLeft\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RightToLeft\n  nameWithType: Control.RightToLeft\n  fullName: Control.RightToLeft\n- uid: System.Windows.Forms.Control.RightToLeftChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RightToLeftChanged\n  nameWithType: Control.RightToLeftChanged\n  fullName: Control.RightToLeftChanged\n- uid: System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.LeftRightAlignment)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RtlTranslateAlignment(LeftRightAlignment)\n  nameWithType: Control.RtlTranslateAlignment(LeftRightAlignment)\n  fullName: Control.RtlTranslateAlignment(LeftRightAlignment)\n- uid: System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RtlTranslateAlignment(HorizontalAlignment)\n  nameWithType: Control.RtlTranslateAlignment(HorizontalAlignment)\n  fullName: Control.RtlTranslateAlignment(HorizontalAlignment)\n- uid: System.Windows.Forms.Control.RtlTranslateAlignment(System.Drawing.ContentAlignment)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RtlTranslateAlignment(ContentAlignment)\n  nameWithType: Control.RtlTranslateAlignment(ContentAlignment)\n  fullName: Control.RtlTranslateAlignment(ContentAlignment)\n- uid: System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RtlTranslateContent(ContentAlignment)\n  nameWithType: Control.RtlTranslateContent(ContentAlignment)\n  fullName: Control.RtlTranslateContent(ContentAlignment)\n- uid: System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RtlTranslateHorizontal(HorizontalAlignment)\n  nameWithType: Control.RtlTranslateHorizontal(HorizontalAlignment)\n  fullName: Control.RtlTranslateHorizontal(HorizontalAlignment)\n- uid: System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RtlTranslateLeftRight(LeftRightAlignment)\n  nameWithType: Control.RtlTranslateLeftRight(LeftRightAlignment)\n  fullName: Control.RtlTranslateLeftRight(LeftRightAlignment)\n- uid: System.Windows.Forms.Control.Scale(System.Drawing.SizeF)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Scale(SizeF)\n  nameWithType: Control.Scale(SizeF)\n  fullName: Control.Scale(SizeF)\n- uid: System.Windows.Forms.Control.Scale(System.Single)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Scale(Single)\n  nameWithType: Control.Scale(Single)\n  fullName: Control.Scale(Single)\n- uid: System.Windows.Forms.Control.Scale(System.Single,System.Single)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Scale(Single, Single)\n  nameWithType: Control.Scale(Single, Single)\n  fullName: Control.Scale(Single, Single)\n- uid: System.Windows.Forms.Control.ScaleBitmapLogicalToDevice(System.Drawing.Bitmap@)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ScaleBitmapLogicalToDevice(Bitmap)\n  nameWithType: Control.ScaleBitmapLogicalToDevice(Bitmap)\n  fullName: Control.ScaleBitmapLogicalToDevice(Bitmap)\n- uid: System.Windows.Forms.Control.ScaleChildren\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ScaleChildren\n  nameWithType: Control.ScaleChildren\n  fullName: Control.ScaleChildren\n- uid: System.Windows.Forms.Control.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ScaleControl(SizeF, BoundsSpecified)\n  nameWithType: Control.ScaleControl(SizeF, BoundsSpecified)\n  fullName: Control.ScaleControl(SizeF, BoundsSpecified)\n- uid: System.Windows.Forms.Control.ScaleCore(System.Single,System.Single)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ScaleCore(Single, Single)\n  nameWithType: Control.ScaleCore(Single, Single)\n  fullName: Control.ScaleCore(Single, Single)\n- uid: System.Windows.Forms.Control.Select(System.Boolean,System.Boolean)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Select(Boolean, Boolean)\n  nameWithType: Control.Select(Boolean, Boolean)\n  fullName: Control.Select(Boolean, Boolean)\n- uid: System.Windows.Forms.Control.Select\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Select()\n  nameWithType: Control.Select()\n  fullName: Control.Select()\n- uid: System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: SelectNextControl(Control, Boolean, Boolean, Boolean, Boolean)\n  nameWithType: Control.SelectNextControl(Control, Boolean, Boolean, Boolean, Boolean)\n  fullName: Control.SelectNextControl(Control, Boolean, Boolean, Boolean, Boolean)\n- uid: System.Windows.Forms.Control.SendToBack\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: SendToBack()\n  nameWithType: Control.SendToBack()\n  fullName: Control.SendToBack()\n- uid: System.Windows.Forms.Control.SetAutoSizeMode(System.Windows.Forms.AutoSizeMode)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: SetAutoSizeMode(AutoSizeMode)\n  nameWithType: Control.SetAutoSizeMode(AutoSizeMode)\n  fullName: Control.SetAutoSizeMode(AutoSizeMode)\n- uid: System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: SetBounds(Int32, Int32, Int32, Int32)\n  nameWithType: Control.SetBounds(Int32, Int32, Int32, Int32)\n  fullName: Control.SetBounds(Int32, Int32, Int32, Int32)\n- uid: System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: SetBounds(Int32, Int32, Int32, Int32, BoundsSpecified)\n  nameWithType: Control.SetBounds(Int32, Int32, Int32, Int32, BoundsSpecified)\n  fullName: Control.SetBounds(Int32, Int32, Int32, Int32, BoundsSpecified)\n- uid: System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: SetClientSizeCore(Int32, Int32)\n  nameWithType: Control.SetClientSizeCore(Int32, Int32)\n  fullName: Control.SetClientSizeCore(Int32, Int32)\n- uid: System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: SetStyle(ControlStyles, Boolean)\n  nameWithType: Control.SetStyle(ControlStyles, Boolean)\n  fullName: Control.SetStyle(ControlStyles, Boolean)\n- uid: System.Windows.Forms.Control.SetTopLevel(System.Boolean)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: SetTopLevel(Boolean)\n  nameWithType: Control.SetTopLevel(Boolean)\n  fullName: Control.SetTopLevel(Boolean)\n- uid: System.Windows.Forms.Control.SetVisibleCore(System.Boolean)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: SetVisibleCore(Boolean)\n  nameWithType: Control.SetVisibleCore(Boolean)\n  fullName: Control.SetVisibleCore(Boolean)\n- uid: System.Windows.Forms.Control.Show\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Show()\n  nameWithType: Control.Show()\n  fullName: Control.Show()\n- uid: System.Windows.Forms.Control.ShowFocusCues\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ShowFocusCues\n  nameWithType: Control.ShowFocusCues\n  fullName: Control.ShowFocusCues\n- uid: System.Windows.Forms.Control.ShowKeyboardCues\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ShowKeyboardCues\n  nameWithType: Control.ShowKeyboardCues\n  fullName: Control.ShowKeyboardCues\n- uid: System.Windows.Forms.Control.Size\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Size\n  nameWithType: Control.Size\n  fullName: Control.Size\n- uid: System.Windows.Forms.Control.SizeChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: SizeChanged\n  nameWithType: Control.SizeChanged\n  fullName: Control.SizeChanged\n- uid: System.Windows.Forms.Control.SizeFromClientSize(System.Drawing.Size)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: SizeFromClientSize(Size)\n  nameWithType: Control.SizeFromClientSize(Size)\n  fullName: Control.SizeFromClientSize(Size)\n- uid: System.Windows.Forms.Control.StyleChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: StyleChanged\n  nameWithType: Control.StyleChanged\n  fullName: Control.StyleChanged\n- uid: System.Windows.Forms.Control.SuspendLayout\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: SuspendLayout()\n  nameWithType: Control.SuspendLayout()\n  fullName: Control.SuspendLayout()\n- uid: System.Windows.Forms.Control.SystemColorsChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: SystemColorsChanged\n  nameWithType: Control.SystemColorsChanged\n  fullName: Control.SystemColorsChanged\n- uid: System.Windows.Forms.Control.TabIndex\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: TabIndex\n  nameWithType: Control.TabIndex\n  fullName: Control.TabIndex\n- uid: System.Windows.Forms.Control.TabIndexChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: TabIndexChanged\n  nameWithType: Control.TabIndexChanged\n  fullName: Control.TabIndexChanged\n- uid: System.Windows.Forms.Control.TabStop\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: TabStop\n  nameWithType: Control.TabStop\n  fullName: Control.TabStop\n- uid: System.Windows.Forms.Control.TabStopChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: TabStopChanged\n  nameWithType: Control.TabStopChanged\n  fullName: Control.TabStopChanged\n- uid: System.Windows.Forms.Control.Tag\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Tag\n  nameWithType: Control.Tag\n  fullName: Control.Tag\n- uid: System.Windows.Forms.Control.TextChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: TextChanged\n  nameWithType: Control.TextChanged\n  fullName: Control.TextChanged\n- uid: System.Windows.Forms.Control.Top\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Top\n  nameWithType: Control.Top\n  fullName: Control.Top\n- uid: System.Windows.Forms.Control.TopLevelControl\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: TopLevelControl\n  nameWithType: Control.TopLevelControl\n  fullName: Control.TopLevelControl\n- uid: System.Windows.Forms.Control.Update\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Update()\n  nameWithType: Control.Update()\n  fullName: Control.Update()\n- uid: System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: UpdateBounds(Int32, Int32, Int32, Int32, Int32, Int32)\n  nameWithType: Control.UpdateBounds(Int32, Int32, Int32, Int32, Int32, Int32)\n  fullName: Control.UpdateBounds(Int32, Int32, Int32, Int32, Int32, Int32)\n- uid: System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: UpdateBounds(Int32, Int32, Int32, Int32)\n  nameWithType: Control.UpdateBounds(Int32, Int32, Int32, Int32)\n  fullName: Control.UpdateBounds(Int32, Int32, Int32, Int32)\n- uid: System.Windows.Forms.Control.UpdateBounds\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: UpdateBounds()\n  nameWithType: Control.UpdateBounds()\n  fullName: Control.UpdateBounds()\n- uid: System.Windows.Forms.Control.UpdateStyles\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: UpdateStyles()\n  nameWithType: Control.UpdateStyles()\n  fullName: Control.UpdateStyles()\n- uid: System.Windows.Forms.Control.UpdateZOrder\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: UpdateZOrder()\n  nameWithType: Control.UpdateZOrder()\n  fullName: Control.UpdateZOrder()\n- uid: System.Windows.Forms.Control.UseWaitCursor\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: UseWaitCursor\n  nameWithType: Control.UseWaitCursor\n  fullName: Control.UseWaitCursor\n- uid: System.Windows.Forms.Control.Validated\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Validated\n  nameWithType: Control.Validated\n  fullName: Control.Validated\n- uid: System.Windows.Forms.Control.Validating\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Validating\n  nameWithType: Control.Validating\n  fullName: Control.Validating\n- uid: System.Windows.Forms.Control.Visible\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Visible\n  nameWithType: Control.Visible\n  fullName: Control.Visible\n- uid: System.Windows.Forms.Control.VisibleChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: VisibleChanged\n  nameWithType: Control.VisibleChanged\n  fullName: Control.VisibleChanged\n- uid: System.Windows.Forms.Control.Width\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Width\n  nameWithType: Control.Width\n  fullName: Control.Width\n- uid: System.Windows.Forms.Control.WindowTarget\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: WindowTarget\n  nameWithType: Control.WindowTarget\n  fullName: Control.WindowTarget\n- uid: System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragDrop(System.Windows.Forms.DragEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: IDropTarget.OnDragDrop(DragEventArgs)\n  nameWithType: Control.IDropTarget.OnDragDrop(DragEventArgs)\n  fullName: Control.IDropTarget.OnDragDrop(DragEventArgs)\n- uid: System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragEnter(System.Windows.Forms.DragEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: IDropTarget.OnDragEnter(DragEventArgs)\n  nameWithType: Control.IDropTarget.OnDragEnter(DragEventArgs)\n  fullName: Control.IDropTarget.OnDragEnter(DragEventArgs)\n- uid: System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragLeave(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: IDropTarget.OnDragLeave(EventArgs)\n  nameWithType: Control.IDropTarget.OnDragLeave(EventArgs)\n  fullName: Control.IDropTarget.OnDragLeave(EventArgs)\n- uid: System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragOver(System.Windows.Forms.DragEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: IDropTarget.OnDragOver(DragEventArgs)\n  nameWithType: Control.IDropTarget.OnDragOver(DragEventArgs)\n  fullName: Control.IDropTarget.OnDragOver(DragEventArgs)\n"}