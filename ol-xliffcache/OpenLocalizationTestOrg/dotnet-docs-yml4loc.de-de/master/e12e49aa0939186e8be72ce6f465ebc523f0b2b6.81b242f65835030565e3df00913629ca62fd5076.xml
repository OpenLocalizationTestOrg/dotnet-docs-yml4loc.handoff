{"nodes":[{"content":"Describes objects that contain both a managed pointer to a location and a runtime representation of the type that may be stored at that location.","nodes":[{"pos":[0,145],"content":"Describes objects that contain both a managed pointer to a location and a runtime representation of the type that may be stored at that location.","nodes":[{"content":"Describes objects that contain both a managed pointer to a location and a runtime representation of the type that may be stored at that location.","pos":[0,145]}]}],"pos":[794,940],"yaml":true},{"content":"A typed reference is a type/value combination used for varargs and other support. `TypedReference` is a built-in value type that can be used for parameters and local variables.  \n  \n Arrays of `TypedReference` objects cannot be created. For example, the following call is invalid:  \n  \n [!code-cpp[System.TypedReference#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.typedreference/cpp/source.cpp#1)]\n [!code-csharp[System.TypedReference#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.typedreference/cs/source.cs#1)]\n [!code-vb[System.TypedReference#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.typedreference/vb/source.vb#1)]","nodes":[{"pos":[0,176],"content":"A typed reference is a type/value combination used for varargs and other support. `TypedReference` is a built-in value type that can be used for parameters and local variables.","nodes":[{"content":"A typed reference is a type/value combination used for varargs and other support.","pos":[0,81]},{"content":"<ph id=\"ph1\">`TypedReference`</ph> is a built-in value type that can be used for parameters and local variables.","pos":[82,176],"source":"`TypedReference` is a built-in value type that can be used for parameters and local variables."}]},{"pos":[183,280],"content":"Arrays of `TypedReference` objects cannot be created. For example, the following call is invalid:","nodes":[{"content":"Arrays of <ph id=\"ph1\">`TypedReference`</ph> objects cannot be created.","pos":[0,53],"source":"Arrays of `TypedReference` objects cannot be created."},{"content":"For example, the following call is invalid:","pos":[54,97]}]},{"pos":[287,666],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>System.TypedReference#1<ept id=\"p2\">](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.typedreference/cpp/source.cpp#1)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-csharp</bpt><bpt id=\"p4\">[</bpt>System.TypedReference#1<ept id=\"p4\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.typedreference/cs/source.cs#1)</ept><ept id=\"p3\">]</ept> <bpt id=\"p5\">[!code-vb</bpt><bpt id=\"p6\">[</bpt>System.TypedReference#1<ept id=\"p6\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.typedreference/vb/source.vb#1)</ept><ept id=\"p5\">]</ept>","source":"[!code-cpp[System.TypedReference#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.typedreference/cpp/source.cpp#1)]\n [!code-csharp[System.TypedReference#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.typedreference/cs/source.cs#1)]\n [!code-vb[System.TypedReference#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.typedreference/vb/source.vb#1)]"}],"pos":[951,1626],"yaml":true,"extradata":"MT"},{"content":"Checks if this object is equal to the specified object.","nodes":[{"pos":[0,55],"content":"Checks if this object is equal to the specified object.","nodes":[{"content":"Checks if this object is equal to the specified object.","pos":[0,55]}]}],"pos":[3092,3148],"yaml":true},{"content":"The object with which to compare the current object.","nodes":[{"pos":[0,52],"content":"The object with which to compare the current object.","nodes":[{"content":"The object with which to compare the current object.","pos":[0,52]}]}],"pos":[3284,3337],"yaml":true},{"content":"`true` if this object is equal to the specified object; otherwise, `false`.","nodes":[{"pos":[0,75],"content":"<ph id=\"ph1\">`true`</ph> if this object is equal to the specified object; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if this object is equal to the specified object; otherwise, `false`."}],"pos":[3395,3473],"yaml":true},{"content":"This method is not implemented.","nodes":[{"pos":[0,31],"content":"This method is not implemented.","nodes":[{"content":"This method is not implemented.","pos":[0,31]}]}],"pos":[3631,3663],"yaml":true},{"content":"Returns the hash code of this object.","nodes":[{"pos":[0,37],"content":"Returns the hash code of this object.","nodes":[{"content":"Returns the hash code of this object.","pos":[0,37]}]}],"pos":[4757,4795],"yaml":true},{"content":"The hash code of this object.","nodes":[{"pos":[0,29],"content":"The hash code of this object.","nodes":[{"content":"The hash code of this object.","pos":[0,29]}]}],"pos":[4929,4959],"yaml":true},{"content":"Returns the type of the target of the specified `TypedReference`.","nodes":[{"pos":[0,65],"content":"Returns the type of the target of the specified <ph id=\"ph1\">`TypedReference`</ph>.","source":"Returns the type of the target of the specified `TypedReference`."}],"pos":[6240,6306],"yaml":true},{"content":"The value whose target's type is to be returned.","nodes":[{"pos":[0,48],"content":"The value whose target's type is to be returned.","nodes":[{"content":"The value whose target's type is to be returned.","pos":[0,48]}]}],"pos":[6471,6520],"yaml":true},{"content":"The type of the target of the specified `TypedReference`.","nodes":[{"pos":[0,57],"content":"The type of the target of the specified <ph id=\"ph1\">`TypedReference`</ph>.","source":"The type of the target of the specified `TypedReference`."}],"pos":[6575,6633],"yaml":true},{"content":"Makes a `TypedReference` for a field identified by a specified object and list of field descriptions.","nodes":[{"pos":[0,101],"content":"Makes a <ph id=\"ph1\">`TypedReference`</ph> for a field identified by a specified object and list of field descriptions.","source":"Makes a `TypedReference` for a field identified by a specified object and list of field descriptions."}],"pos":[8027,8129],"yaml":true},{"content":"The <xref:System.TypedReference.MakeTypedReference%2A> method returns a typed reference to some terminal field, where the `target` parameter contains the field described by the first element of `flds`, the field described by the first element of `flds` contains the field described by the second element of `flds`, and so on until the terminal field is reached.  \n  \n> [!NOTE]\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access non-public members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag and if the grant set of the non-public members is restricted to the caller’s grant set, or a subset thereof. (See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)  \n>   \n>  To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","nodes":[{"pos":[0,361],"content":"The <ph id=\"ph1\">&lt;xref:System.TypedReference.MakeTypedReference%2A&gt;</ph> method returns a typed reference to some terminal field, where the <ph id=\"ph2\">`target`</ph> parameter contains the field described by the first element of <ph id=\"ph3\">`flds`</ph>, the field described by the first element of <ph id=\"ph4\">`flds`</ph> contains the field described by the second element of <ph id=\"ph5\">`flds`</ph>, and so on until the terminal field is reached.","source":"The <xref:System.TypedReference.MakeTypedReference%2A> method returns a typed reference to some terminal field, where the `target` parameter contains the field described by the first element of `flds`, the field described by the first element of `flds` contains the field described by the second element of `flds`, and so on until the terminal field is reached."},{"pos":[369,939],"content":"[!NOTE]\n Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access non-public members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag and if the grant set of the non-public members is restricted to the caller’s grant set, or a subset thereof. (See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)","leadings":["","> "],"nodes":[{"content":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access non-public members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag and if the grant set of the non-public members is restricted to the caller’s grant set, or a subset thereof. (See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)","pos":[8,568],"nodes":[{"content":"Starting with the <ph id=\"ph1\">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>, this method can be used to access non-public members if the caller has been granted <ph id=\"ph2\">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> with the <ph id=\"ph3\">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName&gt;</ph> flag and if the grant set of the non-public members is restricted to the caller’s grant set, or a subset thereof.","pos":[1,429],"source":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access non-public members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag and if the grant set of the non-public members is restricted to the caller’s grant set, or a subset thereof."},{"content":"(See <bpt id=\"p1\">[</bpt>Security Considerations for Reflection<ept id=\"p1\">](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)</ept>.)","pos":[430,560],"source":" (See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)"}]}]},{"pos":[950,1077],"content":"To use this functionality, your application should target the <ph id=\"ph1\">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> or later.","source":"To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later."}],"pos":[8140,9225],"yaml":true,"extradata":"MT"},{"content":"An object that contains the field described by the first element of <code>flds</code>.","nodes":[{"pos":[0,86],"content":"An object that contains the field described by the first element of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">flds</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An object that contains the field described by the first element of <code>flds</code>."}],"pos":[9514,9601],"yaml":true},{"content":"A list of field descriptions where each element describes a field that contains the field described by the succeeding element. Each described field must be a value type. The field descriptions must be `RuntimeFieldInfo` objects supplied by the type system.","nodes":[{"pos":[0,256],"content":"A list of field descriptions where each element describes a field that contains the field described by the succeeding element. Each described field must be a value type. The field descriptions must be `RuntimeFieldInfo` objects supplied by the type system.","nodes":[{"content":"A list of field descriptions where each element describes a field that contains the field described by the succeeding element.","pos":[0,126]},{"content":"Each described field must be a value type.","pos":[127,169]},{"content":"The field descriptions must be <ph id=\"ph1\">`RuntimeFieldInfo`</ph> objects supplied by the type system.","pos":[170,256],"source":" The field descriptions must be `RuntimeFieldInfo` objects supplied by the type system."}]}],"pos":[9677,9934],"yaml":true},{"content":"A <xref href=\"System.TypedReference\"></xref> for the field described by the last element of <code>flds</code>.","nodes":[{"pos":[0,110],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.TypedReference\"&gt;&lt;/xref&gt;</ph> for the field described by the last element of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">flds</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A <xref href=\"System.TypedReference\"></xref> for the field described by the last element of <code>flds</code>."}],"pos":[9999,10110],"yaml":true},{"content":"<code>target</code> or <code>flds</code> is `null`.  \n  \n -or-  \n  \n An element of <code>flds</code> is `null`.","nodes":[{"pos":[0,51],"content":"<ph id=\"ph1\">&lt;code&gt;target&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;flds&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>target</code> or <code>flds</code> is `null`."},{"pos":[58,62],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[69,111],"content":"An element of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">flds</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph2\">`null`</ph>.","source":"An element of <code>flds</code> is `null`."}],"pos":[10280,10398],"yaml":true},{"content":"The <code>flds</code> array has no elements.  \n  \n -or-  \n  \n An element of <code>flds</code> is not a `RuntimeFieldInfo` object.  \n  \n -or-  \n  \n The <xref href=\"System.Reflection.FieldInfo.IsInitOnly\"></xref> or <xref href=\"System.Reflection.FieldInfo.IsStatic\"></xref> property of an element of <code>flds</code> is `true`.","nodes":[{"pos":[0,44],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">flds</ph><ept id=\"p1\">&lt;/code&gt;</ept> array has no elements.","source":"The <code>flds</code> array has no elements."},{"pos":[51,55],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[62,129],"content":"An element of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">flds</ph><ept id=\"p1\">&lt;/code&gt;</ept> is not a <ph id=\"ph2\">`RuntimeFieldInfo`</ph> object.","source":"An element of <code>flds</code> is not a `RuntimeFieldInfo` object."},{"pos":[136,140],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[147,326],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Reflection.FieldInfo.IsInitOnly\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Reflection.FieldInfo.IsStatic\"&gt;&lt;/xref&gt;</ph> property of an element of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph3\">flds</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph4\">`true`</ph>.","source":"The <xref href=\"System.Reflection.FieldInfo.IsInitOnly\"></xref> or <xref href=\"System.Reflection.FieldInfo.IsStatic\"></xref> property of an element of <code>flds</code> is `true`."}],"pos":[10492,10833],"yaml":true},{"content":"Parameter <code>target</code> does not contain the field described by the first element of <code>flds</code>, or an element of <code>flds</code> describes a field that is not contained in the field described by the succeeding element of <code>flds</code>.  \n  \n -or-  \n  \n The field described by an element of <code>flds</code> is not a value type.","nodes":[{"pos":[0,255],"content":"Parameter <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">target</ph><ept id=\"p1\">&lt;/code&gt;</ept> does not contain the field described by the first element of <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">flds</ph><ept id=\"p2\">&lt;/code&gt;</ept>, or an element of <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">flds</ph><ept id=\"p3\">&lt;/code&gt;</ept> describes a field that is not contained in the field described by the succeeding element of <bpt id=\"p4\">&lt;code&gt;</bpt><ph id=\"ph4\">flds</ph><ept id=\"p4\">&lt;/code&gt;</ept>.","source":"Parameter <code>target</code> does not contain the field described by the first element of <code>flds</code>, or an element of <code>flds</code> describes a field that is not contained in the field described by the succeeding element of <code>flds</code>."},{"pos":[262,266],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[273,348],"content":"The field described by an element of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">flds</ph><ept id=\"p1\">&lt;/code&gt;</ept> is not a value type.","source":"The field described by an element of <code>flds</code> is not a value type."}],"pos":[10937,11292],"yaml":true},{"content":"Converts the specified value to a `TypedReference`. This method is not supported.","nodes":[{"pos":[0,81],"content":"Converts the specified value to a `TypedReference`. This method is not supported.","nodes":[{"content":"Converts the specified value to a <ph id=\"ph1\">`TypedReference`</ph>.","pos":[0,51],"source":"Converts the specified value to a `TypedReference`."},{"content":"This method is not supported.","pos":[52,81]}]}],"pos":[12704,12786],"yaml":true},{"content":"This method always throws <xref:System.NotSupportedException>.","nodes":[{"pos":[0,62],"content":"This method always throws <xref:System.NotSupportedException>.","nodes":[{"content":"This method always throws <ph id=\"ph1\">&lt;xref:System.NotSupportedException&gt;</ph>.","pos":[0,62],"source":"This method always throws <xref:System.NotSupportedException>."}]}],"pos":[12797,12860],"yaml":true,"extradata":"MT"},{"content":"The target of the conversion.","nodes":[{"pos":[0,29],"content":"The target of the conversion.","nodes":[{"content":"The target of the conversion.","pos":[0,29]}]}],"pos":[13090,13120],"yaml":true},{"content":"The value to be converted.","nodes":[{"pos":[0,26],"content":"The value to be converted.","nodes":[{"content":"The value to be converted.","pos":[0,26]}]}],"pos":[13181,13208],"yaml":true},{"content":"In all cases.","nodes":[{"pos":[0,13],"content":"In all cases.","nodes":[{"content":"In all cases.","pos":[0,13]}]}],"pos":[13377,13391],"yaml":true},{"content":"Returns the internal metadata type handle for the specified `TypedReference`.","nodes":[{"pos":[0,77],"content":"Returns the internal metadata type handle for the specified <ph id=\"ph1\">`TypedReference`</ph>.","source":"Returns the internal metadata type handle for the specified `TypedReference`."}],"pos":[14673,14751],"yaml":true},{"content":"The `TypedReference` for which the type handle is requested.","nodes":[{"pos":[0,60],"content":"The <ph id=\"ph1\">`TypedReference`</ph> for which the type handle is requested.","source":"The `TypedReference` for which the type handle is requested."}],"pos":[14931,14992],"yaml":true},{"content":"The internal metadata type handle for the specified `TypedReference`.","nodes":[{"pos":[0,69],"content":"The internal metadata type handle for the specified <ph id=\"ph1\">`TypedReference`</ph>.","source":"The internal metadata type handle for the specified `TypedReference`."}],"pos":[15060,15130],"yaml":true},{"content":"Converts the specified `TypedReference` to an `Object`.","nodes":[{"pos":[0,55],"content":"Converts the specified <ph id=\"ph1\">`TypedReference`</ph> to an <ph id=\"ph2\">`Object`</ph>.","source":"Converts the specified `TypedReference` to an `Object`."}],"pos":[16385,16441],"yaml":true},{"content":"This might be a boxing operation.","nodes":[{"pos":[0,33],"content":"This might be a boxing operation.","nodes":[{"content":"This might be a boxing operation.","pos":[0,33]}]}],"pos":[16452,16486],"yaml":true,"extradata":"MT"},{"content":"The `TypedReference` to be converted.","nodes":[{"pos":[0,37],"content":"The <ph id=\"ph1\">`TypedReference`</ph> to be converted.","source":"The `TypedReference` to be converted."}],"pos":[16648,16686],"yaml":true},{"content":"An <xref href=\"System.Object\"></xref> converted from a `TypedReference`.","nodes":[{"pos":[0,72],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> converted from a <ph id=\"ph2\">`TypedReference`</ph>.","source":"An <xref href=\"System.Object\"></xref> converted from a `TypedReference`."}],"pos":[16743,16816],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.TypedReference\n  commentId: T:System.TypedReference\n  id: TypedReference\n  children:\n  - System.TypedReference.Equals(System.Object)\n  - System.TypedReference.GetHashCode\n  - System.TypedReference.GetTargetType(System.TypedReference)\n  - System.TypedReference.MakeTypedReference(System.Object,System.Reflection.FieldInfo[])\n  - System.TypedReference.SetTypedReference(System.TypedReference,System.Object)\n  - System.TypedReference.TargetTypeToken(System.TypedReference)\n  - System.TypedReference.ToObject(System.TypedReference)\n  langs:\n  - csharp\n  name: TypedReference\n  nameWithType: TypedReference\n  fullName: System.TypedReference\n  type: Struct\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Describes objects that contain both a managed pointer to a location and a runtime representation of the type that may be stored at that location.\n  remarks: \"A typed reference is a type/value combination used for varargs and other support. `TypedReference` is a built-in value type that can be used for parameters and local variables.  \\n  \\n Arrays of `TypedReference` objects cannot be created. For example, the following call is invalid:  \\n  \\n [!code-cpp[System.TypedReference#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.typedreference/cpp/source.cpp#1)]\\n [!code-csharp[System.TypedReference#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.typedreference/cs/source.cs#1)]\\n [!code-vb[System.TypedReference#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.typedreference/vb/source.vb#1)]\"\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public struct TypedReference\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements: []\n  attributes:\n  - type: System.CLSCompliantAttribute\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TypedReference.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.TypedReference.Equals(System.Object)\n  commentId: M:System.TypedReference.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.TypedReference\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: TypedReference.Equals(Object)\n  fullName: TypedReference.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Checks if this object is equal to the specified object.\n  syntax:\n    content: public override bool Equals (object o);\n    parameters:\n    - id: o\n      type: System.Object\n      description: The object with which to compare the current object.\n    return:\n      type: System.Boolean\n      description: '`true` if this object is equal to the specified object; otherwise, `false`.'\n  overload: System.TypedReference.Equals*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: This method is not implemented.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TypedReference.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.TypedReference.GetHashCode\n  commentId: M:System.TypedReference.GetHashCode\n  id: GetHashCode\n  parent: System.TypedReference\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: TypedReference.GetHashCode()\n  fullName: TypedReference.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Returns the hash code of this object.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The hash code of this object.\n  overload: System.TypedReference.GetHashCode*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TypedReference.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.TypedReference.GetTargetType(System.TypedReference)\n  commentId: M:System.TypedReference.GetTargetType(System.TypedReference)\n  id: GetTargetType(System.TypedReference)\n  parent: System.TypedReference\n  langs:\n  - csharp\n  name: GetTargetType(TypedReference)\n  nameWithType: TypedReference.GetTargetType(TypedReference)\n  fullName: TypedReference.GetTargetType(TypedReference)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Returns the type of the target of the specified `TypedReference`.\n  syntax:\n    content: public static Type GetTargetType (TypedReference value);\n    parameters:\n    - id: value\n      type: System.TypedReference\n      description: The value whose target's type is to be returned.\n    return:\n      type: System.Type\n      description: The type of the target of the specified `TypedReference`.\n  overload: System.TypedReference.GetTargetType*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TypedReference.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.TypedReference.MakeTypedReference(System.Object,System.Reflection.FieldInfo[])\n  commentId: M:System.TypedReference.MakeTypedReference(System.Object,System.Reflection.FieldInfo[])\n  id: MakeTypedReference(System.Object,System.Reflection.FieldInfo[])\n  parent: System.TypedReference\n  langs:\n  - csharp\n  name: MakeTypedReference(Object, FieldInfo[])\n  nameWithType: TypedReference.MakeTypedReference(Object, FieldInfo[])\n  fullName: TypedReference.MakeTypedReference(Object, FieldInfo[])\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Makes a `TypedReference` for a field identified by a specified object and list of field descriptions.\n  remarks: \"The <xref:System.TypedReference.MakeTypedReference%2A> method returns a typed reference to some terminal field, where the `target` parameter contains the field described by the first element of `flds`, the field described by the first element of `flds` contains the field described by the second element of `flds`, and so on until the terminal field is reached.  \\n  \\n> [!NOTE]\\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access non-public members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag and if the grant set of the non-public members is restricted to the caller’s grant set, or a subset thereof. (See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)  \\n>   \\n>  To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.\"\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      [System.Security.SecurityCritical]\n\n      public static TypedReference MakeTypedReference (object target, System.Reflection.FieldInfo[] flds);\n    parameters:\n    - id: target\n      type: System.Object\n      description: An object that contains the field described by the first element of <code>flds</code>.\n    - id: flds\n      type: System.Reflection.FieldInfo[]\n      description: A list of field descriptions where each element describes a field that contains the field described by the succeeding element. Each described field must be a value type. The field descriptions must be `RuntimeFieldInfo` objects supplied by the type system.\n    return:\n      type: System.TypedReference\n      description: A <xref href=\"System.TypedReference\"></xref> for the field described by the last element of <code>flds</code>.\n  overload: System.TypedReference.MakeTypedReference*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>target</code> or <code>flds</code> is `null`.  \\n  \\n -or-  \\n  \\n An element of <code>flds</code> is `null`.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The <code>flds</code> array has no elements.  \\n  \\n -or-  \\n  \\n An element of <code>flds</code> is not a `RuntimeFieldInfo` object.  \\n  \\n -or-  \\n  \\n The <xref href=\\\"System.Reflection.FieldInfo.IsInitOnly\\\"></xref> or <xref href=\\\"System.Reflection.FieldInfo.IsStatic\\\"></xref> property of an element of <code>flds</code> is `true`.\"\n  - type: System.MissingMemberException\n    commentId: T:System.MissingMemberException\n    description: \"Parameter <code>target</code> does not contain the field described by the first element of <code>flds</code>, or an element of <code>flds</code> describes a field that is not contained in the field described by the succeeding element of <code>flds</code>.  \\n  \\n -or-  \\n  \\n The field described by an element of <code>flds</code> is not a value type.\"\n  attributes:\n  - type: System.CLSCompliantAttribute\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TypedReference.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.TypedReference.SetTypedReference(System.TypedReference,System.Object)\n  commentId: M:System.TypedReference.SetTypedReference(System.TypedReference,System.Object)\n  id: SetTypedReference(System.TypedReference,System.Object)\n  parent: System.TypedReference\n  langs:\n  - csharp\n  name: SetTypedReference(TypedReference, Object)\n  nameWithType: TypedReference.SetTypedReference(TypedReference, Object)\n  fullName: TypedReference.SetTypedReference(TypedReference, Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Converts the specified value to a `TypedReference`. This method is not supported.\n  remarks: This method always throws <xref:System.NotSupportedException>.\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public static void SetTypedReference (TypedReference target, object value);\n    parameters:\n    - id: target\n      type: System.TypedReference\n      description: The target of the conversion.\n    - id: value\n      type: System.Object\n      description: The value to be converted.\n  overload: System.TypedReference.SetTypedReference*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: In all cases.\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TypedReference.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.TypedReference.TargetTypeToken(System.TypedReference)\n  commentId: M:System.TypedReference.TargetTypeToken(System.TypedReference)\n  id: TargetTypeToken(System.TypedReference)\n  parent: System.TypedReference\n  langs:\n  - csharp\n  name: TargetTypeToken(TypedReference)\n  nameWithType: TypedReference.TargetTypeToken(TypedReference)\n  fullName: TypedReference.TargetTypeToken(TypedReference)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Returns the internal metadata type handle for the specified `TypedReference`.\n  syntax:\n    content: public static RuntimeTypeHandle TargetTypeToken (TypedReference value);\n    parameters:\n    - id: value\n      type: System.TypedReference\n      description: The `TypedReference` for which the type handle is requested.\n    return:\n      type: System.RuntimeTypeHandle\n      description: The internal metadata type handle for the specified `TypedReference`.\n  overload: System.TypedReference.TargetTypeToken*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TypedReference.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.TypedReference.ToObject(System.TypedReference)\n  commentId: M:System.TypedReference.ToObject(System.TypedReference)\n  id: ToObject(System.TypedReference)\n  parent: System.TypedReference\n  langs:\n  - csharp\n  name: ToObject(TypedReference)\n  nameWithType: TypedReference.ToObject(TypedReference)\n  fullName: TypedReference.ToObject(TypedReference)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Converts the specified `TypedReference` to an `Object`.\n  remarks: This might be a boxing operation.\n  syntax:\n    content: public static object ToObject (TypedReference value);\n    parameters:\n    - id: value\n      type: System.TypedReference\n      description: The `TypedReference` to be converted.\n    return:\n      type: System.Object\n      description: An <xref href=\"System.Object\"></xref> converted from a `TypedReference`.\n  overload: System.TypedReference.ToObject*\n  exceptions: []\n  attributes: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TypedReference.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  nameWithType: ValueType\n  fullName: System.ValueType\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  nameWithType: NotSupportedException\n  fullName: System.NotSupportedException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.MissingMemberException\n  parent: System\n  isExternal: false\n  name: MissingMemberException\n  nameWithType: MissingMemberException\n  fullName: System.MissingMemberException\n- uid: System.TypedReference.Equals(System.Object)\n  parent: System.TypedReference\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: TypedReference.Equals(Object)\n  fullName: TypedReference.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.TypedReference.GetHashCode\n  parent: System.TypedReference\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: TypedReference.GetHashCode()\n  fullName: TypedReference.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.TypedReference.GetTargetType(System.TypedReference)\n  parent: System.TypedReference\n  isExternal: false\n  name: GetTargetType(TypedReference)\n  nameWithType: TypedReference.GetTargetType(TypedReference)\n  fullName: TypedReference.GetTargetType(TypedReference)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.TypedReference\n  parent: System\n  isExternal: false\n  name: TypedReference\n  nameWithType: TypedReference\n  fullName: System.TypedReference\n- uid: System.TypedReference.MakeTypedReference(System.Object,System.Reflection.FieldInfo[])\n  parent: System.TypedReference\n  isExternal: false\n  name: MakeTypedReference(Object, FieldInfo[])\n  nameWithType: TypedReference.MakeTypedReference(Object, FieldInfo[])\n  fullName: TypedReference.MakeTypedReference(Object, FieldInfo[])\n- uid: System.Reflection.FieldInfo\n  name: FieldInfo\n  nameWithType: FieldInfo\n  fullName: System.Reflection.FieldInfo\n- uid: System.Reflection.FieldInfo[]\n  parent: System.Reflection\n  isExternal: false\n  name: FieldInfo[]\n  nameWithType: FieldInfo[]\n  fullName: System.Reflection.FieldInfo[]\n  spec.csharp:\n  - uid: System.Reflection.FieldInfo\n    name: FieldInfo\n    nameWithType: FieldInfo\n    fullName: System.Reflection.FieldInfo\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.TypedReference.SetTypedReference(System.TypedReference,System.Object)\n  parent: System.TypedReference\n  isExternal: false\n  name: SetTypedReference(TypedReference, Object)\n  nameWithType: TypedReference.SetTypedReference(TypedReference, Object)\n  fullName: TypedReference.SetTypedReference(TypedReference, Object)\n- uid: System.TypedReference.TargetTypeToken(System.TypedReference)\n  parent: System.TypedReference\n  isExternal: false\n  name: TargetTypeToken(TypedReference)\n  nameWithType: TypedReference.TargetTypeToken(TypedReference)\n  fullName: TypedReference.TargetTypeToken(TypedReference)\n- uid: System.RuntimeTypeHandle\n  parent: System\n  isExternal: false\n  name: RuntimeTypeHandle\n  nameWithType: RuntimeTypeHandle\n  fullName: System.RuntimeTypeHandle\n- uid: System.TypedReference.ToObject(System.TypedReference)\n  parent: System.TypedReference\n  isExternal: false\n  name: ToObject(TypedReference)\n  nameWithType: TypedReference.ToObject(TypedReference)\n  fullName: TypedReference.ToObject(TypedReference)\n- uid: System.TypedReference.Equals*\n  parent: System.TypedReference\n  isExternal: false\n  name: Equals\n  nameWithType: TypedReference.Equals\n  fullName: TypedReference.Equals\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TypedReference.xml\n- uid: System.TypedReference.GetHashCode*\n  parent: System.TypedReference\n  isExternal: false\n  name: GetHashCode\n  nameWithType: TypedReference.GetHashCode\n  fullName: TypedReference.GetHashCode\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TypedReference.xml\n- uid: System.TypedReference.GetTargetType*\n  parent: System.TypedReference\n  isExternal: false\n  name: GetTargetType\n  nameWithType: TypedReference.GetTargetType\n  fullName: TypedReference.GetTargetType\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TypedReference.xml\n- uid: System.TypedReference.MakeTypedReference*\n  parent: System.TypedReference\n  isExternal: false\n  name: MakeTypedReference\n  nameWithType: TypedReference.MakeTypedReference\n  fullName: TypedReference.MakeTypedReference\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TypedReference.xml\n- uid: System.TypedReference.SetTypedReference*\n  parent: System.TypedReference\n  isExternal: false\n  name: SetTypedReference\n  nameWithType: TypedReference.SetTypedReference\n  fullName: TypedReference.SetTypedReference\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TypedReference.xml\n- uid: System.TypedReference.TargetTypeToken*\n  parent: System.TypedReference\n  isExternal: false\n  name: TargetTypeToken\n  nameWithType: TypedReference.TargetTypeToken\n  fullName: TypedReference.TargetTypeToken\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TypedReference.xml\n- uid: System.TypedReference.ToObject*\n  parent: System.TypedReference\n  isExternal: false\n  name: ToObject\n  nameWithType: TypedReference.ToObject\n  fullName: TypedReference.ToObject\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/TypedReference.xml\n"}