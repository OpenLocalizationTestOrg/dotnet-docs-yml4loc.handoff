{"nodes":[{"content":"Represents a workflow that executes activities sequentially.","nodes":[{"pos":[0,60],"content":"Represents a workflow that executes activities sequentially.","nodes":[{"content":"Represents a workflow that executes activities sequentially.","pos":[0,60]}]}],"pos":[1252,1313],"yaml":true},{"content":"> [!NOTE]\n>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  \n  \n The <xref:System.Workflow.Activities.SequentialWorkflowActivity> is a <xref:System.Workflow.Activities.SequenceActivity> with `Initialized` and `Completed` events for optional processing of parameters. This makes it particularly useful as a top-level activity when you design sequential-style workflows.  \n  \n The <xref:System.Workflow.Activities.SequentialWorkflowActivity> is a <xref:System.Workflow.ComponentModel.CompositeActivity>, which means the <xref:System.Workflow.Activities.SequentialWorkflowActivity> can contain other activities.","nodes":[{"pos":[2,78],"content":"[!NOTE]\n [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]","leadings":["","> "],"nodes":[]},{"pos":[85,388],"content":"The <xref:System.Workflow.Activities.SequentialWorkflowActivity> is a <xref:System.Workflow.Activities.SequenceActivity> with `Initialized` and `Completed` events for optional processing of parameters. This makes it particularly useful as a top-level activity when you design sequential-style workflows.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Workflow.Activities.SequentialWorkflowActivity&gt;</ph> is a <ph id=\"ph2\">&lt;xref:System.Workflow.Activities.SequenceActivity&gt;</ph> with <ph id=\"ph3\">`Initialized`</ph> and <ph id=\"ph4\">`Completed`</ph> events for optional processing of parameters.","pos":[0,201],"source":"The <xref:System.Workflow.Activities.SequentialWorkflowActivity> is a <xref:System.Workflow.Activities.SequenceActivity> with `Initialized` and `Completed` events for optional processing of parameters."},{"content":"This makes it particularly useful as a top-level activity when you design sequential-style workflows.","pos":[202,303]}]},{"pos":[395,628],"content":"The <xref:System.Workflow.Activities.SequentialWorkflowActivity> is a <xref:System.Workflow.ComponentModel.CompositeActivity>, which means the <xref:System.Workflow.Activities.SequentialWorkflowActivity> can contain other activities.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Workflow.Activities.SequentialWorkflowActivity&gt;</ph> is a <ph id=\"ph2\">&lt;xref:System.Workflow.ComponentModel.CompositeActivity&gt;</ph>, which means the <ph id=\"ph3\">&lt;xref:System.Workflow.Activities.SequentialWorkflowActivity&gt;</ph> can contain other activities.","pos":[0,233],"source":"The <xref:System.Workflow.Activities.SequentialWorkflowActivity> is a <xref:System.Workflow.ComponentModel.CompositeActivity>, which means the <xref:System.Workflow.Activities.SequentialWorkflowActivity> can contain other activities."}]}],"pos":[1324,1960],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Workflow.Activities.SequentialWorkflowActivity\"></xref> class.","nodes":[{"pos":[0,115],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.SequentialWorkflowActivity\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Workflow.Activities.SequentialWorkflowActivity\"></xref> class."}],"pos":[11602,11718],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Workflow.Activities.SequentialWorkflowActivity\"></xref> class by using the name of the activity.","nodes":[{"pos":[0,149],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.SequentialWorkflowActivity\"&gt;&lt;/xref&gt;</ph> class by using the name of the activity.","source":"Initializes a new instance of the <xref href=\"System.Workflow.Activities.SequentialWorkflowActivity\"></xref> class by using the name of the activity."}],"pos":[12996,13146],"yaml":true},{"content":"The user-defined name of the activity.","nodes":[{"pos":[0,38],"content":"The user-defined name of the activity.","nodes":[{"content":"The user-defined name of the activity.","pos":[0,38]}]}],"pos":[13294,13333],"yaml":true},{"content":"Occurs when the workflow has finished.","nodes":[{"pos":[0,38],"content":"Occurs when the workflow has finished.","nodes":[{"content":"Occurs when the workflow has finished.","pos":[0,38]}]}],"pos":[14415,14454],"yaml":true},{"content":"Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref href=\"System.Workflow.Activities.SequentialWorkflowActivity.Completed\"></xref> event.","nodes":[{"pos":[0,194],"content":"Represents the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.DependencyProperty\"&gt;&lt;/xref&gt;</ph> that targets the <ph id=\"ph2\">&lt;xref href=\"System.Workflow.Activities.SequentialWorkflowActivity.Completed\"&gt;&lt;/xref&gt;</ph> event.","source":"Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref href=\"System.Workflow.Activities.SequentialWorkflowActivity.Completed\"></xref> event."}],"pos":[16350,16545],"yaml":true},{"content":"[!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]","nodes":[],"pos":[16556,16638],"yaml":true,"extradata":"MT"},{"content":"Gets or sets an <xref href=\"System.Workflow.ComponentModel.ActivityCondition\"></xref> in which dynamic updates can be made in the workflow, when overridden in a derived class.","nodes":[{"pos":[0,175],"content":"Gets or sets an <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityCondition\"&gt;&lt;/xref&gt;</ph> in which dynamic updates can be made in the workflow, when overridden in a derived class.","source":"Gets or sets an <xref href=\"System.Workflow.ComponentModel.ActivityCondition\"></xref> in which dynamic updates can be made in the workflow, when overridden in a derived class."}],"pos":[17936,18112],"yaml":true},{"content":"A <xref href=\"System.Workflow.ComponentModel.ActivityCondition\"></xref> that identifies when dynamic updates can be made.","nodes":[{"pos":[0,121],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityCondition\"&gt;&lt;/xref&gt;</ph> that identifies when dynamic updates can be made.","source":"A <xref href=\"System.Workflow.ComponentModel.ActivityCondition\"></xref> that identifies when dynamic updates can be made."}],"pos":[18320,18442],"yaml":true},{"content":"Runs the workflow.","nodes":[{"pos":[0,18],"content":"Runs the workflow.","nodes":[{"content":"Runs the workflow.","pos":[0,18]}]}],"pos":[19796,19815],"yaml":true},{"content":"The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> associated with the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>.","nodes":[{"pos":[0,162],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"&gt;&lt;/xref&gt;</ph> associated with the <ph id=\"ph2\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> associated with the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>."}],"pos":[20126,20289],"yaml":true},{"content":"The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionStatus\"></xref> at the <xref href=\"System.Workflow.Activities.SequentialWorkflowActivity\"></xref> at the end of the requested operation.","nodes":[{"pos":[0,200],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityExecutionStatus\"&gt;&lt;/xref&gt;</ph> at the <ph id=\"ph2\">&lt;xref href=\"System.Workflow.Activities.SequentialWorkflowActivity\"&gt;&lt;/xref&gt;</ph> at the end of the requested operation.","source":"The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionStatus\"></xref> at the <xref href=\"System.Workflow.Activities.SequentialWorkflowActivity\"></xref> at the end of the requested operation."}],"pos":[20387,20588],"yaml":true},{"content":"Occurs when the workflow is initialized.","nodes":[{"pos":[0,40],"content":"Occurs when the workflow is initialized.","nodes":[{"content":"Occurs when the workflow is initialized.","pos":[0,40]}]}],"pos":[21684,21725],"yaml":true},{"content":"Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref href=\"System.Workflow.Activities.SequentialWorkflowActivity.Initialized\"></xref> event.","nodes":[{"pos":[0,196],"content":"Represents the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.DependencyProperty\"&gt;&lt;/xref&gt;</ph> that targets the <ph id=\"ph2\">&lt;xref href=\"System.Workflow.Activities.SequentialWorkflowActivity.Initialized\"&gt;&lt;/xref&gt;</ph> event.","source":"Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref href=\"System.Workflow.Activities.SequentialWorkflowActivity.Initialized\"></xref> event."}],"pos":[22921,23118],"yaml":true},{"content":"[!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]","nodes":[],"pos":[23129,23211],"yaml":true,"extradata":"MT"},{"content":"Raises the <xref href=\"System.Workflow.Activities.SequentialWorkflowActivity.CompletedEvent\"></xref> for the <xref href=\"System.Workflow.Activities.SequentialWorkflowActivity\"></xref>.","nodes":[{"pos":[0,184],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.SequentialWorkflowActivity.CompletedEvent\"&gt;&lt;/xref&gt;</ph> for the <ph id=\"ph2\">&lt;xref href=\"System.Workflow.Activities.SequentialWorkflowActivity\"&gt;&lt;/xref&gt;</ph>.","source":"Raises the <xref href=\"System.Workflow.Activities.SequentialWorkflowActivity.CompletedEvent\"></xref> for the <xref href=\"System.Workflow.Activities.SequentialWorkflowActivity\"></xref>."}],"pos":[24734,24919],"yaml":true},{"content":"The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> associated with the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>.","nodes":[{"pos":[0,162],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"&gt;&lt;/xref&gt;</ph> associated with the <ph id=\"ph2\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> associated with the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>."}],"pos":[25198,25361],"yaml":true},{"content":"<code>executionContext</code> is a null reference (`Nothing` in Visual Basic).","nodes":[{"pos":[0,78],"content":"<ph id=\"ph1\">&lt;code&gt;executionContext&lt;/code&gt;</ph> is a null reference (<ph id=\"ph2\">`Nothing`</ph> in Visual Basic).","source":"<code>executionContext</code> is a null reference (`Nothing` in Visual Basic)."}],"pos":[25563,25642],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Workflow.Activities.SequentialWorkflowActivity\n  commentId: T:System.Workflow.Activities.SequentialWorkflowActivity\n  id: SequentialWorkflowActivity\n  children:\n  - System.Workflow.Activities.SequentialWorkflowActivity.#ctor\n  - System.Workflow.Activities.SequentialWorkflowActivity.#ctor(System.String)\n  - System.Workflow.Activities.SequentialWorkflowActivity.Completed\n  - System.Workflow.Activities.SequentialWorkflowActivity.CompletedEvent\n  - System.Workflow.Activities.SequentialWorkflowActivity.DynamicUpdateCondition\n  - System.Workflow.Activities.SequentialWorkflowActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  - System.Workflow.Activities.SequentialWorkflowActivity.Initialized\n  - System.Workflow.Activities.SequentialWorkflowActivity.InitializedEvent\n  - System.Workflow.Activities.SequentialWorkflowActivity.OnSequenceComplete(System.Workflow.ComponentModel.ActivityExecutionContext)\n  langs:\n  - csharp\n  name: SequentialWorkflowActivity\n  nameWithType: SequentialWorkflowActivity\n  fullName: System.Workflow.Activities.SequentialWorkflowActivity\n  type: Class\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Represents a workflow that executes activities sequentially.\n  remarks: \"> [!NOTE]\\n>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  \\n  \\n The <xref:System.Workflow.Activities.SequentialWorkflowActivity> is a <xref:System.Workflow.Activities.SequenceActivity> with `Initialized` and `Completed` events for optional processing of parameters. This makes it particularly useful as a top-level activity when you design sequential-style workflows.  \\n  \\n The <xref:System.Workflow.Activities.SequentialWorkflowActivity> is a <xref:System.Workflow.ComponentModel.CompositeActivity>, which means the <xref:System.Workflow.Activities.SequentialWorkflowActivity> can contain other activities.\"\n  syntax:\n    content: >-\n      [System.Drawing.ToolboxBitmap(typeof(System.Workflow.Activities.SequentialWorkflowActivity), \"Resources.SequentialWorkflow.bmp\")]\n\n      [System.Obsolete(\"The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*\")]\n\n      public class SequentialWorkflowActivity : System.Workflow.Activities.SequenceActivity\n  inheritance:\n  - System.Object\n  - System.Workflow.ComponentModel.DependencyObject\n  - System.Workflow.ComponentModel.Activity\n  - System.Workflow.ComponentModel.CompositeActivity\n  - System.Workflow.Activities.SequenceActivity\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Workflow.Activities.SequenceActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)\n  - System.Workflow.Activities.SequenceActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)\n  - System.Workflow.Activities.SequenceActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  - System.Workflow.Activities.SequenceActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)\n  - System.Workflow.Activities.SequenceActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)\n  - System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty\n  - System.Workflow.ComponentModel.Activity.Canceling\n  - System.Workflow.ComponentModel.Activity.CancelingEvent\n  - System.Workflow.ComponentModel.Activity.Clone\n  - System.Workflow.ComponentModel.Activity.Closed\n  - System.Workflow.ComponentModel.Activity.ClosedEvent\n  - System.Workflow.ComponentModel.Activity.Compensating\n  - System.Workflow.ComponentModel.Activity.CompensatingEvent\n  - System.Workflow.ComponentModel.Activity.Description\n  - System.Workflow.ComponentModel.Activity.Enabled\n  - System.Workflow.ComponentModel.Activity.Executing\n  - System.Workflow.ComponentModel.Activity.ExecutingEvent\n  - System.Workflow.ComponentModel.Activity.ExecutionResult\n  - System.Workflow.ComponentModel.Activity.ExecutionStatus\n  - System.Workflow.ComponentModel.Activity.Faulting\n  - System.Workflow.ComponentModel.Activity.FaultingEvent\n  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)\n  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)\n  - System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)\n  - System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)\n  - System.Workflow.ComponentModel.Activity.IsDynamicActivity\n  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)\n  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)\n  - System.Workflow.ComponentModel.Activity.Name\n  - System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)\n  - System.Workflow.ComponentModel.Activity.Parent\n  - System.Workflow.ComponentModel.Activity.QualifiedName\n  - System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)\n  - System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)\n  - System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})\n  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)\n  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)\n  - System.Workflow.ComponentModel.Activity.StatusChanged\n  - System.Workflow.ComponentModel.Activity.StatusChangedEvent\n  - System.Workflow.ComponentModel.Activity.ToString\n  - System.Workflow.ComponentModel.Activity.TrackData(System.Object)\n  - System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)\n  - System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})\n  - System.Workflow.ComponentModel.Activity.WorkflowInstanceId\n  - System.Workflow.ComponentModel.CompositeActivity.Activities\n  - System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)\n  - System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities\n  - System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)\n  - System.Workflow.ComponentModel.CompositeActivity.EnabledActivities\n  - System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)\n  - System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)\n  - System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  - System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)\n  - System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)\n  - System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)\n  - System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)\n  - System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)\n  - System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.DesignMode\n  - System.Workflow.ComponentModel.DependencyObject.Dispose\n  - System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)\n  - System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.InitializeProperties\n  - System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)\n  - System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject\n  - System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)\n  - System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.Site\n  - System.Workflow.ComponentModel.DependencyObject.UserData\n  attributes:\n  - type: System.Drawing.ToolboxBitmapAttribute\n  - type: System.ObsoleteAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/SequentialWorkflowActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.SequentialWorkflowActivity.#ctor\n  commentId: M:System.Workflow.Activities.SequentialWorkflowActivity.#ctor\n  id: '#ctor'\n  parent: System.Workflow.Activities.SequentialWorkflowActivity\n  langs:\n  - csharp\n  name: SequentialWorkflowActivity()\n  nameWithType: SequentialWorkflowActivity.SequentialWorkflowActivity()\n  fullName: SequentialWorkflowActivity.SequentialWorkflowActivity()\n  type: Constructor\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Initializes a new instance of the <xref href=\"System.Workflow.Activities.SequentialWorkflowActivity\"></xref> class.\n  syntax:\n    content: public SequentialWorkflowActivity ();\n    parameters: []\n  overload: System.Workflow.Activities.SequentialWorkflowActivity.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/SequentialWorkflowActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.SequentialWorkflowActivity.#ctor(System.String)\n  commentId: M:System.Workflow.Activities.SequentialWorkflowActivity.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Workflow.Activities.SequentialWorkflowActivity\n  langs:\n  - csharp\n  name: SequentialWorkflowActivity(String)\n  nameWithType: SequentialWorkflowActivity.SequentialWorkflowActivity(String)\n  fullName: SequentialWorkflowActivity.SequentialWorkflowActivity(String)\n  type: Constructor\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Initializes a new instance of the <xref href=\"System.Workflow.Activities.SequentialWorkflowActivity\"></xref> class by using the name of the activity.\n  syntax:\n    content: public SequentialWorkflowActivity (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The user-defined name of the activity.\n  overload: System.Workflow.Activities.SequentialWorkflowActivity.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/SequentialWorkflowActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.SequentialWorkflowActivity.Completed\n  commentId: E:System.Workflow.Activities.SequentialWorkflowActivity.Completed\n  id: Completed\n  parent: System.Workflow.Activities.SequentialWorkflowActivity\n  langs:\n  - csharp\n  name: Completed\n  nameWithType: SequentialWorkflowActivity.Completed\n  fullName: SequentialWorkflowActivity.Completed\n  type: Event\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Occurs when the workflow has finished.\n  remarks: ''\n  example:\n  - \"The following code example shows how to create a new <xref:System.Workflow.Activities.SequentialWorkflowActivity> class, and set the event handler for the <xref:System.Workflow.Activities.SequentialWorkflowActivity.Completed> event. This code example is part of the Policy SDK Sample from the DiscountPolicyWorkflow.Designer.cs file. [!INCLUDE[crdefault](~/includes/crdefault-md.md)][Advanced Policy](http://msdn.microsoft.com/en-us/1ad079ee-b50b-4af4-9575-597eafc97742).  \\n  \\n [!code-csharp[wf_samples#1](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#1)]\\n [!code-vb[wf_samples#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#1)]\"\n  syntax:\n    content: public event EventHandler Completed;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/SequentialWorkflowActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.SequentialWorkflowActivity.CompletedEvent\n  commentId: F:System.Workflow.Activities.SequentialWorkflowActivity.CompletedEvent\n  id: CompletedEvent\n  parent: System.Workflow.Activities.SequentialWorkflowActivity\n  langs:\n  - csharp\n  name: CompletedEvent\n  nameWithType: SequentialWorkflowActivity.CompletedEvent\n  fullName: SequentialWorkflowActivity.CompletedEvent\n  type: Field\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref href=\"System.Workflow.Activities.SequentialWorkflowActivity.Completed\"></xref> event.\n  remarks: '[!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]'\n  syntax:\n    content: public static readonly System.Workflow.ComponentModel.DependencyProperty CompletedEvent;\n    return:\n      type: System.Workflow.ComponentModel.DependencyProperty\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/SequentialWorkflowActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.SequentialWorkflowActivity.DynamicUpdateCondition\n  commentId: P:System.Workflow.Activities.SequentialWorkflowActivity.DynamicUpdateCondition\n  id: DynamicUpdateCondition\n  parent: System.Workflow.Activities.SequentialWorkflowActivity\n  langs:\n  - csharp\n  name: DynamicUpdateCondition\n  nameWithType: SequentialWorkflowActivity.DynamicUpdateCondition\n  fullName: SequentialWorkflowActivity.DynamicUpdateCondition\n  type: Property\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Gets or sets an <xref href=\"System.Workflow.ComponentModel.ActivityCondition\"></xref> in which dynamic updates can be made in the workflow, when overridden in a derived class.\n  syntax:\n    content: public System.Workflow.ComponentModel.ActivityCondition DynamicUpdateCondition { get; set; }\n    return:\n      type: System.Workflow.ComponentModel.ActivityCondition\n      description: A <xref href=\"System.Workflow.ComponentModel.ActivityCondition\"></xref> that identifies when dynamic updates can be made.\n  overload: System.Workflow.Activities.SequentialWorkflowActivity.DynamicUpdateCondition*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/SequentialWorkflowActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.SequentialWorkflowActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  commentId: M:System.Workflow.Activities.SequentialWorkflowActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  id: Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.Activities.SequentialWorkflowActivity\n  langs:\n  - csharp\n  name: Execute(ActivityExecutionContext)\n  nameWithType: SequentialWorkflowActivity.Execute(ActivityExecutionContext)\n  fullName: SequentialWorkflowActivity.Execute(ActivityExecutionContext)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Runs the workflow.\n  syntax:\n    content: protected override System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);\n    parameters:\n    - id: executionContext\n      type: System.Workflow.ComponentModel.ActivityExecutionContext\n      description: The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> associated with the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>.\n    return:\n      type: System.Workflow.ComponentModel.ActivityExecutionStatus\n      description: The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionStatus\"></xref> at the <xref href=\"System.Workflow.Activities.SequentialWorkflowActivity\"></xref> at the end of the requested operation.\n  overload: System.Workflow.Activities.SequentialWorkflowActivity.Execute*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/SequentialWorkflowActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.SequentialWorkflowActivity.Initialized\n  commentId: E:System.Workflow.Activities.SequentialWorkflowActivity.Initialized\n  id: Initialized\n  parent: System.Workflow.Activities.SequentialWorkflowActivity\n  langs:\n  - csharp\n  name: Initialized\n  nameWithType: SequentialWorkflowActivity.Initialized\n  fullName: SequentialWorkflowActivity.Initialized\n  type: Event\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Occurs when the workflow is initialized.\n  syntax:\n    content: public event EventHandler Initialized;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/SequentialWorkflowActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.SequentialWorkflowActivity.InitializedEvent\n  commentId: F:System.Workflow.Activities.SequentialWorkflowActivity.InitializedEvent\n  id: InitializedEvent\n  parent: System.Workflow.Activities.SequentialWorkflowActivity\n  langs:\n  - csharp\n  name: InitializedEvent\n  nameWithType: SequentialWorkflowActivity.InitializedEvent\n  fullName: SequentialWorkflowActivity.InitializedEvent\n  type: Field\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref href=\"System.Workflow.Activities.SequentialWorkflowActivity.Initialized\"></xref> event.\n  remarks: '[!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]'\n  syntax:\n    content: public static readonly System.Workflow.ComponentModel.DependencyProperty InitializedEvent;\n    return:\n      type: System.Workflow.ComponentModel.DependencyProperty\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/SequentialWorkflowActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.SequentialWorkflowActivity.OnSequenceComplete(System.Workflow.ComponentModel.ActivityExecutionContext)\n  commentId: M:System.Workflow.Activities.SequentialWorkflowActivity.OnSequenceComplete(System.Workflow.ComponentModel.ActivityExecutionContext)\n  id: OnSequenceComplete(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.Activities.SequentialWorkflowActivity\n  langs:\n  - csharp\n  name: OnSequenceComplete(ActivityExecutionContext)\n  nameWithType: SequentialWorkflowActivity.OnSequenceComplete(ActivityExecutionContext)\n  fullName: SequentialWorkflowActivity.OnSequenceComplete(ActivityExecutionContext)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Raises the <xref href=\"System.Workflow.Activities.SequentialWorkflowActivity.CompletedEvent\"></xref> for the <xref href=\"System.Workflow.Activities.SequentialWorkflowActivity\"></xref>.\n  syntax:\n    content: protected override sealed void OnSequenceComplete (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);\n    parameters:\n    - id: executionContext\n      type: System.Workflow.ComponentModel.ActivityExecutionContext\n      description: The <xref href=\"System.Workflow.ComponentModel.ActivityExecutionContext\"></xref> associated with the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>.\n  overload: System.Workflow.Activities.SequentialWorkflowActivity.OnSequenceComplete*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>executionContext</code> is a null reference (`Nothing` in Visual Basic).\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/SequentialWorkflowActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Workflow.Activities.SequenceActivity\n  parent: System.Workflow.Activities\n  isExternal: false\n  name: SequenceActivity\n  nameWithType: SequenceActivity\n  fullName: System.Workflow.Activities.SequenceActivity\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Workflow.Activities.SequentialWorkflowActivity.#ctor\n  parent: System.Workflow.Activities.SequentialWorkflowActivity\n  isExternal: false\n  name: SequentialWorkflowActivity()\n  nameWithType: SequentialWorkflowActivity.SequentialWorkflowActivity()\n  fullName: SequentialWorkflowActivity.SequentialWorkflowActivity()\n- uid: System.Workflow.Activities.SequentialWorkflowActivity.#ctor(System.String)\n  parent: System.Workflow.Activities.SequentialWorkflowActivity\n  isExternal: false\n  name: SequentialWorkflowActivity(String)\n  nameWithType: SequentialWorkflowActivity.SequentialWorkflowActivity(String)\n  fullName: SequentialWorkflowActivity.SequentialWorkflowActivity(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Workflow.Activities.SequentialWorkflowActivity.Completed\n  parent: System.Workflow.Activities.SequentialWorkflowActivity\n  isExternal: false\n  name: Completed\n  nameWithType: SequentialWorkflowActivity.Completed\n  fullName: SequentialWorkflowActivity.Completed\n- uid: System.EventHandler\n  parent: System\n  isExternal: false\n  name: EventHandler\n  nameWithType: EventHandler\n  fullName: System.EventHandler\n- uid: System.Workflow.Activities.SequentialWorkflowActivity.CompletedEvent\n  parent: System.Workflow.Activities.SequentialWorkflowActivity\n  isExternal: false\n  name: CompletedEvent\n  nameWithType: SequentialWorkflowActivity.CompletedEvent\n  fullName: SequentialWorkflowActivity.CompletedEvent\n- uid: System.Workflow.ComponentModel.DependencyProperty\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Workflow.ComponentModel.DependencyProperty\n- uid: System.Workflow.Activities.SequentialWorkflowActivity.DynamicUpdateCondition\n  parent: System.Workflow.Activities.SequentialWorkflowActivity\n  isExternal: false\n  name: DynamicUpdateCondition\n  nameWithType: SequentialWorkflowActivity.DynamicUpdateCondition\n  fullName: SequentialWorkflowActivity.DynamicUpdateCondition\n- uid: System.Workflow.ComponentModel.ActivityCondition\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: ActivityCondition\n  nameWithType: ActivityCondition\n  fullName: System.Workflow.ComponentModel.ActivityCondition\n- uid: System.Workflow.Activities.SequentialWorkflowActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.Activities.SequentialWorkflowActivity\n  isExternal: false\n  name: Execute(ActivityExecutionContext)\n  nameWithType: SequentialWorkflowActivity.Execute(ActivityExecutionContext)\n  fullName: SequentialWorkflowActivity.Execute(ActivityExecutionContext)\n- uid: System.Workflow.ComponentModel.ActivityExecutionStatus\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: ActivityExecutionStatus\n  nameWithType: ActivityExecutionStatus\n  fullName: System.Workflow.ComponentModel.ActivityExecutionStatus\n- uid: System.Workflow.ComponentModel.ActivityExecutionContext\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: ActivityExecutionContext\n  nameWithType: ActivityExecutionContext\n  fullName: System.Workflow.ComponentModel.ActivityExecutionContext\n- uid: System.Workflow.Activities.SequentialWorkflowActivity.Initialized\n  parent: System.Workflow.Activities.SequentialWorkflowActivity\n  isExternal: false\n  name: Initialized\n  nameWithType: SequentialWorkflowActivity.Initialized\n  fullName: SequentialWorkflowActivity.Initialized\n- uid: System.Workflow.Activities.SequentialWorkflowActivity.InitializedEvent\n  parent: System.Workflow.Activities.SequentialWorkflowActivity\n  isExternal: false\n  name: InitializedEvent\n  nameWithType: SequentialWorkflowActivity.InitializedEvent\n  fullName: SequentialWorkflowActivity.InitializedEvent\n- uid: System.Workflow.Activities.SequentialWorkflowActivity.OnSequenceComplete(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.Activities.SequentialWorkflowActivity\n  isExternal: false\n  name: OnSequenceComplete(ActivityExecutionContext)\n  nameWithType: SequentialWorkflowActivity.OnSequenceComplete(ActivityExecutionContext)\n  fullName: SequentialWorkflowActivity.OnSequenceComplete(ActivityExecutionContext)\n- uid: System.Workflow.Activities.SequentialWorkflowActivity.#ctor*\n  parent: System.Workflow.Activities.SequentialWorkflowActivity\n  isExternal: false\n  name: SequentialWorkflowActivity\n  nameWithType: SequentialWorkflowActivity.SequentialWorkflowActivity\n  fullName: SequentialWorkflowActivity.SequentialWorkflowActivity\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/SequentialWorkflowActivity.xml\n- uid: System.Workflow.Activities.SequentialWorkflowActivity.DynamicUpdateCondition*\n  parent: System.Workflow.Activities.SequentialWorkflowActivity\n  isExternal: false\n  name: DynamicUpdateCondition\n  nameWithType: SequentialWorkflowActivity.DynamicUpdateCondition\n  fullName: SequentialWorkflowActivity.DynamicUpdateCondition\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/SequentialWorkflowActivity.xml\n- uid: System.Workflow.Activities.SequentialWorkflowActivity.Execute*\n  parent: System.Workflow.Activities.SequentialWorkflowActivity\n  isExternal: false\n  name: Execute\n  nameWithType: SequentialWorkflowActivity.Execute\n  fullName: SequentialWorkflowActivity.Execute\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/SequentialWorkflowActivity.xml\n- uid: System.Workflow.Activities.SequentialWorkflowActivity.OnSequenceComplete*\n  parent: System.Workflow.Activities.SequentialWorkflowActivity\n  isExternal: false\n  name: OnSequenceComplete\n  nameWithType: SequentialWorkflowActivity.OnSequenceComplete\n  fullName: SequentialWorkflowActivity.OnSequenceComplete\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/SequentialWorkflowActivity.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Workflow.ComponentModel.Activity.ToString\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: ToString()\n  nameWithType: Activity.ToString()\n  fullName: Activity.ToString()\n- uid: System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: AddHandler(DependencyProperty, Object)\n  nameWithType: DependencyObject.AddHandler(DependencyProperty, Object)\n  fullName: DependencyObject.AddHandler(DependencyProperty, Object)\n- uid: System.Workflow.ComponentModel.DependencyObject.DesignMode\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: DesignMode\n  nameWithType: DependencyObject.DesignMode\n  fullName: DependencyObject.DesignMode\n- uid: System.Workflow.ComponentModel.DependencyObject.Dispose\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: Dispose()\n  nameWithType: DependencyObject.Dispose()\n  fullName: DependencyObject.Dispose()\n- uid: System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: CompositeActivity.Dispose(Boolean)\n  fullName: CompositeActivity.Dispose(Boolean)\n- uid: System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: GetBinding(DependencyProperty)\n  nameWithType: DependencyObject.GetBinding(DependencyProperty)\n  fullName: DependencyObject.GetBinding(DependencyProperty)\n- uid: System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: GetBoundValue(ActivityBind, Type)\n  nameWithType: DependencyObject.GetBoundValue(ActivityBind, Type)\n  fullName: DependencyObject.GetBoundValue(ActivityBind, Type)\n- uid: System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: GetInvocationList<T>(DependencyProperty)\n  nameWithType: DependencyObject.GetInvocationList<T>(DependencyProperty)\n  fullName: DependencyObject.GetInvocationList<T>(DependencyProperty)\n- uid: System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: GetValue(DependencyProperty)\n  nameWithType: DependencyObject.GetValue(DependencyProperty)\n  fullName: DependencyObject.GetValue(DependencyProperty)\n- uid: System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: GetValueBase(DependencyProperty)\n  nameWithType: DependencyObject.GetValueBase(DependencyProperty)\n  fullName: DependencyObject.GetValueBase(DependencyProperty)\n- uid: System.Workflow.ComponentModel.DependencyObject.InitializeProperties\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: InitializeProperties()\n  nameWithType: DependencyObject.InitializeProperties()\n  fullName: DependencyObject.InitializeProperties()\n- uid: System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: IsBindingSet(DependencyProperty)\n  nameWithType: DependencyObject.IsBindingSet(DependencyProperty)\n  fullName: DependencyObject.IsBindingSet(DependencyProperty)\n- uid: System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: MetaEquals(DependencyObject)\n  nameWithType: DependencyObject.MetaEquals(DependencyObject)\n  fullName: DependencyObject.MetaEquals(DependencyObject)\n- uid: System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: ParentDependencyObject\n  nameWithType: DependencyObject.ParentDependencyObject\n  fullName: DependencyObject.ParentDependencyObject\n- uid: System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: RemoveHandler(DependencyProperty, Object)\n  nameWithType: DependencyObject.RemoveHandler(DependencyProperty, Object)\n  fullName: DependencyObject.RemoveHandler(DependencyProperty, Object)\n- uid: System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: RemoveProperty(DependencyProperty)\n  nameWithType: DependencyObject.RemoveProperty(DependencyProperty)\n  fullName: DependencyObject.RemoveProperty(DependencyProperty)\n- uid: System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: SetBinding(DependencyProperty, ActivityBind)\n  nameWithType: DependencyObject.SetBinding(DependencyProperty, ActivityBind)\n  fullName: DependencyObject.SetBinding(DependencyProperty, ActivityBind)\n- uid: System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: SetBoundValue(ActivityBind, Object)\n  nameWithType: DependencyObject.SetBoundValue(ActivityBind, Object)\n  fullName: DependencyObject.SetBoundValue(ActivityBind, Object)\n- uid: System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: SetReadOnlyPropertyValue(DependencyProperty, Object)\n  nameWithType: DependencyObject.SetReadOnlyPropertyValue(DependencyProperty, Object)\n  fullName: DependencyObject.SetReadOnlyPropertyValue(DependencyProperty, Object)\n- uid: System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: SetValue(DependencyProperty, Object)\n  nameWithType: DependencyObject.SetValue(DependencyProperty, Object)\n  fullName: DependencyObject.SetValue(DependencyProperty, Object)\n- uid: System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: SetValueBase(DependencyProperty, Object)\n  nameWithType: DependencyObject.SetValueBase(DependencyProperty, Object)\n  fullName: DependencyObject.SetValueBase(DependencyProperty, Object)\n- uid: System.Workflow.ComponentModel.DependencyObject.Site\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: Site\n  nameWithType: DependencyObject.Site\n  fullName: DependencyObject.Site\n- uid: System.Workflow.ComponentModel.DependencyObject.UserData\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: UserData\n  nameWithType: DependencyObject.UserData\n  fullName: DependencyObject.UserData\n- uid: System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: ActivityContextGuidProperty\n  nameWithType: Activity.ActivityContextGuidProperty\n  fullName: Activity.ActivityContextGuidProperty\n- uid: System.Workflow.Activities.SequenceActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.Activities.SequenceActivity\n  isExternal: false\n  name: Cancel(ActivityExecutionContext)\n  nameWithType: SequenceActivity.Cancel(ActivityExecutionContext)\n  fullName: SequenceActivity.Cancel(ActivityExecutionContext)\n- uid: System.Workflow.ComponentModel.Activity.Canceling\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Canceling\n  nameWithType: Activity.Canceling\n  fullName: Activity.Canceling\n- uid: System.Workflow.ComponentModel.Activity.CancelingEvent\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: CancelingEvent\n  nameWithType: Activity.CancelingEvent\n  fullName: Activity.CancelingEvent\n- uid: System.Workflow.ComponentModel.Activity.Clone\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Clone()\n  nameWithType: Activity.Clone()\n  fullName: Activity.Clone()\n- uid: System.Workflow.ComponentModel.Activity.Closed\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Closed\n  nameWithType: Activity.Closed\n  fullName: Activity.Closed\n- uid: System.Workflow.ComponentModel.Activity.ClosedEvent\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: ClosedEvent\n  nameWithType: Activity.ClosedEvent\n  fullName: Activity.ClosedEvent\n- uid: System.Workflow.ComponentModel.Activity.Compensating\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Compensating\n  nameWithType: Activity.Compensating\n  fullName: Activity.Compensating\n- uid: System.Workflow.ComponentModel.Activity.CompensatingEvent\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: CompensatingEvent\n  nameWithType: Activity.CompensatingEvent\n  fullName: Activity.CompensatingEvent\n- uid: System.Workflow.ComponentModel.Activity.Description\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Description\n  nameWithType: Activity.Description\n  fullName: Activity.Description\n- uid: System.Workflow.ComponentModel.Activity.Enabled\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Enabled\n  nameWithType: Activity.Enabled\n  fullName: Activity.Enabled\n- uid: System.Workflow.ComponentModel.Activity.Executing\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Executing\n  nameWithType: Activity.Executing\n  fullName: Activity.Executing\n- uid: System.Workflow.ComponentModel.Activity.ExecutingEvent\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: ExecutingEvent\n  nameWithType: Activity.ExecutingEvent\n  fullName: Activity.ExecutingEvent\n- uid: System.Workflow.ComponentModel.Activity.ExecutionResult\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: ExecutionResult\n  nameWithType: Activity.ExecutionResult\n  fullName: Activity.ExecutionResult\n- uid: System.Workflow.ComponentModel.Activity.ExecutionStatus\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: ExecutionStatus\n  nameWithType: Activity.ExecutionStatus\n  fullName: Activity.ExecutionStatus\n- uid: System.Workflow.ComponentModel.Activity.Faulting\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Faulting\n  nameWithType: Activity.Faulting\n  fullName: Activity.Faulting\n- uid: System.Workflow.ComponentModel.Activity.FaultingEvent\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: FaultingEvent\n  nameWithType: Activity.FaultingEvent\n  fullName: Activity.FaultingEvent\n- uid: System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: GetActivityByName(String)\n  nameWithType: Activity.GetActivityByName(String)\n  fullName: Activity.GetActivityByName(String)\n- uid: System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: GetActivityByName(String, Boolean)\n  nameWithType: Activity.GetActivityByName(String, Boolean)\n  fullName: Activity.GetActivityByName(String, Boolean)\n- uid: System.Workflow.Activities.SequenceActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)\n  parent: System.Workflow.Activities.SequenceActivity\n  isExternal: false\n  name: HandleFault(ActivityExecutionContext, Exception)\n  nameWithType: SequenceActivity.HandleFault(ActivityExecutionContext, Exception)\n  fullName: SequenceActivity.HandleFault(ActivityExecutionContext, Exception)\n- uid: System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: Initialize(IServiceProvider)\n  nameWithType: CompositeActivity.Initialize(IServiceProvider)\n  fullName: CompositeActivity.Initialize(IServiceProvider)\n- uid: System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Invoke<T>(EventHandler<T>, T)\n  nameWithType: Activity.Invoke<T>(EventHandler<T>, T)\n  fullName: Activity.Invoke<T>(EventHandler<T>, T)\n- uid: System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Invoke<T>(IActivityEventListener<T>, T)\n  nameWithType: Activity.Invoke<T>(IActivityEventListener<T>, T)\n  fullName: Activity.Invoke<T>(IActivityEventListener<T>, T)\n- uid: System.Workflow.ComponentModel.Activity.IsDynamicActivity\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: IsDynamicActivity\n  nameWithType: Activity.IsDynamicActivity\n  fullName: Activity.IsDynamicActivity\n- uid: System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Load(Stream, Activity)\n  nameWithType: Activity.Load(Stream, Activity)\n  fullName: Activity.Load(Stream, Activity)\n- uid: System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Load(Stream, Activity, IFormatter)\n  nameWithType: Activity.Load(Stream, Activity, IFormatter)\n  fullName: Activity.Load(Stream, Activity, IFormatter)\n- uid: System.Workflow.ComponentModel.Activity.Name\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Name\n  nameWithType: Activity.Name\n  fullName: Activity.Name\n- uid: System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: OnActivityExecutionContextLoad(IServiceProvider)\n  nameWithType: CompositeActivity.OnActivityExecutionContextLoad(IServiceProvider)\n  fullName: CompositeActivity.OnActivityExecutionContextLoad(IServiceProvider)\n- uid: System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: OnActivityExecutionContextUnload(IServiceProvider)\n  nameWithType: CompositeActivity.OnActivityExecutionContextUnload(IServiceProvider)\n  fullName: CompositeActivity.OnActivityExecutionContextUnload(IServiceProvider)\n- uid: System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: OnClosed(IServiceProvider)\n  nameWithType: Activity.OnClosed(IServiceProvider)\n  fullName: Activity.OnClosed(IServiceProvider)\n- uid: System.Workflow.ComponentModel.Activity.Parent\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Parent\n  nameWithType: Activity.Parent\n  fullName: Activity.Parent\n- uid: System.Workflow.ComponentModel.Activity.QualifiedName\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: QualifiedName\n  nameWithType: Activity.QualifiedName\n  fullName: Activity.QualifiedName\n- uid: System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: RaiseEvent(DependencyProperty, Object, EventArgs)\n  nameWithType: Activity.RaiseEvent(DependencyProperty, Object, EventArgs)\n  fullName: Activity.RaiseEvent(DependencyProperty, Object, EventArgs)\n- uid: System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: RaiseGenericEvent<T>(DependencyProperty, Object, T)\n  nameWithType: Activity.RaiseGenericEvent<T>(DependencyProperty, Object, T)\n  fullName: Activity.RaiseGenericEvent<T>(DependencyProperty, Object, T)\n- uid: System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: RegisterForStatusChange(DependencyProperty, IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)\n  nameWithType: Activity.RegisterForStatusChange(DependencyProperty, IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)\n  fullName: Activity.RegisterForStatusChange(DependencyProperty, IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)\n- uid: System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Save(Stream)\n  nameWithType: Activity.Save(Stream)\n  fullName: Activity.Save(Stream)\n- uid: System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Save(Stream, IFormatter)\n  nameWithType: Activity.Save(Stream, IFormatter)\n  fullName: Activity.Save(Stream, IFormatter)\n- uid: System.Workflow.ComponentModel.Activity.StatusChanged\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: StatusChanged\n  nameWithType: Activity.StatusChanged\n  fullName: Activity.StatusChanged\n- uid: System.Workflow.ComponentModel.Activity.StatusChangedEvent\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: StatusChangedEvent\n  nameWithType: Activity.StatusChangedEvent\n  fullName: Activity.StatusChangedEvent\n- uid: System.Workflow.ComponentModel.Activity.TrackData(System.Object)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: TrackData(Object)\n  nameWithType: Activity.TrackData(Object)\n  fullName: Activity.TrackData(Object)\n- uid: System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: TrackData(String, Object)\n  nameWithType: Activity.TrackData(String, Object)\n  fullName: Activity.TrackData(String, Object)\n- uid: System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: Uninitialize(IServiceProvider)\n  nameWithType: CompositeActivity.Uninitialize(IServiceProvider)\n  fullName: CompositeActivity.Uninitialize(IServiceProvider)\n- uid: System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: UnregisterForStatusChange(DependencyProperty, IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)\n  nameWithType: Activity.UnregisterForStatusChange(DependencyProperty, IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)\n  fullName: Activity.UnregisterForStatusChange(DependencyProperty, IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)\n- uid: System.Workflow.ComponentModel.Activity.WorkflowInstanceId\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: WorkflowInstanceId\n  nameWithType: Activity.WorkflowInstanceId\n  fullName: Activity.WorkflowInstanceId\n- uid: System.Workflow.ComponentModel.CompositeActivity.Activities\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: Activities\n  nameWithType: CompositeActivity.Activities\n  fullName: CompositeActivity.Activities\n- uid: System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: ApplyWorkflowChanges(WorkflowChanges)\n  nameWithType: CompositeActivity.ApplyWorkflowChanges(WorkflowChanges)\n  fullName: CompositeActivity.ApplyWorkflowChanges(WorkflowChanges)\n- uid: System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: CanModifyActivities\n  nameWithType: CompositeActivity.CanModifyActivities\n  fullName: CompositeActivity.CanModifyActivities\n- uid: System.Workflow.ComponentModel.CompositeActivity.EnabledActivities\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: EnabledActivities\n  nameWithType: CompositeActivity.EnabledActivities\n  fullName: CompositeActivity.EnabledActivities\n- uid: System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: GetDynamicActivities(Activity)\n  nameWithType: CompositeActivity.GetDynamicActivities(Activity)\n  fullName: CompositeActivity.GetDynamicActivities(Activity)\n- uid: System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: OnActivityChangeAdd(ActivityExecutionContext, Activity)\n  nameWithType: CompositeActivity.OnActivityChangeAdd(ActivityExecutionContext, Activity)\n  fullName: CompositeActivity.OnActivityChangeAdd(ActivityExecutionContext, Activity)\n- uid: System.Workflow.Activities.SequenceActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.Activities.SequenceActivity\n  isExternal: false\n  name: OnActivityChangeRemove(ActivityExecutionContext, Activity)\n  nameWithType: SequenceActivity.OnActivityChangeRemove(ActivityExecutionContext, Activity)\n  fullName: SequenceActivity.OnActivityChangeRemove(ActivityExecutionContext, Activity)\n- uid: System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: OnListChanged(ActivityCollectionChangeEventArgs)\n  nameWithType: CompositeActivity.OnListChanged(ActivityCollectionChangeEventArgs)\n  fullName: CompositeActivity.OnListChanged(ActivityCollectionChangeEventArgs)\n- uid: System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: OnListChanging(ActivityCollectionChangeEventArgs)\n  nameWithType: CompositeActivity.OnListChanging(ActivityCollectionChangeEventArgs)\n  fullName: CompositeActivity.OnListChanging(ActivityCollectionChangeEventArgs)\n- uid: System.Workflow.Activities.SequenceActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.Activities.SequenceActivity\n  isExternal: false\n  name: OnWorkflowChangesCompleted(ActivityExecutionContext)\n  nameWithType: SequenceActivity.OnWorkflowChangesCompleted(ActivityExecutionContext)\n  fullName: SequenceActivity.OnWorkflowChangesCompleted(ActivityExecutionContext)\n- uid: System.Workflow.Activities.SequenceActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)\n  parent: System.Workflow.Activities.SequenceActivity\n  isExternal: false\n  name: IActivityEventListener<ActivityExecutionStatusChangedEventArgs>.OnEvent(Object, ActivityExecutionStatusChangedEventArgs)\n  nameWithType: SequenceActivity.IActivityEventListener<ActivityExecutionStatusChangedEventArgs>.OnEvent(Object, ActivityExecutionStatusChangedEventArgs)\n  fullName: SequenceActivity.IActivityEventListener<ActivityExecutionStatusChangedEventArgs>.OnEvent(Object, ActivityExecutionStatusChangedEventArgs)\n"}