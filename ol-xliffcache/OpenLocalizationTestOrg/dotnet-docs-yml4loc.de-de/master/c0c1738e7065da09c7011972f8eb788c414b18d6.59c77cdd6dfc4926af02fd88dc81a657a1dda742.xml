{"nodes":[{"content":"The default message handler used by <xref href=\"System.Net.Http.HttpClient\"></xref>.","nodes":[{"pos":[0,84],"content":"The default message handler used by <ph id=\"ph1\">&lt;xref href=\"System.Net.Http.HttpClient\"&gt;&lt;/xref&gt;</ph>.","source":"The default message handler used by <xref href=\"System.Net.Http.HttpClient\"></xref>."}],"pos":[1966,2051],"yaml":true},{"content":"The <xref:System.Net.Http.HttpClientHandler> class and classes derived from it enable developers to configure a variety of options ranging from proxies to authentication.","nodes":[{"pos":[0,170],"content":"The <xref:System.Net.Http.HttpClientHandler> class and classes derived from it enable developers to configure a variety of options ranging from proxies to authentication.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Http.HttpClientHandler&gt;</ph> class and classes derived from it enable developers to configure a variety of options ranging from proxies to authentication.","pos":[0,170],"source":"The <xref:System.Net.Http.HttpClientHandler> class and classes derived from it enable developers to configure a variety of options ranging from proxies to authentication."}]}],"pos":[2062,2233],"yaml":true,"extradata":"MT"},{"content":"Creates an instance of a <xref href=\"System.Net.Http.HttpClientHandler\"></xref> class.","nodes":[{"pos":[0,86],"content":"Creates an instance of a <ph id=\"ph1\">&lt;xref href=\"System.Net.Http.HttpClientHandler\"&gt;&lt;/xref&gt;</ph> class.","source":"Creates an instance of a <xref href=\"System.Net.Http.HttpClientHandler\"></xref> class."}],"pos":[4330,4417],"yaml":true},{"content":"Gets or sets a value that indicates whether the handler should follow redirection responses.","nodes":[{"pos":[0,92],"content":"Gets or sets a value that indicates whether the handler should follow redirection responses.","nodes":[{"content":"Gets or sets a value that indicates whether the handler should follow redirection responses.","pos":[0,92]}]}],"pos":[5939,6032],"yaml":true},{"content":"Set <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> to `true` if you want the handler to automatically follow HTTP redirection headers to the new location of the resource. The maximum number of redirections to follow is set by the <xref:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections%2A> property.  \n  \n If <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> is set to `false`, all HTTP responses with an HTTP status code from 300 to 399 are  returned to the application.  \n  \n The Authorization header is cleared on auto-redirects and the handler automatically tries to re-authenticate to the redirected location. In practice, this means that an application can't put custom authentication information into the Authorization header if it is possible to encounter redirection. Instead, the application must implement and register a custom authentication module.","nodes":[{"pos":[0,323],"content":"Set <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> to `true` if you want the handler to automatically follow HTTP redirection headers to the new location of the resource. The maximum number of redirections to follow is set by the <xref:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections%2A> property.","nodes":[{"content":"Set <ph id=\"ph1\">&lt;xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A&gt;</ph> to <ph id=\"ph2\">`true`</ph> if you want the handler to automatically follow HTTP redirection headers to the new location of the resource.","pos":[0,185],"source":"Set <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> to `true` if you want the handler to automatically follow HTTP redirection headers to the new location of the resource."},{"content":"The maximum number of redirections to follow is set by the <ph id=\"ph1\">&lt;xref:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections%2A&gt;</ph> property.","pos":[186,323],"source":" The maximum number of redirections to follow is set by the <xref:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections%2A> property."}]},{"pos":[330,507],"content":"If <ph id=\"ph1\">&lt;xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A&gt;</ph> is set to <ph id=\"ph2\">`false`</ph>, all HTTP responses with an HTTP status code from 300 to 399 are  returned to the application.","source":"If <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> is set to `false`, all HTTP responses with an HTTP status code from 300 to 399 are  returned to the application."},{"pos":[514,897],"content":"The Authorization header is cleared on auto-redirects and the handler automatically tries to re-authenticate to the redirected location. In practice, this means that an application can't put custom authentication information into the Authorization header if it is possible to encounter redirection. Instead, the application must implement and register a custom authentication module.","nodes":[{"content":"The Authorization header is cleared on auto-redirects and the handler automatically tries to re-authenticate to the redirected location. In practice, this means that an application can't put custom authentication information into the Authorization header if it is possible to encounter redirection. Instead, the application must implement and register a custom authentication module.","pos":[0,383],"nodes":[{"content":"The Authorization header is cleared on auto-redirects and the handler automatically tries to re-authenticate to the redirected location.","pos":[0,136]},{"content":"In practice, this means that an application can't put custom authentication information into the Authorization header if it is possible to encounter redirection.","pos":[137,298]},{"content":"Instead, the application must implement and register a custom authentication module.","pos":[299,383]}]}]}],"pos":[6043,6947],"yaml":true,"extradata":"MT"},{"content":"`true` if the if the handler should follow redirection responses; otherwise `false`. The default value is `true`.","nodes":[{"pos":[0,113],"content":"`true` if the if the handler should follow redirection responses; otherwise `false`. The default value is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the if the handler should follow redirection responses; otherwise <ph id=\"ph2\">`false`</ph>.","pos":[0,84],"source":"`true` if the if the handler should follow redirection responses; otherwise `false`."},{"content":"The default value is <ph id=\"ph1\">`true`</ph>.","pos":[85,113],"source":" The default value is `true`."}]}],"pos":[7072,7188],"yaml":true},{"content":"Gets or sets the type of decompression method used by the handler for automatic decompression of the HTTP content response.","nodes":[{"pos":[0,123],"content":"Gets or sets the type of decompression method used by the handler for automatic decompression of the HTTP content response.","nodes":[{"content":"Gets or sets the type of decompression method used by the handler for automatic decompression of the HTTP content response.","pos":[0,123]}]}],"pos":[8681,8805],"yaml":true},{"content":"For the .NET Framework 4.x `System.Net.Http` binary in the Global Assembly Cache (GAC), the default value is <xref:System.Net.DecompressionMethods.None>.\n\nFor the .NET Core implementation of <xref:System.Net.Http> provided by the [`System.Net.Http` NuGet package](https://www.nuget.org/packages/System.Net.Http/), the default is <xref:System.Net.DecompressionMethods.GZip> and <xref:System.Net.DecompressionMethods.Deflate>.\n\nWhen the NuGet package (v4.1.0 and later) is used on the .NET Framework (Desktop), the default matches the .NET Core implementation of <xref:System.Net.DecompressionMethods.GZip> and <xref:System.Net.DecompressionMethods.Deflate>.","nodes":[{"pos":[0,153],"content":"For the .NET Framework 4.x <ph id=\"ph1\">`System.Net.Http`</ph> binary in the Global Assembly Cache (GAC), the default value is <ph id=\"ph2\">&lt;xref:System.Net.DecompressionMethods.None&gt;</ph>.","source":"For the .NET Framework 4.x `System.Net.Http` binary in the Global Assembly Cache (GAC), the default value is <xref:System.Net.DecompressionMethods.None>."},{"pos":[155,424],"content":"For the .NET Core implementation of <ph id=\"ph1\">&lt;xref:System.Net.Http&gt;</ph> provided by the <bpt id=\"p1\">[</bpt><ph id=\"ph2\">`System.Net.Http`</ph> NuGet package<ept id=\"p1\">](https://www.nuget.org/packages/System.Net.Http/)</ept>, the default is <ph id=\"ph3\">&lt;xref:System.Net.DecompressionMethods.GZip&gt;</ph> and <ph id=\"ph4\">&lt;xref:System.Net.DecompressionMethods.Deflate&gt;</ph>.","source":"For the .NET Core implementation of <xref:System.Net.Http> provided by the [`System.Net.Http` NuGet package](https://www.nuget.org/packages/System.Net.Http/), the default is <xref:System.Net.DecompressionMethods.GZip> and <xref:System.Net.DecompressionMethods.Deflate>."},{"pos":[426,656],"content":"When the NuGet package (v4.1.0 and later) is used on the .NET Framework (Desktop), the default matches the .NET Core implementation of <xref:System.Net.DecompressionMethods.GZip> and <xref:System.Net.DecompressionMethods.Deflate>.","nodes":[{"content":"When the NuGet package (v4.1.0 and later) is used on the .NET Framework (Desktop), the default matches the .NET Core implementation of <ph id=\"ph1\">&lt;xref:System.Net.DecompressionMethods.GZip&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Net.DecompressionMethods.Deflate&gt;</ph>.","pos":[0,230],"source":"When the NuGet package (v4.1.0 and later) is used on the .NET Framework (Desktop), the default matches the .NET Core implementation of <xref:System.Net.DecompressionMethods.GZip> and <xref:System.Net.DecompressionMethods.Deflate>."}]}],"pos":[8816,9490],"yaml":true,"extradata":"MT"},{"content":"The automatic decompression method used by the handler.","nodes":[{"pos":[0,55],"content":"The automatic decompression method used by the handler.","nodes":[{"content":"The automatic decompression method used by the handler.","pos":[0,55]}]}],"pos":[9664,9720],"yaml":true},{"content":"Gets or sets a value that indicates if the certificate is automatically picked from the certificate store or if the caller is allowed to pass in a specific client certificate.","nodes":[{"pos":[0,175],"content":"Gets or sets a value that indicates if the certificate is automatically picked from the certificate store or if the caller is allowed to pass in a specific client certificate.","nodes":[{"content":"Gets or sets a value that indicates if the certificate is automatically picked from the certificate store or if the caller is allowed to pass in a specific client certificate.","pos":[0,175]}]}],"pos":[12449,12625],"yaml":true},{"content":"The collection of security certificates associated with this handler.","nodes":[{"pos":[0,69],"content":"The collection of security certificates associated with this handler.","nodes":[{"content":"The collection of security certificates associated with this handler.","pos":[0,69]}]}],"pos":[12817,12887],"yaml":true},{"content":"Gets or sets the cookie container used to store server cookies by the handler.","nodes":[{"pos":[0,78],"content":"Gets or sets the cookie container used to store server cookies by the handler.","nodes":[{"content":"Gets or sets the cookie container used to store server cookies by the handler.","pos":[0,78]}]}],"pos":[15587,15666],"yaml":true},{"content":"The <xref:System.Net.Http.HttpClientHandler.CookieContainer%2A> property provides an instance of the <xref:System.Net.CookieContainer> class that contains the cookies associated with this handler.  \n  \n If the <xref:System.Net.Http.HttpClientHandler.UseCookies%2A> property is `true`, the <xref:System.Net.Http.HttpClientHandler.CookieContainer%2A> property represents the cookie container used to store the server cookies. The user can set custom cookies before sending requests using this property. If the  <xref:System.Net.Http.HttpClientHandler.UseCookies%2A> property is false and the user adds cookies to <xref:System.Net.Http.HttpClientHandler.CookieContainer%2A>, cookies are ignored and not sent to the server. Setting the <xref:System.Net.Http.HttpClientHandler.CookieContainer%2A> to `null` will throw an exception.","nodes":[{"pos":[0,196],"content":"The <xref:System.Net.Http.HttpClientHandler.CookieContainer%2A> property provides an instance of the <xref:System.Net.CookieContainer> class that contains the cookies associated with this handler.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Http.HttpClientHandler.CookieContainer%2A&gt;</ph> property provides an instance of the <ph id=\"ph2\">&lt;xref:System.Net.CookieContainer&gt;</ph> class that contains the cookies associated with this handler.","pos":[0,196],"source":"The <xref:System.Net.Http.HttpClientHandler.CookieContainer%2A> property provides an instance of the <xref:System.Net.CookieContainer> class that contains the cookies associated with this handler."}]},{"pos":[203,826],"content":"If the <xref:System.Net.Http.HttpClientHandler.UseCookies%2A> property is `true`, the <xref:System.Net.Http.HttpClientHandler.CookieContainer%2A> property represents the cookie container used to store the server cookies. The user can set custom cookies before sending requests using this property. If the  <xref:System.Net.Http.HttpClientHandler.UseCookies%2A> property is false and the user adds cookies to <xref:System.Net.Http.HttpClientHandler.CookieContainer%2A>, cookies are ignored and not sent to the server. Setting the <xref:System.Net.Http.HttpClientHandler.CookieContainer%2A> to `null` will throw an exception.","nodes":[{"content":"If the <ph id=\"ph1\">&lt;xref:System.Net.Http.HttpClientHandler.UseCookies%2A&gt;</ph> property is <ph id=\"ph2\">`true`</ph>, the <ph id=\"ph3\">&lt;xref:System.Net.Http.HttpClientHandler.CookieContainer%2A&gt;</ph> property represents the cookie container used to store the server cookies.","pos":[0,220],"source":"If the <xref:System.Net.Http.HttpClientHandler.UseCookies%2A> property is `true`, the <xref:System.Net.Http.HttpClientHandler.CookieContainer%2A> property represents the cookie container used to store the server cookies."},{"content":"The user can set custom cookies before sending requests using this property.","pos":[221,297]},{"content":"If the  <ph id=\"ph1\">&lt;xref:System.Net.Http.HttpClientHandler.UseCookies%2A&gt;</ph> property is false and the user adds cookies to <ph id=\"ph2\">&lt;xref:System.Net.Http.HttpClientHandler.CookieContainer%2A&gt;</ph>, cookies are ignored and not sent to the server.","pos":[298,516],"source":" If the  <xref:System.Net.Http.HttpClientHandler.UseCookies%2A> property is false and the user adds cookies to <xref:System.Net.Http.HttpClientHandler.CookieContainer%2A>, cookies are ignored and not sent to the server."},{"content":"Setting the <ph id=\"ph1\">&lt;xref:System.Net.Http.HttpClientHandler.CookieContainer%2A&gt;</ph> to <ph id=\"ph2\">`null`</ph> will throw an exception.","pos":[517,623],"source":" Setting the <xref:System.Net.Http.HttpClientHandler.CookieContainer%2A> to `null` will throw an exception."}]}],"pos":[15677,16508],"yaml":true,"extradata":"MT"},{"content":"The cookie container used to store server cookies by the handler.","nodes":[{"pos":[0,65],"content":"The cookie container used to store server cookies by the handler.","nodes":[{"content":"The cookie container used to store server cookies by the handler.","pos":[0,65]}]}],"pos":[16665,16731],"yaml":true},{"content":"Gets or sets authentication information used by this handler.","nodes":[{"pos":[0,61],"content":"Gets or sets authentication information used by this handler.","nodes":[{"content":"Gets or sets authentication information used by this handler.","pos":[0,61]}]}],"pos":[18156,18218],"yaml":true},{"content":"The authentication credentials associated with the handler. The default is `null`.","nodes":[{"pos":[0,82],"content":"The authentication credentials associated with the handler. The default is `null`.","nodes":[{"content":"The authentication credentials associated with the handler.","pos":[0,59]},{"content":"The default is <ph id=\"ph1\">`null`</ph>.","pos":[60,82],"source":" The default is `null`."}]}],"pos":[18365,18448],"yaml":true},{"content":"Releases the unmanaged resources used by the <xref href=\"System.Net.Http.HttpClientHandler\"></xref> and optionally disposes of the managed resources.","nodes":[{"pos":[0,149],"content":"Releases the unmanaged resources used by the <ph id=\"ph1\">&lt;xref href=\"System.Net.Http.HttpClientHandler\"&gt;&lt;/xref&gt;</ph> and optionally disposes of the managed resources.","source":"Releases the unmanaged resources used by the <xref href=\"System.Net.Http.HttpClientHandler\"></xref> and optionally disposes of the managed resources."}],"pos":[21109,21259],"yaml":true},{"content":"This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.  \n  \n When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Http.HttpClientHandler> references. This method invokes the `Dispose()` method of each referenced object.","nodes":[{"pos":[0,293],"content":"This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.","nodes":[{"content":"This method is called by the public <ph id=\"ph1\">`Dispose()`</ph> method and the <ph id=\"ph2\">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.","pos":[0,103],"source":"This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method."},{"content":"<ph id=\"ph1\">`Dispose()`</ph> invokes the protected <ph id=\"ph2\">`Dispose(Boolean)`</ph> method with the <ph id=\"ph3\">`disposing`</ph> parameter set to <ph id=\"ph4\">`true`</ph>.","pos":[104,209],"source":"`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`."},{"content":"<ph id=\"ph1\">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id=\"ph2\">`Dispose`</ph> with <ph id=\"ph3\">`disposing`</ph> set to <ph id=\"ph4\">`false`</ph>.","pos":[210,293],"source":" <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`."}]},{"pos":[300,537],"content":"When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Http.HttpClientHandler> references. This method invokes the `Dispose()` method of each referenced object.","nodes":[{"content":"When the <ph id=\"ph1\">`disposing`</ph> parameter is <ph id=\"ph2\">`true`</ph>, this method releases all resources held by any managed objects that this <ph id=\"ph3\">&lt;xref:System.Net.Http.HttpClientHandler&gt;</ph> references.","pos":[0,167],"source":"When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Http.HttpClientHandler> references."},{"content":"This method invokes the <ph id=\"ph1\">`Dispose()`</ph> method of each referenced object.","pos":[168,237],"source":" This method invokes the `Dispose()` method of each referenced object."}]}],"pos":[21270,21812],"yaml":true,"extradata":"MT"},{"content":"`true` to release both managed and unmanaged resources; `false` to releases only unmanaged resources.","nodes":[{"pos":[0,101],"content":"<ph id=\"ph1\">`true`</ph> to release both managed and unmanaged resources; <ph id=\"ph2\">`false`</ph> to releases only unmanaged resources.","source":"`true` to release both managed and unmanaged resources; `false` to releases only unmanaged resources."}],"pos":[21967,22071],"yaml":true},{"content":"Gets or sets the maximum number of redirects that the handler follows.","nodes":[{"pos":[0,70],"content":"Gets or sets the maximum number of redirects that the handler follows.","nodes":[{"content":"Gets or sets the maximum number of redirects that the handler follows.","pos":[0,70]}]}],"pos":[23566,23637],"yaml":true},{"content":"The <xref:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections%2A> property sets the maximum number of redirections for the request to follow if the <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> property is `true`.","nodes":[{"pos":[0,236],"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections%2A&gt;</ph> property sets the maximum number of redirections for the request to follow if the <ph id=\"ph2\">&lt;xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A&gt;</ph> property is <ph id=\"ph3\">`true`</ph>.","source":"The <xref:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections%2A> property sets the maximum number of redirections for the request to follow if the <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> property is `true`."}],"pos":[23648,23885],"yaml":true,"extradata":"MT"},{"content":"The maximum number of redirection responses that the handler follows. The default value is 50.","nodes":[{"pos":[0,94],"content":"The maximum number of redirection responses that the handler follows. The default value is 50.","nodes":[{"content":"The maximum number of redirection responses that the handler follows. The default value is 50.","pos":[0,94],"nodes":[{"content":"The maximum number of redirection responses that the handler follows.","pos":[0,69]},{"content":"The default value is 50.","pos":[70,94]}]}]}],"pos":[24014,24109],"yaml":true},{"content":"Gets or sets the maximum request content buffer size used by the handler.","nodes":[{"pos":[0,73],"content":"Gets or sets the maximum request content buffer size used by the handler.","nodes":[{"content":"Gets or sets the maximum request content buffer size used by the handler.","pos":[0,73]}]}],"pos":[26799,26873],"yaml":true},{"content":"An app can set the <xref:System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize%2A> property to a lower value to limit the size of the request buffer. If the size of the request content is greater than the <xref:System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize%2A> property, an exception is thrown.","nodes":[{"pos":[0,318],"content":"An app can set the <xref:System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize%2A> property to a lower value to limit the size of the request buffer. If the size of the request content is greater than the <xref:System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize%2A> property, an exception is thrown.","nodes":[{"content":"An app can set the <xref:System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize%2A> property to a lower value to limit the size of the request buffer. If the size of the request content is greater than the <xref:System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize%2A> property, an exception is thrown.","pos":[0,318],"nodes":[{"content":"An app can set the <ph id=\"ph1\">&lt;xref:System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize%2A&gt;</ph> property to a lower value to limit the size of the request buffer.","pos":[0,157],"source":"An app can set the <xref:System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize%2A> property to a lower value to limit the size of the request buffer."},{"content":"If the size of the request content is greater than the <ph id=\"ph1\">&lt;xref:System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize%2A&gt;</ph> property, an exception is thrown.","pos":[158,318],"source":" If the size of the request content is greater than the <xref:System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize%2A> property, an exception is thrown."}]}]}],"pos":[26884,27203],"yaml":true,"extradata":"MT"},{"content":"The maximum request content buffer size in bytes. The default value is 2 gigabytes.","nodes":[{"pos":[0,83],"content":"The maximum request content buffer size in bytes. The default value is 2 gigabytes.","nodes":[{"content":"The maximum request content buffer size in bytes. The default value is 2 gigabytes.","pos":[0,83],"nodes":[{"content":"The maximum request content buffer size in bytes.","pos":[0,49]},{"content":"The default value is 2 gigabytes.","pos":[50,83]}]}]}],"pos":[27336,27420],"yaml":true},{"content":"Gets or sets a value that indicates whether the handler sends an Authorization header with the request.","nodes":[{"pos":[0,103],"content":"Gets or sets a value that indicates whether the handler sends an Authorization header with the request.","nodes":[{"content":"Gets or sets a value that indicates whether the handler sends an Authorization header with the request.","pos":[0,103]}]}],"pos":[30049,30153],"yaml":true},{"content":"After a client request to a specific <xref:System.Uri> is successfully authenticated, if the <xref:System.Net.Http.HttpClientHandler.PreAuthenticate%2A> property is `true` and credentials are supplied, <xref:System.Net.Http.HttpClientHandler> matches against the credential list supplied in the  <xref:System.Net.Http.HttpClientHandler.Credentials%2A> property. The Authorization header is sent with each request to any <xref:System.Uri> that matches the specific <xref:System.Uri> up to the last forward slash.  \n  \n If the client request to a specific <xref:System.Uri> is not successfully authenticated, the request uses standard authentication procedures.  \n  \n With the exception of the first request, the <xref:System.Net.Http.HttpClientHandler.PreAuthenticate%2A> property indicates whether to send authentication information with subsequent requests to a <xref:System.Uri> that matches the specific <xref:System.Uri> up to the last forward slash without waiting to be challenged by the server.","nodes":[{"pos":[0,511],"content":"After a client request to a specific <xref:System.Uri> is successfully authenticated, if the <xref:System.Net.Http.HttpClientHandler.PreAuthenticate%2A> property is `true` and credentials are supplied, <xref:System.Net.Http.HttpClientHandler> matches against the credential list supplied in the  <xref:System.Net.Http.HttpClientHandler.Credentials%2A> property. The Authorization header is sent with each request to any <xref:System.Uri> that matches the specific <xref:System.Uri> up to the last forward slash.","nodes":[{"content":"After a client request to a specific <ph id=\"ph1\">&lt;xref:System.Uri&gt;</ph> is successfully authenticated, if the <ph id=\"ph2\">&lt;xref:System.Net.Http.HttpClientHandler.PreAuthenticate%2A&gt;</ph> property is <ph id=\"ph3\">`true`</ph> and credentials are supplied, <ph id=\"ph4\">&lt;xref:System.Net.Http.HttpClientHandler&gt;</ph> matches against the credential list supplied in the  <ph id=\"ph5\">&lt;xref:System.Net.Http.HttpClientHandler.Credentials%2A&gt;</ph> property.","pos":[0,361],"source":"After a client request to a specific <xref:System.Uri> is successfully authenticated, if the <xref:System.Net.Http.HttpClientHandler.PreAuthenticate%2A> property is `true` and credentials are supplied, <xref:System.Net.Http.HttpClientHandler> matches against the credential list supplied in the  <xref:System.Net.Http.HttpClientHandler.Credentials%2A> property."},{"content":"The Authorization header is sent with each request to any <ph id=\"ph1\">&lt;xref:System.Uri&gt;</ph> that matches the specific <ph id=\"ph2\">&lt;xref:System.Uri&gt;</ph> up to the last forward slash.","pos":[362,511],"source":" The Authorization header is sent with each request to any <xref:System.Uri> that matches the specific <xref:System.Uri> up to the last forward slash."}]},{"pos":[518,659],"content":"If the client request to a specific <xref:System.Uri> is not successfully authenticated, the request uses standard authentication procedures.","nodes":[{"content":"If the client request to a specific <ph id=\"ph1\">&lt;xref:System.Uri&gt;</ph> is not successfully authenticated, the request uses standard authentication procedures.","pos":[0,141],"source":"If the client request to a specific <xref:System.Uri> is not successfully authenticated, the request uses standard authentication procedures."}]},{"pos":[666,1001],"content":"With the exception of the first request, the <xref:System.Net.Http.HttpClientHandler.PreAuthenticate%2A> property indicates whether to send authentication information with subsequent requests to a <xref:System.Uri> that matches the specific <xref:System.Uri> up to the last forward slash without waiting to be challenged by the server.","nodes":[{"content":"With the exception of the first request, the <ph id=\"ph1\">&lt;xref:System.Net.Http.HttpClientHandler.PreAuthenticate%2A&gt;</ph> property indicates whether to send authentication information with subsequent requests to a <ph id=\"ph2\">&lt;xref:System.Uri&gt;</ph> that matches the specific <ph id=\"ph3\">&lt;xref:System.Uri&gt;</ph> up to the last forward slash without waiting to be challenged by the server.","pos":[0,335],"source":"With the exception of the first request, the <xref:System.Net.Http.HttpClientHandler.PreAuthenticate%2A> property indicates whether to send authentication information with subsequent requests to a <xref:System.Uri> that matches the specific <xref:System.Uri> up to the last forward slash without waiting to be challenged by the server."}]}],"pos":[30164,31172],"yaml":true,"extradata":"MT"},{"content":"`true` for the handler to send an HTTP Authorization header with requests after authentication has taken place; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,155],"content":"`true` for the handler to send an HTTP Authorization header with requests after authentication has taken place; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> for the handler to send an HTTP Authorization header with requests after authentication has taken place; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,131],"source":"`true` for the handler to send an HTTP Authorization header with requests after authentication has taken place; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[132,155],"source":" The default is `false`."}]}],"pos":[31295,31453],"yaml":true},{"content":"Gets or sets proxy information used by the handler.","nodes":[{"pos":[0,51],"content":"Gets or sets proxy information used by the handler.","nodes":[{"content":"Gets or sets proxy information used by the handler.","pos":[0,51]}]}],"pos":[33998,34050],"yaml":true},{"content":"The <xref:System.Net.Http.HttpClientHandler.Proxy%2A> property identifies the <xref:System.Net.WebProxy> object to use to process requests to Internet resources. To specify that no proxy should be used, set the <xref:System.Net.Http.HttpClientHandler.Proxy%2A> property to the proxy instance returned by the <xref:System.Net.GlobalProxySelection.GetEmptyWebProxy%2A> method.  \n  \n The local computer or application config file may specify that a default proxy be used. If the <xref:System.Net.Http.HttpClientHandler.Proxy%2A> property is specified, then the proxy settings from the <xref:System.Net.Http.HttpClientHandler.Proxy%2A> property override the local computer or application config file and the handler will use the proxy settings specified. If no proxy is specified in a config file and the <xref:System.Net.Http.HttpClientHandler.Proxy%2A> property is unspecified, the handler uses the proxy settings inherited from Internet Explorer on the local computer. If there are no proxy settings in Internet Explorer, the request is sent directly to the server.  \n  \n The <xref:System.Net.Http.HttpClientHandler> class parses a proxy bypass list with wildcard characters inherited from Internet Explorer the same as the bypass list is parsed directly by Internet Explorer. For example, the <xref:System.Net.Http.HttpClientHandler> class will parse a bypass list of \"nt*\" from Internet Explorer as a regular expression of \"nt.\\*\". So a URL of \" http://nt.com\" would bypass the proxy using the <xref:System.Net.Http.HttpClientHandler> class and using Internet Explorer.  \n  \n The <xref:System.Net.Http.HttpClientHandler> class supports local proxy bypass. The class considers a destination to be local if any of the following conditions are met:  \n  \n1.  The destination contains a flat name (no dots in the URL).  \n  \n2.  The destination contains a loopback address (<xref:System.Net.IPAddress.Loopback> or <xref:System.Net.IPAddress.IPv6Loopback>) or the destination contains an <xref:System.Net.IPAddress> assigned to the local computer.  \n  \n3.  The domain suffix of the destination matches the local computer's domain suffix (<xref:System.Net.NetworkInformation.IPGlobalProperties.DomainName%2A>).","nodes":[{"pos":[0,374],"content":"The <xref:System.Net.Http.HttpClientHandler.Proxy%2A> property identifies the <xref:System.Net.WebProxy> object to use to process requests to Internet resources. To specify that no proxy should be used, set the <xref:System.Net.Http.HttpClientHandler.Proxy%2A> property to the proxy instance returned by the <xref:System.Net.GlobalProxySelection.GetEmptyWebProxy%2A> method.","nodes":[{"content":"The <xref:System.Net.Http.HttpClientHandler.Proxy%2A> property identifies the <xref:System.Net.WebProxy> object to use to process requests to Internet resources. To specify that no proxy should be used, set the <xref:System.Net.Http.HttpClientHandler.Proxy%2A> property to the proxy instance returned by the <xref:System.Net.GlobalProxySelection.GetEmptyWebProxy%2A> method.","pos":[0,374],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Http.HttpClientHandler.Proxy%2A&gt;</ph> property identifies the <ph id=\"ph2\">&lt;xref:System.Net.WebProxy&gt;</ph> object to use to process requests to Internet resources.","pos":[0,161],"source":"The <xref:System.Net.Http.HttpClientHandler.Proxy%2A> property identifies the <xref:System.Net.WebProxy> object to use to process requests to Internet resources."},{"content":"To specify that no proxy should be used, set the <ph id=\"ph1\">&lt;xref:System.Net.Http.HttpClientHandler.Proxy%2A&gt;</ph> property to the proxy instance returned by the <ph id=\"ph2\">&lt;xref:System.Net.GlobalProxySelection.GetEmptyWebProxy%2A&gt;</ph> method.","pos":[162,374],"source":" To specify that no proxy should be used, set the <xref:System.Net.Http.HttpClientHandler.Proxy%2A> property to the proxy instance returned by the <xref:System.Net.GlobalProxySelection.GetEmptyWebProxy%2A> method."}]}]},{"pos":[381,1064],"content":"The local computer or application config file may specify that a default proxy be used. If the <xref:System.Net.Http.HttpClientHandler.Proxy%2A> property is specified, then the proxy settings from the <xref:System.Net.Http.HttpClientHandler.Proxy%2A> property override the local computer or application config file and the handler will use the proxy settings specified. If no proxy is specified in a config file and the <xref:System.Net.Http.HttpClientHandler.Proxy%2A> property is unspecified, the handler uses the proxy settings inherited from Internet Explorer on the local computer. If there are no proxy settings in Internet Explorer, the request is sent directly to the server.","nodes":[{"content":"The local computer or application config file may specify that a default proxy be used. If the <xref:System.Net.Http.HttpClientHandler.Proxy%2A> property is specified, then the proxy settings from the <xref:System.Net.Http.HttpClientHandler.Proxy%2A> property override the local computer or application config file and the handler will use the proxy settings specified. If no proxy is specified in a config file and the <xref:System.Net.Http.HttpClientHandler.Proxy%2A> property is unspecified, the handler uses the proxy settings inherited from Internet Explorer on the local computer. If there are no proxy settings in Internet Explorer, the request is sent directly to the server.","pos":[0,683],"nodes":[{"content":"The local computer or application config file may specify that a default proxy be used.","pos":[0,87]},{"content":"If the <ph id=\"ph1\">&lt;xref:System.Net.Http.HttpClientHandler.Proxy%2A&gt;</ph> property is specified, then the proxy settings from the <ph id=\"ph2\">&lt;xref:System.Net.Http.HttpClientHandler.Proxy%2A&gt;</ph> property override the local computer or application config file and the handler will use the proxy settings specified.","pos":[88,369],"source":" If the <xref:System.Net.Http.HttpClientHandler.Proxy%2A> property is specified, then the proxy settings from the <xref:System.Net.Http.HttpClientHandler.Proxy%2A> property override the local computer or application config file and the handler will use the proxy settings specified."},{"content":"If no proxy is specified in a config file and the <ph id=\"ph1\">&lt;xref:System.Net.Http.HttpClientHandler.Proxy%2A&gt;</ph> property is unspecified, the handler uses the proxy settings inherited from Internet Explorer on the local computer.","pos":[370,586],"source":" If no proxy is specified in a config file and the <xref:System.Net.Http.HttpClientHandler.Proxy%2A> property is unspecified, the handler uses the proxy settings inherited from Internet Explorer on the local computer."},{"content":"If there are no proxy settings in Internet Explorer, the request is sent directly to the server.","pos":[587,683]}]}]},{"pos":[1071,1570],"content":"The <xref:System.Net.Http.HttpClientHandler> class parses a proxy bypass list with wildcard characters inherited from Internet Explorer the same as the bypass list is parsed directly by Internet Explorer. For example, the <xref:System.Net.Http.HttpClientHandler> class will parse a bypass list of \"nt*\" from Internet Explorer as a regular expression of \"nt.\\*\". So a URL of \" http://nt.com\" would bypass the proxy using the <xref:System.Net.Http.HttpClientHandler> class and using Internet Explorer.","nodes":[{"content":"The <xref:System.Net.Http.HttpClientHandler> class parses a proxy bypass list with wildcard characters inherited from Internet Explorer the same as the bypass list is parsed directly by Internet Explorer. For example, the <xref:System.Net.Http.HttpClientHandler> class will parse a bypass list of \"nt*\" from Internet Explorer as a regular expression of \"nt.\\*\". So a URL of \" http://nt.com\" would bypass the proxy using the <xref:System.Net.Http.HttpClientHandler> class and using Internet Explorer.","pos":[0,499],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Http.HttpClientHandler&gt;</ph> class parses a proxy bypass list with wildcard characters inherited from Internet Explorer the same as the bypass list is parsed directly by Internet Explorer.","pos":[0,204],"source":"The <xref:System.Net.Http.HttpClientHandler> class parses a proxy bypass list with wildcard characters inherited from Internet Explorer the same as the bypass list is parsed directly by Internet Explorer."},{"content":"For example, the <ph id=\"ph1\">&lt;xref:System.Net.Http.HttpClientHandler&gt;</ph> class will parse a bypass list of \"nt*\" from Internet Explorer as a regular expression of \"nt.<ph id=\"ph2\">\\*</ph>\".","pos":[205,361],"source":" For example, the <xref:System.Net.Http.HttpClientHandler> class will parse a bypass list of \"nt*\" from Internet Explorer as a regular expression of \"nt.\\*\"."},{"content":"So a URL of \" http://nt.com\" would bypass the proxy using the <ph id=\"ph1\">&lt;xref:System.Net.Http.HttpClientHandler&gt;</ph> class and using Internet Explorer.","pos":[362,499],"source":" So a URL of \" http://nt.com\" would bypass the proxy using the <xref:System.Net.Http.HttpClientHandler> class and using Internet Explorer."}]}]},{"pos":[1577,1746],"content":"The <xref:System.Net.Http.HttpClientHandler> class supports local proxy bypass. The class considers a destination to be local if any of the following conditions are met:","nodes":[{"content":"The <xref:System.Net.Http.HttpClientHandler> class supports local proxy bypass. The class considers a destination to be local if any of the following conditions are met:","pos":[0,169],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Http.HttpClientHandler&gt;</ph> class supports local proxy bypass.","pos":[0,79],"source":"The <xref:System.Net.Http.HttpClientHandler> class supports local proxy bypass."},{"content":"The class considers a destination to be local if any of the following conditions are met:","pos":[80,169]}]}]},{"pos":[1756,1814],"content":"The destination contains a flat name (no dots in the URL).","nodes":[{"content":"The destination contains a flat name (no dots in the URL).","pos":[0,58]}]},{"pos":[1824,2041],"content":"The destination contains a loopback address (<xref:System.Net.IPAddress.Loopback> or <xref:System.Net.IPAddress.IPv6Loopback>) or the destination contains an <xref:System.Net.IPAddress> assigned to the local computer.","nodes":[{"content":"The destination contains a loopback address (<ph id=\"ph1\">&lt;xref:System.Net.IPAddress.Loopback&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Net.IPAddress.IPv6Loopback&gt;</ph>) or the destination contains an <ph id=\"ph3\">&lt;xref:System.Net.IPAddress&gt;</ph> assigned to the local computer.","pos":[0,217],"source":"The destination contains a loopback address (<xref:System.Net.IPAddress.Loopback> or <xref:System.Net.IPAddress.IPv6Loopback>) or the destination contains an <xref:System.Net.IPAddress> assigned to the local computer."}]},{"pos":[2051,2203],"content":"The domain suffix of the destination matches the local computer's domain suffix (<xref:System.Net.NetworkInformation.IPGlobalProperties.DomainName%2A>).","nodes":[{"content":"The domain suffix of the destination matches the local computer's domain suffix (<ph id=\"ph1\">&lt;xref:System.Net.NetworkInformation.IPGlobalProperties.DomainName%2A&gt;</ph>).","pos":[0,152],"source":"The domain suffix of the destination matches the local computer's domain suffix (<xref:System.Net.NetworkInformation.IPGlobalProperties.DomainName%2A>)."}]}],"pos":[34061,36286],"yaml":true,"extradata":"MT"},{"content":"The proxy information used by the handler. The default value is `null`.","nodes":[{"pos":[0,71],"content":"The proxy information used by the handler. The default value is `null`.","nodes":[{"content":"The proxy information used by the handler.","pos":[0,42]},{"content":"The default value is <ph id=\"ph1\">`null`</ph>.","pos":[43,71],"source":" The default value is `null`."}]}],"pos":[36421,36493],"yaml":true},{"content":"Creates an instance of  <xref href=\"System.Net.Http.HttpResponseMessage\"></xref> based on the information provided in the <xref href=\"System.Net.Http.HttpRequestMessage\"></xref> as an operation that will not block.","nodes":[{"pos":[0,214],"content":"Creates an instance of  <ph id=\"ph1\">&lt;xref href=\"System.Net.Http.HttpResponseMessage\"&gt;&lt;/xref&gt;</ph> based on the information provided in the <ph id=\"ph2\">&lt;xref href=\"System.Net.Http.HttpRequestMessage\"&gt;&lt;/xref&gt;</ph> as an operation that will not block.","source":"Creates an instance of  <xref href=\"System.Net.Http.HttpResponseMessage\"></xref> based on the information provided in the <xref href=\"System.Net.Http.HttpRequestMessage\"></xref> as an operation that will not block."}],"pos":[38224,38439],"yaml":true},{"content":"This operation is does not block. It returns an instance of <xref:System.Threading.Tasks.Task%601> to represent the asynchronous operation. When the operation completes, <xref:System.Threading.Tasks.Task%601.Result%2A> contains the response message.","nodes":[{"pos":[0,249],"content":"This operation is does not block. It returns an instance of <xref:System.Threading.Tasks.Task%601> to represent the asynchronous operation. When the operation completes, <xref:System.Threading.Tasks.Task%601.Result%2A> contains the response message.","nodes":[{"content":"This operation is does not block. It returns an instance of <xref:System.Threading.Tasks.Task%601> to represent the asynchronous operation. When the operation completes, <xref:System.Threading.Tasks.Task%601.Result%2A> contains the response message.","pos":[0,249],"nodes":[{"content":"This operation is does not block.","pos":[0,33]},{"content":"It returns an instance of <ph id=\"ph1\">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> to represent the asynchronous operation.","pos":[34,139],"source":" It returns an instance of <xref:System.Threading.Tasks.Task%601> to represent the asynchronous operation."},{"content":"When the operation completes, <ph id=\"ph1\">&lt;xref:System.Threading.Tasks.Task%601.Result%2A&gt;</ph> contains the response message.","pos":[140,249],"source":" When the operation completes, <xref:System.Threading.Tasks.Task%601.Result%2A> contains the response message."}]}]}],"pos":[38450,38700],"yaml":true,"extradata":"MT"},{"content":"The HTTP request message.","nodes":[{"pos":[0,25],"content":"The HTTP request message.","nodes":[{"content":"The HTTP request message.","pos":[0,25]}]}],"pos":[39017,39043],"yaml":true},{"content":"A cancellation token to cancel the operation.","nodes":[{"pos":[0,45],"content":"A cancellation token to cancel the operation.","nodes":[{"content":"A cancellation token to cancel the operation.","pos":[0,45]}]}],"pos":[39137,39183],"yaml":true},{"content":"The task object representing the asynchronous operation.","nodes":[{"pos":[0,56],"content":"The task object representing the asynchronous operation.","nodes":[{"content":"The task object representing the asynchronous operation.","pos":[0,56]}]}],"pos":[39291,39348],"yaml":true},{"content":"The <code>request</code> was `null`.","nodes":[{"pos":[0,36],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">request</ph><ept id=\"p1\">&lt;/code&gt;</ept> was <ph id=\"ph2\">`null`</ph>.","source":"The <code>request</code> was `null`."}],"pos":[39521,39558],"yaml":true},{"content":"Gets a value that indicates whether the handler supports automatic response content decompression.","nodes":[{"pos":[0,98],"content":"Gets a value that indicates whether the handler supports automatic response content decompression.","nodes":[{"content":"Gets a value that indicates whether the handler supports automatic response content decompression.","pos":[0,98]}]}],"pos":[43883,43982],"yaml":true},{"content":"`true` if the if the handler supports automatic response content decompression; otherwise `false`. The default value is `true`.","nodes":[{"pos":[0,127],"content":"`true` if the if the handler supports automatic response content decompression; otherwise `false`. The default value is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the if the handler supports automatic response content decompression; otherwise <ph id=\"ph2\">`false`</ph>.","pos":[0,98],"source":"`true` if the if the handler supports automatic response content decompression; otherwise `false`."},{"content":"The default value is <ph id=\"ph1\">`true`</ph>.","pos":[99,127],"source":" The default value is `true`."}]}],"pos":[44123,44253],"yaml":true},{"content":"Gets a value that indicates whether the handler supports proxy settings.","nodes":[{"pos":[0,72],"content":"Gets a value that indicates whether the handler supports proxy settings.","nodes":[{"content":"Gets a value that indicates whether the handler supports proxy settings.","pos":[0,72]}]}],"pos":[45705,45778],"yaml":true},{"content":"`true` if the if the handler supports proxy settings; otherwise `false`. The default value is `true`.","nodes":[{"pos":[0,101],"content":"`true` if the if the handler supports proxy settings; otherwise `false`. The default value is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the if the handler supports proxy settings; otherwise <ph id=\"ph2\">`false`</ph>.","pos":[0,72],"source":"`true` if the if the handler supports proxy settings; otherwise `false`."},{"content":"The default value is <ph id=\"ph1\">`true`</ph>.","pos":[73,101],"source":" The default value is `true`."}]}],"pos":[45902,46006],"yaml":true},{"content":"Gets a value that indicates whether the handler supports configuration settings for the <xref href=\"System.Net.Http.HttpClientHandler.AllowAutoRedirect\"></xref> and <xref href=\"System.Net.Http.HttpClientHandler.MaxAutomaticRedirections\"></xref> properties.","nodes":[{"pos":[0,256],"content":"Gets a value that indicates whether the handler supports configuration settings for the <ph id=\"ph1\">&lt;xref href=\"System.Net.Http.HttpClientHandler.AllowAutoRedirect\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph2\">&lt;xref href=\"System.Net.Http.HttpClientHandler.MaxAutomaticRedirections\"&gt;&lt;/xref&gt;</ph> properties.","source":"Gets a value that indicates whether the handler supports configuration settings for the <xref href=\"System.Net.Http.HttpClientHandler.AllowAutoRedirect\"></xref> and <xref href=\"System.Net.Http.HttpClientHandler.MaxAutomaticRedirections\"></xref> properties."}],"pos":[47537,47794],"yaml":true},{"content":"`true` if the if the handler supports configuration settings for the <xref href=\"System.Net.Http.HttpClientHandler.AllowAutoRedirect\"></xref> and <xref href=\"System.Net.Http.HttpClientHandler.MaxAutomaticRedirections\"></xref> properties; otherwise `false`. The default value is `true`.","nodes":[{"pos":[0,285],"content":"`true` if the if the handler supports configuration settings for the <xref href=\"System.Net.Http.HttpClientHandler.AllowAutoRedirect\"></xref> and <xref href=\"System.Net.Http.HttpClientHandler.MaxAutomaticRedirections\"></xref> properties; otherwise `false`. The default value is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the if the handler supports configuration settings for the <ph id=\"ph2\">&lt;xref href=\"System.Net.Http.HttpClientHandler.AllowAutoRedirect\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph3\">&lt;xref href=\"System.Net.Http.HttpClientHandler.MaxAutomaticRedirections\"&gt;&lt;/xref&gt;</ph> properties; otherwise <ph id=\"ph4\">`false`</ph>.","pos":[0,256],"source":"`true` if the if the handler supports configuration settings for the <xref href=\"System.Net.Http.HttpClientHandler.AllowAutoRedirect\"></xref> and <xref href=\"System.Net.Http.HttpClientHandler.MaxAutomaticRedirections\"></xref> properties; otherwise `false`."},{"content":"The default value is <ph id=\"ph1\">`true`</ph>.","pos":[257,285],"source":" The default value is `true`."}]}],"pos":[47934,48222],"yaml":true},{"content":"Gets or sets a value that indicates whether the handler uses the  <xref href=\"System.Net.Http.HttpClientHandler.CookieContainer\"></xref> property  to store server cookies and uses these cookies when sending requests.","nodes":[{"pos":[0,216],"content":"Gets or sets a value that indicates whether the handler uses the  <ph id=\"ph1\">&lt;xref href=\"System.Net.Http.HttpClientHandler.CookieContainer\"&gt;&lt;/xref&gt;</ph> property  to store server cookies and uses these cookies when sending requests.","source":"Gets or sets a value that indicates whether the handler uses the  <xref href=\"System.Net.Http.HttpClientHandler.CookieContainer\"></xref> property  to store server cookies and uses these cookies when sending requests."}],"pos":[49655,49872],"yaml":true},{"content":"`true` if the if the handler supports uses the  <xref href=\"System.Net.Http.HttpClientHandler.CookieContainer\"></xref> property  to store server cookies and uses these cookies when sending requests; otherwise `false`. The default value is `true`.","nodes":[{"pos":[0,246],"content":"`true` if the if the handler supports uses the  <xref href=\"System.Net.Http.HttpClientHandler.CookieContainer\"></xref> property  to store server cookies and uses these cookies when sending requests; otherwise `false`. The default value is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the if the handler supports uses the  <ph id=\"ph2\">&lt;xref href=\"System.Net.Http.HttpClientHandler.CookieContainer\"&gt;&lt;/xref&gt;</ph> property  to store server cookies and uses these cookies when sending requests; otherwise <ph id=\"ph3\">`false`</ph>.","pos":[0,217],"source":"`true` if the if the handler supports uses the  <xref href=\"System.Net.Http.HttpClientHandler.CookieContainer\"></xref> property  to store server cookies and uses these cookies when sending requests; otherwise `false`."},{"content":"The default value is <ph id=\"ph1\">`true`</ph>.","pos":[218,246],"source":" The default value is `true`."}]}],"pos":[49990,50239],"yaml":true},{"content":"Gets or sets a value that controls whether default credentials are sent with requests by the handler.","nodes":[{"pos":[0,101],"content":"Gets or sets a value that controls whether default credentials are sent with requests by the handler.","nodes":[{"content":"Gets or sets a value that controls whether default credentials are sent with requests by the handler.","pos":[0,101]}]}],"pos":[51719,51821],"yaml":true},{"content":"Set this property to `true` when requests made by the <xref:System.Net.Http.HttpClientHandler> object should, if requested by the server, be authenticated using the credentials of the currently logged on user. For client applications, this is the desired behavior in most scenarios. For middle-tier applications, such as ASP.NET applications, instead of using this property, you would typically set the <xref:System.Net.Http.HttpClientHandler.Credentials%2A> property to the credentials of the client on whose behalf the request is made.","nodes":[{"pos":[0,537],"content":"Set this property to `true` when requests made by the <xref:System.Net.Http.HttpClientHandler> object should, if requested by the server, be authenticated using the credentials of the currently logged on user. For client applications, this is the desired behavior in most scenarios. For middle-tier applications, such as ASP.NET applications, instead of using this property, you would typically set the <xref:System.Net.Http.HttpClientHandler.Credentials%2A> property to the credentials of the client on whose behalf the request is made.","nodes":[{"content":"Set this property to <ph id=\"ph1\">`true`</ph> when requests made by the <ph id=\"ph2\">&lt;xref:System.Net.Http.HttpClientHandler&gt;</ph> object should, if requested by the server, be authenticated using the credentials of the currently logged on user.","pos":[0,209],"source":"Set this property to `true` when requests made by the <xref:System.Net.Http.HttpClientHandler> object should, if requested by the server, be authenticated using the credentials of the currently logged on user."},{"content":"For client applications, this is the desired behavior in most scenarios.","pos":[210,282]},{"content":"For middle-tier applications, such as ASP.NET applications, instead of using this property, you would typically set the <ph id=\"ph1\">&lt;xref:System.Net.Http.HttpClientHandler.Credentials%2A&gt;</ph> property to the credentials of the client on whose behalf the request is made.","pos":[283,537],"source":" For middle-tier applications, such as ASP.NET applications, instead of using this property, you would typically set the <xref:System.Net.Http.HttpClientHandler.Credentials%2A> property to the credentials of the client on whose behalf the request is made."}]}],"pos":[51832,52370],"yaml":true,"extradata":"MT"},{"content":"`true` if the default credentials are used; otherwise `false`. The default value is `false`.","nodes":[{"pos":[0,92],"content":"`true` if the default credentials are used; otherwise `false`. The default value is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the default credentials are used; otherwise <ph id=\"ph2\">`false`</ph>.","pos":[0,62],"source":"`true` if the default credentials are used; otherwise `false`."},{"content":"The default value is <ph id=\"ph1\">`false`</ph>.","pos":[63,92],"source":" The default value is `false`."}]}],"pos":[52499,52594],"yaml":true},{"content":"Gets or sets a value that indicates whether the handler uses a proxy for requests.","nodes":[{"pos":[0,82],"content":"Gets or sets a value that indicates whether the handler uses a proxy for requests.","nodes":[{"content":"Gets or sets a value that indicates whether the handler uses a proxy for requests.","pos":[0,82]}]}],"pos":[54007,54090],"yaml":true},{"content":"`true` if the handler should use a proxy for requests; otherwise `false`. The default value is `true`.","nodes":[{"pos":[0,102],"content":"`true` if the handler should use a proxy for requests; otherwise `false`. The default value is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the handler should use a proxy for requests; otherwise <ph id=\"ph2\">`false`</ph>.","pos":[0,73],"source":"`true` if the handler should use a proxy for requests; otherwise `false`."},{"content":"The default value is <ph id=\"ph1\">`true`</ph>.","pos":[74,102],"source":" The default value is `true`."}]}],"pos":[54206,54311],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Net.Http.HttpClientHandler\n  commentId: T:System.Net.Http.HttpClientHandler\n  id: HttpClientHandler\n  children:\n  - System.Net.Http.HttpClientHandler.#ctor\n  - System.Net.Http.HttpClientHandler.AllowAutoRedirect\n  - System.Net.Http.HttpClientHandler.AutomaticDecompression\n  - System.Net.Http.HttpClientHandler.CheckCertificateRevocationList\n  - System.Net.Http.HttpClientHandler.ClientCertificateOptions\n  - System.Net.Http.HttpClientHandler.ClientCertificates\n  - System.Net.Http.HttpClientHandler.CookieContainer\n  - System.Net.Http.HttpClientHandler.Credentials\n  - System.Net.Http.HttpClientHandler.DefaultProxyCredentials\n  - System.Net.Http.HttpClientHandler.Dispose(System.Boolean)\n  - System.Net.Http.HttpClientHandler.MaxAutomaticRedirections\n  - System.Net.Http.HttpClientHandler.MaxConnectionsPerServer\n  - System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize\n  - System.Net.Http.HttpClientHandler.MaxResponseHeadersLength\n  - System.Net.Http.HttpClientHandler.PreAuthenticate\n  - System.Net.Http.HttpClientHandler.Properties\n  - System.Net.Http.HttpClientHandler.Proxy\n  - System.Net.Http.HttpClientHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)\n  - System.Net.Http.HttpClientHandler.ServerCertificateCustomValidationCallback\n  - System.Net.Http.HttpClientHandler.SslProtocols\n  - System.Net.Http.HttpClientHandler.SupportsAutomaticDecompression\n  - System.Net.Http.HttpClientHandler.SupportsProxy\n  - System.Net.Http.HttpClientHandler.SupportsRedirectConfiguration\n  - System.Net.Http.HttpClientHandler.UseCookies\n  - System.Net.Http.HttpClientHandler.UseDefaultCredentials\n  - System.Net.Http.HttpClientHandler.UseProxy\n  langs:\n  - csharp\n  name: HttpClientHandler\n  nameWithType: HttpClientHandler\n  fullName: System.Net.Http.HttpClientHandler\n  type: Class\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http\n  summary: The default message handler used by <xref href=\"System.Net.Http.HttpClient\"></xref>.\n  remarks: The <xref:System.Net.Http.HttpClientHandler> class and classes derived from it enable developers to configure a variety of options ranging from proxies to authentication.\n  example:\n  - '[!code-csharp[System.Net.Http.HttpClientHandler#1](~/samples/snippets/csharp/VS_Snippets_Misc/system.net.http.httpclienthandler/cs/source.cs#1)]'\n  syntax:\n    content: 'public class HttpClientHandler : System.Net.Http.HttpMessageHandler'\n  inheritance:\n  - System.Object\n  - System.Net.Http.HttpMessageHandler\n  derivedClasses:\n  - System.Net.Http.WebRequestHandler\n  implements: []\n  inheritedMembers:\n  - System.Net.Http.HttpMessageHandler.Dispose\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Http.HttpClientHandler.#ctor\n  commentId: M:System.Net.Http.HttpClientHandler.#ctor\n  id: '#ctor'\n  parent: System.Net.Http.HttpClientHandler\n  langs:\n  - csharp\n  name: HttpClientHandler()\n  nameWithType: HttpClientHandler.HttpClientHandler()\n  fullName: HttpClientHandler.HttpClientHandler()\n  type: Constructor\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http\n  summary: Creates an instance of a <xref href=\"System.Net.Http.HttpClientHandler\"></xref> class.\n  syntax:\n    content: public HttpClientHandler ();\n    parameters: []\n  overload: System.Net.Http.HttpClientHandler.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Http.HttpClientHandler.AllowAutoRedirect\n  commentId: P:System.Net.Http.HttpClientHandler.AllowAutoRedirect\n  id: AllowAutoRedirect\n  parent: System.Net.Http.HttpClientHandler\n  langs:\n  - csharp\n  name: AllowAutoRedirect\n  nameWithType: HttpClientHandler.AllowAutoRedirect\n  fullName: HttpClientHandler.AllowAutoRedirect\n  type: Property\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http\n  summary: Gets or sets a value that indicates whether the handler should follow redirection responses.\n  remarks: \"Set <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> to `true` if you want the handler to automatically follow HTTP redirection headers to the new location of the resource. The maximum number of redirections to follow is set by the <xref:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections%2A> property.  \\n  \\n If <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> is set to `false`, all HTTP responses with an HTTP status code from 300 to 399 are  returned to the application.  \\n  \\n The Authorization header is cleared on auto-redirects and the handler automatically tries to re-authenticate to the redirected location. In practice, this means that an application can't put custom authentication information into the Authorization header if it is possible to encounter redirection. Instead, the application must implement and register a custom authentication module.\"\n  syntax:\n    content: public bool AllowAutoRedirect { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the if the handler should follow redirection responses; otherwise `false`. The default value is `true`.'\n  overload: System.Net.Http.HttpClientHandler.AllowAutoRedirect*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Http.HttpClientHandler.AutomaticDecompression\n  commentId: P:System.Net.Http.HttpClientHandler.AutomaticDecompression\n  id: AutomaticDecompression\n  parent: System.Net.Http.HttpClientHandler\n  langs:\n  - csharp\n  name: AutomaticDecompression\n  nameWithType: HttpClientHandler.AutomaticDecompression\n  fullName: HttpClientHandler.AutomaticDecompression\n  type: Property\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http\n  summary: Gets or sets the type of decompression method used by the handler for automatic decompression of the HTTP content response.\n  remarks: >-\n    For the .NET Framework 4.x `System.Net.Http` binary in the Global Assembly Cache (GAC), the default value is <xref:System.Net.DecompressionMethods.None>.\n\n\n    For the .NET Core implementation of <xref:System.Net.Http> provided by the [`System.Net.Http` NuGet package](https://www.nuget.org/packages/System.Net.Http/), the default is <xref:System.Net.DecompressionMethods.GZip> and <xref:System.Net.DecompressionMethods.Deflate>.\n\n\n    When the NuGet package (v4.1.0 and later) is used on the .NET Framework (Desktop), the default matches the .NET Core implementation of <xref:System.Net.DecompressionMethods.GZip> and <xref:System.Net.DecompressionMethods.Deflate>.\n  syntax:\n    content: public System.Net.DecompressionMethods AutomaticDecompression { get; set; }\n    return:\n      type: System.Net.DecompressionMethods\n      description: The automatic decompression method used by the handler.\n  overload: System.Net.Http.HttpClientHandler.AutomaticDecompression*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Http.HttpClientHandler.CheckCertificateRevocationList\n  commentId: P:System.Net.Http.HttpClientHandler.CheckCertificateRevocationList\n  id: CheckCertificateRevocationList\n  parent: System.Net.Http.HttpClientHandler\n  langs:\n  - csharp\n  name: CheckCertificateRevocationList\n  nameWithType: HttpClientHandler.CheckCertificateRevocationList\n  fullName: HttpClientHandler.CheckCertificateRevocationList\n  type: Property\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http\n  syntax:\n    content: public bool CheckCertificateRevocationList { get; set; }\n    return:\n      type: System.Boolean\n      description: ''\n  overload: System.Net.Http.HttpClientHandler.CheckCertificateRevocationList*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml\n- uid: System.Net.Http.HttpClientHandler.ClientCertificateOptions\n  commentId: P:System.Net.Http.HttpClientHandler.ClientCertificateOptions\n  id: ClientCertificateOptions\n  parent: System.Net.Http.HttpClientHandler\n  langs:\n  - csharp\n  name: ClientCertificateOptions\n  nameWithType: HttpClientHandler.ClientCertificateOptions\n  fullName: HttpClientHandler.ClientCertificateOptions\n  type: Property\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http\n  summary: Gets or sets a value that indicates if the certificate is automatically picked from the certificate store or if the caller is allowed to pass in a specific client certificate.\n  syntax:\n    content: public System.Net.Http.ClientCertificateOption ClientCertificateOptions { get; set; }\n    return:\n      type: System.Net.Http.ClientCertificateOption\n      description: The collection of security certificates associated with this handler.\n  overload: System.Net.Http.HttpClientHandler.ClientCertificateOptions*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Http.HttpClientHandler.ClientCertificates\n  commentId: P:System.Net.Http.HttpClientHandler.ClientCertificates\n  id: ClientCertificates\n  parent: System.Net.Http.HttpClientHandler\n  langs:\n  - csharp\n  name: ClientCertificates\n  nameWithType: HttpClientHandler.ClientCertificates\n  fullName: HttpClientHandler.ClientCertificates\n  type: Property\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http\n  syntax:\n    content: public System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { get; }\n    return:\n      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection\n      description: ''\n  overload: System.Net.Http.HttpClientHandler.ClientCertificates*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml\n- uid: System.Net.Http.HttpClientHandler.CookieContainer\n  commentId: P:System.Net.Http.HttpClientHandler.CookieContainer\n  id: CookieContainer\n  parent: System.Net.Http.HttpClientHandler\n  langs:\n  - csharp\n  name: CookieContainer\n  nameWithType: HttpClientHandler.CookieContainer\n  fullName: HttpClientHandler.CookieContainer\n  type: Property\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http\n  summary: Gets or sets the cookie container used to store server cookies by the handler.\n  remarks: \"The <xref:System.Net.Http.HttpClientHandler.CookieContainer%2A> property provides an instance of the <xref:System.Net.CookieContainer> class that contains the cookies associated with this handler.  \\n  \\n If the <xref:System.Net.Http.HttpClientHandler.UseCookies%2A> property is `true`, the <xref:System.Net.Http.HttpClientHandler.CookieContainer%2A> property represents the cookie container used to store the server cookies. The user can set custom cookies before sending requests using this property. If the  <xref:System.Net.Http.HttpClientHandler.UseCookies%2A> property is false and the user adds cookies to <xref:System.Net.Http.HttpClientHandler.CookieContainer%2A>, cookies are ignored and not sent to the server. Setting the <xref:System.Net.Http.HttpClientHandler.CookieContainer%2A> to `null` will throw an exception.\"\n  syntax:\n    content: public System.Net.CookieContainer CookieContainer { get; set; }\n    return:\n      type: System.Net.CookieContainer\n      description: The cookie container used to store server cookies by the handler.\n  overload: System.Net.Http.HttpClientHandler.CookieContainer*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Http.HttpClientHandler.Credentials\n  commentId: P:System.Net.Http.HttpClientHandler.Credentials\n  id: Credentials\n  parent: System.Net.Http.HttpClientHandler\n  langs:\n  - csharp\n  name: Credentials\n  nameWithType: HttpClientHandler.Credentials\n  fullName: HttpClientHandler.Credentials\n  type: Property\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http\n  summary: Gets or sets authentication information used by this handler.\n  syntax:\n    content: public System.Net.ICredentials Credentials { get; set; }\n    return:\n      type: System.Net.ICredentials\n      description: The authentication credentials associated with the handler. The default is `null`.\n  overload: System.Net.Http.HttpClientHandler.Credentials*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Http.HttpClientHandler.DefaultProxyCredentials\n  commentId: P:System.Net.Http.HttpClientHandler.DefaultProxyCredentials\n  id: DefaultProxyCredentials\n  parent: System.Net.Http.HttpClientHandler\n  langs:\n  - csharp\n  name: DefaultProxyCredentials\n  nameWithType: HttpClientHandler.DefaultProxyCredentials\n  fullName: HttpClientHandler.DefaultProxyCredentials\n  type: Property\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http\n  syntax:\n    content: public System.Net.ICredentials DefaultProxyCredentials { get; set; }\n    return:\n      type: System.Net.ICredentials\n      description: ''\n  overload: System.Net.Http.HttpClientHandler.DefaultProxyCredentials*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml\n- uid: System.Net.Http.HttpClientHandler.Dispose(System.Boolean)\n  commentId: M:System.Net.Http.HttpClientHandler.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Net.Http.HttpClientHandler\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: HttpClientHandler.Dispose(Boolean)\n  fullName: HttpClientHandler.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http\n  summary: Releases the unmanaged resources used by the <xref href=\"System.Net.Http.HttpClientHandler\"></xref> and optionally disposes of the managed resources.\n  remarks: \"This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.  \\n  \\n When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Http.HttpClientHandler> references. This method invokes the `Dispose()` method of each referenced object.\"\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: '`true` to release both managed and unmanaged resources; `false` to releases only unmanaged resources.'\n  overload: System.Net.Http.HttpClientHandler.Dispose*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Http.HttpClientHandler.MaxAutomaticRedirections\n  commentId: P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections\n  id: MaxAutomaticRedirections\n  parent: System.Net.Http.HttpClientHandler\n  langs:\n  - csharp\n  name: MaxAutomaticRedirections\n  nameWithType: HttpClientHandler.MaxAutomaticRedirections\n  fullName: HttpClientHandler.MaxAutomaticRedirections\n  type: Property\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http\n  summary: Gets or sets the maximum number of redirects that the handler follows.\n  remarks: The <xref:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections%2A> property sets the maximum number of redirections for the request to follow if the <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> property is `true`.\n  syntax:\n    content: public int MaxAutomaticRedirections { get; set; }\n    return:\n      type: System.Int32\n      description: The maximum number of redirection responses that the handler follows. The default value is 50.\n  overload: System.Net.Http.HttpClientHandler.MaxAutomaticRedirections*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Http.HttpClientHandler.MaxConnectionsPerServer\n  commentId: P:System.Net.Http.HttpClientHandler.MaxConnectionsPerServer\n  id: MaxConnectionsPerServer\n  parent: System.Net.Http.HttpClientHandler\n  langs:\n  - csharp\n  name: MaxConnectionsPerServer\n  nameWithType: HttpClientHandler.MaxConnectionsPerServer\n  fullName: HttpClientHandler.MaxConnectionsPerServer\n  type: Property\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http\n  syntax:\n    content: public int MaxConnectionsPerServer { get; set; }\n    return:\n      type: System.Int32\n      description: ''\n  overload: System.Net.Http.HttpClientHandler.MaxConnectionsPerServer*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml\n- uid: System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize\n  commentId: P:System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize\n  id: MaxRequestContentBufferSize\n  parent: System.Net.Http.HttpClientHandler\n  langs:\n  - csharp\n  name: MaxRequestContentBufferSize\n  nameWithType: HttpClientHandler.MaxRequestContentBufferSize\n  fullName: HttpClientHandler.MaxRequestContentBufferSize\n  type: Property\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http\n  summary: Gets or sets the maximum request content buffer size used by the handler.\n  remarks: An app can set the <xref:System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize%2A> property to a lower value to limit the size of the request buffer. If the size of the request content is greater than the <xref:System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize%2A> property, an exception is thrown.\n  syntax:\n    content: public long MaxRequestContentBufferSize { get; set; }\n    return:\n      type: System.Int64\n      description: The maximum request content buffer size in bytes. The default value is 2 gigabytes.\n  overload: System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Http.HttpClientHandler.MaxResponseHeadersLength\n  commentId: P:System.Net.Http.HttpClientHandler.MaxResponseHeadersLength\n  id: MaxResponseHeadersLength\n  parent: System.Net.Http.HttpClientHandler\n  langs:\n  - csharp\n  name: MaxResponseHeadersLength\n  nameWithType: HttpClientHandler.MaxResponseHeadersLength\n  fullName: HttpClientHandler.MaxResponseHeadersLength\n  type: Property\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http\n  syntax:\n    content: public int MaxResponseHeadersLength { get; set; }\n    return:\n      type: System.Int32\n      description: ''\n  overload: System.Net.Http.HttpClientHandler.MaxResponseHeadersLength*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml\n- uid: System.Net.Http.HttpClientHandler.PreAuthenticate\n  commentId: P:System.Net.Http.HttpClientHandler.PreAuthenticate\n  id: PreAuthenticate\n  parent: System.Net.Http.HttpClientHandler\n  langs:\n  - csharp\n  name: PreAuthenticate\n  nameWithType: HttpClientHandler.PreAuthenticate\n  fullName: HttpClientHandler.PreAuthenticate\n  type: Property\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http\n  summary: Gets or sets a value that indicates whether the handler sends an Authorization header with the request.\n  remarks: \"After a client request to a specific <xref:System.Uri> is successfully authenticated, if the <xref:System.Net.Http.HttpClientHandler.PreAuthenticate%2A> property is `true` and credentials are supplied, <xref:System.Net.Http.HttpClientHandler> matches against the credential list supplied in the  <xref:System.Net.Http.HttpClientHandler.Credentials%2A> property. The Authorization header is sent with each request to any <xref:System.Uri> that matches the specific <xref:System.Uri> up to the last forward slash.  \\n  \\n If the client request to a specific <xref:System.Uri> is not successfully authenticated, the request uses standard authentication procedures.  \\n  \\n With the exception of the first request, the <xref:System.Net.Http.HttpClientHandler.PreAuthenticate%2A> property indicates whether to send authentication information with subsequent requests to a <xref:System.Uri> that matches the specific <xref:System.Uri> up to the last forward slash without waiting to be challenged by the server.\"\n  syntax:\n    content: public bool PreAuthenticate { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` for the handler to send an HTTP Authorization header with requests after authentication has taken place; otherwise, `false`. The default is `false`.'\n  overload: System.Net.Http.HttpClientHandler.PreAuthenticate*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Http.HttpClientHandler.Properties\n  commentId: P:System.Net.Http.HttpClientHandler.Properties\n  id: Properties\n  parent: System.Net.Http.HttpClientHandler\n  langs:\n  - csharp\n  name: Properties\n  nameWithType: HttpClientHandler.Properties\n  fullName: HttpClientHandler.Properties\n  type: Property\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http\n  syntax:\n    content: public System.Collections.Generic.IDictionary<string,object> Properties { get; }\n    return:\n      type: System.Collections.Generic.IDictionary{System.String,System.Object}\n      description: ''\n  overload: System.Net.Http.HttpClientHandler.Properties*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml\n- uid: System.Net.Http.HttpClientHandler.Proxy\n  commentId: P:System.Net.Http.HttpClientHandler.Proxy\n  id: Proxy\n  parent: System.Net.Http.HttpClientHandler\n  langs:\n  - csharp\n  name: Proxy\n  nameWithType: HttpClientHandler.Proxy\n  fullName: HttpClientHandler.Proxy\n  type: Property\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http\n  summary: Gets or sets proxy information used by the handler.\n  remarks: \"The <xref:System.Net.Http.HttpClientHandler.Proxy%2A> property identifies the <xref:System.Net.WebProxy> object to use to process requests to Internet resources. To specify that no proxy should be used, set the <xref:System.Net.Http.HttpClientHandler.Proxy%2A> property to the proxy instance returned by the <xref:System.Net.GlobalProxySelection.GetEmptyWebProxy%2A> method.  \\n  \\n The local computer or application config file may specify that a default proxy be used. If the <xref:System.Net.Http.HttpClientHandler.Proxy%2A> property is specified, then the proxy settings from the <xref:System.Net.Http.HttpClientHandler.Proxy%2A> property override the local computer or application config file and the handler will use the proxy settings specified. If no proxy is specified in a config file and the <xref:System.Net.Http.HttpClientHandler.Proxy%2A> property is unspecified, the handler uses the proxy settings inherited from Internet Explorer on the local computer. If there are no proxy settings in Internet Explorer, the request is sent directly to the server.  \\n  \\n The <xref:System.Net.Http.HttpClientHandler> class parses a proxy bypass list with wildcard characters inherited from Internet Explorer the same as the bypass list is parsed directly by Internet Explorer. For example, the <xref:System.Net.Http.HttpClientHandler> class will parse a bypass list of \\\"nt*\\\" from Internet Explorer as a regular expression of \\\"nt.\\\\*\\\". So a URL of \\\" http://nt.com\\\" would bypass the proxy using the <xref:System.Net.Http.HttpClientHandler> class and using Internet Explorer.  \\n  \\n The <xref:System.Net.Http.HttpClientHandler> class supports local proxy bypass. The class considers a destination to be local if any of the following conditions are met:  \\n  \\n1.  The destination contains a flat name (no dots in the URL).  \\n  \\n2.  The destination contains a loopback address (<xref:System.Net.IPAddress.Loopback> or <xref:System.Net.IPAddress.IPv6Loopback>) or the destination contains an <xref:System.Net.IPAddress> assigned to the local computer.  \\n  \\n3.  The domain suffix of the destination matches the local computer's domain suffix (<xref:System.Net.NetworkInformation.IPGlobalProperties.DomainName%2A>).\"\n  syntax:\n    content: public System.Net.IWebProxy Proxy { get; set; }\n    return:\n      type: System.Net.IWebProxy\n      description: The proxy information used by the handler. The default value is `null`.\n  overload: System.Net.Http.HttpClientHandler.Proxy*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Http.HttpClientHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)\n  commentId: M:System.Net.Http.HttpClientHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)\n  id: SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)\n  parent: System.Net.Http.HttpClientHandler\n  langs:\n  - csharp\n  name: SendAsync(HttpRequestMessage, CancellationToken)\n  nameWithType: HttpClientHandler.SendAsync(HttpRequestMessage, CancellationToken)\n  fullName: HttpClientHandler.SendAsync(HttpRequestMessage, CancellationToken)\n  type: Method\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http\n  summary: Creates an instance of  <xref href=\"System.Net.Http.HttpResponseMessage\"></xref> based on the information provided in the <xref href=\"System.Net.Http.HttpRequestMessage\"></xref> as an operation that will not block.\n  remarks: This operation is does not block. It returns an instance of <xref:System.Threading.Tasks.Task%601> to represent the asynchronous operation. When the operation completes, <xref:System.Threading.Tasks.Task%601.Result%2A> contains the response message.\n  syntax:\n    content: protected override System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> SendAsync (System.Net.Http.HttpRequestMessage request, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: request\n      type: System.Net.Http.HttpRequestMessage\n      description: The HTTP request message.\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: A cancellation token to cancel the operation.\n    return:\n      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}\n      description: The task object representing the asynchronous operation.\n  overload: System.Net.Http.HttpClientHandler.SendAsync*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>request</code> was `null`.\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Http.HttpClientHandler.ServerCertificateCustomValidationCallback\n  commentId: P:System.Net.Http.HttpClientHandler.ServerCertificateCustomValidationCallback\n  id: ServerCertificateCustomValidationCallback\n  parent: System.Net.Http.HttpClientHandler\n  langs:\n  - csharp\n  name: ServerCertificateCustomValidationCallback\n  nameWithType: HttpClientHandler.ServerCertificateCustomValidationCallback\n  fullName: HttpClientHandler.ServerCertificateCustomValidationCallback\n  type: Property\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http\n  syntax:\n    content: public Func<System.Net.Http.HttpRequestMessage,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors,bool> ServerCertificateCustomValidationCallback { get; set; }\n    return:\n      type: System.Func{System.Net.Http.HttpRequestMessage,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors,System.Boolean}\n      description: ''\n  overload: System.Net.Http.HttpClientHandler.ServerCertificateCustomValidationCallback*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml\n- uid: System.Net.Http.HttpClientHandler.SslProtocols\n  commentId: P:System.Net.Http.HttpClientHandler.SslProtocols\n  id: SslProtocols\n  parent: System.Net.Http.HttpClientHandler\n  langs:\n  - csharp\n  name: SslProtocols\n  nameWithType: HttpClientHandler.SslProtocols\n  fullName: HttpClientHandler.SslProtocols\n  type: Property\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http\n  syntax:\n    content: public System.Security.Authentication.SslProtocols SslProtocols { get; set; }\n    return:\n      type: System.Security.Authentication.SslProtocols\n      description: ''\n  overload: System.Net.Http.HttpClientHandler.SslProtocols*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml\n- uid: System.Net.Http.HttpClientHandler.SupportsAutomaticDecompression\n  commentId: P:System.Net.Http.HttpClientHandler.SupportsAutomaticDecompression\n  id: SupportsAutomaticDecompression\n  parent: System.Net.Http.HttpClientHandler\n  langs:\n  - csharp\n  name: SupportsAutomaticDecompression\n  nameWithType: HttpClientHandler.SupportsAutomaticDecompression\n  fullName: HttpClientHandler.SupportsAutomaticDecompression\n  type: Property\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http\n  summary: Gets a value that indicates whether the handler supports automatic response content decompression.\n  syntax:\n    content: public virtual bool SupportsAutomaticDecompression { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the if the handler supports automatic response content decompression; otherwise `false`. The default value is `true`.'\n  overload: System.Net.Http.HttpClientHandler.SupportsAutomaticDecompression*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Http.HttpClientHandler.SupportsProxy\n  commentId: P:System.Net.Http.HttpClientHandler.SupportsProxy\n  id: SupportsProxy\n  parent: System.Net.Http.HttpClientHandler\n  langs:\n  - csharp\n  name: SupportsProxy\n  nameWithType: HttpClientHandler.SupportsProxy\n  fullName: HttpClientHandler.SupportsProxy\n  type: Property\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http\n  summary: Gets a value that indicates whether the handler supports proxy settings.\n  syntax:\n    content: public virtual bool SupportsProxy { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the if the handler supports proxy settings; otherwise `false`. The default value is `true`.'\n  overload: System.Net.Http.HttpClientHandler.SupportsProxy*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Http.HttpClientHandler.SupportsRedirectConfiguration\n  commentId: P:System.Net.Http.HttpClientHandler.SupportsRedirectConfiguration\n  id: SupportsRedirectConfiguration\n  parent: System.Net.Http.HttpClientHandler\n  langs:\n  - csharp\n  name: SupportsRedirectConfiguration\n  nameWithType: HttpClientHandler.SupportsRedirectConfiguration\n  fullName: HttpClientHandler.SupportsRedirectConfiguration\n  type: Property\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http\n  summary: Gets a value that indicates whether the handler supports configuration settings for the <xref href=\"System.Net.Http.HttpClientHandler.AllowAutoRedirect\"></xref> and <xref href=\"System.Net.Http.HttpClientHandler.MaxAutomaticRedirections\"></xref> properties.\n  syntax:\n    content: public virtual bool SupportsRedirectConfiguration { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the if the handler supports configuration settings for the <xref href=\"System.Net.Http.HttpClientHandler.AllowAutoRedirect\"></xref> and <xref href=\"System.Net.Http.HttpClientHandler.MaxAutomaticRedirections\"></xref> properties; otherwise `false`. The default value is `true`.'\n  overload: System.Net.Http.HttpClientHandler.SupportsRedirectConfiguration*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Http.HttpClientHandler.UseCookies\n  commentId: P:System.Net.Http.HttpClientHandler.UseCookies\n  id: UseCookies\n  parent: System.Net.Http.HttpClientHandler\n  langs:\n  - csharp\n  name: UseCookies\n  nameWithType: HttpClientHandler.UseCookies\n  fullName: HttpClientHandler.UseCookies\n  type: Property\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http\n  summary: Gets or sets a value that indicates whether the handler uses the  <xref href=\"System.Net.Http.HttpClientHandler.CookieContainer\"></xref> property  to store server cookies and uses these cookies when sending requests.\n  syntax:\n    content: public bool UseCookies { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the if the handler supports uses the  <xref href=\"System.Net.Http.HttpClientHandler.CookieContainer\"></xref> property  to store server cookies and uses these cookies when sending requests; otherwise `false`. The default value is `true`.'\n  overload: System.Net.Http.HttpClientHandler.UseCookies*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Http.HttpClientHandler.UseDefaultCredentials\n  commentId: P:System.Net.Http.HttpClientHandler.UseDefaultCredentials\n  id: UseDefaultCredentials\n  parent: System.Net.Http.HttpClientHandler\n  langs:\n  - csharp\n  name: UseDefaultCredentials\n  nameWithType: HttpClientHandler.UseDefaultCredentials\n  fullName: HttpClientHandler.UseDefaultCredentials\n  type: Property\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http\n  summary: Gets or sets a value that controls whether default credentials are sent with requests by the handler.\n  remarks: Set this property to `true` when requests made by the <xref:System.Net.Http.HttpClientHandler> object should, if requested by the server, be authenticated using the credentials of the currently logged on user. For client applications, this is the desired behavior in most scenarios. For middle-tier applications, such as ASP.NET applications, instead of using this property, you would typically set the <xref:System.Net.Http.HttpClientHandler.Credentials%2A> property to the credentials of the client on whose behalf the request is made.\n  syntax:\n    content: public bool UseDefaultCredentials { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the default credentials are used; otherwise `false`. The default value is `false`.'\n  overload: System.Net.Http.HttpClientHandler.UseDefaultCredentials*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Http.HttpClientHandler.UseProxy\n  commentId: P:System.Net.Http.HttpClientHandler.UseProxy\n  id: UseProxy\n  parent: System.Net.Http.HttpClientHandler\n  langs:\n  - csharp\n  name: UseProxy\n  nameWithType: HttpClientHandler.UseProxy\n  fullName: HttpClientHandler.UseProxy\n  type: Property\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http\n  summary: Gets or sets a value that indicates whether the handler uses a proxy for requests.\n  syntax:\n    content: public bool UseProxy { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the handler should use a proxy for requests; otherwise `false`. The default value is `true`.'\n  overload: System.Net.Http.HttpClientHandler.UseProxy*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml\n  ms.author: bobdel\n  manager: markl\nreferences:\n- uid: System.Net.Http.HttpMessageHandler\n  parent: System.Net.Http\n  isExternal: false\n  name: HttpMessageHandler\n  nameWithType: HttpMessageHandler\n  fullName: System.Net.Http.HttpMessageHandler\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Net.Http.HttpClientHandler.#ctor\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: HttpClientHandler()\n  nameWithType: HttpClientHandler.HttpClientHandler()\n  fullName: HttpClientHandler.HttpClientHandler()\n- uid: System.Net.Http.HttpClientHandler.AllowAutoRedirect\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: AllowAutoRedirect\n  nameWithType: HttpClientHandler.AllowAutoRedirect\n  fullName: HttpClientHandler.AllowAutoRedirect\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Net.Http.HttpClientHandler.AutomaticDecompression\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: AutomaticDecompression\n  nameWithType: HttpClientHandler.AutomaticDecompression\n  fullName: HttpClientHandler.AutomaticDecompression\n- uid: System.Net.DecompressionMethods\n  parent: System.Net\n  isExternal: false\n  name: DecompressionMethods\n  nameWithType: DecompressionMethods\n  fullName: System.Net.DecompressionMethods\n- uid: System.Net.Http.HttpClientHandler.CheckCertificateRevocationList\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: CheckCertificateRevocationList\n  nameWithType: HttpClientHandler.CheckCertificateRevocationList\n  fullName: HttpClientHandler.CheckCertificateRevocationList\n- uid: System.Net.Http.HttpClientHandler.ClientCertificateOptions\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: ClientCertificateOptions\n  nameWithType: HttpClientHandler.ClientCertificateOptions\n  fullName: HttpClientHandler.ClientCertificateOptions\n- uid: System.Net.Http.ClientCertificateOption\n  parent: System.Net.Http\n  isExternal: false\n  name: ClientCertificateOption\n  nameWithType: ClientCertificateOption\n  fullName: System.Net.Http.ClientCertificateOption\n- uid: System.Net.Http.HttpClientHandler.ClientCertificates\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: ClientCertificates\n  nameWithType: HttpClientHandler.ClientCertificates\n  fullName: HttpClientHandler.ClientCertificates\n- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509CertificateCollection\n  nameWithType: X509CertificateCollection\n  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection\n- uid: System.Net.Http.HttpClientHandler.CookieContainer\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: CookieContainer\n  nameWithType: HttpClientHandler.CookieContainer\n  fullName: HttpClientHandler.CookieContainer\n- uid: System.Net.CookieContainer\n  parent: System.Net\n  isExternal: false\n  name: CookieContainer\n  nameWithType: CookieContainer\n  fullName: System.Net.CookieContainer\n- uid: System.Net.Http.HttpClientHandler.Credentials\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: Credentials\n  nameWithType: HttpClientHandler.Credentials\n  fullName: HttpClientHandler.Credentials\n- uid: System.Net.ICredentials\n  parent: System.Net\n  isExternal: false\n  name: ICredentials\n  nameWithType: ICredentials\n  fullName: System.Net.ICredentials\n- uid: System.Net.Http.HttpClientHandler.DefaultProxyCredentials\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: DefaultProxyCredentials\n  nameWithType: HttpClientHandler.DefaultProxyCredentials\n  fullName: HttpClientHandler.DefaultProxyCredentials\n- uid: System.Net.Http.HttpClientHandler.Dispose(System.Boolean)\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: HttpClientHandler.Dispose(Boolean)\n  fullName: HttpClientHandler.Dispose(Boolean)\n- uid: System.Net.Http.HttpClientHandler.MaxAutomaticRedirections\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: MaxAutomaticRedirections\n  nameWithType: HttpClientHandler.MaxAutomaticRedirections\n  fullName: HttpClientHandler.MaxAutomaticRedirections\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Net.Http.HttpClientHandler.MaxConnectionsPerServer\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: MaxConnectionsPerServer\n  nameWithType: HttpClientHandler.MaxConnectionsPerServer\n  fullName: HttpClientHandler.MaxConnectionsPerServer\n- uid: System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: MaxRequestContentBufferSize\n  nameWithType: HttpClientHandler.MaxRequestContentBufferSize\n  fullName: HttpClientHandler.MaxRequestContentBufferSize\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Net.Http.HttpClientHandler.MaxResponseHeadersLength\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: MaxResponseHeadersLength\n  nameWithType: HttpClientHandler.MaxResponseHeadersLength\n  fullName: HttpClientHandler.MaxResponseHeadersLength\n- uid: System.Net.Http.HttpClientHandler.PreAuthenticate\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: PreAuthenticate\n  nameWithType: HttpClientHandler.PreAuthenticate\n  fullName: HttpClientHandler.PreAuthenticate\n- uid: System.Net.Http.HttpClientHandler.Properties\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: Properties\n  nameWithType: HttpClientHandler.Properties\n  fullName: HttpClientHandler.Properties\n- uid: System.Collections.Generic.IDictionary`2\n  name: IDictionary<TKey,TValue>\n  nameWithType: IDictionary<TKey,TValue>\n  fullName: System.Collections.Generic.IDictionary<TKey,TValue>\n- uid: System.String\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Object\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.Generic.IDictionary{System.String,System.Object}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IDictionary<String,Object>\n  nameWithType: IDictionary<String,Object>\n  fullName: System.Collections.Generic.IDictionary<System.String,System.Object>\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    nameWithType: IDictionary\n    fullName: System.Collections.Generic.IDictionary\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Net.Http.HttpClientHandler.Proxy\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: Proxy\n  nameWithType: HttpClientHandler.Proxy\n  fullName: HttpClientHandler.Proxy\n- uid: System.Net.IWebProxy\n  parent: System.Net\n  isExternal: false\n  name: IWebProxy\n  nameWithType: IWebProxy\n  fullName: System.Net.IWebProxy\n- uid: System.Net.Http.HttpClientHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: SendAsync(HttpRequestMessage, CancellationToken)\n  nameWithType: HttpClientHandler.SendAsync(HttpRequestMessage, CancellationToken)\n  fullName: HttpClientHandler.SendAsync(HttpRequestMessage, CancellationToken)\n- uid: System.Threading.Tasks.Task`1\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Net.Http.HttpResponseMessage\n  name: HttpResponseMessage\n  nameWithType: HttpResponseMessage\n  fullName: System.Net.Http.HttpResponseMessage\n- uid: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<HttpResponseMessage>\n  nameWithType: Task<HttpResponseMessage>\n  fullName: System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage>\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    nameWithType: Task\n    fullName: System.Threading.Tasks.Task\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Net.Http.HttpResponseMessage\n    name: HttpResponseMessage\n    nameWithType: HttpResponseMessage\n    fullName: System.Net.Http.HttpResponseMessage\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Net.Http.HttpRequestMessage\n  parent: System.Net.Http\n  isExternal: false\n  name: HttpRequestMessage\n  nameWithType: HttpRequestMessage\n  fullName: System.Net.Http.HttpRequestMessage\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Net.Http.HttpClientHandler.ServerCertificateCustomValidationCallback\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: ServerCertificateCustomValidationCallback\n  nameWithType: HttpClientHandler.ServerCertificateCustomValidationCallback\n  fullName: HttpClientHandler.ServerCertificateCustomValidationCallback\n- uid: System.Func`5\n  name: Func<T1,T2,T3,T4,TResult>\n  nameWithType: Func<T1,T2,T3,T4,TResult>\n  fullName: System.Func<T1,T2,T3,T4,TResult>\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate2\n  name: X509Certificate2\n  nameWithType: X509Certificate2\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2\n- uid: System.Security.Cryptography.X509Certificates.X509Chain\n  name: X509Chain\n  nameWithType: X509Chain\n  fullName: System.Security.Cryptography.X509Certificates.X509Chain\n- uid: System.Net.Security.SslPolicyErrors\n  name: SslPolicyErrors\n  nameWithType: SslPolicyErrors\n  fullName: System.Net.Security.SslPolicyErrors\n- uid: System.Func{System.Net.Http.HttpRequestMessage,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors,System.Boolean}\n  parent: System\n  isExternal: false\n  name: Func<HttpRequestMessage,X509Certificate2,X509Chain,SslPolicyErrors,Boolean>\n  nameWithType: Func<HttpRequestMessage,X509Certificate2,X509Chain,SslPolicyErrors,Boolean>\n  fullName: System.Func<System.Net.Http.HttpRequestMessage,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors,System.Boolean>\n  spec.csharp:\n  - uid: System.Func`5\n    name: Func\n    nameWithType: Func\n    fullName: System.Func\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Net.Http.HttpRequestMessage\n    name: HttpRequestMessage\n    nameWithType: HttpRequestMessage\n    fullName: System.Net.Http.HttpRequestMessage\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Security.Cryptography.X509Certificates.X509Certificate2\n    name: X509Certificate2\n    nameWithType: X509Certificate2\n    fullName: System.Security.Cryptography.X509Certificates.X509Certificate2\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Security.Cryptography.X509Certificates.X509Chain\n    name: X509Chain\n    nameWithType: X509Chain\n    fullName: System.Security.Cryptography.X509Certificates.X509Chain\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Net.Security.SslPolicyErrors\n    name: SslPolicyErrors\n    nameWithType: SslPolicyErrors\n    fullName: System.Net.Security.SslPolicyErrors\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Boolean\n    name: Boolean\n    nameWithType: Boolean\n    fullName: System.Boolean\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Net.Http.HttpClientHandler.SslProtocols\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: SslProtocols\n  nameWithType: HttpClientHandler.SslProtocols\n  fullName: HttpClientHandler.SslProtocols\n- uid: System.Security.Authentication.SslProtocols\n  parent: System.Security.Authentication\n  isExternal: false\n  name: SslProtocols\n  nameWithType: SslProtocols\n  fullName: System.Security.Authentication.SslProtocols\n- uid: System.Net.Http.HttpClientHandler.SupportsAutomaticDecompression\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: SupportsAutomaticDecompression\n  nameWithType: HttpClientHandler.SupportsAutomaticDecompression\n  fullName: HttpClientHandler.SupportsAutomaticDecompression\n- uid: System.Net.Http.HttpClientHandler.SupportsProxy\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: SupportsProxy\n  nameWithType: HttpClientHandler.SupportsProxy\n  fullName: HttpClientHandler.SupportsProxy\n- uid: System.Net.Http.HttpClientHandler.SupportsRedirectConfiguration\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: SupportsRedirectConfiguration\n  nameWithType: HttpClientHandler.SupportsRedirectConfiguration\n  fullName: HttpClientHandler.SupportsRedirectConfiguration\n- uid: System.Net.Http.HttpClientHandler.UseCookies\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: UseCookies\n  nameWithType: HttpClientHandler.UseCookies\n  fullName: HttpClientHandler.UseCookies\n- uid: System.Net.Http.HttpClientHandler.UseDefaultCredentials\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: UseDefaultCredentials\n  nameWithType: HttpClientHandler.UseDefaultCredentials\n  fullName: HttpClientHandler.UseDefaultCredentials\n- uid: System.Net.Http.HttpClientHandler.UseProxy\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: UseProxy\n  nameWithType: HttpClientHandler.UseProxy\n  fullName: HttpClientHandler.UseProxy\n- uid: System.Net.Http.HttpClientHandler.#ctor*\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: HttpClientHandler\n  nameWithType: HttpClientHandler.HttpClientHandler\n  fullName: HttpClientHandler.HttpClientHandler\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml\n- uid: System.Net.Http.HttpClientHandler.AllowAutoRedirect*\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: AllowAutoRedirect\n  nameWithType: HttpClientHandler.AllowAutoRedirect\n  fullName: HttpClientHandler.AllowAutoRedirect\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml\n- uid: System.Net.Http.HttpClientHandler.AutomaticDecompression*\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: AutomaticDecompression\n  nameWithType: HttpClientHandler.AutomaticDecompression\n  fullName: HttpClientHandler.AutomaticDecompression\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml\n- uid: System.Net.Http.HttpClientHandler.CheckCertificateRevocationList*\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: CheckCertificateRevocationList\n  nameWithType: HttpClientHandler.CheckCertificateRevocationList\n  fullName: HttpClientHandler.CheckCertificateRevocationList\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml\n- uid: System.Net.Http.HttpClientHandler.ClientCertificateOptions*\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: ClientCertificateOptions\n  nameWithType: HttpClientHandler.ClientCertificateOptions\n  fullName: HttpClientHandler.ClientCertificateOptions\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml\n- uid: System.Net.Http.HttpClientHandler.ClientCertificates*\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: ClientCertificates\n  nameWithType: HttpClientHandler.ClientCertificates\n  fullName: HttpClientHandler.ClientCertificates\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml\n- uid: System.Net.Http.HttpClientHandler.CookieContainer*\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: CookieContainer\n  nameWithType: HttpClientHandler.CookieContainer\n  fullName: HttpClientHandler.CookieContainer\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml\n- uid: System.Net.Http.HttpClientHandler.Credentials*\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: Credentials\n  nameWithType: HttpClientHandler.Credentials\n  fullName: HttpClientHandler.Credentials\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml\n- uid: System.Net.Http.HttpClientHandler.DefaultProxyCredentials*\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: DefaultProxyCredentials\n  nameWithType: HttpClientHandler.DefaultProxyCredentials\n  fullName: HttpClientHandler.DefaultProxyCredentials\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml\n- uid: System.Net.Http.HttpClientHandler.Dispose*\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: Dispose\n  nameWithType: HttpClientHandler.Dispose\n  fullName: HttpClientHandler.Dispose\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml\n- uid: System.Net.Http.HttpClientHandler.MaxAutomaticRedirections*\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: MaxAutomaticRedirections\n  nameWithType: HttpClientHandler.MaxAutomaticRedirections\n  fullName: HttpClientHandler.MaxAutomaticRedirections\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml\n- uid: System.Net.Http.HttpClientHandler.MaxConnectionsPerServer*\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: MaxConnectionsPerServer\n  nameWithType: HttpClientHandler.MaxConnectionsPerServer\n  fullName: HttpClientHandler.MaxConnectionsPerServer\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml\n- uid: System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize*\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: MaxRequestContentBufferSize\n  nameWithType: HttpClientHandler.MaxRequestContentBufferSize\n  fullName: HttpClientHandler.MaxRequestContentBufferSize\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml\n- uid: System.Net.Http.HttpClientHandler.MaxResponseHeadersLength*\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: MaxResponseHeadersLength\n  nameWithType: HttpClientHandler.MaxResponseHeadersLength\n  fullName: HttpClientHandler.MaxResponseHeadersLength\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml\n- uid: System.Net.Http.HttpClientHandler.PreAuthenticate*\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: PreAuthenticate\n  nameWithType: HttpClientHandler.PreAuthenticate\n  fullName: HttpClientHandler.PreAuthenticate\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml\n- uid: System.Net.Http.HttpClientHandler.Properties*\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: Properties\n  nameWithType: HttpClientHandler.Properties\n  fullName: HttpClientHandler.Properties\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml\n- uid: System.Net.Http.HttpClientHandler.Proxy*\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: Proxy\n  nameWithType: HttpClientHandler.Proxy\n  fullName: HttpClientHandler.Proxy\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml\n- uid: System.Net.Http.HttpClientHandler.SendAsync*\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: SendAsync\n  nameWithType: HttpClientHandler.SendAsync\n  fullName: HttpClientHandler.SendAsync\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml\n- uid: System.Net.Http.HttpClientHandler.ServerCertificateCustomValidationCallback*\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: ServerCertificateCustomValidationCallback\n  nameWithType: HttpClientHandler.ServerCertificateCustomValidationCallback\n  fullName: HttpClientHandler.ServerCertificateCustomValidationCallback\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml\n- uid: System.Net.Http.HttpClientHandler.SslProtocols*\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: SslProtocols\n  nameWithType: HttpClientHandler.SslProtocols\n  fullName: HttpClientHandler.SslProtocols\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml\n- uid: System.Net.Http.HttpClientHandler.SupportsAutomaticDecompression*\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: SupportsAutomaticDecompression\n  nameWithType: HttpClientHandler.SupportsAutomaticDecompression\n  fullName: HttpClientHandler.SupportsAutomaticDecompression\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml\n- uid: System.Net.Http.HttpClientHandler.SupportsProxy*\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: SupportsProxy\n  nameWithType: HttpClientHandler.SupportsProxy\n  fullName: HttpClientHandler.SupportsProxy\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml\n- uid: System.Net.Http.HttpClientHandler.SupportsRedirectConfiguration*\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: SupportsRedirectConfiguration\n  nameWithType: HttpClientHandler.SupportsRedirectConfiguration\n  fullName: HttpClientHandler.SupportsRedirectConfiguration\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml\n- uid: System.Net.Http.HttpClientHandler.UseCookies*\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: UseCookies\n  nameWithType: HttpClientHandler.UseCookies\n  fullName: HttpClientHandler.UseCookies\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml\n- uid: System.Net.Http.HttpClientHandler.UseDefaultCredentials*\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: UseDefaultCredentials\n  nameWithType: HttpClientHandler.UseDefaultCredentials\n  fullName: HttpClientHandler.UseDefaultCredentials\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml\n- uid: System.Net.Http.HttpClientHandler.UseProxy*\n  parent: System.Net.Http.HttpClientHandler\n  isExternal: false\n  name: UseProxy\n  nameWithType: HttpClientHandler.UseProxy\n  fullName: HttpClientHandler.UseProxy\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpClientHandler.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Net.Http.HttpMessageHandler.Dispose\n  parent: System.Net.Http.HttpMessageHandler\n  isExternal: false\n  name: Dispose()\n  nameWithType: HttpMessageHandler.Dispose()\n  fullName: HttpMessageHandler.Dispose()\n"}