{"nodes":[{"content":"This class has been deprecated as of Visual Basic 2005.","nodes":[{"pos":[0,55],"content":"This class has been deprecated as of Visual Basic 2005.","nodes":[{"content":"This class has been deprecated as of Visual Basic 2005.","pos":[0,55]}]}],"pos":[2329,2385],"yaml":true},{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"pos":[0,101],"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","pos":[0,101]}]}],"pos":[2396,2498],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"Microsoft.VisualBasic.CompilerServices.ObjectType\"></xref> class.","nodes":[{"pos":[0,111],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"Microsoft.VisualBasic.CompilerServices.ObjectType\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"Microsoft.VisualBasic.CompilerServices.ObjectType\"></xref> class."}],"pos":[3899,4011],"yaml":true},{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"pos":[0,101],"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","pos":[0,101]}]}],"pos":[4022,4124],"yaml":true,"extradata":"MT"},{"content":"Performs an addition (+) operation.","nodes":[{"pos":[0,35],"content":"Performs an addition (+) operation.","nodes":[{"content":"Performs an addition (+) operation.","pos":[0,35]}]}],"pos":[5373,5409],"yaml":true},{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"pos":[0,101],"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","pos":[0,101]}]}],"pos":[5420,5522],"yaml":true,"extradata":"MT"},{"content":"Required. Any numeric expression.","nodes":[{"pos":[0,33],"content":"Required. Any numeric expression.","nodes":[{"content":"Required. Any numeric expression.","pos":[0,33],"nodes":[{"content":"Required.","pos":[0,9]},{"content":"Any numeric expression.","pos":[10,33]}]}]}],"pos":[5671,5705],"yaml":true},{"content":"Required. Any numeric expression.","nodes":[{"pos":[0,33],"content":"Required. Any numeric expression.","nodes":[{"content":"Required. Any numeric expression.","pos":[0,33],"nodes":[{"content":"Required.","pos":[0,9]},{"content":"Any numeric expression.","pos":[10,33]}]}]}],"pos":[5763,5797],"yaml":true},{"content":"The sum of <code>o1</code> and <code>o2</code>.","nodes":[{"pos":[0,47],"content":"The sum of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">o1</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">o2</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The sum of <code>o1</code> and <code>o2</code>."}],"pos":[5854,5902],"yaml":true},{"content":"Performs a bitwise `And` operation.","nodes":[{"pos":[0,35],"content":"Performs a bitwise <ph id=\"ph1\">`And`</ph> operation.","source":"Performs a bitwise `And` operation."}],"pos":[7106,7142],"yaml":true},{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"pos":[0,101],"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","pos":[0,101]}]}],"pos":[7153,7255],"yaml":true,"extradata":"MT"},{"content":"Required. Any `Boolean` or numeric expression.","nodes":[{"pos":[0,46],"content":"Required. Any `Boolean` or numeric expression.","nodes":[{"content":"Required.","pos":[0,9]},{"content":"Any <ph id=\"ph1\">`Boolean`</ph> or numeric expression.","pos":[10,46],"source":" Any `Boolean` or numeric expression."}]}],"pos":[7413,7460],"yaml":true},{"content":"Required. Any `Boolean` or numeric expression.","nodes":[{"pos":[0,46],"content":"Required. Any `Boolean` or numeric expression.","nodes":[{"content":"Required.","pos":[0,9]},{"content":"Any <ph id=\"ph1\">`Boolean`</ph> or numeric expression.","pos":[10,46],"source":" Any `Boolean` or numeric expression."}]}],"pos":[7520,7567],"yaml":true},{"content":"1 if both <code>obj1</code> and <code>obj2</code> evaluate to 1; otherwise, 0.","nodes":[{"pos":[0,78],"content":"1 if both <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">obj1</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">obj2</ph><ept id=\"p2\">&lt;/code&gt;</ept> evaluate to 1; otherwise, 0.","source":"1 if both <code>obj1</code> and <code>obj2</code> evaluate to 1; otherwise, 0."}],"pos":[7624,7703],"yaml":true},{"content":"Performs a bitwise `Or` operation.","nodes":[{"pos":[0,34],"content":"Performs a bitwise <ph id=\"ph1\">`Or`</ph> operation.","source":"Performs a bitwise `Or` operation."}],"pos":[8904,8939],"yaml":true},{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"pos":[0,101],"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","pos":[0,101]}]}],"pos":[8950,9052],"yaml":true,"extradata":"MT"},{"content":"Required. Any `Boolean` or numeric expression.","nodes":[{"pos":[0,46],"content":"Required. Any `Boolean` or numeric expression.","nodes":[{"content":"Required.","pos":[0,9]},{"content":"Any <ph id=\"ph1\">`Boolean`</ph> or numeric expression.","pos":[10,46],"source":" Any `Boolean` or numeric expression."}]}],"pos":[9209,9256],"yaml":true},{"content":"Required. Any `Boolean` or numeric expression.","nodes":[{"pos":[0,46],"content":"Required. Any `Boolean` or numeric expression.","nodes":[{"content":"Required.","pos":[0,9]},{"content":"Any <ph id=\"ph1\">`Boolean`</ph> or numeric expression.","pos":[10,46],"source":" Any `Boolean` or numeric expression."}]}],"pos":[9316,9363],"yaml":true},{"content":"0 if both <code>obj1</code> and <code>obj2</code> evaluate to 0; otherwise, 1.","nodes":[{"pos":[0,78],"content":"0 if both <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">obj1</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">obj2</ph><ept id=\"p2\">&lt;/code&gt;</ept> evaluate to 0; otherwise, 1.","source":"0 if both <code>obj1</code> and <code>obj2</code> evaluate to 0; otherwise, 1."}],"pos":[9420,9499],"yaml":true},{"content":"Performs an `Xor` operation.","nodes":[{"pos":[0,28],"content":"Performs an <ph id=\"ph1\">`Xor`</ph> operation.","source":"Performs an `Xor` operation."}],"pos":[10705,10734],"yaml":true},{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"pos":[0,101],"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","pos":[0,101]}]}],"pos":[10745,10847],"yaml":true,"extradata":"MT"},{"content":"Required. Any `Boolean` or numeric expression.","nodes":[{"pos":[0,46],"content":"Required. Any `Boolean` or numeric expression.","nodes":[{"content":"Required.","pos":[0,9]},{"content":"Any <ph id=\"ph1\">`Boolean`</ph> or numeric expression.","pos":[10,46],"source":" Any `Boolean` or numeric expression."}]}],"pos":[11005,11052],"yaml":true},{"content":"Required. Any `Boolean` or numeric expression.","nodes":[{"pos":[0,46],"content":"Required. Any `Boolean` or numeric expression.","nodes":[{"content":"Required.","pos":[0,9]},{"content":"Any <ph id=\"ph1\">`Boolean`</ph> or numeric expression.","pos":[10,46],"source":" Any `Boolean` or numeric expression."}]}],"pos":[11112,11159],"yaml":true},{"content":"A numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns. For more information, see [Xor Operator](~/docs/visual-basic/language-reference/operators/xor-operator.md).","nodes":[{"pos":[0,222],"content":"A numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns. For more information, see [Xor Operator](~/docs/visual-basic/language-reference/operators/xor-operator.md).","nodes":[{"content":"A numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns.","pos":[0,114]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Xor Operator<ept id=\"p1\">](~/docs/visual-basic/language-reference/operators/xor-operator.md)</ept>.","pos":[115,222],"source":" For more information, see [Xor Operator](~/docs/visual-basic/language-reference/operators/xor-operator.md)."}]}],"pos":[11216,11439],"yaml":true},{"content":"Performs a division (/) operation.","nodes":[{"pos":[0,34],"content":"Performs a division (/) operation.","nodes":[{"content":"Performs a division (/) operation.","pos":[0,34]}]}],"pos":[12628,12663],"yaml":true},{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"pos":[0,101],"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","pos":[0,101]}]}],"pos":[12674,12776],"yaml":true,"extradata":"MT"},{"content":"Required. Any numeric expression.","nodes":[{"pos":[0,33],"content":"Required. Any numeric expression.","nodes":[{"content":"Required. Any numeric expression.","pos":[0,33],"nodes":[{"content":"Required.","pos":[0,9]},{"content":"Any numeric expression.","pos":[10,33]}]}]}],"pos":[12925,12959],"yaml":true},{"content":"Required. Any numeric expression.","nodes":[{"pos":[0,33],"content":"Required. Any numeric expression.","nodes":[{"content":"Required. Any numeric expression.","pos":[0,33],"nodes":[{"content":"Required.","pos":[0,9]},{"content":"Any numeric expression.","pos":[10,33]}]}]}],"pos":[13017,13051],"yaml":true},{"content":"The full quotient of <code>o1</code> divided by <code>o2</code>, including any remainder.","nodes":[{"pos":[0,89],"content":"The full quotient of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">o1</ph><ept id=\"p1\">&lt;/code&gt;</ept> divided by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">o2</ph><ept id=\"p2\">&lt;/code&gt;</ept>, including any remainder.","source":"The full quotient of <code>o1</code> divided by <code>o2</code>, including any remainder."}],"pos":[13108,13198],"yaml":true},{"content":"Returns a boxed primitive value. This method is used to prevent copying structures multiple times.","nodes":[{"pos":[0,98],"content":"Returns a boxed primitive value. This method is used to prevent copying structures multiple times.","nodes":[{"content":"Returns a boxed primitive value. This method is used to prevent copying structures multiple times.","pos":[0,98],"nodes":[{"content":"Returns a boxed primitive value.","pos":[0,32]},{"content":"This method is used to prevent copying structures multiple times.","pos":[33,98]}]}]}],"pos":[14420,14519],"yaml":true},{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"pos":[0,101],"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","pos":[0,101]}]}],"pos":[14530,14632],"yaml":true,"extradata":"MT"},{"content":"Required. Any expression.","nodes":[{"pos":[0,25],"content":"Required. Any expression.","nodes":[{"content":"Required. Any expression.","pos":[0,25],"nodes":[{"content":"Required.","pos":[0,9]},{"content":"Any expression.","pos":[10,25]}]}]}],"pos":[14785,14811],"yaml":true},{"content":"The primitive value of <code>o</code> typed as object.","nodes":[{"pos":[0,54],"content":"The primitive value of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">o</ph><ept id=\"p1\">&lt;/code&gt;</ept> typed as object.","source":"The primitive value of <code>o</code> typed as object."}],"pos":[14868,14923],"yaml":true},{"content":"Performs an integer division (\\\\) operation.","nodes":[{"pos":[0,44],"content":"Performs an integer division (\\\\) operation.","nodes":[{"content":"Performs an integer division (<ph id=\"ph1\">\\\\</ph>) operation.","pos":[0,44],"source":"Performs an integer division (\\\\) operation."}]}],"pos":[16132,16177],"yaml":true},{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"pos":[0,101],"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","pos":[0,101]}]}],"pos":[16188,16290],"yaml":true,"extradata":"MT"},{"content":"Required. Any numeric expression.","nodes":[{"pos":[0,33],"content":"Required. Any numeric expression.","nodes":[{"content":"Required. Any numeric expression.","pos":[0,33],"nodes":[{"content":"Required.","pos":[0,9]},{"content":"Any numeric expression.","pos":[10,33]}]}]}],"pos":[16440,16474],"yaml":true},{"content":"Required. Any numeric expression.","nodes":[{"pos":[0,33],"content":"Required. Any numeric expression.","nodes":[{"content":"Required. Any numeric expression.","pos":[0,33],"nodes":[{"content":"Required.","pos":[0,9]},{"content":"Any numeric expression.","pos":[10,33]}]}]}],"pos":[16532,16566],"yaml":true},{"content":"The integer quotient of <code>o1</code> divided by <code>o2</code>, which discards any remainder and retains only the integer portion.","nodes":[{"pos":[0,134],"content":"The integer quotient of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">o1</ph><ept id=\"p1\">&lt;/code&gt;</ept> divided by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">o2</ph><ept id=\"p2\">&lt;/code&gt;</ept>, which discards any remainder and retains only the integer portion.","source":"The integer quotient of <code>o1</code> divided by <code>o2</code>, which discards any remainder and retains only the integer portion."}],"pos":[16623,16758],"yaml":true},{"content":"Performs a `Like` comparison.","nodes":[{"pos":[0,29],"content":"Performs a <ph id=\"ph1\">`Like`</ph> comparison.","source":"Performs a `Like` comparison."}],"pos":[18104,18134],"yaml":true},{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"pos":[0,101],"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","pos":[0,101]}]}],"pos":[18145,18247],"yaml":true,"extradata":"MT"},{"content":"Required. Any expression.","nodes":[{"pos":[0,25],"content":"Required. Any expression.","nodes":[{"content":"Required. Any expression.","pos":[0,25],"nodes":[{"content":"Required.","pos":[0,9]},{"content":"Any expression.","pos":[10,25]}]}]}],"pos":[18456,18482],"yaml":true},{"content":"Required. Any string expression conforming to the pattern-matching conventions described in Like Operator.","nodes":[{"pos":[0,106],"content":"Required. Any string expression conforming to the pattern-matching conventions described in Like Operator.","nodes":[{"content":"Required. Any string expression conforming to the pattern-matching conventions described in Like Operator.","pos":[0,106],"nodes":[{"content":"Required.","pos":[0,9]},{"content":"Any string expression conforming to the pattern-matching conventions described in Like Operator.","pos":[10,106]}]}]}],"pos":[18544,18651],"yaml":true},{"content":"Required. A <xref href=\"Microsoft.VisualBasic.CompareMethod\"></xref> value that specifies that the operation use either text or binary comparison.","nodes":[{"pos":[0,146],"content":"Required. A <xref href=\"Microsoft.VisualBasic.CompareMethod\"></xref> value that specifies that the operation use either text or binary comparison.","nodes":[{"content":"Required.","pos":[0,9]},{"content":"A <ph id=\"ph1\">&lt;xref href=\"Microsoft.VisualBasic.CompareMethod\"&gt;&lt;/xref&gt;</ph> value that specifies that the operation use either text or binary comparison.","pos":[10,146],"source":" A <xref href=\"Microsoft.VisualBasic.CompareMethod\"></xref> value that specifies that the operation use either text or binary comparison."}]}],"pos":[18742,18889],"yaml":true},{"content":"`True` if the string representation of the value in <code>vLeft</code> satisfies the pattern that is contained in <code>vRight</code>; otherwise, `False`. `True` if both <code>vLeft</code> and <code>vRight</code> are `Nothing`.","nodes":[{"pos":[0,227],"content":"`True` if the string representation of the value in <code>vLeft</code> satisfies the pattern that is contained in <code>vRight</code>; otherwise, `False`. `True` if both <code>vLeft</code> and <code>vRight</code> are `Nothing`.","nodes":[{"content":"<ph id=\"ph1\">`True`</ph> if the string representation of the value in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">vLeft</ph><ept id=\"p1\">&lt;/code&gt;</ept> satisfies the pattern that is contained in <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">vRight</ph><ept id=\"p2\">&lt;/code&gt;</ept>; otherwise, <ph id=\"ph4\">`False`</ph>.","pos":[0,154],"source":"`True` if the string representation of the value in <code>vLeft</code> satisfies the pattern that is contained in <code>vRight</code>; otherwise, `False`."},{"content":"<ph id=\"ph1\">`True`</ph> if both <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">vLeft</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">vRight</ph><ept id=\"p2\">&lt;/code&gt;</ept> are <ph id=\"ph4\">`Nothing`</ph>.","pos":[155,227],"source":"`True` if both <code>vLeft</code> and <code>vRight</code> are `Nothing`."}]}],"pos":[18947,19177],"yaml":true},{"content":"Performs a modulus (`Mod`) operation.","nodes":[{"pos":[0,37],"content":"Performs a modulus (<ph id=\"ph1\">`Mod`</ph>) operation.","source":"Performs a modulus (`Mod`) operation."}],"pos":[20364,20402],"yaml":true},{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"pos":[0,101],"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","pos":[0,101]}]}],"pos":[20413,20515],"yaml":true,"extradata":"MT"},{"content":"Required. Any numeric expression.","nodes":[{"pos":[0,33],"content":"Required. Any numeric expression.","nodes":[{"content":"Required. Any numeric expression.","pos":[0,33],"nodes":[{"content":"Required.","pos":[0,9]},{"content":"Any numeric expression.","pos":[10,33]}]}]}],"pos":[20664,20698],"yaml":true},{"content":"Required. Any numeric expression.","nodes":[{"pos":[0,33],"content":"Required. Any numeric expression.","nodes":[{"content":"Required. Any numeric expression.","pos":[0,33],"nodes":[{"content":"Required.","pos":[0,9]},{"content":"Any numeric expression.","pos":[10,33]}]}]}],"pos":[20756,20790],"yaml":true},{"content":"The remainder after <code>o1</code> is divided by <code>o2</code>.","nodes":[{"pos":[0,66],"content":"The remainder after <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">o1</ph><ept id=\"p1\">&lt;/code&gt;</ept> is divided by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">o2</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The remainder after <code>o1</code> is divided by <code>o2</code>."}],"pos":[20847,20914],"yaml":true},{"content":"Performs a multiplication (*) operation.","nodes":[{"pos":[0,40],"content":"Performs a multiplication (*) operation.","nodes":[{"content":"Performs a multiplication (*) operation.","pos":[0,40]}]}],"pos":[22100,22141],"yaml":true},{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"pos":[0,101],"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","pos":[0,101]}]}],"pos":[22152,22254],"yaml":true,"extradata":"MT"},{"content":"Required. Any numeric expression.","nodes":[{"pos":[0,33],"content":"Required. Any numeric expression.","nodes":[{"content":"Required. Any numeric expression.","pos":[0,33],"nodes":[{"content":"Required.","pos":[0,9]},{"content":"Any numeric expression.","pos":[10,33]}]}]}],"pos":[22403,22437],"yaml":true},{"content":"Required. Any numeric expression.","nodes":[{"pos":[0,33],"content":"Required. Any numeric expression.","nodes":[{"content":"Required. Any numeric expression.","pos":[0,33],"nodes":[{"content":"Required.","pos":[0,9]},{"content":"Any numeric expression.","pos":[10,33]}]}]}],"pos":[22495,22529],"yaml":true},{"content":"The product of <code>o1</code> and <code>o2</code>.","nodes":[{"pos":[0,51],"content":"The product of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">o1</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">o2</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The product of <code>o1</code> and <code>o2</code>."}],"pos":[22586,22638],"yaml":true},{"content":"Performs a unary minus (–) operation.","nodes":[{"pos":[0,37],"content":"Performs a unary minus (–) operation.","nodes":[{"content":"Performs a unary minus (–) operation.","pos":[0,37]}]}],"pos":[23758,23796],"yaml":true},{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"pos":[0,101],"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","pos":[0,101]}]}],"pos":[23807,23909],"yaml":true,"extradata":"MT"},{"content":"Required. Any numeric expression.","nodes":[{"pos":[0,33],"content":"Required. Any numeric expression.","nodes":[{"content":"Required. Any numeric expression.","pos":[0,33],"nodes":[{"content":"Required.","pos":[0,9]},{"content":"Any numeric expression.","pos":[10,33]}]}]}],"pos":[24049,24083],"yaml":true},{"content":"The negative value of <code>obj</code>.","nodes":[{"pos":[0,39],"content":"The negative value of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The negative value of <code>obj</code>."}],"pos":[24140,24180],"yaml":true},{"content":"Performs a `Not` operation.","nodes":[{"pos":[0,27],"content":"Performs a <ph id=\"ph1\">`Not`</ph> operation.","source":"Performs a `Not` operation."}],"pos":[25300,25328],"yaml":true},{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"pos":[0,101],"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","pos":[0,101]}]}],"pos":[25339,25441],"yaml":true,"extradata":"MT"},{"content":"Required. Any `Boolean` or numeric expression.","nodes":[{"pos":[0,46],"content":"Required. Any `Boolean` or numeric expression.","nodes":[{"content":"Required.","pos":[0,9]},{"content":"Any <ph id=\"ph1\">`Boolean`</ph> or numeric expression.","pos":[10,46],"source":" Any `Boolean` or numeric expression."}]}],"pos":[25581,25628],"yaml":true},{"content":"For `Boolean` operations, `False` if <code>obj</code> is `True`; otherwise, `True`. For bitwise operations, 1 if <code>obj</code> is 0; otherwise, 0.","nodes":[{"pos":[0,149],"content":"For `Boolean` operations, `False` if <code>obj</code> is `True`; otherwise, `True`. For bitwise operations, 1 if <code>obj</code> is 0; otherwise, 0.","nodes":[{"content":"For <ph id=\"ph1\">`Boolean`</ph> operations, <ph id=\"ph2\">`False`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph3\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph4\">`True`</ph>; otherwise, <ph id=\"ph5\">`True`</ph>.","pos":[0,83],"source":"For `Boolean` operations, `False` if <code>obj</code> is `True`; otherwise, `True`."},{"content":"For bitwise operations, 1 if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> is 0; otherwise, 0.","pos":[84,149],"source":" For bitwise operations, 1 if <code>obj</code> is 0; otherwise, 0."}]}],"pos":[25685,25835],"yaml":true},{"content":"Performs binary or text string comparison when given two objects.","nodes":[{"pos":[0,65],"content":"Performs binary or text string comparison when given two objects.","nodes":[{"content":"Performs binary or text string comparison when given two objects.","pos":[0,65]}]}],"pos":[27093,27159],"yaml":true},{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"pos":[0,101],"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","pos":[0,101]}]}],"pos":[27170,27272],"yaml":true,"extradata":"MT"},{"content":"Required. Any expression.","nodes":[{"pos":[0,25],"content":"Required. Any expression.","nodes":[{"content":"Required. Any expression.","pos":[0,25],"nodes":[{"content":"Required.","pos":[0,9]},{"content":"Any expression.","pos":[10,25]}]}]}],"pos":[27436,27462],"yaml":true},{"content":"Required. Any expression.","nodes":[{"pos":[0,25],"content":"Required. Any expression.","nodes":[{"content":"Required. Any expression.","pos":[0,25],"nodes":[{"content":"Required.","pos":[0,9]},{"content":"Any expression.","pos":[10,25]}]}]}],"pos":[27520,27546],"yaml":true},{"content":"Required. `True` to perform a case-insensitive string comparison; otherwise, `False`.","nodes":[{"pos":[0,85],"content":"Required. `True` to perform a case-insensitive string comparison; otherwise, `False`.","nodes":[{"content":"Required.","pos":[0,9]},{"content":"<ph id=\"ph1\">`True`</ph> to perform a case-insensitive string comparison; otherwise, <ph id=\"ph2\">`False`</ph>.","pos":[10,85],"source":"`True` to perform a case-insensitive string comparison; otherwise, `False`."}]}],"pos":[27614,27700],"yaml":true},{"content":"<table><thead><tr><th> Value  \n  \n </th><th> Condition  \n  \n </th></tr></thead><tbody><tr><td> -1  \n  \n </td><td>\n          <code>o1</code> is less than <code>o2</code>.  \n  \n </td></tr><tr><td> 0  \n  \n </td><td>\n          <code>o1</code> is equal to <code>o2</code>.  \n  \n </td></tr><tr><td> 1  \n  \n </td><td>\n          <code>o1</code> is greater than <code>o2</code>.  \n  \n </td></tr></tbody></table>","nodes":[{"pos":[0,403],"content":"<table><thead><tr><th> Value  \n  \n </th><th> Condition  \n  \n </th></tr></thead><tbody><tr><td> -1  \n  \n </td><td>\n          <code>o1</code> is less than <code>o2</code>.  \n  \n </td></tr><tr><td> 0  \n  \n </td><td>\n          <code>o1</code> is equal to <code>o2</code>.  \n  \n </td></tr><tr><td> 1  \n  \n </td><td>\n          <code>o1</code> is greater than <code>o2</code>.  \n  \n </td></tr></tbody></table>","nodes":[{"content":"Value","pos":[23,33],"source":" Value  \n  \n "},{"content":"Condition","pos":[45,59],"source":" Condition  \n  \n "},{"content":"-1","pos":[95,102],"source":" -1  \n  \n "},{"content":"\n          <code>o1</code> is less than <code>o2</code>.  \n  \n ","pos":[113,176],"nodes":[{"content":"<ph id=\"ph1\">\n          &lt;code&gt;o1&lt;/code&gt;</ph> is less than <ph id=\"ph2\">&lt;code&gt;o2&lt;/code&gt;</ph>.","pos":[0,56],"source":"\n          <code>o1</code> is less than <code>o2</code>."}]},{"content":"0","pos":[195,201],"source":" 0  \n  \n "},{"content":"\n          <code>o1</code> is equal to <code>o2</code>.  \n  \n ","pos":[212,274],"nodes":[{"content":"<ph id=\"ph1\">\n          &lt;code&gt;o1&lt;/code&gt;</ph> is equal to <ph id=\"ph2\">&lt;code&gt;o2&lt;/code&gt;</ph>.","pos":[0,55],"source":"\n          <code>o1</code> is equal to <code>o2</code>."}]},{"content":"1","pos":[293,299],"source":" 1  \n  \n "},{"content":"\n          <code>o1</code> is greater than <code>o2</code>.  \n  \n ","pos":[310,376],"nodes":[{"content":"<ph id=\"ph1\">\n          &lt;code&gt;o1&lt;/code&gt;</ph> is greater than <ph id=\"ph2\">&lt;code&gt;o2&lt;/code&gt;</ph>.","pos":[0,59],"source":"\n          <code>o1</code> is greater than <code>o2</code>."}]}]}],"pos":[27756,28180],"yaml":true},{"content":"Performs a unary plus (+) operation.","nodes":[{"pos":[0,36],"content":"Performs a unary plus (+) operation.","nodes":[{"content":"Performs a unary plus (+) operation.","pos":[0,36]}]}],"pos":[29306,29343],"yaml":true},{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"pos":[0,101],"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","pos":[0,101]}]}],"pos":[29354,29456],"yaml":true,"extradata":"MT"},{"content":"Required. Any numeric expression.","nodes":[{"pos":[0,33],"content":"Required. Any numeric expression.","nodes":[{"content":"Required. Any numeric expression.","pos":[0,33],"nodes":[{"content":"Required.","pos":[0,9]},{"content":"Any numeric expression.","pos":[10,33]}]}]}],"pos":[29597,29631],"yaml":true},{"content":"The value of <code>obj</code>. (The sign of the <code>obj</code> is unchanged.)","nodes":[{"pos":[0,79],"content":"The value of <code>obj</code>. (The sign of the <code>obj</code> is unchanged.)","nodes":[{"content":"The value of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[0,30],"source":"The value of <code>obj</code>."},{"content":"(The sign of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> is unchanged.)","pos":[31,79],"source":" (The sign of the <code>obj</code> is unchanged.)"}]}],"pos":[29688,29768],"yaml":true},{"content":"Performs an exponent (^) operation.","nodes":[{"pos":[0,35],"content":"Performs an exponent (^) operation.","nodes":[{"content":"Performs an exponent (^) operation.","pos":[0,35]}]}],"pos":[30955,30991],"yaml":true},{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"pos":[0,101],"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","pos":[0,101]}]}],"pos":[31002,31104],"yaml":true,"extradata":"MT"},{"content":"Required. Any numeric expression.","nodes":[{"pos":[0,33],"content":"Required. Any numeric expression.","nodes":[{"content":"Required. Any numeric expression.","pos":[0,33],"nodes":[{"content":"Required.","pos":[0,9]},{"content":"Any numeric expression.","pos":[10,33]}]}]}],"pos":[31259,31293],"yaml":true},{"content":"Required. Any numeric expression.","nodes":[{"pos":[0,33],"content":"Required. Any numeric expression.","nodes":[{"content":"Required. Any numeric expression.","pos":[0,33],"nodes":[{"content":"Required.","pos":[0,9]},{"content":"Any numeric expression.","pos":[10,33]}]}]}],"pos":[31353,31387],"yaml":true},{"content":"The result of <code>obj1</code> raised to the power of <code>obj2</code>.","nodes":[{"pos":[0,73],"content":"The result of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">obj1</ph><ept id=\"p1\">&lt;/code&gt;</ept> raised to the power of <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">obj2</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The result of <code>obj1</code> raised to the power of <code>obj2</code>."}],"pos":[31444,31518],"yaml":true},{"content":"Performs an arithmetic left shift (<<) operation.","nodes":[{"pos":[0,49],"content":"Performs an arithmetic left shift (<<) operation.","nodes":[{"content":"Performs an arithmetic left shift (&lt;&lt;) operation.","pos":[0,49],"source":"Performs an arithmetic left shift (<<) operation."}]}],"pos":[32734,32784],"yaml":true},{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"pos":[0,101],"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","pos":[0,101]}]}],"pos":[32795,32897],"yaml":true,"extradata":"MT"},{"content":"Required. Integral numeric expression. The bit pattern to be shifted. The data type must be an integral type (`SByte`, `Byte`, `Short`, `UShort`, `Integer`, `UInteger`, `Long`, or `ULong`).","nodes":[{"pos":[0,189],"content":"Required. Integral numeric expression. The bit pattern to be shifted. The data type must be an integral type (`SByte`, `Byte`, `Short`, `UShort`, `Integer`, `UInteger`, `Long`, or `ULong`).","nodes":[{"content":"Required.","pos":[0,9]},{"content":"Integral numeric expression.","pos":[10,38]},{"content":"The bit pattern to be shifted.","pos":[39,69]},{"content":"The data type must be an integral type (<ph id=\"ph1\">`SByte`</ph>, <ph id=\"ph2\">`Byte`</ph>, <ph id=\"ph3\">`Short`</ph>, <ph id=\"ph4\">`UShort`</ph>, <ph id=\"ph5\">`Integer`</ph>, <ph id=\"ph6\">`UInteger`</ph>, <ph id=\"ph7\">`Long`</ph>, or <ph id=\"ph8\">`ULong`</ph>).","pos":[70,189],"source":" The data type must be an integral type (`SByte`, `Byte`, `Short`, `UShort`, `Integer`, `UInteger`, `Long`, or `ULong`)."}]}],"pos":[33053,33243],"yaml":true},{"content":"Required. Numeric expression. The number of bits to shift the bit pattern. The data type must be `Integer` or widen to `Integer`.","nodes":[{"pos":[0,129],"content":"Required. Numeric expression. The number of bits to shift the bit pattern. The data type must be `Integer` or widen to `Integer`.","nodes":[{"content":"Required.","pos":[0,9]},{"content":"Numeric expression.","pos":[10,29]},{"content":"The number of bits to shift the bit pattern.","pos":[30,74]},{"content":"The data type must be <ph id=\"ph1\">`Integer`</ph> or widen to <ph id=\"ph2\">`Integer`</ph>.","pos":[75,129],"source":" The data type must be `Integer` or widen to `Integer`."}]}],"pos":[33304,33434],"yaml":true},{"content":"An integral numeric value. The result of shifting the bit pattern. The data type is the same as that of <code>o1</code>.","nodes":[{"pos":[0,120],"content":"An integral numeric value. The result of shifting the bit pattern. The data type is the same as that of <code>o1</code>.","nodes":[{"content":"An integral numeric value.","pos":[0,26]},{"content":"The result of shifting the bit pattern.","pos":[27,66]},{"content":"The data type is the same as that of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">o1</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[67,120],"source":" The data type is the same as that of <code>o1</code>."}]}],"pos":[33491,33612],"yaml":true},{"content":"Performs an arithmetic right shift (>>) operation.","nodes":[{"pos":[0,50],"content":"Performs an arithmetic right shift (>>) operation.","nodes":[{"content":"Performs an arithmetic right shift (&gt;&gt;) operation.","pos":[0,50],"source":"Performs an arithmetic right shift (>>) operation."}]}],"pos":[34840,34891],"yaml":true},{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"pos":[0,101],"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","pos":[0,101]}]}],"pos":[34902,35004],"yaml":true,"extradata":"MT"},{"content":"Required. Integral numeric expression. The bit pattern to be shifted. The data type must be an integral type (`SByte`, `Byte`, `Short`, `UShort`, `Integer`, `UInteger`, `Long`, or `ULong`).","nodes":[{"pos":[0,189],"content":"Required. Integral numeric expression. The bit pattern to be shifted. The data type must be an integral type (`SByte`, `Byte`, `Short`, `UShort`, `Integer`, `UInteger`, `Long`, or `ULong`).","nodes":[{"content":"Required.","pos":[0,9]},{"content":"Integral numeric expression.","pos":[10,38]},{"content":"The bit pattern to be shifted.","pos":[39,69]},{"content":"The data type must be an integral type (<ph id=\"ph1\">`SByte`</ph>, <ph id=\"ph2\">`Byte`</ph>, <ph id=\"ph3\">`Short`</ph>, <ph id=\"ph4\">`UShort`</ph>, <ph id=\"ph5\">`Integer`</ph>, <ph id=\"ph6\">`UInteger`</ph>, <ph id=\"ph7\">`Long`</ph>, or <ph id=\"ph8\">`ULong`</ph>).","pos":[70,189],"source":" The data type must be an integral type (`SByte`, `Byte`, `Short`, `UShort`, `Integer`, `UInteger`, `Long`, or `ULong`)."}]}],"pos":[35161,35351],"yaml":true},{"content":"Required. Numeric expression. The number of bits to shift the bit pattern. The data type must be `Integer` or widen to `Integer`.","nodes":[{"pos":[0,129],"content":"Required. Numeric expression. The number of bits to shift the bit pattern. The data type must be `Integer` or widen to `Integer`.","nodes":[{"content":"Required.","pos":[0,9]},{"content":"Numeric expression.","pos":[10,29]},{"content":"The number of bits to shift the bit pattern.","pos":[30,74]},{"content":"The data type must be <ph id=\"ph1\">`Integer`</ph> or widen to <ph id=\"ph2\">`Integer`</ph>.","pos":[75,129],"source":" The data type must be `Integer` or widen to `Integer`."}]}],"pos":[35412,35542],"yaml":true},{"content":"An integral numeric value. The result of shifting the bit pattern. The data type is the same as that of <code>o1</code>.","nodes":[{"pos":[0,120],"content":"An integral numeric value. The result of shifting the bit pattern. The data type is the same as that of <code>o1</code>.","nodes":[{"content":"An integral numeric value.","pos":[0,26]},{"content":"The result of shifting the bit pattern.","pos":[27,66]},{"content":"The data type is the same as that of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">o1</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[67,120],"source":" The data type is the same as that of <code>o1</code>."}]}],"pos":[35599,35720],"yaml":true},{"content":"Performs a string concatenation (&) operation.","nodes":[{"pos":[0,46],"content":"Performs a string concatenation (&) operation.","nodes":[{"content":"Performs a string concatenation (&amp;) operation.","pos":[0,46],"source":"Performs a string concatenation (&) operation."}]}],"pos":[36931,36978],"yaml":true},{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"pos":[0,101],"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","pos":[0,101]}]}],"pos":[36989,37091],"yaml":true,"extradata":"MT"},{"content":"Required. Any expression.","nodes":[{"pos":[0,25],"content":"Required. Any expression.","nodes":[{"content":"Required. Any expression.","pos":[0,25],"nodes":[{"content":"Required.","pos":[0,9]},{"content":"Any expression.","pos":[10,25]}]}]}],"pos":[37253,37279],"yaml":true},{"content":"Required. Any expression.","nodes":[{"pos":[0,25],"content":"Required. Any expression.","nodes":[{"content":"Required. Any expression.","pos":[0,25],"nodes":[{"content":"Required.","pos":[0,9]},{"content":"Any expression.","pos":[10,25]}]}]}],"pos":[37341,37367],"yaml":true},{"content":"A string representing the concatenation of <code>vLeft</code> and <code>vRight</code>.","nodes":[{"pos":[0,86],"content":"A string representing the concatenation of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">vLeft</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">vRight</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"A string representing the concatenation of <code>vLeft</code> and <code>vRight</code>."}],"pos":[37424,37511],"yaml":true},{"content":"Performs a subtraction (–) operation.","nodes":[{"pos":[0,37],"content":"Performs a subtraction (–) operation.","nodes":[{"content":"Performs a subtraction (–) operation.","pos":[0,37]}]}],"pos":[38700,38738],"yaml":true},{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"pos":[0,101],"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","pos":[0,101]}]}],"pos":[38749,38851],"yaml":true,"extradata":"MT"},{"content":"Required. Any numeric expression.","nodes":[{"pos":[0,33],"content":"Required. Any numeric expression.","nodes":[{"content":"Required. Any numeric expression.","pos":[0,33],"nodes":[{"content":"Required.","pos":[0,9]},{"content":"Any numeric expression.","pos":[10,33]}]}]}],"pos":[39000,39034],"yaml":true},{"content":"Required. Any numeric expression.","nodes":[{"pos":[0,33],"content":"Required. Any numeric expression.","nodes":[{"content":"Required. Any numeric expression.","pos":[0,33],"nodes":[{"content":"Required.","pos":[0,9]},{"content":"Any numeric expression.","pos":[10,33]}]}]}],"pos":[39092,39126],"yaml":true},{"content":"The difference between <code>o1</code> and <code>o2</code>.","nodes":[{"pos":[0,59],"content":"The difference between <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">o1</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">o2</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The difference between <code>o1</code> and <code>o2</code>."}],"pos":[39183,39243],"yaml":true},{"content":"Performs an `Xor` comparison.","nodes":[{"pos":[0,29],"content":"Performs an <ph id=\"ph1\">`Xor`</ph> comparison.","source":"Performs an `Xor` comparison."}],"pos":[40429,40459],"yaml":true},{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"pos":[0,101],"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","nodes":[{"content":"This class supports the Visual Basic compiler and is not intended to be used directly from your code.","pos":[0,101]}]}],"pos":[40470,40572],"yaml":true,"extradata":"MT"},{"content":"Required. Any `Boolean` or numeric expression.","nodes":[{"pos":[0,46],"content":"Required. Any `Boolean` or numeric expression.","nodes":[{"content":"Required.","pos":[0,9]},{"content":"Any <ph id=\"ph1\">`Boolean`</ph> or numeric expression.","pos":[10,46],"source":" Any `Boolean` or numeric expression."}]}],"pos":[40727,40774],"yaml":true},{"content":"Required. Any `Boolean` or numeric expression.","nodes":[{"pos":[0,46],"content":"Required. Any `Boolean` or numeric expression.","nodes":[{"content":"Required.","pos":[0,9]},{"content":"Any <ph id=\"ph1\">`Boolean`</ph> or numeric expression.","pos":[10,46],"source":" Any `Boolean` or numeric expression."}]}],"pos":[40834,40881],"yaml":true},{"content":"A `Boolean` or numeric value. For a `Boolean` comparison, the return value is the logical exclusion (exclusive logical disjunction) of two `Boolean` values. For bitwise (numeric) operations, the return value is a numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns. For more information, see [Xor Operator](~/docs/visual-basic/language-reference/operators/xor-operator.md).","nodes":[{"pos":[0,433],"content":"A `Boolean` or numeric value. For a `Boolean` comparison, the return value is the logical exclusion (exclusive logical disjunction) of two `Boolean` values. For bitwise (numeric) operations, the return value is a numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns. For more information, see [Xor Operator](~/docs/visual-basic/language-reference/operators/xor-operator.md).","nodes":[{"content":"A <ph id=\"ph1\">`Boolean`</ph> or numeric value.","pos":[0,29],"source":"A `Boolean` or numeric value."},{"content":"For a <ph id=\"ph1\">`Boolean`</ph> comparison, the return value is the logical exclusion (exclusive logical disjunction) of two <ph id=\"ph2\">`Boolean`</ph> values.","pos":[30,156],"source":" For a `Boolean` comparison, the return value is the logical exclusion (exclusive logical disjunction) of two `Boolean` values."},{"content":"For bitwise (numeric) operations, the return value is a numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns.","pos":[157,325]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Xor Operator<ept id=\"p1\">](~/docs/visual-basic/language-reference/operators/xor-operator.md)</ept>.","pos":[326,433],"source":" For more information, see [Xor Operator](~/docs/visual-basic/language-reference/operators/xor-operator.md)."}]}],"pos":[40938,41372],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.VisualBasic.CompilerServices.ObjectType\n  commentId: T:Microsoft.VisualBasic.CompilerServices.ObjectType\n  id: ObjectType\n  children:\n  - Microsoft.VisualBasic.CompilerServices.ObjectType.#ctor\n  - Microsoft.VisualBasic.CompilerServices.ObjectType.AddObj(System.Object,System.Object)\n  - Microsoft.VisualBasic.CompilerServices.ObjectType.BitAndObj(System.Object,System.Object)\n  - Microsoft.VisualBasic.CompilerServices.ObjectType.BitOrObj(System.Object,System.Object)\n  - Microsoft.VisualBasic.CompilerServices.ObjectType.BitXorObj(System.Object,System.Object)\n  - Microsoft.VisualBasic.CompilerServices.ObjectType.DivObj(System.Object,System.Object)\n  - Microsoft.VisualBasic.CompilerServices.ObjectType.GetObjectValuePrimitive(System.Object)\n  - Microsoft.VisualBasic.CompilerServices.ObjectType.IDivObj(System.Object,System.Object)\n  - Microsoft.VisualBasic.CompilerServices.ObjectType.LikeObj(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)\n  - Microsoft.VisualBasic.CompilerServices.ObjectType.ModObj(System.Object,System.Object)\n  - Microsoft.VisualBasic.CompilerServices.ObjectType.MulObj(System.Object,System.Object)\n  - Microsoft.VisualBasic.CompilerServices.ObjectType.NegObj(System.Object)\n  - Microsoft.VisualBasic.CompilerServices.ObjectType.NotObj(System.Object)\n  - Microsoft.VisualBasic.CompilerServices.ObjectType.ObjTst(System.Object,System.Object,System.Boolean)\n  - Microsoft.VisualBasic.CompilerServices.ObjectType.PlusObj(System.Object)\n  - Microsoft.VisualBasic.CompilerServices.ObjectType.PowObj(System.Object,System.Object)\n  - Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftLeftObj(System.Object,System.Int32)\n  - Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftRightObj(System.Object,System.Int32)\n  - Microsoft.VisualBasic.CompilerServices.ObjectType.StrCatObj(System.Object,System.Object)\n  - Microsoft.VisualBasic.CompilerServices.ObjectType.SubObj(System.Object,System.Object)\n  - Microsoft.VisualBasic.CompilerServices.ObjectType.XorObj(System.Object,System.Object)\n  langs:\n  - csharp\n  name: ObjectType\n  nameWithType: ObjectType\n  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType\n  type: Class\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: This class has been deprecated as of Visual Basic 2005.\n  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.\n  syntax:\n    content: public sealed class ObjectType\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/ObjectType.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.#ctor\n  commentId: M:Microsoft.VisualBasic.CompilerServices.ObjectType.#ctor\n  id: '#ctor'\n  parent: Microsoft.VisualBasic.CompilerServices.ObjectType\n  langs:\n  - csharp\n  name: ObjectType()\n  nameWithType: ObjectType.ObjectType()\n  fullName: ObjectType.ObjectType()\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Initializes a new instance of the <xref href=\"Microsoft.VisualBasic.CompilerServices.ObjectType\"></xref> class.\n  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.\n  syntax:\n    content: public ObjectType ();\n    parameters: []\n  overload: Microsoft.VisualBasic.CompilerServices.ObjectType.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/ObjectType.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.AddObj(System.Object,System.Object)\n  commentId: M:Microsoft.VisualBasic.CompilerServices.ObjectType.AddObj(System.Object,System.Object)\n  id: AddObj(System.Object,System.Object)\n  parent: Microsoft.VisualBasic.CompilerServices.ObjectType\n  langs:\n  - csharp\n  name: AddObj(Object, Object)\n  nameWithType: ObjectType.AddObj(Object, Object)\n  fullName: ObjectType.AddObj(Object, Object)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Performs an addition (+) operation.\n  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.\n  syntax:\n    content: public static object AddObj (object o1, object o2);\n    parameters:\n    - id: o1\n      type: System.Object\n      description: Required. Any numeric expression.\n    - id: o2\n      type: System.Object\n      description: Required. Any numeric expression.\n    return:\n      type: System.Object\n      description: The sum of <code>o1</code> and <code>o2</code>.\n  overload: Microsoft.VisualBasic.CompilerServices.ObjectType.AddObj*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/ObjectType.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.BitAndObj(System.Object,System.Object)\n  commentId: M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitAndObj(System.Object,System.Object)\n  id: BitAndObj(System.Object,System.Object)\n  parent: Microsoft.VisualBasic.CompilerServices.ObjectType\n  langs:\n  - csharp\n  name: BitAndObj(Object, Object)\n  nameWithType: ObjectType.BitAndObj(Object, Object)\n  fullName: ObjectType.BitAndObj(Object, Object)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Performs a bitwise `And` operation.\n  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.\n  syntax:\n    content: public static object BitAndObj (object obj1, object obj2);\n    parameters:\n    - id: obj1\n      type: System.Object\n      description: Required. Any `Boolean` or numeric expression.\n    - id: obj2\n      type: System.Object\n      description: Required. Any `Boolean` or numeric expression.\n    return:\n      type: System.Object\n      description: 1 if both <code>obj1</code> and <code>obj2</code> evaluate to 1; otherwise, 0.\n  overload: Microsoft.VisualBasic.CompilerServices.ObjectType.BitAndObj*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/ObjectType.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.BitOrObj(System.Object,System.Object)\n  commentId: M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitOrObj(System.Object,System.Object)\n  id: BitOrObj(System.Object,System.Object)\n  parent: Microsoft.VisualBasic.CompilerServices.ObjectType\n  langs:\n  - csharp\n  name: BitOrObj(Object, Object)\n  nameWithType: ObjectType.BitOrObj(Object, Object)\n  fullName: ObjectType.BitOrObj(Object, Object)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Performs a bitwise `Or` operation.\n  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.\n  syntax:\n    content: public static object BitOrObj (object obj1, object obj2);\n    parameters:\n    - id: obj1\n      type: System.Object\n      description: Required. Any `Boolean` or numeric expression.\n    - id: obj2\n      type: System.Object\n      description: Required. Any `Boolean` or numeric expression.\n    return:\n      type: System.Object\n      description: 0 if both <code>obj1</code> and <code>obj2</code> evaluate to 0; otherwise, 1.\n  overload: Microsoft.VisualBasic.CompilerServices.ObjectType.BitOrObj*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/ObjectType.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.BitXorObj(System.Object,System.Object)\n  commentId: M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitXorObj(System.Object,System.Object)\n  id: BitXorObj(System.Object,System.Object)\n  parent: Microsoft.VisualBasic.CompilerServices.ObjectType\n  langs:\n  - csharp\n  name: BitXorObj(Object, Object)\n  nameWithType: ObjectType.BitXorObj(Object, Object)\n  fullName: ObjectType.BitXorObj(Object, Object)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Performs an `Xor` operation.\n  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.\n  syntax:\n    content: public static object BitXorObj (object obj1, object obj2);\n    parameters:\n    - id: obj1\n      type: System.Object\n      description: Required. Any `Boolean` or numeric expression.\n    - id: obj2\n      type: System.Object\n      description: Required. Any `Boolean` or numeric expression.\n    return:\n      type: System.Object\n      description: A numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns. For more information, see [Xor Operator](~/docs/visual-basic/language-reference/operators/xor-operator.md).\n  overload: Microsoft.VisualBasic.CompilerServices.ObjectType.BitXorObj*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/ObjectType.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.DivObj(System.Object,System.Object)\n  commentId: M:Microsoft.VisualBasic.CompilerServices.ObjectType.DivObj(System.Object,System.Object)\n  id: DivObj(System.Object,System.Object)\n  parent: Microsoft.VisualBasic.CompilerServices.ObjectType\n  langs:\n  - csharp\n  name: DivObj(Object, Object)\n  nameWithType: ObjectType.DivObj(Object, Object)\n  fullName: ObjectType.DivObj(Object, Object)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Performs a division (/) operation.\n  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.\n  syntax:\n    content: public static object DivObj (object o1, object o2);\n    parameters:\n    - id: o1\n      type: System.Object\n      description: Required. Any numeric expression.\n    - id: o2\n      type: System.Object\n      description: Required. Any numeric expression.\n    return:\n      type: System.Object\n      description: The full quotient of <code>o1</code> divided by <code>o2</code>, including any remainder.\n  overload: Microsoft.VisualBasic.CompilerServices.ObjectType.DivObj*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/ObjectType.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.GetObjectValuePrimitive(System.Object)\n  commentId: M:Microsoft.VisualBasic.CompilerServices.ObjectType.GetObjectValuePrimitive(System.Object)\n  id: GetObjectValuePrimitive(System.Object)\n  parent: Microsoft.VisualBasic.CompilerServices.ObjectType\n  langs:\n  - csharp\n  name: GetObjectValuePrimitive(Object)\n  nameWithType: ObjectType.GetObjectValuePrimitive(Object)\n  fullName: ObjectType.GetObjectValuePrimitive(Object)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Returns a boxed primitive value. This method is used to prevent copying structures multiple times.\n  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.\n  syntax:\n    content: public static object GetObjectValuePrimitive (object o);\n    parameters:\n    - id: o\n      type: System.Object\n      description: Required. Any expression.\n    return:\n      type: System.Object\n      description: The primitive value of <code>o</code> typed as object.\n  overload: Microsoft.VisualBasic.CompilerServices.ObjectType.GetObjectValuePrimitive*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/ObjectType.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.IDivObj(System.Object,System.Object)\n  commentId: M:Microsoft.VisualBasic.CompilerServices.ObjectType.IDivObj(System.Object,System.Object)\n  id: IDivObj(System.Object,System.Object)\n  parent: Microsoft.VisualBasic.CompilerServices.ObjectType\n  langs:\n  - csharp\n  name: IDivObj(Object, Object)\n  nameWithType: ObjectType.IDivObj(Object, Object)\n  fullName: ObjectType.IDivObj(Object, Object)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Performs an integer division (\\\\) operation.\n  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.\n  syntax:\n    content: public static object IDivObj (object o1, object o2);\n    parameters:\n    - id: o1\n      type: System.Object\n      description: Required. Any numeric expression.\n    - id: o2\n      type: System.Object\n      description: Required. Any numeric expression.\n    return:\n      type: System.Object\n      description: The integer quotient of <code>o1</code> divided by <code>o2</code>, which discards any remainder and retains only the integer portion.\n  overload: Microsoft.VisualBasic.CompilerServices.ObjectType.IDivObj*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/ObjectType.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.LikeObj(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)\n  commentId: M:Microsoft.VisualBasic.CompilerServices.ObjectType.LikeObj(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)\n  id: LikeObj(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)\n  parent: Microsoft.VisualBasic.CompilerServices.ObjectType\n  langs:\n  - csharp\n  name: LikeObj(Object, Object, CompareMethod)\n  nameWithType: ObjectType.LikeObj(Object, Object, CompareMethod)\n  fullName: ObjectType.LikeObj(Object, Object, CompareMethod)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Performs a `Like` comparison.\n  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.\n  syntax:\n    content: public static bool LikeObj (object vLeft, object vRight, Microsoft.VisualBasic.CompareMethod CompareOption);\n    parameters:\n    - id: vLeft\n      type: System.Object\n      description: Required. Any expression.\n    - id: vRight\n      type: System.Object\n      description: Required. Any string expression conforming to the pattern-matching conventions described in Like Operator.\n    - id: CompareOption\n      type: Microsoft.VisualBasic.CompareMethod\n      description: Required. A <xref href=\"Microsoft.VisualBasic.CompareMethod\"></xref> value that specifies that the operation use either text or binary comparison.\n    return:\n      type: System.Boolean\n      description: '`True` if the string representation of the value in <code>vLeft</code> satisfies the pattern that is contained in <code>vRight</code>; otherwise, `False`. `True` if both <code>vLeft</code> and <code>vRight</code> are `Nothing`.'\n  overload: Microsoft.VisualBasic.CompilerServices.ObjectType.LikeObj*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/ObjectType.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.ModObj(System.Object,System.Object)\n  commentId: M:Microsoft.VisualBasic.CompilerServices.ObjectType.ModObj(System.Object,System.Object)\n  id: ModObj(System.Object,System.Object)\n  parent: Microsoft.VisualBasic.CompilerServices.ObjectType\n  langs:\n  - csharp\n  name: ModObj(Object, Object)\n  nameWithType: ObjectType.ModObj(Object, Object)\n  fullName: ObjectType.ModObj(Object, Object)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Performs a modulus (`Mod`) operation.\n  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.\n  syntax:\n    content: public static object ModObj (object o1, object o2);\n    parameters:\n    - id: o1\n      type: System.Object\n      description: Required. Any numeric expression.\n    - id: o2\n      type: System.Object\n      description: Required. Any numeric expression.\n    return:\n      type: System.Object\n      description: The remainder after <code>o1</code> is divided by <code>o2</code>.\n  overload: Microsoft.VisualBasic.CompilerServices.ObjectType.ModObj*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/ObjectType.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.MulObj(System.Object,System.Object)\n  commentId: M:Microsoft.VisualBasic.CompilerServices.ObjectType.MulObj(System.Object,System.Object)\n  id: MulObj(System.Object,System.Object)\n  parent: Microsoft.VisualBasic.CompilerServices.ObjectType\n  langs:\n  - csharp\n  name: MulObj(Object, Object)\n  nameWithType: ObjectType.MulObj(Object, Object)\n  fullName: ObjectType.MulObj(Object, Object)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Performs a multiplication (*) operation.\n  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.\n  syntax:\n    content: public static object MulObj (object o1, object o2);\n    parameters:\n    - id: o1\n      type: System.Object\n      description: Required. Any numeric expression.\n    - id: o2\n      type: System.Object\n      description: Required. Any numeric expression.\n    return:\n      type: System.Object\n      description: The product of <code>o1</code> and <code>o2</code>.\n  overload: Microsoft.VisualBasic.CompilerServices.ObjectType.MulObj*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/ObjectType.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.NegObj(System.Object)\n  commentId: M:Microsoft.VisualBasic.CompilerServices.ObjectType.NegObj(System.Object)\n  id: NegObj(System.Object)\n  parent: Microsoft.VisualBasic.CompilerServices.ObjectType\n  langs:\n  - csharp\n  name: NegObj(Object)\n  nameWithType: ObjectType.NegObj(Object)\n  fullName: ObjectType.NegObj(Object)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Performs a unary minus (–) operation.\n  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.\n  syntax:\n    content: public static object NegObj (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: Required. Any numeric expression.\n    return:\n      type: System.Object\n      description: The negative value of <code>obj</code>.\n  overload: Microsoft.VisualBasic.CompilerServices.ObjectType.NegObj*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/ObjectType.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.NotObj(System.Object)\n  commentId: M:Microsoft.VisualBasic.CompilerServices.ObjectType.NotObj(System.Object)\n  id: NotObj(System.Object)\n  parent: Microsoft.VisualBasic.CompilerServices.ObjectType\n  langs:\n  - csharp\n  name: NotObj(Object)\n  nameWithType: ObjectType.NotObj(Object)\n  fullName: ObjectType.NotObj(Object)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Performs a `Not` operation.\n  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.\n  syntax:\n    content: public static object NotObj (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: Required. Any `Boolean` or numeric expression.\n    return:\n      type: System.Object\n      description: For `Boolean` operations, `False` if <code>obj</code> is `True`; otherwise, `True`. For bitwise operations, 1 if <code>obj</code> is 0; otherwise, 0.\n  overload: Microsoft.VisualBasic.CompilerServices.ObjectType.NotObj*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/ObjectType.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.ObjTst(System.Object,System.Object,System.Boolean)\n  commentId: M:Microsoft.VisualBasic.CompilerServices.ObjectType.ObjTst(System.Object,System.Object,System.Boolean)\n  id: ObjTst(System.Object,System.Object,System.Boolean)\n  parent: Microsoft.VisualBasic.CompilerServices.ObjectType\n  langs:\n  - csharp\n  name: ObjTst(Object, Object, Boolean)\n  nameWithType: ObjectType.ObjTst(Object, Object, Boolean)\n  fullName: ObjectType.ObjTst(Object, Object, Boolean)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Performs binary or text string comparison when given two objects.\n  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.\n  syntax:\n    content: public static int ObjTst (object o1, object o2, bool TextCompare);\n    parameters:\n    - id: o1\n      type: System.Object\n      description: Required. Any expression.\n    - id: o2\n      type: System.Object\n      description: Required. Any expression.\n    - id: TextCompare\n      type: System.Boolean\n      description: Required. `True` to perform a case-insensitive string comparison; otherwise, `False`.\n    return:\n      type: System.Int32\n      description: \"<table><thead><tr><th> Value  \\n  \\n </th><th> Condition  \\n  \\n </th></tr></thead><tbody><tr><td> -1  \\n  \\n </td><td>\\n          <code>o1</code> is less than <code>o2</code>.  \\n  \\n </td></tr><tr><td> 0  \\n  \\n </td><td>\\n          <code>o1</code> is equal to <code>o2</code>.  \\n  \\n </td></tr><tr><td> 1  \\n  \\n </td><td>\\n          <code>o1</code> is greater than <code>o2</code>.  \\n  \\n </td></tr></tbody></table>\"\n  overload: Microsoft.VisualBasic.CompilerServices.ObjectType.ObjTst*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/ObjectType.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.PlusObj(System.Object)\n  commentId: M:Microsoft.VisualBasic.CompilerServices.ObjectType.PlusObj(System.Object)\n  id: PlusObj(System.Object)\n  parent: Microsoft.VisualBasic.CompilerServices.ObjectType\n  langs:\n  - csharp\n  name: PlusObj(Object)\n  nameWithType: ObjectType.PlusObj(Object)\n  fullName: ObjectType.PlusObj(Object)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Performs a unary plus (+) operation.\n  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.\n  syntax:\n    content: public static object PlusObj (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: Required. Any numeric expression.\n    return:\n      type: System.Object\n      description: The value of <code>obj</code>. (The sign of the <code>obj</code> is unchanged.)\n  overload: Microsoft.VisualBasic.CompilerServices.ObjectType.PlusObj*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/ObjectType.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.PowObj(System.Object,System.Object)\n  commentId: M:Microsoft.VisualBasic.CompilerServices.ObjectType.PowObj(System.Object,System.Object)\n  id: PowObj(System.Object,System.Object)\n  parent: Microsoft.VisualBasic.CompilerServices.ObjectType\n  langs:\n  - csharp\n  name: PowObj(Object, Object)\n  nameWithType: ObjectType.PowObj(Object, Object)\n  fullName: ObjectType.PowObj(Object, Object)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Performs an exponent (^) operation.\n  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.\n  syntax:\n    content: public static object PowObj (object obj1, object obj2);\n    parameters:\n    - id: obj1\n      type: System.Object\n      description: Required. Any numeric expression.\n    - id: obj2\n      type: System.Object\n      description: Required. Any numeric expression.\n    return:\n      type: System.Object\n      description: The result of <code>obj1</code> raised to the power of <code>obj2</code>.\n  overload: Microsoft.VisualBasic.CompilerServices.ObjectType.PowObj*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/ObjectType.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftLeftObj(System.Object,System.Int32)\n  commentId: M:Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftLeftObj(System.Object,System.Int32)\n  id: ShiftLeftObj(System.Object,System.Int32)\n  parent: Microsoft.VisualBasic.CompilerServices.ObjectType\n  langs:\n  - csharp\n  name: ShiftLeftObj(Object, Int32)\n  nameWithType: ObjectType.ShiftLeftObj(Object, Int32)\n  fullName: ObjectType.ShiftLeftObj(Object, Int32)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Performs an arithmetic left shift (<<) operation.\n  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.\n  syntax:\n    content: public static object ShiftLeftObj (object o1, int amount);\n    parameters:\n    - id: o1\n      type: System.Object\n      description: Required. Integral numeric expression. The bit pattern to be shifted. The data type must be an integral type (`SByte`, `Byte`, `Short`, `UShort`, `Integer`, `UInteger`, `Long`, or `ULong`).\n    - id: amount\n      type: System.Int32\n      description: Required. Numeric expression. The number of bits to shift the bit pattern. The data type must be `Integer` or widen to `Integer`.\n    return:\n      type: System.Object\n      description: An integral numeric value. The result of shifting the bit pattern. The data type is the same as that of <code>o1</code>.\n  overload: Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftLeftObj*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/ObjectType.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftRightObj(System.Object,System.Int32)\n  commentId: M:Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftRightObj(System.Object,System.Int32)\n  id: ShiftRightObj(System.Object,System.Int32)\n  parent: Microsoft.VisualBasic.CompilerServices.ObjectType\n  langs:\n  - csharp\n  name: ShiftRightObj(Object, Int32)\n  nameWithType: ObjectType.ShiftRightObj(Object, Int32)\n  fullName: ObjectType.ShiftRightObj(Object, Int32)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Performs an arithmetic right shift (>>) operation.\n  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.\n  syntax:\n    content: public static object ShiftRightObj (object o1, int amount);\n    parameters:\n    - id: o1\n      type: System.Object\n      description: Required. Integral numeric expression. The bit pattern to be shifted. The data type must be an integral type (`SByte`, `Byte`, `Short`, `UShort`, `Integer`, `UInteger`, `Long`, or `ULong`).\n    - id: amount\n      type: System.Int32\n      description: Required. Numeric expression. The number of bits to shift the bit pattern. The data type must be `Integer` or widen to `Integer`.\n    return:\n      type: System.Object\n      description: An integral numeric value. The result of shifting the bit pattern. The data type is the same as that of <code>o1</code>.\n  overload: Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftRightObj*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/ObjectType.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.StrCatObj(System.Object,System.Object)\n  commentId: M:Microsoft.VisualBasic.CompilerServices.ObjectType.StrCatObj(System.Object,System.Object)\n  id: StrCatObj(System.Object,System.Object)\n  parent: Microsoft.VisualBasic.CompilerServices.ObjectType\n  langs:\n  - csharp\n  name: StrCatObj(Object, Object)\n  nameWithType: ObjectType.StrCatObj(Object, Object)\n  fullName: ObjectType.StrCatObj(Object, Object)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Performs a string concatenation (&) operation.\n  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.\n  syntax:\n    content: public static object StrCatObj (object vLeft, object vRight);\n    parameters:\n    - id: vLeft\n      type: System.Object\n      description: Required. Any expression.\n    - id: vRight\n      type: System.Object\n      description: Required. Any expression.\n    return:\n      type: System.Object\n      description: A string representing the concatenation of <code>vLeft</code> and <code>vRight</code>.\n  overload: Microsoft.VisualBasic.CompilerServices.ObjectType.StrCatObj*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/ObjectType.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.SubObj(System.Object,System.Object)\n  commentId: M:Microsoft.VisualBasic.CompilerServices.ObjectType.SubObj(System.Object,System.Object)\n  id: SubObj(System.Object,System.Object)\n  parent: Microsoft.VisualBasic.CompilerServices.ObjectType\n  langs:\n  - csharp\n  name: SubObj(Object, Object)\n  nameWithType: ObjectType.SubObj(Object, Object)\n  fullName: ObjectType.SubObj(Object, Object)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Performs a subtraction (–) operation.\n  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.\n  syntax:\n    content: public static object SubObj (object o1, object o2);\n    parameters:\n    - id: o1\n      type: System.Object\n      description: Required. Any numeric expression.\n    - id: o2\n      type: System.Object\n      description: Required. Any numeric expression.\n    return:\n      type: System.Object\n      description: The difference between <code>o1</code> and <code>o2</code>.\n  overload: Microsoft.VisualBasic.CompilerServices.ObjectType.SubObj*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/ObjectType.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.XorObj(System.Object,System.Object)\n  commentId: M:Microsoft.VisualBasic.CompilerServices.ObjectType.XorObj(System.Object,System.Object)\n  id: XorObj(System.Object,System.Object)\n  parent: Microsoft.VisualBasic.CompilerServices.ObjectType\n  langs:\n  - csharp\n  name: XorObj(Object, Object)\n  nameWithType: ObjectType.XorObj(Object, Object)\n  fullName: ObjectType.XorObj(Object, Object)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: Performs an `Xor` comparison.\n  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.\n  syntax:\n    content: public static object XorObj (object obj1, object obj2);\n    parameters:\n    - id: obj1\n      type: System.Object\n      description: Required. Any `Boolean` or numeric expression.\n    - id: obj2\n      type: System.Object\n      description: Required. Any `Boolean` or numeric expression.\n    return:\n      type: System.Object\n      description: A `Boolean` or numeric value. For a `Boolean` comparison, the return value is the logical exclusion (exclusive logical disjunction) of two `Boolean` values. For bitwise (numeric) operations, the return value is a numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns. For more information, see [Xor Operator](~/docs/visual-basic/language-reference/operators/xor-operator.md).\n  overload: Microsoft.VisualBasic.CompilerServices.ObjectType.XorObj*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/ObjectType.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.#ctor\n  parent: Microsoft.VisualBasic.CompilerServices.ObjectType\n  isExternal: false\n  name: ObjectType()\n  nameWithType: ObjectType.ObjectType()\n  fullName: ObjectType.ObjectType()\n- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.AddObj(System.Object,System.Object)\n  parent: Microsoft.VisualBasic.CompilerServices.ObjectType\n  isExternal: false\n  name: AddObj(Object, Object)\n  nameWithType: ObjectType.AddObj(Object, Object)\n  fullName: ObjectType.AddObj(Object, Object)\n- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.BitAndObj(System.Object,System.Object)\n  parent: Microsoft.VisualBasic.CompilerServices.ObjectType\n  isExternal: false\n  name: BitAndObj(Object, Object)\n  nameWithType: ObjectType.BitAndObj(Object, Object)\n  fullName: ObjectType.BitAndObj(Object, Object)\n- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.BitOrObj(System.Object,System.Object)\n  parent: Microsoft.VisualBasic.CompilerServices.ObjectType\n  isExternal: false\n  name: BitOrObj(Object, Object)\n  nameWithType: ObjectType.BitOrObj(Object, Object)\n  fullName: ObjectType.BitOrObj(Object, Object)\n- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.BitXorObj(System.Object,System.Object)\n  parent: Microsoft.VisualBasic.CompilerServices.ObjectType\n  isExternal: false\n  name: BitXorObj(Object, Object)\n  nameWithType: ObjectType.BitXorObj(Object, Object)\n  fullName: ObjectType.BitXorObj(Object, Object)\n- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.DivObj(System.Object,System.Object)\n  parent: Microsoft.VisualBasic.CompilerServices.ObjectType\n  isExternal: false\n  name: DivObj(Object, Object)\n  nameWithType: ObjectType.DivObj(Object, Object)\n  fullName: ObjectType.DivObj(Object, Object)\n- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.GetObjectValuePrimitive(System.Object)\n  parent: Microsoft.VisualBasic.CompilerServices.ObjectType\n  isExternal: false\n  name: GetObjectValuePrimitive(Object)\n  nameWithType: ObjectType.GetObjectValuePrimitive(Object)\n  fullName: ObjectType.GetObjectValuePrimitive(Object)\n- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.IDivObj(System.Object,System.Object)\n  parent: Microsoft.VisualBasic.CompilerServices.ObjectType\n  isExternal: false\n  name: IDivObj(Object, Object)\n  nameWithType: ObjectType.IDivObj(Object, Object)\n  fullName: ObjectType.IDivObj(Object, Object)\n- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.LikeObj(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)\n  parent: Microsoft.VisualBasic.CompilerServices.ObjectType\n  isExternal: false\n  name: LikeObj(Object, Object, CompareMethod)\n  nameWithType: ObjectType.LikeObj(Object, Object, CompareMethod)\n  fullName: ObjectType.LikeObj(Object, Object, CompareMethod)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualBasic.CompareMethod\n  parent: Microsoft.VisualBasic\n  isExternal: false\n  name: CompareMethod\n  nameWithType: CompareMethod\n  fullName: Microsoft.VisualBasic.CompareMethod\n- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.ModObj(System.Object,System.Object)\n  parent: Microsoft.VisualBasic.CompilerServices.ObjectType\n  isExternal: false\n  name: ModObj(Object, Object)\n  nameWithType: ObjectType.ModObj(Object, Object)\n  fullName: ObjectType.ModObj(Object, Object)\n- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.MulObj(System.Object,System.Object)\n  parent: Microsoft.VisualBasic.CompilerServices.ObjectType\n  isExternal: false\n  name: MulObj(Object, Object)\n  nameWithType: ObjectType.MulObj(Object, Object)\n  fullName: ObjectType.MulObj(Object, Object)\n- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.NegObj(System.Object)\n  parent: Microsoft.VisualBasic.CompilerServices.ObjectType\n  isExternal: false\n  name: NegObj(Object)\n  nameWithType: ObjectType.NegObj(Object)\n  fullName: ObjectType.NegObj(Object)\n- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.NotObj(System.Object)\n  parent: Microsoft.VisualBasic.CompilerServices.ObjectType\n  isExternal: false\n  name: NotObj(Object)\n  nameWithType: ObjectType.NotObj(Object)\n  fullName: ObjectType.NotObj(Object)\n- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.ObjTst(System.Object,System.Object,System.Boolean)\n  parent: Microsoft.VisualBasic.CompilerServices.ObjectType\n  isExternal: false\n  name: ObjTst(Object, Object, Boolean)\n  nameWithType: ObjectType.ObjTst(Object, Object, Boolean)\n  fullName: ObjectType.ObjTst(Object, Object, Boolean)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.PlusObj(System.Object)\n  parent: Microsoft.VisualBasic.CompilerServices.ObjectType\n  isExternal: false\n  name: PlusObj(Object)\n  nameWithType: ObjectType.PlusObj(Object)\n  fullName: ObjectType.PlusObj(Object)\n- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.PowObj(System.Object,System.Object)\n  parent: Microsoft.VisualBasic.CompilerServices.ObjectType\n  isExternal: false\n  name: PowObj(Object, Object)\n  nameWithType: ObjectType.PowObj(Object, Object)\n  fullName: ObjectType.PowObj(Object, Object)\n- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftLeftObj(System.Object,System.Int32)\n  parent: Microsoft.VisualBasic.CompilerServices.ObjectType\n  isExternal: false\n  name: ShiftLeftObj(Object, Int32)\n  nameWithType: ObjectType.ShiftLeftObj(Object, Int32)\n  fullName: ObjectType.ShiftLeftObj(Object, Int32)\n- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftRightObj(System.Object,System.Int32)\n  parent: Microsoft.VisualBasic.CompilerServices.ObjectType\n  isExternal: false\n  name: ShiftRightObj(Object, Int32)\n  nameWithType: ObjectType.ShiftRightObj(Object, Int32)\n  fullName: ObjectType.ShiftRightObj(Object, Int32)\n- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.StrCatObj(System.Object,System.Object)\n  parent: Microsoft.VisualBasic.CompilerServices.ObjectType\n  isExternal: false\n  name: StrCatObj(Object, Object)\n  nameWithType: ObjectType.StrCatObj(Object, Object)\n  fullName: ObjectType.StrCatObj(Object, Object)\n- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.SubObj(System.Object,System.Object)\n  parent: Microsoft.VisualBasic.CompilerServices.ObjectType\n  isExternal: false\n  name: SubObj(Object, Object)\n  nameWithType: ObjectType.SubObj(Object, Object)\n  fullName: ObjectType.SubObj(Object, Object)\n- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.XorObj(System.Object,System.Object)\n  parent: Microsoft.VisualBasic.CompilerServices.ObjectType\n  isExternal: false\n  name: XorObj(Object, Object)\n  nameWithType: ObjectType.XorObj(Object, Object)\n  fullName: ObjectType.XorObj(Object, Object)\n- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.#ctor*\n  parent: Microsoft.VisualBasic.CompilerServices.ObjectType\n  isExternal: false\n  name: ObjectType\n  nameWithType: ObjectType.ObjectType\n  fullName: ObjectType.ObjectType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/ObjectType.xml\n- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.AddObj*\n  parent: Microsoft.VisualBasic.CompilerServices.ObjectType\n  isExternal: false\n  name: AddObj\n  nameWithType: ObjectType.AddObj\n  fullName: ObjectType.AddObj\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/ObjectType.xml\n- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.BitAndObj*\n  parent: Microsoft.VisualBasic.CompilerServices.ObjectType\n  isExternal: false\n  name: BitAndObj\n  nameWithType: ObjectType.BitAndObj\n  fullName: ObjectType.BitAndObj\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/ObjectType.xml\n- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.BitOrObj*\n  parent: Microsoft.VisualBasic.CompilerServices.ObjectType\n  isExternal: false\n  name: BitOrObj\n  nameWithType: ObjectType.BitOrObj\n  fullName: ObjectType.BitOrObj\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/ObjectType.xml\n- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.BitXorObj*\n  parent: Microsoft.VisualBasic.CompilerServices.ObjectType\n  isExternal: false\n  name: BitXorObj\n  nameWithType: ObjectType.BitXorObj\n  fullName: ObjectType.BitXorObj\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/ObjectType.xml\n- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.DivObj*\n  parent: Microsoft.VisualBasic.CompilerServices.ObjectType\n  isExternal: false\n  name: DivObj\n  nameWithType: ObjectType.DivObj\n  fullName: ObjectType.DivObj\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/ObjectType.xml\n- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.GetObjectValuePrimitive*\n  parent: Microsoft.VisualBasic.CompilerServices.ObjectType\n  isExternal: false\n  name: GetObjectValuePrimitive\n  nameWithType: ObjectType.GetObjectValuePrimitive\n  fullName: ObjectType.GetObjectValuePrimitive\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/ObjectType.xml\n- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.IDivObj*\n  parent: Microsoft.VisualBasic.CompilerServices.ObjectType\n  isExternal: false\n  name: IDivObj\n  nameWithType: ObjectType.IDivObj\n  fullName: ObjectType.IDivObj\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/ObjectType.xml\n- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.LikeObj*\n  parent: Microsoft.VisualBasic.CompilerServices.ObjectType\n  isExternal: false\n  name: LikeObj\n  nameWithType: ObjectType.LikeObj\n  fullName: ObjectType.LikeObj\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/ObjectType.xml\n- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.ModObj*\n  parent: Microsoft.VisualBasic.CompilerServices.ObjectType\n  isExternal: false\n  name: ModObj\n  nameWithType: ObjectType.ModObj\n  fullName: ObjectType.ModObj\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/ObjectType.xml\n- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.MulObj*\n  parent: Microsoft.VisualBasic.CompilerServices.ObjectType\n  isExternal: false\n  name: MulObj\n  nameWithType: ObjectType.MulObj\n  fullName: ObjectType.MulObj\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/ObjectType.xml\n- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.NegObj*\n  parent: Microsoft.VisualBasic.CompilerServices.ObjectType\n  isExternal: false\n  name: NegObj\n  nameWithType: ObjectType.NegObj\n  fullName: ObjectType.NegObj\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/ObjectType.xml\n- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.NotObj*\n  parent: Microsoft.VisualBasic.CompilerServices.ObjectType\n  isExternal: false\n  name: NotObj\n  nameWithType: ObjectType.NotObj\n  fullName: ObjectType.NotObj\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/ObjectType.xml\n- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.ObjTst*\n  parent: Microsoft.VisualBasic.CompilerServices.ObjectType\n  isExternal: false\n  name: ObjTst\n  nameWithType: ObjectType.ObjTst\n  fullName: ObjectType.ObjTst\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/ObjectType.xml\n- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.PlusObj*\n  parent: Microsoft.VisualBasic.CompilerServices.ObjectType\n  isExternal: false\n  name: PlusObj\n  nameWithType: ObjectType.PlusObj\n  fullName: ObjectType.PlusObj\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/ObjectType.xml\n- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.PowObj*\n  parent: Microsoft.VisualBasic.CompilerServices.ObjectType\n  isExternal: false\n  name: PowObj\n  nameWithType: ObjectType.PowObj\n  fullName: ObjectType.PowObj\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/ObjectType.xml\n- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftLeftObj*\n  parent: Microsoft.VisualBasic.CompilerServices.ObjectType\n  isExternal: false\n  name: ShiftLeftObj\n  nameWithType: ObjectType.ShiftLeftObj\n  fullName: ObjectType.ShiftLeftObj\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/ObjectType.xml\n- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftRightObj*\n  parent: Microsoft.VisualBasic.CompilerServices.ObjectType\n  isExternal: false\n  name: ShiftRightObj\n  nameWithType: ObjectType.ShiftRightObj\n  fullName: ObjectType.ShiftRightObj\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/ObjectType.xml\n- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.StrCatObj*\n  parent: Microsoft.VisualBasic.CompilerServices.ObjectType\n  isExternal: false\n  name: StrCatObj\n  nameWithType: ObjectType.StrCatObj\n  fullName: ObjectType.StrCatObj\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/ObjectType.xml\n- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.SubObj*\n  parent: Microsoft.VisualBasic.CompilerServices.ObjectType\n  isExternal: false\n  name: SubObj\n  nameWithType: ObjectType.SubObj\n  fullName: ObjectType.SubObj\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/ObjectType.xml\n- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.XorObj*\n  parent: Microsoft.VisualBasic.CompilerServices.ObjectType\n  isExternal: false\n  name: XorObj\n  nameWithType: ObjectType.XorObj\n  fullName: ObjectType.XorObj\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.CompilerServices/ObjectType.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}